; ModuleID = 'gomodule'
source_filename = "gomodule"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm "\09.section \22.go_export\22,\22e\22,@progbits"
module asm "\09.ascii \22v2;\5Cn\22"
module asm "\09.ascii \22package \22"
module asm "\09.ascii \22daemon\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22pkgpath \22"
module asm "\09.ascii \22command-line-arguments\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22import \22"
module asm "\09.ascii \22context\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22context\22"
module asm "\09.ascii \22 \5C\22\22"
module asm "\09.ascii \22context\22"
module asm "\09.ascii \22\5C\22;\5Cn\22"
module asm "\09.ascii \22import \22"
module asm "\09.ascii \22tls\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22crypto/tls\22"
module asm "\09.ascii \22 \5C\22\22"
module asm "\09.ascii \22crypto/tls\22"
module asm "\09.ascii \22\5C\22;\5Cn\22"
module asm "\09.ascii \22import \22"
module asm "\09.ascii \22gob\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22encoding/gob\22"
module asm "\09.ascii \22 \5C\22\22"
module asm "\09.ascii \22encoding/gob\22"
module asm "\09.ascii \22\5C\22;\5Cn\22"
module asm "\09.ascii \22import \22"
module asm "\09.ascii \22fmt\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22fmt\22"
module asm "\09.ascii \22 \5C\22\22"
module asm "\09.ascii \22fmt\22"
module asm "\09.ascii \22\5C\22;\5Cn\22"
module asm "\09.ascii \22import \22"
module asm "\09.ascii \22yamux\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22github.com/spolu/warp/vendor/github.com/hashicorp/yamux\22"
module asm "\09.ascii \22 \5C\22\22"
module asm "\09.ascii \22github.com/hashicorp/yamux\22"
module asm "\09.ascii \22\5C\22;\5Cn\22"
module asm "\09.ascii \22import \22"
module asm "\09.ascii \22warp\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22github.com/spolu/warp\22"
module asm "\09.ascii \22 \5C\22\22"
module asm "\09.ascii \22github.com/spolu/warp\22"
module asm "\09.ascii \22\5C\22;\5Cn\22"
module asm "\09.ascii \22import \22"
module asm "\09.ascii \22errors\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22github.com/spolu/warp/lib/errors\22"
module asm "\09.ascii \22 \5C\22\22"
module asm "\09.ascii \22github.com/spolu/warp/lib/errors\22"
module asm "\09.ascii \22\5C\22;\5Cn\22"
module asm "\09.ascii \22import \22"
module asm "\09.ascii \22logging\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22github.com/spolu/warp/lib/logging\22"
module asm "\09.ascii \22 \5C\22\22"
module asm "\09.ascii \22github.com/spolu/warp/lib/logging\22"
module asm "\09.ascii \22\5C\22;\5Cn\22"
module asm "\09.ascii \22import \22"
module asm "\09.ascii \22plex\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22github.com/spolu/warp/lib/plex\22"
module asm "\09.ascii \22 \5C\22\22"
module asm "\09.ascii \22github.com/spolu/warp/lib/plex\22"
module asm "\09.ascii \22\5C\22;\5Cn\22"
module asm "\09.ascii \22import \22"
module asm "\09.ascii \22net\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22net\22"
module asm "\09.ascii \22 \5C\22\22"
module asm "\09.ascii \22net\22"
module asm "\09.ascii \22\5C\22;\5Cn\22"
module asm "\09.ascii \22import \22"
module asm "\09.ascii \22sync\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22sync\22"
module asm "\09.ascii \22 \5C\22\22"
module asm "\09.ascii \22sync\22"
module asm "\09.ascii \22\5C\22;\5Cn\22"
module asm "\09.ascii \22import \22"
module asm "\09.ascii \22time\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22time\22"
module asm "\09.ascii \22 \5C\22\22"
module asm "\09.ascii \22time\22"
module asm "\09.ascii \22\5C\22;\5Cn\22"
module asm "\09.ascii \22init\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22bufio\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22bufio..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22bytes\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22bytes..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22context\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22context..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22crypto\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22crypto..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22cipher\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22crypto_cipher..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22des\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22crypto_des..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22dsa\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22crypto_dsa..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22ecdsa\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22crypto_ecdsa..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22elliptic\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22crypto_elliptic..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22md5\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22crypto_md5..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22rand\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22crypto_rand..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22rsa\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22crypto_rsa..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22sha1\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22crypto_sha1..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22sha256\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22crypto_sha256..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22sha512\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22crypto_sha512..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22tls\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22crypto_tls..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22x509\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22crypto_x509..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22pkix\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22crypto_x509_pkix..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22asn1\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22encoding_asn1..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22base64\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22encoding_base64..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22binary\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22encoding_binary..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22gob\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22encoding_gob..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22hex\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22encoding_hex..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22pem\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22encoding_pem..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22fmt\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22fmt..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22warp\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22github_com_spolu_warp..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22logging\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22github_com_spolu_warp_lib_logging..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22yamux\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22github_com_spolu_warp_vendor_github_com_hashicorp_yamux..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22poll\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22internal_poll..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22testlog\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22internal_testlog..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22io\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22io..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22ioutil\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22io_ioutil..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22log\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22log..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22big\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22math_big..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22rand\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22math_rand..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22net\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22net..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22os\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22os..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22filepath\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22path_filepath..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22reflect\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22reflect..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22regexp\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22regexp..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22syntax\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22regexp_syntax..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22runtime\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22runtime..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22sys\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22runtime_internal_sys..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22strconv\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22strconv..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22sync\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22sync..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22syscall\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22syscall..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22time\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22time..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22unicode\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22unicode..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22chacha20poly1305\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22vendor_golang_org_x_crypto_chacha20poly1305..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22cryptobyte\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22vendor_golang_org_x_crypto_cryptobyte..import\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22init_graph\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2241\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2244\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2247\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2241\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2244\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2247\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2241\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2243\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2244\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2245\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2246\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2247\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2241\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2243\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2244\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2241\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2244\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2241\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2243\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2244\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2247\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2241\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2243\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2244\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2245\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2246\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2247\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2214\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2241\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2243\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2244\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2245\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2246\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2247\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2241\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2243\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2244\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2245\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2246\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2247\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2241\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2243\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2244\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2241\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2243\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2244\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2245\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2246\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2247\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2241\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2243\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2244\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2245\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2246\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2247\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2212\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2212\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2212\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2241\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2212\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2212\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2243\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2212\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2244\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2213\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2213\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2213\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2241\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2213\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2213\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2243\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2213\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2244\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2214\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2214\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2214\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2241\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2214\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2214\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2243\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2214\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2244\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2212\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2213\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2214\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2231\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2237\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2241\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2243\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2244\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2245\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2246\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2247\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2248\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2249\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2212\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2213\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2214\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2231\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2237\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2241\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2243\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2244\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2245\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2246\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2247\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2249\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2241\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2243\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2244\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2245\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2246\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2247\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2241\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2243\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2244\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2245\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2246\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2247\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2241\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2243\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2244\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2247\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2241\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2243\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2244\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2247\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2241\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2243\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2244\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2245\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2246\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2247\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2241\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2243\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2244\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2245\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2246\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2247\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2241\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2243\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2244\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2247\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2241\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2243\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2244\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2245\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2246\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2247\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2240\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2241\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2243\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2244\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2247\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2241\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2243\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2244\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2245\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2246\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2247\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2231\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2237\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2241\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2243\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2244\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2245\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2246\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2247\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2241\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2244\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2245\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2246\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2241\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2244\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2231\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2231\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2231\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2231\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2231\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2231\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2237\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2231\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2231\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2241\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2231\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2231\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2243\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2231\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2244\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2231\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2245\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2231\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2246\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2231\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2247\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2241\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2243\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2244\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2245\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2246\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2247\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2241\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2243\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2244\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2245\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2246\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2247\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2241\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2244\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2241\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2243\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2244\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2245\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2246\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2247\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2241\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2244\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2245\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2246\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2237\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2237\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2237\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2237\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2237\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2237\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2241\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2237\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2237\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2243\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2237\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2244\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2237\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2245\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2237\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2246\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2237\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2247\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2241\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2243\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2244\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2247\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2240\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2241\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2243\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2244\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2247\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2240\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2240\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2240\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2240\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2241\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2240\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2240\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2243\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2240\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2244\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2240\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2247\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2241\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2243\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2241\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2243\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2244\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2241\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2244\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2245\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2241\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2245\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2245\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2244\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2246\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2241\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2246\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2246\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2244\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2246\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2245\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2248\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2248\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2248\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2248\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2248\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2241\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2248\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2248\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2243\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2248\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2244\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2248\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2247\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2249\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2249\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2249\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2249\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2249\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2249\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2249\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2249\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2249\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2249\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2249\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2249\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2241\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2249\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2249\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2243\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2249\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2244\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2249\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2245\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2249\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2246\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2249\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2247\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22type \22"
module asm "\09.ascii \22<type 1 \22"
module asm "\09.ascii \22\5C\22HostState\5C\22 \22"
module asm "\09.ascii \22<type 2 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22? \22"
module asm "\09.ascii \22<type 3 \22"
module asm "\09.ascii \22\5C\22UserState\5C\22 \22"
module asm "\09.ascii \22<type 4 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.command-line-arguments.token\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.username\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.mode\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 5 \22"
module asm "\09.ascii \22\5C\22github.com/spolu/warp.Mode\5C\22 \22"
module asm "\09.ascii \22<type -8>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.sessions\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 6 \22"
module asm "\09.ascii \22map [\22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 7 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 8 \22"
module asm "\09.ascii \22\5C\22Session\5C\22 \22"
module asm "\09.ascii \22<type 9 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.command-line-arguments.session\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 10 \22"
module asm "\09.ascii \22\5C\22github.com/spolu/warp.Session\5C\22 \22"
module asm "\09.ascii \22<type 11 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22Token\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22User\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Secret\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.warp\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.sessionType\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 12 \22"
module asm "\09.ascii \22\5C\22github.com/spolu/warp.SessionType\5C\22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.username\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.conn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 13 \22"
module asm "\09.ascii \22\5C\22net.Conn\5C\22 \22"
module asm "\09.ascii \22<type 14 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22Read\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 15 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Write\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 16 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Close\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22LocalAddr\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 17 \22"
module asm "\09.ascii \22\5C\22net.Addr\5C\22 \22"
module asm "\09.ascii \22<type 18 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22Network\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22String\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22RemoteAddr\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 17>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22SetDeadline\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19 \22"
module asm "\09.ascii \22\5C\22time.Time\5C\22 \22"
module asm "\09.ascii \22<type 20 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.time.wall\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -8>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.time.ext\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.time.loc\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 21 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 22 \22"
module asm "\09.ascii \22\5C\22time.Location\5C\22 \22"
module asm "\09.ascii \22<type 23 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.time.name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.time.zone\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 24 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 25 \22"
module asm "\09.ascii \22\5C\22.time.zone\5C\22 \22"
module asm "\09.ascii \22<type 26 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.time.name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.time.offset\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.time.isDST\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.time.tx\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 27 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 28 \22"
module asm "\09.ascii \22\5C\22.time.zoneTrans\5C\22 \22"
module asm "\09.ascii \22<type 29 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.time.when\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.time.index\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -5>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.time.isstd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.time.isutc\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.time.cacheStart\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.time.cacheEnd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.time.cacheZone\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 30 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 25>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22l\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 31 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.time.lookupFirstZone\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22l\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x22>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 31>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22String\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22l\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 31>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.time.lookupName\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22unix\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22offset\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22ok\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22l\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 31>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.time.firstZoneUsed\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22l\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 31>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.time.get\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 31>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22l\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x32>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 31>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.time.lookup\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22sec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22offset\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22isDST\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22start\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22end\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 32 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22UnmarshalJSON\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22data\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 33 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22GobEncode\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 34 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 32>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.time.setLoc\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22loc\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 21>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 32>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.time.addSec\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22d\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 32>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.time.unixSec\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22String\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Before\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22u\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Equal\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22u\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.time.abs\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -8>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 32>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.time.stripMono\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Minute\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 32>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22GobDecode\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22data\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 35 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Unix\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22After\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22u\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Day\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 32>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.time.sec\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 32>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22UnmarshalText\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22data\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 36 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Weekday\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 37 \22"
module asm "\09.ascii \22\5C\22time.Weekday\5C\22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22d\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 37>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22String\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22In\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22loc\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 21>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x32>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Zone\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22offset\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 32>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.time.setMono\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22m\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x32>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.time.locabs\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22offset\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22abs\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -8>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Round\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22d\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 38 \22"
module asm "\09.ascii \22\5C\22time.Duration\5C\22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22d\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 38>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Minutes\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -10>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22d\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 38>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Round\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22m\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 38>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 38>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22d\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 38>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22String\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22d\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 38>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Seconds\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -10>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22d\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 38>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Hours\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -10>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22d\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 38>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Truncate\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22m\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 38>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 38>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22d\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 38>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Nanoseconds\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Date\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22year\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22month\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 39 \22"
module asm "\09.ascii \22\5C\22time.Month\5C\22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22m\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 39>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22String\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22day\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22MarshalJSON\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 40 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22MarshalText\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 41 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22IsZero\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Format\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22layout\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Truncate\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22d\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 38>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Year\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22UTC\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.time.date\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22full\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22year\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22month\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 39>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22day\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22yday\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 32>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.time.nsec\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -3>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22AddDate\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22years\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22months\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22days\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Month\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 39>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Second\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 32>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.time.mono\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22AppendFormat\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 42 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22layout\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 43 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22ISOWeek\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22year\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22week\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Clock\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22hour\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22min\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22sec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Hour\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Nanosecond\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22MarshalBinary\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 44 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22UnixNano\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22YearDay\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 32>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22UnmarshalBinary\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22data\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 45 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Add\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22d\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 38>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Sub\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22u\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 38>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Local\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Location\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 21>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22SetReadDeadline\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22SetWriteDeadline\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.mux\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 46 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 47 \22"
module asm "\09.ascii \22\5C\22github.com/spolu/warp/vendor/github.com/hashicorp/yamux.Session\5C\22 \22"
module asm "\09.ascii \22<type 48 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.remoteGoAway\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -3>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.localGoAway\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -3>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.nextStreamID\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.config\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 49 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 50 \22"
module asm "\09.ascii \22\5C\22github.com/spolu/warp/vendor/github.com/hashicorp/yamux.Config\5C\22 \22"
module asm "\09.ascii \22<type 51 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22AcceptBacklog\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22EnableKeepAlive\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22KeepAliveInterval\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 38>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22ConnectionWriteTimeout\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 38>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22MaxStreamWindowSize\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22LogOutput\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 52 \22"
module asm "\09.ascii \22\5C\22io.Writer\5C\22 \22"
module asm "\09.ascii \22\5C\22\22"
module asm "\09.ascii \22io\22"
module asm "\09.ascii \22\5C\22 \22"
module asm "\09.ascii \22<type 53 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22Write\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22p\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 54 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.logger\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 55 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 56 \22"
module asm "\09.ascii \22\5C\22log.Logger\5C\22 \22"
module asm "\09.ascii \22\5C\22\22"
module asm "\09.ascii \22log\22"
module asm "\09.ascii \22\5C\22 \22"
module asm "\09.ascii \22<type 57 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.log.mu\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 58 \22"
module asm "\09.ascii \22\5C\22sync.Mutex\5C\22 \22"
module asm "\09.ascii \22<type 59 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.sync.state\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -3>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.sync.sema\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22m\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 60 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 58>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Unlock\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22m\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 60>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Lock\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.log.prefix\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.log.flag\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.log.out\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 52>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.log.buf\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 61 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22l\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 62 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 56>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Fatalf\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22format\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22...\22"
module asm "\09.ascii \22<type 63 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22l\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 62>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Fatal\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22...\22"
module asm "\09.ascii \22<type 64 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22l\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 62>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Panicln\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22...\22"
module asm "\09.ascii \22<type 65 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22l\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 62>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Println\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22...\22"
module asm "\09.ascii \22<type 66 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22l\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 62>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Fatalln\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22...\22"
module asm "\09.ascii \22<type 67 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22l\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 62>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Panicf\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22format\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22...\22"
module asm "\09.ascii \22<type 68 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22l\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 62>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22SetFlags\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22flag\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22l\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 62>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22SetPrefix\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22prefix\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22l\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 62>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22SetOutput\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22w\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 52>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22l\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 62>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Panic\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22...\22"
module asm "\09.ascii \22<type 69 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22l\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 62>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Flags\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22l\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 62>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Printf\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22format\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22...\22"
module asm "\09.ascii \22<type 70 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22l\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 62>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Prefix\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22l\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 62>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.log.formatHeader\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22buf\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 71 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 72 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22file\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22line\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22l\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 62>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Print\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22...\22"
module asm "\09.ascii \22<type 73 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22l\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 62>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Output\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22calldepth\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.conn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 74 \22"
module asm "\09.ascii \22\5C\22io.ReadWriteCloser\5C\22 \22"
module asm "\09.ascii \22<type 75 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22? \22"
module asm "\09.ascii \22<type 76 \22"
module asm "\09.ascii \22\5C\22io.Reader\5C\22 \22"
module asm "\09.ascii \22<type 77 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22Read\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22p\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 78 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22? \22"
module asm "\09.ascii \22<type 52>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22? \22"
module asm "\09.ascii \22<type 79 \22"
module asm "\09.ascii \22\5C\22io.Closer\5C\22 \22"
module asm "\09.ascii \22<type 80 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22Close\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.bufRead\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 81 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 82 \22"
module asm "\09.ascii \22\5C\22bufio.Reader\5C\22 \22"
module asm "\09.ascii \22\5C\22\22"
module asm "\09.ascii \22bufio\22"
module asm "\09.ascii \22\5C\22 \22"
module asm "\09.ascii \22<type 83 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.bufio.buf\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 84 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.bufio.rd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 76>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.bufio.r\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.bufio.w\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.bufio.err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.bufio.lastByte\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.bufio.lastRuneSize\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x10a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 85 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 82>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22ReadByte\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x10a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 85>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Read\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22p\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 86 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 85>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.bufio.fill\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 85>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.bufio.writeBuf\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22w\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 52>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x10a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 85>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Discard\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22discarded\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x10a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 85>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22ReadBytes\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22delim\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 87 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 85>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Peek\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 88 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x80a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 85>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22ReadRune\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22r\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -21>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22size\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 85>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Buffered\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x10a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 85>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22ReadString\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22delim\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x82a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 85>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22ReadLine\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22line\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 89 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22isPrefix\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x10a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 85>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22WriteTo\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22w\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 52>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 85>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22UnreadByte\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22r\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 85>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Size\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 85>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22ReadSlice\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22delim\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22line\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 90 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 85>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22UnreadRune\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x22>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 85>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.bufio.readErr\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 85>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.bufio.reset\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22buf\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 91 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22r\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 76>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 85>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Reset\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22r\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 76>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.pings\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 92 \22"
module asm "\09.ascii \22map [\22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 93 \22"
module asm "\09.ascii \22chan \22"
module asm "\09.ascii \22<type 94 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.pingID\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.pingLock\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 58>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.streams\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 95 \22"
module asm "\09.ascii \22map [\22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 96 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 97 \22"
module asm "\09.ascii \22\5C\22github.com/spolu/warp/vendor/github.com/hashicorp/yamux.Stream\5C\22 \22"
module asm "\09.ascii \22<type 98 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.recvWindow\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.sendWindow\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.id\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.session\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 99 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 47>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.state\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 100 \22"
module asm "\09.ascii \22\5C\22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.streamState\5C\22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.stateLock\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 58>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.recvBuf\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 102 \22"
module asm "\09.ascii \22\5C\22bytes.Buffer\5C\22 \22"
module asm "\09.ascii \22\5C\22\22"
module asm "\09.ascii \22bytes\22"
module asm "\09.ascii \22\5C\22 \22"
module asm "\09.ascii \22<type 103 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.bytes.buf\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 104 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.bytes.off\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.bytes.bootstrap\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 105 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \2264\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.bytes.lastRead\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 106 \22"
module asm "\09.ascii \22\5C\22.bytes.readOp\5C\22 \22"
module asm "\09.ascii \22<type -1>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 107 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 102>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22UnreadByte\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 107>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22ReadRune\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22r\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -21>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22size\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 107>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.bytes.empty\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 107>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Len\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 107>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22String\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x22>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 107>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Bytes\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 108 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 107>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22ReadFrom\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22r\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 76>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 107>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.bytes.tryGrowByReslice\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 107>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Cap\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 107>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Reset\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 107>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22ReadBytes\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22delim\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22line\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 109 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 107>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Grow\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 107>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Truncate\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x22>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 107>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Next\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 110 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 107>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Write\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22p\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 111 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 107>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22WriteTo\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22w\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 52>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 107>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22WriteString\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 107>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22WriteByte\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22c\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 107>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22ReadString\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22delim\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22line\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 107>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22WriteRune\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22r\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -21>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 107>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22ReadByte\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x22>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 107>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.bytes.readSlice\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22delim\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22line\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 112 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 107>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22UnreadRune\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 107>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.bytes.grow\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 107>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Read\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22p\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 113 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.recvLock\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 58>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.controlHdr\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 114 \22"
module asm "\09.ascii \22\5C\22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.header\5C\22 \22"
module asm "\09.ascii \22<type 115 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22h\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 114>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.encode\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22msgType\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -5>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22flags\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -6>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22streamID\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22length\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22h\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 114>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22String\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22h\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 114>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Length\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22h\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 114>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Version\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -5>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22h\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 114>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Flags\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -6>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22h\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 114>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22MsgType\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -5>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22h\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 114>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22StreamID\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.controlErr\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 116 \22"
module asm "\09.ascii \22chan \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.controlHdrLock\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 58>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.sendHdr\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 114>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.sendErr\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 117 \22"
module asm "\09.ascii \22chan \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.sendLock\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 58>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.recvNotifyCh\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 118 \22"
module asm "\09.ascii \22chan \22"
module asm "\09.ascii \22<type 119 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.sendNotifyCh\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 120 \22"
module asm "\09.ascii \22chan \22"
module asm "\09.ascii \22<type 121 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.readDeadline\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.writeDeadline\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 122 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 97>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.readData\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22hdr\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 114>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22flags\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -6>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22conn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 76>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 122>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Shrink\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 122>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.notifyWaiting\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 122>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22SetReadDeadline\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 122>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.processFlags\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22flags\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -6>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 122>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22StreamID\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 122>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22LocalAddr\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 17>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 122>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Close\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 122>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Read\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 123 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 122>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.sendFlags\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -6>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 122>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22SetDeadline\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 122>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.sendClose\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x22>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 122>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Session\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 99>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 122>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22RemoteAddr\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 17>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 122>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.forceClose\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 122>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Write\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 124 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 122>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.incrSendWindow\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22hdr\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 114>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22flags\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -6>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 122>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.sendWindowUpdate\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 122>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22SetWriteDeadline\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 122>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.write\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 125 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.inflight\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 126 \22"
module asm "\09.ascii \22map [\22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 127 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.streamLock\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 58>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.synCh\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 128 \22"
module asm "\09.ascii \22chan \22"
module asm "\09.ascii \22<type 129 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.acceptCh\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 130 \22"
module asm "\09.ascii \22chan \22"
module asm "\09.ascii \22<type 96>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.sendCh\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 131 \22"
module asm "\09.ascii \22chan \22"
module asm "\09.ascii \22<type 132 \22"
module asm "\09.ascii \22\5C\22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.sendReady\5C\22 \22"
module asm "\09.ascii \22<type 133 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22Hdr\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 134 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Body\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 76>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 135 \22"
module asm "\09.ascii \22chan \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.recvDoneCh\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 136 \22"
module asm "\09.ascii \22chan \22"
module asm "\09.ascii \22<type 137 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.shutdown\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.shutdownErr\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.shutdownCh\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 138 \22"
module asm "\09.ascii \22chan \22"
module asm "\09.ascii \22<type 139 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.shutdownLock\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 58>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 99>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.closeStream\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22id\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 99>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.incomingStream\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22id\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 99>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.handleGoAway\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22hdr\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 114>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 99>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Close\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x102>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 99>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22AcceptStream\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 96>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 99>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.recvLoop\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 99>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22OpenStream\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 96>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 99>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22NumStreams\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 99>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Open\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 13>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 140 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 47>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22LocalAddr\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 17>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 140>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Addr\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 17>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 99>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22IsClosed\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 140>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22RemoteAddr\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 17>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 99>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.sendNoWait\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22hdr\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 114>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x102>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 99>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Accept\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 13>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 99>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.keepalive\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 99>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.exitErr\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 99>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.recv\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 99>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22GoAway\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 99>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.establishStream\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22id\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 99>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.waitForSendErr\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22hdr\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 114>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22body\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 76>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22errCh\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 141 \22"
module asm "\09.ascii \22chan \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 99>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.waitForSend\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22hdr\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 114>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22body\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 76>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 99>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.goAway\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22reason\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 114>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 99>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Ping\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 38>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 99>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.send\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 99>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.handlePing\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22hdr\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 114>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 99>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.handleStreamMessage\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22hdr\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 114>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.stateC\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 13>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.stateW\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 142 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 143 \22"
module asm "\09.ascii \22\5C\22encoding/gob.Encoder\5C\22 \22"
module asm "\09.ascii \22<type 144 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.encoding/gob.mutex\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 58>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.encoding/gob.w\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 145 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 52>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.encoding/gob.sent\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 146 \22"
module asm "\09.ascii \22map [\22"
module asm "\09.ascii \22<type 147 \22"
module asm "\09.ascii \22\5C\22reflect.Type\5C\22 \22"
module asm "\09.ascii \22\5C\22\22"
module asm "\09.ascii \22reflect\22"
module asm "\09.ascii \22\5C\22 \22"
module asm "\09.ascii \22<type 148 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22Align\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22FieldAlign\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Method\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 149 \22"
module asm "\09.ascii \22\5C\22reflect.Method\5C\22 \22"
module asm "\09.ascii \22<type 150 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22Name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22PkgPath\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Type\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 147>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Func\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151 \22"
module asm "\09.ascii \22\5C\22reflect.Value\5C\22 \22"
module asm "\09.ascii \22<type 152 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.reflect.typ\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 153 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 154 \22"
module asm "\09.ascii \22\5C\22.reflect.rtype\5C\22 \22"
module asm "\09.ascii \22<type 155 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.reflect.size\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -13>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.reflect.ptrdata\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -13>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.reflect.hash\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.reflect.kind\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -5>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.reflect.align\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -1>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.reflect.fieldAlign\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -5>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.reflect._\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -5>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.reflect.hashfn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 156 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 157 \22"
module asm "\09.ascii \22\5C\22unsafe.Pointer\5C\22 \22"
module asm "\09.ascii \22\5C\22\22"
module asm "\09.ascii \22unsafe\22"
module asm "\09.ascii \22\5C\22 \22"
module asm "\09.ascii \22<type 158 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22any\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -13>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -13>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.reflect.equalfn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 159 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 157>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 157>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.reflect.gcdata\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 160 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.reflect.string\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 161 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22? \22"
module asm "\09.ascii \22<type 162 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 163 \22"
module asm "\09.ascii \22\5C\22.reflect.uncommonType\5C\22 \22"
module asm "\09.ascii \22<type 164 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.reflect.name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 161>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.reflect.pkgPath\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 161>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.reflect.methods\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 165 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 166 \22"
module asm "\09.ascii \22\5C\22.reflect.method\5C\22 \22"
module asm "\09.ascii \22<type 167 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.reflect.name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 161>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.reflect.pkgPath\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 161>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.reflect.mtyp\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 168 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 154>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.reflect.typ\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 168>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.reflect.tfn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 157>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 169 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 163>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.reflect.uncommon\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 169>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x32>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 169>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22PkgPath\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x32>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 169>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Name\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.reflect.ptrToThis\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 168>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 168>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22FieldByNameFunc\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22match\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 170 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 171 \22"
module asm "\09.ascii \22\5C\22reflect.StructField\5C\22 \22"
module asm "\09.ascii \22<type 172 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22Name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22PkgPath\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Type\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 147>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Tag\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 173 \22"
module asm "\09.ascii \22\5C\22reflect.StructTag\5C\22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22tag\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 173>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Get\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22key\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22tag\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 173>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Lookup\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22key\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22value\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22ok\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Offset\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -13>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Index\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 174 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Anonymous\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 168>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22In\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22i\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 147>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x4a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 168>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Field\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22i\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 171>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 168>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22NumField\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 168>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Elem\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 147>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 168>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22String\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 168>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.reflect.ptrTo\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 168>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 168>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22IsVariadic\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 168>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22FieldByIndex\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22index\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 175 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 171>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 168>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Size\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -13>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x42>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 168>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Name\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 168>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22MethodByName\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22m\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 149>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22ok\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 168>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.reflect.common\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 168>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 168>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Kind\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 176 \22"
module asm "\09.ascii \22\5C\22reflect.Kind\5C\22 \22"
module asm "\09.ascii \22<type -12>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22k\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 176>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22String\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 168>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Bits\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 168>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.reflect.exportedMethods\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 177 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 166>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 168>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22NumMethod\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 168>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Comparable\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 168>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Implements\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22u\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 147>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 168>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22FieldByName\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 171>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 168>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22AssignableTo\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22u\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 147>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 168>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Len\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x32>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 168>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.reflect.rawString\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 168>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Out\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22i\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 147>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 168>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22ConvertibleTo\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22u\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 147>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x42>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 168>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22PkgPath\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 168>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.reflect.pointers\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 168>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Method\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22i\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22m\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 149>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 168>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Align\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 168>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22NumOut\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 168>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22ChanDir\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 178 \22"
module asm "\09.ascii \22\5C\22reflect.ChanDir\5C\22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22d\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 178>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22String\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 168>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Key\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 147>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 168>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22FieldAlign\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 168>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22NumIn\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.reflect.ptr\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 157>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22? \22"
module asm "\09.ascii \22<type 179 \22"
module asm "\09.ascii \22\5C\22.reflect.flag\5C\22 \22"
module asm "\09.ascii \22<type -13>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 179>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.reflect.mustBeExported\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 179>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.reflect.mustBeAssignable\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 179>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.reflect.kind\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 176>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 179>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.reflect.ro\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 179>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 179>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.reflect.mustBe\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22expected\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 176>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22SetBytes\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 180 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22CanAddr\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x2a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22MapIndex\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22key\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22SetMapIndex\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22key\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22val\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22SetBool\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22SetFloat\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -10>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Set\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Send\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22OverflowInt\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Method\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22i\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22OverflowFloat\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -10>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Type\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 147>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22OverflowComplex\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -18>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22MapKeys\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 181 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Len\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22SetLen\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22MethodByName\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22FieldByIndex\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22index\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 182 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22String\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22NumField\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Field\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22i\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22SetPointer\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 157>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22OverflowUint\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -8>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22FieldByName\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22CallSlice\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22in\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 183 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 184 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Float\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -10>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22TrySend\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22SetCap\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Index\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22i\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Cap\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.reflect.setRunes\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 185 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -21>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22SetComplex\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -18>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x2a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.reflect.runes\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 186 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -21>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22InterfaceData\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 187 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -13>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22TryRecv\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22ok\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Uint\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -8>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Convert\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 147>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Bool\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Slice\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22i\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22j\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22SetInt\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Elem\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.reflect.recv\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22nb\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22val\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22ok\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.reflect.assignTo\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22context\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22dst\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 153>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22target\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 157>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Slice3\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22i\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22j\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22k\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22SetString\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22SetUint\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -8>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22CanInterface\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Recv\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22ok\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Close\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Call\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22in\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 188 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 189 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x2a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Bytes\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 190 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Addr\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Interface\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22i\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 191 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Kind\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 176>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Int\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.reflect.send\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22nb\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22selected\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.reflect.pointer\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 157>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22CanSet\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Pointer\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -13>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22FieldByNameFunc\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22match\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 192 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Complex\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -18>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22NumMethod\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22IsValid\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.reflect.call\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22op\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22in\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 193 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 194 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22UnsafeAddr\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -13>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22IsNil\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Index\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22MethodByName\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 149>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22NumMethod\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Name\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22PkgPath\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Size\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -13>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22String\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.reflect.rawString\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Kind\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 176>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Implements\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22u\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 147>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22AssignableTo\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22u\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 147>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22ConvertibleTo\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22u\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 147>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Comparable\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Bits\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22ChanDir\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 178>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22IsVariadic\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Elem\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 147>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Field\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22i\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 171>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22FieldByIndex\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22index\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 195 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 171>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22FieldByName\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 171>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22FieldByNameFunc\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22match\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 196 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 171>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22In\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22i\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 147>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Key\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 147>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Len\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22NumField\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22NumIn\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22NumOut\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Out\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22i\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 147>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.reflect.common\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 153>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.reflect.uncommon\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 162>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 197 \22"
module asm "\09.ascii \22\5C\22.encoding/gob.typeId\5C\22 \22"
module asm "\09.ascii \22<type -3>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 197>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.name\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 197>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.string\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 197>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.gobType\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 198 \22"
module asm "\09.ascii \22\5C\22.encoding/gob.gobType\5C\22 \22"
module asm "\09.ascii \22<type 199 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22.encoding/gob.id\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 197>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.encoding/gob.setId\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22id\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 197>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.encoding/gob.name\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.encoding/gob.string\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.encoding/gob.safeString\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22seen\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 200 \22"
module asm "\09.ascii \22map [\22"
module asm "\09.ascii \22<type 197>\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.encoding/gob.countState\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 201 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 202 \22"
module asm "\09.ascii \22\5C\22.encoding/gob.encoderState\5C\22 \22"
module asm "\09.ascii \22<type 203 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.encoding/gob.enc\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 204 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 143>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.encoding/gob.b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 205 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 206 \22"
module asm "\09.ascii \22\5C\22.encoding/gob.encBuffer\5C\22 \22"
module asm "\09.ascii \22<type 207 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.encoding/gob.data\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 208 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.encoding/gob.scratch\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 209 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \2264\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22e\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 210 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 206>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Reset\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22e\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x22>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 210>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Bytes\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 211 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22e\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 210>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22WriteByte\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22c\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22e\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 210>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Write\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22p\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 212 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22e\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 210>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Len\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22e\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 210>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22WriteString\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.encoding/gob.sendZero\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.encoding/gob.fieldnum\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.encoding/gob.buf\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 213 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.encoding/gob.next\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 214 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 202>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22state\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 215 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 202>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.update\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22instr\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 216 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 217 \22"
module asm "\09.ascii \22\5C\22.encoding/gob.encInstr\5C\22 \22"
module asm "\09.ascii \22<type 218 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.encoding/gob.op\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219 \22"
module asm "\09.ascii \22\5C\22.encoding/gob.encOp\5C\22 \22"
module asm "\09.ascii \22<type 220 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22i\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 221 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 217>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22state\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 215>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.encoding/gob.field\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.encoding/gob.index\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 222 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.encoding/gob.indir\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22state\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 215>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.encodeInt\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22i\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22state\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 215>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.encodeUint\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -8>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.encoding/gob.freeList\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 201>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.encoding/gob.byteBuf\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 206>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.encoding/gob.err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22enc\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 223 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 143>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22EncodeValue\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22value\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22enc\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 223>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.sendTypeId\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22state\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 201>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22ut\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 224 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 225 \22"
module asm "\09.ascii \22\5C\22.encoding/gob.userTypeInfo\5C\22 \22"
module asm "\09.ascii \22<type 226 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.encoding/gob.user\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 147>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.encoding/gob.base\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 147>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.encoding/gob.indir\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.encoding/gob.externalEnc\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.encoding/gob.externalDec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.encoding/gob.encIndir\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -1>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.encoding/gob.decIndir\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -1>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22enc\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 223>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.sendTypeDescriptor\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22w\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 52>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22state\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 201>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22ut\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 224>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22enc\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 223>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Encode\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22e\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 227 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22enc\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 223>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.sendActualType\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22w\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 52>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22state\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 201>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22ut\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 224>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22actual\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 147>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22sent\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22enc\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 223>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.pushWriter\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22w\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 52>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22enc\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 223>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.encodeSingle\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 205>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22engine\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 228 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 229 \22"
module asm "\09.ascii \22\5C\22.encoding/gob.encEngine\5C\22 \22"
module asm "\09.ascii \22<type 230 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.encoding/gob.instr\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 231 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 217>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22value\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22enc\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 223>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.freeEncoderState\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22e\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 201>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22enc\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 223>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.encodeStruct\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 205>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22engine\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 228>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22value\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22enc\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 223>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.newEncoderState\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 205>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 201>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22enc\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 223>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.encodeMap\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 205>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22mv\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22keyOp\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22elemOp\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22keyIndir\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22elemIndir\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22enc\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 223>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.popWriter\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22enc\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 223>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.encodeArray\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 205>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22value\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22op\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22elemIndir\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22length\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22helper\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 232 \22"
module asm "\09.ascii \22\5C\22.encoding/gob.encHelper\5C\22 \22"
module asm "\09.ascii \22<type 233 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22state\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 201>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22enc\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 223>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.encode\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 205>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22value\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22ut\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 224>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22enc\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x32>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 223>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.writer\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 52>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22enc\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 223>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.writeMessage\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22w\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 52>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 205>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22enc\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 223>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.encodeInterface\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 205>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22iv\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22enc\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 223>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.sendType\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22w\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 52>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22state\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 201>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22origt\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 147>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22sent\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22enc\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 223>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.setError\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22enc\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 223>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.encodeGobEncoder\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 205>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22ut\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 224>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.updateC\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 13>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.updateR\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 234 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 235 \22"
module asm "\09.ascii \22\5C\22encoding/gob.Decoder\5C\22 \22"
module asm "\09.ascii \22<type 236 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.encoding/gob.mutex\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 58>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.encoding/gob.r\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 76>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.encoding/gob.buf\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 237 \22"
module asm "\09.ascii \22\5C\22.encoding/gob.decBuffer\5C\22 \22"
module asm "\09.ascii \22<type 238 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.encoding/gob.data\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 239 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.encoding/gob.offset\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22d\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 240 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 237>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Reset\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22d\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 240>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Len\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22d\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 240>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Read\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22p\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 241 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22d\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 240>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22ReadByte\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22d\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x22>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 240>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Bytes\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 242 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22d\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 240>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Drop\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22d\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 240>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Size\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.encoding/gob.wireType\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 243 \22"
module asm "\09.ascii \22map [\22"
module asm "\09.ascii \22<type 197>\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 244 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 245 \22"
module asm "\09.ascii \22\5C\22.encoding/gob.wireType\5C\22 \22"
module asm "\09.ascii \22<type 246 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22ArrayT\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 247 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 248 \22"
module asm "\09.ascii \22\5C\22.encoding/gob.arrayType\5C\22 \22"
module asm "\09.ascii \22<type 249 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22? \22"
module asm "\09.ascii \22<type 250 \22"
module asm "\09.ascii \22\5C\22encoding/gob.CommonType\5C\22 \22"
module asm "\09.ascii \22<type 251 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22Name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Id\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 197>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x22>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 252 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 250>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.name\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 252>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.setId\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22id\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 197>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x22>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 252>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.string\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 252>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.id\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 197>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x22>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 252>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.safeString\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22seen\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 253 \22"
module asm "\09.ascii \22map [\22"
module asm "\09.ascii \22<type 197>\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Elem\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 197>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Len\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22a\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x2a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 254 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 248>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.string\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22a\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x2a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 254>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.safeString\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22seen\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 255 \22"
module asm "\09.ascii \22map [\22"
module asm "\09.ascii \22<type 197>\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22a\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 254>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.init\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22elem\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 198>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22len\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22SliceT\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 256 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 257 \22"
module asm "\09.ascii \22\5C\22.encoding/gob.sliceType\5C\22 \22"
module asm "\09.ascii \22<type 258 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22? \22"
module asm "\09.ascii \22<type 250>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Elem\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 197>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x22>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 259 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 257>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.string\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x22>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 259>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.safeString\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22seen\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 260 \22"
module asm "\09.ascii \22map [\22"
module asm "\09.ascii \22<type 197>\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 259>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.init\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22elem\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 198>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22StructT\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 261 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 262 \22"
module asm "\09.ascii \22\5C\22.encoding/gob.structType\5C\22 \22"
module asm "\09.ascii \22<type 263 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22? \22"
module asm "\09.ascii \22<type 250>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Field\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 264 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 265 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 266 \22"
module asm "\09.ascii \22\5C\22.encoding/gob.fieldType\5C\22 \22"
module asm "\09.ascii \22<type 267 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22Name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Id\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 197>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x2a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 268 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 262>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.string\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x2a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 268>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.safeString\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22seen\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 269 \22"
module asm "\09.ascii \22map [\22"
module asm "\09.ascii \22<type 197>\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22MapT\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 270 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 271 \22"
module asm "\09.ascii \22\5C\22.encoding/gob.mapType\5C\22 \22"
module asm "\09.ascii \22<type 272 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22? \22"
module asm "\09.ascii \22<type 250>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Key\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 197>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Elem\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 197>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22m\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x22>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 273 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 271>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.string\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22m\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x22>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 273>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.safeString\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22seen\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 274 \22"
module asm "\09.ascii \22map [\22"
module asm "\09.ascii \22<type 197>\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22m\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 273>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.init\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22key\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 198>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22elem\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 198>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22GobEncoderT\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 275 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 276 \22"
module asm "\09.ascii \22\5C\22.encoding/gob.gobEncoderType\5C\22 \22"
module asm "\09.ascii \22<type 277 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22? \22"
module asm "\09.ascii \22<type 250>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22g\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x22>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 278 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 276>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.string\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22g\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x22>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 278>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.safeString\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22seen\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 279 \22"
module asm "\09.ascii \22map [\22"
module asm "\09.ascii \22<type 197>\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22BinaryMarshalerT\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 275>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22TextMarshalerT\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 275>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22w\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x32>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 280 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 245>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.string\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.encoding/gob.decoderCache\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 281 \22"
module asm "\09.ascii \22map [\22"
module asm "\09.ascii \22<type 147>\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 282 \22"
module asm "\09.ascii \22map [\22"
module asm "\09.ascii \22<type 197>\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 283 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 284 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 285 \22"
module asm "\09.ascii \22\5C\22.encoding/gob.decEngine\5C\22 \22"
module asm "\09.ascii \22<type 286 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.encoding/gob.instr\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 287 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 288 \22"
module asm "\09.ascii \22\5C\22.encoding/gob.decInstr\5C\22 \22"
module asm "\09.ascii \22<type 289 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.encoding/gob.op\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 290 \22"
module asm "\09.ascii \22\5C\22.encoding/gob.decOp\5C\22 \22"
module asm "\09.ascii \22<type 291 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22i\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 292 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 288>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22state\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 293 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 294 \22"
module asm "\09.ascii \22\5C\22.encoding/gob.decoderState\5C\22 \22"
module asm "\09.ascii \22<type 295 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.encoding/gob.dec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 296 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 235>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.encoding/gob.b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 240>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.encoding/gob.fieldnum\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.encoding/gob.next\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 297 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 294>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22state\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 298 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 294>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.getLength\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22state\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 298>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.decodeInt\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22state\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 298>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.decodeUint\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -8>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.encoding/gob.field\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.encoding/gob.index\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 299 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.encoding/gob.ovfl\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.encoding/gob.numInstr\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.encoding/gob.ignorerCache\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 300 \22"
module asm "\09.ascii \22map [\22"
module asm "\09.ascii \22<type 197>\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 283>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.encoding/gob.freeList\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 293>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.encoding/gob.countBuf\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 301 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.encoding/gob.err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22dec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 302 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 235>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Decode\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22e\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 303 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22dec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 302>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.nextUint\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -8>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22dec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 302>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.readMessage\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22nbytes\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22dec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 302>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.recvMessage\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22dec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 302>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.decodeIgnoredValue\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22wireId\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 197>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22dec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 302>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.decodeValue\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22wireId\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 197>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22value\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22dec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 302>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.nextInt\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22dec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 302>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.getIgnoreEnginePtr\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22wireId\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 197>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22enginePtr\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 283>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22dec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 302>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.getDecEnginePtr\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22remoteId\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 197>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22ut\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 224>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22enginePtr\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 283>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22dec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 302>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.decodeTypeSequence\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22isInterface\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 197>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22dec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 302>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.compileDec\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22remoteId\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 197>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22ut\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 224>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22engine\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 284>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22dec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 302>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22DecodeValue\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22dec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 302>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.compileIgnoreSingle\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22remoteId\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 197>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22engine\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 284>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22dec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 302>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.compileSingle\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22remoteId\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 197>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22ut\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 224>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22engine\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 284>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22dec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x52>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 302>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.typeString\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22remoteId\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 197>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22dec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 302>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.decodeMap\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22mtyp\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 147>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22state\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 293>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22value\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22keyOp\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 290>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22elemOp\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 290>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22ovfl\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22dec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 302>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.recvType\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22id\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 197>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22dec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 302>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.ignoreSlice\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22state\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 293>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22elemOp\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 290>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22dec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 302>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.ignoreMap\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22state\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 293>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22keyOp\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 290>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22elemOp\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 290>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22dec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 302>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.decodeArray\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22state\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 293>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22value\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22elemOp\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 290>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22length\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22ovfl\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22helper\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 304 \22"
module asm "\09.ascii \22\5C\22.encoding/gob.decHelper\5C\22 \22"
module asm "\09.ascii \22<type 305 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22state\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 293>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22length\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22ovfl\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22dec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 302>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.ignoreStruct\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22engine\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 284>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22dec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 302>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.decodeGobDecoder\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22ut\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 224>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22state\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 293>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22value\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22dec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 302>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.ignoreArrayHelper\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22state\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 293>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22elemOp\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 290>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22length\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22dec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 302>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.decodeStruct\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22engine\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 284>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22value\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22dec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 302>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.newDecoderState\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22buf\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 240>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 293>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22dec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 302>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.freeDecoderState\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22d\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 293>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22dec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 302>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.decIgnoreOpFor\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22wireId\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 197>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22inProgress\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 306 \22"
module asm "\09.ascii \22map [\22"
module asm "\09.ascii \22<type 197>\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 307 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 290>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 307>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22dec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 302>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.ignoreArray\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22state\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 293>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22elemOp\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 290>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22length\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22dec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 302>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.gobDecodeOpFor\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22ut\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 224>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 307>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22dec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 302>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.decodeSlice\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22state\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 293>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22value\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22elemOp\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 290>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22ovfl\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22helper\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 304>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22dec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 302>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.decodeArrayHelper\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22state\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 293>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22value\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22elemOp\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 290>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22length\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22ovfl\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22helper\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 304>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22dec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 302>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.decodeInterface\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22ityp\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 147>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22state\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 293>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22value\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22dec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 302>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.ignoreSingle\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22engine\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 284>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22dec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 302>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.decodeSingle\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22engine\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 284>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22value\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22dec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 302>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.ignoreGobDecoder\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22state\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 293>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22dec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 302>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.compatibleType\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22fr\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 147>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22fw\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 197>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22inProgress\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 308 \22"
module asm "\09.ascii \22map [\22"
module asm "\09.ascii \22<type 147>\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 197>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22dec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 302>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.ignoreInterface\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22state\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 293>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22dec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 302>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.decOpFor\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22wireId\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 197>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22rt\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 147>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22inProgress\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 309 \22"
module asm "\09.ascii \22map [\22"
module asm "\09.ascii \22<type 147>\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 307>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 307>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.errorC\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 13>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.errorW\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 142>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.dataC\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 13>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.tornDown\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.ctx\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 310 \22"
module asm "\09.ascii \22\5C\22context.Context\5C\22 \22"
module asm "\09.ascii \22<type 311 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22Deadline\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22deadline\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22ok\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Done\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 312 \22"
module asm "\09.ascii \22chan \22"
module asm "\09.ascii \22<- \22"
module asm "\09.ascii \22<type 313 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Err\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Value\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22key\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 314 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 315 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.cancel\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 316 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.mutex\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 60>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22ss\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 317 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 8>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22ToString\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22ss\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 317>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22TearDown\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22ss\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 317>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22SendError\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22ctx\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 310>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22code\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22message\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22ss\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 317>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22SendInternalError\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22ctx\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 310>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22u\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x22>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 318 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 3>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22User\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22ctx\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 310>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 319 \22"
module asm "\09.ascii \22\5C\22github.com/spolu/warp.User\5C\22 \22"
module asm "\09.ascii \22<type 320 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22Token\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Username\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Mode\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 5>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Hosting\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.session\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 7>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22h\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x22>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 321 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 1>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22User\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22ctx\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 310>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 319>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22NewSession\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22ctx\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 310>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22cancel\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 322 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22conn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 13>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 7>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22NewSrv\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22ctx\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 310>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22address\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22certFile\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22keyFile\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 323 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 324 \22"
module asm "\09.ascii \22\5C\22Srv\5C\22 \22"
module asm "\09.ascii \22<type 325 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.command-line-arguments.address\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.certFile\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.keyFile\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.warps\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 326 \22"
module asm "\09.ascii \22map [\22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 327 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 328 \22"
module asm "\09.ascii \22\5C\22Warp\5C\22 \22"
module asm "\09.ascii \22<type 329 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.command-line-arguments.token\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.windowSize\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 330 \22"
module asm "\09.ascii \22\5C\22github.com/spolu/warp.Size\5C\22 \22"
module asm "\09.ascii \22<type 331 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22Rows\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Cols\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.host\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 332 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 1>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.clients\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 333 \22"
module asm "\09.ascii \22map [\22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 334 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 3>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.data\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 335 \22"
module asm "\09.ascii \22chan \22"
module asm "\09.ascii \22<type 336 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.mutex\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 60>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22w\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x2a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 337 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 328>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22State\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22ctx\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 310>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 338 \22"
module asm "\09.ascii \22\5C\22github.com/spolu/warp.State\5C\22 \22"
module asm "\09.ascii \22<type 339 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22Warp\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22WindowSize\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 330>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Users\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 340 \22"
module asm "\09.ascii \22map [\22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 319>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22w\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 337>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22CientSessions\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22ctx\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 310>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 341 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 7>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22w\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 337>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.command-line-arguments.updateClientSessions\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22ctx\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 310>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22w\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 337>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.command-line-arguments.updateHost\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22ctx\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 310>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22w\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 337>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.command-line-arguments.rcvShellClientData\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22ctx\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 310>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22ss\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 7>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22data\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 342 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22w\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 337>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.command-line-arguments.rcvHostData\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22ctx\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 310>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22ss\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 7>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22data\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 343 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22w\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 337>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.command-line-arguments.handleHost\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22ctx\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 310>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22ss\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 7>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22w\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 337>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.command-line-arguments.handleShellClient\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22ctx\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 310>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22ss\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 7>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.mutex\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 60>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 344 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 324>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Run\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22ctx\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 310>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 344>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.command-line-arguments.handle\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22ctx\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 310>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22conn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 13>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 344>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.command-line-arguments.handleHost\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22ctx\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 310>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22ss\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 7>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 344>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.command-line-arguments.handleShellClient\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22ctx\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 310>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22ss\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 7>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22type \22"
module asm "\09.ascii \22<type 8>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22type \22"
module asm "\09.ascii \22<type 324>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22type \22"
module asm "\09.ascii \22<type 3>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22type \22"
module asm "\09.ascii \22<type 328>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22checksum 29E5AAE0BDAFAA372BB1677598B1B518ABDB0706;\5Cn\22"
module asm "\09.text"

%StructType.0 = type { %_type.0, %IPST.47 }
%_type.0 = type { i64, i64, i32, i8, i8, i8, %__go_descriptor.2*, %__go_descriptor.3*, i8*, { i8*, i64 }*, %uncommonType.0*, %_type.0* }
%__go_descriptor.2 = type { i64 (i8*, i8*, i64)* }
%__go_descriptor.3 = type { i8 (i8*, i8*, i8*)* }
%uncommonType.0 = type { { i8*, i64 }*, { i8*, i64 }*, %IPST.45 }
%IPST.45 = type { %method.0*, i64, i64 }
%method.0 = type { { i8*, i64 }*, { i8*, i64 }*, %_type.0*, %_type.0*, i8* }
%IPST.47 = type { %structField.0*, i64, i64 }
%structField.0 = type { { i8*, i64 }*, { i8*, i64 }*, %_type.0*, { i8*, i64 }*, i64 }
%StructField.0 = type { { i8*, i64 }, { i8*, i64 }, %Type.0, { i8*, i64 }, i64, %IPST.28, i8 }
%Type.0 = type { { %_type.0*, i64 (i8*, i8*)*, i8 (i8*, i8*, i64, i64)*, i64 (i8*, i8*)*, i64 (i8*, i8*)*, i8 (i8*, i8*)*, i8 (i8*, i8*, i64, i64)*, { i64, i64 } (i8*, i8*)*, void (%StructField.0*, i8*, i8*, i64)*, i64 (i8*, i8*)*, void (%StructField.0*, i8*, i8*, %IPST.28*)*, void ({ %StructField.0, i8 }*, i8*, i8*, i64, i64)*, void ({ %StructField.0, i8 }*, i8*, i8*, %__go_descriptor.36*)*, i8 (i8*, i8*, i64, i64)*, { i64, i64 } (i8*, i8*, i64)*, i8 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, i64 (i8*, i8*)*, i64 (i8*, i8*)*, void (%Method.0*, i8*, i8*, i64)*, void ({ %Method.0, i8 }*, i8*, i8*, i64, i64)*, { i64, i64 } (i8*, i8*)*, i64 (i8*, i8*)*, i64 (i8*, i8*)*, i64 (i8*, i8*)*, i64 (i8*, i8*)*, { i64, i64 } (i8*, i8*, i64)*, { i64, i64 } (i8*, i8*)*, i64 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, %.reflect.rtype.0* (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, %.reflect.uncommonType.0* (i8*, i8*)* }*, i8* }
%__go_descriptor.36 = type { i8 (i8*, i64, i64)* }
%Method.0 = type { { i8*, i64 }, { i8*, i64 }, %Type.0, %Value.0, i64 }
%Value.0 = type { %.reflect.rtype.0*, i8*, i64 }
%.reflect.uncommonType.0 = type { { i8*, i64 }*, { i8*, i64 }*, %IPST.34 }
%IPST.34 = type { %.reflect.method.0*, i64, i64 }
%.reflect.method.0 = type { { i8*, i64 }*, { i8*, i64 }*, %.reflect.rtype.0*, %.reflect.rtype.0*, i8* }
%IPST.28 = type { i64*, i64, i64 }
%.reflect.rtype.0 = type { i64, i64, i32, i8, i8, i8, i8, %__go_descriptor.19*, %__go_descriptor.20*, i8*, { i8*, i64 }*, %.reflect.uncommonType.0*, %.reflect.rtype.0* }
%__go_descriptor.19 = type { i64 (i8*, i8*, i64)* }
%__go_descriptor.20 = type { i8 (i8*, i8*, i8*)* }
%PtrType.0 = type { %_type.0, %_type.0* }
%.regexp.inputBytes.0 = type { { i8*, i64, i64 } }
%Regexp.0 = type { %.regexp.regexpRO.0, %Mutex.0, %IPST.41 }
%.regexp.regexpRO.0 = type { { i8*, i64 }, %Prog.0*, %.regexp.onePassProg.0*, { i8*, i64 }, { i8*, i64, i64 }, i8, i32, i32, i8, i64, %IPST.11, i8 }
%Prog.0 = type { %IPST.42, i64, i64 }
%IPST.42 = type { %Inst.0*, i64, i64 }
%Inst.0 = type { i8, i32, i32, %IPST.35 }
%IPST.35 = type { i32*, i64, i64 }
%.regexp.onePassProg.0 = type { %IPST.37, i64, i64 }
%IPST.37 = type { %.regexp.onePassInst.0*, i64, i64 }
%.regexp.onePassInst.0 = type { %Inst.0, %IPST.36 }
%IPST.36 = type { i32*, i64, i64 }
%IPST.11 = type { { i8*, i64 }*, i64, i64 }
%Mutex.0 = type { i32, i32 }
%IPST.41 = type { %.regexp.machine.0**, i64, i64 }
%.regexp.machine.0 = type { %Regexp.0*, %Prog.0*, %.regexp.onePassProg.0*, i64, %.regexp.bitState.0*, %.regexp.queue.0, %.regexp.queue.0, %IPST.40, i8, %IPST.28, %.regexp.inputBytes.0, %.regexp.inputString.0, %.regexp.inputReader.0 }
%.regexp.bitState.0 = type { %Prog.0*, i64, %IPST.28, %IPST.38, %IPST.36 }
%IPST.38 = type { %.regexp.job.0*, i64, i64 }
%.regexp.job.0 = type { i32, i8, i64 }
%.regexp.queue.0 = type { %IPST.36, %IPST.39 }
%IPST.39 = type { %.regexp.entry.0*, i64, i64 }
%.regexp.entry.0 = type { i32, %.regexp.thread.0* }
%.regexp.thread.0 = type { %Inst.0*, %IPST.28 }
%IPST.40 = type { %.regexp.thread.0**, i64, i64 }
%.regexp.inputString.0 = type { { i8*, i64 } }
%.regexp.inputReader.0 = type { %RuneReader.0, i8, i64 }
%RuneReader.0 = type { { %_type.0*, void ({ i32, i64, %error.0 }*, i8*, i8*)* }*, i8* }
%error.0 = type { { %_type.0*, { i64, i64 } (i8*, i8*)* }*, i8* }
%functionDescriptor.0 = type { i64 }
%FuncType.0 = type { %_type.0, i8, %IPST.46, %IPST.46 }
%IPST.46 = type { %_type.0**, i64, i64 }
%InterfaceType.0 = type { %_type.0, %IPST.48 }
%IPST.48 = type { %imethod.0*, i64, i64 }
%imethod.0 = type { { i8*, i64 }*, { i8*, i64 }*, %_type.0* }
%MapType.0 = type { %_type.0, %_type.0*, %_type.0*, %_type.0*, %_type.0*, i8, i8, i8, i8, i16, i8, i8 }
%SliceType.0 = type { %_type.0, %_type.0* }
%ArrayType.0 = type { %_type.0, %_type.0*, %_type.0*, i64 }
%ChanType.0 = type { %_type.0, %_type.0*, i64 }
%User.0 = type { { i8*, i64 }, { i8*, i64 }, i64, i8 }
%Session.0 = type { %Session.1, { i8*, i64 }, { i8*, i64 }, { i8*, i64 }, %Conn.0, %Session.2*, %Conn.0, %Encoder.0*, %Conn.0, %Decoder.0*, %Conn.0, %Encoder.0*, %Conn.0, i8, %Context.0, %__go_descriptor.10*, %Mutex.0* }
%Session.1 = type { { i8*, i64 }, { i8*, i64 }, { i8*, i64 } }
%Session.2 = type { i32, i32, i32, %Config.1*, %Logger.0*, %ReadWriteCloser.0, %Reader.1*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, i32, %Mutex.0, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, %Mutex.0, {}*, {}*, {}*, {}*, i8, %error.0, {}*, %Mutex.0 }
%Config.1 = type { i64, i8, i64, i64, i32, %Writer.0 }
%Writer.0 = type { { %_type.0*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }*, i8* }
%Logger.0 = type { %Mutex.0, { i8*, i64 }, i64, %Writer.0, { i8*, i64, i64 } }
%ReadWriteCloser.0 = type { { %_type.0*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }*, i8* }
%Reader.1 = type { { i8*, i64, i64 }, %Reader.0, i64, i64, %error.0, i64, i64 }
%Reader.0 = type { { %_type.0*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }*, i8* }
%Decoder.0 = type { %Mutex.0, %Reader.0, %".encoding/gob.decBuffer.0", { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, %".encoding/gob.decoderState.0"*, { i8*, i64, i64 }, %error.0 }
%".encoding/gob.decBuffer.0" = type { { i8*, i64, i64 }, i64 }
%".encoding/gob.decoderState.0" = type { %Decoder.0*, %".encoding/gob.decBuffer.0"*, i64, %".encoding/gob.decoderState.0"* }
%Encoder.0 = type { %Mutex.0, %IPST.30, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, %".encoding/gob.encoderState.0"*, %".encoding/gob.encoderState.0"*, %".encoding/gob.encBuffer.0", %error.0 }
%IPST.30 = type { %Writer.0*, i64, i64 }
%".encoding/gob.encoderState.0" = type { %Encoder.0*, %".encoding/gob.encBuffer.0"*, i8, i64, [9 x i8], %".encoding/gob.encoderState.0"* }
%".encoding/gob.encBuffer.0" = type { { i8*, i64, i64 }, [64 x i8] }
%Conn.0 = type { { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }*, i8* }
%Time.0 = type { i64, i64, %Location.0* }
%Location.0 = type { { i8*, i64 }, %IPST.43, %IPST.44, i64, i64, %.time.zone.0* }
%IPST.43 = type { %.time.zone.0*, i64, i64 }
%IPST.44 = type { %.time.zoneTrans.0*, i64, i64 }
%.time.zoneTrans.0 = type { i64, i8, i8, i8 }
%.time.zone.0 = type { { i8*, i64 }, i64, i8 }
%Context.0 = type { { %_type.0*, void ({ %Time.0, i8 }*, i8*, i8*)*, {}* (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, i64, i64)* }*, i8* }
%__go_descriptor.10 = type { void (i8*)* }
%IPST.3 = type { %IPST.9*, i64, i64 }
%IPST.9 = type { %_type.0*, i8* }
%Error.0 = type { { i8*, i64 }, { i8*, i64 } }
%__go_descriptor.50 = type { void (i8*, i8*)* }
%Srv.0 = type { { i8*, i64 }, { i8*, i64 }, { i8*, i64 }, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, %Mutex.0* }
%Certificate.0 = type { %IPST.8, %IPST.9, { i8*, i64, i64 }, %IPST.8, %Certificate.1* }
%IPST.8 = type { { i8*, i64, i64 }*, i64, i64 }
%Certificate.1 = type { { i8*, i64, i64 }, { i8*, i64, i64 }, { i8*, i64, i64 }, { i8*, i64, i64 }, { i8*, i64, i64 }, { i8*, i64, i64 }, i64, i64, %IPST.9, i64, %Int.0*, %Name.0, %Name.0, %Time.0, %Time.0, i64, %IPST.20, %IPST.20, %IPST.21, %IPST.22, %IPST.21, i8, i8, i64, i8, { i8*, i64, i64 }, { i8*, i64, i64 }, %IPST.11, %IPST.11, %IPST.11, %IPST.11, %IPST.23, %IPST.24, i8, %IPST.11, %IPST.11, %IPST.25, %IPST.25, %IPST.11, %IPST.11, %IPST.11, %IPST.11, %IPST.11, %IPST.21 }
%Int.0 = type { i8, %".math/big.nat.0" }
%".math/big.nat.0" = type { i64*, i64, i64 }
%Name.0 = type { %IPST.11, %IPST.11, %IPST.11, %IPST.11, %IPST.11, %IPST.11, %IPST.11, { i8*, i64 }, { i8*, i64 }, %IPST.19, %IPST.19 }
%IPST.19 = type { %AttributeTypeAndValue.0*, i64, i64 }
%AttributeTypeAndValue.0 = type { %ObjectIdentifier.0, %IPST.9 }
%ObjectIdentifier.0 = type { i64*, i64, i64 }
%IPST.20 = type { %Extension.0*, i64, i64 }
%Extension.0 = type { %ObjectIdentifier.0, i8, { i8*, i64, i64 } }
%IPST.22 = type { i64*, i64, i64 }
%IPST.23 = type { %IP.0*, i64, i64 }
%IP.0 = type { i8*, i64, i64 }
%IPST.24 = type { %URL.0**, i64, i64 }
%URL.0 = type { { i8*, i64 }, { i8*, i64 }, %Userinfo.0*, { i8*, i64 }, { i8*, i64 }, { i8*, i64 }, i8, { i8*, i64 }, { i8*, i64 } }
%Userinfo.0 = type { { i8*, i64 }, { i8*, i64 }, i8 }
%IPST.25 = type { %IPNet.0**, i64, i64 }
%IPNet.0 = type { %IP.0, %IPMask.0 }
%IPMask.0 = type { i8*, i64, i64 }
%IPST.21 = type { %ObjectIdentifier.0*, i64, i64 }
%Config.0 = type { %Reader.0, %__go_descriptor.11*, %IPST.10, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, %__go_descriptor.12*, %__go_descriptor.13*, %__go_descriptor.14*, %__go_descriptor.15*, %CertPool.0*, %IPST.11, { i8*, i64 }, i64, %CertPool.0*, i8, %IPST.12, i8, i8, [32 x i8], %ClientSessionCache.0, i16, i16, %IPST.13, i8, i64, %Writer.0, %Once.0, %RWMutex.0, %IPST.14 }
%__go_descriptor.11 = type { void (%Time.0*, i8*)* }
%IPST.10 = type { %Certificate.0*, i64, i64 }
%__go_descriptor.12 = type { void ({ %Certificate.0*, %error.0 }*, i8*, %ClientHelloInfo.0*)* }
%ClientHelloInfo.0 = type { %IPST.12, { i8*, i64 }, %IPST.13, { i8*, i64, i64 }, %IPST.16, %IPST.11, %IPST.12, %Conn.0 }
%IPST.16 = type { i16*, i64, i64 }
%__go_descriptor.13 = type { void ({ %Certificate.0*, %error.0 }*, i8*, %CertificateRequestInfo.0*)* }
%CertificateRequestInfo.0 = type { %IPST.8, %IPST.16 }
%__go_descriptor.14 = type { void ({ %Config.0*, %error.0 }*, i8*, %ClientHelloInfo.0*)* }
%__go_descriptor.15 = type { { i64, i64 } (i8*, %IPST.8*, %IPST.18*)* }
%IPST.18 = type { %IPST.17*, i64, i64 }
%IPST.17 = type { %Certificate.1**, i64, i64 }
%CertPool.0 = type { { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, %IPST.17 }
%IPST.12 = type { i16*, i64, i64 }
%ClientSessionCache.0 = type { { %_type.0*, { i64, i8 } (i8*, i8*, i64, i64)*, void (i8*, i8*, i64, i64, %ClientSessionState.0*)* }*, i8* }
%ClientSessionState.0 = type { { i8*, i64, i64 }, i16, i16, { i8*, i64, i64 }, %IPST.17, %IPST.18 }
%IPST.13 = type { i16*, i64, i64 }
%Once.0 = type { %Mutex.0, i32 }
%RWMutex.0 = type { %Mutex.0, i32, i32, i32, i32 }
%IPST.14 = type { %".crypto/tls.ticketKey.0"*, i64, i64 }
%".crypto/tls.ticketKey.0" = type { [16 x i8], [16 x i8], [16 x i8] }
%Listener.0 = type { { %_type.0*, void ({ %Conn.0, %error.0 }*, i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)* }*, i8* }
%__go_descriptor.70 = type { void (i8*)* }
%Size.0 = type { i64, i64 }
%Warp.0 = type { { i8*, i64 }, %Size.0, %HostState.0*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, {}*, %Mutex.0* }
%HostState.0 = type { %UserState.0, %Session.0* }
%UserState.0 = type { { i8*, i64 }, { i8*, i64 }, i64, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* }
%IPST.4 = type { %Session.0**, i64, i64 }
%IPST.5 = type { { i8*, i64 }*, %UserState.0**, i8*, { i64, i8, i8, i16, i32, %IPST.0*, %IPST.0*, i64, i8* }*, %IPST.0*, %IPST.0*, i8*, i8*, i64, i8, i8, i8, i8, i64, i64 }
%IPST.0 = type { [8 x i8], [8 x { i8*, i64 }], [8 x %UserState.0*], i8* }
%IPST.6 = type { { i8*, i64 }*, %Session.0**, i8*, { i64, i8, i8, i16, i32, %IPST.1*, %IPST.1*, i64, i8* }*, %IPST.1*, %IPST.1*, i8*, i8*, i64, i8, i8, i8, i8, i64, i64 }
%IPST.1 = type { [8 x i8], [8 x { i8*, i64 }], [8 x %Session.0*], i8* }
%State.0 = type { { i8*, i64 }, %Size.0, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* }
%__go_descriptor.1 = type { { i64, i64 } (i8*)* }
%IPST.7 = type { { i8*, i64 }*, i64*, i8*, { i64, i8, i8, i16, i32, %IPST.2*, %IPST.2*, i64, i8* }*, %IPST.2*, %IPST.2*, i8*, i8*, i64, i8, i8, i8, i8, i64, i64 }
%IPST.2 = type { [8 x i8], [8 x { i8*, i64 }], [8 x i64], i8* }
%__go_descriptor.71 = type { void (i8*, { i8*, i64, i64 }*)* }

$imt..interface.4Align.0func.8.9.8int.9.2AssignableTo.0func.8reflect.Type.9.8bool.9.2Bits.0func.8.9.8int.9.2ChanDir.0func.8.9.8reflect.ChanDir.9.2Comparable.0func.8.9.8bool.9.2ConvertibleTo.0func.8reflect.Type.9.8bool.9.2Elem.0func.8.9.8reflect.Type.9.2Field.0func.8int.9.8reflect.StructField.9.2FieldAlign.0func.8.9.8int.9.2FieldByIndex.0func.8.6.7int.9.8reflect.StructField.9.2FieldByName.0func.8string.9.8reflect.StructField.3bool.9.2FieldByNameFunc.0func.8func.8string.9.8bool.9.9.8reflect.StructField.3bool.9.2Implements.0func.8reflect.Type.9.8bool.9.2In.0func.8int.9.8reflect.Type.9.2IsVariadic.0func.8.9.8bool.9.2Key.0func.8.9.8reflect.Type.9.2Kind.0func.8.9.8reflect.Kind.9.2Len.0func.8.9.8int.9.2Method.0func.8int.9.8reflect.Method.9.2MethodByName.0func.8string.9.8reflect.Method.3bool.9.2Name.0func.8.9.8string.9.2NumField.0func.8.9.8int.9.2NumIn.0func.8.9.8int.9.2NumMethod.0func.8.9.8int.9.2NumOut.0func.8.9.8int.9.2Out.0func.8int.9.8reflect.Type.9.2PkgPath.0func.8.9.8string.9.2Size.0func.8.9.8uintptr.9.2String.0func.8.9.8string.9.2.reflect.common.0func.8.9.8.1reflect.rtype.9.2.reflect.rawString.0func.8.9.8string.9.2.reflect.uncommon.0func.8.9.8.1reflect.uncommonType.9.5..reflect.rtype = comdat any

$pimt..interface.4Align.0func.8.9.8int.9.2AssignableTo.0func.8reflect.Type.9.8bool.9.2Bits.0func.8.9.8int.9.2ChanDir.0func.8.9.8reflect.ChanDir.9.2Comparable.0func.8.9.8bool.9.2ConvertibleTo.0func.8reflect.Type.9.8bool.9.2Elem.0func.8.9.8reflect.Type.9.2Field.0func.8int.9.8reflect.StructField.9.2FieldAlign.0func.8.9.8int.9.2FieldByIndex.0func.8.6.7int.9.8reflect.StructField.9.2FieldByName.0func.8string.9.8reflect.StructField.3bool.9.2FieldByNameFunc.0func.8func.8string.9.8bool.9.9.8reflect.StructField.3bool.9.2Implements.0func.8reflect.Type.9.8bool.9.2In.0func.8int.9.8reflect.Type.9.2IsVariadic.0func.8.9.8bool.9.2Key.0func.8.9.8reflect.Type.9.2Kind.0func.8.9.8reflect.Kind.9.2Len.0func.8.9.8int.9.2Method.0func.8int.9.8reflect.Method.9.2MethodByName.0func.8string.9.8reflect.Method.3bool.9.2Name.0func.8.9.8string.9.2NumField.0func.8.9.8int.9.2NumIn.0func.8.9.8int.9.2NumMethod.0func.8.9.8int.9.2NumOut.0func.8.9.8int.9.2Out.0func.8int.9.8reflect.Type.9.2PkgPath.0func.8.9.8string.9.2Size.0func.8.9.8uintptr.9.2String.0func.8.9.8string.9.2.reflect.common.0func.8.9.8.1reflect.rtype.9.2.reflect.rawString.0func.8.9.8string.9.2.reflect.uncommon.0func.8.9.8.1reflect.uncommonType.9.5..reflect.rtype = comdat any

$imt..interface.4.regexp.canCheckPrefix.0func.8.9.8bool.9.2.regexp.context.0func.8int.9.8regexp_syntax.EmptyOp.9.2.regexp.hasPrefix.0func.8.1regexp.Regexp.9.8bool.9.2.regexp.index.0func.8.1regexp.Regexp.3int.9.8int.9.2.regexp.step.0func.8int.9.8int32.3int.9.5..regexp.inputBytes = comdat any

$pimt..interface.4.regexp.canCheckPrefix.0func.8.9.8bool.9.2.regexp.context.0func.8int.9.8regexp_syntax.EmptyOp.9.2.regexp.hasPrefix.0func.8.1regexp.Regexp.9.8bool.9.2.regexp.index.0func.8.1regexp.Regexp.3int.9.8int.9.2.regexp.step.0func.8int.9.8int32.3int.9.5..regexp.inputBytes = comdat any

$imt..interface.4.regexp.canCheckPrefix.0func.8.9.8bool.9.2.regexp.context.0func.8int.9.8regexp_syntax.EmptyOp.9.2.regexp.hasPrefix.0func.8.1regexp.Regexp.9.8bool.9.2.regexp.index.0func.8.1regexp.Regexp.3int.9.8int.9.2.regexp.step.0func.8int.9.8int32.3int.9.5..regexp.inputString = comdat any

$pimt..interface.4.regexp.canCheckPrefix.0func.8.9.8bool.9.2.regexp.context.0func.8int.9.8regexp_syntax.EmptyOp.9.2.regexp.hasPrefix.0func.8.1regexp.Regexp.9.8bool.9.2.regexp.index.0func.8.1regexp.Regexp.3int.9.8int.9.2.regexp.step.0func.8int.9.8int32.3int.9.5..regexp.inputString = comdat any

$imt..interface.4.regexp.canCheckPrefix.0func.8.9.8bool.9.2.regexp.context.0func.8int.9.8regexp_syntax.EmptyOp.9.2.regexp.hasPrefix.0func.8.1regexp.Regexp.9.8bool.9.2.regexp.index.0func.8.1regexp.Regexp.3int.9.8int.9.2.regexp.step.0func.8int.9.8int32.3int.9.5..regexp.inputReader = comdat any

$pimt..interface.4.regexp.canCheckPrefix.0func.8.9.8bool.9.2.regexp.context.0func.8int.9.8regexp_syntax.EmptyOp.9.2.regexp.hasPrefix.0func.8.1regexp.Regexp.9.8bool.9.2.regexp.index.0func.8.1regexp.Regexp.3int.9.8int.9.2.regexp.step.0func.8int.9.8int32.3int.9.5..regexp.inputReader = comdat any

$gcbits..wkEGGEb = comdat any

$type...1command_line_arguments.Session = comdat any

$gcbits..ba = comdat any

$type..func.8context.Context.3string.3string.9.8.9 = comdat any

$string..d = comdat any

$type...1string = comdat any

$type..func.8.1command_line_arguments.Session.3context.Context.3string.3string.9.8.9 = comdat any

$type..func.8context.Context.9.8.9 = comdat any

$type..func.8.1command_line_arguments.Session.3context.Context.9.8.9 = comdat any

$type..func.8.9.8.9 = comdat any

$type..func.8.1command_line_arguments.Session.9.8.9 = comdat any

$type..func.8.9.8string.9 = comdat any

$type..func.8.1command_line_arguments.Session.9.8string.9 = comdat any

$type...1.1command_line_arguments.Session = comdat any

$bool..d = comdat any

$type...1bool = comdat any

$type..struct.4.4x.5.f.f.0.1.4void.5.2.command_line_arguments.ss1.0.1.1command_line_arguments.Session.5 = comdat any

$gcbits..da = comdat any

$type..struct.4.4x.5fn.0func.8.9.8.9.5 = comdat any

$gcbits..wg = comdat any

$type...1command_line_arguments.Srv = comdat any

$type..func.8context.Context.9.8error.9 = comdat any

$error..d = comdat any

$type...1error = comdat any

$type..func.8.1command_line_arguments.Srv.3context.Context.9.8error.9 = comdat any

$type..func.8context.Context.3net.Conn.9.8error.9 = comdat any

$type..func.8.1command_line_arguments.Srv.3context.Context.3net.Conn.9.8error.9 = comdat any

$type..func.8context.Context.3.1command_line_arguments.Session.9.8error.9 = comdat any

$type..func.8.1command_line_arguments.Srv.3context.Context.3.1command_line_arguments.Session.9.8error.9 = comdat any

$type...1.1command_line_arguments.Srv = comdat any

$type..map.6string.7.1command_line_arguments.Warp = comdat any

$type...1command_line_arguments.Warp = comdat any

$type..func.8context.Context.9.8.6.7.1command_line_arguments.Session.9 = comdat any

$type...6.7.1command_line_arguments.Session = comdat any

$type..func.8.1command_line_arguments.Warp.3context.Context.9.8.6.7.1command_line_arguments.Session.9 = comdat any

$type..func.8context.Context.9.8github_com_spolu_warp.State.9 = comdat any

$type..func.8.1command_line_arguments.Warp.3context.Context.9.8github_com_spolu_warp.State.9 = comdat any

$type..func.8context.Context.3.1command_line_arguments.Session.9.8.9 = comdat any

$type..func.8.1command_line_arguments.Warp.3context.Context.3.1command_line_arguments.Session.9.8.9 = comdat any

$type..func.8context.Context.3.1command_line_arguments.Session.3.6.7uint8.9.8.9 = comdat any

$type...6.7uint8 = comdat any

$uint8..d = comdat any

$type...1uint8 = comdat any

$type..func.8.1command_line_arguments.Warp.3context.Context.3.1command_line_arguments.Session.3.6.7uint8.9.8.9 = comdat any

$type..func.8.1command_line_arguments.Warp.3context.Context.9.8.9 = comdat any

$type...1.1command_line_arguments.Warp = comdat any

$gcbits..rh = comdat any

$type...1command_line_arguments.HostState = comdat any

$type..func.8context.Context.9.8github_com_spolu_warp.User.9 = comdat any

$type..func.8.1command_line_arguments.HostState.3context.Context.9.8github_com_spolu_warp.User.9 = comdat any

$type...1.1command_line_arguments.HostState = comdat any

$gcbits..fd = comdat any

$gcbits..fb = comdat any

$type...1command_line_arguments.UserState = comdat any

$type..func.8.1command_line_arguments.UserState.3context.Context.9.8github_com_spolu_warp.User.9 = comdat any

$type...1.1command_line_arguments.UserState = comdat any

$type..map.6string.7.1command_line_arguments.Session = comdat any

$type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Session.2overflow.0.1.4void.5.5 = comdat any

$gcbits..kwkEGba = comdat any

$type...68x.7uint8 = comdat any

$type...68x.7string = comdat any

$gcbits..wkwa = comdat any

$type...6.7string = comdat any

$type...68x.7.1command_line_arguments.Session = comdat any

$gcbits..Gh = comdat any

$type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Session.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Session.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5 = comdat any

$gcbits..mb = comdat any

$int..d = comdat any

$type...1int = comdat any

$uint16..d = comdat any

$type...1uint16 = comdat any

$uint32..d = comdat any

$type...1uint32 = comdat any

$type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Session.2overflow.0.1.4void.5.5 = comdat any

$uintptr..d = comdat any

$type...1uintptr = comdat any

$type..map.6string.7.1command_line_arguments.UserState = comdat any

$type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.UserState.2overflow.0.1.4void.5.5 = comdat any

$type...68x.7.1command_line_arguments.UserState = comdat any

$type...6.7.1command_line_arguments.UserState = comdat any

$type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.UserState.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.UserState.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5 = comdat any

$type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.UserState.2overflow.0.1.4void.5.5 = comdat any

$type..chan.0.6.7uint8 = comdat any

$type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Warp.2overflow.0.1.4void.5.5 = comdat any

$type...68x.7.1command_line_arguments.Warp = comdat any

$type...6.7.1command_line_arguments.Warp = comdat any

$type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Warp.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Warp.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5 = comdat any

$type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Warp.2overflow.0.1.4void.5.5 = comdat any

$type...61x.7crypto_tls.Certificate = comdat any

$gcbits..Ajca = comdat any

$type...6.7crypto_tls.Certificate = comdat any

$type...64x.7uint16 = comdat any

$type...6.7uint16 = comdat any

$type...63x.7crypto_tls.CurveID = comdat any

$type...6.7crypto_tls.CurveID = comdat any

$type..struct.4.4x.5.f.f.0.1.4void.5.2.command_line_arguments.s1.0.1.1command_line_arguments.Srv.2.command_line_arguments.ctx2.0.1context.Context.2.command_line_arguments.conn3.0.1net.Conn.5 = comdat any

$gcbits..pa = comdat any

$type..map.6string.7github_com_spolu_warp.User = comdat any

$type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.User.2overflow.0.1.4void.5.5 = comdat any

$gcbits..kwkwircfkvircba = comdat any

$type...68x.7github_com_spolu_warp.User = comdat any

$gcbits..fkvircfkva = comdat any

$type...6.7github_com_spolu_warp.User = comdat any

$type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.User.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.User.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5 = comdat any

$type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.User.2overflow.0.1.4void.5.5 = comdat any

$type...60x.7.1command_line_arguments.Session = comdat any

$type..struct.4.4x.5.f.f.0.1.4void.5.2.command_line_arguments.w1.0.1.1command_line_arguments.Warp.2.command_line_arguments.ctx2.0.1context.Context.2.command_line_arguments.ss3.0.1.1command_line_arguments.Session.5 = comdat any

$type..struct.4.4x.5.f.f.0.1.4void.5.2.command_line_arguments.ctx1.0.1context.Context.2.command_line_arguments.w2.0.1.1command_line_arguments.Warp.2.command_line_arguments.ss3.0.1.1command_line_arguments.Session.5 = comdat any

$type..struct.4.4x.5.f.f.0.1.4void.5.2.command_line_arguments.w1.0.1.1command_line_arguments.Warp.2.command_line_arguments.ss2.0.1.1command_line_arguments.Session.2.command_line_arguments.ctx3.0.1context.Context.5 = comdat any

$type..struct.4.4x.5fn.0func.8.9.8string.9.2val.0.1command_line_arguments.Session.5 = comdat any

$type..map.6string.7github_com_spolu_warp.Mode = comdat any

$type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.Mode.2overflow.0.1.4void.5.5 = comdat any

$gcbits..kwkbaba = comdat any

$type...68x.7github_com_spolu_warp.Mode = comdat any

$type...6.7github_com_spolu_warp.Mode = comdat any

$type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.Mode.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.Mode.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5 = comdat any

$type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.Mode.2overflow.0.1.4void.5.5 = comdat any

$gcbits..ha = comdat any

$gcbits..GGGGa = comdat any

$gcbits..pppppppppppppppppa = comdat any

$gcbits..ppaa = comdat any

$gcbits..GGGGGGGG = comdat any

$gcbits..Ga = comdat any

$gcbits..ppppa = comdat any

$gcbits..pppppppppa = comdat any

$gcbits..ppppppa = comdat any

$gcbits..ppppp = comdat any

@reflect..reflect.rtype..d = external constant %StructType.0
@imt..interface.4Align.0func.8.9.8int.9.2AssignableTo.0func.8reflect.Type.9.8bool.9.2Bits.0func.8.9.8int.9.2ChanDir.0func.8.9.8reflect.ChanDir.9.2Comparable.0func.8.9.8bool.9.2ConvertibleTo.0func.8reflect.Type.9.8bool.9.2Elem.0func.8.9.8reflect.Type.9.2Field.0func.8int.9.8reflect.StructField.9.2FieldAlign.0func.8.9.8int.9.2FieldByIndex.0func.8.6.7int.9.8reflect.StructField.9.2FieldByName.0func.8string.9.8reflect.StructField.3bool.9.2FieldByNameFunc.0func.8func.8string.9.8bool.9.9.8reflect.StructField.3bool.9.2Implements.0func.8reflect.Type.9.8bool.9.2In.0func.8int.9.8reflect.Type.9.2IsVariadic.0func.8.9.8bool.9.2Key.0func.8.9.8reflect.Type.9.2Kind.0func.8.9.8reflect.Kind.9.2Len.0func.8.9.8int.9.2Method.0func.8int.9.8reflect.Method.9.2MethodByName.0func.8string.9.8reflect.Method.3bool.9.2Name.0func.8.9.8string.9.2NumField.0func.8.9.8int.9.2NumIn.0func.8.9.8int.9.2NumMethod.0func.8.9.8int.9.2NumOut.0func.8.9.8int.9.2Out.0func.8int.9.8reflect.Type.9.2PkgPath.0func.8.9.8string.9.2Size.0func.8.9.8uintptr.9.2String.0func.8.9.8string.9.2.reflect.common.0func.8.9.8.1reflect.rtype.9.2.reflect.rawString.0func.8.9.8string.9.2.reflect.uncommon.0func.8.9.8.1reflect.uncommonType.9.5..reflect.rtype = weak local_unnamed_addr constant { %_type.0*, i64 (i8*, %.reflect.rtype.0*)*, i8 (i8*, %.reflect.rtype.0*, i64, i64)*, i64 (i8*, %.reflect.rtype.0*)*, i64 (i8*, %.reflect.rtype.0*)*, i8 (i8*, %.reflect.rtype.0*)*, i8 (i8*, %.reflect.rtype.0*, i64, i64)*, { i64, i64 } (i8*, %.reflect.rtype.0*)*, void (%StructField.0*, i8*, %.reflect.rtype.0*, i64)*, i64 (i8*, %.reflect.rtype.0*)*, void (%StructField.0*, i8*, %.reflect.rtype.0*, %IPST.28*)*, void ({ %StructField.0, i8 }*, i8*, %.reflect.rtype.0*, i64, i64)*, void ({ %StructField.0, i8 }*, i8*, %.reflect.rtype.0*, %__go_descriptor.36*)*, i8 (i8*, %.reflect.rtype.0*, i64, i64)*, { i64, i64 } (i8*, %.reflect.rtype.0*, i64)*, i8 (i8*, %.reflect.rtype.0*)*, { i64, i64 } (i8*, %.reflect.rtype.0*)*, i64 (i8*, %.reflect.rtype.0*)*, i64 (i8*, %.reflect.rtype.0*)*, void (%Method.0*, i8*, %.reflect.rtype.0*, i64)*, void ({ %Method.0, i8 }*, i8*, %.reflect.rtype.0*, i64, i64)*, { i64, i64 } (i8*, %.reflect.rtype.0*)*, i64 (i8*, %.reflect.rtype.0*)*, i64 (i8*, %.reflect.rtype.0*)*, i64 (i8*, %.reflect.rtype.0*)*, i64 (i8*, %.reflect.rtype.0*)*, { i64, i64 } (i8*, %.reflect.rtype.0*, i64)*, { i64, i64 } (i8*, %.reflect.rtype.0*)*, i64 (i8*, %.reflect.rtype.0*)*, { i64, i64 } (i8*, %.reflect.rtype.0*)*, %.reflect.rtype.0* (i8*, %.reflect.rtype.0*)*, { i64, i64 } (i8*, %.reflect.rtype.0*)*, %.reflect.uncommonType.0* (i8*, %.reflect.uncommonType.0*)* } { %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @reflect..reflect.rtype..d, i32 0, i32 0), i64 (i8*, %.reflect.rtype.0*)* @reflect.rtype.Align, i8 (i8*, %.reflect.rtype.0*, i64, i64)* @reflect.rtype.AssignableTo, i64 (i8*, %.reflect.rtype.0*)* @reflect.rtype.Bits, i64 (i8*, %.reflect.rtype.0*)* @reflect.rtype.ChanDir, i8 (i8*, %.reflect.rtype.0*)* @reflect.rtype.Comparable, i8 (i8*, %.reflect.rtype.0*, i64, i64)* @reflect.rtype.ConvertibleTo, { i64, i64 } (i8*, %.reflect.rtype.0*)* @reflect.rtype.Elem, void (%StructField.0*, i8*, %.reflect.rtype.0*, i64)* @reflect.rtype.Field, i64 (i8*, %.reflect.rtype.0*)* @reflect.rtype.FieldAlign, void (%StructField.0*, i8*, %.reflect.rtype.0*, %IPST.28*)* @reflect.rtype.FieldByIndex, void ({ %StructField.0, i8 }*, i8*, %.reflect.rtype.0*, i64, i64)* @reflect.rtype.FieldByName, void ({ %StructField.0, i8 }*, i8*, %.reflect.rtype.0*, %__go_descriptor.36*)* @reflect.rtype.FieldByNameFunc, i8 (i8*, %.reflect.rtype.0*, i64, i64)* @reflect.rtype.Implements, { i64, i64 } (i8*, %.reflect.rtype.0*, i64)* @reflect.rtype.In, i8 (i8*, %.reflect.rtype.0*)* @reflect.rtype.IsVariadic, { i64, i64 } (i8*, %.reflect.rtype.0*)* @reflect.rtype.Key, i64 (i8*, %.reflect.rtype.0*)* @reflect.rtype.Kind, i64 (i8*, %.reflect.rtype.0*)* @reflect.rtype.Len, void (%Method.0*, i8*, %.reflect.rtype.0*, i64)* @reflect.rtype.Method, void ({ %Method.0, i8 }*, i8*, %.reflect.rtype.0*, i64, i64)* @reflect.rtype.MethodByName, { i64, i64 } (i8*, %.reflect.rtype.0*)* @reflect.rtype.Name, i64 (i8*, %.reflect.rtype.0*)* @reflect.rtype.NumField, i64 (i8*, %.reflect.rtype.0*)* @reflect.rtype.NumIn, i64 (i8*, %.reflect.rtype.0*)* @reflect.rtype.NumMethod, i64 (i8*, %.reflect.rtype.0*)* @reflect.rtype.NumOut, { i64, i64 } (i8*, %.reflect.rtype.0*, i64)* @reflect.rtype.Out, { i64, i64 } (i8*, %.reflect.rtype.0*)* @reflect.rtype.PkgPath, i64 (i8*, %.reflect.rtype.0*)* @reflect.rtype.Size, { i64, i64 } (i8*, %.reflect.rtype.0*)* @reflect.rtype.String, %.reflect.rtype.0* (i8*, %.reflect.rtype.0*)* @reflect.rtype.common, { i64, i64 } (i8*, %.reflect.rtype.0*)* @reflect.rtype.rawString, %.reflect.uncommonType.0* (i8*, %.reflect.uncommonType.0*)* bitcast (%.reflect.uncommonType.0* (i8*, %.reflect.rtype.0*)* @reflect.rtype.uncommon..stub to %.reflect.uncommonType.0* (i8*, %.reflect.uncommonType.0*)*) }, comdat
@type...1reflect.rtype = external constant %PtrType.0
@pimt..interface.4Align.0func.8.9.8int.9.2AssignableTo.0func.8reflect.Type.9.8bool.9.2Bits.0func.8.9.8int.9.2ChanDir.0func.8.9.8reflect.ChanDir.9.2Comparable.0func.8.9.8bool.9.2ConvertibleTo.0func.8reflect.Type.9.8bool.9.2Elem.0func.8.9.8reflect.Type.9.2Field.0func.8int.9.8reflect.StructField.9.2FieldAlign.0func.8.9.8int.9.2FieldByIndex.0func.8.6.7int.9.8reflect.StructField.9.2FieldByName.0func.8string.9.8reflect.StructField.3bool.9.2FieldByNameFunc.0func.8func.8string.9.8bool.9.9.8reflect.StructField.3bool.9.2Implements.0func.8reflect.Type.9.8bool.9.2In.0func.8int.9.8reflect.Type.9.2IsVariadic.0func.8.9.8bool.9.2Key.0func.8.9.8reflect.Type.9.2Kind.0func.8.9.8reflect.Kind.9.2Len.0func.8.9.8int.9.2Method.0func.8int.9.8reflect.Method.9.2MethodByName.0func.8string.9.8reflect.Method.3bool.9.2Name.0func.8.9.8string.9.2NumField.0func.8.9.8int.9.2NumIn.0func.8.9.8int.9.2NumMethod.0func.8.9.8int.9.2NumOut.0func.8.9.8int.9.2Out.0func.8int.9.8reflect.Type.9.2PkgPath.0func.8.9.8string.9.2Size.0func.8.9.8uintptr.9.2String.0func.8.9.8string.9.2.reflect.common.0func.8.9.8.1reflect.rtype.9.2.reflect.rawString.0func.8.9.8string.9.2.reflect.uncommon.0func.8.9.8.1reflect.uncommonType.9.5..reflect.rtype = weak local_unnamed_addr constant { %_type.0*, i64 (i8*, %.reflect.rtype.0*)*, i8 (i8*, %.reflect.rtype.0*, i64, i64)*, i64 (i8*, %.reflect.rtype.0*)*, i64 (i8*, %.reflect.rtype.0*)*, i8 (i8*, %.reflect.rtype.0*)*, i8 (i8*, %.reflect.rtype.0*, i64, i64)*, { i64, i64 } (i8*, %.reflect.rtype.0*)*, void (%StructField.0*, i8*, %.reflect.rtype.0*, i64)*, i64 (i8*, %.reflect.rtype.0*)*, void (%StructField.0*, i8*, %.reflect.rtype.0*, %IPST.28*)*, void ({ %StructField.0, i8 }*, i8*, %.reflect.rtype.0*, i64, i64)*, void ({ %StructField.0, i8 }*, i8*, %.reflect.rtype.0*, %__go_descriptor.36*)*, i8 (i8*, %.reflect.rtype.0*, i64, i64)*, { i64, i64 } (i8*, %.reflect.rtype.0*, i64)*, i8 (i8*, %.reflect.rtype.0*)*, { i64, i64 } (i8*, %.reflect.rtype.0*)*, i64 (i8*, %.reflect.rtype.0*)*, i64 (i8*, %.reflect.rtype.0*)*, void (%Method.0*, i8*, %.reflect.rtype.0*, i64)*, void ({ %Method.0, i8 }*, i8*, %.reflect.rtype.0*, i64, i64)*, { i64, i64 } (i8*, %.reflect.rtype.0*)*, i64 (i8*, %.reflect.rtype.0*)*, i64 (i8*, %.reflect.rtype.0*)*, i64 (i8*, %.reflect.rtype.0*)*, i64 (i8*, %.reflect.rtype.0*)*, { i64, i64 } (i8*, %.reflect.rtype.0*, i64)*, { i64, i64 } (i8*, %.reflect.rtype.0*)*, i64 (i8*, %.reflect.rtype.0*)*, { i64, i64 } (i8*, %.reflect.rtype.0*)*, %.reflect.rtype.0* (i8*, %.reflect.rtype.0*)*, { i64, i64 } (i8*, %.reflect.rtype.0*)*, %.reflect.uncommonType.0* (i8*, %.reflect.uncommonType.0*)* } { %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1reflect.rtype, i32 0, i32 0), i64 (i8*, %.reflect.rtype.0*)* @reflect.rtype.Align, i8 (i8*, %.reflect.rtype.0*, i64, i64)* @reflect.rtype.AssignableTo, i64 (i8*, %.reflect.rtype.0*)* @reflect.rtype.Bits, i64 (i8*, %.reflect.rtype.0*)* @reflect.rtype.ChanDir, i8 (i8*, %.reflect.rtype.0*)* @reflect.rtype.Comparable, i8 (i8*, %.reflect.rtype.0*, i64, i64)* @reflect.rtype.ConvertibleTo, { i64, i64 } (i8*, %.reflect.rtype.0*)* @reflect.rtype.Elem, void (%StructField.0*, i8*, %.reflect.rtype.0*, i64)* @reflect.rtype.Field, i64 (i8*, %.reflect.rtype.0*)* @reflect.rtype.FieldAlign, void (%StructField.0*, i8*, %.reflect.rtype.0*, %IPST.28*)* @reflect.rtype.FieldByIndex, void ({ %StructField.0, i8 }*, i8*, %.reflect.rtype.0*, i64, i64)* @reflect.rtype.FieldByName, void ({ %StructField.0, i8 }*, i8*, %.reflect.rtype.0*, %__go_descriptor.36*)* @reflect.rtype.FieldByNameFunc, i8 (i8*, %.reflect.rtype.0*, i64, i64)* @reflect.rtype.Implements, { i64, i64 } (i8*, %.reflect.rtype.0*, i64)* @reflect.rtype.In, i8 (i8*, %.reflect.rtype.0*)* @reflect.rtype.IsVariadic, { i64, i64 } (i8*, %.reflect.rtype.0*)* @reflect.rtype.Key, i64 (i8*, %.reflect.rtype.0*)* @reflect.rtype.Kind, i64 (i8*, %.reflect.rtype.0*)* @reflect.rtype.Len, void (%Method.0*, i8*, %.reflect.rtype.0*, i64)* @reflect.rtype.Method, void ({ %Method.0, i8 }*, i8*, %.reflect.rtype.0*, i64, i64)* @reflect.rtype.MethodByName, { i64, i64 } (i8*, %.reflect.rtype.0*)* @reflect.rtype.Name, i64 (i8*, %.reflect.rtype.0*)* @reflect.rtype.NumField, i64 (i8*, %.reflect.rtype.0*)* @reflect.rtype.NumIn, i64 (i8*, %.reflect.rtype.0*)* @reflect.rtype.NumMethod, i64 (i8*, %.reflect.rtype.0*)* @reflect.rtype.NumOut, { i64, i64 } (i8*, %.reflect.rtype.0*, i64)* @reflect.rtype.Out, { i64, i64 } (i8*, %.reflect.rtype.0*)* @reflect.rtype.PkgPath, i64 (i8*, %.reflect.rtype.0*)* @reflect.rtype.Size, { i64, i64 } (i8*, %.reflect.rtype.0*)* @reflect.rtype.String, %.reflect.rtype.0* (i8*, %.reflect.rtype.0*)* @reflect.rtype.common, { i64, i64 } (i8*, %.reflect.rtype.0*)* @reflect.rtype.rawString, %.reflect.uncommonType.0* (i8*, %.reflect.uncommonType.0*)* bitcast (%.reflect.uncommonType.0* (i8*, %.reflect.rtype.0*)* @reflect.rtype.uncommon..stub to %.reflect.uncommonType.0* (i8*, %.reflect.uncommonType.0*)*) }, comdat
@regexp..regexp.inputBytes..d = external constant %StructType.0
@imt..interface.4.regexp.canCheckPrefix.0func.8.9.8bool.9.2.regexp.context.0func.8int.9.8regexp_syntax.EmptyOp.9.2.regexp.hasPrefix.0func.8.1regexp.Regexp.9.8bool.9.2.regexp.index.0func.8.1regexp.Regexp.3int.9.8int.9.2.regexp.step.0func.8int.9.8int32.3int.9.5..regexp.inputBytes = weak local_unnamed_addr constant { %_type.0*, i8 (i8*, %.regexp.inputBytes.0*)*, i8 (i8*, %.regexp.inputBytes.0*, i64)*, i8 (i8*, %.regexp.inputBytes.0*, %Regexp.0*)*, i64 (i8*, %.regexp.inputBytes.0*, %Regexp.0*, i64)*, { i64, i64 } (i8*, %.regexp.inputBytes.0*, i64)* } { %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @regexp..regexp.inputBytes..d, i32 0, i32 0), i8 (i8*, %.regexp.inputBytes.0*)* @regexp.inputBytes.canCheckPrefix, i8 (i8*, %.regexp.inputBytes.0*, i64)* @regexp.inputBytes.context, i8 (i8*, %.regexp.inputBytes.0*, %Regexp.0*)* @regexp.inputBytes.hasPrefix, i64 (i8*, %.regexp.inputBytes.0*, %Regexp.0*, i64)* @regexp.inputBytes.index, { i64, i64 } (i8*, %.regexp.inputBytes.0*, i64)* @regexp.inputBytes.step }, comdat
@type...1regexp.inputBytes = external constant %PtrType.0
@pimt..interface.4.regexp.canCheckPrefix.0func.8.9.8bool.9.2.regexp.context.0func.8int.9.8regexp_syntax.EmptyOp.9.2.regexp.hasPrefix.0func.8.1regexp.Regexp.9.8bool.9.2.regexp.index.0func.8.1regexp.Regexp.3int.9.8int.9.2.regexp.step.0func.8int.9.8int32.3int.9.5..regexp.inputBytes = weak local_unnamed_addr constant { %_type.0*, i8 (i8*, %.regexp.inputBytes.0*)*, i8 (i8*, %.regexp.inputBytes.0*, i64)*, i8 (i8*, %.regexp.inputBytes.0*, %Regexp.0*)*, i64 (i8*, %.regexp.inputBytes.0*, %Regexp.0*, i64)*, { i64, i64 } (i8*, %.regexp.inputBytes.0*, i64)* } { %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1regexp.inputBytes, i32 0, i32 0), i8 (i8*, %.regexp.inputBytes.0*)* @regexp.inputBytes.canCheckPrefix, i8 (i8*, %.regexp.inputBytes.0*, i64)* @regexp.inputBytes.context, i8 (i8*, %.regexp.inputBytes.0*, %Regexp.0*)* @regexp.inputBytes.hasPrefix, i64 (i8*, %.regexp.inputBytes.0*, %Regexp.0*, i64)* @regexp.inputBytes.index, { i64, i64 } (i8*, %.regexp.inputBytes.0*, i64)* @regexp.inputBytes.step }, comdat
@regexp..regexp.inputString..d = external constant %StructType.0
@imt..interface.4.regexp.canCheckPrefix.0func.8.9.8bool.9.2.regexp.context.0func.8int.9.8regexp_syntax.EmptyOp.9.2.regexp.hasPrefix.0func.8.1regexp.Regexp.9.8bool.9.2.regexp.index.0func.8.1regexp.Regexp.3int.9.8int.9.2.regexp.step.0func.8int.9.8int32.3int.9.5..regexp.inputString = weak local_unnamed_addr constant { %_type.0*, i8 (i8*, %.regexp.inputString.0*)*, i8 (i8*, %.regexp.inputString.0*, i64)*, i8 (i8*, %.regexp.inputString.0*, %Regexp.0*)*, i64 (i8*, %.regexp.inputString.0*, %Regexp.0*, i64)*, { i64, i64 } (i8*, %.regexp.inputString.0*, i64)* } { %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @regexp..regexp.inputString..d, i32 0, i32 0), i8 (i8*, %.regexp.inputString.0*)* @regexp.inputString.canCheckPrefix, i8 (i8*, %.regexp.inputString.0*, i64)* @regexp.inputString.context, i8 (i8*, %.regexp.inputString.0*, %Regexp.0*)* @regexp.inputString.hasPrefix, i64 (i8*, %.regexp.inputString.0*, %Regexp.0*, i64)* @regexp.inputString.index, { i64, i64 } (i8*, %.regexp.inputString.0*, i64)* @regexp.inputString.step }, comdat
@type...1regexp.inputString = external constant %PtrType.0
@pimt..interface.4.regexp.canCheckPrefix.0func.8.9.8bool.9.2.regexp.context.0func.8int.9.8regexp_syntax.EmptyOp.9.2.regexp.hasPrefix.0func.8.1regexp.Regexp.9.8bool.9.2.regexp.index.0func.8.1regexp.Regexp.3int.9.8int.9.2.regexp.step.0func.8int.9.8int32.3int.9.5..regexp.inputString = weak local_unnamed_addr constant { %_type.0*, i8 (i8*, %.regexp.inputString.0*)*, i8 (i8*, %.regexp.inputString.0*, i64)*, i8 (i8*, %.regexp.inputString.0*, %Regexp.0*)*, i64 (i8*, %.regexp.inputString.0*, %Regexp.0*, i64)*, { i64, i64 } (i8*, %.regexp.inputString.0*, i64)* } { %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1regexp.inputString, i32 0, i32 0), i8 (i8*, %.regexp.inputString.0*)* @regexp.inputString.canCheckPrefix, i8 (i8*, %.regexp.inputString.0*, i64)* @regexp.inputString.context, i8 (i8*, %.regexp.inputString.0*, %Regexp.0*)* @regexp.inputString.hasPrefix, i64 (i8*, %.regexp.inputString.0*, %Regexp.0*, i64)* @regexp.inputString.index, { i64, i64 } (i8*, %.regexp.inputString.0*, i64)* @regexp.inputString.step }, comdat
@regexp..regexp.inputReader..d = external constant %StructType.0
@imt..interface.4.regexp.canCheckPrefix.0func.8.9.8bool.9.2.regexp.context.0func.8int.9.8regexp_syntax.EmptyOp.9.2.regexp.hasPrefix.0func.8.1regexp.Regexp.9.8bool.9.2.regexp.index.0func.8.1regexp.Regexp.3int.9.8int.9.2.regexp.step.0func.8int.9.8int32.3int.9.5..regexp.inputReader = weak local_unnamed_addr constant { %_type.0*, i8 (i8*, %.regexp.inputReader.0*)*, i8 (i8*, %.regexp.inputReader.0*, i64)*, i8 (i8*, %.regexp.inputReader.0*, %Regexp.0*)*, i64 (i8*, %.regexp.inputReader.0*, %Regexp.0*, i64)*, { i64, i64 } (i8*, %.regexp.inputReader.0*, i64)* } { %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @regexp..regexp.inputReader..d, i32 0, i32 0), i8 (i8*, %.regexp.inputReader.0*)* @regexp.inputReader.canCheckPrefix, i8 (i8*, %.regexp.inputReader.0*, i64)* @regexp.inputReader.context, i8 (i8*, %.regexp.inputReader.0*, %Regexp.0*)* @regexp.inputReader.hasPrefix, i64 (i8*, %.regexp.inputReader.0*, %Regexp.0*, i64)* @regexp.inputReader.index, { i64, i64 } (i8*, %.regexp.inputReader.0*, i64)* @regexp.inputReader.step }, comdat
@type...1regexp.inputReader = external constant %PtrType.0
@pimt..interface.4.regexp.canCheckPrefix.0func.8.9.8bool.9.2.regexp.context.0func.8int.9.8regexp_syntax.EmptyOp.9.2.regexp.hasPrefix.0func.8.1regexp.Regexp.9.8bool.9.2.regexp.index.0func.8.1regexp.Regexp.3int.9.8int.9.2.regexp.step.0func.8int.9.8int32.3int.9.5..regexp.inputReader = weak local_unnamed_addr constant { %_type.0*, i8 (i8*, %.regexp.inputReader.0*)*, i8 (i8*, %.regexp.inputReader.0*, i64)*, i8 (i8*, %.regexp.inputReader.0*, %Regexp.0*)*, i64 (i8*, %.regexp.inputReader.0*, %Regexp.0*, i64)*, { i64, i64 } (i8*, %.regexp.inputReader.0*, i64)* } { %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1regexp.inputReader, i32 0, i32 0), i8 (i8*, %.regexp.inputReader.0*)* @regexp.inputReader.canCheckPrefix, i8 (i8*, %.regexp.inputReader.0*, i64)* @regexp.inputReader.context, i8 (i8*, %.regexp.inputReader.0*, %Regexp.0*)* @regexp.inputReader.hasPrefix, i64 (i8*, %.regexp.inputReader.0*, %Regexp.0*, i64)* @regexp.inputReader.index, { i64, i64 } (i8*, %.regexp.inputReader.0*, i64)* @regexp.inputReader.step }, comdat
@command_line_arguments.Session..d = constant %StructType.0 { %_type.0 { i64 248, i64 248, i32 1808299448, i8 25, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @gcbits..wkEGGEb, i32 0, i32 0), { i8*, i64 }* @go..C1, %uncommonType.0* @go..C5, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Session, i32 0, i32 0) }, %IPST.47 { %structField.0* getelementptr inbounds ([17 x %structField.0], [17 x %structField.0]* @go..C82, i32 0, i32 0), i64 17, i64 17 } }
@gcbits..wkEGGEb = weak constant [4 x i8] c"U\F5\FF{", comdat
@const.0 = private constant [39 x i8] c"\09command_line_arguments\09daemon.Session\00", align 1
@go..C1 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([39 x i8], [39 x i8]* @const.0, i32 0, i32 0), i64 38 }
@const.1 = private constant [8 x i8] c"Session\00", align 1
@go..C2 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.1, i32 0, i32 0), i64 7 }
@const.2 = private constant [23 x i8] c"command-line-arguments\00", align 1
@go..C3 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@go..C4 = internal global [1 x %method.0] zeroinitializer
@go..C5 = internal constant %uncommonType.0 { { i8*, i64 }* @go..C2, { i8*, i64 }* @go..C3, %IPST.45 { %method.0* getelementptr inbounds ([1 x %method.0], [1 x %method.0]* @go..C4, i32 0, i32 0), i64 0, i64 0 } }
@type...1command_line_arguments.Session = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 -1131979895, i8 54, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.3*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C6, %uncommonType.0* @go..C41, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1.1command_line_arguments.Session, i32 0, i32 0) }, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.Session..d, i32 0, i32 0) }, comdat
@runtime.memhash64..f = external constant %functionDescriptor.0
@runtime.memequal64..f = external constant %functionDescriptor.0
@gcbits..ba = weak constant [1 x i8] c"\01", comdat
@const.3 = private constant [40 x i8] c"*\09command_line_arguments\09daemon.Session\00", align 1
@go..C6 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([40 x i8], [40 x i8]* @const.3, i32 0, i32 0), i64 39 }
@const.4 = private constant [10 x i8] c"SendError\00", align 1
@go..C7 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @const.4, i32 0, i32 0), i64 9 }
@type..func.8context.Context.3string.3string.9.8.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 -230967064, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C8, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.46 { %_type.0** getelementptr inbounds ([3 x %_type.0*], [3 x %_type.0*]* @go..C14, i32 0, i32 0), i64 3, i64 3 }, %IPST.46 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C15, i32 0, i32 0), i64 0, i64 0 } }, comdat
@const.5 = private constant [47 x i8] c"func(\09context\09context.Context, string, string)\00", align 1
@go..C8 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([47 x i8], [47 x i8]* @const.5, i32 0, i32 0), i64 46 }
@context.Context..d = external constant %InterfaceType.0
@string..d = weak constant %_type.0 { i64 16, i64 8, i32 -1998952806, i8 24, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.strhash..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.strequal..f to %__go_descriptor.3*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C9, %uncommonType.0* @go..C12, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1string, i32 0, i32 0) }, comdat
@runtime.strhash..f = external constant %functionDescriptor.0
@runtime.strequal..f = external constant %functionDescriptor.0
@const.6 = private constant [7 x i8] c"string\00", align 1
@go..C9 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.6, i32 0, i32 0), i64 6 }
@go..C10 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.6, i32 0, i32 0), i64 6 }
@go..C11 = internal global [1 x %method.0] zeroinitializer
@go..C12 = internal constant %uncommonType.0 { { i8*, i64 }* @go..C10, { i8*, i64 }* null, %IPST.45 { %method.0* getelementptr inbounds ([1 x %method.0], [1 x %method.0]* @go..C11, i32 0, i32 0), i64 0, i64 0 } }
@type...1string = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 -1918473815, i8 54, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.3*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C13, %uncommonType.0* null, %_type.0* null }, %_type.0* @string..d }, comdat
@const.7 = private constant [8 x i8] c"*string\00", align 1
@go..C13 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.7, i32 0, i32 0), i64 7 }
@go..C14 = internal global [3 x %_type.0*] [%_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @context.Context..d, i32 0, i32 0), %_type.0* @string..d, %_type.0* @string..d]
@go..C15 = internal global [1 x %_type.0*] zeroinitializer
@type..func.8.1command_line_arguments.Session.3context.Context.3string.3string.9.8.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 1969414888, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C16, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.46 { %_type.0** getelementptr inbounds ([4 x %_type.0*], [4 x %_type.0*]* @go..C17, i32 0, i32 0), i64 4, i64 4 }, %IPST.46 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C18, i32 0, i32 0), i64 0, i64 0 } }, comdat
@const.8 = private constant [88 x i8] c"func(*\09command_line_arguments\09daemon.Session, \09context\09context.Context, string, string)\00", align 1
@go..C16 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([88 x i8], [88 x i8]* @const.8, i32 0, i32 0), i64 87 }
@go..C17 = internal global [4 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Session, i32 0, i32 0), %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @context.Context..d, i32 0, i32 0), %_type.0* @string..d, %_type.0* @string..d]
@go..C18 = internal global [1 x %_type.0*] zeroinitializer
@const.9 = private constant [18 x i8] c"SendInternalError\00", align 1
@go..C19 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @const.9, i32 0, i32 0), i64 17 }
@type..func.8context.Context.9.8.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 1315882344, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C20, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.46 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C21, i32 0, i32 0), i64 1, i64 1 }, %IPST.46 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C22, i32 0, i32 0), i64 0, i64 0 } }, comdat
@const.10 = private constant [31 x i8] c"func(\09context\09context.Context)\00", align 1
@go..C20 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([31 x i8], [31 x i8]* @const.10, i32 0, i32 0), i64 30 }
@go..C21 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @context.Context..d, i32 0, i32 0)]
@go..C22 = internal global [1 x %_type.0*] zeroinitializer
@type..func.8.1command_line_arguments.Session.3context.Context.9.8.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 768146408, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C23, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.46 { %_type.0** getelementptr inbounds ([2 x %_type.0*], [2 x %_type.0*]* @go..C24, i32 0, i32 0), i64 2, i64 2 }, %IPST.46 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C25, i32 0, i32 0), i64 0, i64 0 } }, comdat
@const.11 = private constant [72 x i8] c"func(*\09command_line_arguments\09daemon.Session, \09context\09context.Context)\00", align 1
@go..C23 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([72 x i8], [72 x i8]* @const.11, i32 0, i32 0), i64 71 }
@go..C24 = internal global [2 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Session, i32 0, i32 0), %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @context.Context..d, i32 0, i32 0)]
@go..C25 = internal global [1 x %_type.0*] zeroinitializer
@const.12 = private constant [9 x i8] c"TearDown\00", align 1
@go..C26 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @const.12, i32 0, i32 0), i64 8 }
@type..func.8.9.8.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 8, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C27, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.46 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C28, i32 0, i32 0), i64 0, i64 0 }, %IPST.46 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C29, i32 0, i32 0), i64 0, i64 0 } }, comdat
@const.13 = private constant [7 x i8] c"func()\00", align 1
@go..C27 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.13, i32 0, i32 0), i64 6 }
@go..C28 = internal global [1 x %_type.0*] zeroinitializer
@go..C29 = internal global [1 x %_type.0*] zeroinitializer
@type..func.8.1command_line_arguments.Session.9.8.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 -1863618264, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C30, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.46 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C31, i32 0, i32 0), i64 1, i64 1 }, %IPST.46 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C32, i32 0, i32 0), i64 0, i64 0 } }, comdat
@const.14 = private constant [46 x i8] c"func(*\09command_line_arguments\09daemon.Session)\00", align 1
@go..C30 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([46 x i8], [46 x i8]* @const.14, i32 0, i32 0), i64 45 }
@go..C31 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Session, i32 0, i32 0)]
@go..C32 = internal global [1 x %_type.0*] zeroinitializer
@const.15 = private constant [9 x i8] c"ToString\00", align 1
@go..C33 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @const.15, i32 0, i32 0), i64 8 }
@type..func.8.9.8string.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 916039304, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C34, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.46 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C35, i32 0, i32 0), i64 0, i64 0 }, %IPST.46 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C36, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.16 = private constant [14 x i8] c"func() string\00", align 1
@go..C34 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @const.16, i32 0, i32 0), i64 13 }
@go..C35 = internal global [1 x %_type.0*] zeroinitializer
@go..C36 = internal global [1 x %_type.0*] [%_type.0* @string..d]
@type..func.8.1command_line_arguments.Session.9.8string.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 -947578968, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C37, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.46 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C38, i32 0, i32 0), i64 1, i64 1 }, %IPST.46 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C39, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.17 = private constant [53 x i8] c"func(*\09command_line_arguments\09daemon.Session) string\00", align 1
@go..C37 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([53 x i8], [53 x i8]* @const.17, i32 0, i32 0), i64 52 }
@go..C38 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Session, i32 0, i32 0)]
@go..C39 = internal global [1 x %_type.0*] [%_type.0* @string..d]
@go..C40 = internal global [4 x %method.0] [%method.0 { { i8*, i64 }* @go..C7, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8context.Context.3string.3string.9.8.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.Session.3context.Context.3string.3string.9.8.9, i32 0, i32 0), i8* bitcast (void (i8*, %Session.0*, i64, i64, i64, i64, { i8*, i64 }*)* @command_line_arguments.Session.SendError to i8*) }, %method.0 { { i8*, i64 }* @go..C19, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8context.Context.9.8.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.Session.3context.Context.9.8.9, i32 0, i32 0), i8* bitcast (void (i8*, %Session.0*, i64, i64)* @command_line_arguments.Session.SendInternalError to i8*) }, %method.0 { { i8*, i64 }* @go..C26, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.9.8.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.Session.9.8.9, i32 0, i32 0), i8* bitcast (void (i8*, %Session.0*)* @command_line_arguments.Session.TearDown to i8*) }, %method.0 { { i8*, i64 }* @go..C33, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.9.8string.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.Session.9.8string.9, i32 0, i32 0), i8* bitcast ({ i64, i64 } (i8*, %Session.0*)* @command_line_arguments.Session.ToString to i8*) }]
@go..C41 = internal constant %uncommonType.0 { { i8*, i64 }* null, { i8*, i64 }* null, %IPST.45 { %method.0* getelementptr inbounds ([4 x %method.0], [4 x %method.0]* @go..C40, i32 0, i32 0), i64 4, i64 4 } }
@type...1.1command_line_arguments.Session = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 -931809127, i8 54, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.3*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C42, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Session, i32 0, i32 0) }, comdat
@const.18 = private constant [41 x i8] c"**\09command_line_arguments\09daemon.Session\00", align 1
@go..C42 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([41 x i8], [41 x i8]* @const.18, i32 0, i32 0), i64 40 }
@const.19 = private constant [8 x i8] c"session\00", align 1
@go..C43 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.19, i32 0, i32 0), i64 7 }
@go..C44 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@github_com_spolu_warp.Session..d = external constant %StructType.0
@const.20 = private constant [5 x i8] c"warp\00", align 1
@go..C45 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.20, i32 0, i32 0), i64 4 }
@go..C46 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@const.21 = private constant [12 x i8] c"sessionType\00", align 1
@go..C47 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @const.21, i32 0, i32 0), i64 11 }
@go..C48 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@github_com_spolu_warp.SessionType..d = external constant %_type.0
@const.22 = private constant [9 x i8] c"username\00", align 1
@go..C49 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @const.22, i32 0, i32 0), i64 8 }
@go..C50 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@const.23 = private constant [5 x i8] c"conn\00", align 1
@go..C51 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.23, i32 0, i32 0), i64 4 }
@go..C52 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@net.Conn..d = external constant %InterfaceType.0
@const.24 = private constant [4 x i8] c"mux\00", align 1
@go..C53 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @const.24, i32 0, i32 0), i64 3 }
@go..C54 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@type...1github_com_spolu_warp_vendor_github_com_hashicorp_yamux.Session = external constant %PtrType.0
@const.25 = private constant [7 x i8] c"stateC\00", align 1
@go..C55 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.25, i32 0, i32 0), i64 6 }
@go..C56 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@const.26 = private constant [7 x i8] c"stateW\00", align 1
@go..C57 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.26, i32 0, i32 0), i64 6 }
@go..C58 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@type...1encoding_gob.Encoder = external constant %PtrType.0
@const.27 = private constant [8 x i8] c"updateC\00", align 1
@go..C59 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.27, i32 0, i32 0), i64 7 }
@go..C60 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@const.28 = private constant [8 x i8] c"updateR\00", align 1
@go..C61 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.28, i32 0, i32 0), i64 7 }
@go..C62 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@type...1encoding_gob.Decoder = external constant %PtrType.0
@const.29 = private constant [7 x i8] c"errorC\00", align 1
@go..C63 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.29, i32 0, i32 0), i64 6 }
@go..C64 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@const.30 = private constant [7 x i8] c"errorW\00", align 1
@go..C65 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.30, i32 0, i32 0), i64 6 }
@go..C66 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@const.31 = private constant [6 x i8] c"dataC\00", align 1
@go..C67 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.31, i32 0, i32 0), i64 5 }
@go..C68 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@const.32 = private constant [9 x i8] c"tornDown\00", align 1
@go..C69 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @const.32, i32 0, i32 0), i64 8 }
@go..C70 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@bool..d = weak constant %_type.0 { i64 1, i64 0, i32 1537849745, i8 -127, i8 1, i8 1, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash8..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal8..f to %__go_descriptor.3*), i8* null, { i8*, i64 }* @go..C71, %uncommonType.0* @go..C74, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1bool, i32 0, i32 0) }, comdat
@runtime.memhash8..f = external constant %functionDescriptor.0
@runtime.memequal8..f = external constant %functionDescriptor.0
@const.33 = private constant [5 x i8] c"bool\00", align 1
@go..C71 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.33, i32 0, i32 0), i64 4 }
@go..C72 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.33, i32 0, i32 0), i64 4 }
@go..C73 = internal global [1 x %method.0] zeroinitializer
@go..C74 = internal constant %uncommonType.0 { { i8*, i64 }* @go..C72, { i8*, i64 }* null, %IPST.45 { %method.0* getelementptr inbounds ([1 x %method.0], [1 x %method.0]* @go..C73, i32 0, i32 0), i64 0, i64 0 } }
@type...1bool = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 -1164207847, i8 54, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.3*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C75, %uncommonType.0* null, %_type.0* null }, %_type.0* @bool..d }, comdat
@const.34 = private constant [6 x i8] c"*bool\00", align 1
@go..C75 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.34, i32 0, i32 0), i64 5 }
@const.35 = private constant [4 x i8] c"ctx\00", align 1
@go..C76 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @const.35, i32 0, i32 0), i64 3 }
@go..C77 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@const.36 = private constant [7 x i8] c"cancel\00", align 1
@go..C78 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.36, i32 0, i32 0), i64 6 }
@go..C79 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@const.37 = private constant [6 x i8] c"mutex\00", align 1
@go..C80 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.37, i32 0, i32 0), i64 5 }
@go..C81 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@type...1sync.Mutex = external constant %PtrType.0
@go..C82 = internal global [17 x %structField.0] [%structField.0 { { i8*, i64 }* @go..C43, { i8*, i64 }* @go..C44, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @github_com_spolu_warp.Session..d, i32 0, i32 0), { i8*, i64 }* null, i64 0 }, %structField.0 { { i8*, i64 }* @go..C45, { i8*, i64 }* @go..C46, %_type.0* @string..d, { i8*, i64 }* null, i64 96 }, %structField.0 { { i8*, i64 }* @go..C47, { i8*, i64 }* @go..C48, %_type.0* @github_com_spolu_warp.SessionType..d, { i8*, i64 }* null, i64 128 }, %structField.0 { { i8*, i64 }* @go..C49, { i8*, i64 }* @go..C50, %_type.0* @string..d, { i8*, i64 }* null, i64 160 }, %structField.0 { { i8*, i64 }* @go..C51, { i8*, i64 }* @go..C52, %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @net.Conn..d, i32 0, i32 0), { i8*, i64 }* null, i64 192 }, %structField.0 { { i8*, i64 }* @go..C53, { i8*, i64 }* @go..C54, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1github_com_spolu_warp_vendor_github_com_hashicorp_yamux.Session, i32 0, i32 0), { i8*, i64 }* null, i64 224 }, %structField.0 { { i8*, i64 }* @go..C55, { i8*, i64 }* @go..C56, %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @net.Conn..d, i32 0, i32 0), { i8*, i64 }* null, i64 240 }, %structField.0 { { i8*, i64 }* @go..C57, { i8*, i64 }* @go..C58, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1encoding_gob.Encoder, i32 0, i32 0), { i8*, i64 }* null, i64 272 }, %structField.0 { { i8*, i64 }* @go..C59, { i8*, i64 }* @go..C60, %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @net.Conn..d, i32 0, i32 0), { i8*, i64 }* null, i64 288 }, %structField.0 { { i8*, i64 }* @go..C61, { i8*, i64 }* @go..C62, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1encoding_gob.Decoder, i32 0, i32 0), { i8*, i64 }* null, i64 320 }, %structField.0 { { i8*, i64 }* @go..C63, { i8*, i64 }* @go..C64, %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @net.Conn..d, i32 0, i32 0), { i8*, i64 }* null, i64 336 }, %structField.0 { { i8*, i64 }* @go..C65, { i8*, i64 }* @go..C66, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1encoding_gob.Encoder, i32 0, i32 0), { i8*, i64 }* null, i64 368 }, %structField.0 { { i8*, i64 }* @go..C67, { i8*, i64 }* @go..C68, %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @net.Conn..d, i32 0, i32 0), { i8*, i64 }* null, i64 384 }, %structField.0 { { i8*, i64 }* @go..C69, { i8*, i64 }* @go..C70, %_type.0* @bool..d, { i8*, i64 }* null, i64 416 }, %structField.0 { { i8*, i64 }* @go..C76, { i8*, i64 }* @go..C77, %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @context.Context..d, i32 0, i32 0), { i8*, i64 }* null, i64 432 }, %structField.0 { { i8*, i64 }* @go..C78, { i8*, i64 }* @go..C79, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.9.8.9, i32 0, i32 0), { i8*, i64 }* null, i64 464 }, %structField.0 { { i8*, i64 }* @go..C80, { i8*, i64 }* @go..C81, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1sync.Mutex, i32 0, i32 0), { i8*, i64 }* null, i64 480 }]
@io.ReadWriteCloser..d = external constant %InterfaceType.0
@const.39 = private constant [14 x i8] c"Mux error: %v\00", align 1
@sync.Mutex..d = external constant %StructType.0
@runtime.writeBarrier = external local_unnamed_addr externally_initialized global i32
@const.46 = private constant [29 x i8] c"State channel open error: %v\00", align 1
@io.Writer..d = external constant %InterfaceType.0
@const.48 = private constant [30 x i8] c"Update channel open error: %v\00", align 1
@io.Reader..d = external constant %InterfaceType.0
@github_com_spolu_warp.SessionHello..d = external constant %StructType.0
@type...1github_com_spolu_warp.SessionHello = external constant %PtrType.0
@const.50 = private constant [32 x i8] c"Initial client update error: %v\00", align 1
@const.52 = private constant [55 x i8] c"Session hello received: session=%s type=%s username=%s\00", align 1
@const.54 = private constant [29 x i8] c"Error channel open error: %v\00", align 1
@const.56 = private constant [28 x i8] c"Data channel open error: %v\00", align 1
@command_line_arguments.NewSession..f = local_unnamed_addr constant %functionDescriptor.0 { i64 ptrtoint (void ({ %Session.0*, %error.0 }*, i8*, i64, i64, %__go_descriptor.10*, i64, i64)* @command_line_arguments.NewSession to i64) }
@const.59 = private constant [9 x i8] c"%s/%s:%s\00", align 1
@type..struct.4.4x.5.f.f.0.1.4void.5.2.command_line_arguments.ss1.0.1.1command_line_arguments.Session.5 = weak constant %StructType.0 { %_type.0 { i64 16, i64 16, i32 1135461988, i8 25, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..da, i32 0, i32 0), { i8*, i64 }* @go..C83, %uncommonType.0* null, %_type.0* null }, %IPST.47 { %structField.0* getelementptr inbounds ([2 x %structField.0], [2 x %structField.0]* @go..C88, i32 0, i32 0), i64 2, i64 2 } }, comdat
@gcbits..da = weak constant [1 x i8] c"\03", comdat
@const.62 = private constant [61 x i8] c"struct { f *; ss1 **\09command_line_arguments\09daemon.Session }\00", align 1
@go..C83 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([61 x i8], [61 x i8]* @const.62, i32 0, i32 0), i64 60 }
@const.63 = private constant [2 x i8] c"f\00", align 1
@go..C84 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @const.63, i32 0, i32 0), i64 1 }
@go..C85 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @const.63, i32 0, i32 0), i64 1 }
@unsafe.Pointer..d = external constant %_type.0
@const.64 = private constant [4 x i8] c"ss1\00", align 1
@go..C86 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @const.64, i32 0, i32 0), i64 3 }
@go..C87 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@go..C88 = internal global [2 x %structField.0] [%structField.0 { { i8*, i64 }* @go..C84, { i8*, i64 }* @go..C85, %_type.0* @unsafe.Pointer..d, { i8*, i64 }* null, i64 0 }, %structField.0 { { i8*, i64 }* @go..C86, { i8*, i64 }* @go..C87, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1.1command_line_arguments.Session, i32 0, i32 0), { i8*, i64 }* null, i64 16 }]
@type..struct.4.4x.5fn.0func.8.9.8.9.5 = weak constant %StructType.0 { %_type.0 { i64 8, i64 8, i32 76, i8 25, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C89, %uncommonType.0* null, %_type.0* null }, %IPST.47 { %structField.0* getelementptr inbounds ([1 x %structField.0], [1 x %structField.0]* @go..C91, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.65 = private constant [21 x i8] c"struct { fn func() }\00", align 1
@go..C89 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @const.65, i32 0, i32 0), i64 20 }
@const.66 = private constant [3 x i8] c"fn\00", align 1
@go..C90 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @const.66, i32 0, i32 0), i64 2 }
@go..C91 = internal global [1 x %structField.0] [%structField.0 { { i8*, i64 }* @go..C90, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.9.8.9, i32 0, i32 0), { i8*, i64 }* null, i64 0 }]
@const.67 = private constant [53 x i8] c"Sending session error: session=%s code=%s message=%s\00", align 1
@github_com_spolu_warp.Error..d = external constant %StructType.0
@const.69 = private constant [49 x i8] c"Error sending session error: session=%s error=%v\00", align 1
@const.71 = private constant [54 x i8] c"The warp experienced an internal error (session: %s).\00", align 1
@const.73 = private constant [15 x i8] c"internal_error\00", align 1
@command_line_arguments.Srv..d = constant %StructType.0 { %_type.0 { i64 64, i64 64, i32 1386503207, i8 25, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..wg, i32 0, i32 0), { i8*, i64 }* @go..C92, %uncommonType.0* @go..C96, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Srv, i32 0, i32 0) }, %IPST.47 { %structField.0* getelementptr inbounds ([5 x %structField.0], [5 x %structField.0]* @go..C341, i32 0, i32 0), i64 5, i64 5 } }
@gcbits..wg = weak constant [1 x i8] c"\D5", comdat
@const.75 = private constant [35 x i8] c"\09command_line_arguments\09daemon.Srv\00", align 1
@go..C92 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([35 x i8], [35 x i8]* @const.75, i32 0, i32 0), i64 34 }
@const.76 = private constant [4 x i8] c"Srv\00", align 1
@go..C93 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @const.76, i32 0, i32 0), i64 3 }
@go..C94 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@go..C95 = internal global [1 x %method.0] zeroinitializer
@go..C96 = internal constant %uncommonType.0 { { i8*, i64 }* @go..C93, { i8*, i64 }* @go..C94, %IPST.45 { %method.0* getelementptr inbounds ([1 x %method.0], [1 x %method.0]* @go..C95, i32 0, i32 0), i64 0, i64 0 } }
@type...1command_line_arguments.Srv = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 709214841, i8 54, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.3*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C97, %uncommonType.0* @go..C131, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1.1command_line_arguments.Srv, i32 0, i32 0) }, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.Srv..d, i32 0, i32 0) }, comdat
@const.77 = private constant [36 x i8] c"*\09command_line_arguments\09daemon.Srv\00", align 1
@go..C97 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([36 x i8], [36 x i8]* @const.77, i32 0, i32 0), i64 35 }
@const.78 = private constant [4 x i8] c"Run\00", align 1
@go..C98 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @const.78, i32 0, i32 0), i64 3 }
@type..func.8context.Context.9.8error.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 -1790346456, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C99, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.46 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C100, i32 0, i32 0), i64 1, i64 1 }, %IPST.46 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C108, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.79 = private constant [37 x i8] c"func(\09context\09context.Context) error\00", align 1
@go..C99 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([37 x i8], [37 x i8]* @const.79, i32 0, i32 0), i64 36 }
@go..C100 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @context.Context..d, i32 0, i32 0)]
@error..d = weak constant %InterfaceType.0 { %_type.0 { i64 16, i64 16, i32 -2128909609, i8 20, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.interhash..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.interequal..f to %__go_descriptor.3*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..da, i32 0, i32 0), { i8*, i64 }* @go..C101, %uncommonType.0* @go..C104, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1error, i32 0, i32 0) }, %IPST.48 { %imethod.0* getelementptr inbounds ([1 x %imethod.0], [1 x %imethod.0]* @go..C107, i32 0, i32 0), i64 1, i64 1 } }, comdat
@runtime.interhash..f = external constant %functionDescriptor.0
@runtime.interequal..f = external constant %functionDescriptor.0
@const.80 = private constant [6 x i8] c"error\00", align 1
@go..C101 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.80, i32 0, i32 0), i64 5 }
@go..C102 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.80, i32 0, i32 0), i64 5 }
@go..C103 = internal global [1 x %method.0] zeroinitializer
@go..C104 = internal constant %uncommonType.0 { { i8*, i64 }* @go..C102, { i8*, i64 }* null, %IPST.45 { %method.0* getelementptr inbounds ([1 x %method.0], [1 x %method.0]* @go..C103, i32 0, i32 0), i64 0, i64 0 } }
@type...1error = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 297184633, i8 54, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.3*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C105, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @error..d, i32 0, i32 0) }, comdat
@const.81 = private constant [7 x i8] c"*error\00", align 1
@go..C105 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.81, i32 0, i32 0), i64 6 }
@const.82 = private constant [6 x i8] c"Error\00", align 1
@go..C106 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.82, i32 0, i32 0), i64 5 }
@go..C107 = internal global [1 x %imethod.0] [%imethod.0 { { i8*, i64 }* @go..C106, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.9.8string.9, i32 0, i32 0) }]
@go..C108 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @error..d, i32 0, i32 0)]
@type..func.8.1command_line_arguments.Srv.3context.Context.9.8error.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 745574312, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C109, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.46 { %_type.0** getelementptr inbounds ([2 x %_type.0*], [2 x %_type.0*]* @go..C110, i32 0, i32 0), i64 2, i64 2 }, %IPST.46 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C111, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.83 = private constant [74 x i8] c"func(*\09command_line_arguments\09daemon.Srv, \09context\09context.Context) error\00", align 1
@go..C109 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([74 x i8], [74 x i8]* @const.83, i32 0, i32 0), i64 73 }
@go..C110 = internal global [2 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Srv, i32 0, i32 0), %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @context.Context..d, i32 0, i32 0)]
@go..C111 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @error..d, i32 0, i32 0)]
@const.84 = private constant [7 x i8] c"handle\00", align 1
@go..C112 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.84, i32 0, i32 0), i64 6 }
@go..C113 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@type..func.8context.Context.3net.Conn.9.8error.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 718280616, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C114, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.46 { %_type.0** getelementptr inbounds ([2 x %_type.0*], [2 x %_type.0*]* @go..C115, i32 0, i32 0), i64 2, i64 2 }, %IPST.46 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C116, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.85 = private constant [52 x i8] c"func(\09context\09context.Context, \09net\09net.Conn) error\00", align 1
@go..C114 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([52 x i8], [52 x i8]* @const.85, i32 0, i32 0), i64 51 }
@go..C115 = internal global [2 x %_type.0*] [%_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @context.Context..d, i32 0, i32 0), %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @net.Conn..d, i32 0, i32 0)]
@go..C116 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @error..d, i32 0, i32 0)]
@type..func.8.1command_line_arguments.Srv.3context.Context.3net.Conn.9.8error.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 1467861160, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C117, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.46 { %_type.0** getelementptr inbounds ([3 x %_type.0*], [3 x %_type.0*]* @go..C118, i32 0, i32 0), i64 3, i64 3 }, %IPST.46 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C119, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.86 = private constant [89 x i8] c"func(*\09command_line_arguments\09daemon.Srv, \09context\09context.Context, \09net\09net.Conn) error\00", align 1
@go..C117 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([89 x i8], [89 x i8]* @const.86, i32 0, i32 0), i64 88 }
@go..C118 = internal global [3 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Srv, i32 0, i32 0), %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @context.Context..d, i32 0, i32 0), %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @net.Conn..d, i32 0, i32 0)]
@go..C119 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @error..d, i32 0, i32 0)]
@const.87 = private constant [11 x i8] c"handleHost\00", align 1
@go..C120 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @const.87, i32 0, i32 0), i64 10 }
@go..C121 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@type..func.8context.Context.3.1command_line_arguments.Session.9.8error.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 -1222615704, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C122, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.46 { %_type.0** getelementptr inbounds ([2 x %_type.0*], [2 x %_type.0*]* @go..C123, i32 0, i32 0), i64 2, i64 2 }, %IPST.46 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C124, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.88 = private constant [78 x i8] c"func(\09context\09context.Context, *\09command_line_arguments\09daemon.Session) error\00", align 1
@go..C122 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([78 x i8], [78 x i8]* @const.88, i32 0, i32 0), i64 77 }
@go..C123 = internal global [2 x %_type.0*] [%_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @context.Context..d, i32 0, i32 0), %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Session, i32 0, i32 0)]
@go..C124 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @error..d, i32 0, i32 0)]
@type..func.8.1command_line_arguments.Srv.3context.Context.3.1command_line_arguments.Session.9.8error.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 1881035816, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C125, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.46 { %_type.0** getelementptr inbounds ([3 x %_type.0*], [3 x %_type.0*]* @go..C126, i32 0, i32 0), i64 3, i64 3 }, %IPST.46 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C127, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.89 = private constant [115 x i8] c"func(*\09command_line_arguments\09daemon.Srv, \09context\09context.Context, *\09command_line_arguments\09daemon.Session) error\00", align 1
@go..C125 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([115 x i8], [115 x i8]* @const.89, i32 0, i32 0), i64 114 }
@go..C126 = internal global [3 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Srv, i32 0, i32 0), %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @context.Context..d, i32 0, i32 0), %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Session, i32 0, i32 0)]
@go..C127 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @error..d, i32 0, i32 0)]
@const.90 = private constant [18 x i8] c"handleShellClient\00", align 1
@go..C128 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @const.90, i32 0, i32 0), i64 17 }
@go..C129 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@go..C130 = internal global [4 x %method.0] [%method.0 { { i8*, i64 }* @go..C98, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8context.Context.9.8error.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.Srv.3context.Context.9.8error.9, i32 0, i32 0), i8* bitcast ({ i64, i64 } (i8*, %Srv.0*, i64, i64)* @command_line_arguments.Srv.Run to i8*) }, %method.0 { { i8*, i64 }* @go..C112, { i8*, i64 }* @go..C113, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8context.Context.3net.Conn.9.8error.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.Srv.3context.Context.3net.Conn.9.8error.9, i32 0, i32 0), i8* bitcast ({ i64, i64 } (i8*, %Srv.0*, i64, i64, i64, i64)* @command_line_arguments.Srv.handle to i8*) }, %method.0 { { i8*, i64 }* @go..C120, { i8*, i64 }* @go..C121, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8context.Context.3.1command_line_arguments.Session.9.8error.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.Srv.3context.Context.3.1command_line_arguments.Session.9.8error.9, i32 0, i32 0), i8* bitcast ({ i64, i64 } (i8*, %Srv.0*, i64, i64, %Session.0*)* @command_line_arguments.Srv.handleHost to i8*) }, %method.0 { { i8*, i64 }* @go..C128, { i8*, i64 }* @go..C129, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8context.Context.3.1command_line_arguments.Session.9.8error.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.Srv.3context.Context.3.1command_line_arguments.Session.9.8error.9, i32 0, i32 0), i8* bitcast ({ i64, i64 } (i8*, %Srv.0*, i64, i64, %Session.0*)* @command_line_arguments.Srv.handleShellClient to i8*) }]
@go..C131 = internal constant %uncommonType.0 { { i8*, i64 }* null, { i8*, i64 }* null, %IPST.45 { %method.0* getelementptr inbounds ([4 x %method.0], [4 x %method.0]* @go..C130, i32 0, i32 0), i64 4, i64 4 } }
@type...1.1command_line_arguments.Srv = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 -1537464423, i8 54, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.3*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C132, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Srv, i32 0, i32 0) }, comdat
@const.91 = private constant [37 x i8] c"**\09command_line_arguments\09daemon.Srv\00", align 1
@go..C132 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([37 x i8], [37 x i8]* @const.91, i32 0, i32 0), i64 36 }
@const.92 = private constant [8 x i8] c"address\00", align 1
@go..C133 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.92, i32 0, i32 0), i64 7 }
@go..C134 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@const.93 = private constant [9 x i8] c"certFile\00", align 1
@go..C135 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @const.93, i32 0, i32 0), i64 8 }
@go..C136 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@const.94 = private constant [8 x i8] c"keyFile\00", align 1
@go..C137 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.94, i32 0, i32 0), i64 7 }
@go..C138 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@const.95 = private constant [6 x i8] c"warps\00", align 1
@go..C139 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.95, i32 0, i32 0), i64 5 }
@go..C140 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@type..map.6string.7.1command_line_arguments.Warp = weak constant %MapType.0 { %_type.0 { i64 8, i64 8, i32 1003805267, i8 21, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C141, %uncommonType.0* null, %_type.0* null }, %_type.0* @string..d, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Warp, i32 0, i32 0), %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Warp.2overflow.0.1.4void.5.5, i32 0, i32 0), %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Warp.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Warp.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5, i32 0, i32 0), i8 16, i8 0, i8 8, i8 0, i16 208, i8 1, i8 1 }, comdat
@const.96 = private constant [48 x i8] c"map[string]*\09command_line_arguments\09daemon.Warp\00", align 1
@go..C141 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([48 x i8], [48 x i8]* @const.96, i32 0, i32 0), i64 47 }
@type...1command_line_arguments.Warp = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 -1292209239, i8 54, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.3*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C142, %uncommonType.0* @go..C192, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1.1command_line_arguments.Warp, i32 0, i32 0) }, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.Warp..d, i32 0, i32 0) }, comdat
@const.97 = private constant [37 x i8] c"*\09command_line_arguments\09daemon.Warp\00", align 1
@go..C142 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([37 x i8], [37 x i8]* @const.97, i32 0, i32 0), i64 36 }
@const.98 = private constant [14 x i8] c"CientSessions\00", align 1
@go..C143 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @const.98, i32 0, i32 0), i64 13 }
@type..func.8context.Context.9.8.6.7.1command_line_arguments.Session.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 1883613992, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C144, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.46 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C145, i32 0, i32 0), i64 1, i64 1 }, %IPST.46 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C147, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.99 = private constant [73 x i8] c"func(\09context\09context.Context) []*\09command_line_arguments\09daemon.Session\00", align 1
@go..C144 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([73 x i8], [73 x i8]* @const.99, i32 0, i32 0), i64 72 }
@go..C145 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @context.Context..d, i32 0, i32 0)]
@type...6.7.1command_line_arguments.Session = weak constant %SliceType.0 { %_type.0 { i64 24, i64 8, i32 -1131979881, i8 23, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C146, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Session, i32 0, i32 0) }, comdat
@const.100 = private constant [42 x i8] c"[]*\09command_line_arguments\09daemon.Session\00", align 1
@go..C146 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([42 x i8], [42 x i8]* @const.100, i32 0, i32 0), i64 41 }
@go..C147 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7.1command_line_arguments.Session, i32 0, i32 0)]
@type..func.8.1command_line_arguments.Warp.3context.Context.9.8.6.7.1command_line_arguments.Session.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 503506344, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C148, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.46 { %_type.0** getelementptr inbounds ([2 x %_type.0*], [2 x %_type.0*]* @go..C149, i32 0, i32 0), i64 2, i64 2 }, %IPST.46 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C150, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.101 = private constant [111 x i8] c"func(*\09command_line_arguments\09daemon.Warp, \09context\09context.Context) []*\09command_line_arguments\09daemon.Session\00", align 1
@go..C148 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([111 x i8], [111 x i8]* @const.101, i32 0, i32 0), i64 110 }
@go..C149 = internal global [2 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Warp, i32 0, i32 0), %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @context.Context..d, i32 0, i32 0)]
@go..C150 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7.1command_line_arguments.Session, i32 0, i32 0)]
@const.102 = private constant [6 x i8] c"State\00", align 1
@go..C151 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.102, i32 0, i32 0), i64 5 }
@type..func.8context.Context.9.8github_com_spolu_warp.State.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 -515999064, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C152, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.46 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C153, i32 0, i32 0), i64 1, i64 1 }, %IPST.46 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C154, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.103 = private constant [65 x i8] c"func(\09context\09context.Context) \09github_com_spolu_warp\09warp.State\00", align 1
@go..C152 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([65 x i8], [65 x i8]* @const.103, i32 0, i32 0), i64 64 }
@go..C153 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @context.Context..d, i32 0, i32 0)]
@github_com_spolu_warp.State..d = external constant %StructType.0
@go..C154 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @github_com_spolu_warp.State..d, i32 0, i32 0)]
@type..func.8.1command_line_arguments.Warp.3context.Context.9.8github_com_spolu_warp.State.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 -1896106712, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C155, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.46 { %_type.0** getelementptr inbounds ([2 x %_type.0*], [2 x %_type.0*]* @go..C156, i32 0, i32 0), i64 2, i64 2 }, %IPST.46 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C157, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.104 = private constant [103 x i8] c"func(*\09command_line_arguments\09daemon.Warp, \09context\09context.Context) \09github_com_spolu_warp\09warp.State\00", align 1
@go..C155 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([103 x i8], [103 x i8]* @const.104, i32 0, i32 0), i64 102 }
@go..C156 = internal global [2 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Warp, i32 0, i32 0), %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @context.Context..d, i32 0, i32 0)]
@go..C157 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @github_com_spolu_warp.State..d, i32 0, i32 0)]
@go..C158 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @const.87, i32 0, i32 0), i64 10 }
@go..C159 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@type..func.8context.Context.3.1command_line_arguments.Session.9.8.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 1883613096, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C160, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.46 { %_type.0** getelementptr inbounds ([2 x %_type.0*], [2 x %_type.0*]* @go..C161, i32 0, i32 0), i64 2, i64 2 }, %IPST.46 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C162, i32 0, i32 0), i64 0, i64 0 } }, comdat
@const.105 = private constant [72 x i8] c"func(\09context\09context.Context, *\09command_line_arguments\09daemon.Session)\00", align 1
@go..C160 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([72 x i8], [72 x i8]* @const.105, i32 0, i32 0), i64 71 }
@go..C161 = internal global [2 x %_type.0*] [%_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @context.Context..d, i32 0, i32 0), %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Session, i32 0, i32 0)]
@go..C162 = internal global [1 x %_type.0*] zeroinitializer
@type..func.8.1command_line_arguments.Warp.3context.Context.3.1command_line_arguments.Session.9.8.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 1071236200, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C163, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.46 { %_type.0** getelementptr inbounds ([3 x %_type.0*], [3 x %_type.0*]* @go..C164, i32 0, i32 0), i64 3, i64 3 }, %IPST.46 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C165, i32 0, i32 0), i64 0, i64 0 } }, comdat
@const.106 = private constant [110 x i8] c"func(*\09command_line_arguments\09daemon.Warp, \09context\09context.Context, *\09command_line_arguments\09daemon.Session)\00", align 1
@go..C163 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([110 x i8], [110 x i8]* @const.106, i32 0, i32 0), i64 109 }
@go..C164 = internal global [3 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Warp, i32 0, i32 0), %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @context.Context..d, i32 0, i32 0), %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Session, i32 0, i32 0)]
@go..C165 = internal global [1 x %_type.0*] zeroinitializer
@go..C166 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @const.90, i32 0, i32 0), i64 17 }
@go..C167 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@const.107 = private constant [12 x i8] c"rcvHostData\00", align 1
@go..C168 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @const.107, i32 0, i32 0), i64 11 }
@go..C169 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@type..func.8context.Context.3.1command_line_arguments.Session.3.6.7uint8.9.8.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 1396783912, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C170, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.46 { %_type.0** getelementptr inbounds ([3 x %_type.0*], [3 x %_type.0*]* @go..C177, i32 0, i32 0), i64 3, i64 3 }, %IPST.46 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C178, i32 0, i32 0), i64 0, i64 0 } }, comdat
@const.108 = private constant [81 x i8] c"func(\09context\09context.Context, *\09command_line_arguments\09daemon.Session, []uint8)\00", align 1
@go..C170 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([81 x i8], [81 x i8]* @const.108, i32 0, i32 0), i64 80 }
@type...6.7uint8 = weak constant %SliceType.0 { %_type.0 { i64 24, i64 8, i32 264632103, i8 23, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C171, %uncommonType.0* null, %_type.0* null }, %_type.0* @uint8..d }, comdat
@const.109 = private constant [8 x i8] c"[]uint8\00", align 1
@go..C171 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.109, i32 0, i32 0), i64 7 }
@uint8..d = weak constant %_type.0 { i64 1, i64 0, i32 264632089, i8 -120, i8 1, i8 1, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash8..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal8..f to %__go_descriptor.3*), i8* null, { i8*, i64 }* @go..C172, %uncommonType.0* @go..C175, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1uint8, i32 0, i32 0) }, comdat
@const.110 = private constant [6 x i8] c"uint8\00", align 1
@go..C172 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.110, i32 0, i32 0), i64 5 }
@go..C173 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.110, i32 0, i32 0), i64 5 }
@go..C174 = internal global [1 x %method.0] zeroinitializer
@go..C175 = internal constant %uncommonType.0 { { i8*, i64 }* @go..C173, { i8*, i64 }* null, %IPST.45 { %method.0* getelementptr inbounds ([1 x %method.0], [1 x %method.0]* @go..C174, i32 0, i32 0), i64 0, i64 0 } }
@type...1uint8 = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 -60853863, i8 54, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.3*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C176, %uncommonType.0* null, %_type.0* null }, %_type.0* @uint8..d }, comdat
@const.111 = private constant [7 x i8] c"*uint8\00", align 1
@go..C176 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.111, i32 0, i32 0), i64 6 }
@go..C177 = internal global [3 x %_type.0*] [%_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @context.Context..d, i32 0, i32 0), %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Session, i32 0, i32 0), %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7uint8, i32 0, i32 0)]
@go..C178 = internal global [1 x %_type.0*] zeroinitializer
@type..func.8.1command_line_arguments.Warp.3context.Context.3.1command_line_arguments.Session.3.6.7uint8.9.8.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 97577832, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C179, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.46 { %_type.0** getelementptr inbounds ([4 x %_type.0*], [4 x %_type.0*]* @go..C180, i32 0, i32 0), i64 4, i64 4 }, %IPST.46 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C181, i32 0, i32 0), i64 0, i64 0 } }, comdat
@const.112 = private constant [119 x i8] c"func(*\09command_line_arguments\09daemon.Warp, \09context\09context.Context, *\09command_line_arguments\09daemon.Session, []uint8)\00", align 1
@go..C179 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([119 x i8], [119 x i8]* @const.112, i32 0, i32 0), i64 118 }
@go..C180 = internal global [4 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Warp, i32 0, i32 0), %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @context.Context..d, i32 0, i32 0), %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Session, i32 0, i32 0), %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7uint8, i32 0, i32 0)]
@go..C181 = internal global [1 x %_type.0*] zeroinitializer
@const.113 = private constant [19 x i8] c"rcvShellClientData\00", align 1
@go..C182 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @const.113, i32 0, i32 0), i64 18 }
@go..C183 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@const.114 = private constant [21 x i8] c"updateClientSessions\00", align 1
@go..C184 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @const.114, i32 0, i32 0), i64 20 }
@go..C185 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@type..func.8.1command_line_arguments.Warp.3context.Context.9.8.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 -64225304, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C186, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.46 { %_type.0** getelementptr inbounds ([2 x %_type.0*], [2 x %_type.0*]* @go..C187, i32 0, i32 0), i64 2, i64 2 }, %IPST.46 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C188, i32 0, i32 0), i64 0, i64 0 } }, comdat
@const.115 = private constant [69 x i8] c"func(*\09command_line_arguments\09daemon.Warp, \09context\09context.Context)\00", align 1
@go..C186 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([69 x i8], [69 x i8]* @const.115, i32 0, i32 0), i64 68 }
@go..C187 = internal global [2 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Warp, i32 0, i32 0), %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @context.Context..d, i32 0, i32 0)]
@go..C188 = internal global [1 x %_type.0*] zeroinitializer
@const.116 = private constant [11 x i8] c"updateHost\00", align 1
@go..C189 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @const.116, i32 0, i32 0), i64 10 }
@go..C190 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@go..C191 = internal global [8 x %method.0] [%method.0 { { i8*, i64 }* @go..C143, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8context.Context.9.8.6.7.1command_line_arguments.Session.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.Warp.3context.Context.9.8.6.7.1command_line_arguments.Session.9, i32 0, i32 0), i8* bitcast (void (%IPST.4*, i8*, %Warp.0*, i64, i64)* @command_line_arguments.Warp.CientSessions to i8*) }, %method.0 { { i8*, i64 }* @go..C151, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8context.Context.9.8github_com_spolu_warp.State.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.Warp.3context.Context.9.8github_com_spolu_warp.State.9, i32 0, i32 0), i8* bitcast (void (%State.0*, i8*, %Warp.0*, i64, i64)* @command_line_arguments.Warp.State to i8*) }, %method.0 { { i8*, i64 }* @go..C158, { i8*, i64 }* @go..C159, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8context.Context.3.1command_line_arguments.Session.9.8.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.Warp.3context.Context.3.1command_line_arguments.Session.9.8.9, i32 0, i32 0), i8* bitcast (void (i8*, %Warp.0*, i64, i64, %Session.0*)* @command_line_arguments.Warp.handleHost to i8*) }, %method.0 { { i8*, i64 }* @go..C166, { i8*, i64 }* @go..C167, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8context.Context.3.1command_line_arguments.Session.9.8.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.Warp.3context.Context.3.1command_line_arguments.Session.9.8.9, i32 0, i32 0), i8* bitcast (void (i8*, %Warp.0*, i64, i64, %Session.0*)* @command_line_arguments.Warp.handleShellClient to i8*) }, %method.0 { { i8*, i64 }* @go..C168, { i8*, i64 }* @go..C169, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8context.Context.3.1command_line_arguments.Session.3.6.7uint8.9.8.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.Warp.3context.Context.3.1command_line_arguments.Session.3.6.7uint8.9.8.9, i32 0, i32 0), i8* bitcast (void (i8*, %Warp.0*, i64, i64, %Session.0*, { i8*, i64, i64 }*)* @command_line_arguments.Warp.rcvHostData to i8*) }, %method.0 { { i8*, i64 }* @go..C182, { i8*, i64 }* @go..C183, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8context.Context.3.1command_line_arguments.Session.3.6.7uint8.9.8.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.Warp.3context.Context.3.1command_line_arguments.Session.3.6.7uint8.9.8.9, i32 0, i32 0), i8* bitcast (void (i8*, %Warp.0*, i64, i64, %Session.0*, { i8*, i64, i64 }*)* @command_line_arguments.Warp.rcvShellClientData to i8*) }, %method.0 { { i8*, i64 }* @go..C184, { i8*, i64 }* @go..C185, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8context.Context.9.8.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.Warp.3context.Context.9.8.9, i32 0, i32 0), i8* bitcast (void (i8*, %Warp.0*, i64, i64)* @command_line_arguments.Warp.updateClientSessions to i8*) }, %method.0 { { i8*, i64 }* @go..C189, { i8*, i64 }* @go..C190, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8context.Context.9.8.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.Warp.3context.Context.9.8.9, i32 0, i32 0), i8* bitcast (void (i8*, %Warp.0*, i64, i64)* @command_line_arguments.Warp.updateHost to i8*) }]
@go..C192 = internal constant %uncommonType.0 { { i8*, i64 }* null, { i8*, i64 }* null, %IPST.45 { %method.0* getelementptr inbounds ([8 x %method.0], [8 x %method.0]* @go..C191, i32 0, i32 0), i64 8, i64 8 } }
@type...1.1command_line_arguments.Warp = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 799488665, i8 54, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.3*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C193, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Warp, i32 0, i32 0) }, comdat
@const.117 = private constant [38 x i8] c"**\09command_line_arguments\09daemon.Warp\00", align 1
@go..C193 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([38 x i8], [38 x i8]* @const.117, i32 0, i32 0), i64 37 }
@command_line_arguments.Warp..d = constant %StructType.0 { %_type.0 { i64 64, i64 64, i32 -886069446, i8 25, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..rh, i32 0, i32 0), { i8*, i64 }* @go..C194, %uncommonType.0* @go..C198, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Warp, i32 0, i32 0) }, %IPST.47 { %structField.0* getelementptr inbounds ([6 x %structField.0], [6 x %structField.0]* @go..C318, i32 0, i32 0), i64 6, i64 6 } }
@gcbits..rh = weak constant [1 x i8] c"\F1", comdat
@const.118 = private constant [36 x i8] c"\09command_line_arguments\09daemon.Warp\00", align 1
@go..C194 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([36 x i8], [36 x i8]* @const.118, i32 0, i32 0), i64 35 }
@const.119 = private constant [5 x i8] c"Warp\00", align 1
@go..C195 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.119, i32 0, i32 0), i64 4 }
@go..C196 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@go..C197 = internal global [1 x %method.0] zeroinitializer
@go..C198 = internal constant %uncommonType.0 { { i8*, i64 }* @go..C195, { i8*, i64 }* @go..C196, %IPST.45 { %method.0* getelementptr inbounds ([1 x %method.0], [1 x %method.0]* @go..C197, i32 0, i32 0), i64 0, i64 0 } }
@const.120 = private constant [6 x i8] c"token\00", align 1
@go..C199 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.120, i32 0, i32 0), i64 5 }
@go..C200 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@const.121 = private constant [11 x i8] c"windowSize\00", align 1
@go..C201 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @const.121, i32 0, i32 0), i64 10 }
@go..C202 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@github_com_spolu_warp.Size..d = external constant %StructType.0
@const.122 = private constant [5 x i8] c"host\00", align 1
@go..C203 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.122, i32 0, i32 0), i64 4 }
@go..C204 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@type...1command_line_arguments.HostState = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 -1055558119, i8 54, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.3*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C205, %uncommonType.0* @go..C214, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1.1command_line_arguments.HostState, i32 0, i32 0) }, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.HostState..d, i32 0, i32 0) }, comdat
@const.123 = private constant [42 x i8] c"*\09command_line_arguments\09daemon.HostState\00", align 1
@go..C205 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([42 x i8], [42 x i8]* @const.123, i32 0, i32 0), i64 41 }
@const.124 = private constant [5 x i8] c"User\00", align 1
@go..C206 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.124, i32 0, i32 0), i64 4 }
@type..func.8context.Context.9.8github_com_spolu_warp.User.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 1035887144, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C207, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.46 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C208, i32 0, i32 0), i64 1, i64 1 }, %IPST.46 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C209, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.125 = private constant [64 x i8] c"func(\09context\09context.Context) \09github_com_spolu_warp\09warp.User\00", align 1
@go..C207 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([64 x i8], [64 x i8]* @const.125, i32 0, i32 0), i64 63 }
@go..C208 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @context.Context..d, i32 0, i32 0)]
@github_com_spolu_warp.User..d = external constant %StructType.0
@go..C209 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @github_com_spolu_warp.User..d, i32 0, i32 0)]
@type..func.8.1command_line_arguments.HostState.3context.Context.9.8github_com_spolu_warp.User.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 -1361319256, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C210, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.46 { %_type.0** getelementptr inbounds ([2 x %_type.0*], [2 x %_type.0*]* @go..C211, i32 0, i32 0), i64 2, i64 2 }, %IPST.46 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C212, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.126 = private constant [107 x i8] c"func(*\09command_line_arguments\09daemon.HostState, \09context\09context.Context) \09github_com_spolu_warp\09warp.User\00", align 1
@go..C210 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([107 x i8], [107 x i8]* @const.126, i32 0, i32 0), i64 106 }
@go..C211 = internal global [2 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.HostState, i32 0, i32 0), %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @context.Context..d, i32 0, i32 0)]
@go..C212 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @github_com_spolu_warp.User..d, i32 0, i32 0)]
@go..C213 = internal global [1 x %method.0] [%method.0 { { i8*, i64 }* @go..C206, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8context.Context.9.8github_com_spolu_warp.User.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.HostState.3context.Context.9.8github_com_spolu_warp.User.9, i32 0, i32 0), i8* bitcast (void (%User.0*, i8*, %HostState.0*, i64, i64)* @command_line_arguments.HostState.User to i8*) }]
@go..C214 = internal constant %uncommonType.0 { { i8*, i64 }* null, { i8*, i64 }* null, %IPST.45 { %method.0* getelementptr inbounds ([1 x %method.0], [1 x %method.0]* @go..C213, i32 0, i32 0), i64 1, i64 1 } }
@type...1.1command_line_arguments.HostState = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 290939289, i8 54, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.3*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C215, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.HostState, i32 0, i32 0) }, comdat
@const.127 = private constant [43 x i8] c"**\09command_line_arguments\09daemon.HostState\00", align 1
@go..C215 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([43 x i8], [43 x i8]* @const.127, i32 0, i32 0), i64 42 }
@command_line_arguments.HostState..d = constant %StructType.0 { %_type.0 { i64 56, i64 56, i32 -871278751, i8 25, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..fd, i32 0, i32 0), { i8*, i64 }* @go..C216, %uncommonType.0* @go..C220, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.HostState, i32 0, i32 0) }, %IPST.47 { %structField.0* getelementptr inbounds ([2 x %structField.0], [2 x %structField.0]* @go..C289, i32 0, i32 0), i64 2, i64 2 } }
@gcbits..fd = weak constant [1 x i8] c"e", comdat
@const.128 = private constant [41 x i8] c"\09command_line_arguments\09daemon.HostState\00", align 1
@go..C216 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([41 x i8], [41 x i8]* @const.128, i32 0, i32 0), i64 40 }
@const.129 = private constant [10 x i8] c"HostState\00", align 1
@go..C217 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @const.129, i32 0, i32 0), i64 9 }
@go..C218 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@go..C219 = internal global [1 x %method.0] zeroinitializer
@go..C220 = internal constant %uncommonType.0 { { i8*, i64 }* @go..C217, { i8*, i64 }* @go..C218, %IPST.45 { %method.0* getelementptr inbounds ([1 x %method.0], [1 x %method.0]* @go..C219, i32 0, i32 0), i64 0, i64 0 } }
@const.130 = private constant [10 x i8] c"UserState\00", align 1
@go..C221 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @const.130, i32 0, i32 0), i64 9 }
@command_line_arguments.UserState..d = constant %StructType.0 { %_type.0 { i64 48, i64 48, i32 -1436086352, i8 25, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..fb, i32 0, i32 0), { i8*, i64 }* @go..C222, %uncommonType.0* @go..C226, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.UserState, i32 0, i32 0) }, %IPST.47 { %structField.0* getelementptr inbounds ([4 x %structField.0], [4 x %structField.0]* @go..C286, i32 0, i32 0), i64 4, i64 4 } }
@gcbits..fb = weak constant [1 x i8] c"%", comdat
@const.131 = private constant [41 x i8] c"\09command_line_arguments\09daemon.UserState\00", align 1
@go..C222 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([41 x i8], [41 x i8]* @const.131, i32 0, i32 0), i64 40 }
@go..C223 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @const.130, i32 0, i32 0), i64 9 }
@go..C224 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@go..C225 = internal global [1 x %method.0] zeroinitializer
@go..C226 = internal constant %uncommonType.0 { { i8*, i64 }* @go..C223, { i8*, i64 }* @go..C224, %IPST.45 { %method.0* getelementptr inbounds ([1 x %method.0], [1 x %method.0]* @go..C225, i32 0, i32 0), i64 0, i64 0 } }
@type...1command_line_arguments.UserState = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 -1502545143, i8 54, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.3*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C227, %uncommonType.0* @go..C233, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1.1command_line_arguments.UserState, i32 0, i32 0) }, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.UserState..d, i32 0, i32 0) }, comdat
@const.132 = private constant [42 x i8] c"*\09command_line_arguments\09daemon.UserState\00", align 1
@go..C227 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([42 x i8], [42 x i8]* @const.132, i32 0, i32 0), i64 41 }
@go..C228 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.124, i32 0, i32 0), i64 4 }
@type..func.8.1command_line_arguments.UserState.3context.Context.9.8github_com_spolu_warp.User.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 1514965160, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C229, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.46 { %_type.0** getelementptr inbounds ([2 x %_type.0*], [2 x %_type.0*]* @go..C230, i32 0, i32 0), i64 2, i64 2 }, %IPST.46 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C231, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.133 = private constant [107 x i8] c"func(*\09command_line_arguments\09daemon.UserState, \09context\09context.Context) \09github_com_spolu_warp\09warp.User\00", align 1
@go..C229 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([107 x i8], [107 x i8]* @const.133, i32 0, i32 0), i64 106 }
@go..C230 = internal global [2 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.UserState, i32 0, i32 0), %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @context.Context..d, i32 0, i32 0)]
@go..C231 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @github_com_spolu_warp.User..d, i32 0, i32 0)]
@go..C232 = internal global [1 x %method.0] [%method.0 { { i8*, i64 }* @go..C228, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8context.Context.9.8github_com_spolu_warp.User.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.UserState.3context.Context.9.8github_com_spolu_warp.User.9, i32 0, i32 0), i8* bitcast (void (%User.0*, i8*, %UserState.0*, i64, i64)* @command_line_arguments.UserState.User to i8*) }]
@go..C233 = internal constant %uncommonType.0 { { i8*, i64 }* null, { i8*, i64 }* null, %IPST.45 { %method.0* getelementptr inbounds ([1 x %method.0], [1 x %method.0]* @go..C232, i32 0, i32 0), i64 1, i64 1 } }
@type...1.1command_line_arguments.UserState = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 1729081497, i8 54, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.3*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C234, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.UserState, i32 0, i32 0) }, comdat
@const.134 = private constant [43 x i8] c"**\09command_line_arguments\09daemon.UserState\00", align 1
@go..C234 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([43 x i8], [43 x i8]* @const.134, i32 0, i32 0), i64 42 }
@go..C235 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.120, i32 0, i32 0), i64 5 }
@go..C236 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@go..C237 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @const.22, i32 0, i32 0), i64 8 }
@go..C238 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@const.135 = private constant [5 x i8] c"mode\00", align 1
@go..C239 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.135, i32 0, i32 0), i64 4 }
@go..C240 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@github_com_spolu_warp.Mode..d = external constant %_type.0
@const.136 = private constant [9 x i8] c"sessions\00", align 1
@go..C241 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @const.136, i32 0, i32 0), i64 8 }
@go..C242 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@type..map.6string.7.1command_line_arguments.Session = weak constant %MapType.0 { %_type.0 { i64 8, i64 8, i32 1164034611, i8 21, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C243, %uncommonType.0* null, %_type.0* null }, %_type.0* @string..d, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Session, i32 0, i32 0), %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Session.2overflow.0.1.4void.5.5, i32 0, i32 0), %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Session.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Session.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5, i32 0, i32 0), i8 16, i8 0, i8 8, i8 0, i16 208, i8 1, i8 1 }, comdat
@const.137 = private constant [51 x i8] c"map[string]*\09command_line_arguments\09daemon.Session\00", align 1
@go..C243 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([51 x i8], [51 x i8]* @const.137, i32 0, i32 0), i64 50 }
@type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Session.2overflow.0.1.4void.5.5 = weak constant %StructType.0 { %_type.0 { i64 208, i64 208, i32 -1434408060, i8 25, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @gcbits..kwkEGba, i32 0, i32 0), { i8*, i64 }* @go..C244, %uncommonType.0* null, %_type.0* null }, %IPST.47 { %structField.0* getelementptr inbounds ([4 x %structField.0], [4 x %structField.0]* @go..C253, i32 0, i32 0), i64 4, i64 4 } }, comdat
@gcbits..kwkEGba = weak constant [4 x i8] c"\AA\AA\FE\03", comdat
@const.138 = private constant [107 x i8] c"struct { topbits [8]uint8; keys [8]string; values [8]*\09command_line_arguments\09daemon.Session; overflow * }\00", align 1
@go..C244 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([107 x i8], [107 x i8]* @const.138, i32 0, i32 0), i64 106 }
@const.139 = private constant [8 x i8] c"topbits\00", align 1
@go..C245 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.139, i32 0, i32 0), i64 7 }
@type...68x.7uint8 = weak constant %ArrayType.0 { %_type.0 { i64 8, i64 0, i32 529264193, i8 -111, i8 1, i8 1, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* null, { i8*, i64 }* @go..C246, %uncommonType.0* null, %_type.0* null }, %_type.0* @uint8..d, %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7uint8, i32 0, i32 0), i64 8 }, comdat
@const.140 = private constant [9 x i8] c"[8]uint8\00", align 1
@go..C246 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @const.140, i32 0, i32 0), i64 8 }
@const.141 = private constant [5 x i8] c"keys\00", align 1
@go..C247 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.141, i32 0, i32 0), i64 4 }
@type...68x.7string = weak constant %ArrayType.0 { %_type.0 { i64 128, i64 120, i32 297061699, i8 17, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @gcbits..wkwa, i32 0, i32 0), { i8*, i64 }* @go..C248, %uncommonType.0* null, %_type.0* null }, %_type.0* @string..d, %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7string, i32 0, i32 0), i64 8 }, comdat
@gcbits..wkwa = weak constant [2 x i8] c"UU", comdat
@const.142 = private constant [10 x i8] c"[8]string\00", align 1
@go..C248 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @const.142, i32 0, i32 0), i64 9 }
@type...6.7string = weak constant %SliceType.0 { %_type.0 { i64 24, i64 8, i32 -1998952792, i8 23, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C249, %uncommonType.0* null, %_type.0* null }, %_type.0* @string..d }, comdat
@const.143 = private constant [9 x i8] c"[]string\00", align 1
@go..C249 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @const.143, i32 0, i32 0), i64 8 }
@const.144 = private constant [7 x i8] c"values\00", align 1
@go..C250 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.144, i32 0, i32 0), i64 6 }
@type...68x.7.1command_line_arguments.Session = weak constant %ArrayType.0 { %_type.0 { i64 64, i64 64, i32 2031007521, i8 17, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..Gh, i32 0, i32 0), { i8*, i64 }* @go..C251, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Session, i32 0, i32 0), %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7.1command_line_arguments.Session, i32 0, i32 0), i64 8 }, comdat
@gcbits..Gh = weak constant [1 x i8] c"\FF", comdat
@const.145 = private constant [43 x i8] c"[8]*\09command_line_arguments\09daemon.Session\00", align 1
@go..C251 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([43 x i8], [43 x i8]* @const.145, i32 0, i32 0), i64 42 }
@const.146 = private constant [9 x i8] c"overflow\00", align 1
@go..C252 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @const.146, i32 0, i32 0), i64 8 }
@go..C253 = internal global [4 x %structField.0] [%structField.0 { { i8*, i64 }* @go..C245, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%ArrayType.0, %ArrayType.0* @type...68x.7uint8, i32 0, i32 0), { i8*, i64 }* null, i64 0 }, %structField.0 { { i8*, i64 }* @go..C247, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%ArrayType.0, %ArrayType.0* @type...68x.7string, i32 0, i32 0), { i8*, i64 }* null, i64 16 }, %structField.0 { { i8*, i64 }* @go..C250, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%ArrayType.0, %ArrayType.0* @type...68x.7.1command_line_arguments.Session, i32 0, i32 0), { i8*, i64 }* null, i64 272 }, %structField.0 { { i8*, i64 }* @go..C252, { i8*, i64 }* null, %_type.0* @unsafe.Pointer..d, { i8*, i64 }* null, i64 400 }]
@type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Session.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Session.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5 = weak constant %StructType.0 { %_type.0 { i64 48, i64 48, i32 111385060, i8 25, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..mb, i32 0, i32 0), { i8*, i64 }* @go..C254, %uncommonType.0* null, %_type.0* null }, %IPST.47 { %structField.0* getelementptr inbounds ([9 x %structField.0], [9 x %structField.0]* @go..C285, i32 0, i32 0), i64 9, i64 9 } }, comdat
@gcbits..mb = weak constant [1 x i8] c",", comdat
@const.147 = private constant [340 x i8] c"struct { count int; flags uint8; B uint8; noverflow uint16; hash0 uint32; buckets *struct { topbits [8]uint8; keys [8]string; values [8]*\09command_line_arguments\09daemon.Session; overflow * }; oldbuckets *struct { topbits [8]uint8; keys [8]string; values [8]*\09command_line_arguments\09daemon.Session; overflow * }; nevacuate uintptr; extra * }\00", align 1
@go..C254 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([340 x i8], [340 x i8]* @const.147, i32 0, i32 0), i64 339 }
@const.148 = private constant [6 x i8] c"count\00", align 1
@go..C255 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.148, i32 0, i32 0), i64 5 }
@int..d = weak constant %_type.0 { i64 8, i64 0, i32 876704034, i8 -126, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.3*), i8* null, { i8*, i64 }* @go..C256, %uncommonType.0* @go..C259, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1int, i32 0, i32 0) }, comdat
@const.149 = private constant [4 x i8] c"int\00", align 1
@go..C256 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @const.149, i32 0, i32 0), i64 3 }
@go..C257 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @const.149, i32 0, i32 0), i64 3 }
@go..C258 = internal global [1 x %method.0] zeroinitializer
@go..C259 = internal constant %uncommonType.0 { { i8*, i64 }* @go..C257, { i8*, i64 }* null, %IPST.45 { %method.0* getelementptr inbounds ([1 x %method.0], [1 x %method.0]* @go..C258, i32 0, i32 0), i64 0, i64 0 } }
@type...1int = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 1142362665, i8 54, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.3*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C260, %uncommonType.0* null, %_type.0* null }, %_type.0* @int..d }, comdat
@const.150 = private constant [5 x i8] c"*int\00", align 1
@go..C260 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.150, i32 0, i32 0), i64 4 }
@const.151 = private constant [6 x i8] c"flags\00", align 1
@go..C261 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.151, i32 0, i32 0), i64 5 }
@const.152 = private constant [2 x i8] c"B\00", align 1
@go..C262 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @const.152, i32 0, i32 0), i64 1 }
@const.153 = private constant [10 x i8] c"noverflow\00", align 1
@go..C263 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @const.153, i32 0, i32 0), i64 9 }
@uint16..d = weak constant %_type.0 { i64 2, i64 0, i32 76732288, i8 -119, i8 2, i8 2, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash16..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal16..f to %__go_descriptor.3*), i8* null, { i8*, i64 }* @go..C264, %uncommonType.0* @go..C267, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1uint16, i32 0, i32 0) }, comdat
@runtime.memhash16..f = external constant %functionDescriptor.0
@runtime.memequal16..f = external constant %functionDescriptor.0
@const.154 = private constant [7 x i8] c"uint16\00", align 1
@go..C264 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.154, i32 0, i32 0), i64 6 }
@go..C265 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.154, i32 0, i32 0), i64 6 }
@go..C266 = internal global [1 x %method.0] zeroinitializer
@go..C267 = internal constant %uncommonType.0 { { i8*, i64 }* @go..C265, { i8*, i64 }* null, %IPST.45 { %method.0* getelementptr inbounds ([1 x %method.0], [1 x %method.0]* @go..C266, i32 0, i32 0), i64 0, i64 0 } }
@type...1uint16 = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 1227716617, i8 54, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.3*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C268, %uncommonType.0* null, %_type.0* null }, %_type.0* @uint16..d }, comdat
@const.155 = private constant [8 x i8] c"*uint16\00", align 1
@go..C268 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.155, i32 0, i32 0), i64 7 }
@const.156 = private constant [6 x i8] c"hash0\00", align 1
@go..C269 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.156, i32 0, i32 0), i64 5 }
@uint32..d = weak constant %_type.0 { i64 4, i64 0, i32 278357906, i8 -118, i8 4, i8 4, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash32..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal32..f to %__go_descriptor.3*), i8* null, { i8*, i64 }* @go..C270, %uncommonType.0* @go..C273, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1uint32, i32 0, i32 0) }, comdat
@runtime.memhash32..f = external constant %functionDescriptor.0
@runtime.memequal32..f = external constant %functionDescriptor.0
@const.157 = private constant [7 x i8] c"uint32\00", align 1
@go..C270 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.157, i32 0, i32 0), i64 6 }
@go..C271 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.157, i32 0, i32 0), i64 6 }
@go..C272 = internal global [1 x %method.0] zeroinitializer
@go..C273 = internal constant %uncommonType.0 { { i8*, i64 }* @go..C271, { i8*, i64 }* null, %IPST.45 { %method.0* getelementptr inbounds ([1 x %method.0], [1 x %method.0]* @go..C272, i32 0, i32 0), i64 0, i64 0 } }
@type...1uint32 = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 158759209, i8 54, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.3*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C274, %uncommonType.0* null, %_type.0* null }, %_type.0* @uint32..d }, comdat
@const.158 = private constant [8 x i8] c"*uint32\00", align 1
@go..C274 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.158, i32 0, i32 0), i64 7 }
@const.159 = private constant [8 x i8] c"buckets\00", align 1
@go..C275 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.159, i32 0, i32 0), i64 7 }
@type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Session.2overflow.0.1.4void.5.5 = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 -1475692471, i8 54, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.3*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C276, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Session.2overflow.0.1.4void.5.5, i32 0, i32 0) }, comdat
@const.160 = private constant [108 x i8] c"*struct { topbits [8]uint8; keys [8]string; values [8]*\09command_line_arguments\09daemon.Session; overflow * }\00", align 1
@go..C276 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([108 x i8], [108 x i8]* @const.160, i32 0, i32 0), i64 107 }
@const.161 = private constant [11 x i8] c"oldbuckets\00", align 1
@go..C277 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @const.161, i32 0, i32 0), i64 10 }
@const.162 = private constant [10 x i8] c"nevacuate\00", align 1
@go..C278 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @const.162, i32 0, i32 0), i64 9 }
@uintptr..d = weak constant %_type.0 { i64 8, i64 0, i32 -1488193301, i8 -116, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.3*), i8* null, { i8*, i64 }* @go..C279, %uncommonType.0* @go..C282, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1uintptr, i32 0, i32 0) }, comdat
@const.163 = private constant [8 x i8] c"uintptr\00", align 1
@go..C279 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.163, i32 0, i32 0), i64 7 }
@go..C280 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.163, i32 0, i32 0), i64 7 }
@go..C281 = internal global [1 x %method.0] zeroinitializer
@go..C282 = internal constant %uncommonType.0 { { i8*, i64 }* @go..C280, { i8*, i64 }* null, %IPST.45 { %method.0* getelementptr inbounds ([1 x %method.0], [1 x %method.0]* @go..C281, i32 0, i32 0), i64 0, i64 0 } }
@type...1uintptr = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 1958710969, i8 54, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.3*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C283, %uncommonType.0* null, %_type.0* null }, %_type.0* @uintptr..d }, comdat
@const.164 = private constant [9 x i8] c"*uintptr\00", align 1
@go..C283 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @const.164, i32 0, i32 0), i64 8 }
@const.165 = private constant [6 x i8] c"extra\00", align 1
@go..C284 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.165, i32 0, i32 0), i64 5 }
@go..C285 = internal global [9 x %structField.0] [%structField.0 { { i8*, i64 }* @go..C255, { i8*, i64 }* null, %_type.0* @int..d, { i8*, i64 }* null, i64 0 }, %structField.0 { { i8*, i64 }* @go..C261, { i8*, i64 }* null, %_type.0* @uint8..d, { i8*, i64 }* null, i64 16 }, %structField.0 { { i8*, i64 }* @go..C262, { i8*, i64 }* null, %_type.0* @uint8..d, { i8*, i64 }* null, i64 18 }, %structField.0 { { i8*, i64 }* @go..C263, { i8*, i64 }* null, %_type.0* @uint16..d, { i8*, i64 }* null, i64 20 }, %structField.0 { { i8*, i64 }* @go..C269, { i8*, i64 }* null, %_type.0* @uint32..d, { i8*, i64 }* null, i64 24 }, %structField.0 { { i8*, i64 }* @go..C275, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Session.2overflow.0.1.4void.5.5, i32 0, i32 0), { i8*, i64 }* null, i64 32 }, %structField.0 { { i8*, i64 }* @go..C277, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Session.2overflow.0.1.4void.5.5, i32 0, i32 0), { i8*, i64 }* null, i64 48 }, %structField.0 { { i8*, i64 }* @go..C278, { i8*, i64 }* null, %_type.0* @uintptr..d, { i8*, i64 }* null, i64 64 }, %structField.0 { { i8*, i64 }* @go..C284, { i8*, i64 }* null, %_type.0* @unsafe.Pointer..d, { i8*, i64 }* null, i64 80 }]
@go..C286 = internal global [4 x %structField.0] [%structField.0 { { i8*, i64 }* @go..C235, { i8*, i64 }* @go..C236, %_type.0* @string..d, { i8*, i64 }* null, i64 0 }, %structField.0 { { i8*, i64 }* @go..C237, { i8*, i64 }* @go..C238, %_type.0* @string..d, { i8*, i64 }* null, i64 32 }, %structField.0 { { i8*, i64 }* @go..C239, { i8*, i64 }* @go..C240, %_type.0* @github_com_spolu_warp.Mode..d, { i8*, i64 }* null, i64 64 }, %structField.0 { { i8*, i64 }* @go..C241, { i8*, i64 }* @go..C242, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7.1command_line_arguments.Session, i32 0, i32 0), { i8*, i64 }* null, i64 80 }]
@go..C287 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.19, i32 0, i32 0), i64 7 }
@go..C288 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@go..C289 = internal global [2 x %structField.0] [%structField.0 { { i8*, i64 }* @go..C221, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.UserState..d, i32 0, i32 0), { i8*, i64 }* null, i64 1 }, %structField.0 { { i8*, i64 }* @go..C287, { i8*, i64 }* @go..C288, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Session, i32 0, i32 0), { i8*, i64 }* null, i64 96 }]
@const.166 = private constant [8 x i8] c"clients\00", align 1
@go..C290 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.166, i32 0, i32 0), i64 7 }
@go..C291 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@type..map.6string.7.1command_line_arguments.UserState = weak constant %MapType.0 { %_type.0 { i64 8, i64 8, i32 793469363, i8 21, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C292, %uncommonType.0* null, %_type.0* null }, %_type.0* @string..d, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.UserState, i32 0, i32 0), %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.UserState.2overflow.0.1.4void.5.5, i32 0, i32 0), %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.UserState.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.UserState.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5, i32 0, i32 0), i8 16, i8 0, i8 8, i8 0, i16 208, i8 1, i8 1 }, comdat
@const.167 = private constant [53 x i8] c"map[string]*\09command_line_arguments\09daemon.UserState\00", align 1
@go..C292 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([53 x i8], [53 x i8]* @const.167, i32 0, i32 0), i64 52 }
@type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.UserState.2overflow.0.1.4void.5.5 = weak constant %StructType.0 { %_type.0 { i64 208, i64 208, i32 -407594108, i8 25, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @gcbits..kwkEGba, i32 0, i32 0), { i8*, i64 }* @go..C293, %uncommonType.0* null, %_type.0* null }, %IPST.47 { %structField.0* getelementptr inbounds ([4 x %structField.0], [4 x %structField.0]* @go..C300, i32 0, i32 0), i64 4, i64 4 } }, comdat
@const.168 = private constant [109 x i8] c"struct { topbits [8]uint8; keys [8]string; values [8]*\09command_line_arguments\09daemon.UserState; overflow * }\00", align 1
@go..C293 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([109 x i8], [109 x i8]* @const.168, i32 0, i32 0), i64 108 }
@go..C294 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.139, i32 0, i32 0), i64 7 }
@go..C295 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.141, i32 0, i32 0), i64 4 }
@go..C296 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.144, i32 0, i32 0), i64 6 }
@type...68x.7.1command_line_arguments.UserState = weak constant %ArrayType.0 { %_type.0 { i64 64, i64 64, i32 1289877025, i8 17, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..Gh, i32 0, i32 0), { i8*, i64 }* @go..C297, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.UserState, i32 0, i32 0), %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7.1command_line_arguments.UserState, i32 0, i32 0), i64 8 }, comdat
@const.169 = private constant [45 x i8] c"[8]*\09command_line_arguments\09daemon.UserState\00", align 1
@go..C297 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([45 x i8], [45 x i8]* @const.169, i32 0, i32 0), i64 44 }
@type...6.7.1command_line_arguments.UserState = weak constant %SliceType.0 { %_type.0 { i64 24, i64 8, i32 -1502545129, i8 23, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C298, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.UserState, i32 0, i32 0) }, comdat
@const.170 = private constant [44 x i8] c"[]*\09command_line_arguments\09daemon.UserState\00", align 1
@go..C298 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([44 x i8], [44 x i8]* @const.170, i32 0, i32 0), i64 43 }
@go..C299 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @const.146, i32 0, i32 0), i64 8 }
@go..C300 = internal global [4 x %structField.0] [%structField.0 { { i8*, i64 }* @go..C294, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%ArrayType.0, %ArrayType.0* @type...68x.7uint8, i32 0, i32 0), { i8*, i64 }* null, i64 0 }, %structField.0 { { i8*, i64 }* @go..C295, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%ArrayType.0, %ArrayType.0* @type...68x.7string, i32 0, i32 0), { i8*, i64 }* null, i64 16 }, %structField.0 { { i8*, i64 }* @go..C296, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%ArrayType.0, %ArrayType.0* @type...68x.7.1command_line_arguments.UserState, i32 0, i32 0), { i8*, i64 }* null, i64 272 }, %structField.0 { { i8*, i64 }* @go..C299, { i8*, i64 }* null, %_type.0* @unsafe.Pointer..d, { i8*, i64 }* null, i64 400 }]
@type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.UserState.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.UserState.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5 = weak constant %StructType.0 { %_type.0 { i64 48, i64 48, i32 1044617700, i8 25, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..mb, i32 0, i32 0), { i8*, i64 }* @go..C301, %uncommonType.0* null, %_type.0* null }, %IPST.47 { %structField.0* getelementptr inbounds ([9 x %structField.0], [9 x %structField.0]* @go..C312, i32 0, i32 0), i64 9, i64 9 } }, comdat
@const.171 = private constant [344 x i8] c"struct { count int; flags uint8; B uint8; noverflow uint16; hash0 uint32; buckets *struct { topbits [8]uint8; keys [8]string; values [8]*\09command_line_arguments\09daemon.UserState; overflow * }; oldbuckets *struct { topbits [8]uint8; keys [8]string; values [8]*\09command_line_arguments\09daemon.UserState; overflow * }; nevacuate uintptr; extra * }\00", align 1
@go..C301 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([344 x i8], [344 x i8]* @const.171, i32 0, i32 0), i64 343 }
@go..C302 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.148, i32 0, i32 0), i64 5 }
@go..C303 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.151, i32 0, i32 0), i64 5 }
@go..C304 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @const.152, i32 0, i32 0), i64 1 }
@go..C305 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @const.153, i32 0, i32 0), i64 9 }
@go..C306 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.156, i32 0, i32 0), i64 5 }
@go..C307 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.159, i32 0, i32 0), i64 7 }
@type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.UserState.2overflow.0.1.4void.5.5 = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 2068428873, i8 54, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.3*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C308, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.UserState.2overflow.0.1.4void.5.5, i32 0, i32 0) }, comdat
@const.172 = private constant [110 x i8] c"*struct { topbits [8]uint8; keys [8]string; values [8]*\09command_line_arguments\09daemon.UserState; overflow * }\00", align 1
@go..C308 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([110 x i8], [110 x i8]* @const.172, i32 0, i32 0), i64 109 }
@go..C309 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @const.161, i32 0, i32 0), i64 10 }
@go..C310 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @const.162, i32 0, i32 0), i64 9 }
@go..C311 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.165, i32 0, i32 0), i64 5 }
@go..C312 = internal global [9 x %structField.0] [%structField.0 { { i8*, i64 }* @go..C302, { i8*, i64 }* null, %_type.0* @int..d, { i8*, i64 }* null, i64 0 }, %structField.0 { { i8*, i64 }* @go..C303, { i8*, i64 }* null, %_type.0* @uint8..d, { i8*, i64 }* null, i64 16 }, %structField.0 { { i8*, i64 }* @go..C304, { i8*, i64 }* null, %_type.0* @uint8..d, { i8*, i64 }* null, i64 18 }, %structField.0 { { i8*, i64 }* @go..C305, { i8*, i64 }* null, %_type.0* @uint16..d, { i8*, i64 }* null, i64 20 }, %structField.0 { { i8*, i64 }* @go..C306, { i8*, i64 }* null, %_type.0* @uint32..d, { i8*, i64 }* null, i64 24 }, %structField.0 { { i8*, i64 }* @go..C307, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.UserState.2overflow.0.1.4void.5.5, i32 0, i32 0), { i8*, i64 }* null, i64 32 }, %structField.0 { { i8*, i64 }* @go..C309, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.UserState.2overflow.0.1.4void.5.5, i32 0, i32 0), { i8*, i64 }* null, i64 48 }, %structField.0 { { i8*, i64 }* @go..C310, { i8*, i64 }* null, %_type.0* @uintptr..d, { i8*, i64 }* null, i64 64 }, %structField.0 { { i8*, i64 }* @go..C311, { i8*, i64 }* null, %_type.0* @unsafe.Pointer..d, { i8*, i64 }* null, i64 80 }]
@const.173 = private constant [5 x i8] c"data\00", align 1
@go..C313 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.173, i32 0, i32 0), i64 4 }
@go..C314 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@type..chan.0.6.7uint8 = weak constant %ChanType.0 { %_type.0 { i64 8, i64 8, i32 -121707257, i8 18, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.3*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C315, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7uint8, i32 0, i32 0), i64 3 }, comdat
@const.174 = private constant [13 x i8] c"chan []uint8\00", align 1
@go..C315 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @const.174, i32 0, i32 0), i64 12 }
@go..C316 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.37, i32 0, i32 0), i64 5 }
@go..C317 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@go..C318 = internal global [6 x %structField.0] [%structField.0 { { i8*, i64 }* @go..C199, { i8*, i64 }* @go..C200, %_type.0* @string..d, { i8*, i64 }* null, i64 0 }, %structField.0 { { i8*, i64 }* @go..C201, { i8*, i64 }* @go..C202, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @github_com_spolu_warp.Size..d, i32 0, i32 0), { i8*, i64 }* null, i64 32 }, %structField.0 { { i8*, i64 }* @go..C203, { i8*, i64 }* @go..C204, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.HostState, i32 0, i32 0), { i8*, i64 }* null, i64 64 }, %structField.0 { { i8*, i64 }* @go..C290, { i8*, i64 }* @go..C291, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7.1command_line_arguments.UserState, i32 0, i32 0), { i8*, i64 }* null, i64 80 }, %structField.0 { { i8*, i64 }* @go..C313, { i8*, i64 }* @go..C314, %_type.0* getelementptr inbounds (%ChanType.0, %ChanType.0* @type..chan.0.6.7uint8, i32 0, i32 0), { i8*, i64 }* null, i64 96 }, %structField.0 { { i8*, i64 }* @go..C316, { i8*, i64 }* @go..C317, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1sync.Mutex, i32 0, i32 0), { i8*, i64 }* null, i64 112 }]
@type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Warp.2overflow.0.1.4void.5.5 = weak constant %StructType.0 { %_type.0 { i64 208, i64 208, i32 2028187524, i8 25, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @gcbits..kwkEGba, i32 0, i32 0), { i8*, i64 }* @go..C319, %uncommonType.0* null, %_type.0* null }, %IPST.47 { %structField.0* getelementptr inbounds ([4 x %structField.0], [4 x %structField.0]* @go..C326, i32 0, i32 0), i64 4, i64 4 } }, comdat
@const.175 = private constant [104 x i8] c"struct { topbits [8]uint8; keys [8]string; values [8]*\09command_line_arguments\09daemon.Warp; overflow * }\00", align 1
@go..C319 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([104 x i8], [104 x i8]* @const.175, i32 0, i32 0), i64 103 }
@go..C320 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.139, i32 0, i32 0), i64 7 }
@go..C321 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.141, i32 0, i32 0), i64 4 }
@go..C322 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.144, i32 0, i32 0), i64 6 }
@type...68x.7.1command_line_arguments.Warp = weak constant %ArrayType.0 { %_type.0 { i64 64, i64 64, i32 1710548833, i8 17, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..Gh, i32 0, i32 0), { i8*, i64 }* @go..C323, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Warp, i32 0, i32 0), %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7.1command_line_arguments.Warp, i32 0, i32 0), i64 8 }, comdat
@const.176 = private constant [40 x i8] c"[8]*\09command_line_arguments\09daemon.Warp\00", align 1
@go..C323 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([40 x i8], [40 x i8]* @const.176, i32 0, i32 0), i64 39 }
@type...6.7.1command_line_arguments.Warp = weak constant %SliceType.0 { %_type.0 { i64 24, i64 8, i32 -1292209225, i8 23, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C324, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Warp, i32 0, i32 0) }, comdat
@const.177 = private constant [39 x i8] c"[]*\09command_line_arguments\09daemon.Warp\00", align 1
@go..C324 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([39 x i8], [39 x i8]* @const.177, i32 0, i32 0), i64 38 }
@go..C325 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @const.146, i32 0, i32 0), i64 8 }
@go..C326 = internal global [4 x %structField.0] [%structField.0 { { i8*, i64 }* @go..C320, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%ArrayType.0, %ArrayType.0* @type...68x.7uint8, i32 0, i32 0), { i8*, i64 }* null, i64 0 }, %structField.0 { { i8*, i64 }* @go..C321, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%ArrayType.0, %ArrayType.0* @type...68x.7string, i32 0, i32 0), { i8*, i64 }* null, i64 16 }, %structField.0 { { i8*, i64 }* @go..C322, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%ArrayType.0, %ArrayType.0* @type...68x.7.1command_line_arguments.Warp, i32 0, i32 0), { i8*, i64 }* null, i64 272 }, %structField.0 { { i8*, i64 }* @go..C325, { i8*, i64 }* null, %_type.0* @unsafe.Pointer..d, { i8*, i64 }* null, i64 400 }]
@type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Warp.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Warp.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5 = weak constant %StructType.0 { %_type.0 { i64 48, i64 48, i32 1488689636, i8 25, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..mb, i32 0, i32 0), { i8*, i64 }* @go..C327, %uncommonType.0* null, %_type.0* null }, %IPST.47 { %structField.0* getelementptr inbounds ([9 x %structField.0], [9 x %structField.0]* @go..C338, i32 0, i32 0), i64 9, i64 9 } }, comdat
@const.178 = private constant [334 x i8] c"struct { count int; flags uint8; B uint8; noverflow uint16; hash0 uint32; buckets *struct { topbits [8]uint8; keys [8]string; values [8]*\09command_line_arguments\09daemon.Warp; overflow * }; oldbuckets *struct { topbits [8]uint8; keys [8]string; values [8]*\09command_line_arguments\09daemon.Warp; overflow * }; nevacuate uintptr; extra * }\00", align 1
@go..C327 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([334 x i8], [334 x i8]* @const.178, i32 0, i32 0), i64 333 }
@go..C328 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.148, i32 0, i32 0), i64 5 }
@go..C329 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.151, i32 0, i32 0), i64 5 }
@go..C330 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @const.152, i32 0, i32 0), i64 1 }
@go..C331 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @const.153, i32 0, i32 0), i64 9 }
@go..C332 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.156, i32 0, i32 0), i64 5 }
@go..C333 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.159, i32 0, i32 0), i64 7 }
@type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Warp.2overflow.0.1.4void.5.5 = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 -1908737975, i8 54, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.3*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C334, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Warp.2overflow.0.1.4void.5.5, i32 0, i32 0) }, comdat
@const.179 = private constant [105 x i8] c"*struct { topbits [8]uint8; keys [8]string; values [8]*\09command_line_arguments\09daemon.Warp; overflow * }\00", align 1
@go..C334 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([105 x i8], [105 x i8]* @const.179, i32 0, i32 0), i64 104 }
@go..C335 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @const.161, i32 0, i32 0), i64 10 }
@go..C336 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @const.162, i32 0, i32 0), i64 9 }
@go..C337 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.165, i32 0, i32 0), i64 5 }
@go..C338 = internal global [9 x %structField.0] [%structField.0 { { i8*, i64 }* @go..C328, { i8*, i64 }* null, %_type.0* @int..d, { i8*, i64 }* null, i64 0 }, %structField.0 { { i8*, i64 }* @go..C329, { i8*, i64 }* null, %_type.0* @uint8..d, { i8*, i64 }* null, i64 16 }, %structField.0 { { i8*, i64 }* @go..C330, { i8*, i64 }* null, %_type.0* @uint8..d, { i8*, i64 }* null, i64 18 }, %structField.0 { { i8*, i64 }* @go..C331, { i8*, i64 }* null, %_type.0* @uint16..d, { i8*, i64 }* null, i64 20 }, %structField.0 { { i8*, i64 }* @go..C332, { i8*, i64 }* null, %_type.0* @uint32..d, { i8*, i64 }* null, i64 24 }, %structField.0 { { i8*, i64 }* @go..C333, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Warp.2overflow.0.1.4void.5.5, i32 0, i32 0), { i8*, i64 }* null, i64 32 }, %structField.0 { { i8*, i64 }* @go..C335, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Warp.2overflow.0.1.4void.5.5, i32 0, i32 0), { i8*, i64 }* null, i64 48 }, %structField.0 { { i8*, i64 }* @go..C336, { i8*, i64 }* null, %_type.0* @uintptr..d, { i8*, i64 }* null, i64 64 }, %structField.0 { { i8*, i64 }* @go..C337, { i8*, i64 }* null, %_type.0* @unsafe.Pointer..d, { i8*, i64 }* null, i64 80 }]
@go..C339 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.37, i32 0, i32 0), i64 5 }
@go..C340 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@go..C341 = internal global [5 x %structField.0] [%structField.0 { { i8*, i64 }* @go..C133, { i8*, i64 }* @go..C134, %_type.0* @string..d, { i8*, i64 }* null, i64 0 }, %structField.0 { { i8*, i64 }* @go..C135, { i8*, i64 }* @go..C136, %_type.0* @string..d, { i8*, i64 }* null, i64 32 }, %structField.0 { { i8*, i64 }* @go..C137, { i8*, i64 }* @go..C138, %_type.0* @string..d, { i8*, i64 }* null, i64 64 }, %structField.0 { { i8*, i64 }* @go..C139, { i8*, i64 }* @go..C140, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7.1command_line_arguments.Warp, i32 0, i32 0), { i8*, i64 }* null, i64 96 }, %structField.0 { { i8*, i64 }* @go..C339, { i8*, i64 }* @go..C340, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1sync.Mutex, i32 0, i32 0), { i8*, i64 }* null, i64 112 }]
@command_line_arguments.NewSrv..f = local_unnamed_addr constant %functionDescriptor.0 { i64 ptrtoint (%Srv.0* (i8*, i64, i64, i64, i64, i64, i64, { i8*, i64 }*)* @command_line_arguments.NewSrv to i64) }
@type...61x.7crypto_tls.Certificate = weak constant %ArrayType.0 { %_type.0 { i64 96, i64 96, i32 -1602425775, i8 17, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @gcbits..Ajca, i32 0, i32 0), { i8*, i64 }* @go..C342, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @crypto_tls.Certificate..d, i32 0, i32 0), %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7crypto_tls.Certificate, i32 0, i32 0), i64 1 }, comdat
@gcbits..Ajca = weak constant [2 x i8] c"9\09", comdat
@const.182 = private constant [31 x i8] c"[1]\09crypto_tls\09tls.Certificate\00", align 1
@go..C342 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([31 x i8], [31 x i8]* @const.182, i32 0, i32 0), i64 30 }
@crypto_tls.Certificate..d = external constant %StructType.0
@type...6.7crypto_tls.Certificate = weak constant %SliceType.0 { %_type.0 { i64 24, i64 8, i32 -801212881, i8 23, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C343, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @crypto_tls.Certificate..d, i32 0, i32 0) }, comdat
@const.183 = private constant [30 x i8] c"[]\09crypto_tls\09tls.Certificate\00", align 1
@go..C343 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @const.183, i32 0, i32 0), i64 29 }
@type...64x.7uint16 = weak constant %ArrayType.0 { %_type.0 { i64 8, i64 0, i32 153464591, i8 -111, i8 2, i8 2, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* null, { i8*, i64 }* @go..C344, %uncommonType.0* null, %_type.0* null }, %_type.0* @uint16..d, %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7uint16, i32 0, i32 0), i64 4 }, comdat
@const.184 = private constant [10 x i8] c"[4]uint16\00", align 1
@go..C344 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @const.184, i32 0, i32 0), i64 9 }
@type...6.7uint16 = weak constant %SliceType.0 { %_type.0 { i64 24, i64 8, i32 76732302, i8 23, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C345, %uncommonType.0* null, %_type.0* null }, %_type.0* @uint16..d }, comdat
@const.185 = private constant [9 x i8] c"[]uint16\00", align 1
@go..C345 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @const.185, i32 0, i32 0), i64 8 }
@type...63x.7crypto_tls.CurveID = weak constant %ArrayType.0 { %_type.0 { i64 6, i64 0, i32 501141179, i8 -111, i8 2, i8 2, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* null, { i8*, i64 }* @go..C346, %uncommonType.0* null, %_type.0* null }, %_type.0* @crypto_tls.CurveID..d, %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7crypto_tls.CurveID, i32 0, i32 0), i64 3 }, comdat
@const.187 = private constant [27 x i8] c"[3]\09crypto_tls\09tls.CurveID\00", align 1
@go..C346 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([27 x i8], [27 x i8]* @const.187, i32 0, i32 0), i64 26 }
@crypto_tls.CurveID..d = external constant %_type.0
@type...6.7crypto_tls.CurveID = weak constant %SliceType.0 { %_type.0 { i64 24, i64 8, i32 250570596, i8 23, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C347, %uncommonType.0* null, %_type.0* null }, %_type.0* @crypto_tls.CurveID..d }, comdat
@const.188 = private constant [26 x i8] c"[]\09crypto_tls\09tls.CurveID\00", align 1
@go..C347 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([26 x i8], [26 x i8]* @const.188, i32 0, i32 0), i64 25 }
@const.189 = private unnamed_addr constant [3 x i16] [i16 25, i16 24, i16 23]
@crypto_tls.Config..d = external constant %StructType.0
@const.199 = private constant [4 x i8] c"tcp\00", align 1
@const.201 = private constant [56 x i8] c"Listening: address=%s tls=true cert_file=%s key_file=%s\00", align 1
@const.203 = private constant [32 x i8] c"Listening: address=%s tls=false\00", align 1
@const.206 = private constant [47 x i8] c"Error accepting connection: remote=%s error=%v\00", align 1
@type..struct.4.4x.5.f.f.0.1.4void.5.2.command_line_arguments.s1.0.1.1command_line_arguments.Srv.2.command_line_arguments.ctx2.0.1context.Context.2.command_line_arguments.conn3.0.1net.Conn.5 = weak constant %StructType.0 { %_type.0 { i64 32, i64 32, i32 705191492, i8 25, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..pa, i32 0, i32 0), { i8*, i64 }* @go..C348, %uncommonType.0* null, %_type.0* null }, %IPST.47 { %structField.0* getelementptr inbounds ([4 x %structField.0], [4 x %structField.0]* @go..C357, i32 0, i32 0), i64 4, i64 4 } }, comdat
@gcbits..pa = weak constant [1 x i8] c"\0F", comdat
@const.208 = private constant [110 x i8] c"struct { f *; s1 **\09command_line_arguments\09daemon.Srv; ctx2 *\09context\09context.Context; conn3 *\09net\09net.Conn }\00", align 1
@go..C348 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([110 x i8], [110 x i8]* @const.208, i32 0, i32 0), i64 109 }
@go..C349 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @const.63, i32 0, i32 0), i64 1 }
@go..C350 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @const.63, i32 0, i32 0), i64 1 }
@const.209 = private constant [3 x i8] c"s1\00", align 1
@go..C351 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @const.209, i32 0, i32 0), i64 2 }
@go..C352 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@const.210 = private constant [5 x i8] c"ctx2\00", align 1
@go..C353 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.210, i32 0, i32 0), i64 4 }
@go..C354 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@type...1context.Context = external constant %PtrType.0
@const.211 = private constant [6 x i8] c"conn3\00", align 1
@go..C355 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.211, i32 0, i32 0), i64 5 }
@go..C356 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@type...1net.Conn = external constant %PtrType.0
@go..C357 = internal global [4 x %structField.0] [%structField.0 { { i8*, i64 }* @go..C349, { i8*, i64 }* @go..C350, %_type.0* @unsafe.Pointer..d, { i8*, i64 }* null, i64 0 }, %structField.0 { { i8*, i64 }* @go..C351, { i8*, i64 }* @go..C352, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1.1command_line_arguments.Srv, i32 0, i32 0), { i8*, i64 }* null, i64 16 }, %structField.0 { { i8*, i64 }* @go..C353, { i8*, i64 }* @go..C354, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1context.Context, i32 0, i32 0), { i8*, i64 }* null, i64 32 }, %structField.0 { { i8*, i64 }* @go..C355, { i8*, i64 }* @go..C356, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1net.Conn, i32 0, i32 0), { i8*, i64 }* null, i64 48 }]
@const.212 = private constant [46 x i8] c"Error handling connection: remote=%s error=%v\00", align 1
@const.214 = private constant [36 x i8] c"Done handling connection: remote=%s\00", align 1
@const.216 = private constant [35 x i8] c"Handling new connection: remote=%s\00", align 1
@const.222 = private constant [6 x i8] c"shell\00", align 1
@github_com_spolu_warp.HostUpdate..d = external constant %StructType.0
@type...1github_com_spolu_warp.HostUpdate = external constant %PtrType.0
@const.224 = private constant [30 x i8] c"Initial host update error: %v\00", align 1
@const.226 = private constant [42 x i8] c"Initial host update received: session=%s\0A\00", align 1
@const.229 = private constant [54 x i8] c"The warp you attempted to open is already in use: %s.\00", align 1
@const.231 = private constant [12 x i8] c"warp_in_use\00", align 1
@const.233 = private constant [36 x i8] c"Host error: warp already in use: %s\00", align 1
@const.235 = private constant [29 x i8] c"Cleaning-up warp: session=%s\00", align 1
@const.237 = private constant [54 x i8] c"The warp you attempted to connect does not exist: %s.\00", align 1
@const.239 = private constant [13 x i8] c"warp_unknown\00", align 1
@const.241 = private constant [30 x i8] c"Client error: warp unknown %s\00", align 1
@const.243 = private unnamed_addr constant %User.0 zeroinitializer
@type..map.6string.7github_com_spolu_warp.User = weak constant %MapType.0 { %_type.0 { i64 8, i64 8, i32 479700253, i8 21, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C358, %uncommonType.0* null, %_type.0* null }, %_type.0* @string..d, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @github_com_spolu_warp.User..d, i32 0, i32 0), %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.User.2overflow.0.1.4void.5.5, i32 0, i32 0), %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.User.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.User.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5, i32 0, i32 0), i8 16, i8 0, i8 48, i8 0, i16 528, i8 1, i8 1 }, comdat
@const.244 = private constant [44 x i8] c"map[string]\09github_com_spolu_warp\09warp.User\00", align 1
@go..C358 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([44 x i8], [44 x i8]* @const.244, i32 0, i32 0), i64 43 }
@type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.User.2overflow.0.1.4void.5.5 = weak constant %StructType.0 { %_type.0 { i64 528, i64 528, i32 -1858271036, i8 25, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @gcbits..kwkwircfkvircba, i32 0, i32 0), { i8*, i64 }* @go..C359, %uncommonType.0* null, %_type.0* null }, %IPST.47 { %structField.0* getelementptr inbounds ([4 x %structField.0], [4 x %structField.0]* @go..C366, i32 0, i32 0), i64 4, i64 4 } }, comdat
@gcbits..kwkwircfkvircba = weak constant [9 x i8] c"\AA\AA\8A\A2(\8A\A2(\02", comdat
@const.245 = private constant [100 x i8] c"struct { topbits [8]uint8; keys [8]string; values [8]\09github_com_spolu_warp\09warp.User; overflow * }\00", align 1
@go..C359 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([100 x i8], [100 x i8]* @const.245, i32 0, i32 0), i64 99 }
@go..C360 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.139, i32 0, i32 0), i64 7 }
@go..C361 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.141, i32 0, i32 0), i64 4 }
@go..C362 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.144, i32 0, i32 0), i64 6 }
@type...68x.7github_com_spolu_warp.User = weak constant %ArrayType.0 { %_type.0 { i64 384, i64 360, i32 662338805, i8 17, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @gcbits..fkvircfkva, i32 0, i32 0), { i8*, i64 }* @go..C363, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @github_com_spolu_warp.User..d, i32 0, i32 0), %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7github_com_spolu_warp.User, i32 0, i32 0), i64 8 }, comdat
@gcbits..fkvircfkva = weak constant [6 x i8] c"EQ\14EQ\14", comdat
@const.246 = private constant [36 x i8] c"[8]\09github_com_spolu_warp\09warp.User\00", align 1
@go..C363 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([36 x i8], [36 x i8]* @const.246, i32 0, i32 0), i64 35 }
@type...6.7github_com_spolu_warp.User = weak constant %SliceType.0 { %_type.0 { i64 24, i64 8, i32 -1816314239, i8 23, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C364, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @github_com_spolu_warp.User..d, i32 0, i32 0) }, comdat
@const.247 = private constant [35 x i8] c"[]\09github_com_spolu_warp\09warp.User\00", align 1
@go..C364 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([35 x i8], [35 x i8]* @const.247, i32 0, i32 0), i64 34 }
@go..C365 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @const.146, i32 0, i32 0), i64 8 }
@go..C366 = internal global [4 x %structField.0] [%structField.0 { { i8*, i64 }* @go..C360, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%ArrayType.0, %ArrayType.0* @type...68x.7uint8, i32 0, i32 0), { i8*, i64 }* null, i64 0 }, %structField.0 { { i8*, i64 }* @go..C361, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%ArrayType.0, %ArrayType.0* @type...68x.7string, i32 0, i32 0), { i8*, i64 }* null, i64 16 }, %structField.0 { { i8*, i64 }* @go..C362, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%ArrayType.0, %ArrayType.0* @type...68x.7github_com_spolu_warp.User, i32 0, i32 0), { i8*, i64 }* null, i64 272 }, %structField.0 { { i8*, i64 }* @go..C365, { i8*, i64 }* null, %_type.0* @unsafe.Pointer..d, { i8*, i64 }* null, i64 1040 }]
@type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.User.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.User.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5 = weak constant %StructType.0 { %_type.0 { i64 48, i64 48, i32 1892882916, i8 25, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..mb, i32 0, i32 0), { i8*, i64 }* @go..C367, %uncommonType.0* null, %_type.0* null }, %IPST.47 { %structField.0* getelementptr inbounds ([9 x %structField.0], [9 x %structField.0]* @go..C378, i32 0, i32 0), i64 9, i64 9 } }, comdat
@const.248 = private constant [326 x i8] c"struct { count int; flags uint8; B uint8; noverflow uint16; hash0 uint32; buckets *struct { topbits [8]uint8; keys [8]string; values [8]\09github_com_spolu_warp\09warp.User; overflow * }; oldbuckets *struct { topbits [8]uint8; keys [8]string; values [8]\09github_com_spolu_warp\09warp.User; overflow * }; nevacuate uintptr; extra * }\00", align 1
@go..C367 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([326 x i8], [326 x i8]* @const.248, i32 0, i32 0), i64 325 }
@go..C368 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.148, i32 0, i32 0), i64 5 }
@go..C369 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.151, i32 0, i32 0), i64 5 }
@go..C370 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @const.152, i32 0, i32 0), i64 1 }
@go..C371 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @const.153, i32 0, i32 0), i64 9 }
@go..C372 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.156, i32 0, i32 0), i64 5 }
@go..C373 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.159, i32 0, i32 0), i64 7 }
@type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.User.2overflow.0.1.4void.5.5 = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 332434505, i8 54, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.3*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C374, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.User.2overflow.0.1.4void.5.5, i32 0, i32 0) }, comdat
@const.249 = private constant [101 x i8] c"*struct { topbits [8]uint8; keys [8]string; values [8]\09github_com_spolu_warp\09warp.User; overflow * }\00", align 1
@go..C374 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([101 x i8], [101 x i8]* @const.249, i32 0, i32 0), i64 100 }
@go..C375 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @const.161, i32 0, i32 0), i64 10 }
@go..C376 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @const.162, i32 0, i32 0), i64 9 }
@go..C377 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.165, i32 0, i32 0), i64 5 }
@go..C378 = internal global [9 x %structField.0] [%structField.0 { { i8*, i64 }* @go..C368, { i8*, i64 }* null, %_type.0* @int..d, { i8*, i64 }* null, i64 0 }, %structField.0 { { i8*, i64 }* @go..C369, { i8*, i64 }* null, %_type.0* @uint8..d, { i8*, i64 }* null, i64 16 }, %structField.0 { { i8*, i64 }* @go..C370, { i8*, i64 }* null, %_type.0* @uint8..d, { i8*, i64 }* null, i64 18 }, %structField.0 { { i8*, i64 }* @go..C371, { i8*, i64 }* null, %_type.0* @uint16..d, { i8*, i64 }* null, i64 20 }, %structField.0 { { i8*, i64 }* @go..C372, { i8*, i64 }* null, %_type.0* @uint32..d, { i8*, i64 }* null, i64 24 }, %structField.0 { { i8*, i64 }* @go..C373, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.User.2overflow.0.1.4void.5.5, i32 0, i32 0), { i8*, i64 }* null, i64 32 }, %structField.0 { { i8*, i64 }* @go..C375, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.User.2overflow.0.1.4void.5.5, i32 0, i32 0), { i8*, i64 }* null, i64 48 }, %structField.0 { { i8*, i64 }* @go..C376, { i8*, i64 }* null, %_type.0* @uintptr..d, { i8*, i64 }* null, i64 64 }, %structField.0 { { i8*, i64 }* @go..C377, { i8*, i64 }* null, %_type.0* @unsafe.Pointer..d, { i8*, i64 }* null, i64 80 }]
@type...60x.7.1command_line_arguments.Session = weak constant %ArrayType.0 { %_type.0 { i64 0, i64 0, i32 2031007521, i8 -111, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* null, { i8*, i64 }* @go..C379, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Session, i32 0, i32 0), %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7.1command_line_arguments.Session, i32 0, i32 0), i64 0 }, comdat
@const.252 = private constant [43 x i8] c"[0]*\09command_line_arguments\09daemon.Session\00", align 1
@go..C379 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([43 x i8], [43 x i8]* @const.252, i32 0, i32 0), i64 42 }
@const.255 = private constant [51 x i8] c"Sending (client) state: session=%s cols=%d rows=%d\00", align 1
@const.257 = private constant [49 x i8] c"Sending (host) state: session=%s cols=%d rows=%d\00", align 1
@type..struct.4.4x.5.f.f.0.1.4void.5.2.command_line_arguments.w1.0.1.1command_line_arguments.Warp.2.command_line_arguments.ctx2.0.1context.Context.2.command_line_arguments.ss3.0.1.1command_line_arguments.Session.5 = weak constant %StructType.0 { %_type.0 { i64 32, i64 32, i32 -1408546364, i8 25, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..pa, i32 0, i32 0), { i8*, i64 }* @go..C380, %uncommonType.0* null, %_type.0* null }, %IPST.47 { %structField.0* getelementptr inbounds ([4 x %structField.0], [4 x %structField.0]* @go..C389, i32 0, i32 0), i64 4, i64 4 } }, comdat
@const.260 = private constant [135 x i8] c"struct { f *; w1 **\09command_line_arguments\09daemon.Warp; ctx2 *\09context\09context.Context; ss3 **\09command_line_arguments\09daemon.Session }\00", align 1
@go..C380 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([135 x i8], [135 x i8]* @const.260, i32 0, i32 0), i64 134 }
@go..C381 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @const.63, i32 0, i32 0), i64 1 }
@go..C382 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @const.63, i32 0, i32 0), i64 1 }
@const.261 = private constant [3 x i8] c"w1\00", align 1
@go..C383 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @const.261, i32 0, i32 0), i64 2 }
@go..C384 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@go..C385 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.210, i32 0, i32 0), i64 4 }
@go..C386 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@const.262 = private constant [4 x i8] c"ss3\00", align 1
@go..C387 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @const.262, i32 0, i32 0), i64 3 }
@go..C388 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@go..C389 = internal global [4 x %structField.0] [%structField.0 { { i8*, i64 }* @go..C381, { i8*, i64 }* @go..C382, %_type.0* @unsafe.Pointer..d, { i8*, i64 }* null, i64 0 }, %structField.0 { { i8*, i64 }* @go..C383, { i8*, i64 }* @go..C384, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1.1command_line_arguments.Warp, i32 0, i32 0), { i8*, i64 }* null, i64 16 }, %structField.0 { { i8*, i64 }* @go..C385, { i8*, i64 }* @go..C386, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1context.Context, i32 0, i32 0), { i8*, i64 }* null, i64 32 }, %structField.0 { { i8*, i64 }* @go..C387, { i8*, i64 }* @go..C388, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1.1command_line_arguments.Session, i32 0, i32 0), { i8*, i64 }* null, i64 48 }]
@type..struct.4.4x.5.f.f.0.1.4void.5.2.command_line_arguments.ctx1.0.1context.Context.2.command_line_arguments.w2.0.1.1command_line_arguments.Warp.2.command_line_arguments.ss3.0.1.1command_line_arguments.Session.5 = weak constant %StructType.0 { %_type.0 { i64 32, i64 32, i32 621661124, i8 25, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..pa, i32 0, i32 0), { i8*, i64 }* @go..C390, %uncommonType.0* null, %_type.0* null }, %IPST.47 { %structField.0* getelementptr inbounds ([4 x %structField.0], [4 x %structField.0]* @go..C399, i32 0, i32 0), i64 4, i64 4 } }, comdat
@const.263 = private constant [135 x i8] c"struct { f *; ctx1 *\09context\09context.Context; w2 **\09command_line_arguments\09daemon.Warp; ss3 **\09command_line_arguments\09daemon.Session }\00", align 1
@go..C390 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([135 x i8], [135 x i8]* @const.263, i32 0, i32 0), i64 134 }
@go..C391 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @const.63, i32 0, i32 0), i64 1 }
@go..C392 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @const.63, i32 0, i32 0), i64 1 }
@const.264 = private constant [5 x i8] c"ctx1\00", align 1
@go..C393 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.264, i32 0, i32 0), i64 4 }
@go..C394 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@const.265 = private constant [3 x i8] c"w2\00", align 1
@go..C395 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @const.265, i32 0, i32 0), i64 2 }
@go..C396 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@go..C397 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @const.262, i32 0, i32 0), i64 3 }
@go..C398 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@go..C399 = internal global [4 x %structField.0] [%structField.0 { { i8*, i64 }* @go..C391, { i8*, i64 }* @go..C392, %_type.0* @unsafe.Pointer..d, { i8*, i64 }* null, i64 0 }, %structField.0 { { i8*, i64 }* @go..C393, { i8*, i64 }* @go..C394, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1context.Context, i32 0, i32 0), { i8*, i64 }* null, i64 16 }, %structField.0 { { i8*, i64 }* @go..C395, { i8*, i64 }* @go..C396, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1.1command_line_arguments.Warp, i32 0, i32 0), { i8*, i64 }* null, i64 32 }, %structField.0 { { i8*, i64 }* @go..C397, { i8*, i64 }* @go..C398, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1.1command_line_arguments.Session, i32 0, i32 0), { i8*, i64 }* null, i64 48 }]
@type..struct.4.4x.5.f.f.0.1.4void.5.2.command_line_arguments.w1.0.1.1command_line_arguments.Warp.2.command_line_arguments.ss2.0.1.1command_line_arguments.Session.2.command_line_arguments.ctx3.0.1context.Context.5 = weak constant %StructType.0 { %_type.0 { i64 32, i64 32, i32 -1241646908, i8 25, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..pa, i32 0, i32 0), { i8*, i64 }* @go..C400, %uncommonType.0* null, %_type.0* null }, %IPST.47 { %structField.0* getelementptr inbounds ([4 x %structField.0], [4 x %structField.0]* @go..C409, i32 0, i32 0), i64 4, i64 4 } }, comdat
@const.266 = private constant [135 x i8] c"struct { f *; w1 **\09command_line_arguments\09daemon.Warp; ss2 **\09command_line_arguments\09daemon.Session; ctx3 *\09context\09context.Context }\00", align 1
@go..C400 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([135 x i8], [135 x i8]* @const.266, i32 0, i32 0), i64 134 }
@go..C401 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @const.63, i32 0, i32 0), i64 1 }
@go..C402 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @const.63, i32 0, i32 0), i64 1 }
@go..C403 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @const.261, i32 0, i32 0), i64 2 }
@go..C404 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@const.267 = private constant [4 x i8] c"ss2\00", align 1
@go..C405 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @const.267, i32 0, i32 0), i64 3 }
@go..C406 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@const.268 = private constant [5 x i8] c"ctx3\00", align 1
@go..C407 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.268, i32 0, i32 0), i64 4 }
@go..C408 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@go..C409 = internal global [4 x %structField.0] [%structField.0 { { i8*, i64 }* @go..C401, { i8*, i64 }* @go..C402, %_type.0* @unsafe.Pointer..d, { i8*, i64 }* null, i64 0 }, %structField.0 { { i8*, i64 }* @go..C403, { i8*, i64 }* @go..C404, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1.1command_line_arguments.Warp, i32 0, i32 0), { i8*, i64 }* null, i64 16 }, %structField.0 { { i8*, i64 }* @go..C405, { i8*, i64 }* @go..C406, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1.1command_line_arguments.Session, i32 0, i32 0), { i8*, i64 }* null, i64 32 }, %structField.0 { { i8*, i64 }* @go..C407, { i8*, i64 }* @go..C408, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1context.Context, i32 0, i32 0), { i8*, i64 }* null, i64 48 }]
@const.269 = private constant [33 x i8] c"Host session running: session=%s\00", align 1
@const.271 = private constant [35 x i8] c"Cancelling all clients: session=%s\00", align 1
@const.273 = private constant [18 x i8] c"host_disconnected\00", align 1
@const.274 = private constant [28 x i8] c"The warp host disconnected.\00", align 1
@const.276 = private constant { i8*, i64 } { i8* getelementptr inbounds ([28 x i8], [28 x i8]* @const.274, i32 0, i32 0), i64 27 }
@const.277 = private constant [49 x i8] c"Error receiving host update: session=%s error=%v\00", align 1
@type..struct.4.4x.5fn.0func.8.9.8string.9.2val.0.1command_line_arguments.Session.5 = weak constant %StructType.0 { %_type.0 { i64 16, i64 16, i32 1305822420, i8 25, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..da, i32 0, i32 0), { i8*, i64 }* @go..C410, %uncommonType.0* null, %_type.0* null }, %IPST.47 { %structField.0* getelementptr inbounds ([2 x %structField.0], [2 x %structField.0]* @go..C413, i32 0, i32 0), i64 2, i64 2 } }, comdat
@const.279 = private constant [73 x i8] c"struct { fn func() string; val *\09command_line_arguments\09daemon.Session }\00", align 1
@go..C410 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([73 x i8], [73 x i8]* @const.279, i32 0, i32 0), i64 72 }
@go..C411 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @const.66, i32 0, i32 0), i64 2 }
@const.280 = private constant [4 x i8] c"val\00", align 1
@go..C412 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @const.280, i32 0, i32 0), i64 3 }
@go..C413 = internal global [2 x %structField.0] [%structField.0 { { i8*, i64 }* @go..C411, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.9.8string.9, i32 0, i32 0), { i8*, i64 }* null, i64 0 }, %structField.0 { { i8*, i64 }* @go..C412, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Session, i32 0, i32 0), { i8*, i64 }* null, i64 16 }]
@const.281 = private constant [61 x i8] c"Host update warp mismatch: session=%s expected=% received=%s\00", align 1
@const.283 = private constant [38 x i8] c"Host credentials mismatch: session=%s\00", align 1
@type..map.6string.7github_com_spolu_warp.Mode = weak constant %MapType.0 { %_type.0 { i64 8, i64 8, i32 1260617293, i8 21, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C414, %uncommonType.0* null, %_type.0* null }, %_type.0* @string..d, %_type.0* @github_com_spolu_warp.Mode..d, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.Mode.2overflow.0.1.4void.5.5, i32 0, i32 0), %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.Mode.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.Mode.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5, i32 0, i32 0), i8 16, i8 0, i8 8, i8 0, i16 208, i8 1, i8 1 }, comdat
@const.286 = private constant [44 x i8] c"map[string]\09github_com_spolu_warp\09warp.Mode\00", align 1
@go..C414 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([44 x i8], [44 x i8]* @const.286, i32 0, i32 0), i64 43 }
@type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.Mode.2overflow.0.1.4void.5.5 = weak constant %StructType.0 { %_type.0 { i64 208, i64 208, i32 1656237764, i8 25, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @gcbits..kwkbaba, i32 0, i32 0), { i8*, i64 }* @go..C415, %uncommonType.0* null, %_type.0* null }, %IPST.47 { %structField.0* getelementptr inbounds ([4 x %structField.0], [4 x %structField.0]* @go..C422, i32 0, i32 0), i64 4, i64 4 } }, comdat
@gcbits..kwkbaba = weak constant [4 x i8] c"\AA\AA\00\02", comdat
@const.287 = private constant [100 x i8] c"struct { topbits [8]uint8; keys [8]string; values [8]\09github_com_spolu_warp\09warp.Mode; overflow * }\00", align 1
@go..C415 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([100 x i8], [100 x i8]* @const.287, i32 0, i32 0), i64 99 }
@go..C416 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.139, i32 0, i32 0), i64 7 }
@go..C417 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.141, i32 0, i32 0), i64 4 }
@go..C418 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.144, i32 0, i32 0), i64 6 }
@type...68x.7github_com_spolu_warp.Mode = weak constant %ArrayType.0 { %_type.0 { i64 64, i64 0, i32 -2070794411, i8 -111, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* null, { i8*, i64 }* @go..C419, %uncommonType.0* null, %_type.0* null }, %_type.0* @github_com_spolu_warp.Mode..d, %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7github_com_spolu_warp.Mode, i32 0, i32 0), i64 8 }, comdat
@const.288 = private constant [36 x i8] c"[8]\09github_com_spolu_warp\09warp.Mode\00", align 1
@go..C419 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([36 x i8], [36 x i8]* @const.288, i32 0, i32 0), i64 35 }
@type...6.7github_com_spolu_warp.Mode = weak constant %SliceType.0 { %_type.0 { i64 24, i64 8, i32 -1035397199, i8 23, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C420, %uncommonType.0* null, %_type.0* null }, %_type.0* @github_com_spolu_warp.Mode..d }, comdat
@const.289 = private constant [35 x i8] c"[]\09github_com_spolu_warp\09warp.Mode\00", align 1
@go..C420 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([35 x i8], [35 x i8]* @const.289, i32 0, i32 0), i64 34 }
@go..C421 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @const.146, i32 0, i32 0), i64 8 }
@go..C422 = internal global [4 x %structField.0] [%structField.0 { { i8*, i64 }* @go..C416, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%ArrayType.0, %ArrayType.0* @type...68x.7uint8, i32 0, i32 0), { i8*, i64 }* null, i64 0 }, %structField.0 { { i8*, i64 }* @go..C417, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%ArrayType.0, %ArrayType.0* @type...68x.7string, i32 0, i32 0), { i8*, i64 }* null, i64 16 }, %structField.0 { { i8*, i64 }* @go..C418, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%ArrayType.0, %ArrayType.0* @type...68x.7github_com_spolu_warp.Mode, i32 0, i32 0), { i8*, i64 }* null, i64 272 }, %structField.0 { { i8*, i64 }* @go..C421, { i8*, i64 }* null, %_type.0* @unsafe.Pointer..d, { i8*, i64 }* null, i64 400 }]
@type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.Mode.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.Mode.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5 = weak constant %StructType.0 { %_type.0 { i64 48, i64 48, i32 1404508644, i8 25, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..mb, i32 0, i32 0), { i8*, i64 }* @go..C423, %uncommonType.0* null, %_type.0* null }, %IPST.47 { %structField.0* getelementptr inbounds ([9 x %structField.0], [9 x %structField.0]* @go..C434, i32 0, i32 0), i64 9, i64 9 } }, comdat
@const.290 = private constant [326 x i8] c"struct { count int; flags uint8; B uint8; noverflow uint16; hash0 uint32; buckets *struct { topbits [8]uint8; keys [8]string; values [8]\09github_com_spolu_warp\09warp.Mode; overflow * }; oldbuckets *struct { topbits [8]uint8; keys [8]string; values [8]\09github_com_spolu_warp\09warp.Mode; overflow * }; nevacuate uintptr; extra * }\00", align 1
@go..C423 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([326 x i8], [326 x i8]* @const.290, i32 0, i32 0), i64 325 }
@go..C424 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.148, i32 0, i32 0), i64 5 }
@go..C425 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.151, i32 0, i32 0), i64 5 }
@go..C426 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @const.152, i32 0, i32 0), i64 1 }
@go..C427 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @const.153, i32 0, i32 0), i64 9 }
@go..C428 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.156, i32 0, i32 0), i64 5 }
@go..C429 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.159, i32 0, i32 0), i64 7 }
@type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.Mode.2overflow.0.1.4void.5.5 = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 730000457, i8 54, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.3*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C430, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.Mode.2overflow.0.1.4void.5.5, i32 0, i32 0) }, comdat
@const.291 = private constant [101 x i8] c"*struct { topbits [8]uint8; keys [8]string; values [8]\09github_com_spolu_warp\09warp.Mode; overflow * }\00", align 1
@go..C430 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([101 x i8], [101 x i8]* @const.291, i32 0, i32 0), i64 100 }
@go..C431 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @const.161, i32 0, i32 0), i64 10 }
@go..C432 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @const.162, i32 0, i32 0), i64 9 }
@go..C433 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.165, i32 0, i32 0), i64 5 }
@go..C434 = internal global [9 x %structField.0] [%structField.0 { { i8*, i64 }* @go..C424, { i8*, i64 }* null, %_type.0* @int..d, { i8*, i64 }* null, i64 0 }, %structField.0 { { i8*, i64 }* @go..C425, { i8*, i64 }* null, %_type.0* @uint8..d, { i8*, i64 }* null, i64 16 }, %structField.0 { { i8*, i64 }* @go..C426, { i8*, i64 }* null, %_type.0* @uint8..d, { i8*, i64 }* null, i64 18 }, %structField.0 { { i8*, i64 }* @go..C427, { i8*, i64 }* null, %_type.0* @uint16..d, { i8*, i64 }* null, i64 20 }, %structField.0 { { i8*, i64 }* @go..C428, { i8*, i64 }* null, %_type.0* @uint32..d, { i8*, i64 }* null, i64 24 }, %structField.0 { { i8*, i64 }* @go..C429, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.Mode.2overflow.0.1.4void.5.5, i32 0, i32 0), { i8*, i64 }* null, i64 32 }, %structField.0 { { i8*, i64 }* @go..C431, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.Mode.2overflow.0.1.4void.5.5, i32 0, i32 0), { i8*, i64 }* null, i64 48 }, %structField.0 { { i8*, i64 }* @go..C432, { i8*, i64 }* null, %_type.0* @uintptr..d, { i8*, i64 }* null, i64 64 }, %structField.0 { { i8*, i64 }* @go..C433, { i8*, i64 }* null, %_type.0* @unsafe.Pointer..d, { i8*, i64 }* null, i64 80 }]
@const.292 = private constant [50 x i8] c"Unknown user from host update: session=%s user=%s\00", align 1
@const.294 = private constant [49 x i8] c"Received host update: session=%s cols=%d rows=%d\00", align 1
@const.298 = private constant [21 x i8] c"authorization_failed\00", align 1
@const.299 = private constant [25 x i8] c"Session secret mismatch.\00", align 1
@const.301 = private constant { i8*, i64 } { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @const.299, i32 0, i32 0), i64 24 }
@const.303 = private constant [35 x i8] c"Client session running: session=%s\00", align 1
@const.305 = private constant [31 x i8] c"Cleaning-up client: session=%s\00", align 1
@gcbits..ha = weak constant [1 x i8] c"\07", comdat
@gcbits..GGGGa = weak constant [3 x i8] c"\FF\FF\0F", comdat
@gcbits..pppppppppppppppppa = weak constant [11 x i8] c"\EF\BD\F7\DE{\EF\BD\F7\DE{\0F", comdat
@gcbits..ppaa = weak constant [2 x i8] c"\EF\01", comdat
@gcbits..GGGGGGGG = weak constant [5 x i8] c"\FF\FF\FF\FF\FF", comdat
@gcbits..Ga = weak constant [1 x i8] c"\1F", comdat
@gcbits..ppppa = weak constant [3 x i8] c"\EF\BD\07", comdat
@gcbits..pppppppppa = weak constant [6 x i8] c"\EF\BD\F7\DE{\0F", comdat
@gcbits..ppppppa = weak constant [4 x i8] c"\EF\BD\F7\1E", comdat
@gcbits..ppppp = weak constant [3 x i8] c"\EF\BD\F7", comdat
@go..C0 = internal global { i8*, i64, [67 x { i8*, i64, i64, i8* }] } { i8* null, i64 67, [67 x { i8*, i64, i64, i8* }] [{ i8*, i64, i64, i8* } { i8* bitcast ([3 x %_type.0*]* @go..C14 to i8*), i64 24, i64 24, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ha, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([4 x %_type.0*]* @go..C17 to i8*), i64 32, i64 32, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..pa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C21 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([2 x %_type.0*]* @go..C24 to i8*), i64 16, i64 16, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..da, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C31 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C36 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C38 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C39 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([4 x %method.0]* @go..C40 to i8*), i64 160, i64 160, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @gcbits..GGGGa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([17 x %structField.0]* @go..C82 to i8*), i64 680, i64 672, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @gcbits..pppppppppppppppppa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([2 x %structField.0]* @go..C88 to i8*), i64 80, i64 72, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @gcbits..ppaa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %structField.0]* @go..C91 to i8*), i64 40, i64 32, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..pa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C100 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %imethod.0]* @go..C107 to i8*), i64 24, i64 24, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ha, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C108 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([2 x %_type.0*]* @go..C110 to i8*), i64 16, i64 16, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..da, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C111 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([2 x %_type.0*]* @go..C115 to i8*), i64 16, i64 16, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..da, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C116 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([3 x %_type.0*]* @go..C118 to i8*), i64 24, i64 24, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ha, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C119 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([2 x %_type.0*]* @go..C123 to i8*), i64 16, i64 16, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..da, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C124 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([3 x %_type.0*]* @go..C126 to i8*), i64 24, i64 24, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ha, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C127 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([4 x %method.0]* @go..C130 to i8*), i64 160, i64 160, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @gcbits..GGGGa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C145 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C147 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([2 x %_type.0*]* @go..C149 to i8*), i64 16, i64 16, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..da, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C150 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C153 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C154 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([2 x %_type.0*]* @go..C156 to i8*), i64 16, i64 16, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..da, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C157 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([2 x %_type.0*]* @go..C161 to i8*), i64 16, i64 16, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..da, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([3 x %_type.0*]* @go..C164 to i8*), i64 24, i64 24, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ha, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([3 x %_type.0*]* @go..C177 to i8*), i64 24, i64 24, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ha, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([4 x %_type.0*]* @go..C180 to i8*), i64 32, i64 32, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..pa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([2 x %_type.0*]* @go..C187 to i8*), i64 16, i64 16, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..da, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([8 x %method.0]* @go..C191 to i8*), i64 320, i64 320, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @gcbits..GGGGGGGG, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C208 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C209 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([2 x %_type.0*]* @go..C211 to i8*), i64 16, i64 16, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..da, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C212 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %method.0]* @go..C213 to i8*), i64 40, i64 40, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..Ga, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([2 x %_type.0*]* @go..C230 to i8*), i64 16, i64 16, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..da, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C231 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %method.0]* @go..C232 to i8*), i64 40, i64 40, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..Ga, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([4 x %structField.0]* @go..C253 to i8*), i64 160, i64 152, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @gcbits..ppppa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([9 x %structField.0]* @go..C285 to i8*), i64 360, i64 352, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @gcbits..pppppppppa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([4 x %structField.0]* @go..C286 to i8*), i64 160, i64 152, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @gcbits..ppppa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([2 x %structField.0]* @go..C289 to i8*), i64 80, i64 72, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @gcbits..ppaa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([4 x %structField.0]* @go..C300 to i8*), i64 160, i64 152, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @gcbits..ppppa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([9 x %structField.0]* @go..C312 to i8*), i64 360, i64 352, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @gcbits..pppppppppa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([6 x %structField.0]* @go..C318 to i8*), i64 240, i64 232, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @gcbits..ppppppa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([4 x %structField.0]* @go..C326 to i8*), i64 160, i64 152, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @gcbits..ppppa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([9 x %structField.0]* @go..C338 to i8*), i64 360, i64 352, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @gcbits..pppppppppa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([5 x %structField.0]* @go..C341 to i8*), i64 200, i64 192, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @gcbits..ppppp, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([4 x %structField.0]* @go..C357 to i8*), i64 160, i64 152, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @gcbits..ppppa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([4 x %structField.0]* @go..C366 to i8*), i64 160, i64 152, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @gcbits..ppppa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([9 x %structField.0]* @go..C378 to i8*), i64 360, i64 352, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @gcbits..pppppppppa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([4 x %structField.0]* @go..C389 to i8*), i64 160, i64 152, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @gcbits..ppppa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([4 x %structField.0]* @go..C399 to i8*), i64 160, i64 152, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @gcbits..ppppa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([4 x %structField.0]* @go..C409 to i8*), i64 160, i64 152, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @gcbits..ppppa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([2 x %structField.0]* @go..C413 to i8*), i64 80, i64 72, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @gcbits..ppaa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([4 x %structField.0]* @go..C422 to i8*), i64 160, i64 152, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @gcbits..ppppa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([9 x %structField.0]* @go..C434 to i8*), i64 360, i64 352, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @gcbits..pppppppppa, i32 0, i32 0) }] }

declare i64 @reflect.rtype.Align(i8*, %.reflect.rtype.0*) #0

declare i8 @reflect.rtype.AssignableTo(i8*, %.reflect.rtype.0*, i64, i64) #0

declare i64 @reflect.rtype.Bits(i8*, %.reflect.rtype.0*) #0

declare i64 @reflect.rtype.ChanDir(i8*, %.reflect.rtype.0*) #0

declare i8 @reflect.rtype.Comparable(i8*, %.reflect.rtype.0*) #0

declare i8 @reflect.rtype.ConvertibleTo(i8*, %.reflect.rtype.0*, i64, i64) #0

declare { i64, i64 } @reflect.rtype.Elem(i8*, %.reflect.rtype.0*) #0

declare void @reflect.rtype.Field(%StructField.0*, i8*, %.reflect.rtype.0*, i64) #0

declare i64 @reflect.rtype.FieldAlign(i8*, %.reflect.rtype.0*) #0

declare void @reflect.rtype.FieldByIndex(%StructField.0*, i8*, %.reflect.rtype.0*, %IPST.28*) #0

declare void @reflect.rtype.FieldByName({ %StructField.0, i8 }*, i8*, %.reflect.rtype.0*, i64, i64) #0

declare void @reflect.rtype.FieldByNameFunc({ %StructField.0, i8 }*, i8*, %.reflect.rtype.0*, %__go_descriptor.36*) #0

declare i8 @reflect.rtype.Implements(i8*, %.reflect.rtype.0*, i64, i64) #0

declare { i64, i64 } @reflect.rtype.In(i8*, %.reflect.rtype.0*, i64) #0

declare i8 @reflect.rtype.IsVariadic(i8*, %.reflect.rtype.0*) #0

declare { i64, i64 } @reflect.rtype.Key(i8*, %.reflect.rtype.0*) #0

declare i64 @reflect.rtype.Kind(i8*, %.reflect.rtype.0*) #0

declare i64 @reflect.rtype.Len(i8*, %.reflect.rtype.0*) #0

declare void @reflect.rtype.Method(%Method.0*, i8*, %.reflect.rtype.0*, i64) #0

declare void @reflect.rtype.MethodByName({ %Method.0, i8 }*, i8*, %.reflect.rtype.0*, i64, i64) #0

declare { i64, i64 } @reflect.rtype.Name(i8*, %.reflect.rtype.0*) #0

declare i64 @reflect.rtype.NumField(i8*, %.reflect.rtype.0*) #0

declare i64 @reflect.rtype.NumIn(i8*, %.reflect.rtype.0*) #0

declare i64 @reflect.rtype.NumMethod(i8*, %.reflect.rtype.0*) #0

declare i64 @reflect.rtype.NumOut(i8*, %.reflect.rtype.0*) #0

declare { i64, i64 } @reflect.rtype.Out(i8*, %.reflect.rtype.0*, i64) #0

declare { i64, i64 } @reflect.rtype.PkgPath(i8*, %.reflect.rtype.0*) #0

declare i64 @reflect.rtype.Size(i8*, %.reflect.rtype.0*) #0

declare { i64, i64 } @reflect.rtype.String(i8*, %.reflect.rtype.0*) #0

declare %.reflect.rtype.0* @reflect.rtype.common(i8*, %.reflect.rtype.0*) #0

declare { i64, i64 } @reflect.rtype.rawString(i8*, %.reflect.rtype.0*) #0

declare %.reflect.uncommonType.0* @reflect.rtype.uncommon..stub(i8*, %.reflect.rtype.0*) #0

declare i8 @regexp.inputBytes.canCheckPrefix(i8*, %.regexp.inputBytes.0*) #0

declare i8 @regexp.inputBytes.context(i8*, %.regexp.inputBytes.0*, i64) #0

declare i8 @regexp.inputBytes.hasPrefix(i8*, %.regexp.inputBytes.0*, %Regexp.0*) #0

declare i64 @regexp.inputBytes.index(i8*, %.regexp.inputBytes.0*, %Regexp.0*, i64) #0

declare { i64, i64 } @regexp.inputBytes.step(i8*, %.regexp.inputBytes.0*, i64) #0

declare i8 @regexp.inputString.canCheckPrefix(i8*, %.regexp.inputString.0*) #0

declare i8 @regexp.inputString.context(i8*, %.regexp.inputString.0*, i64) #0

declare i8 @regexp.inputString.hasPrefix(i8*, %.regexp.inputString.0*, %Regexp.0*) #0

declare i64 @regexp.inputString.index(i8*, %.regexp.inputString.0*, %Regexp.0*, i64) #0

declare { i64, i64 } @regexp.inputString.step(i8*, %.regexp.inputString.0*, i64) #0

declare i8 @regexp.inputReader.canCheckPrefix(i8*, %.regexp.inputReader.0*) #0

declare i8 @regexp.inputReader.context(i8*, %.regexp.inputReader.0*, i64) #0

declare i8 @regexp.inputReader.hasPrefix(i8*, %.regexp.inputReader.0*, %Regexp.0*) #0

declare i64 @regexp.inputReader.index(i8*, %.regexp.inputReader.0*, %Regexp.0*, i64) #0

declare { i64, i64 } @regexp.inputReader.step(i8*, %.regexp.inputReader.0*, i64) #0

define void @command_line_arguments.Session.SendError(i8* nest nocapture readnone %nest.4, %Session.0* %ss, i64 %ctx.chunk0, i64 %ctx.chunk1, i64 %code.chunk0, i64 %code.chunk1, { i8*, i64 }* byval nocapture readonly %message) #0 personality i32 (i32, i32, i64, i8*, i8*)* @__gccgo_personality_v0 !dbg !9 {
entry:
  %tmp.39 = alloca %IPST.3, align 8
  %tmp.35 = alloca %IPST.3, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %message, metadata !387, metadata !DIExpression()), !dbg !388
  %tmpv.168 = alloca i8, align 1
  %tmpv.172 = alloca { %Mutex.0* }, align 8
  %tmpv.177 = alloca { i8*, i64 }, align 8
  %tmpv.179 = alloca { i8*, i64 }, align 8
  %tmpv.181 = alloca { i8*, i64 }, align 8
  %tmpv.182 = alloca [3 x %IPST.9], align 8
  %tmpv.183.sroa.3 = alloca { i8*, i64 }, align 8
  %tmpv.185 = alloca %Error.0, align 8
  %tmpv.189 = alloca { i8*, i64 }, align 8
  %tmpv.190 = alloca [2 x %IPST.9], align 8
  call void @llvm.dbg.value(metadata %Session.0* %ss, metadata !389, metadata !DIExpression()), !dbg !390
  call void @llvm.dbg.value(metadata i64 %ctx.chunk0, metadata !391, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !392
  call void @llvm.dbg.value(metadata i64 %ctx.chunk1, metadata !391, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !392
  call void @llvm.dbg.value(metadata i64 %code.chunk0, metadata !393, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !394
  call void @llvm.dbg.value(metadata i64 %code.chunk1, metadata !393, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !394
  store i8 0, i8* %tmpv.168, align 1
  %icmp.66 = icmp eq %Session.0* %ss, null, !dbg !395
  br i1 %icmp.66, label %then.65, label %fallthrough.65

finally.1:                                        ; preds = %else.71, %cont.35, %pad.2, %fallthrough.67, %catchpad.1
  %ehtmp.1.sroa.0.0 = phi i8* [ %ex2.1.fca.0.extract, %catchpad.1 ], [ undef, %fallthrough.67 ], [ undef, %pad.2 ], [ undef, %cont.35 ], [ undef, %else.71 ]
  %ehtmp.1.sroa.2.0 = phi i32 [ %ex2.1.fca.1.extract, %catchpad.1 ], [ undef, %fallthrough.67 ], [ undef, %pad.2 ], [ undef, %cont.35 ], [ undef, %else.71 ]
  %finvar.1.0 = phi i8 [ 0, %catchpad.1 ], [ 1, %fallthrough.67 ], [ 1, %pad.2 ], [ 1, %cont.35 ], [ 1, %else.71 ]
  br label %finish.1

pad.2:                                            ; preds = %else.71, %cont.37, %cont.36, %then.70, %cont.34, %cont.33, %fallthrough.69, %cont.30, %cont.29, %cont.28, %cont.27, %cont.26, %cont.25, %cont.24, %else.68, %fallthrough.66, %fallthrough.65, %then.65
  %ex.2 = landingpad { i8*, i32 }
          catch i8* null
  invoke void @runtime.checkdefer(i8* nest undef, i8* nonnull %tmpv.168)
          to label %finally.1 unwind label %catchpad.1, !dbg !396

then.65:                                          ; preds = %entry
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.65 unwind label %pad.2, !dbg !395

fallthrough.65:                                   ; preds = %entry, %then.65
  %field.184 = getelementptr inbounds %Session.0, %Session.0* %ss, i64 0, i32 16, !dbg !395
  %.field.ld.19 = load %Mutex.0*, %Mutex.0** %field.184, align 8, !dbg !395
  invoke void @sync.Mutex.Lock(i8* nest undef, %Mutex.0* %.field.ld.19)
          to label %fallthrough.66 unwind label %pad.2, !dbg !397

fallthrough.66:                                   ; preds = %fallthrough.65
  %0 = bitcast %Mutex.0** %field.184 to i64*, !dbg !398
  %.field.ld.2022 = load i64, i64* %0, align 8, !dbg !398
  %cast.532 = bitcast { %Mutex.0* }* %tmpv.172 to i8*
  %1 = bitcast { %Mutex.0* }* %tmpv.172 to i64*, !dbg !399
  store i64 %.field.ld.2022, i64* %1, align 8, !dbg !399
  invoke void @runtime.deferproc(i8* nest undef, i8* nonnull %tmpv.168, %__go_descriptor.50* bitcast (i8 (i8*, { %Mutex.0* }*)* @command_line_arguments.command_line_arguments..thunk3 to %__go_descriptor.50*), i8* nonnull %cast.532)
          to label %fallthrough.67 unwind label %pad.2, !dbg !399

fallthrough.67:                                   ; preds = %fallthrough.66
  %field.187 = getelementptr inbounds %Session.0, %Session.0* %ss, i64 0, i32 13, !dbg !400
  %.field.ld.21 = load i8, i8* %field.187, align 1, !dbg !400
  %2 = and i8 %.field.ld.21, 1, !dbg !401
  %trunc.68 = icmp eq i8 %2, 0, !dbg !401
  br i1 %trunc.68, label %else.68, label %finally.1

else.68:                                          ; preds = %fallthrough.67
  %call.35 = invoke { i64, i64 } @command_line_arguments.Session.ToString(i8* nest undef, %Session.0* nonnull %ss)
          to label %cont.24 unwind label %pad.2, !dbg !402

cont.24:                                          ; preds = %else.68
  %call.36 = invoke i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d)
          to label %cont.25 unwind label %pad.2, !dbg !403

cont.25:                                          ; preds = %cont.24
  %call.35.fca.1.extract = extractvalue { i64, i64 } %call.35, 1, !dbg !402
  %call.35.fca.0.extract = extractvalue { i64, i64 } %call.35, 0, !dbg !402
  %tmpv.175.sroa.0.0.cast.541.sroa_cast = bitcast { i8*, i64 }* %tmpv.177 to i64*
  store i64 %call.35.fca.0.extract, i64* %tmpv.175.sroa.0.0.cast.541.sroa_cast, align 8
  %tmpv.175.sroa.2.0.cast.541.sroa_idx9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.177, i64 0, i32 1
  store i64 %call.35.fca.1.extract, i64* %tmpv.175.sroa.2.0.cast.541.sroa_idx9, align 8
  %cast.544 = bitcast { i8*, i64 }* %tmpv.177 to i8*, !dbg !403
  invoke void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.36, i8* nonnull %cast.544)
          to label %cont.26 unwind label %pad.2, !dbg !403

cont.26:                                          ; preds = %cont.25
  %call.37 = invoke i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d)
          to label %cont.27 unwind label %pad.2, !dbg !403

cont.27:                                          ; preds = %cont.26
  %code.addr.sroa.0.0.cast.546.sroa_cast = bitcast { i8*, i64 }* %tmpv.179 to i64*
  store i64 %code.chunk0, i64* %code.addr.sroa.0.0.cast.546.sroa_cast, align 8
  %code.addr.sroa.3.0.cast.546.sroa_idx11 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.179, i64 0, i32 1
  store i64 %code.chunk1, i64* %code.addr.sroa.3.0.cast.546.sroa_idx11, align 8
  %cast.549 = bitcast { i8*, i64 }* %tmpv.179 to i8*, !dbg !403
  invoke void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.37, i8* nonnull %cast.549)
          to label %cont.28 unwind label %pad.2, !dbg !403

cont.28:                                          ; preds = %cont.27
  %call.38 = invoke i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d)
          to label %cont.29 unwind label %pad.2, !dbg !403

cont.29:                                          ; preds = %cont.28
  %cast.551 = bitcast { i8*, i64 }* %tmpv.181 to i8*
  %cast.552 = bitcast { i8*, i64 }* %message to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.551, i8* nonnull align 8 %cast.552, i64 16, i1 false)
  invoke void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.38, i8* nonnull %cast.551)
          to label %cont.30 unwind label %pad.2, !dbg !403

cont.30:                                          ; preds = %cont.29
  %tmp.32.sroa.0.0.cast.558.sroa_idx = getelementptr inbounds [3 x %IPST.9], [3 x %IPST.9]* %tmpv.182, i64 0, i64 0, i32 0, !dbg !403
  store %_type.0* @string..d, %_type.0** %tmp.32.sroa.0.0.cast.558.sroa_idx, align 8, !dbg !403
  %tmp.32.sroa.2.0.cast.558.sroa_idx17 = getelementptr inbounds [3 x %IPST.9], [3 x %IPST.9]* %tmpv.182, i64 0, i64 0, i32 1, !dbg !403
  store i8* %call.36, i8** %tmp.32.sroa.2.0.cast.558.sroa_idx17, align 8, !dbg !403
  %tmp.33.sroa.0.0.cast.560.sroa_idx = getelementptr inbounds [3 x %IPST.9], [3 x %IPST.9]* %tmpv.182, i64 0, i64 1, i32 0, !dbg !403
  store %_type.0* @string..d, %_type.0** %tmp.33.sroa.0.0.cast.560.sroa_idx, align 8, !dbg !403
  %tmp.33.sroa.2.0.cast.560.sroa_idx18 = getelementptr inbounds [3 x %IPST.9], [3 x %IPST.9]* %tmpv.182, i64 0, i64 1, i32 1, !dbg !403
  store i8* %call.37, i8** %tmp.33.sroa.2.0.cast.560.sroa_idx18, align 8, !dbg !403
  %tmp.34.sroa.0.0.cast.562.sroa_idx = getelementptr inbounds [3 x %IPST.9], [3 x %IPST.9]* %tmpv.182, i64 0, i64 2, i32 0, !dbg !403
  store %_type.0* @string..d, %_type.0** %tmp.34.sroa.0.0.cast.562.sroa_idx, align 8, !dbg !403
  %tmp.34.sroa.2.0.cast.562.sroa_idx19 = getelementptr inbounds [3 x %IPST.9], [3 x %IPST.9]* %tmpv.182, i64 0, i64 2, i32 1, !dbg !403
  store i8* %call.38, i8** %tmp.34.sroa.2.0.cast.562.sroa_idx19, align 8, !dbg !403
  %field.194 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.35, i64 0, i32 0, !dbg !403
  %cast.566 = getelementptr inbounds [3 x %IPST.9], [3 x %IPST.9]* %tmpv.182, i64 0, i64 0, !dbg !403
  store %IPST.9* %cast.566, %IPST.9** %field.194, align 8, !dbg !403
  %field.195 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.35, i64 0, i32 1, !dbg !403
  store i64 3, i64* %field.195, align 8, !dbg !403
  %field.196 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.35, i64 0, i32 2, !dbg !403
  store i64 3, i64* %field.196, align 8, !dbg !403
  invoke void @github_com_spolu_warp_lib_logging.Logf(i8* nest undef, i64 %ctx.chunk0, i64 %ctx.chunk1, i64 ptrtoint ([53 x i8]* @const.67 to i64), i64 52, %IPST.3* byval nonnull %tmp.35)
          to label %fallthrough.69 unwind label %pad.2, !dbg !403

fallthrough.69:                                   ; preds = %cont.30
  %tmpv.183.sroa.3.16.sroa_cast = bitcast { i8*, i64 }* %tmpv.183.sroa.3 to i8*, !dbg !404
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %tmpv.183.sroa.3.16.sroa_cast, i8* nonnull align 8 %cast.552, i64 16, i1 false), !dbg !404
  %field.199 = getelementptr inbounds %Session.0, %Session.0* %ss, i64 0, i32 11, !dbg !406
  %.field.ld.22 = load %Encoder.0*, %Encoder.0** %field.199, align 8, !dbg !406
  %call.39 = invoke i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @github_com_spolu_warp.Error..d, i64 0, i32 0))
          to label %cont.33 unwind label %pad.2, !dbg !404

cont.33:                                          ; preds = %fallthrough.69
  %tmpv.183.sroa.0.0.cast.573.sroa_cast = bitcast %Error.0* %tmpv.185 to i64*
  store i64 %code.chunk0, i64* %tmpv.183.sroa.0.0.cast.573.sroa_cast, align 8
  %tmpv.183.sroa.2.0.cast.573.sroa_idx14 = getelementptr inbounds %Error.0, %Error.0* %tmpv.185, i64 0, i32 0, i32 1
  store i64 %code.chunk1, i64* %tmpv.183.sroa.2.0.cast.573.sroa_idx14, align 8
  %tmpv.183.sroa.3.0.cast.573.sroa_idx = getelementptr inbounds %Error.0, %Error.0* %tmpv.185, i64 0, i32 1
  %tmpv.183.sroa.3.0.cast.573.sroa_cast = bitcast { i8*, i64 }* %tmpv.183.sroa.3.0.cast.573.sroa_idx to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %tmpv.183.sroa.3.0.cast.573.sroa_cast, i8* nonnull align 8 %tmpv.183.sroa.3.16.sroa_cast, i64 16, i1 false)
  %cast.577 = bitcast %Error.0* %tmpv.185 to i8*, !dbg !404
  invoke void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @github_com_spolu_warp.Error..d, i64 0, i32 0), i8* %call.39, i8* nonnull %cast.577)
          to label %cont.34 unwind label %pad.2, !dbg !404

cont.34:                                          ; preds = %cont.33
  %3 = ptrtoint i8* %call.39 to i64, !dbg !404
  %call.40 = invoke { i64, i64 } @encoding_gob.Encoder.Encode(i8* nest undef, %Encoder.0* %.field.ld.22, i64 ptrtoint (%StructType.0* @github_com_spolu_warp.Error..d to i64), i64 %3)
          to label %cont.35 unwind label %pad.2, !dbg !407

cont.35:                                          ; preds = %cont.34
  %call.40.fca.0.extract = extractvalue { i64, i64 } %call.40, 0, !dbg !407
  %call.40.fca.1.extract = extractvalue { i64, i64 } %call.40, 1, !dbg !407
  call void @llvm.dbg.value(metadata i64 %call.40.fca.0.extract, metadata !408, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !409
  call void @llvm.dbg.value(metadata i64 %call.40.fca.1.extract, metadata !408, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !409
  %icmp.71 = icmp eq i64 %call.40.fca.0.extract, 0, !dbg !410
  br i1 %icmp.71, label %finally.1, label %then.70

then.70:                                          ; preds = %cont.35
  %call.41 = invoke { i64, i64 } @command_line_arguments.Session.ToString(i8* nest undef, %Session.0* nonnull %ss)
          to label %cont.36 unwind label %pad.2, !dbg !411

cont.36:                                          ; preds = %then.70
  %call.42 = invoke i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d)
          to label %cont.37 unwind label %pad.2, !dbg !412

cont.37:                                          ; preds = %cont.36
  %call.41.fca.1.extract = extractvalue { i64, i64 } %call.41, 1, !dbg !411
  %call.41.fca.0.extract = extractvalue { i64, i64 } %call.41, 0, !dbg !411
  %tmpv.187.sroa.0.0.cast.589.sroa_cast = bitcast { i8*, i64 }* %tmpv.189 to i64*
  store i64 %call.41.fca.0.extract, i64* %tmpv.187.sroa.0.0.cast.589.sroa_cast, align 8
  %tmpv.187.sroa.2.0.cast.589.sroa_idx4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.189, i64 0, i32 1
  store i64 %call.41.fca.1.extract, i64* %tmpv.187.sroa.2.0.cast.589.sroa_idx4, align 8
  %cast.592 = bitcast { i8*, i64 }* %tmpv.189 to i8*, !dbg !412
  invoke void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.42, i8* nonnull %cast.592)
          to label %else.71 unwind label %pad.2, !dbg !412

else.71:                                          ; preds = %cont.37
  %4 = inttoptr i64 %call.40.fca.0.extract to i64*, !dbg !413
  %.field.ld.2323 = load i64, i64* %4, align 8, !dbg !413
  %5 = inttoptr i64 %call.40.fca.1.extract to i8*, !dbg !412
  %tmp.37.sroa.0.0.cast.596.sroa_idx = getelementptr inbounds [2 x %IPST.9], [2 x %IPST.9]* %tmpv.190, i64 0, i64 0, i32 0, !dbg !412
  store %_type.0* @string..d, %_type.0** %tmp.37.sroa.0.0.cast.596.sroa_idx, align 8, !dbg !412
  %tmp.37.sroa.2.0.cast.596.sroa_idx20 = getelementptr inbounds [2 x %IPST.9], [2 x %IPST.9]* %tmpv.190, i64 0, i64 0, i32 1, !dbg !412
  store i8* %call.42, i8** %tmp.37.sroa.2.0.cast.596.sroa_idx20, align 8, !dbg !412
  %tmp.38.sroa.0.0.cast.598.sroa_idx = getelementptr inbounds [2 x %IPST.9], [2 x %IPST.9]* %tmpv.190, i64 0, i64 1, i32 0, !dbg !412
  %6 = bitcast %_type.0** %tmp.38.sroa.0.0.cast.598.sroa_idx to i64*, !dbg !412
  store i64 %.field.ld.2323, i64* %6, align 8, !dbg !412
  %tmp.38.sroa.2.0.cast.598.sroa_idx21 = getelementptr inbounds [2 x %IPST.9], [2 x %IPST.9]* %tmpv.190, i64 0, i64 1, i32 1, !dbg !412
  store i8* %5, i8** %tmp.38.sroa.2.0.cast.598.sroa_idx21, align 8, !dbg !412
  %field.210 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.39, i64 0, i32 0, !dbg !412
  %cast.602 = getelementptr inbounds [2 x %IPST.9], [2 x %IPST.9]* %tmpv.190, i64 0, i64 0, !dbg !412
  store %IPST.9* %cast.602, %IPST.9** %field.210, align 8, !dbg !412
  %field.211 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.39, i64 0, i32 1, !dbg !412
  store i64 2, i64* %field.211, align 8, !dbg !412
  %field.212 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.39, i64 0, i32 2, !dbg !412
  store i64 2, i64* %field.212, align 8, !dbg !412
  invoke void @github_com_spolu_warp_lib_logging.Logf(i8* nest undef, i64 %ctx.chunk0, i64 %ctx.chunk1, i64 ptrtoint ([49 x i8]* @const.69 to i64), i64 48, %IPST.3* byval nonnull %tmp.39)
          to label %finally.1 unwind label %pad.2, !dbg !412

catchpad.1:                                       ; preds = %pad.2
  %ex2.1 = landingpad { i8*, i32 }
          cleanup
  %ex2.1.fca.0.extract = extractvalue { i8*, i32 } %ex2.1, 0
  %ex2.1.fca.1.extract = extractvalue { i8*, i32 } %ex2.1, 1
  br label %finally.1

pad.3:                                            ; preds = %finish.1
  %ex.3 = landingpad { i8*, i32 }
          catch i8* null
  call void @runtime.checkdefer(i8* nest undef, i8* nonnull %tmpv.168), !dbg !396
  br label %finish.1

finish.1:                                         ; preds = %pad.3, %finally.1
  invoke void @runtime.deferreturn(i8* nest undef, i8* nonnull %tmpv.168)
          to label %cont.41 unwind label %pad.3, !dbg !396

cont.41:                                          ; preds = %finish.1
  %icmp.72 = icmp eq i8 %finvar.1.0, 1
  br i1 %icmp.72, label %finret.1, label %finres.1

finres.1:                                         ; preds = %cont.41
  %excv.1.fca.0.insert = insertvalue { i8*, i32 } undef, i8* %ehtmp.1.sroa.0.0, 0
  %excv.1.fca.1.insert = insertvalue { i8*, i32 } %excv.1.fca.0.insert, i32 %ehtmp.1.sroa.2.0, 1
  resume { i8*, i32 } %excv.1.fca.1.insert

finret.1:                                         ; preds = %cont.41
  ret void, !dbg !414
}

define void @command_line_arguments.Session.SendInternalError(i8* nest nocapture readnone %nest.5, %Session.0* %ss, i64 %ctx.chunk0, i64 %ctx.chunk1) #0 !dbg !415 {
entry:
  %tmp.41 = alloca %IPST.3, align 8
  %tmpv.194 = alloca { i8*, i64 }, align 8
  %tmpv.195 = alloca [1 x %IPST.9], align 8
  %tmpv.196 = alloca { i8*, i64 }, align 8
  call void @llvm.dbg.value(metadata %Session.0* %ss, metadata !418, metadata !DIExpression()), !dbg !419
  call void @llvm.dbg.value(metadata i64 %ctx.chunk0, metadata !420, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !421
  call void @llvm.dbg.value(metadata i64 %ctx.chunk1, metadata !420, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !421
  %call.43 = call { i64, i64 } @command_line_arguments.Session.ToString(i8* nest undef, %Session.0* %ss), !dbg !422
  %call.43.fca.0.extract = extractvalue { i64, i64 } %call.43, 0, !dbg !422
  %call.43.fca.1.extract = extractvalue { i64, i64 } %call.43, 1, !dbg !422
  %call.44 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !423
  %tmpv.192.sroa.0.0.cast.610.sroa_cast = bitcast { i8*, i64 }* %tmpv.194 to i64*
  store i64 %call.43.fca.0.extract, i64* %tmpv.192.sroa.0.0.cast.610.sroa_cast, align 8
  %tmpv.192.sroa.2.0.cast.610.sroa_idx4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.194, i64 0, i32 1
  store i64 %call.43.fca.1.extract, i64* %tmpv.192.sroa.2.0.cast.610.sroa_idx4, align 8
  %cast.613 = bitcast { i8*, i64 }* %tmpv.194 to i8*, !dbg !423
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.44, i8* nonnull %cast.613), !dbg !423
  %tmp.40.sroa.0.0.cast.615.sroa_idx = getelementptr inbounds [1 x %IPST.9], [1 x %IPST.9]* %tmpv.195, i64 0, i64 0, i32 0, !dbg !423
  store %_type.0* @string..d, %_type.0** %tmp.40.sroa.0.0.cast.615.sroa_idx, align 8, !dbg !423
  %tmp.40.sroa.2.0.cast.615.sroa_idx5 = getelementptr inbounds [1 x %IPST.9], [1 x %IPST.9]* %tmpv.195, i64 0, i64 0, i32 1, !dbg !423
  store i8* %call.44, i8** %tmp.40.sroa.2.0.cast.615.sroa_idx5, align 8, !dbg !423
  %field.216 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.41, i64 0, i32 0, !dbg !423
  %cast.618 = getelementptr inbounds [1 x %IPST.9], [1 x %IPST.9]* %tmpv.195, i64 0, i64 0, !dbg !423
  store %IPST.9* %cast.618, %IPST.9** %field.216, align 8, !dbg !423
  %field.217 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.41, i64 0, i32 1, !dbg !423
  store i64 1, i64* %field.217, align 8, !dbg !423
  %field.218 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.41, i64 0, i32 2, !dbg !423
  store i64 1, i64* %field.218, align 8, !dbg !423
  %call.45 = call { i64, i64 } @fmt.Sprintf(i8* nest undef, i64 ptrtoint ([54 x i8]* @const.71 to i64), i64 53, %IPST.3* byval nonnull %tmp.41), !dbg !423
  %call.45.fca.0.extract = extractvalue { i64, i64 } %call.45, 0, !dbg !423
  %call.45.fca.1.extract = extractvalue { i64, i64 } %call.45, 1, !dbg !423
  %sret.actual.25.sroa.0.0.cast.620.sroa_cast = bitcast { i8*, i64 }* %tmpv.196 to i64*
  store i64 %call.45.fca.0.extract, i64* %sret.actual.25.sroa.0.0.cast.620.sroa_cast, align 8
  %sret.actual.25.sroa.2.0.cast.620.sroa_idx2 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.196, i64 0, i32 1
  store i64 %call.45.fca.1.extract, i64* %sret.actual.25.sroa.2.0.cast.620.sroa_idx2, align 8
  call void @command_line_arguments.Session.SendError(i8* nest undef, %Session.0* %ss, i64 %ctx.chunk0, i64 %ctx.chunk1, i64 ptrtoint ([15 x i8]* @const.73 to i64), i64 14, { i8*, i64 }* byval nonnull %tmpv.196), !dbg !424
  ret void
}

define void @command_line_arguments.Session.TearDown(i8* nest nocapture readnone %nest.2, %Session.0* %param) #0 personality i32 (i32, i32, i64, i8*, i8*)* @__gccgo_personality_v0 !dbg !425 {
entry:
  %tmpv.149 = alloca %Session.0*, align 8
  %tmpv.150 = alloca i8, align 1
  %tmpv.154 = alloca { %Mutex.0* }, align 8
  %tmpv.162 = alloca { i8*, %Session.0** }, align 8
  %tmpv.165 = alloca { %__go_descriptor.10* }, align 8
  call void @llvm.dbg.value(metadata %Session.0* %param, metadata !428, metadata !DIExpression()), !dbg !429
  store i8 0, i8* %tmpv.150, align 1
  %call.31 = invoke i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Session, i64 0, i32 0))
          to label %cont.0 unwind label %pad.0, !dbg !429

finally.0:                                        ; preds = %fallthrough.58, %cont.15, %pad.0, %catchpad.0
  %ehtmp.0.sroa.0.0 = phi i8* [ %ex2.0.fca.0.extract, %catchpad.0 ], [ undef, %pad.0 ], [ undef, %cont.15 ], [ undef, %fallthrough.58 ]
  %ehtmp.0.sroa.2.0 = phi i32 [ %ex2.0.fca.1.extract, %catchpad.0 ], [ undef, %pad.0 ], [ undef, %cont.15 ], [ undef, %fallthrough.58 ]
  %finvar.0.0 = phi i8 [ 0, %catchpad.0 ], [ 1, %pad.0 ], [ 1, %cont.15 ], [ 1, %fallthrough.58 ]
  br label %finish.0

pad.0:                                            ; preds = %cont.15, %cont.14, %fallthrough.63, %then.63, %cont.11, %cont.10, %fallthrough.62, %then.62, %then.61, %then.60, %then.58, %fallthrough.57, %then.57, %fallthrough.56, %then.56, %cont.0, %entry
  %ex.0 = landingpad { i8*, i32 }
          catch i8* null
  invoke void @runtime.checkdefer(i8* nest undef, i8* nonnull %tmpv.150)
          to label %finally.0 unwind label %catchpad.0, !dbg !430

cont.0:                                           ; preds = %entry
  %cast.491 = bitcast i8* %call.31 to %Session.0**, !dbg !429
  store %Session.0* %param, %Session.0** %tmpv.149, align 8
  %cast.494 = bitcast %Session.0** %tmpv.149 to i8*, !dbg !429
  invoke void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Session, i64 0, i32 0), i8* %call.31, i8* nonnull %cast.494)
          to label %cont.1 unwind label %pad.0, !dbg !429

cont.1:                                           ; preds = %cont.0
  call void @llvm.dbg.value(metadata %Session.0** %cast.491, metadata !431, metadata !DIExpression()), !dbg !429
  %.ld.29 = load %Session.0*, %Session.0** %cast.491, align 8, !dbg !433
  %icmp.56 = icmp eq %Session.0* %.ld.29, null, !dbg !434
  br i1 %icmp.56, label %then.56, label %fallthrough.56

then.56:                                          ; preds = %cont.1
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.56 unwind label %pad.0, !dbg !434

fallthrough.56:                                   ; preds = %cont.1, %then.56
  %field.171 = getelementptr inbounds %Session.0, %Session.0* %.ld.29, i64 0, i32 16, !dbg !434
  %.field.ld.11 = load %Mutex.0*, %Mutex.0** %field.171, align 8, !dbg !434
  invoke void @sync.Mutex.Lock(i8* nest undef, %Mutex.0* %.field.ld.11)
          to label %cont.3 unwind label %pad.0, !dbg !435

cont.3:                                           ; preds = %fallthrough.56
  %.ld.31 = load %Session.0*, %Session.0** %cast.491, align 8, !dbg !436
  %icmp.57 = icmp eq %Session.0* %.ld.31, null, !dbg !437
  br i1 %icmp.57, label %then.57, label %fallthrough.57

then.57:                                          ; preds = %cont.3
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.57 unwind label %pad.0, !dbg !437

fallthrough.57:                                   ; preds = %cont.3, %then.57
  %field.172 = getelementptr inbounds %Session.0, %Session.0* %.ld.31, i64 0, i32 16, !dbg !437
  %0 = bitcast %Mutex.0** %field.172 to i64*, !dbg !437
  %.field.ld.122 = load i64, i64* %0, align 8, !dbg !437
  %cast.497 = bitcast { %Mutex.0* }* %tmpv.154 to i8*
  %1 = bitcast { %Mutex.0* }* %tmpv.154 to i64*, !dbg !438
  store i64 %.field.ld.122, i64* %1, align 8, !dbg !438
  invoke void @runtime.deferproc(i8* nest undef, i8* nonnull %tmpv.150, %__go_descriptor.50* bitcast (i8 (i8*, { %Mutex.0* }*)* @command_line_arguments.command_line_arguments..thunk1 to %__go_descriptor.50*), i8* nonnull %cast.497)
          to label %cont.5 unwind label %pad.0, !dbg !438

cont.5:                                           ; preds = %fallthrough.57
  %.ld.39 = load %Session.0*, %Session.0** %cast.491, align 8, !dbg !439
  %icmp.62 = icmp eq %Session.0* %.ld.39, null, !dbg !440
  br i1 %icmp.62, label %then.58, label %fallthrough.58

then.58:                                          ; preds = %cont.5
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.58 unwind label %pad.0, !dbg !440

fallthrough.58:                                   ; preds = %cont.5, %then.58
  %field.180 = getelementptr inbounds %Session.0, %Session.0* %.ld.39, i64 0, i32 13, !dbg !440
  %.field.ld.15 = load i8, i8* %field.180, align 1, !dbg !440
  %icmp.63 = icmp eq i8 %.field.ld.15, 0, !dbg !441
  br i1 %icmp.63, label %then.59, label %finally.0

then.59:                                          ; preds = %fallthrough.58
  %.ld.33 = load %Session.0*, %Session.0** %cast.491, align 8, !dbg !442
  %icmp.58 = icmp eq %Session.0* %.ld.33, null, !dbg !443
  br i1 %icmp.58, label %then.60, label %fallthrough.60

then.60:                                          ; preds = %then.59
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.60 unwind label %pad.0, !dbg !443

fallthrough.60:                                   ; preds = %then.59, %then.60
  %field.174 = getelementptr inbounds %Session.0, %Session.0* %.ld.33, i64 0, i32 13, !dbg !443
  store i8 1, i8* %field.174, align 1, !dbg !444
  %.ld.35 = load %Session.0*, %Session.0** %cast.491, align 8, !dbg !445
  %icmp.59 = icmp eq %Session.0* %.ld.35, null, !dbg !446
  br i1 %icmp.59, label %then.61, label %fallthrough.61.thread

fallthrough.61.thread:                            ; preds = %fallthrough.60
  %field.1757 = getelementptr inbounds %Session.0, %Session.0* %.ld.35, i64 0, i32 15, !dbg !446
  %2 = bitcast %__go_descriptor.10** %field.1757 to void (i8*)***, !dbg !446
  %.field.ld.13358 = load void (i8*)**, void (i8*)*** %2, align 8, !dbg !446
  %deref.ld.449 = load void (i8*)*, void (i8*)** %.field.ld.13358, align 8, !dbg !446
  br label %fallthrough.62

then.61:                                          ; preds = %fallthrough.60
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.61 unwind label %pad.0, !dbg !446

fallthrough.61:                                   ; preds = %then.61
  %.ld.37.pr = load %Session.0*, %Session.0** %cast.491, align 8, !dbg !445
  %.field.ld.1335 = load void (i8*)**, void (i8*)*** inttoptr (i64 232 to void (i8*)***), align 8, !dbg !446
  %deref.ld.44 = load void (i8*)*, void (i8*)** %.field.ld.1335, align 8, !dbg !446
  %icmp.60 = icmp eq %Session.0* %.ld.37.pr, null, !dbg !446
  br i1 %icmp.60, label %then.62, label %fallthrough.62

then.62:                                          ; preds = %fallthrough.61
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.62 unwind label %pad.0, !dbg !446

fallthrough.62:                                   ; preds = %fallthrough.61.thread, %fallthrough.61, %then.62
  %deref.ld.4412 = phi void (i8*)* [ %deref.ld.449, %fallthrough.61.thread ], [ %deref.ld.44, %fallthrough.61 ], [ %deref.ld.44, %then.62 ]
  %.ld.3711 = phi %Session.0* [ %.ld.35, %fallthrough.61.thread ], [ %.ld.37.pr, %fallthrough.61 ], [ null, %then.62 ]
  %field.176 = getelementptr inbounds %Session.0, %Session.0* %.ld.3711, i64 0, i32 15, !dbg !446
  %3 = bitcast %__go_descriptor.10** %field.176 to i8**, !dbg !446
  %.field.ld.146 = load i8*, i8** %3, align 8, !dbg !446
  invoke void %deref.ld.4412(i8* nest %.field.ld.146)
          to label %cont.10 unwind label %pad.0, !dbg !446

cont.10:                                          ; preds = %fallthrough.62
  %call.32 = invoke i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.4x.5.f.f.0.1.4void.5.2.command_line_arguments.ss1.0.1.1command_line_arguments.Session.5, i64 0, i32 0))
          to label %cont.11 unwind label %pad.0, !dbg !447

cont.11:                                          ; preds = %cont.10
  %field.177 = getelementptr inbounds { i8*, %Session.0** }, { i8*, %Session.0** }* %tmpv.162, i64 0, i32 0, !dbg !447
  store i8* bitcast (void (i8*)* @command_line_arguments..1command_line_arguments.Session.TearDown..func1 to i8*), i8** %field.177, align 8, !dbg !447
  %field.178 = getelementptr inbounds { i8*, %Session.0** }, { i8*, %Session.0** }* %tmpv.162, i64 0, i32 1, !dbg !447
  %4 = bitcast %Session.0*** %field.178 to i8**, !dbg !447
  store i8* %call.31, i8** %4, align 8, !dbg !447
  %cast.514 = bitcast { i8*, %Session.0** }* %tmpv.162 to i8*, !dbg !447
  invoke void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.4x.5.f.f.0.1.4void.5.2.command_line_arguments.ss1.0.1.1command_line_arguments.Session.5, i64 0, i32 0), i8* %call.32, i8* nonnull %cast.514)
          to label %cont.12 unwind label %pad.0, !dbg !447

cont.12:                                          ; preds = %cont.11
  %icmp.61 = icmp eq i8* %call.32, null, !dbg !448
  br i1 %icmp.61, label %then.63, label %fallthrough.63

then.63:                                          ; preds = %cont.12
  invoke void @__go_runtime_error(i8* nest undef, i32 11)
          to label %fallthrough.63 unwind label %pad.0, !dbg !448

fallthrough.63:                                   ; preds = %then.63, %cont.12
  %call.33 = invoke i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.4x.5fn.0func.8.9.8.9.5, i64 0, i32 0))
          to label %cont.14 unwind label %pad.0, !dbg !448

cont.14:                                          ; preds = %fallthrough.63
  %5 = bitcast { %__go_descriptor.10* }* %tmpv.165 to i8**, !dbg !448
  store i8* %call.32, i8** %5, align 8, !dbg !448
  %cast.523 = bitcast { %__go_descriptor.10* }* %tmpv.165 to i8*, !dbg !448
  invoke void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.4x.5fn.0func.8.9.8.9.5, i64 0, i32 0), i8* %call.33, i8* nonnull %cast.523)
          to label %cont.15 unwind label %pad.0, !dbg !448

cont.15:                                          ; preds = %cont.14
  invoke void @__go_go(i8* nest undef, %__go_descriptor.50* bitcast (void (i8*, { %__go_descriptor.10* }*)* @command_line_arguments.command_line_arguments..thunk2 to %__go_descriptor.50*), i8* %call.33)
          to label %finally.0 unwind label %pad.0, !dbg !448

catchpad.0:                                       ; preds = %pad.0
  %ex2.0 = landingpad { i8*, i32 }
          cleanup
  %ex2.0.fca.0.extract = extractvalue { i8*, i32 } %ex2.0, 0
  %ex2.0.fca.1.extract = extractvalue { i8*, i32 } %ex2.0, 1
  br label %finally.0

pad.1:                                            ; preds = %finish.0
  %ex.1 = landingpad { i8*, i32 }
          catch i8* null
  call void @runtime.checkdefer(i8* nest undef, i8* nonnull %tmpv.150), !dbg !430
  br label %finish.0

finish.0:                                         ; preds = %pad.1, %finally.0
  invoke void @runtime.deferreturn(i8* nest undef, i8* nonnull %tmpv.150)
          to label %cont.18 unwind label %pad.1, !dbg !430

cont.18:                                          ; preds = %finish.0
  %icmp.64 = icmp eq i8 %finvar.0.0, 1
  br i1 %icmp.64, label %finret.0, label %finres.0

finres.0:                                         ; preds = %cont.18
  %excv.0.fca.0.insert = insertvalue { i8*, i32 } undef, i8* %ehtmp.0.sroa.0.0, 0
  %excv.0.fca.1.insert = insertvalue { i8*, i32 } %excv.0.fca.0.insert, i32 %ehtmp.0.sroa.2.0, 1
  resume { i8*, i32 } %excv.0.fca.1.insert

finret.0:                                         ; preds = %cont.18
  ret void
}

define { i64, i64 } @command_line_arguments.Session.ToString(i8* nest nocapture readnone %nest.1, %Session.0* readonly %ss) #0 !dbg !449 {
entry:
  %tmp.31 = alloca %IPST.3, align 8
  %tmpv.134 = alloca { i8*, i64 }, align 8
  %tmpv.136 = alloca { i8*, i64 }, align 8
  %tmpv.138 = alloca { i8*, i64 }, align 8
  %tmpv.141 = alloca { i8*, i64 }, align 8
  %tmpv.143 = alloca { i8*, i64 }, align 8
  %tmpv.145 = alloca { i8*, i64 }, align 8
  %tmpv.146 = alloca [3 x %IPST.9], align 8
  call void @llvm.dbg.value(metadata %Session.0* %ss, metadata !452, metadata !DIExpression()), !dbg !453
  %icmp.53 = icmp eq %Session.0* %ss, null, !dbg !454
  br i1 %icmp.53, label %then.53, label %else.53

then.53:                                          ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !454
  unreachable

else.53:                                          ; preds = %entry
  %field.157 = getelementptr inbounds %Session.0, %Session.0* %ss, i64 0, i32 1, !dbg !454
  %cast.448 = bitcast { i8*, i64 }* %tmpv.134 to i8*
  %cast.449 = bitcast { i8*, i64 }* %field.157 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.448, i8* nonnull align 8 %cast.449, i64 16, i1 false)
  %field.159 = getelementptr inbounds %Session.0, %Session.0* %ss, i64 0, i32 0, i32 1, !dbg !455
  %cast.451 = bitcast { i8*, i64 }* %tmpv.136 to i8*
  %cast.452 = bitcast { i8*, i64 }* %field.159 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.451, i8* nonnull align 8 %cast.452, i64 16, i1 false)
  %cast.454 = bitcast { i8*, i64 }* %tmpv.138 to i8*
  %cast.455 = bitcast %Session.0* %ss to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.454, i8* align 8 %cast.455, i64 16, i1 false)
  %call.27 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !456
  %cast.457 = bitcast { i8*, i64 }* %tmpv.141 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.457, i8* nonnull align 8 %cast.448, i64 16, i1 false)
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.27, i8* nonnull %cast.457), !dbg !456
  %call.28 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !456
  %cast.462 = bitcast { i8*, i64 }* %tmpv.143 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.462, i8* nonnull align 8 %cast.451, i64 16, i1 false)
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.28, i8* nonnull %cast.462), !dbg !456
  %call.29 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !456
  %cast.467 = bitcast { i8*, i64 }* %tmpv.145 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.467, i8* nonnull align 8 %cast.454, i64 16, i1 false)
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.29, i8* nonnull %cast.467), !dbg !456
  %tmp.28.sroa.0.0.cast.474.sroa_idx = getelementptr inbounds [3 x %IPST.9], [3 x %IPST.9]* %tmpv.146, i64 0, i64 0, i32 0, !dbg !456
  store %_type.0* @string..d, %_type.0** %tmp.28.sroa.0.0.cast.474.sroa_idx, align 8, !dbg !456
  %tmp.28.sroa.2.0.cast.474.sroa_idx5 = getelementptr inbounds [3 x %IPST.9], [3 x %IPST.9]* %tmpv.146, i64 0, i64 0, i32 1, !dbg !456
  store i8* %call.27, i8** %tmp.28.sroa.2.0.cast.474.sroa_idx5, align 8, !dbg !456
  %tmp.29.sroa.0.0.cast.476.sroa_idx = getelementptr inbounds [3 x %IPST.9], [3 x %IPST.9]* %tmpv.146, i64 0, i64 1, i32 0, !dbg !456
  store %_type.0* @string..d, %_type.0** %tmp.29.sroa.0.0.cast.476.sroa_idx, align 8, !dbg !456
  %tmp.29.sroa.2.0.cast.476.sroa_idx6 = getelementptr inbounds [3 x %IPST.9], [3 x %IPST.9]* %tmpv.146, i64 0, i64 1, i32 1, !dbg !456
  store i8* %call.28, i8** %tmp.29.sroa.2.0.cast.476.sroa_idx6, align 8, !dbg !456
  %tmp.30.sroa.0.0.cast.478.sroa_idx = getelementptr inbounds [3 x %IPST.9], [3 x %IPST.9]* %tmpv.146, i64 0, i64 2, i32 0, !dbg !456
  store %_type.0* @string..d, %_type.0** %tmp.30.sroa.0.0.cast.478.sroa_idx, align 8, !dbg !456
  %tmp.30.sroa.2.0.cast.478.sroa_idx7 = getelementptr inbounds [3 x %IPST.9], [3 x %IPST.9]* %tmpv.146, i64 0, i64 2, i32 1, !dbg !456
  store i8* %call.29, i8** %tmp.30.sroa.2.0.cast.478.sroa_idx7, align 8, !dbg !456
  %field.168 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.31, i64 0, i32 0, !dbg !456
  %cast.481 = getelementptr inbounds [3 x %IPST.9], [3 x %IPST.9]* %tmpv.146, i64 0, i64 0, !dbg !456
  store %IPST.9* %cast.481, %IPST.9** %field.168, align 8, !dbg !456
  %field.169 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.31, i64 0, i32 1, !dbg !456
  store i64 3, i64* %field.169, align 8, !dbg !456
  %field.170 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.31, i64 0, i32 2, !dbg !456
  store i64 3, i64* %field.170, align 8, !dbg !456
  %call.30 = call { i64, i64 } @fmt.Sprintf(i8* nest undef, i64 ptrtoint ([9 x i8]* @const.59 to i64), i64 8, %IPST.3* byval nonnull %tmp.31), !dbg !456
  ret { i64, i64 } %call.30, !dbg !457
}

define void @command_line_arguments.NewSession({ %Session.0*, %error.0 }* sret %sret.formal.0, i8* nest nocapture readnone %nest.0, i64 %ctx.chunk0, i64 %ctx.chunk1, %__go_descriptor.10* %cancel, i64 %conn.chunk0, i64 %conn.chunk1) #0 !dbg !458 {
entry:
  %tmp.25 = alloca %IPST.3, align 8
  %tmp.21 = alloca %IPST.3, align 8
  %tmp.19 = alloca %IPST.3, align 8
  %tmp.14 = alloca %IPST.3, align 8
  %tmp.9 = alloca %IPST.3, align 8
  %tmp.5 = alloca %IPST.3, align 8
  %tmp.2 = alloca %IPST.3, align 8
  %sret.actual.0 = alloca { %Session.2*, %error.0 }, align 8
  %tmpv.6 = alloca [1 x %IPST.9], align 8
  %tmpv.15 = alloca %Session.0, align 8
  %sret.actual.3 = alloca { %Conn.0, %error.0 }, align 8
  %tmpv.19 = alloca %Conn.0, align 8
  %tmpv.26 = alloca [1 x %IPST.9], align 8
  %sret.actual.6 = alloca { %Conn.0, %error.0 }, align 8
  %tmpv.41 = alloca %Conn.0, align 8
  %tmpv.48 = alloca [1 x %IPST.9], align 8
  %tmpv.64 = alloca [1 x %IPST.9], align 8
  %tmpv.71 = alloca %Session.1, align 8
  %tmpv.75 = alloca { i8*, i64 }, align 8
  %tmpv.79 = alloca { i8*, i64 }, align 8
  %tmpv.83 = alloca { i8*, i64 }, align 8
  %tmpv.86 = alloca { i8*, i64 }, align 8
  %tmpv.87 = alloca { i8*, i64 }, align 8
  %tmpv.89 = alloca { i8*, i64 }, align 8
  %tmpv.91 = alloca { i8*, i64 }, align 8
  %tmpv.93 = alloca { i8*, i64 }, align 8
  %tmpv.94 = alloca [3 x %IPST.9], align 8
  %sret.actual.13 = alloca { %Conn.0, %error.0 }, align 8
  %tmpv.98 = alloca %Conn.0, align 8
  %tmpv.105 = alloca [1 x %IPST.9], align 8
  %sret.actual.16 = alloca { %Conn.0, %error.0 }, align 8
  %tmpv.120 = alloca %Conn.0, align 8
  %tmpv.127 = alloca [1 x %IPST.9], align 8
  call void @llvm.dbg.value(metadata i64 %ctx.chunk0, metadata !465, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !466
  call void @llvm.dbg.value(metadata i64 %ctx.chunk1, metadata !465, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !466
  call void @llvm.dbg.value(metadata %__go_descriptor.10* %cancel, metadata !467, metadata !DIExpression()), !dbg !468
  call void @llvm.dbg.value(metadata i64 %conn.chunk0, metadata !469, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !470
  call void @llvm.dbg.value(metadata i64 %conn.chunk1, metadata !469, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !470
  call void @llvm.dbg.value(metadata %Session.0* null, metadata !471, metadata !DIExpression()), !dbg !472
  %icmp.0 = icmp eq i64 %conn.chunk0, 0, !dbg !473
  br i1 %icmp.0, label %fallthrough.0, label %else.0

fallthrough.0:                                    ; preds = %entry, %else.0
  %tmpv.2.0 = phi %_type.0* [ %.field.ld.0, %else.0 ], [ null, %entry ]
  %call.0 = call i8* @runtime.requireitab(i8* nest undef, %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @io.ReadWriteCloser..d, i64 0, i32 0), %_type.0* %tmpv.2.0), !dbg !473
  %0 = ptrtoint i8* %call.0 to i64, !dbg !473
  call void @github_com_spolu_warp_vendor_github_com_hashicorp_yamux.Server({ %Session.2*, %error.0 }* nonnull sret %sret.actual.0, i8* nest undef, i64 %0, i64 %conn.chunk1, %Config.1* null), !dbg !475
  %tmpv.0.sroa.0.0.cast.67.sroa_idx = getelementptr inbounds { %Session.2*, %error.0 }, { %Session.2*, %error.0 }* %sret.actual.0, i64 0, i32 0, !dbg !475
  %tmpv.0.sroa.0.0.copyload38 = load %Session.2*, %Session.2** %tmpv.0.sroa.0.0.cast.67.sroa_idx, align 8, !dbg !475
  %tmpv.0.sroa.3.sroa.0.0.tmpv.0.sroa.3.0.cast.67.sroa_cast.sroa_idx = getelementptr inbounds { %Session.2*, %error.0 }, { %Session.2*, %error.0 }* %sret.actual.0, i64 0, i32 1, i32 0, !dbg !475
  %tmpv.0.sroa.3.sroa.0.0.copyload106 = load { %_type.0*, { i64, i64 } (i8*, i8*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)* }** %tmpv.0.sroa.3.sroa.0.0.tmpv.0.sroa.3.0.cast.67.sroa_cast.sroa_idx, align 8, !dbg !475
  call void @llvm.dbg.value(metadata %Session.2* %tmpv.0.sroa.0.0.copyload38, metadata !476, metadata !DIExpression()), !dbg !477
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.0.sroa.3.sroa.0.0.copyload106, metadata !478, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !477
  %icmp.2 = icmp eq { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.0.sroa.3.sroa.0.0.copyload106, null, !dbg !479
  br i1 %icmp.2, label %else.1, label %else.2

else.0:                                           ; preds = %entry
  %1 = inttoptr i64 %conn.chunk0 to { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }*, !dbg !473
  %field.2 = getelementptr inbounds { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }, { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }* %1, i64 0, i32 0, !dbg !473
  %.field.ld.0 = load %_type.0*, %_type.0** %field.2, align 8, !dbg !473
  br label %fallthrough.0

else.1:                                           ; preds = %fallthrough.0
  %call.3 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @sync.Mutex..d, i64 0, i32 0)), !dbg !480
  %2 = bitcast i8* %call.3 to i64*, !dbg !480
  store i64 0, i64* %2, align 4, !dbg !480
  %call.4 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.Session..d, i64 0, i32 0)), !dbg !481
  %cast.100 = bitcast i8* %call.4 to %Session.0*, !dbg !481
  %cast.101 = bitcast %Session.0* %tmpv.15 to i8*, !dbg !482
  %conn.addr.sroa.0.0.cast.109.sroa_idx = getelementptr inbounds %Session.0, %Session.0* %tmpv.15, i64 0, i32 4, !dbg !482
  %conn.addr.sroa.0.0.cast.109.sroa_cast = bitcast %Conn.0* %conn.addr.sroa.0.0.cast.109.sroa_idx to i64*, !dbg !482
  %3 = bitcast %Session.0* %tmpv.15 to i8*, !dbg !482
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3, i8 0, i64 96, i1 false), !dbg !482
  store i64 %conn.chunk0, i64* %conn.addr.sroa.0.0.cast.109.sroa_cast, align 8, !dbg !482
  %conn.addr.sroa.4.0.cast.109.sroa_idx169 = getelementptr inbounds %Session.0, %Session.0* %tmpv.15, i64 0, i32 4, i32 1, !dbg !482
  %conn.addr.sroa.4.0.cast.109.sroa_cast = bitcast i8** %conn.addr.sroa.4.0.cast.109.sroa_idx169 to i64*, !dbg !482
  store i64 %conn.chunk1, i64* %conn.addr.sroa.4.0.cast.109.sroa_cast, align 8, !dbg !482
  %field.25 = getelementptr inbounds %Session.0, %Session.0* %tmpv.15, i64 0, i32 5, !dbg !482
  store %Session.2* %tmpv.0.sroa.0.0.copyload38, %Session.2** %field.25, align 8, !dbg !482
  %field.26 = getelementptr inbounds %Session.0, %Session.0* %tmpv.15, i64 0, i32 6, !dbg !482
  %ctx.addr.sroa.0.0.cast.119.sroa_idx = getelementptr inbounds %Session.0, %Session.0* %tmpv.15, i64 0, i32 14, !dbg !482
  %ctx.addr.sroa.0.0.cast.119.sroa_cast = bitcast %Context.0* %ctx.addr.sroa.0.0.cast.119.sroa_idx to i64*, !dbg !482
  %4 = bitcast %Conn.0* %field.26 to i8*, !dbg !482
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 89, i1 false), !dbg !482
  store i64 %ctx.chunk0, i64* %ctx.addr.sroa.0.0.cast.119.sroa_cast, align 8, !dbg !482
  %ctx.addr.sroa.3.0.cast.119.sroa_idx170 = getelementptr inbounds %Session.0, %Session.0* %tmpv.15, i64 0, i32 14, i32 1, !dbg !482
  %ctx.addr.sroa.3.0.cast.119.sroa_cast = bitcast i8** %ctx.addr.sroa.3.0.cast.119.sroa_idx170 to i64*, !dbg !482
  store i64 %ctx.chunk1, i64* %ctx.addr.sroa.3.0.cast.119.sroa_cast, align 8, !dbg !482
  %field.35 = getelementptr inbounds %Session.0, %Session.0* %tmpv.15, i64 0, i32 15, !dbg !482
  store %__go_descriptor.10* %cancel, %__go_descriptor.10** %field.35, align 8, !dbg !482
  %field.36 = getelementptr inbounds %Session.0, %Session.0* %tmpv.15, i64 0, i32 16, !dbg !482
  %5 = bitcast %Mutex.0** %field.36 to i8**, !dbg !482
  store i8* %call.3, i8** %5, align 8, !dbg !482
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.Session..d, i64 0, i32 0), i8* %call.4, i8* nonnull %cast.101), !dbg !481
  call void @llvm.dbg.value(metadata %Session.0* %cast.100, metadata !483, metadata !DIExpression()), !dbg !484
  call void @github_com_spolu_warp_vendor_github_com_hashicorp_yamux.Session.Accept({ %Conn.0, %error.0 }* nonnull sret %sret.actual.3, i8* nest undef, %Session.2* %tmpv.0.sroa.0.0.copyload38), !dbg !485
  %tmpv.16.sroa.0.0.cast.127.sroa_cast = bitcast { %Conn.0, %error.0 }* %sret.actual.3 to i8*, !dbg !485
  %tmpv.16.sroa.3.0.cast.127.sroa_idx93 = getelementptr inbounds { %Conn.0, %error.0 }, { %Conn.0, %error.0 }* %sret.actual.3, i64 0, i32 1, i32 0, !dbg !485
  %tmpv.16.sroa.3.0.copyload94 = load { %_type.0*, { i64, i64 } (i8*, i8*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)* }** %tmpv.16.sroa.3.0.cast.127.sroa_idx93, align 8, !dbg !485
  %tmpv.16.sroa.4.0.cast.127.sroa_idx95 = getelementptr inbounds { %Conn.0, %error.0 }, { %Conn.0, %error.0 }* %sret.actual.3, i64 0, i32 1, i32 1, !dbg !485
  %6 = bitcast i8** %tmpv.16.sroa.4.0.cast.127.sroa_idx95 to i64*, !dbg !485
  %tmpv.16.sroa.4.0.copyload96195 = load i64, i64* %6, align 8, !dbg !485
  %tmpv.19218 = bitcast %Conn.0* %tmpv.19 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %tmpv.19218, i8* nonnull align 8 %tmpv.16.sroa.0.0.cast.127.sroa_cast, i64 16, i1 false)
  %cast.130 = bitcast %Conn.0* %tmpv.19 to i8*
  %icmp.3 = icmp eq i8* %call.4, null, !dbg !486
  br i1 %icmp.3, label %then.3, label %else.3

else.2:                                           ; preds = %fallthrough.0
  %tmpv.0.sroa.3.sroa.3.0.tmpv.0.sroa.3.0.cast.67.sroa_cast.sroa_idx107 = getelementptr inbounds { %Session.2*, %error.0 }, { %Session.2*, %error.0 }* %sret.actual.0, i64 0, i32 1, i32 1, !dbg !475
  call void @llvm.dbg.value(metadata i8** %tmpv.0.sroa.3.sroa.3.0.tmpv.0.sroa.3.0.cast.67.sroa_cast.sroa_idx107, metadata !478, metadata !DIExpression(DW_OP_deref, DW_OP_LLVM_fragment, 64, 64)), !dbg !477
  %7 = bitcast i8** %tmpv.0.sroa.3.sroa.3.0.tmpv.0.sroa.3.0.cast.67.sroa_cast.sroa_idx107 to i64*, !dbg !475
  %tmpv.0.sroa.3.sroa.3.0.copyload108194 = load i64, i64* %7, align 8, !dbg !475
  %8 = bitcast { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.0.sroa.3.sroa.0.0.copyload106 to i64*, !dbg !487
  %.field.ld.1207 = load i64, i64* %8, align 8, !dbg !487
  %9 = bitcast [1 x %IPST.9]* %tmpv.6 to i64*, !dbg !488
  store i64 %.field.ld.1207, i64* %9, align 8, !dbg !488
  %tmp.1.sroa.2.0.cast.75.sroa_idx171 = getelementptr inbounds [1 x %IPST.9], [1 x %IPST.9]* %tmpv.6, i64 0, i64 0, i32 1, !dbg !488
  %10 = bitcast i8** %tmp.1.sroa.2.0.cast.75.sroa_idx171 to i64*, !dbg !488
  store i64 %tmpv.0.sroa.3.sroa.3.0.copyload108194, i64* %10, align 8, !dbg !488
  %field.14 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.2, i64 0, i32 0, !dbg !488
  %cast.78 = getelementptr inbounds [1 x %IPST.9], [1 x %IPST.9]* %tmpv.6, i64 0, i64 0, !dbg !488
  store %IPST.9* %cast.78, %IPST.9** %field.14, align 8, !dbg !488
  %field.15 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.2, i64 0, i32 1, !dbg !488
  store i64 1, i64* %field.15, align 8, !dbg !488
  %field.16 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.2, i64 0, i32 2, !dbg !488
  store i64 1, i64* %field.16, align 8, !dbg !488
  %call.1 = call { i64, i64 } @github_com_spolu_warp_lib_errors.Newf(i8* nest undef, i64 ptrtoint ([14 x i8]* @const.39 to i64), i64 13, %IPST.3* byval nonnull %tmp.2), !dbg !488
  %call.1.fca.0.extract = extractvalue { i64, i64 } %call.1, 0, !dbg !488
  %call.1.fca.1.extract = extractvalue { i64, i64 } %call.1, 1, !dbg !488
  %call.2 = call { i64, i64 } @github_com_spolu_warp_lib_errors.Trace(i8* nest undef, i64 %call.1.fca.0.extract, i64 %call.1.fca.1.extract), !dbg !489
  %call.2.fca.0.extract = extractvalue { i64, i64 } %call.2, 0, !dbg !489
  %call.2.fca.1.extract = extractvalue { i64, i64 } %call.2, 1, !dbg !489
  call void @llvm.dbg.value(metadata %Session.0* null, metadata !471, metadata !DIExpression()), !dbg !472
  call void @llvm.dbg.value(metadata i64 %call.2.fca.0.extract, metadata !490, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !491
  call void @llvm.dbg.value(metadata i64 %call.2.fca.1.extract, metadata !490, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !491
  %tmp.3.sroa.0.0.cast.92.sroa_idx = getelementptr inbounds { %Session.0*, %error.0 }, { %Session.0*, %error.0 }* %sret.formal.0, i64 0, i32 0, !dbg !492
  store %Session.0* null, %Session.0** %tmp.3.sroa.0.0.cast.92.sroa_idx, align 8, !dbg !492
  %tmp.3.sroa.2.0.cast.92.sroa_idx172 = getelementptr inbounds { %Session.0*, %error.0 }, { %Session.0*, %error.0 }* %sret.formal.0, i64 0, i32 1, !dbg !492
  %tmp.3.sroa.2.0.cast.92.sroa_cast = bitcast %error.0* %tmp.3.sroa.2.0.cast.92.sroa_idx172 to i64*, !dbg !492
  store i64 %call.2.fca.0.extract, i64* %tmp.3.sroa.2.0.cast.92.sroa_cast, align 8, !dbg !492
  %tmp.3.sroa.3.0.cast.92.sroa_idx173 = getelementptr inbounds { %Session.0*, %error.0 }, { %Session.0*, %error.0 }* %sret.formal.0, i64 0, i32 1, i32 1, !dbg !492
  %tmp.3.sroa.3.0.cast.92.sroa_cast = bitcast i8** %tmp.3.sroa.3.0.cast.92.sroa_idx173 to i64*, !dbg !492
  store i64 %call.2.fca.1.extract, i64* %tmp.3.sroa.3.0.cast.92.sroa_cast, align 8, !dbg !492
  ret void, !dbg !492

then.3:                                           ; preds = %else.1
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !486
  unreachable

else.3:                                           ; preds = %else.1
  %field.39 = getelementptr inbounds i8, i8* %call.4, i64 120, !dbg !486
  %runtime.writeBarrier.ld.0 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !493
  %icmp.5 = icmp eq i32 %runtime.writeBarrier.ld.0, 0, !dbg !493
  br i1 %icmp.5, label %else.5, label %else.4

fallthrough.4:                                    ; preds = %else.4, %else.5
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.16.sroa.3.0.copyload94, metadata !478, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !477
  call void @llvm.dbg.value(metadata i8** %tmpv.16.sroa.4.0.cast.127.sroa_idx95, metadata !478, metadata !DIExpression(DW_OP_deref, DW_OP_LLVM_fragment, 64, 64)), !dbg !477
  %icmp.7 = icmp eq { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.16.sroa.3.0.copyload94, null, !dbg !494
  br i1 %icmp.7, label %else.8, label %then.6

else.4:                                           ; preds = %else.3
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @net.Conn..d, i64 0, i32 0), i8* nonnull %field.39, i8* nonnull %cast.130), !dbg !493
  br label %fallthrough.4

else.5:                                           ; preds = %else.3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %field.39, i8* nonnull align 8 %cast.130, i64 16, i1 false), !dbg !493
  br label %fallthrough.4

then.6:                                           ; preds = %fallthrough.4
  call void @command_line_arguments.Session.TearDown(i8* nest undef, %Session.0* %cast.100), !dbg !495
  %11 = bitcast { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.16.sroa.3.0.copyload94 to i64*, !dbg !496
  %.field.ld.2206 = load i64, i64* %11, align 8, !dbg !496
  %12 = bitcast [1 x %IPST.9]* %tmpv.26 to i64*, !dbg !497
  store i64 %.field.ld.2206, i64* %12, align 8, !dbg !497
  %tmp.4.sroa.2.0.cast.148.sroa_idx174 = getelementptr inbounds [1 x %IPST.9], [1 x %IPST.9]* %tmpv.26, i64 0, i64 0, i32 1, !dbg !497
  %13 = bitcast i8** %tmp.4.sroa.2.0.cast.148.sroa_idx174 to i64*, !dbg !497
  store i64 %tmpv.16.sroa.4.0.copyload96195, i64* %13, align 8, !dbg !497
  %field.46 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.5, i64 0, i32 0, !dbg !497
  %cast.151 = getelementptr inbounds [1 x %IPST.9], [1 x %IPST.9]* %tmpv.26, i64 0, i64 0, !dbg !497
  store %IPST.9* %cast.151, %IPST.9** %field.46, align 8, !dbg !497
  %field.47 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.5, i64 0, i32 1, !dbg !497
  store i64 1, i64* %field.47, align 8, !dbg !497
  %field.48 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.5, i64 0, i32 2, !dbg !497
  store i64 1, i64* %field.48, align 8, !dbg !497
  %call.5 = call { i64, i64 } @github_com_spolu_warp_lib_errors.Newf(i8* nest undef, i64 ptrtoint ([29 x i8]* @const.46 to i64), i64 28, %IPST.3* byval nonnull %tmp.5), !dbg !497
  %call.5.fca.0.extract = extractvalue { i64, i64 } %call.5, 0, !dbg !497
  %call.5.fca.1.extract = extractvalue { i64, i64 } %call.5, 1, !dbg !497
  %call.6 = call { i64, i64 } @github_com_spolu_warp_lib_errors.Trace(i8* nest undef, i64 %call.5.fca.0.extract, i64 %call.5.fca.1.extract), !dbg !498
  %call.6.fca.0.extract = extractvalue { i64, i64 } %call.6, 0, !dbg !498
  %call.6.fca.1.extract = extractvalue { i64, i64 } %call.6, 1, !dbg !498
  call void @llvm.dbg.value(metadata %Session.0* null, metadata !471, metadata !DIExpression()), !dbg !472
  call void @llvm.dbg.value(metadata i64 %call.6.fca.0.extract, metadata !490, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !491
  call void @llvm.dbg.value(metadata i64 %call.6.fca.1.extract, metadata !490, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !491
  %tmp.6.sroa.0.0.cast.165.sroa_idx = getelementptr inbounds { %Session.0*, %error.0 }, { %Session.0*, %error.0 }* %sret.formal.0, i64 0, i32 0, !dbg !499
  store %Session.0* null, %Session.0** %tmp.6.sroa.0.0.cast.165.sroa_idx, align 8, !dbg !499
  %tmp.6.sroa.2.0.cast.165.sroa_idx175 = getelementptr inbounds { %Session.0*, %error.0 }, { %Session.0*, %error.0 }* %sret.formal.0, i64 0, i32 1, !dbg !499
  %tmp.6.sroa.2.0.cast.165.sroa_cast = bitcast %error.0* %tmp.6.sroa.2.0.cast.165.sroa_idx175 to i64*, !dbg !499
  store i64 %call.6.fca.0.extract, i64* %tmp.6.sroa.2.0.cast.165.sroa_cast, align 8, !dbg !499
  %tmp.6.sroa.3.0.cast.165.sroa_idx176 = getelementptr inbounds { %Session.0*, %error.0 }, { %Session.0*, %error.0 }* %sret.formal.0, i64 0, i32 1, i32 1, !dbg !499
  %tmp.6.sroa.3.0.cast.165.sroa_cast = bitcast i8** %tmp.6.sroa.3.0.cast.165.sroa_idx176 to i64*, !dbg !499
  store i64 %call.6.fca.1.extract, i64* %tmp.6.sroa.3.0.cast.165.sroa_cast, align 8, !dbg !499
  ret void, !dbg !499

else.8:                                           ; preds = %fallthrough.4
  %14 = bitcast i8* %field.39 to { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }**
  %tmpv.31.sroa.0.0.copyload = load { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }** %14, align 8
  %tmpv.31.sroa.3.0.cast.170.sroa_idx29 = getelementptr inbounds i8, i8* %call.4, i64 128
  %15 = bitcast i8* %tmpv.31.sroa.3.0.cast.170.sroa_idx29 to i64*
  %tmpv.31.sroa.3.0.copyload196 = load i64, i64* %15, align 8
  %icmp.9 = icmp eq { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }* %tmpv.31.sroa.0.0.copyload, null, !dbg !500
  br i1 %icmp.9, label %fallthrough.9, label %else.9

fallthrough.9:                                    ; preds = %else.8, %else.9
  %tmpv.34.0 = phi %_type.0* [ %.field.ld.3, %else.9 ], [ null, %else.8 ]
  %call.7 = call i8* @runtime.requireitab(i8* nest undef, %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @io.Writer..d, i64 0, i32 0), %_type.0* %tmpv.34.0), !dbg !500
  %16 = ptrtoint i8* %call.7 to i64, !dbg !500
  %call.8 = call %Encoder.0* @encoding_gob.NewEncoder(i8* nest undef, i64 %16, i64 %tmpv.31.sroa.3.0.copyload196), !dbg !501
  %field.59 = getelementptr inbounds i8, i8* %call.4, i64 136, !dbg !502
  %runtime.writeBarrier.ld.1 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !503
  %icmp.12 = icmp eq i32 %runtime.writeBarrier.ld.1, 0, !dbg !503
  br i1 %icmp.12, label %else.12, label %else.11

else.9:                                           ; preds = %else.8
  %field.55 = getelementptr inbounds { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }, { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }* %tmpv.31.sroa.0.0.copyload, i64 0, i32 0, !dbg !500
  %.field.ld.3 = load %_type.0*, %_type.0** %field.55, align 8, !dbg !500
  br label %fallthrough.9

fallthrough.11:                                   ; preds = %else.11, %else.12
  call void @github_com_spolu_warp_vendor_github_com_hashicorp_yamux.Session.Accept({ %Conn.0, %error.0 }* nonnull sret %sret.actual.6, i8* nest undef, %Session.2* %tmpv.0.sroa.0.0.copyload38), !dbg !504
  %tmpv.38.sroa.0.0.cast.183.sroa_cast = bitcast { %Conn.0, %error.0 }* %sret.actual.6 to i8*, !dbg !504
  %tmpv.38.sroa.3.0.cast.183.sroa_idx113 = getelementptr inbounds { %Conn.0, %error.0 }, { %Conn.0, %error.0 }* %sret.actual.6, i64 0, i32 1, i32 0, !dbg !504
  %tmpv.38.sroa.3.0.copyload114 = load { %_type.0*, { i64, i64 } (i8*, i8*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)* }** %tmpv.38.sroa.3.0.cast.183.sroa_idx113, align 8, !dbg !504
  %tmpv.38.sroa.4.0.cast.183.sroa_idx115 = getelementptr inbounds { %Conn.0, %error.0 }, { %Conn.0, %error.0 }* %sret.actual.6, i64 0, i32 1, i32 1, !dbg !504
  %17 = bitcast i8** %tmpv.38.sroa.4.0.cast.183.sroa_idx115 to i64*, !dbg !504
  %tmpv.38.sroa.4.0.copyload116197 = load i64, i64* %17, align 8, !dbg !504
  %tmpv.41219 = bitcast %Conn.0* %tmpv.41 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %tmpv.41219, i8* nonnull align 8 %tmpv.38.sroa.0.0.cast.183.sroa_cast, i64 16, i1 false)
  %cast.186 = bitcast %Conn.0* %tmpv.41 to i8*
  %field.62 = getelementptr inbounds i8, i8* %call.4, i64 144, !dbg !505
  %runtime.writeBarrier.ld.2 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !506
  %icmp.15 = icmp eq i32 %runtime.writeBarrier.ld.2, 0, !dbg !506
  br i1 %icmp.15, label %else.15, label %else.14

else.11:                                          ; preds = %fallthrough.9
  %cast.179 = bitcast %Encoder.0* %call.8 to i8*, !dbg !503
  call void @runtime.writebarrierptr(i8* nest undef, i8* nonnull %field.59, i8* %cast.179), !dbg !503
  br label %fallthrough.11

else.12:                                          ; preds = %fallthrough.9
  %18 = bitcast i8* %field.59 to %Encoder.0**, !dbg !502
  store %Encoder.0* %call.8, %Encoder.0** %18, align 8, !dbg !503
  br label %fallthrough.11

fallthrough.14:                                   ; preds = %else.14, %else.15
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.38.sroa.3.0.copyload114, metadata !478, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !477
  call void @llvm.dbg.value(metadata i8** %tmpv.38.sroa.4.0.cast.183.sroa_idx115, metadata !478, metadata !DIExpression(DW_OP_deref, DW_OP_LLVM_fragment, 64, 64)), !dbg !477
  %icmp.17 = icmp eq { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.38.sroa.3.0.copyload114, null, !dbg !507
  br i1 %icmp.17, label %else.18, label %then.16

else.14:                                          ; preds = %fallthrough.11
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @net.Conn..d, i64 0, i32 0), i8* nonnull %field.62, i8* nonnull %cast.186), !dbg !506
  br label %fallthrough.14

else.15:                                          ; preds = %fallthrough.11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %field.62, i8* nonnull align 8 %cast.186, i64 16, i1 false), !dbg !506
  br label %fallthrough.14

then.16:                                          ; preds = %fallthrough.14
  call void @command_line_arguments.Session.TearDown(i8* nest undef, %Session.0* nonnull %cast.100), !dbg !508
  %19 = bitcast { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.38.sroa.3.0.copyload114 to i64*, !dbg !509
  %.field.ld.4205 = load i64, i64* %19, align 8, !dbg !509
  %20 = bitcast [1 x %IPST.9]* %tmpv.48 to i64*, !dbg !510
  store i64 %.field.ld.4205, i64* %20, align 8, !dbg !510
  %tmp.8.sroa.2.0.cast.204.sroa_idx177 = getelementptr inbounds [1 x %IPST.9], [1 x %IPST.9]* %tmpv.48, i64 0, i64 0, i32 1, !dbg !510
  %21 = bitcast i8** %tmp.8.sroa.2.0.cast.204.sroa_idx177 to i64*, !dbg !510
  store i64 %tmpv.38.sroa.4.0.copyload116197, i64* %21, align 8, !dbg !510
  %field.69 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.9, i64 0, i32 0, !dbg !510
  %cast.207 = getelementptr inbounds [1 x %IPST.9], [1 x %IPST.9]* %tmpv.48, i64 0, i64 0, !dbg !510
  store %IPST.9* %cast.207, %IPST.9** %field.69, align 8, !dbg !510
  %field.70 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.9, i64 0, i32 1, !dbg !510
  store i64 1, i64* %field.70, align 8, !dbg !510
  %field.71 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.9, i64 0, i32 2, !dbg !510
  store i64 1, i64* %field.71, align 8, !dbg !510
  %call.9 = call { i64, i64 } @github_com_spolu_warp_lib_errors.Newf(i8* nest undef, i64 ptrtoint ([30 x i8]* @const.48 to i64), i64 29, %IPST.3* byval nonnull %tmp.9), !dbg !510
  %call.9.fca.0.extract = extractvalue { i64, i64 } %call.9, 0, !dbg !510
  %call.9.fca.1.extract = extractvalue { i64, i64 } %call.9, 1, !dbg !510
  %call.10 = call { i64, i64 } @github_com_spolu_warp_lib_errors.Trace(i8* nest undef, i64 %call.9.fca.0.extract, i64 %call.9.fca.1.extract), !dbg !511
  %call.10.fca.0.extract = extractvalue { i64, i64 } %call.10, 0, !dbg !511
  %call.10.fca.1.extract = extractvalue { i64, i64 } %call.10, 1, !dbg !511
  call void @llvm.dbg.value(metadata %Session.0* null, metadata !471, metadata !DIExpression()), !dbg !472
  call void @llvm.dbg.value(metadata i64 %call.10.fca.0.extract, metadata !490, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !491
  call void @llvm.dbg.value(metadata i64 %call.10.fca.1.extract, metadata !490, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !491
  %tmp.10.sroa.0.0.cast.221.sroa_idx = getelementptr inbounds { %Session.0*, %error.0 }, { %Session.0*, %error.0 }* %sret.formal.0, i64 0, i32 0, !dbg !512
  store %Session.0* null, %Session.0** %tmp.10.sroa.0.0.cast.221.sroa_idx, align 8, !dbg !512
  %tmp.10.sroa.2.0.cast.221.sroa_idx178 = getelementptr inbounds { %Session.0*, %error.0 }, { %Session.0*, %error.0 }* %sret.formal.0, i64 0, i32 1, !dbg !512
  %tmp.10.sroa.2.0.cast.221.sroa_cast = bitcast %error.0* %tmp.10.sroa.2.0.cast.221.sroa_idx178 to i64*, !dbg !512
  store i64 %call.10.fca.0.extract, i64* %tmp.10.sroa.2.0.cast.221.sroa_cast, align 8, !dbg !512
  %tmp.10.sroa.3.0.cast.221.sroa_idx179 = getelementptr inbounds { %Session.0*, %error.0 }, { %Session.0*, %error.0 }* %sret.formal.0, i64 0, i32 1, i32 1, !dbg !512
  %tmp.10.sroa.3.0.cast.221.sroa_cast = bitcast i8** %tmp.10.sroa.3.0.cast.221.sroa_idx179 to i64*, !dbg !512
  store i64 %call.10.fca.1.extract, i64* %tmp.10.sroa.3.0.cast.221.sroa_cast, align 8, !dbg !512
  ret void, !dbg !512

else.18:                                          ; preds = %fallthrough.14
  %22 = bitcast i8* %field.62 to { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }**
  %tmpv.53.sroa.0.0.copyload = load { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }** %22, align 8
  %tmpv.53.sroa.3.0.cast.226.sroa_idx24 = getelementptr inbounds i8, i8* %call.4, i64 152
  %23 = bitcast i8* %tmpv.53.sroa.3.0.cast.226.sroa_idx24 to i64*
  %tmpv.53.sroa.3.0.copyload198 = load i64, i64* %23, align 8
  %icmp.19 = icmp eq { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }* %tmpv.53.sroa.0.0.copyload, null, !dbg !513
  br i1 %icmp.19, label %fallthrough.19, label %else.19

fallthrough.19:                                   ; preds = %else.18, %else.19
  %tmpv.56.0 = phi %_type.0* [ %.field.ld.5, %else.19 ], [ null, %else.18 ]
  %call.11 = call i8* @runtime.requireitab(i8* nest undef, %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @io.Reader..d, i64 0, i32 0), %_type.0* %tmpv.56.0), !dbg !513
  %24 = ptrtoint i8* %call.11 to i64, !dbg !513
  %call.12 = call %Decoder.0* @encoding_gob.NewDecoder(i8* nest undef, i64 %24, i64 %tmpv.53.sroa.3.0.copyload198), !dbg !514
  %field.82 = getelementptr inbounds i8, i8* %call.4, i64 160, !dbg !515
  %25 = bitcast i8* %field.82 to %Decoder.0**, !dbg !515
  %runtime.writeBarrier.ld.3 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !516
  %icmp.22 = icmp eq i32 %runtime.writeBarrier.ld.3, 0, !dbg !516
  br i1 %icmp.22, label %else.22, label %else.21

else.19:                                          ; preds = %else.18
  %field.78 = getelementptr inbounds { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }, { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }* %tmpv.53.sroa.0.0.copyload, i64 0, i32 0, !dbg !513
  %.field.ld.5 = load %_type.0*, %_type.0** %field.78, align 8, !dbg !513
  br label %fallthrough.19

fallthrough.21:                                   ; preds = %else.21, %else.22
  %call.13 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @github_com_spolu_warp.SessionHello..d, i64 0, i32 0)), !dbg !517
  call void @llvm.dbg.value(metadata i8* %call.13, metadata !518, metadata !DIExpression()), !dbg !527
  %.field.ld.6 = load %Decoder.0*, %Decoder.0** %25, align 8, !dbg !528
  %26 = ptrtoint i8* %call.13 to i64, !dbg !530
  %call.14 = call { i64, i64 } @encoding_gob.Decoder.Decode(i8* nest undef, %Decoder.0* %.field.ld.6, i64 ptrtoint (%PtrType.0* @type...1github_com_spolu_warp.SessionHello to i64), i64 %26), !dbg !531
  %call.14.fca.0.extract = extractvalue { i64, i64 } %call.14, 0, !dbg !531
  call void @llvm.dbg.value(metadata i64 %call.14.fca.0.extract, metadata !532, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !533
  %icmp.25 = icmp eq i64 %call.14.fca.0.extract, 0, !dbg !534
  br i1 %icmp.25, label %else.26, label %then.24

else.21:                                          ; preds = %fallthrough.19
  %cast.235 = bitcast %Decoder.0* %call.12 to i8*, !dbg !516
  call void @runtime.writebarrierptr(i8* nest undef, i8* nonnull %field.82, i8* %cast.235), !dbg !516
  br label %fallthrough.21

else.22:                                          ; preds = %fallthrough.19
  store %Decoder.0* %call.12, %Decoder.0** %25, align 8, !dbg !516
  br label %fallthrough.21

then.24:                                          ; preds = %fallthrough.21
  %call.14.fca.1.extract = extractvalue { i64, i64 } %call.14, 1, !dbg !531
  call void @llvm.dbg.value(metadata i64 %call.14.fca.1.extract, metadata !532, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !533
  call void @command_line_arguments.Session.TearDown(i8* nest undef, %Session.0* nonnull %cast.100), !dbg !535
  %27 = inttoptr i64 %call.14.fca.0.extract to i64*, !dbg !536
  %.field.ld.7204 = load i64, i64* %27, align 8, !dbg !536
  %28 = inttoptr i64 %call.14.fca.1.extract to i8*, !dbg !537
  %29 = bitcast [1 x %IPST.9]* %tmpv.64 to i64*, !dbg !537
  store i64 %.field.ld.7204, i64* %29, align 8, !dbg !537
  %tmp.13.sroa.2.0.cast.248.sroa_idx180 = getelementptr inbounds [1 x %IPST.9], [1 x %IPST.9]* %tmpv.64, i64 0, i64 0, i32 1, !dbg !537
  store i8* %28, i8** %tmp.13.sroa.2.0.cast.248.sroa_idx180, align 8, !dbg !537
  %field.92 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.14, i64 0, i32 0, !dbg !537
  %cast.251 = getelementptr inbounds [1 x %IPST.9], [1 x %IPST.9]* %tmpv.64, i64 0, i64 0, !dbg !537
  store %IPST.9* %cast.251, %IPST.9** %field.92, align 8, !dbg !537
  %field.93 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.14, i64 0, i32 1, !dbg !537
  store i64 1, i64* %field.93, align 8, !dbg !537
  %field.94 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.14, i64 0, i32 2, !dbg !537
  store i64 1, i64* %field.94, align 8, !dbg !537
  %call.15 = call { i64, i64 } @github_com_spolu_warp_lib_errors.Newf(i8* nest undef, i64 ptrtoint ([32 x i8]* @const.50 to i64), i64 31, %IPST.3* byval nonnull %tmp.14), !dbg !537
  %call.15.fca.0.extract = extractvalue { i64, i64 } %call.15, 0, !dbg !537
  %call.15.fca.1.extract = extractvalue { i64, i64 } %call.15, 1, !dbg !537
  %call.16 = call { i64, i64 } @github_com_spolu_warp_lib_errors.Trace(i8* nest undef, i64 %call.15.fca.0.extract, i64 %call.15.fca.1.extract), !dbg !538
  %call.16.fca.0.extract = extractvalue { i64, i64 } %call.16, 0, !dbg !538
  %call.16.fca.1.extract = extractvalue { i64, i64 } %call.16, 1, !dbg !538
  call void @llvm.dbg.value(metadata %Session.0* null, metadata !471, metadata !DIExpression()), !dbg !472
  call void @llvm.dbg.value(metadata i64 %call.16.fca.0.extract, metadata !490, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !491
  call void @llvm.dbg.value(metadata i64 %call.16.fca.1.extract, metadata !490, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !491
  %tmp.15.sroa.0.0.cast.265.sroa_idx = getelementptr inbounds { %Session.0*, %error.0 }, { %Session.0*, %error.0 }* %sret.formal.0, i64 0, i32 0, !dbg !539
  store %Session.0* null, %Session.0** %tmp.15.sroa.0.0.cast.265.sroa_idx, align 8, !dbg !539
  %tmp.15.sroa.2.0.cast.265.sroa_idx181 = getelementptr inbounds { %Session.0*, %error.0 }, { %Session.0*, %error.0 }* %sret.formal.0, i64 0, i32 1, !dbg !539
  %tmp.15.sroa.2.0.cast.265.sroa_cast = bitcast %error.0* %tmp.15.sroa.2.0.cast.265.sroa_idx181 to i64*, !dbg !539
  store i64 %call.16.fca.0.extract, i64* %tmp.15.sroa.2.0.cast.265.sroa_cast, align 8, !dbg !539
  %tmp.15.sroa.3.0.cast.265.sroa_idx182 = getelementptr inbounds { %Session.0*, %error.0 }, { %Session.0*, %error.0 }* %sret.formal.0, i64 0, i32 1, i32 1, !dbg !539
  %tmp.15.sroa.3.0.cast.265.sroa_cast = bitcast i8** %tmp.15.sroa.3.0.cast.265.sroa_idx182 to i64*, !dbg !539
  store i64 %call.16.fca.1.extract, i64* %tmp.15.sroa.3.0.cast.265.sroa_cast, align 8, !dbg !539
  ret void, !dbg !539

else.26:                                          ; preds = %fallthrough.21
  %field.99 = getelementptr inbounds i8, i8* %call.13, i64 16, !dbg !540
  %cast.269 = bitcast %Session.1* %tmpv.71 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.269, i8* nonnull align 8 %field.99, i64 48, i1 false)
  %runtime.writeBarrier.ld.4 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !541
  %icmp.28 = icmp eq i32 %runtime.writeBarrier.ld.4, 0, !dbg !541
  br i1 %icmp.28, label %else.28, label %else.27

else.27:                                          ; preds = %else.26
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @github_com_spolu_warp.Session..d, i64 0, i32 0), i8* nonnull %call.4, i8* nonnull %cast.269), !dbg !541
  br label %else.29

else.28:                                          ; preds = %else.26
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %call.4, i8* nonnull align 8 %cast.269, i64 48, i1 false), !dbg !541
  br label %else.29

else.29:                                          ; preds = %else.28, %else.27
  %field.100 = getelementptr inbounds i8, i8* %call.4, i64 48, !dbg !542
  %cast.278 = bitcast { i8*, i64 }* %tmpv.75 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.278, i8* nonnull align 8 %call.13, i64 16, i1 false)
  %runtime.writeBarrier.ld.5 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !543
  %icmp.31 = icmp eq i32 %runtime.writeBarrier.ld.5, 0, !dbg !543
  br i1 %icmp.31, label %else.32.thread, label %else.32

else.32.thread:                                   ; preds = %else.29
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %field.100, i8* nonnull align 8 %cast.278, i64 16, i1 false), !dbg !543
  %field.102208 = getelementptr inbounds i8, i8* %call.4, i64 64, !dbg !544
  %field.103209 = getelementptr inbounds i8, i8* %call.13, i64 80, !dbg !545
  %cast.286210 = bitcast { i8*, i64 }* %tmpv.79 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.286210, i8* nonnull align 8 %field.103209, i64 16, i1 false)
  br label %else.35.thread

else.32:                                          ; preds = %else.29
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* nonnull %field.100, i8* nonnull %cast.278), !dbg !543
  %runtime.writeBarrier.ld.6.pr = load i32, i32* @runtime.writeBarrier, align 4, !dbg !546
  %field.102 = getelementptr inbounds i8, i8* %call.4, i64 64, !dbg !544
  %field.103 = getelementptr inbounds i8, i8* %call.13, i64 80, !dbg !545
  %cast.286 = bitcast { i8*, i64 }* %tmpv.79 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.286, i8* nonnull align 8 %field.103, i64 16, i1 false)
  %icmp.34 = icmp eq i32 %runtime.writeBarrier.ld.6.pr, 0, !dbg !546
  br i1 %icmp.34, label %else.35.thread, label %else.35

else.35.thread:                                   ; preds = %else.32, %else.32.thread
  %cast.286215 = phi i8* [ %cast.286210, %else.32.thread ], [ %cast.286, %else.32 ]
  %field.103214 = phi i8* [ %field.103209, %else.32.thread ], [ %field.103, %else.32 ]
  %field.102212 = phi i8* [ %field.102208, %else.32.thread ], [ %field.102, %else.32 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %field.102212, i8* align 8 %cast.286215, i64 16, i1 false), !dbg !546
  %field.104222 = getelementptr inbounds i8, i8* %call.4, i64 80, !dbg !547
  %field.105223 = getelementptr inbounds i8, i8* %call.13, i64 96, !dbg !548
  %cast.294224 = bitcast { i8*, i64 }* %tmpv.83 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.294224, i8* nonnull align 8 %field.105223, i64 16, i1 false)
  br label %else.37

else.35:                                          ; preds = %else.32
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @github_com_spolu_warp.SessionType..d, i8* nonnull %field.102, i8* nonnull %cast.286), !dbg !546
  %runtime.writeBarrier.ld.7.pre = load i32, i32* @runtime.writeBarrier, align 4, !dbg !549
  %phitmp = icmp eq i32 %runtime.writeBarrier.ld.7.pre, 0
  %field.104 = getelementptr inbounds i8, i8* %call.4, i64 80, !dbg !547
  %field.105 = getelementptr inbounds i8, i8* %call.13, i64 96, !dbg !548
  %cast.294 = bitcast { i8*, i64 }* %tmpv.83 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.294, i8* nonnull align 8 %field.105, i64 16, i1 false)
  br i1 %phitmp, label %else.37, label %else.36

fallthrough.36:                                   ; preds = %else.36, %else.37
  %field.105228 = phi i8* [ %field.105, %else.36 ], [ %field.105229, %else.37 ]
  %field.103213225 = phi i8* [ %field.103, %else.36 ], [ %field.103213226, %else.37 ]
  %call.17 = call { i64, i64 } @command_line_arguments.Session.ToString(i8* nest undef, %Session.0* nonnull %cast.100), !dbg !550
  %call.17.fca.0.extract = extractvalue { i64, i64 } %call.17, 0, !dbg !550
  %call.17.fca.1.extract = extractvalue { i64, i64 } %call.17, 1, !dbg !550
  %cast.304 = bitcast { i8*, i64 }* %tmpv.86 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.304, i8* nonnull align 8 %field.103213225, i64 16, i1 false)
  %cast.306 = bitcast { i8*, i64 }* %tmpv.87 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.306, i8* nonnull align 8 %field.105228, i64 16, i1 false)
  %call.18 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !551
  %tmpv.85.sroa.0.0.cast.309.sroa_cast = bitcast { i8*, i64 }* %tmpv.89 to i64*
  store i64 %call.17.fca.0.extract, i64* %tmpv.85.sroa.0.0.cast.309.sroa_cast, align 8
  %tmpv.85.sroa.2.0.cast.309.sroa_idx14 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.89, i64 0, i32 1
  store i64 %call.17.fca.1.extract, i64* %tmpv.85.sroa.2.0.cast.309.sroa_idx14, align 8
  %cast.312 = bitcast { i8*, i64 }* %tmpv.89 to i8*, !dbg !551
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.18, i8* nonnull %cast.312), !dbg !551
  %call.19 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @github_com_spolu_warp.SessionType..d), !dbg !551
  %cast.314 = bitcast { i8*, i64 }* %tmpv.91 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.314, i8* nonnull align 8 %cast.304, i64 16, i1 false)
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @github_com_spolu_warp.SessionType..d, i8* %call.19, i8* nonnull %cast.314), !dbg !551
  %call.20 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !551
  %cast.319 = bitcast { i8*, i64 }* %tmpv.93 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.319, i8* nonnull align 8 %cast.306, i64 16, i1 false)
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.20, i8* nonnull %cast.319), !dbg !551
  %tmp.16.sroa.0.0.cast.326.sroa_idx = getelementptr inbounds [3 x %IPST.9], [3 x %IPST.9]* %tmpv.94, i64 0, i64 0, i32 0, !dbg !551
  store %_type.0* @string..d, %_type.0** %tmp.16.sroa.0.0.cast.326.sroa_idx, align 8, !dbg !551
  %tmp.16.sroa.2.0.cast.326.sroa_idx183 = getelementptr inbounds [3 x %IPST.9], [3 x %IPST.9]* %tmpv.94, i64 0, i64 0, i32 1, !dbg !551
  store i8* %call.18, i8** %tmp.16.sroa.2.0.cast.326.sroa_idx183, align 8, !dbg !551
  %tmp.17.sroa.0.0.cast.328.sroa_idx = getelementptr inbounds [3 x %IPST.9], [3 x %IPST.9]* %tmpv.94, i64 0, i64 1, i32 0, !dbg !551
  store %_type.0* @github_com_spolu_warp.SessionType..d, %_type.0** %tmp.17.sroa.0.0.cast.328.sroa_idx, align 8, !dbg !551
  %tmp.17.sroa.2.0.cast.328.sroa_idx184 = getelementptr inbounds [3 x %IPST.9], [3 x %IPST.9]* %tmpv.94, i64 0, i64 1, i32 1, !dbg !551
  store i8* %call.19, i8** %tmp.17.sroa.2.0.cast.328.sroa_idx184, align 8, !dbg !551
  %tmp.18.sroa.0.0.cast.330.sroa_idx = getelementptr inbounds [3 x %IPST.9], [3 x %IPST.9]* %tmpv.94, i64 0, i64 2, i32 0, !dbg !551
  store %_type.0* @string..d, %_type.0** %tmp.18.sroa.0.0.cast.330.sroa_idx, align 8, !dbg !551
  %tmp.18.sroa.2.0.cast.330.sroa_idx185 = getelementptr inbounds [3 x %IPST.9], [3 x %IPST.9]* %tmpv.94, i64 0, i64 2, i32 1, !dbg !551
  store i8* %call.20, i8** %tmp.18.sroa.2.0.cast.330.sroa_idx185, align 8, !dbg !551
  %field.114 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.19, i64 0, i32 0, !dbg !551
  %cast.334 = getelementptr inbounds [3 x %IPST.9], [3 x %IPST.9]* %tmpv.94, i64 0, i64 0, !dbg !551
  store %IPST.9* %cast.334, %IPST.9** %field.114, align 8, !dbg !551
  %field.115 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.19, i64 0, i32 1, !dbg !551
  store i64 3, i64* %field.115, align 8, !dbg !551
  %field.116 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.19, i64 0, i32 2, !dbg !551
  store i64 3, i64* %field.116, align 8, !dbg !551
  call void @github_com_spolu_warp_lib_logging.Logf(i8* nest undef, i64 %ctx.chunk0, i64 %ctx.chunk1, i64 ptrtoint ([55 x i8]* @const.52 to i64), i64 54, %IPST.3* byval nonnull %tmp.19), !dbg !551
  call void @github_com_spolu_warp_vendor_github_com_hashicorp_yamux.Session.Accept({ %Conn.0, %error.0 }* nonnull sret %sret.actual.13, i8* nest undef, %Session.2* %tmpv.0.sroa.0.0.copyload38), !dbg !552
  %tmpv.95.sroa.0.0.cast.338.sroa_cast = bitcast { %Conn.0, %error.0 }* %sret.actual.13 to i8*, !dbg !552
  %tmpv.95.sroa.3.0.cast.338.sroa_idx85 = getelementptr inbounds { %Conn.0, %error.0 }, { %Conn.0, %error.0 }* %sret.actual.13, i64 0, i32 1, i32 0, !dbg !552
  %tmpv.95.sroa.3.0.copyload86 = load { %_type.0*, { i64, i64 } (i8*, i8*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)* }** %tmpv.95.sroa.3.0.cast.338.sroa_idx85, align 8, !dbg !552
  %tmpv.95.sroa.4.0.cast.338.sroa_idx87 = getelementptr inbounds { %Conn.0, %error.0 }, { %Conn.0, %error.0 }* %sret.actual.13, i64 0, i32 1, i32 1, !dbg !552
  %30 = bitcast i8** %tmpv.95.sroa.4.0.cast.338.sroa_idx87 to i64*, !dbg !552
  %tmpv.95.sroa.4.0.copyload88199 = load i64, i64* %30, align 8, !dbg !552
  %tmpv.98220 = bitcast %Conn.0* %tmpv.98 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %tmpv.98220, i8* nonnull align 8 %tmpv.95.sroa.0.0.cast.338.sroa_cast, i64 16, i1 false)
  %cast.341 = bitcast %Conn.0* %tmpv.98 to i8*
  %field.119 = getelementptr inbounds i8, i8* %call.4, i64 168, !dbg !553
  %runtime.writeBarrier.ld.8 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !554
  %icmp.40 = icmp eq i32 %runtime.writeBarrier.ld.8, 0, !dbg !554
  br i1 %icmp.40, label %else.40, label %else.39

else.36:                                          ; preds = %else.35
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* nonnull %field.104, i8* nonnull %cast.294), !dbg !549
  br label %fallthrough.36

else.37:                                          ; preds = %else.35.thread, %else.35
  %cast.294230 = phi i8* [ %cast.294224, %else.35.thread ], [ %cast.294, %else.35 ]
  %field.105229 = phi i8* [ %field.105223, %else.35.thread ], [ %field.105, %else.35 ]
  %field.104227 = phi i8* [ %field.104222, %else.35.thread ], [ %field.104, %else.35 ]
  %field.103213226 = phi i8* [ %field.103214, %else.35.thread ], [ %field.103, %else.35 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %field.104227, i8* nonnull align 8 %cast.294230, i64 16, i1 false), !dbg !549
  br label %fallthrough.36

fallthrough.39:                                   ; preds = %else.39, %else.40
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.95.sroa.3.0.copyload86, metadata !478, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !477
  call void @llvm.dbg.value(metadata i8** %tmpv.95.sroa.4.0.cast.338.sroa_idx87, metadata !478, metadata !DIExpression(DW_OP_deref, DW_OP_LLVM_fragment, 64, 64)), !dbg !477
  %icmp.42 = icmp eq { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.95.sroa.3.0.copyload86, null, !dbg !555
  br i1 %icmp.42, label %else.43, label %then.41

else.39:                                          ; preds = %fallthrough.36
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @net.Conn..d, i64 0, i32 0), i8* nonnull %field.119, i8* nonnull %cast.341), !dbg !554
  br label %fallthrough.39

else.40:                                          ; preds = %fallthrough.36
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %field.119, i8* nonnull align 8 %cast.341, i64 16, i1 false), !dbg !554
  br label %fallthrough.39

then.41:                                          ; preds = %fallthrough.39
  call void @command_line_arguments.Session.TearDown(i8* nest undef, %Session.0* nonnull %cast.100), !dbg !556
  %31 = bitcast { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.95.sroa.3.0.copyload86 to i64*, !dbg !557
  %.field.ld.8203 = load i64, i64* %31, align 8, !dbg !557
  %32 = bitcast [1 x %IPST.9]* %tmpv.105 to i64*, !dbg !558
  store i64 %.field.ld.8203, i64* %32, align 8, !dbg !558
  %tmp.20.sroa.2.0.cast.359.sroa_idx186 = getelementptr inbounds [1 x %IPST.9], [1 x %IPST.9]* %tmpv.105, i64 0, i64 0, i32 1, !dbg !558
  %33 = bitcast i8** %tmp.20.sroa.2.0.cast.359.sroa_idx186 to i64*, !dbg !558
  store i64 %tmpv.95.sroa.4.0.copyload88199, i64* %33, align 8, !dbg !558
  %field.126 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.21, i64 0, i32 0, !dbg !558
  %cast.362 = getelementptr inbounds [1 x %IPST.9], [1 x %IPST.9]* %tmpv.105, i64 0, i64 0, !dbg !558
  store %IPST.9* %cast.362, %IPST.9** %field.126, align 8, !dbg !558
  %field.127 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.21, i64 0, i32 1, !dbg !558
  store i64 1, i64* %field.127, align 8, !dbg !558
  %field.128 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.21, i64 0, i32 2, !dbg !558
  store i64 1, i64* %field.128, align 8, !dbg !558
  %call.21 = call { i64, i64 } @github_com_spolu_warp_lib_errors.Newf(i8* nest undef, i64 ptrtoint ([29 x i8]* @const.54 to i64), i64 28, %IPST.3* byval nonnull %tmp.21), !dbg !558
  %call.21.fca.0.extract = extractvalue { i64, i64 } %call.21, 0, !dbg !558
  %call.21.fca.1.extract = extractvalue { i64, i64 } %call.21, 1, !dbg !558
  %call.22 = call { i64, i64 } @github_com_spolu_warp_lib_errors.Trace(i8* nest undef, i64 %call.21.fca.0.extract, i64 %call.21.fca.1.extract), !dbg !559
  %call.22.fca.0.extract = extractvalue { i64, i64 } %call.22, 0, !dbg !559
  %call.22.fca.1.extract = extractvalue { i64, i64 } %call.22, 1, !dbg !559
  call void @llvm.dbg.value(metadata %Session.0* null, metadata !471, metadata !DIExpression()), !dbg !472
  call void @llvm.dbg.value(metadata i64 %call.22.fca.0.extract, metadata !490, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !491
  call void @llvm.dbg.value(metadata i64 %call.22.fca.1.extract, metadata !490, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !491
  %tmp.22.sroa.0.0.cast.376.sroa_idx = getelementptr inbounds { %Session.0*, %error.0 }, { %Session.0*, %error.0 }* %sret.formal.0, i64 0, i32 0, !dbg !560
  store %Session.0* null, %Session.0** %tmp.22.sroa.0.0.cast.376.sroa_idx, align 8, !dbg !560
  %tmp.22.sroa.2.0.cast.376.sroa_idx187 = getelementptr inbounds { %Session.0*, %error.0 }, { %Session.0*, %error.0 }* %sret.formal.0, i64 0, i32 1, !dbg !560
  %tmp.22.sroa.2.0.cast.376.sroa_cast = bitcast %error.0* %tmp.22.sroa.2.0.cast.376.sroa_idx187 to i64*, !dbg !560
  store i64 %call.22.fca.0.extract, i64* %tmp.22.sroa.2.0.cast.376.sroa_cast, align 8, !dbg !560
  %tmp.22.sroa.3.0.cast.376.sroa_idx188 = getelementptr inbounds { %Session.0*, %error.0 }, { %Session.0*, %error.0 }* %sret.formal.0, i64 0, i32 1, i32 1, !dbg !560
  %tmp.22.sroa.3.0.cast.376.sroa_cast = bitcast i8** %tmp.22.sroa.3.0.cast.376.sroa_idx188 to i64*, !dbg !560
  store i64 %call.22.fca.1.extract, i64* %tmp.22.sroa.3.0.cast.376.sroa_cast, align 8, !dbg !560
  ret void, !dbg !560

else.43:                                          ; preds = %fallthrough.39
  %34 = bitcast i8* %field.119 to { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }**
  %tmpv.110.sroa.0.0.copyload = load { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }** %34, align 8
  %tmpv.110.sroa.3.0.cast.381.sroa_idx8 = getelementptr inbounds i8, i8* %call.4, i64 176
  %35 = bitcast i8* %tmpv.110.sroa.3.0.cast.381.sroa_idx8 to i64*
  %tmpv.110.sroa.3.0.copyload200 = load i64, i64* %35, align 8
  %icmp.44 = icmp eq { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }* %tmpv.110.sroa.0.0.copyload, null, !dbg !561
  br i1 %icmp.44, label %fallthrough.44, label %else.44

fallthrough.44:                                   ; preds = %else.43, %else.44
  %tmpv.113.0 = phi %_type.0* [ %.field.ld.9, %else.44 ], [ null, %else.43 ]
  %call.23 = call i8* @runtime.requireitab(i8* nest undef, %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @io.Writer..d, i64 0, i32 0), %_type.0* %tmpv.113.0), !dbg !561
  %36 = ptrtoint i8* %call.23 to i64, !dbg !561
  %call.24 = call %Encoder.0* @encoding_gob.NewEncoder(i8* nest undef, i64 %36, i64 %tmpv.110.sroa.3.0.copyload200), !dbg !562
  %field.139 = getelementptr inbounds i8, i8* %call.4, i64 184, !dbg !563
  %runtime.writeBarrier.ld.9 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !564
  %icmp.47 = icmp eq i32 %runtime.writeBarrier.ld.9, 0, !dbg !564
  br i1 %icmp.47, label %else.47, label %else.46

else.44:                                          ; preds = %else.43
  %field.135 = getelementptr inbounds { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }, { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }* %tmpv.110.sroa.0.0.copyload, i64 0, i32 0, !dbg !561
  %.field.ld.9 = load %_type.0*, %_type.0** %field.135, align 8, !dbg !561
  br label %fallthrough.44

fallthrough.46:                                   ; preds = %else.46, %else.47
  call void @github_com_spolu_warp_vendor_github_com_hashicorp_yamux.Session.Accept({ %Conn.0, %error.0 }* nonnull sret %sret.actual.16, i8* nest undef, %Session.2* %tmpv.0.sroa.0.0.copyload38), !dbg !565
  %tmpv.117.sroa.0.0.cast.394.sroa_cast = bitcast { %Conn.0, %error.0 }* %sret.actual.16 to i8*, !dbg !565
  %tmpv.117.sroa.3.0.cast.394.sroa_idx101 = getelementptr inbounds { %Conn.0, %error.0 }, { %Conn.0, %error.0 }* %sret.actual.16, i64 0, i32 1, i32 0, !dbg !565
  %tmpv.117.sroa.3.0.copyload102 = load { %_type.0*, { i64, i64 } (i8*, i8*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)* }** %tmpv.117.sroa.3.0.cast.394.sroa_idx101, align 8, !dbg !565
  %tmpv.117.sroa.4.0.cast.394.sroa_idx103 = getelementptr inbounds { %Conn.0, %error.0 }, { %Conn.0, %error.0 }* %sret.actual.16, i64 0, i32 1, i32 1, !dbg !565
  %37 = bitcast i8** %tmpv.117.sroa.4.0.cast.394.sroa_idx103 to i64*, !dbg !565
  %tmpv.117.sroa.4.0.copyload104201 = load i64, i64* %37, align 8, !dbg !565
  %tmpv.120221 = bitcast %Conn.0* %tmpv.120 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %tmpv.120221, i8* nonnull align 8 %tmpv.117.sroa.0.0.cast.394.sroa_cast, i64 16, i1 false)
  %cast.397 = bitcast %Conn.0* %tmpv.120 to i8*
  %field.142 = getelementptr inbounds i8, i8* %call.4, i64 192, !dbg !566
  %runtime.writeBarrier.ld.10 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !567
  %icmp.50 = icmp eq i32 %runtime.writeBarrier.ld.10, 0, !dbg !567
  br i1 %icmp.50, label %else.50, label %else.49

else.46:                                          ; preds = %fallthrough.44
  %cast.390 = bitcast %Encoder.0* %call.24 to i8*, !dbg !564
  call void @runtime.writebarrierptr(i8* nest undef, i8* nonnull %field.139, i8* %cast.390), !dbg !564
  br label %fallthrough.46

else.47:                                          ; preds = %fallthrough.44
  %38 = bitcast i8* %field.139 to %Encoder.0**, !dbg !563
  store %Encoder.0* %call.24, %Encoder.0** %38, align 8, !dbg !564
  br label %fallthrough.46

fallthrough.49:                                   ; preds = %else.49, %else.50
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.117.sroa.3.0.copyload102, metadata !478, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !477
  call void @llvm.dbg.value(metadata i8** %tmpv.117.sroa.4.0.cast.394.sroa_idx103, metadata !478, metadata !DIExpression(DW_OP_deref, DW_OP_LLVM_fragment, 64, 64)), !dbg !477
  %icmp.52 = icmp eq { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.117.sroa.3.0.copyload102, null, !dbg !568
  br i1 %icmp.52, label %else.51, label %then.51

else.49:                                          ; preds = %fallthrough.46
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @net.Conn..d, i64 0, i32 0), i8* nonnull %field.142, i8* nonnull %cast.397), !dbg !567
  br label %fallthrough.49

else.50:                                          ; preds = %fallthrough.46
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %field.142, i8* nonnull align 8 %cast.397, i64 16, i1 false), !dbg !567
  br label %fallthrough.49

then.51:                                          ; preds = %fallthrough.49
  call void @command_line_arguments.Session.TearDown(i8* nest undef, %Session.0* nonnull %cast.100), !dbg !569
  %39 = bitcast { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.117.sroa.3.0.copyload102 to i64*, !dbg !570
  %.field.ld.10202 = load i64, i64* %39, align 8, !dbg !570
  %40 = bitcast [1 x %IPST.9]* %tmpv.127 to i64*, !dbg !571
  store i64 %.field.ld.10202, i64* %40, align 8, !dbg !571
  %tmp.24.sroa.2.0.cast.415.sroa_idx189 = getelementptr inbounds [1 x %IPST.9], [1 x %IPST.9]* %tmpv.127, i64 0, i64 0, i32 1, !dbg !571
  %41 = bitcast i8** %tmp.24.sroa.2.0.cast.415.sroa_idx189 to i64*, !dbg !571
  store i64 %tmpv.117.sroa.4.0.copyload104201, i64* %41, align 8, !dbg !571
  %field.149 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.25, i64 0, i32 0, !dbg !571
  %cast.418 = getelementptr inbounds [1 x %IPST.9], [1 x %IPST.9]* %tmpv.127, i64 0, i64 0, !dbg !571
  store %IPST.9* %cast.418, %IPST.9** %field.149, align 8, !dbg !571
  %field.150 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.25, i64 0, i32 1, !dbg !571
  store i64 1, i64* %field.150, align 8, !dbg !571
  %field.151 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.25, i64 0, i32 2, !dbg !571
  store i64 1, i64* %field.151, align 8, !dbg !571
  %call.25 = call { i64, i64 } @github_com_spolu_warp_lib_errors.Newf(i8* nest undef, i64 ptrtoint ([28 x i8]* @const.56 to i64), i64 27, %IPST.3* byval nonnull %tmp.25), !dbg !571
  %call.25.fca.0.extract = extractvalue { i64, i64 } %call.25, 0, !dbg !571
  %call.25.fca.1.extract = extractvalue { i64, i64 } %call.25, 1, !dbg !571
  %call.26 = call { i64, i64 } @github_com_spolu_warp_lib_errors.Trace(i8* nest undef, i64 %call.25.fca.0.extract, i64 %call.25.fca.1.extract), !dbg !572
  %call.26.fca.0.extract = extractvalue { i64, i64 } %call.26, 0, !dbg !572
  %call.26.fca.1.extract = extractvalue { i64, i64 } %call.26, 1, !dbg !572
  call void @llvm.dbg.value(metadata %Session.0* null, metadata !471, metadata !DIExpression()), !dbg !472
  call void @llvm.dbg.value(metadata i64 %call.26.fca.0.extract, metadata !490, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !491
  call void @llvm.dbg.value(metadata i64 %call.26.fca.1.extract, metadata !490, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !491
  %tmp.26.sroa.0.0.cast.432.sroa_idx = getelementptr inbounds { %Session.0*, %error.0 }, { %Session.0*, %error.0 }* %sret.formal.0, i64 0, i32 0, !dbg !573
  store %Session.0* null, %Session.0** %tmp.26.sroa.0.0.cast.432.sroa_idx, align 8, !dbg !573
  %tmp.26.sroa.2.0.cast.432.sroa_idx190 = getelementptr inbounds { %Session.0*, %error.0 }, { %Session.0*, %error.0 }* %sret.formal.0, i64 0, i32 1, !dbg !573
  %tmp.26.sroa.2.0.cast.432.sroa_cast = bitcast %error.0* %tmp.26.sroa.2.0.cast.432.sroa_idx190 to i64*, !dbg !573
  store i64 %call.26.fca.0.extract, i64* %tmp.26.sroa.2.0.cast.432.sroa_cast, align 8, !dbg !573
  %tmp.26.sroa.3.0.cast.432.sroa_idx191 = getelementptr inbounds { %Session.0*, %error.0 }, { %Session.0*, %error.0 }* %sret.formal.0, i64 0, i32 1, i32 1, !dbg !573
  %tmp.26.sroa.3.0.cast.432.sroa_cast = bitcast i8** %tmp.26.sroa.3.0.cast.432.sroa_idx191 to i64*, !dbg !573
  store i64 %call.26.fca.1.extract, i64* %tmp.26.sroa.3.0.cast.432.sroa_cast, align 8, !dbg !573
  ret void, !dbg !573

else.51:                                          ; preds = %fallthrough.49
  call void @llvm.dbg.value(metadata %Session.0* %cast.100, metadata !471, metadata !DIExpression()), !dbg !472
  call void @llvm.dbg.value(metadata i64 0, metadata !490, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !491
  call void @llvm.dbg.value(metadata i64 0, metadata !490, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !491
  %42 = bitcast { %Session.0*, %error.0 }* %sret.formal.0 to i8**, !dbg !574
  store i8* %call.4, i8** %42, align 8, !dbg !574
  %tmp.27.sroa.2.0.cast.441.sroa_idx192 = getelementptr inbounds { %Session.0*, %error.0 }, { %Session.0*, %error.0 }* %sret.formal.0, i64 0, i32 1, !dbg !574
  %43 = bitcast %error.0* %tmp.27.sroa.2.0.cast.441.sroa_idx192 to i8*, !dbg !574
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 0, i64 16, i1 false), !dbg !574
  ret void, !dbg !574
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1) #1

declare i8* @runtime.requireitab(i8*, %_type.0*, %_type.0*) local_unnamed_addr #0

declare void @github_com_spolu_warp_vendor_github_com_hashicorp_yamux.Server({ %Session.2*, %error.0 }*, i8*, i64, i64, %Config.1*) local_unnamed_addr #0

declare { i64, i64 } @github_com_spolu_warp_lib_errors.Newf(i8*, i64, i64, %IPST.3*) local_unnamed_addr #0

declare { i64, i64 } @github_com_spolu_warp_lib_errors.Trace(i8*, i64, i64) local_unnamed_addr #0

declare i8* @runtime.newobject(i8*, %_type.0*) local_unnamed_addr #0

declare void @runtime.typedmemmove(i8*, %_type.0*, i8*, i8*) local_unnamed_addr #0

declare void @github_com_spolu_warp_vendor_github_com_hashicorp_yamux.Session.Accept({ %Conn.0, %error.0 }*, i8*, %Session.2*) local_unnamed_addr #0

; Function Attrs: noreturn
declare void @__go_runtime_error(i8*, i32) local_unnamed_addr #2

declare %Encoder.0* @encoding_gob.NewEncoder(i8*, i64, i64) local_unnamed_addr #0

declare void @runtime.writebarrierptr(i8*, i8*, i8*) local_unnamed_addr #0

declare %Decoder.0* @encoding_gob.NewDecoder(i8*, i64, i64) local_unnamed_addr #0

declare { i64, i64 } @encoding_gob.Decoder.Decode(i8*, %Decoder.0*, i64, i64) local_unnamed_addr #0

declare void @github_com_spolu_warp_lib_logging.Logf(i8*, i64, i64, i64, i64, %IPST.3*) local_unnamed_addr #0

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64, i8* nocapture) #1

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #3

declare { i64, i64 } @fmt.Sprintf(i8*, i64, i64, %IPST.3*) local_unnamed_addr #0

declare void @sync.Mutex.Lock(i8*, %Mutex.0*) local_unnamed_addr #0

; Function Attrs: noinline
define internal i8 @command_line_arguments.command_line_arguments..thunk1(i8* nest nocapture readnone %nest.30, { %Mutex.0* }* nocapture readonly %__go_thunk_parameter) #4 !dbg !575 {
entry:
  call void @llvm.dbg.value(metadata { %Mutex.0* }* %__go_thunk_parameter, metadata !582, metadata !DIExpression()), !dbg !583
  call void @llvm.dbg.value(metadata i8 0, metadata !584, metadata !DIExpression()), !dbg !583
  %call.201 = call i8 @runtime.setdeferretaddr(i8* nest undef, i8* blockaddress(@command_line_arguments.command_line_arguments..thunk1, %label.0)), !dbg !583
  %0 = and i8 %call.201, 1, !dbg !583
  %trunc.313 = icmp eq i8 %0, 0, !dbg !583
  br i1 %trunc.313, label %else.313, label %label.0

else.313:                                         ; preds = %entry
  %field.944 = getelementptr inbounds { %Mutex.0* }, { %Mutex.0* }* %__go_thunk_parameter, i64 0, i32 0, !dbg !583
  %.field.ld.214 = load %Mutex.0*, %Mutex.0** %field.944, align 8, !dbg !583
  call void @sync.Mutex.Unlock(i8* nest undef, %Mutex.0* %.field.ld.214), !dbg !583
  br label %label.0

label.0:                                          ; preds = %entry, %else.313
  call void @llvm.dbg.value(metadata i8 0, metadata !584, metadata !DIExpression()), !dbg !583
  ret i8 0, !dbg !583
}

declare void @runtime.deferproc(i8*, i8*, %__go_descriptor.50*, i8*) local_unnamed_addr #0

define internal void @command_line_arguments..1command_line_arguments.Session.TearDown..func1(i8* nest nocapture readonly %"$closure") #0 !dbg !585 {
entry:
  call void @time.Sleep(i8* nest undef, i64 500000000), !dbg !586
  %field.181 = getelementptr inbounds i8, i8* %"$closure", i64 8, !dbg !587
  %0 = bitcast i8* %field.181 to %Session.0***, !dbg !587
  %.field.ld.16 = load %Session.0**, %Session.0*** %0, align 8, !dbg !587
  %.ld.41 = load %Session.0*, %Session.0** %.field.ld.16, align 8, !dbg !587
  %icmp.65 = icmp eq %Session.0* %.ld.41, null, !dbg !588
  br i1 %icmp.65, label %then.64, label %else.64

then.64:                                          ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !588
  unreachable

else.64:                                          ; preds = %entry
  %field.183 = getelementptr inbounds %Session.0, %Session.0* %.ld.41, i64 0, i32 5, !dbg !588
  %.field.ld.18 = load %Session.2*, %Session.2** %field.183, align 8, !dbg !588
  %call.34 = call { i64, i64 } @github_com_spolu_warp_vendor_github_com_hashicorp_yamux.Session.Close(i8* nest undef, %Session.2* %.field.ld.18), !dbg !589
  ret void
}

define internal void @command_line_arguments.command_line_arguments..thunk2(i8* nest nocapture readnone %nest.31, { %__go_descriptor.10* }* nocapture readonly %__go_thunk_parameter) #0 !dbg !590 {
entry:
  call void @llvm.dbg.value(metadata { %__go_descriptor.10* }* %__go_thunk_parameter, metadata !597, metadata !DIExpression()), !dbg !598
  %field.945 = getelementptr inbounds { %__go_descriptor.10* }, { %__go_descriptor.10* }* %__go_thunk_parameter, i64 0, i32 0, !dbg !598
  %.field.ld.215 = load %__go_descriptor.10*, %__go_descriptor.10** %field.945, align 8, !dbg !598
  %0 = getelementptr inbounds %__go_descriptor.10, %__go_descriptor.10* %.field.ld.215, i64 0, i32 0, !dbg !598
  %deref.ld.731 = load void (i8*)*, void (i8*)** %0, align 8, !dbg !598
  %cast.2513 = bitcast %__go_descriptor.10* %.field.ld.215 to i8*, !dbg !598
  call void %deref.ld.731(i8* nest %cast.2513), !dbg !598
  ret void
}

declare void @__go_go(i8*, %__go_descriptor.50*, i8*) local_unnamed_addr #0

declare void @runtime.checkdefer(i8*, i8*) local_unnamed_addr #0

declare void @runtime.deferreturn(i8*, i8*) local_unnamed_addr #0

declare i32 @__gccgo_personality_v0(i32, i32, i64, i8*, i8*)

declare void @time.Sleep(i8*, i64) local_unnamed_addr #0

declare { i64, i64 } @github_com_spolu_warp_vendor_github_com_hashicorp_yamux.Session.Close(i8*, %Session.2*) local_unnamed_addr #0

; Function Attrs: noinline
define internal i8 @command_line_arguments.command_line_arguments..thunk3(i8* nest nocapture readnone %nest.32, { %Mutex.0* }* nocapture readonly %__go_thunk_parameter) #4 !dbg !599 {
entry:
  call void @llvm.dbg.value(metadata { %Mutex.0* }* %__go_thunk_parameter, metadata !600, metadata !DIExpression()), !dbg !601
  call void @llvm.dbg.value(metadata i8 0, metadata !602, metadata !DIExpression()), !dbg !601
  %call.202 = call i8 @runtime.setdeferretaddr(i8* nest undef, i8* blockaddress(@command_line_arguments.command_line_arguments..thunk3, %label.0)), !dbg !601
  %0 = and i8 %call.202, 1, !dbg !601
  %trunc.314 = icmp eq i8 %0, 0, !dbg !601
  br i1 %trunc.314, label %else.314, label %label.0

else.314:                                         ; preds = %entry
  %field.947 = getelementptr inbounds { %Mutex.0* }, { %Mutex.0* }* %__go_thunk_parameter, i64 0, i32 0, !dbg !601
  %.field.ld.217 = load %Mutex.0*, %Mutex.0** %field.947, align 8, !dbg !601
  call void @sync.Mutex.Unlock(i8* nest undef, %Mutex.0* %.field.ld.217), !dbg !601
  br label %label.0

label.0:                                          ; preds = %entry, %else.314
  call void @llvm.dbg.value(metadata i8 0, metadata !602, metadata !DIExpression()), !dbg !601
  ret i8 0, !dbg !601
}

declare { i64, i64 } @encoding_gob.Encoder.Encode(i8*, %Encoder.0*, i64, i64) local_unnamed_addr #0

define { i64, i64 } @command_line_arguments.Srv.Run(i8* nest nocapture readnone %nest.7, %Srv.0* %param, i64 %param.chunk0, i64 %param.chunk1) #0 personality i32 (i32, i32, i64, i8*, i8*)* @__gccgo_personality_v0 !dbg !603 {
entry:
  %tmp.50 = alloca %IPST.3, align 8
  %tmp.47 = alloca %IPST.3, align 8
  %tmp.45 = alloca %IPST.3, align 8
  %tmpv.203 = alloca %Srv.0*, align 8
  %tmpv.205 = alloca %Context.0, align 8
  %tmpv.206 = alloca i8, align 1
  %cer = alloca %Certificate.0, align 8
  %sret.actual.26 = alloca { %Certificate.0, %error.0 }, align 8
  %tmpv.217 = alloca [1 x %Certificate.0], align 8
  %tmpv.226 = alloca %Config.0, align 8
  %sret.actual.28 = alloca { %Listener.0, %error.0 }, align 8
  %tmpv.234 = alloca { i8*, i64 }, align 8
  %tmpv.236 = alloca { i8*, i64 }, align 8
  %tmpv.238 = alloca { i8*, i64 }, align 8
  %tmpv.241 = alloca { i8*, i64 }, align 8
  %tmpv.243 = alloca { i8*, i64 }, align 8
  %tmpv.245 = alloca { i8*, i64 }, align 8
  %tmpv.246 = alloca [3 x %IPST.9], align 8
  %sret.actual.30 = alloca { %Listener.0, %error.0 }, align 8
  %tmpv.254 = alloca { i8*, i64 }, align 8
  %tmpv.257 = alloca { i8*, i64 }, align 8
  %tmpv.258 = alloca [1 x %IPST.9], align 8
  %tmpv.259 = alloca { %Listener.0 }, align 8
  %sret.actual.32 = alloca { %Conn.0, %error.0 }, align 8
  %tmpv.262 = alloca %Conn.0, align 8
  %tmpv.270 = alloca { i8*, i64 }, align 8
  %tmpv.271 = alloca [2 x %IPST.9], align 8
  %tmpv.278 = alloca { i8*, %Srv.0**, %Context.0*, %Conn.0* }, align 8
  %tmpv.281 = alloca { %__go_descriptor.10* }, align 8
  call void @llvm.dbg.value(metadata %Srv.0* %param, metadata !614, metadata !DIExpression()), !dbg !615
  call void @llvm.dbg.value(metadata i64 %param.chunk0, metadata !616, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !617
  call void @llvm.dbg.value(metadata i64 %param.chunk1, metadata !616, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !617
  store i8 0, i8* %tmpv.206, align 1
  %call.49 = invoke i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Srv, i64 0, i32 0))
          to label %cont.42 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !615

finally.2:                                        ; preds = %cont.53, %cont.62, %cont.75, %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, %catchpad.2
  %"$ret4.sroa.0.1" = phi i64 [ 0, %catchpad.2 ], [ %call.53.fca.0.extract, %cont.53 ], [ 0, %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp ], [ %call.58.fca.0.extract, %cont.62 ], [ %call.62.fca.0.extract, %cont.75 ]
  %"$ret4.sroa.7.1" = phi i64 [ 0, %catchpad.2 ], [ %call.53.fca.1.extract, %cont.53 ], [ 0, %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp ], [ %call.58.fca.1.extract, %cont.62 ], [ %call.62.fca.1.extract, %cont.75 ]
  %ehtmp.2.sroa.0.0 = phi i8* [ %ex2.2.fca.0.extract, %catchpad.2 ], [ undef, %cont.53 ], [ undef, %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp ], [ undef, %cont.62 ], [ undef, %cont.75 ]
  %ehtmp.2.sroa.2.0 = phi i32 [ %ex2.2.fca.1.extract, %catchpad.2 ], [ undef, %cont.53 ], [ undef, %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp ], [ undef, %cont.62 ], [ undef, %cont.75 ]
  %finvar.2.0 = phi i8 [ 0, %catchpad.2 ], [ 1, %cont.53 ], [ 1, %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp ], [ 1, %cont.62 ], [ 1, %cont.75 ]
  call void @llvm.dbg.value(metadata i64 %"$ret4.sroa.7.1", metadata !618, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !619
  call void @llvm.dbg.value(metadata i64 %"$ret4.sroa.0.1", metadata !618, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !619
  br label %finish.2

pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp: ; preds = %cont.94, %cont.93, %fallthrough.91, %then.91, %cont.90, %else.89, %else.90, %cont.87, %cont.86, %cont.85, %then.89, %else.87, %then.88, %cont.81, %label.0, %fallthrough.75, %cont.78, %cont.77, %fallthrough.86, %then.86, %then.85, %fallthrough.84, %then.84, %cont.71, %cont.70, %cont.69, %cont.68, %cont.67, %cont.66, %fallthrough.83, %then.83, %then.82, %then.81, %then.80, %fallthrough.79, %then.79, %cont.58, %cont.57, %cont.56, %cont.55, %cont.54, %else.78, %then.78, %fallthrough.77, %then.77, %then.76, %fallthrough.74, %then.74, %fallthrough.72, %then.72, %cont.44, %cont.43, %cont.42, %entry
  %lpad.loopexit.split-lp127 = landingpad { i8*, i32 }
          catch i8* null
  call void @llvm.dbg.value(metadata i64 0, metadata !618, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !619
  call void @llvm.dbg.value(metadata i64 0, metadata !618, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !619
  invoke void @runtime.checkdefer(i8* nest undef, i8* nonnull %tmpv.206)
          to label %finally.2 unwind label %catchpad.2, !dbg !620

cont.42:                                          ; preds = %entry
  %cast.858 = bitcast i8* %call.49 to %Srv.0**, !dbg !615
  store %Srv.0* %param, %Srv.0** %tmpv.203, align 8
  %cast.861 = bitcast %Srv.0** %tmpv.203 to i8*, !dbg !615
  invoke void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Srv, i64 0, i32 0), i8* %call.49, i8* nonnull %cast.861)
          to label %cont.43 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !615

cont.43:                                          ; preds = %cont.42
  call void @llvm.dbg.value(metadata %Srv.0** %cast.858, metadata !621, metadata !DIExpression()), !dbg !615
  %call.50 = invoke i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @context.Context..d, i64 0, i32 0))
          to label %cont.44 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !617

cont.44:                                          ; preds = %cont.43
  %param.addr1.sroa.0.0.cast.864.sroa_cast = bitcast %Context.0* %tmpv.205 to i64*
  store i64 %param.chunk0, i64* %param.addr1.sroa.0.0.cast.864.sroa_cast, align 8
  %param.addr1.sroa.2.0.cast.864.sroa_idx92 = getelementptr inbounds %Context.0, %Context.0* %tmpv.205, i64 0, i32 1
  %param.addr1.sroa.2.0.cast.864.sroa_cast = bitcast i8** %param.addr1.sroa.2.0.cast.864.sroa_idx92 to i64*
  store i64 %param.chunk1, i64* %param.addr1.sroa.2.0.cast.864.sroa_cast, align 8
  %cast.868 = bitcast %Context.0* %tmpv.205 to i8*, !dbg !617
  invoke void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @context.Context..d, i64 0, i32 0), i8* %call.50, i8* nonnull %cast.868)
          to label %cont.45 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !617

cont.45:                                          ; preds = %cont.44
  call void @llvm.dbg.value(metadata i8* %call.50, metadata !623, metadata !DIExpression()), !dbg !617
  call void @llvm.dbg.value(metadata i64 0, metadata !618, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !619
  call void @llvm.dbg.value(metadata i64 0, metadata !618, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !619
  %.ld.47 = load %Srv.0*, %Srv.0** %cast.858, align 8, !dbg !625
  %icmp.73 = icmp eq %Srv.0* %.ld.47, null, !dbg !627
  br i1 %icmp.73, label %then.72, label %fallthrough.72

then.72:                                          ; preds = %cont.45
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.72 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !627

fallthrough.72:                                   ; preds = %cont.45, %then.72
  %field.224 = getelementptr inbounds %Srv.0, %Srv.0* %.ld.47, i64 0, i32 1, !dbg !627
  %field0.36 = bitcast { i8*, i64 }* %field.224 to i64*, !dbg !628
  %ld.57 = load i64, i64* %field0.36, align 8, !dbg !628
  %0 = getelementptr inbounds %Srv.0, %Srv.0* %.ld.47, i64 0, i32 1, i32 1, !dbg !628
  %ld.58 = load i64, i64* %0, align 8, !dbg !628
  %call.51 = invoke i8 @runtime.eqstring(i8* nest undef, i64 %ld.57, i64 %ld.58, i64 0, i64 0)
          to label %cont.47 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !628

cont.47:                                          ; preds = %fallthrough.72
  %icmp.74 = icmp eq i8 %call.51, 1, !dbg !628
  br i1 %icmp.74, label %else.75, label %then.73

then.73:                                          ; preds = %cont.47
  %.ld.49 = load %Srv.0*, %Srv.0** %cast.858, align 8, !dbg !629
  %icmp.75 = icmp eq %Srv.0* %.ld.49, null, !dbg !630
  br i1 %icmp.75, label %then.74, label %fallthrough.74

fallthrough.73:                                   ; preds = %fallthrough.74
  %icmp.76 = icmp eq i8 %call.52, 1, !dbg !631
  br i1 %icmp.76, label %else.75, label %then.75

then.74:                                          ; preds = %then.73
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.74 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !630

fallthrough.74:                                   ; preds = %then.73, %then.74
  %field.225 = getelementptr inbounds %Srv.0, %Srv.0* %.ld.49, i64 0, i32 2, !dbg !630
  %field0.38 = bitcast { i8*, i64 }* %field.225 to i64*, !dbg !631
  %ld.61 = load i64, i64* %field0.38, align 8, !dbg !631
  %1 = getelementptr inbounds %Srv.0, %Srv.0* %.ld.49, i64 0, i32 2, i32 1, !dbg !631
  %ld.62 = load i64, i64* %1, align 8, !dbg !631
  %call.52 = invoke i8 @runtime.eqstring(i8* nest undef, i64 %ld.61, i64 %ld.62, i64 0, i64 0)
          to label %fallthrough.73 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !631

then.75:                                          ; preds = %fallthrough.73
  %cer.0.sroa_cast = bitcast %Certificate.0* %cer to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %cer.0.sroa_cast)
  %.ld.51 = load %Srv.0*, %Srv.0** %cast.858, align 8, !dbg !632
  %icmp.77 = icmp eq %Srv.0* %.ld.51, null, !dbg !634
  br i1 %icmp.77, label %then.76, label %fallthrough.76.thread

fallthrough.76.thread:                            ; preds = %then.75
  %field.226103 = getelementptr inbounds %Srv.0, %Srv.0* %.ld.51, i64 0, i32 1, !dbg !634
  br label %fallthrough.77

fallthrough.75:                                   ; preds = %cont.78, %cont.72
  %ln.sroa.0.0 = phi { %_type.0*, void ({ %Conn.0, %error.0 }*, i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)* }* [ %tmpv.227.sroa.0.sroa.0.0.copyload85, %cont.72 ], [ %tmpv.247.sroa.0.sroa.0.0.copyload80, %cont.78 ], !dbg !635
  %ln.sroa.6.0 = phi i8* [ %tmpv.227.sroa.0.sroa.3.0.copyload87, %cont.72 ], [ %tmpv.247.sroa.0.sroa.3.0.copyload82, %cont.78 ], !dbg !635
  call void @llvm.dbg.value(metadata i8* %ln.sroa.6.0, metadata !637, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !654
  call void @llvm.dbg.value(metadata { %_type.0*, void ({ %Conn.0, %error.0 }*, i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)* }* %ln.sroa.0.0, metadata !637, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !654
  %cast.1063 = bitcast { %Listener.0 }* %tmpv.259 to i8*
  %ln.sroa.0.0.cast.1065.sroa_idx = getelementptr inbounds { %Listener.0 }, { %Listener.0 }* %tmpv.259, i64 0, i32 0, i32 0, !dbg !655
  store { %_type.0*, void ({ %Conn.0, %error.0 }*, i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)* }* %ln.sroa.0.0, { %_type.0*, void ({ %Conn.0, %error.0 }*, i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)* }** %ln.sroa.0.0.cast.1065.sroa_idx, align 8, !dbg !655
  %ln.sroa.6.0.cast.1065.sroa_idx76 = getelementptr inbounds { %Listener.0 }, { %Listener.0 }* %tmpv.259, i64 0, i32 0, i32 1, !dbg !655
  store i8* %ln.sroa.6.0, i8** %ln.sroa.6.0.cast.1065.sroa_idx76, align 8, !dbg !655
  invoke void @runtime.deferproc(i8* nest undef, i8* nonnull %tmpv.206, %__go_descriptor.50* bitcast (i8 (i8*, { %Listener.0 }*)* @command_line_arguments.command_line_arguments..thunk4 to %__go_descriptor.50*), i8* nonnull %cast.1063)
          to label %label.0.preheader unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !655

label.0.preheader:                                ; preds = %fallthrough.75
  %field.296 = getelementptr inbounds { %_type.0*, void ({ %Conn.0, %error.0 }*, i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)* }, { %_type.0*, void ({ %Conn.0, %error.0 }*, i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)* }* %ln.sroa.0.0, i64 0, i32 1
  %tmpv.261.sroa.0.0.cast.1072.sroa_cast = bitcast { %Conn.0, %error.0 }* %sret.actual.32 to i8*
  %tmpv.261.sroa.3.0.cast.1072.sroa_idx14 = getelementptr inbounds { %Conn.0, %error.0 }, { %Conn.0, %error.0 }* %sret.actual.32, i64 0, i32 1, i32 0
  %tmpv.261.sroa.4.0.cast.1072.sroa_idx16 = getelementptr inbounds { %Conn.0, %error.0 }, { %Conn.0, %error.0 }* %sret.actual.32, i64 0, i32 1, i32 1
  %2 = bitcast i8** %tmpv.261.sroa.4.0.cast.1072.sroa_idx16 to i64*
  %tmpv.261.sroa.0.0.cast.1073.sroa_cast = bitcast %Conn.0* %tmpv.262 to i8*
  %field.318 = getelementptr inbounds { i8*, %Srv.0**, %Context.0*, %Conn.0* }, { i8*, %Srv.0**, %Context.0*, %Conn.0* }* %tmpv.278, i64 0, i32 0
  %field.319 = getelementptr inbounds { i8*, %Srv.0**, %Context.0*, %Conn.0* }, { i8*, %Srv.0**, %Context.0*, %Conn.0* }* %tmpv.278, i64 0, i32 1
  %3 = bitcast %Srv.0*** %field.319 to i8**
  %field.320 = getelementptr inbounds { i8*, %Srv.0**, %Context.0*, %Conn.0* }, { i8*, %Srv.0**, %Context.0*, %Conn.0* }* %tmpv.278, i64 0, i32 2
  %4 = bitcast %Context.0** %field.320 to i8**
  %field.321 = getelementptr inbounds { i8*, %Srv.0**, %Context.0*, %Conn.0* }, { i8*, %Srv.0**, %Context.0*, %Conn.0* }* %tmpv.278, i64 0, i32 3
  %5 = bitcast %Conn.0** %field.321 to i8**
  %cast.1118 = bitcast { i8*, %Srv.0**, %Context.0*, %Conn.0* }* %tmpv.278 to i8*
  %tmpv.268.sroa.0.0.cast.1094.sroa_cast = bitcast { i8*, i64 }* %tmpv.270 to i64*
  %tmpv.268.sroa.2.0.cast.1094.sroa_idx6 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.270, i64 0, i32 1
  %cast.1097 = bitcast { i8*, i64 }* %tmpv.270 to i8*
  %6 = bitcast { %__go_descriptor.10* }* %tmpv.281 to i8**
  %cast.1125 = bitcast { %__go_descriptor.10* }* %tmpv.281 to i8*
  %tmp.48.sroa.0.0.cast.1101.sroa_idx = getelementptr inbounds [2 x %IPST.9], [2 x %IPST.9]* %tmpv.271, i64 0, i64 0, i32 0
  %tmp.48.sroa.2.0.cast.1101.sroa_idx97 = getelementptr inbounds [2 x %IPST.9], [2 x %IPST.9]* %tmpv.271, i64 0, i64 0, i32 1
  %tmp.49.sroa.0.0.cast.1103.sroa_idx = getelementptr inbounds [2 x %IPST.9], [2 x %IPST.9]* %tmpv.271, i64 0, i64 1, i32 0
  %7 = bitcast %_type.0** %tmp.49.sroa.0.0.cast.1103.sroa_idx to i64*
  %tmp.49.sroa.2.0.cast.1103.sroa_idx98 = getelementptr inbounds [2 x %IPST.9], [2 x %IPST.9]* %tmpv.271, i64 0, i64 1, i32 1
  %8 = bitcast i8** %tmp.49.sroa.2.0.cast.1103.sroa_idx98 to i64*
  %field.314 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.50, i64 0, i32 0
  %cast.1107 = getelementptr inbounds [2 x %IPST.9], [2 x %IPST.9]* %tmpv.271, i64 0, i64 0
  %field.315 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.50, i64 0, i32 1
  %field.316 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.50, i64 0, i32 2
  %field0.53 = bitcast i8* %call.50 to i64*
  %field1.53 = getelementptr inbounds i8, i8* %call.50, i64 8
  %9 = bitcast i8* %field1.53 to i64*
  br label %label.0

else.75:                                          ; preds = %fallthrough.73, %cont.47
  %.ld.63 = load %Srv.0*, %Srv.0** %cast.858, align 8, !dbg !656
  %icmp.85 = icmp eq %Srv.0* %.ld.63, null, !dbg !657
  br i1 %icmp.85, label %then.84, label %fallthrough.84

then.76:                                          ; preds = %then.75
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.76 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !634

fallthrough.76:                                   ; preds = %then.76
  %.ld.53.pr = load %Srv.0*, %Srv.0** %cast.858, align 8, !dbg !658
  %icmp.78 = icmp eq %Srv.0* %.ld.53.pr, null, !dbg !659
  br i1 %icmp.78, label %then.77, label %fallthrough.77

then.77:                                          ; preds = %fallthrough.76
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.77 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !659

fallthrough.77:                                   ; preds = %fallthrough.76.thread, %fallthrough.76, %then.77
  %field.226106 = phi { i8*, i64 }* [ %field.226103, %fallthrough.76.thread ], [ inttoptr (i64 16 to { i8*, i64 }*), %fallthrough.76 ], [ inttoptr (i64 16 to { i8*, i64 }*), %then.77 ]
  %.ld.53105 = phi %Srv.0* [ %.ld.51, %fallthrough.76.thread ], [ %.ld.53.pr, %fallthrough.76 ], [ null, %then.77 ]
  %field.227 = getelementptr inbounds %Srv.0, %Srv.0* %.ld.53105, i64 0, i32 2, !dbg !659
  %field0.40 = bitcast { i8*, i64 }* %field.226106 to i64*, !dbg !660
  %ld.65 = load i64, i64* %field0.40, align 8, !dbg !660
  %10 = getelementptr inbounds %Srv.0, %Srv.0* %.ld.51, i64 0, i32 1, i32 1, !dbg !660
  %ld.66 = load i64, i64* %10, align 8, !dbg !660
  %field0.41 = bitcast { i8*, i64 }* %field.227 to i64*, !dbg !660
  %ld.67 = load i64, i64* %field0.41, align 8, !dbg !660
  %11 = getelementptr inbounds %Srv.0, %Srv.0* %.ld.53105, i64 0, i32 2, i32 1, !dbg !660
  %ld.68 = load i64, i64* %11, align 8, !dbg !660
  invoke void @crypto_tls.LoadX509KeyPair({ %Certificate.0, %error.0 }* nonnull sret %sret.actual.26, i8* nest undef, i64 %ld.65, i64 %ld.66, i64 %ld.67, i64 %ld.68)
          to label %cont.52 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !660

cont.52:                                          ; preds = %fallthrough.77
  %tmpv.210.sroa.0.0.cast.884.sroa_cast = bitcast { %Certificate.0, %error.0 }* %sret.actual.26 to i8*, !dbg !660
  %tmpv.210.sroa.3.0.cast.884.sroa_idx63 = getelementptr inbounds { %Certificate.0, %error.0 }, { %Certificate.0, %error.0 }* %sret.actual.26, i64 0, i32 1, !dbg !660
  %tmpv.210.sroa.3.0.cast.884.sroa_cast = bitcast %error.0* %tmpv.210.sroa.3.0.cast.884.sroa_idx63 to i64*, !dbg !660
  %tmpv.210.sroa.3.0.copyload64 = load i64, i64* %tmpv.210.sroa.3.0.cast.884.sroa_cast, align 8, !dbg !660
  %tmpv.210.sroa.4.0.cast.884.sroa_idx65 = getelementptr inbounds { %Certificate.0, %error.0 }, { %Certificate.0, %error.0 }* %sret.actual.26, i64 0, i32 1, i32 1, !dbg !660
  %tmpv.210.sroa.4.0.cast.884.sroa_cast = bitcast i8** %tmpv.210.sroa.4.0.cast.884.sroa_idx65 to i64*, !dbg !660
  %tmpv.210.sroa.4.0.copyload66 = load i64, i64* %tmpv.210.sroa.4.0.cast.884.sroa_cast, align 8, !dbg !660
  %cer121 = bitcast %Certificate.0* %cer to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cer121, i8* nonnull align 8 %tmpv.210.sroa.0.0.cast.884.sroa_cast, i64 96, i1 false)
  call void @llvm.dbg.value(metadata i64 %tmpv.210.sroa.3.0.copyload64, metadata !661, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !662
  call void @llvm.dbg.value(metadata i64 %tmpv.210.sroa.4.0.copyload66, metadata !661, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !662
  %icmp.79 = icmp eq i64 %tmpv.210.sroa.3.0.copyload64, 0, !dbg !663
  br i1 %icmp.79, label %else.78, label %then.78

then.78:                                          ; preds = %cont.52
  %call.53 = invoke { i64, i64 } @github_com_spolu_warp_lib_errors.Trace(i8* nest undef, i64 %tmpv.210.sroa.3.0.copyload64, i64 %tmpv.210.sroa.4.0.copyload66)
          to label %cont.53 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !664

else.78:                                          ; preds = %cont.52
  %call.54 = invoke i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%ArrayType.0, %ArrayType.0* @type...61x.7crypto_tls.Certificate, i64 0, i32 0))
          to label %cont.54 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !665

cont.53:                                          ; preds = %then.78
  %call.53.fca.0.extract = extractvalue { i64, i64 } %call.53, 0, !dbg !664
  %call.53.fca.1.extract = extractvalue { i64, i64 } %call.53, 1, !dbg !664
  call void @llvm.dbg.value(metadata i64 %call.53.fca.0.extract, metadata !618, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !619
  call void @llvm.dbg.value(metadata i64 %call.53.fca.1.extract, metadata !618, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !619
  br label %finally.2

cont.54:                                          ; preds = %else.78
  %cast.908 = bitcast [1 x %Certificate.0]* %tmpv.217 to i8*, !dbg !665
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.908, i8* nonnull align 8 %cer.0.sroa_cast, i64 96, i1 false), !dbg !665
  invoke void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%ArrayType.0, %ArrayType.0* @type...61x.7crypto_tls.Certificate, i64 0, i32 0), i8* %call.54, i8* nonnull %cast.908)
          to label %cont.55 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !665

cont.55:                                          ; preds = %cont.54
  %call.55 = invoke i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%ArrayType.0, %ArrayType.0* @type...64x.7uint16, i64 0, i32 0))
          to label %cont.56 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !666

cont.56:                                          ; preds = %cont.55
  %12 = bitcast i8* %call.55 to i64*, !dbg !666
  store i64 14918851298115632, i64* %12, align 2, !dbg !666
  %call.56 = invoke i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%ArrayType.0, %ArrayType.0* @type...63x.7crypto_tls.CurveID, i64 0, i32 0))
          to label %cont.57 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !667

cont.57:                                          ; preds = %cont.56
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %call.56, i8* align 2 bitcast ([3 x i16]* @const.189 to i8*), i64 6, i1 false), !dbg !667
  %call.57 = invoke i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @crypto_tls.Config..d, i64 0, i32 0))
          to label %cont.58 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !668

cont.58:                                          ; preds = %cont.57
  %cast.929 = bitcast i8* %call.57 to %Config.0*, !dbg !668
  %cast.930 = bitcast %Config.0* %tmpv.226 to i8*, !dbg !669
  %tmpv.218.sroa.0.0.cast.932.sroa_idx = getelementptr inbounds %Config.0, %Config.0* %tmpv.226, i64 0, i32 2, i32 0, !dbg !669
  %13 = bitcast %Certificate.0** %tmpv.218.sroa.0.0.cast.932.sroa_idx to i8**, !dbg !669
  %14 = bitcast %Config.0* %tmpv.226 to i8*, !dbg !669
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 24, i1 false), !dbg !669
  store i8* %call.54, i8** %13, align 8, !dbg !669
  %tmpv.218.sroa.2.0.cast.932.sroa_idx40 = getelementptr inbounds %Config.0, %Config.0* %tmpv.226, i64 0, i32 2, i32 1, !dbg !669
  store i64 1, i64* %tmpv.218.sroa.2.0.cast.932.sroa_idx40, align 8, !dbg !669
  %tmpv.218.sroa.3.0.cast.932.sroa_idx41 = getelementptr inbounds %Config.0, %Config.0* %tmpv.226, i64 0, i32 2, i32 2, !dbg !669
  store i64 1, i64* %tmpv.218.sroa.3.0.cast.932.sroa_idx41, align 8, !dbg !669
  %field.243 = getelementptr inbounds %Config.0, %Config.0* %tmpv.226, i64 0, i32 3, !dbg !669
  %tmpv.220.sroa.0.0.cast.938.sroa_idx = getelementptr inbounds %Config.0, %Config.0* %tmpv.226, i64 0, i32 14, i32 0, !dbg !669
  %15 = bitcast i16** %tmpv.220.sroa.0.0.cast.938.sroa_idx to i8**, !dbg !669
  %16 = bitcast { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.243 to i8*, !dbg !669
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 0, i64 105, i1 false), !dbg !669
  store i8* %call.55, i8** %15, align 8, !dbg !669
  %tmpv.220.sroa.2.0.cast.938.sroa_idx38 = getelementptr inbounds %Config.0, %Config.0* %tmpv.226, i64 0, i32 14, i32 1, !dbg !669
  store i64 4, i64* %tmpv.220.sroa.2.0.cast.938.sroa_idx38, align 8, !dbg !669
  %tmpv.220.sroa.3.0.cast.938.sroa_idx39 = getelementptr inbounds %Config.0, %Config.0* %tmpv.226, i64 0, i32 14, i32 2, !dbg !669
  store i64 4, i64* %tmpv.220.sroa.3.0.cast.938.sroa_idx39, align 8, !dbg !669
  %field.255 = getelementptr inbounds %Config.0, %Config.0* %tmpv.226, i64 0, i32 15, !dbg !669
  store i8 1, i8* %field.255, align 8, !dbg !669
  %field.256 = getelementptr inbounds %Config.0, %Config.0* %tmpv.226, i64 0, i32 16, !dbg !669
  %field.258 = getelementptr inbounds %Config.0, %Config.0* %tmpv.226, i64 0, i32 18, !dbg !669
  %cast.942 = bitcast %ClientSessionCache.0* %field.258 to i8*, !dbg !669
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %cast.942, i8 0, i64 16, i1 false), !dbg !669
  %field.259 = getelementptr inbounds %Config.0, %Config.0* %tmpv.226, i64 0, i32 19, !dbg !669
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %field.256, i8 0, i64 33, i1 false), !dbg !669
  store i16 771, i16* %field.259, align 8, !dbg !669
  %field.260 = getelementptr inbounds %Config.0, %Config.0* %tmpv.226, i64 0, i32 20, !dbg !669
  store i16 0, i16* %field.260, align 2, !dbg !669
  %tmpv.224.sroa.0.0.cast.944.sroa_idx = getelementptr inbounds %Config.0, %Config.0* %tmpv.226, i64 0, i32 21, i32 0, !dbg !669
  %17 = bitcast i16** %tmpv.224.sroa.0.0.cast.944.sroa_idx to i8**, !dbg !669
  store i8* %call.56, i8** %17, align 8, !dbg !669
  %tmpv.224.sroa.2.0.cast.944.sroa_idx36 = getelementptr inbounds %Config.0, %Config.0* %tmpv.226, i64 0, i32 21, i32 1, !dbg !669
  store i64 3, i64* %tmpv.224.sroa.2.0.cast.944.sroa_idx36, align 8, !dbg !669
  %tmpv.224.sroa.3.0.cast.944.sroa_idx37 = getelementptr inbounds %Config.0, %Config.0* %tmpv.226, i64 0, i32 21, i32 2, !dbg !669
  store i64 3, i64* %tmpv.224.sroa.3.0.cast.944.sroa_idx37, align 8, !dbg !669
  %field.262 = getelementptr inbounds %Config.0, %Config.0* %tmpv.226, i64 0, i32 22, !dbg !669
  store i8 0, i8* %field.262, align 8, !dbg !669
  %field.263 = getelementptr inbounds %Config.0, %Config.0* %tmpv.226, i64 0, i32 23, !dbg !669
  %field.267 = getelementptr inbounds %Config.0, %Config.0* %tmpv.226, i64 0, i32 27, !dbg !669
  %cast.952 = bitcast %IPST.14* %field.267 to i8*, !dbg !669
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %cast.952, i8 0, i64 24, i1 false), !dbg !669
  %18 = bitcast i64* %field.263 to i8*, !dbg !668
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 0, i64 60, i1 false), !dbg !669
  invoke void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @crypto_tls.Config..d, i64 0, i32 0), i8* %call.57, i8* nonnull %cast.930)
          to label %cont.59 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !668

cont.59:                                          ; preds = %cont.58
  call void @llvm.dbg.value(metadata %Config.0* %cast.929, metadata !670, metadata !DIExpression()), !dbg !1007
  %.ld.55 = load %Srv.0*, %Srv.0** %cast.858, align 8, !dbg !1008
  %icmp.80 = icmp eq %Srv.0* %.ld.55, null, !dbg !1009
  br i1 %icmp.80, label %then.79, label %fallthrough.79

then.79:                                          ; preds = %cont.59
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.79 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1009

fallthrough.79:                                   ; preds = %cont.59, %then.79
  %field0.44 = bitcast %Srv.0* %.ld.55 to i64*, !dbg !1010
  %ld.74 = load i64, i64* %field0.44, align 8, !dbg !1010
  %19 = getelementptr inbounds %Srv.0, %Srv.0* %.ld.55, i64 0, i32 0, i32 1, !dbg !1010
  %ld.75 = load i64, i64* %19, align 8, !dbg !1010
  invoke void @crypto_tls.Listen({ %Listener.0, %error.0 }* nonnull sret %sret.actual.28, i8* nest undef, i64 ptrtoint ([4 x i8]* @const.199 to i64), i64 3, i64 %ld.74, i64 %ld.75, %Config.0* %cast.929)
          to label %cont.61 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1010

cont.61:                                          ; preds = %fallthrough.79
  %tmpv.227.sroa.0.sroa.0.0.tmpv.227.sroa.0.0.cast.963.sroa_cast.sroa_idx = getelementptr inbounds { %Listener.0, %error.0 }, { %Listener.0, %error.0 }* %sret.actual.28, i64 0, i32 0, i32 0, !dbg !1010
  %tmpv.227.sroa.0.sroa.0.0.copyload85 = load { %_type.0*, void ({ %Conn.0, %error.0 }*, i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)* }*, { %_type.0*, void ({ %Conn.0, %error.0 }*, i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)* }** %tmpv.227.sroa.0.sroa.0.0.tmpv.227.sroa.0.0.cast.963.sroa_cast.sroa_idx, align 8, !dbg !1010
  %tmpv.227.sroa.0.sroa.3.0.tmpv.227.sroa.0.0.cast.963.sroa_cast.sroa_idx86 = getelementptr inbounds { %Listener.0, %error.0 }, { %Listener.0, %error.0 }* %sret.actual.28, i64 0, i32 0, i32 1, !dbg !1010
  %tmpv.227.sroa.0.sroa.3.0.copyload87 = load i8*, i8** %tmpv.227.sroa.0.sroa.3.0.tmpv.227.sroa.0.0.cast.963.sroa_cast.sroa_idx86, align 8, !dbg !1010
  %tmpv.227.sroa.3.0.cast.963.sroa_idx56 = getelementptr inbounds { %Listener.0, %error.0 }, { %Listener.0, %error.0 }* %sret.actual.28, i64 0, i32 1, !dbg !1010
  %tmpv.227.sroa.3.0.cast.963.sroa_cast = bitcast %error.0* %tmpv.227.sroa.3.0.cast.963.sroa_idx56 to i64*, !dbg !1010
  %tmpv.227.sroa.3.0.copyload57 = load i64, i64* %tmpv.227.sroa.3.0.cast.963.sroa_cast, align 8, !dbg !1010
  call void @llvm.dbg.value(metadata { %_type.0*, void ({ %Conn.0, %error.0 }*, i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)* }* %tmpv.227.sroa.0.sroa.0.0.copyload85, metadata !637, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !654
  call void @llvm.dbg.value(metadata i8* %tmpv.227.sroa.0.sroa.3.0.copyload87, metadata !637, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !654
  call void @llvm.dbg.value(metadata i64 %tmpv.227.sroa.3.0.copyload57, metadata !661, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !662
  %icmp.81 = icmp eq i64 %tmpv.227.sroa.3.0.copyload57, 0, !dbg !1011
  br i1 %icmp.81, label %else.80, label %then.80

then.80:                                          ; preds = %cont.61
  %tmpv.227.sroa.4.0.cast.963.sroa_idx58 = getelementptr inbounds { %Listener.0, %error.0 }, { %Listener.0, %error.0 }* %sret.actual.28, i64 0, i32 1, i32 1, !dbg !1010
  %tmpv.227.sroa.4.0.cast.963.sroa_cast = bitcast i8** %tmpv.227.sroa.4.0.cast.963.sroa_idx58 to i64*, !dbg !1010
  %tmpv.227.sroa.4.0.copyload59 = load i64, i64* %tmpv.227.sroa.4.0.cast.963.sroa_cast, align 8, !dbg !1010
  call void @llvm.dbg.value(metadata i64 %tmpv.227.sroa.4.0.copyload59, metadata !661, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !662
  %call.58 = invoke { i64, i64 } @github_com_spolu_warp_lib_errors.Trace(i8* nest undef, i64 %tmpv.227.sroa.3.0.copyload57, i64 %tmpv.227.sroa.4.0.copyload59)
          to label %cont.62 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1012

else.80:                                          ; preds = %cont.61
  %.ld.57 = load %Srv.0*, %Srv.0** %cast.858, align 8, !dbg !1013
  %icmp.82 = icmp eq %Srv.0* %.ld.57, null, !dbg !1014
  br i1 %icmp.82, label %then.81, label %fallthrough.82.thread122

fallthrough.82.thread122:                         ; preds = %else.80
  %cast.985107 = bitcast { i8*, i64 }* %tmpv.234 to i8*
  %cast.986108 = bitcast %Srv.0* %.ld.57 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.985107, i8* align 8 %cast.986108, i64 16, i1 false)
  %field.273123 = getelementptr inbounds %Srv.0, %Srv.0* %.ld.57, i64 0, i32 1, !dbg !1015
  %cast.988124 = bitcast { i8*, i64 }* %tmpv.236 to i8*
  %cast.989125 = bitcast { i8*, i64 }* %field.273123 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.988124, i8* nonnull align 8 %cast.989125, i64 16, i1 false)
  br label %fallthrough.83

cont.62:                                          ; preds = %then.80
  %call.58.fca.0.extract = extractvalue { i64, i64 } %call.58, 0, !dbg !1012
  %call.58.fca.1.extract = extractvalue { i64, i64 } %call.58, 1, !dbg !1012
  call void @llvm.dbg.value(metadata i64 %call.58.fca.0.extract, metadata !618, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !619
  call void @llvm.dbg.value(metadata i64 %call.58.fca.1.extract, metadata !618, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !619
  br label %finally.2

then.81:                                          ; preds = %else.80
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.81 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1014

fallthrough.81:                                   ; preds = %then.81
  %.ld.59.pr = load %Srv.0*, %Srv.0** %cast.858, align 8, !dbg !1016
  %cast.985 = bitcast { i8*, i64 }* %tmpv.234 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.985, i8* align 536870912 null, i64 16, i1 false)
  %icmp.83 = icmp eq %Srv.0* %.ld.59.pr, null, !dbg !1015
  br i1 %icmp.83, label %then.82, label %fallthrough.82.thread

fallthrough.82.thread:                            ; preds = %fallthrough.81
  %field.273112 = getelementptr inbounds %Srv.0, %Srv.0* %.ld.59.pr, i64 0, i32 1, !dbg !1015
  %cast.988113 = bitcast { i8*, i64 }* %tmpv.236 to i8*
  %cast.989114 = bitcast { i8*, i64 }* %field.273112 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.988113, i8* nonnull align 8 %cast.989114, i64 16, i1 false)
  br label %fallthrough.83

then.82:                                          ; preds = %fallthrough.81
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.82 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1015

fallthrough.82:                                   ; preds = %then.82
  %.ld.61.pr.pre = load %Srv.0*, %Srv.0** %cast.858, align 8, !dbg !1017
  %cast.988 = bitcast { i8*, i64 }* %tmpv.236 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.988, i8* nonnull align 16 inttoptr (i64 16 to i8*), i64 16, i1 false)
  %icmp.84 = icmp eq %Srv.0* %.ld.61.pr.pre, null, !dbg !1018
  br i1 %icmp.84, label %then.83, label %fallthrough.83

then.83:                                          ; preds = %fallthrough.82
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.83 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1018

fallthrough.83:                                   ; preds = %fallthrough.82.thread122, %fallthrough.82.thread, %fallthrough.82, %then.83
  %cast.988118 = phi i8* [ %cast.988113, %fallthrough.82.thread ], [ %cast.988, %fallthrough.82 ], [ %cast.988, %then.83 ], [ %cast.988124, %fallthrough.82.thread122 ]
  %cast.985111117 = phi i8* [ %cast.985, %fallthrough.82.thread ], [ %cast.985, %fallthrough.82 ], [ %cast.985, %then.83 ], [ %cast.985107, %fallthrough.82.thread122 ]
  %.ld.61116 = phi %Srv.0* [ %.ld.59.pr, %fallthrough.82.thread ], [ %.ld.61.pr.pre, %fallthrough.82 ], [ null, %then.83 ], [ %.ld.57, %fallthrough.82.thread122 ]
  %field.274 = getelementptr inbounds %Srv.0, %Srv.0* %.ld.61116, i64 0, i32 2, !dbg !1018
  %cast.991 = bitcast { i8*, i64 }* %tmpv.238 to i8*
  %cast.992 = bitcast { i8*, i64 }* %field.274 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.991, i8* nonnull align 8 %cast.992, i64 16, i1 false)
  %call.59 = invoke i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d)
          to label %cont.66 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1019

cont.66:                                          ; preds = %fallthrough.83
  %cast.994 = bitcast { i8*, i64 }* %tmpv.241 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.994, i8* align 8 %cast.985111117, i64 16, i1 false)
  invoke void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.59, i8* nonnull %cast.994)
          to label %cont.67 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1019

cont.67:                                          ; preds = %cont.66
  %call.60 = invoke i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d)
          to label %cont.68 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1019

cont.68:                                          ; preds = %cont.67
  %cast.999 = bitcast { i8*, i64 }* %tmpv.243 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.999, i8* align 8 %cast.988118, i64 16, i1 false)
  invoke void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.60, i8* nonnull %cast.999)
          to label %cont.69 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1019

cont.69:                                          ; preds = %cont.68
  %call.61 = invoke i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d)
          to label %cont.70 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1019

cont.70:                                          ; preds = %cont.69
  %cast.1004 = bitcast { i8*, i64 }* %tmpv.245 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1004, i8* nonnull align 8 %cast.991, i64 16, i1 false)
  invoke void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.61, i8* nonnull %cast.1004)
          to label %cont.71 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1019

cont.71:                                          ; preds = %cont.70
  %tmp.42.sroa.0.0.cast.1011.sroa_idx = getelementptr inbounds [3 x %IPST.9], [3 x %IPST.9]* %tmpv.246, i64 0, i64 0, i32 0, !dbg !1019
  store %_type.0* @string..d, %_type.0** %tmp.42.sroa.0.0.cast.1011.sroa_idx, align 8, !dbg !1019
  %tmp.42.sroa.2.0.cast.1011.sroa_idx93 = getelementptr inbounds [3 x %IPST.9], [3 x %IPST.9]* %tmpv.246, i64 0, i64 0, i32 1, !dbg !1019
  store i8* %call.59, i8** %tmp.42.sroa.2.0.cast.1011.sroa_idx93, align 8, !dbg !1019
  %tmp.43.sroa.0.0.cast.1013.sroa_idx = getelementptr inbounds [3 x %IPST.9], [3 x %IPST.9]* %tmpv.246, i64 0, i64 1, i32 0, !dbg !1019
  store %_type.0* @string..d, %_type.0** %tmp.43.sroa.0.0.cast.1013.sroa_idx, align 8, !dbg !1019
  %tmp.43.sroa.2.0.cast.1013.sroa_idx94 = getelementptr inbounds [3 x %IPST.9], [3 x %IPST.9]* %tmpv.246, i64 0, i64 1, i32 1, !dbg !1019
  store i8* %call.60, i8** %tmp.43.sroa.2.0.cast.1013.sroa_idx94, align 8, !dbg !1019
  %tmp.44.sroa.0.0.cast.1015.sroa_idx = getelementptr inbounds [3 x %IPST.9], [3 x %IPST.9]* %tmpv.246, i64 0, i64 2, i32 0, !dbg !1019
  store %_type.0* @string..d, %_type.0** %tmp.44.sroa.0.0.cast.1015.sroa_idx, align 8, !dbg !1019
  %tmp.44.sroa.2.0.cast.1015.sroa_idx95 = getelementptr inbounds [3 x %IPST.9], [3 x %IPST.9]* %tmpv.246, i64 0, i64 2, i32 1, !dbg !1019
  store i8* %call.61, i8** %tmp.44.sroa.2.0.cast.1015.sroa_idx95, align 8, !dbg !1019
  %field.281 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.45, i64 0, i32 0, !dbg !1019
  %cast.1019 = getelementptr inbounds [3 x %IPST.9], [3 x %IPST.9]* %tmpv.246, i64 0, i64 0, !dbg !1019
  store %IPST.9* %cast.1019, %IPST.9** %field.281, align 8, !dbg !1019
  %field.282 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.45, i64 0, i32 1, !dbg !1019
  store i64 3, i64* %field.282, align 8, !dbg !1019
  %field.283 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.45, i64 0, i32 2, !dbg !1019
  store i64 3, i64* %field.283, align 8, !dbg !1019
  %field0.46 = bitcast i8* %call.50 to i64*, !dbg !1019
  %ld.79 = load i64, i64* %field0.46, align 8, !dbg !1019
  %field1.46 = getelementptr inbounds i8, i8* %call.50, i64 8, !dbg !1019
  %20 = bitcast i8* %field1.46 to i64*, !dbg !1019
  %ld.80 = load i64, i64* %20, align 8, !dbg !1019
  invoke void @github_com_spolu_warp_lib_logging.Logf(i8* nest undef, i64 %ld.79, i64 %ld.80, i64 ptrtoint ([56 x i8]* @const.201 to i64), i64 55, %IPST.3* byval nonnull %tmp.45)
          to label %cont.72 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1019

cont.72:                                          ; preds = %cont.71
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %cer.0.sroa_cast)
  br label %fallthrough.75

then.84:                                          ; preds = %else.75
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.84 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !657

fallthrough.84:                                   ; preds = %else.75, %then.84
  %field0.49 = bitcast %Srv.0* %.ld.63 to i64*, !dbg !1020
  %ld.85 = load i64, i64* %field0.49, align 8, !dbg !1020
  %21 = getelementptr inbounds %Srv.0, %Srv.0* %.ld.63, i64 0, i32 0, i32 1, !dbg !1020
  %ld.86 = load i64, i64* %21, align 8, !dbg !1020
  invoke void @net.Listen({ %Listener.0, %error.0 }* nonnull sret %sret.actual.30, i8* nest undef, i64 ptrtoint ([4 x i8]* @const.199 to i64), i64 3, i64 %ld.85, i64 %ld.86)
          to label %cont.74 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1020

cont.74:                                          ; preds = %fallthrough.84
  %tmpv.247.sroa.0.sroa.0.0.tmpv.247.sroa.0.0.cast.1028.sroa_cast.sroa_idx = getelementptr inbounds { %Listener.0, %error.0 }, { %Listener.0, %error.0 }* %sret.actual.30, i64 0, i32 0, i32 0, !dbg !1020
  %tmpv.247.sroa.0.sroa.0.0.copyload80 = load { %_type.0*, void ({ %Conn.0, %error.0 }*, i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)* }*, { %_type.0*, void ({ %Conn.0, %error.0 }*, i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)* }** %tmpv.247.sroa.0.sroa.0.0.tmpv.247.sroa.0.0.cast.1028.sroa_cast.sroa_idx, align 8, !dbg !1020
  %tmpv.247.sroa.0.sroa.3.0.tmpv.247.sroa.0.0.cast.1028.sroa_cast.sroa_idx81 = getelementptr inbounds { %Listener.0, %error.0 }, { %Listener.0, %error.0 }* %sret.actual.30, i64 0, i32 0, i32 1, !dbg !1020
  %tmpv.247.sroa.0.sroa.3.0.copyload82 = load i8*, i8** %tmpv.247.sroa.0.sroa.3.0.tmpv.247.sroa.0.0.cast.1028.sroa_cast.sroa_idx81, align 8, !dbg !1020
  %tmpv.247.sroa.3.0.cast.1028.sroa_idx30 = getelementptr inbounds { %Listener.0, %error.0 }, { %Listener.0, %error.0 }* %sret.actual.30, i64 0, i32 1, !dbg !1020
  %tmpv.247.sroa.3.0.cast.1028.sroa_cast = bitcast %error.0* %tmpv.247.sroa.3.0.cast.1028.sroa_idx30 to i64*, !dbg !1020
  %tmpv.247.sroa.3.0.copyload31 = load i64, i64* %tmpv.247.sroa.3.0.cast.1028.sroa_cast, align 8, !dbg !1020
  call void @llvm.dbg.value(metadata { %_type.0*, void ({ %Conn.0, %error.0 }*, i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)* }* %tmpv.247.sroa.0.sroa.0.0.copyload80, metadata !637, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !654
  call void @llvm.dbg.value(metadata i8* %tmpv.247.sroa.0.sroa.3.0.copyload82, metadata !637, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !654
  call void @llvm.dbg.value(metadata i64 %tmpv.247.sroa.3.0.copyload31, metadata !1021, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1022
  %icmp.86 = icmp eq i64 %tmpv.247.sroa.3.0.copyload31, 0, !dbg !1023
  br i1 %icmp.86, label %else.85, label %then.85

then.85:                                          ; preds = %cont.74
  %tmpv.247.sroa.4.0.cast.1028.sroa_idx32 = getelementptr inbounds { %Listener.0, %error.0 }, { %Listener.0, %error.0 }* %sret.actual.30, i64 0, i32 1, i32 1, !dbg !1020
  %tmpv.247.sroa.4.0.cast.1028.sroa_cast = bitcast i8** %tmpv.247.sroa.4.0.cast.1028.sroa_idx32 to i64*, !dbg !1020
  %tmpv.247.sroa.4.0.copyload33 = load i64, i64* %tmpv.247.sroa.4.0.cast.1028.sroa_cast, align 8, !dbg !1020
  call void @llvm.dbg.value(metadata i64 %tmpv.247.sroa.4.0.copyload33, metadata !1021, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1022
  %call.62 = invoke { i64, i64 } @github_com_spolu_warp_lib_errors.Trace(i8* nest undef, i64 %tmpv.247.sroa.3.0.copyload31, i64 %tmpv.247.sroa.4.0.copyload33)
          to label %cont.75 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1024

else.85:                                          ; preds = %cont.74
  %.ld.65 = load %Srv.0*, %Srv.0** %cast.858, align 8, !dbg !1025
  %icmp.87 = icmp eq %Srv.0* %.ld.65, null, !dbg !1026
  br i1 %icmp.87, label %then.86, label %fallthrough.86

cont.75:                                          ; preds = %then.85
  %call.62.fca.0.extract = extractvalue { i64, i64 } %call.62, 0, !dbg !1024
  %call.62.fca.1.extract = extractvalue { i64, i64 } %call.62, 1, !dbg !1024
  call void @llvm.dbg.value(metadata i64 %call.62.fca.0.extract, metadata !618, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !619
  call void @llvm.dbg.value(metadata i64 %call.62.fca.1.extract, metadata !618, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !619
  br label %finally.2

then.86:                                          ; preds = %else.85
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.86 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1026

fallthrough.86:                                   ; preds = %else.85, %then.86
  %cast.1050 = bitcast { i8*, i64 }* %tmpv.254 to i8*
  %cast.1051 = bitcast %Srv.0* %.ld.65 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1050, i8* align 8 %cast.1051, i64 16, i1 false)
  %call.63 = invoke i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d)
          to label %cont.77 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1027

cont.77:                                          ; preds = %fallthrough.86
  %cast.1053 = bitcast { i8*, i64 }* %tmpv.257 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1053, i8* nonnull align 8 %cast.1050, i64 16, i1 false)
  invoke void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.63, i8* nonnull %cast.1053)
          to label %cont.78 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1027

cont.78:                                          ; preds = %cont.77
  %tmp.46.sroa.0.0.cast.1058.sroa_idx = getelementptr inbounds [1 x %IPST.9], [1 x %IPST.9]* %tmpv.258, i64 0, i64 0, i32 0, !dbg !1027
  store %_type.0* @string..d, %_type.0** %tmp.46.sroa.0.0.cast.1058.sroa_idx, align 8, !dbg !1027
  %tmp.46.sroa.2.0.cast.1058.sroa_idx96 = getelementptr inbounds [1 x %IPST.9], [1 x %IPST.9]* %tmpv.258, i64 0, i64 0, i32 1, !dbg !1027
  store i8* %call.63, i8** %tmp.46.sroa.2.0.cast.1058.sroa_idx96, align 8, !dbg !1027
  %field.291 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.47, i64 0, i32 0, !dbg !1027
  %cast.1062 = getelementptr inbounds [1 x %IPST.9], [1 x %IPST.9]* %tmpv.258, i64 0, i64 0, !dbg !1027
  store %IPST.9* %cast.1062, %IPST.9** %field.291, align 8, !dbg !1027
  %field.292 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.47, i64 0, i32 1, !dbg !1027
  store i64 1, i64* %field.292, align 8, !dbg !1027
  %field.293 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.47, i64 0, i32 2, !dbg !1027
  store i64 1, i64* %field.293, align 8, !dbg !1027
  %field0.51 = bitcast i8* %call.50 to i64*, !dbg !1027
  %ld.90 = load i64, i64* %field0.51, align 8, !dbg !1027
  %field1.51 = getelementptr inbounds i8, i8* %call.50, i64 8, !dbg !1027
  %22 = bitcast i8* %field1.51 to i64*, !dbg !1027
  %ld.91 = load i64, i64* %22, align 8, !dbg !1027
  invoke void @github_com_spolu_warp_lib_logging.Logf(i8* nest undef, i64 %ld.90, i64 %ld.91, i64 ptrtoint ([32 x i8]* @const.203 to i64), i64 31, %IPST.3* byval nonnull %tmp.47)
          to label %fallthrough.75 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1027

label.0:                                          ; preds = %label.0.backedge, %label.0.preheader
  %23 = phi i8* [ undef, %label.0.preheader ], [ %24, %label.0.backedge ]
  %.field.ld.24 = load void ({ %Conn.0, %error.0 }*, i8*, i8*)*, void ({ %Conn.0, %error.0 }*, i8*, i8*)** %field.296, align 8, !dbg !1028
  invoke void %.field.ld.24({ %Conn.0, %error.0 }* nonnull sret %sret.actual.32, i8* nest undef, i8* %ln.sroa.6.0)
          to label %cont.81 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1028

cont.81:                                          ; preds = %label.0
  %tmpv.261.sroa.3.0.copyload15 = load { %_type.0*, { i64, i64 } (i8*, i8*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)* }** %tmpv.261.sroa.3.0.cast.1072.sroa_idx14, align 8, !dbg !1028
  %tmpv.261.sroa.4.0.copyload1799 = load i64, i64* %2, align 8, !dbg !1028
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %tmpv.261.sroa.0.0.cast.1073.sroa_cast, i8* nonnull align 8 %tmpv.261.sroa.0.0.cast.1072.sroa_cast, i64 16, i1 false)
  %call.64 = invoke i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @net.Conn..d, i64 0, i32 0))
          to label %cont.82 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1030

cont.82:                                          ; preds = %cont.81
  %runtime.writeBarrier.ld.11 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1028
  %icmp.89 = icmp eq i32 %runtime.writeBarrier.ld.11, 0, !dbg !1028
  br i1 %icmp.89, label %then.87, label %else.87

then.87:                                          ; preds = %cont.82
  call void @llvm.dbg.value(metadata i8* %call.64, metadata !1031, metadata !DIExpression()), !dbg !1033
  %icmp.88 = icmp eq i8* %call.64, null, !dbg !1028
  br i1 %icmp.88, label %then.88, label %fallthrough.88

fallthrough.87:                                   ; preds = %else.87, %fallthrough.88
  %24 = phi i8* [ %25, %fallthrough.88 ], [ %23, %else.87 ]
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.261.sroa.3.0.copyload15, metadata !1034, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1033
  call void @llvm.dbg.value(metadata i8** %tmpv.261.sroa.4.0.cast.1072.sroa_idx16, metadata !1034, metadata !DIExpression(DW_OP_deref, DW_OP_LLVM_fragment, 64, 64)), !dbg !1033
  %icmp.91 = icmp eq { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.261.sroa.3.0.copyload15, null, !dbg !1035
  br i1 %icmp.91, label %else.89, label %then.89

else.87:                                          ; preds = %cont.82
  invoke void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @net.Conn..d, i64 0, i32 0), i8* %call.64, i8* nonnull %tmpv.261.sroa.0.0.cast.1073.sroa_cast)
          to label %fallthrough.87 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1028

then.88:                                          ; preds = %then.87
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.88 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1028

fallthrough.88:                                   ; preds = %then.87, %then.88
  %25 = phi i8* [ %23, %then.88 ], [ %call.64, %then.87 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* nonnull align 8 %tmpv.261.sroa.0.0.cast.1073.sroa_cast, i64 16, i1 false), !dbg !1028
  br label %fallthrough.87

then.89:                                          ; preds = %fallthrough.87
  %field.300 = bitcast i8* %call.64 to { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }**, !dbg !1036
  %.field.ld.25 = load { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }** %field.300, align 8, !dbg !1036
  %field.301 = getelementptr inbounds { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }, { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }* %.field.ld.25, i64 0, i32 4, !dbg !1036
  %.field.ld.26 = load { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)** %field.301, align 8, !dbg !1036
  %field.302 = getelementptr inbounds i8, i8* %call.64, i64 8, !dbg !1036
  %26 = bitcast i8* %field.302 to i8**, !dbg !1036
  %.field.ld.27 = load i8*, i8** %26, align 8, !dbg !1036
  %call.65 = invoke { i64, i64 } %.field.ld.26(i8* nest undef, i8* %.field.ld.27)
          to label %cont.85 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1036

else.89:                                          ; preds = %fallthrough.87
  %call.68 = invoke i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.4x.5.f.f.0.1.4void.5.2.command_line_arguments.s1.0.1.1command_line_arguments.Srv.2.command_line_arguments.ctx2.0.1context.Context.2.command_line_arguments.conn3.0.1net.Conn.5, i64 0, i32 0))
          to label %cont.90 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1037

cont.85:                                          ; preds = %then.89
  %call.65.fca.0.extract = extractvalue { i64, i64 } %call.65, 0, !dbg !1036
  %call.65.fca.1.extract = extractvalue { i64, i64 } %call.65, 1, !dbg !1036
  %27 = inttoptr i64 %call.65.fca.0.extract to { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)* }*, !dbg !1038
  %field.304 = getelementptr inbounds { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)* }, { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)* }* %27, i64 0, i32 2, !dbg !1038
  %.field.ld.28 = load { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)** %field.304, align 8, !dbg !1038
  %28 = inttoptr i64 %call.65.fca.1.extract to i8*, !dbg !1038
  %call.66 = invoke { i64, i64 } %.field.ld.28(i8* nest undef, i8* %28)
          to label %cont.86 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1038

cont.86:                                          ; preds = %cont.85
  %call.67 = invoke i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d)
          to label %cont.87 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1039

cont.87:                                          ; preds = %cont.86
  %call.66.fca.1.extract = extractvalue { i64, i64 } %call.66, 1, !dbg !1038
  %call.66.fca.0.extract = extractvalue { i64, i64 } %call.66, 0, !dbg !1038
  store i64 %call.66.fca.0.extract, i64* %tmpv.268.sroa.0.0.cast.1094.sroa_cast, align 8
  store i64 %call.66.fca.1.extract, i64* %tmpv.268.sroa.2.0.cast.1094.sroa_idx6, align 8
  invoke void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.67, i8* nonnull %cast.1097)
          to label %else.90 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1039

else.90:                                          ; preds = %cont.87
  %29 = bitcast { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.261.sroa.3.0.copyload15 to i64*, !dbg !1040
  %.field.ld.29100 = load i64, i64* %29, align 8, !dbg !1040
  store %_type.0* @string..d, %_type.0** %tmp.48.sroa.0.0.cast.1101.sroa_idx, align 8, !dbg !1039
  store i8* %call.67, i8** %tmp.48.sroa.2.0.cast.1101.sroa_idx97, align 8, !dbg !1039
  store i64 %.field.ld.29100, i64* %7, align 8, !dbg !1039
  store i64 %tmpv.261.sroa.4.0.copyload1799, i64* %8, align 8, !dbg !1039
  store %IPST.9* %cast.1107, %IPST.9** %field.314, align 8, !dbg !1039
  store i64 2, i64* %field.315, align 8, !dbg !1039
  store i64 2, i64* %field.316, align 8, !dbg !1039
  %ld.94 = load i64, i64* %field0.53, align 8, !dbg !1039
  %ld.95 = load i64, i64* %9, align 8, !dbg !1039
  invoke void @github_com_spolu_warp_lib_logging.Logf(i8* nest undef, i64 %ld.94, i64 %ld.95, i64 ptrtoint ([47 x i8]* @const.206 to i64), i64 46, %IPST.3* byval nonnull %tmp.50)
          to label %label.0.backedge unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1039

cont.90:                                          ; preds = %else.89
  store i8* bitcast (void (i8*)* @command_line_arguments..1command_line_arguments.Srv.Run..func1 to i8*), i8** %field.318, align 8, !dbg !1037
  store i8* %call.49, i8** %3, align 8, !dbg !1037
  store i8* %call.50, i8** %4, align 8, !dbg !1037
  store i8* %call.64, i8** %5, align 8, !dbg !1037
  invoke void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.4x.5.f.f.0.1.4void.5.2.command_line_arguments.s1.0.1.1command_line_arguments.Srv.2.command_line_arguments.ctx2.0.1context.Context.2.command_line_arguments.conn3.0.1net.Conn.5, i64 0, i32 0), i8* %call.68, i8* nonnull %cast.1118)
          to label %cont.91 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1037

cont.91:                                          ; preds = %cont.90
  %icmp.92 = icmp eq i8* %call.68, null, !dbg !1041
  br i1 %icmp.92, label %then.91, label %fallthrough.91

then.91:                                          ; preds = %cont.91
  invoke void @__go_runtime_error(i8* nest undef, i32 11)
          to label %fallthrough.91 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1041

fallthrough.91:                                   ; preds = %then.91, %cont.91
  %call.69 = invoke i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.4x.5fn.0func.8.9.8.9.5, i64 0, i32 0))
          to label %cont.93 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1041

cont.93:                                          ; preds = %fallthrough.91
  store i8* %call.68, i8** %6, align 8, !dbg !1041
  invoke void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.4x.5fn.0func.8.9.8.9.5, i64 0, i32 0), i8* %call.69, i8* nonnull %cast.1125)
          to label %cont.94 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1041

cont.94:                                          ; preds = %cont.93
  invoke void @__go_go(i8* nest undef, %__go_descriptor.50* bitcast (void (i8*, { %__go_descriptor.10* }*)* @command_line_arguments.command_line_arguments..thunk5 to %__go_descriptor.50*), i8* %call.69)
          to label %label.0.backedge unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1041

label.0.backedge:                                 ; preds = %cont.94, %else.90
  br label %label.0, !dbg !1028

catchpad.2:                                       ; preds = %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp
  %ex2.2 = landingpad { i8*, i32 }
          cleanup
  %ex2.2.fca.0.extract = extractvalue { i8*, i32 } %ex2.2, 0
  %ex2.2.fca.1.extract = extractvalue { i8*, i32 } %ex2.2, 1
  br label %finally.2

pad.5:                                            ; preds = %finish.2
  %ex.5 = landingpad { i8*, i32 }
          catch i8* null
  call void @runtime.checkdefer(i8* nest undef, i8* nonnull %tmpv.206), !dbg !620
  br label %finish.2

finish.2:                                         ; preds = %pad.5, %finally.2
  invoke void @runtime.deferreturn(i8* nest undef, i8* nonnull %tmpv.206)
          to label %cont.97 unwind label %pad.5, !dbg !620

cont.97:                                          ; preds = %finish.2
  %icmp.93 = icmp eq i8 %finvar.2.0, 1
  br i1 %icmp.93, label %finret.2, label %finres.2

finres.2:                                         ; preds = %cont.97
  %excv.2.fca.0.insert = insertvalue { i8*, i32 } undef, i8* %ehtmp.2.sroa.0.0, 0
  %excv.2.fca.1.insert = insertvalue { i8*, i32 } %excv.2.fca.0.insert, i32 %ehtmp.2.sroa.2.0, 1
  resume { i8*, i32 } %excv.2.fca.1.insert

finret.2:                                         ; preds = %cont.97
  %ld.71.fca.0.insert = insertvalue { i64, i64 } undef, i64 %"$ret4.sroa.0.1", 0, !dbg !1042
  %ld.71.fca.1.insert = insertvalue { i64, i64 } %ld.71.fca.0.insert, i64 %"$ret4.sroa.7.1", 1, !dbg !1042
  ret { i64, i64 } %ld.71.fca.1.insert, !dbg !1042
}

define { i64, i64 } @command_line_arguments.Srv.handle(i8* nest nocapture readnone %nest.9, %Srv.0* %s, i64 %ctx.chunk0, i64 %ctx.chunk1, i64 %conn.chunk0, i64 %conn.chunk1) #0 personality i32 (i32, i32, i64, i8*, i8*)* @__gccgo_personality_v0 !dbg !1043 {
entry:
  %tmp.57 = alloca %IPST.3, align 8
  %tmpv.293 = alloca i8, align 1
  %tmpv.297 = alloca { i8*, i64 }, align 8
  %tmpv.298 = alloca [1 x %IPST.9], align 8
  %sret.actual.42 = alloca { %Context.0, %__go_descriptor.70* }, align 8
  %sret.actual.43 = alloca { %Session.0*, %error.0 }, align 8
  %tmpv.306 = alloca { %Session.0* }, align 8
  call void @llvm.dbg.value(metadata %Srv.0* %s, metadata !1046, metadata !DIExpression()), !dbg !1047
  call void @llvm.dbg.value(metadata i64 %ctx.chunk0, metadata !1048, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1049
  call void @llvm.dbg.value(metadata i64 %ctx.chunk1, metadata !1048, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1049
  call void @llvm.dbg.value(metadata i64 %conn.chunk0, metadata !1050, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1051
  call void @llvm.dbg.value(metadata i64 %conn.chunk1, metadata !1050, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1051
  store i8 0, i8* %tmpv.293, align 1
  call void @llvm.dbg.value(metadata i64 0, metadata !1052, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1053
  call void @llvm.dbg.value(metadata i64 0, metadata !1052, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1053
  %0 = inttoptr i64 %conn.chunk0 to { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }*, !dbg !1054
  %field.362 = getelementptr inbounds { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }, { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }* %0, i64 0, i32 4, !dbg !1054
  %.field.ld.48 = load { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)** %field.362, align 8, !dbg !1054
  %1 = inttoptr i64 %conn.chunk1 to i8*, !dbg !1054
  %call.77 = invoke { i64, i64 } %.field.ld.48(i8* nest undef, i8* %1)
          to label %cont.98 unwind label %pad.6, !dbg !1054

finally.3:                                        ; preds = %cont.110, %label.1, %cont.105, %cont.112, %pad.6, %catchpad.3
  %"$ret5.sroa.0.1" = phi i64 [ 0, %catchpad.3 ], [ %call.80.fca.0.extract, %cont.105 ], [ 0, %pad.6 ], [ %call.85.fca.0.extract, %cont.112 ], [ 0, %label.1 ], [ 0, %cont.110 ]
  %"$ret5.sroa.7.1" = phi i64 [ 0, %catchpad.3 ], [ %call.80.fca.1.extract, %cont.105 ], [ 0, %pad.6 ], [ %call.85.fca.1.extract, %cont.112 ], [ 0, %label.1 ], [ 0, %cont.110 ]
  %ehtmp.3.sroa.0.0 = phi i8* [ %ex2.3.fca.0.extract, %catchpad.3 ], [ undef, %cont.105 ], [ undef, %pad.6 ], [ undef, %cont.112 ], [ undef, %label.1 ], [ undef, %cont.110 ]
  %ehtmp.3.sroa.2.0 = phi i32 [ %ex2.3.fca.1.extract, %catchpad.3 ], [ undef, %cont.105 ], [ undef, %pad.6 ], [ undef, %cont.112 ], [ undef, %label.1 ], [ undef, %cont.110 ]
  %finvar.3.0 = phi i8 [ 0, %catchpad.3 ], [ 1, %cont.105 ], [ 1, %pad.6 ], [ 1, %cont.112 ], [ 1, %label.1 ], [ 1, %cont.110 ]
  call void @llvm.dbg.value(metadata i64 %"$ret5.sroa.7.1", metadata !1052, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1053
  call void @llvm.dbg.value(metadata i64 %"$ret5.sroa.0.1", metadata !1052, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1053
  br label %finish.3

pad.6:                                            ; preds = %then.98, %else.97, %label.0, %else.96, %fallthrough.95, %then.95, %else.94, %then.94, %cont.103, %cont.102, %cont.101, %cont.100, %cont.99, %cont.98, %entry
  %ex.6 = landingpad { i8*, i32 }
          catch i8* null
  invoke void @runtime.checkdefer(i8* nest undef, i8* nonnull %tmpv.293)
          to label %finally.3 unwind label %catchpad.3, !dbg !1056

cont.98:                                          ; preds = %entry
  %call.77.fca.0.extract = extractvalue { i64, i64 } %call.77, 0, !dbg !1054
  %call.77.fca.1.extract = extractvalue { i64, i64 } %call.77, 1, !dbg !1054
  %2 = inttoptr i64 %call.77.fca.0.extract to { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)* }*, !dbg !1057
  %field.365 = getelementptr inbounds { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)* }, { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)* }* %2, i64 0, i32 2, !dbg !1057
  %.field.ld.49 = load { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)** %field.365, align 8, !dbg !1057
  %3 = inttoptr i64 %call.77.fca.1.extract to i8*, !dbg !1057
  %call.78 = invoke { i64, i64 } %.field.ld.49(i8* nest undef, i8* %3)
          to label %cont.99 unwind label %pad.6, !dbg !1057

cont.99:                                          ; preds = %cont.98
  %call.79 = invoke i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d)
          to label %cont.100 unwind label %pad.6, !dbg !1058

cont.100:                                         ; preds = %cont.99
  %call.78.fca.1.extract = extractvalue { i64, i64 } %call.78, 1, !dbg !1057
  %call.78.fca.0.extract = extractvalue { i64, i64 } %call.78, 0, !dbg !1057
  %tmpv.295.sroa.0.0.cast.1184.sroa_cast = bitcast { i8*, i64 }* %tmpv.297 to i64*
  store i64 %call.78.fca.0.extract, i64* %tmpv.295.sroa.0.0.cast.1184.sroa_cast, align 8
  %tmpv.295.sroa.2.0.cast.1184.sroa_idx20 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.297, i64 0, i32 1
  store i64 %call.78.fca.1.extract, i64* %tmpv.295.sroa.2.0.cast.1184.sroa_idx20, align 8
  %cast.1187 = bitcast { i8*, i64 }* %tmpv.297 to i8*, !dbg !1058
  invoke void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.79, i8* nonnull %cast.1187)
          to label %cont.101 unwind label %pad.6, !dbg !1058

cont.101:                                         ; preds = %cont.100
  %tmp.56.sroa.0.0.cast.1189.sroa_idx = getelementptr inbounds [1 x %IPST.9], [1 x %IPST.9]* %tmpv.298, i64 0, i64 0, i32 0, !dbg !1058
  store %_type.0* @string..d, %_type.0** %tmp.56.sroa.0.0.cast.1189.sroa_idx, align 8, !dbg !1058
  %tmp.56.sroa.2.0.cast.1189.sroa_idx41 = getelementptr inbounds [1 x %IPST.9], [1 x %IPST.9]* %tmpv.298, i64 0, i64 0, i32 1, !dbg !1058
  store i8* %call.79, i8** %tmp.56.sroa.2.0.cast.1189.sroa_idx41, align 8, !dbg !1058
  %field.369 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.57, i64 0, i32 0, !dbg !1058
  %cast.1193 = getelementptr inbounds [1 x %IPST.9], [1 x %IPST.9]* %tmpv.298, i64 0, i64 0, !dbg !1058
  store %IPST.9* %cast.1193, %IPST.9** %field.369, align 8, !dbg !1058
  %field.370 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.57, i64 0, i32 1, !dbg !1058
  store i64 1, i64* %field.370, align 8, !dbg !1058
  %field.371 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.57, i64 0, i32 2, !dbg !1058
  store i64 1, i64* %field.371, align 8, !dbg !1058
  invoke void @github_com_spolu_warp_lib_logging.Logf(i8* nest undef, i64 %ctx.chunk0, i64 %ctx.chunk1, i64 ptrtoint ([35 x i8]* @const.216 to i64), i64 34, %IPST.3* byval nonnull %tmp.57)
          to label %cont.102 unwind label %pad.6, !dbg !1058

cont.102:                                         ; preds = %cont.101
  invoke void @context.WithCancel({ %Context.0, %__go_descriptor.70* }* nonnull sret %sret.actual.42, i8* nest undef, i64 %ctx.chunk0, i64 %ctx.chunk1)
          to label %cont.103 unwind label %pad.6, !dbg !1059

cont.103:                                         ; preds = %cont.102
  %tmpv.299.sroa.0.sroa.0.0.tmpv.299.sroa.0.0.cast.1198.sroa_cast.sroa_cast = bitcast { %Context.0, %__go_descriptor.70* }* %sret.actual.42 to i64*, !dbg !1059
  %tmpv.299.sroa.0.sroa.0.0.copyload38 = load i64, i64* %tmpv.299.sroa.0.sroa.0.0.tmpv.299.sroa.0.0.cast.1198.sroa_cast.sroa_cast, align 8, !dbg !1059
  %tmpv.299.sroa.0.sroa.3.0.tmpv.299.sroa.0.0.cast.1198.sroa_cast.sroa_idx39 = getelementptr inbounds { %Context.0, %__go_descriptor.70* }, { %Context.0, %__go_descriptor.70* }* %sret.actual.42, i64 0, i32 0, i32 1, !dbg !1059
  %tmpv.299.sroa.0.sroa.3.0.tmpv.299.sroa.0.0.cast.1198.sroa_cast.sroa_cast = bitcast i8** %tmpv.299.sroa.0.sroa.3.0.tmpv.299.sroa.0.0.cast.1198.sroa_cast.sroa_idx39 to i64*, !dbg !1059
  %tmpv.299.sroa.0.sroa.3.0.copyload40 = load i64, i64* %tmpv.299.sroa.0.sroa.3.0.tmpv.299.sroa.0.0.cast.1198.sroa_cast.sroa_cast, align 8, !dbg !1059
  %tmpv.299.sroa.3.0.cast.1198.sroa_idx17 = getelementptr inbounds { %Context.0, %__go_descriptor.70* }, { %Context.0, %__go_descriptor.70* }* %sret.actual.42, i64 0, i32 1, !dbg !1059
  %4 = bitcast %__go_descriptor.70** %tmpv.299.sroa.3.0.cast.1198.sroa_idx17 to %__go_descriptor.10**, !dbg !1059
  %tmpv.299.sroa.3.0.copyload1842 = load %__go_descriptor.10*, %__go_descriptor.10** %4, align 8, !dbg !1059
  call void @llvm.dbg.value(metadata %__go_descriptor.70** %tmpv.299.sroa.3.0.cast.1198.sroa_idx17, metadata !1060, metadata !DIExpression(DW_OP_deref)), !dbg !1065
  call void @llvm.dbg.value(metadata i64 %tmpv.299.sroa.0.sroa.0.0.copyload38, metadata !1048, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1049
  call void @llvm.dbg.value(metadata i64 %tmpv.299.sroa.0.sroa.3.0.copyload40, metadata !1048, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1049
  invoke void @command_line_arguments.NewSession({ %Session.0*, %error.0 }* nonnull sret %sret.actual.43, i8* nest undef, i64 %tmpv.299.sroa.0.sroa.0.0.copyload38, i64 %tmpv.299.sroa.0.sroa.3.0.copyload40, %__go_descriptor.10* %tmpv.299.sroa.3.0.copyload1842, i64 %conn.chunk0, i64 %conn.chunk1)
          to label %cont.104 unwind label %pad.6, !dbg !1066

cont.104:                                         ; preds = %cont.103
  %tmpv.302.sroa.0.0.cast.1209.sroa_idx = getelementptr inbounds { %Session.0*, %error.0 }, { %Session.0*, %error.0 }* %sret.actual.43, i64 0, i32 0, !dbg !1066
  %tmpv.302.sroa.0.0.copyload13 = load %Session.0*, %Session.0** %tmpv.302.sroa.0.0.cast.1209.sroa_idx, align 8, !dbg !1066
  %tmpv.302.sroa.3.sroa.0.0.tmpv.302.sroa.3.0.cast.1209.sroa_cast.sroa_idx = getelementptr inbounds { %Session.0*, %error.0 }, { %Session.0*, %error.0 }* %sret.actual.43, i64 0, i32 1, !dbg !1066
  %tmpv.302.sroa.3.sroa.0.0.tmpv.302.sroa.3.0.cast.1209.sroa_cast.sroa_cast = bitcast %error.0* %tmpv.302.sroa.3.sroa.0.0.tmpv.302.sroa.3.0.cast.1209.sroa_cast.sroa_idx to i64*, !dbg !1066
  %tmpv.302.sroa.3.sroa.0.0.copyload25 = load i64, i64* %tmpv.302.sroa.3.sroa.0.0.tmpv.302.sroa.3.0.cast.1209.sroa_cast.sroa_cast, align 8, !dbg !1066
  call void @llvm.dbg.value(metadata %Session.0* %tmpv.302.sroa.0.0.copyload13, metadata !1067, metadata !DIExpression()), !dbg !1068
  call void @llvm.dbg.value(metadata i64 %tmpv.302.sroa.3.sroa.0.0.copyload25, metadata !1069, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1068
  %icmp.96 = icmp eq i64 %tmpv.302.sroa.3.sroa.0.0.copyload25, 0, !dbg !1070
  br i1 %icmp.96, label %else.94, label %then.94

then.94:                                          ; preds = %cont.104
  %tmpv.302.sroa.3.sroa.3.0.tmpv.302.sroa.3.0.cast.1209.sroa_cast.sroa_idx26 = getelementptr inbounds { %Session.0*, %error.0 }, { %Session.0*, %error.0 }* %sret.actual.43, i64 0, i32 1, i32 1, !dbg !1066
  %tmpv.302.sroa.3.sroa.3.0.tmpv.302.sroa.3.0.cast.1209.sroa_cast.sroa_cast = bitcast i8** %tmpv.302.sroa.3.sroa.3.0.tmpv.302.sroa.3.0.cast.1209.sroa_cast.sroa_idx26 to i64*, !dbg !1066
  %tmpv.302.sroa.3.sroa.3.0.copyload27 = load i64, i64* %tmpv.302.sroa.3.sroa.3.0.tmpv.302.sroa.3.0.cast.1209.sroa_cast.sroa_cast, align 8, !dbg !1066
  call void @llvm.dbg.value(metadata i64 %tmpv.302.sroa.3.sroa.3.0.copyload27, metadata !1069, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1068
  %call.80 = invoke { i64, i64 } @github_com_spolu_warp_lib_errors.Trace(i8* nest undef, i64 %tmpv.302.sroa.3.sroa.0.0.copyload25, i64 %tmpv.302.sroa.3.sroa.3.0.copyload27)
          to label %cont.105 unwind label %pad.6, !dbg !1071

else.94:                                          ; preds = %cont.104
  %cast.1222 = bitcast { %Session.0* }* %tmpv.306 to i8*
  %field.377 = getelementptr inbounds { %Session.0* }, { %Session.0* }* %tmpv.306, i64 0, i32 0, !dbg !1072
  store %Session.0* %tmpv.302.sroa.0.0.copyload13, %Session.0** %field.377, align 8, !dbg !1072
  invoke void @runtime.deferproc(i8* nest undef, i8* nonnull %tmpv.293, %__go_descriptor.50* bitcast (void (i8*, { %Session.0* }*)* @command_line_arguments.command_line_arguments..thunk6 to %__go_descriptor.50*), i8* nonnull %cast.1222)
          to label %cont.106 unwind label %pad.6, !dbg !1072

cont.105:                                         ; preds = %then.94
  %call.80.fca.0.extract = extractvalue { i64, i64 } %call.80, 0, !dbg !1071
  %call.80.fca.1.extract = extractvalue { i64, i64 } %call.80, 1, !dbg !1071
  call void @llvm.dbg.value(metadata i64 %call.80.fca.0.extract, metadata !1052, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1053
  call void @llvm.dbg.value(metadata i64 %call.80.fca.1.extract, metadata !1052, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1053
  br label %finally.3

cont.106:                                         ; preds = %else.94
  %icmp.97 = icmp eq %Session.0* %tmpv.302.sroa.0.0.copyload13, null, !dbg !1073
  br i1 %icmp.97, label %then.95, label %fallthrough.95

then.95:                                          ; preds = %cont.106
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.95 unwind label %pad.6, !dbg !1073

fallthrough.95:                                   ; preds = %cont.106, %then.95
  %tmpv.308.sroa.0.0.cast.1228.sroa_idx = getelementptr inbounds %Session.0, %Session.0* %tmpv.302.sroa.0.0.copyload13, i64 0, i32 2
  %tmpv.308.sroa.0.0.cast.1228.sroa_cast = bitcast { i8*, i64 }* %tmpv.308.sroa.0.0.cast.1228.sroa_idx to i64*
  %tmpv.308.sroa.0.0.copyload = load i64, i64* %tmpv.308.sroa.0.0.cast.1228.sroa_cast, align 8
  %tmpv.308.sroa.3.0.cast.1228.sroa_idx9 = getelementptr inbounds %Session.0, %Session.0* %tmpv.302.sroa.0.0.copyload13, i64 0, i32 2, i32 1
  %tmpv.308.sroa.3.0.copyload = load i64, i64* %tmpv.308.sroa.3.0.cast.1228.sroa_idx9, align 8
  %call.81 = invoke i8 @runtime.eqstring(i8* nest undef, i64 %tmpv.308.sroa.0.0.copyload, i64 %tmpv.308.sroa.3.0.copyload, i64 ptrtoint ([5 x i8]* @const.122 to i64), i64 4)
          to label %cont.108 unwind label %pad.6, !dbg !1074

cont.108:                                         ; preds = %fallthrough.95
  %icmp.98 = icmp eq i8 %call.81, 1, !dbg !1074
  br i1 %icmp.98, label %else.96, label %label.0

else.96:                                          ; preds = %cont.108
  %call.82 = invoke { i64, i64 } @command_line_arguments.Srv.handleHost(i8* nest undef, %Srv.0* %s, i64 %tmpv.299.sroa.0.sroa.0.0.copyload38, i64 %tmpv.299.sroa.0.sroa.3.0.copyload40, %Session.0* nonnull %tmpv.302.sroa.0.0.copyload13)
          to label %label.1 unwind label %pad.6, !dbg !1075

label.0:                                          ; preds = %cont.108
  %call.83 = invoke i8 @runtime.eqstring(i8* nest undef, i64 %tmpv.308.sroa.0.0.copyload, i64 %tmpv.308.sroa.3.0.copyload, i64 ptrtoint ([6 x i8]* @const.222 to i64), i64 5)
          to label %cont.110 unwind label %pad.6, !dbg !1076

label.1:                                          ; preds = %else.96, %else.97
  %call.84.sink44 = phi { i64, i64 } [ %call.84, %else.97 ], [ %call.82, %else.96 ]
  %call.84.fca.0.extract = extractvalue { i64, i64 } %call.84.sink44, 0, !dbg !1077
  call void @llvm.dbg.value(metadata i64 %call.84.fca.0.extract, metadata !1069, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1068
  %icmp.102 = icmp eq i64 %call.84.fca.0.extract, 0, !dbg !1078
  br i1 %icmp.102, label %finally.3, label %then.98

cont.110:                                         ; preds = %label.0
  %icmp.100 = icmp eq i8 %call.83, 1, !dbg !1076
  br i1 %icmp.100, label %else.97, label %finally.3

else.97:                                          ; preds = %cont.110
  %call.84 = invoke { i64, i64 } @command_line_arguments.Srv.handleShellClient(i8* nest undef, %Srv.0* %s, i64 %tmpv.299.sroa.0.sroa.0.0.copyload38, i64 %tmpv.299.sroa.0.sroa.3.0.copyload40, %Session.0* nonnull %tmpv.302.sroa.0.0.copyload13)
          to label %label.1 unwind label %pad.6, !dbg !1079

then.98:                                          ; preds = %label.1
  %call.84.fca.1.extract = extractvalue { i64, i64 } %call.84.sink44, 1, !dbg !1077
  call void @llvm.dbg.value(metadata i64 %call.84.fca.1.extract, metadata !1069, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1068
  %call.85 = invoke { i64, i64 } @github_com_spolu_warp_lib_errors.Trace(i8* nest undef, i64 %call.84.fca.0.extract, i64 %call.84.fca.1.extract)
          to label %cont.112 unwind label %pad.6, !dbg !1080

cont.112:                                         ; preds = %then.98
  %call.85.fca.0.extract = extractvalue { i64, i64 } %call.85, 0, !dbg !1080
  %call.85.fca.1.extract = extractvalue { i64, i64 } %call.85, 1, !dbg !1080
  call void @llvm.dbg.value(metadata i64 %call.85.fca.0.extract, metadata !1052, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1053
  call void @llvm.dbg.value(metadata i64 %call.85.fca.1.extract, metadata !1052, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1053
  br label %finally.3

catchpad.3:                                       ; preds = %pad.6
  %ex2.3 = landingpad { i8*, i32 }
          cleanup
  %ex2.3.fca.0.extract = extractvalue { i8*, i32 } %ex2.3, 0
  %ex2.3.fca.1.extract = extractvalue { i8*, i32 } %ex2.3, 1
  br label %finally.3

pad.7:                                            ; preds = %finish.3
  %ex.7 = landingpad { i8*, i32 }
          catch i8* null
  call void @runtime.checkdefer(i8* nest undef, i8* nonnull %tmpv.293), !dbg !1056
  br label %finish.3

finish.3:                                         ; preds = %pad.7, %finally.3
  invoke void @runtime.deferreturn(i8* nest undef, i8* nonnull %tmpv.293)
          to label %cont.114 unwind label %pad.7, !dbg !1056

cont.114:                                         ; preds = %finish.3
  %icmp.103 = icmp eq i8 %finvar.3.0, 1
  br i1 %icmp.103, label %finret.3, label %finres.3

finres.3:                                         ; preds = %cont.114
  %excv.3.fca.0.insert = insertvalue { i8*, i32 } undef, i8* %ehtmp.3.sroa.0.0, 0
  %excv.3.fca.1.insert = insertvalue { i8*, i32 } %excv.3.fca.0.insert, i32 %ehtmp.3.sroa.2.0, 1
  resume { i8*, i32 } %excv.3.fca.1.insert

finret.3:                                         ; preds = %cont.114
  %ld.123.fca.0.insert = insertvalue { i64, i64 } undef, i64 %"$ret5.sroa.0.1", 0, !dbg !1081
  %ld.123.fca.1.insert = insertvalue { i64, i64 } %ld.123.fca.0.insert, i64 %"$ret5.sroa.7.1", 1, !dbg !1081
  ret { i64, i64 } %ld.123.fca.1.insert, !dbg !1081
}

define { i64, i64 } @command_line_arguments.Srv.handleHost(i8* nest nocapture readnone %nest.10, %Srv.0* readonly %s, i64 %ctx.chunk0, i64 %ctx.chunk1, %Session.0* %ss) #0 !dbg !1082 {
entry:
  %tmp.68 = alloca %IPST.3, align 8
  %tmp.66 = alloca %IPST.3, align 8
  %tmp.64 = alloca %IPST.3, align 8
  %tmp.62 = alloca %IPST.3, align 8
  %tmp.60 = alloca %IPST.3, align 8
  %tmpv.316 = alloca [1 x %IPST.9], align 8
  %tmpv.322 = alloca { i8*, i64 }, align 8
  %tmpv.323 = alloca [1 x %IPST.9], align 8
  %tmpv.325 = alloca { i8*, i64 }, align 8
  %tmpv.334 = alloca { i8*, i64 }, align 8
  %tmpv.337 = alloca { i8*, i64 }, align 8
  %tmpv.338 = alloca [1 x %IPST.9], align 8
  %tmpv.339 = alloca { i8*, i64 }, align 8
  %tmpv.340 = alloca { i8*, i64 }, align 8
  %tmpv.343 = alloca { i8*, i64 }, align 8
  %tmpv.344 = alloca [1 x %IPST.9], align 8
  %tmpv.349 = alloca { i8*, i64 }, align 8
  %tmpv.351 = alloca { i8*, i64 }, align 8
  %tmpv.353 = alloca %Size.0, align 8
  %tmpv.360 = alloca %Warp.0, align 8
  %tmpv.367 = alloca { i8*, i64 }, align 8
  %tmpv.373 = alloca { i8*, i64 }, align 8
  %tmpv.374 = alloca [1 x %IPST.9], align 8
  %tmpv.378 = alloca { i8*, i64 }, align 8
  call void @llvm.dbg.value(metadata %Srv.0* %s, metadata !1085, metadata !DIExpression()), !dbg !1086
  call void @llvm.dbg.value(metadata i64 %ctx.chunk0, metadata !1087, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1088
  call void @llvm.dbg.value(metadata i64 %ctx.chunk1, metadata !1087, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1088
  call void @llvm.dbg.value(metadata %Session.0* %ss, metadata !1089, metadata !DIExpression()), !dbg !1090
  %call.86 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @github_com_spolu_warp.HostUpdate..d, i64 0, i32 0)), !dbg !1091
  call void @llvm.dbg.value(metadata i8* %call.86, metadata !1093, metadata !DIExpression()), !dbg !1103
  %icmp.104 = icmp eq %Session.0* %ss, null, !dbg !1104
  br i1 %icmp.104, label %then.99, label %else.99

then.99:                                          ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1104
  unreachable

else.99:                                          ; preds = %entry
  %field.380 = getelementptr inbounds %Session.0, %Session.0* %ss, i64 0, i32 9, !dbg !1104
  %.field.ld.50 = load %Decoder.0*, %Decoder.0** %field.380, align 8, !dbg !1104
  %0 = ptrtoint i8* %call.86 to i64, !dbg !1106
  %call.87 = call { i64, i64 } @encoding_gob.Decoder.Decode(i8* nest undef, %Decoder.0* %.field.ld.50, i64 ptrtoint (%PtrType.0* @type...1github_com_spolu_warp.HostUpdate to i64), i64 %0), !dbg !1107
  %call.87.fca.0.extract = extractvalue { i64, i64 } %call.87, 0, !dbg !1107
  call void @llvm.dbg.value(metadata i64 %call.87.fca.0.extract, metadata !1108, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1109
  %icmp.106 = icmp eq i64 %call.87.fca.0.extract, 0, !dbg !1110
  br i1 %icmp.106, label %else.100, label %then.100

then.100:                                         ; preds = %else.99
  %call.87.fca.1.extract = extractvalue { i64, i64 } %call.87, 1, !dbg !1107
  call void @llvm.dbg.value(metadata i64 %call.87.fca.1.extract, metadata !1108, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1109
  call void @command_line_arguments.Session.SendInternalError(i8* nest undef, %Session.0* nonnull %ss, i64 %ctx.chunk0, i64 %ctx.chunk1), !dbg !1111
  %1 = inttoptr i64 %call.87.fca.0.extract to i64*, !dbg !1112
  %.field.ld.5144 = load i64, i64* %1, align 8, !dbg !1112
  %2 = inttoptr i64 %call.87.fca.1.extract to i8*, !dbg !1113
  %3 = bitcast [1 x %IPST.9]* %tmpv.316 to i64*, !dbg !1113
  store i64 %.field.ld.5144, i64* %3, align 8, !dbg !1113
  %tmp.59.sroa.2.0.cast.1273.sroa_idx39 = getelementptr inbounds [1 x %IPST.9], [1 x %IPST.9]* %tmpv.316, i64 0, i64 0, i32 1, !dbg !1113
  store i8* %2, i8** %tmp.59.sroa.2.0.cast.1273.sroa_idx39, align 8, !dbg !1113
  %field.389 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.60, i64 0, i32 0, !dbg !1113
  %cast.1276 = getelementptr inbounds [1 x %IPST.9], [1 x %IPST.9]* %tmpv.316, i64 0, i64 0, !dbg !1113
  store %IPST.9* %cast.1276, %IPST.9** %field.389, align 8, !dbg !1113
  %field.390 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.60, i64 0, i32 1, !dbg !1113
  store i64 1, i64* %field.390, align 8, !dbg !1113
  %field.391 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.60, i64 0, i32 2, !dbg !1113
  store i64 1, i64* %field.391, align 8, !dbg !1113
  %call.88 = call { i64, i64 } @github_com_spolu_warp_lib_errors.Newf(i8* nest undef, i64 ptrtoint ([30 x i8]* @const.224 to i64), i64 29, %IPST.3* byval nonnull %tmp.60), !dbg !1113
  %call.88.fca.0.extract = extractvalue { i64, i64 } %call.88, 0, !dbg !1113
  %call.88.fca.1.extract = extractvalue { i64, i64 } %call.88, 1, !dbg !1113
  %call.89 = call { i64, i64 } @github_com_spolu_warp_lib_errors.Trace(i8* nest undef, i64 %call.88.fca.0.extract, i64 %call.88.fca.1.extract), !dbg !1114
  ret { i64, i64 } %call.89, !dbg !1115

else.100:                                         ; preds = %else.99
  %call.90 = call { i64, i64 } @command_line_arguments.Session.ToString(i8* nest undef, %Session.0* nonnull %ss), !dbg !1116
  %call.90.fca.0.extract = extractvalue { i64, i64 } %call.90, 0, !dbg !1116
  %call.90.fca.1.extract = extractvalue { i64, i64 } %call.90, 1, !dbg !1116
  %call.91 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !1117
  %tmpv.320.sroa.0.0.cast.1292.sroa_cast = bitcast { i8*, i64 }* %tmpv.322 to i64*
  store i64 %call.90.fca.0.extract, i64* %tmpv.320.sroa.0.0.cast.1292.sroa_cast, align 8
  %tmpv.320.sroa.2.0.cast.1292.sroa_idx9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.322, i64 0, i32 1
  store i64 %call.90.fca.1.extract, i64* %tmpv.320.sroa.2.0.cast.1292.sroa_idx9, align 8
  %cast.1295 = bitcast { i8*, i64 }* %tmpv.322 to i8*, !dbg !1117
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.91, i8* nonnull %cast.1295), !dbg !1117
  %tmp.61.sroa.0.0.cast.1297.sroa_idx = getelementptr inbounds [1 x %IPST.9], [1 x %IPST.9]* %tmpv.323, i64 0, i64 0, i32 0, !dbg !1117
  store %_type.0* @string..d, %_type.0** %tmp.61.sroa.0.0.cast.1297.sroa_idx, align 8, !dbg !1117
  %tmp.61.sroa.2.0.cast.1297.sroa_idx40 = getelementptr inbounds [1 x %IPST.9], [1 x %IPST.9]* %tmpv.323, i64 0, i64 0, i32 1, !dbg !1117
  store i8* %call.91, i8** %tmp.61.sroa.2.0.cast.1297.sroa_idx40, align 8, !dbg !1117
  %field.395 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.62, i64 0, i32 0, !dbg !1117
  %cast.1301 = getelementptr inbounds [1 x %IPST.9], [1 x %IPST.9]* %tmpv.323, i64 0, i64 0, !dbg !1117
  store %IPST.9* %cast.1301, %IPST.9** %field.395, align 8, !dbg !1117
  %field.396 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.62, i64 0, i32 1, !dbg !1117
  store i64 1, i64* %field.396, align 8, !dbg !1117
  %field.397 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.62, i64 0, i32 2, !dbg !1117
  store i64 1, i64* %field.397, align 8, !dbg !1117
  call void @github_com_spolu_warp_lib_logging.Logf(i8* nest undef, i64 %ctx.chunk0, i64 %ctx.chunk1, i64 ptrtoint ([42 x i8]* @const.226 to i64), i64 41, %IPST.3* byval nonnull %tmp.62), !dbg !1117
  %icmp.107 = icmp eq %Srv.0* %s, null, !dbg !1118
  br i1 %icmp.107, label %then.102, label %else.102

then.102:                                         ; preds = %else.100
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1118
  unreachable

else.102:                                         ; preds = %else.100
  %field.398 = getelementptr inbounds %Srv.0, %Srv.0* %s, i64 0, i32 4, !dbg !1118
  %.field.ld.52 = load %Mutex.0*, %Mutex.0** %field.398, align 8, !dbg !1118
  call void @sync.Mutex.Lock(i8* nest undef, %Mutex.0* %.field.ld.52), !dbg !1119
  call void @llvm.dbg.value(metadata i8 0, metadata !1120, metadata !DIExpression()), !dbg !1121
  %field.399 = getelementptr inbounds %Session.0, %Session.0* %ss, i64 0, i32 1, !dbg !1122
  %cast.1304 = bitcast { i8*, i64 }* %tmpv.325 to i8*
  %cast.1305 = bitcast { i8*, i64 }* %field.399 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1304, i8* nonnull align 8 %cast.1305, i64 16, i1 false)
  %field.400 = getelementptr inbounds %Srv.0, %Srv.0* %s, i64 0, i32 3, !dbg !1123
  %.field.ld.53 = load { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.400, align 8, !dbg !1123
  %call.92 = call { i64, i8 } @runtime.mapaccess2(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7.1command_line_arguments.Warp, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %.field.ld.53, i8* nonnull %cast.1304), !dbg !1124
  %call.92.fca.1.extract = extractvalue { i64, i8 } %call.92, 1, !dbg !1124
  call void @llvm.dbg.value(metadata i8 %call.92.fca.1.extract, metadata !1120, metadata !DIExpression()), !dbg !1121
  %4 = and i8 %call.92.fca.1.extract, 1, !dbg !1125
  %trunc.108 = icmp eq i8 %4, 0, !dbg !1125
  br i1 %trunc.108, label %else.109, label %else.106

else.106:                                         ; preds = %else.102
  %.field.ld.54 = load %Mutex.0*, %Mutex.0** %field.398, align 8, !dbg !1126
  call void @sync.Mutex.Unlock(i8* nest undef, %Mutex.0* %.field.ld.54), !dbg !1127
  %cast.1317 = bitcast { i8*, i64 }* %tmpv.334 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1317, i8* nonnull align 8 %cast.1305, i64 16, i1 false)
  %call.93 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !1128
  %cast.1320 = bitcast { i8*, i64 }* %tmpv.337 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1320, i8* nonnull align 8 %cast.1317, i64 16, i1 false)
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.93, i8* nonnull %cast.1320), !dbg !1128
  %tmp.63.sroa.0.0.cast.1325.sroa_idx = getelementptr inbounds [1 x %IPST.9], [1 x %IPST.9]* %tmpv.338, i64 0, i64 0, i32 0, !dbg !1128
  store %_type.0* @string..d, %_type.0** %tmp.63.sroa.0.0.cast.1325.sroa_idx, align 8, !dbg !1128
  %tmp.63.sroa.2.0.cast.1325.sroa_idx41 = getelementptr inbounds [1 x %IPST.9], [1 x %IPST.9]* %tmpv.338, i64 0, i64 0, i32 1, !dbg !1128
  store i8* %call.93, i8** %tmp.63.sroa.2.0.cast.1325.sroa_idx41, align 8, !dbg !1128
  %field.407 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.64, i64 0, i32 0, !dbg !1128
  %cast.1328 = getelementptr inbounds [1 x %IPST.9], [1 x %IPST.9]* %tmpv.338, i64 0, i64 0, !dbg !1128
  store %IPST.9* %cast.1328, %IPST.9** %field.407, align 8, !dbg !1128
  %field.408 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.64, i64 0, i32 1, !dbg !1128
  store i64 1, i64* %field.408, align 8, !dbg !1128
  %field.409 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.64, i64 0, i32 2, !dbg !1128
  store i64 1, i64* %field.409, align 8, !dbg !1128
  %call.94 = call { i64, i64 } @fmt.Sprintf(i8* nest undef, i64 ptrtoint ([54 x i8]* @const.229 to i64), i64 53, %IPST.3* byval nonnull %tmp.64), !dbg !1128
  %call.94.fca.0.extract = extractvalue { i64, i64 } %call.94, 0, !dbg !1128
  %call.94.fca.1.extract = extractvalue { i64, i64 } %call.94, 1, !dbg !1128
  %sret.actual.53.sroa.0.0.cast.1330.sroa_cast = bitcast { i8*, i64 }* %tmpv.339 to i64*
  store i64 %call.94.fca.0.extract, i64* %sret.actual.53.sroa.0.0.cast.1330.sroa_cast, align 8
  %sret.actual.53.sroa.2.0.cast.1330.sroa_idx7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.339, i64 0, i32 1
  store i64 %call.94.fca.1.extract, i64* %sret.actual.53.sroa.2.0.cast.1330.sroa_idx7, align 8
  call void @command_line_arguments.Session.SendError(i8* nest undef, %Session.0* nonnull %ss, i64 %ctx.chunk0, i64 %ctx.chunk1, i64 ptrtoint ([12 x i8]* @const.231 to i64), i64 11, { i8*, i64 }* byval nonnull %tmpv.339), !dbg !1129
  %cast.1335 = bitcast { i8*, i64 }* %tmpv.340 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1335, i8* nonnull align 8 %cast.1305, i64 16, i1 false)
  %call.95 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !1130
  %cast.1338 = bitcast { i8*, i64 }* %tmpv.343 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1338, i8* nonnull align 8 %cast.1335, i64 16, i1 false)
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.95, i8* nonnull %cast.1338), !dbg !1130
  %tmp.65.sroa.0.0.cast.1343.sroa_idx = getelementptr inbounds [1 x %IPST.9], [1 x %IPST.9]* %tmpv.344, i64 0, i64 0, i32 0, !dbg !1130
  store %_type.0* @string..d, %_type.0** %tmp.65.sroa.0.0.cast.1343.sroa_idx, align 8, !dbg !1130
  %tmp.65.sroa.2.0.cast.1343.sroa_idx42 = getelementptr inbounds [1 x %IPST.9], [1 x %IPST.9]* %tmpv.344, i64 0, i64 0, i32 1, !dbg !1130
  store i8* %call.95, i8** %tmp.65.sroa.2.0.cast.1343.sroa_idx42, align 8, !dbg !1130
  %field.413 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.66, i64 0, i32 0, !dbg !1130
  %cast.1346 = getelementptr inbounds [1 x %IPST.9], [1 x %IPST.9]* %tmpv.344, i64 0, i64 0, !dbg !1130
  store %IPST.9* %cast.1346, %IPST.9** %field.413, align 8, !dbg !1130
  %field.414 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.66, i64 0, i32 1, !dbg !1130
  store i64 1, i64* %field.414, align 8, !dbg !1130
  %field.415 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.66, i64 0, i32 2, !dbg !1130
  store i64 1, i64* %field.415, align 8, !dbg !1130
  %call.96 = call { i64, i64 } @github_com_spolu_warp_lib_errors.Newf(i8* nest undef, i64 ptrtoint ([36 x i8]* @const.233 to i64), i64 35, %IPST.3* byval nonnull %tmp.66), !dbg !1130
  %call.96.fca.0.extract = extractvalue { i64, i64 } %call.96, 0, !dbg !1130
  %call.96.fca.1.extract = extractvalue { i64, i64 } %call.96, 1, !dbg !1130
  %call.97 = call { i64, i64 } @github_com_spolu_warp_lib_errors.Trace(i8* nest undef, i64 %call.96.fca.0.extract, i64 %call.96.fca.1.extract), !dbg !1131
  ret { i64, i64 } %call.97, !dbg !1132

else.109:                                         ; preds = %else.102
  %cast.1358 = bitcast { i8*, i64 }* %tmpv.349 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1358, i8* nonnull align 8 %cast.1305, i64 16, i1 false)
  %cast.1361 = bitcast { i8*, i64 }* %tmpv.351 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1361, i8* nonnull align 8 %cast.1305, i64 16, i1 false)
  %field.418 = getelementptr inbounds i8, i8* %call.86, i64 64, !dbg !1133
  %cast.1363 = bitcast %Size.0* %tmpv.353 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1363, i8* nonnull align 8 %field.418, i64 16, i1 false)
  %call.98 = call { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* @__go_construct_map(i8* nest undef, i8* bitcast (%MapType.0* @type..map.6string.7.1command_line_arguments.UserState to i8*), i64 0, i64 24, i64 16, i8* null), !dbg !1134
  %call.99 = call {}* @runtime.makechan(i8* nest undef, %_type.0* getelementptr inbounds (%ChanType.0, %ChanType.0* @type..chan.0.6.7uint8, i64 0, i32 0), i64 0), !dbg !1135
  %call.100 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @sync.Mutex..d, i64 0, i32 0)), !dbg !1136
  %5 = bitcast i8* %call.100 to i64*, !dbg !1136
  store i64 0, i64* %5, align 4, !dbg !1136
  %call.101 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.Warp..d, i64 0, i32 0)), !dbg !1137
  %cast.1377 = bitcast %Warp.0* %tmpv.360 to i8*, !dbg !1138
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1377, i8* nonnull align 8 %cast.1361, i64 16, i1 false), !dbg !1138
  %field.420 = getelementptr inbounds %Warp.0, %Warp.0* %tmpv.360, i64 0, i32 1, !dbg !1138
  %cast.1379 = bitcast %Size.0* %field.420 to i8*, !dbg !1138
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1379, i8* nonnull align 8 %cast.1363, i64 16, i1 false), !dbg !1138
  %field.421 = getelementptr inbounds %Warp.0, %Warp.0* %tmpv.360, i64 0, i32 2, !dbg !1138
  store %HostState.0* null, %HostState.0** %field.421, align 8, !dbg !1138
  %field.422 = getelementptr inbounds %Warp.0, %Warp.0* %tmpv.360, i64 0, i32 3, !dbg !1138
  store { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.98, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.422, align 8, !dbg !1138
  %field.423 = getelementptr inbounds %Warp.0, %Warp.0* %tmpv.360, i64 0, i32 4, !dbg !1138
  store {}* %call.99, {}** %field.423, align 8, !dbg !1138
  %field.424 = getelementptr inbounds %Warp.0, %Warp.0* %tmpv.360, i64 0, i32 5, !dbg !1138
  %6 = bitcast %Mutex.0** %field.424 to i8**, !dbg !1138
  store i8* %call.100, i8** %6, align 8, !dbg !1138
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.Warp..d, i64 0, i32 0), i8* %call.101, i8* nonnull %cast.1377), !dbg !1137
  %.field.ld.55 = load { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.400, align 8, !dbg !1139
  %call.102 = call i8* @runtime.mapassign(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7.1command_line_arguments.Warp, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %.field.ld.55, i8* nonnull %cast.1358), !dbg !1140
  %runtime.writeBarrier.ld.12 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1140
  %icmp.117 = icmp eq i32 %runtime.writeBarrier.ld.12, 0, !dbg !1140
  br i1 %icmp.117, label %then.112, label %else.112

then.112:                                         ; preds = %else.109
  %icmp.116 = icmp eq i8* %call.102, null, !dbg !1140
  br i1 %icmp.116, label %then.113, label %else.113

else.112:                                         ; preds = %else.109
  call void @runtime.writebarrierptr(i8* nest undef, i8* %call.102, i8* %call.101), !dbg !1140
  br label %else.114

then.113:                                         ; preds = %then.112
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1140
  unreachable

else.113:                                         ; preds = %then.112
  %7 = bitcast i8* %call.102 to i8**, !dbg !1140
  store i8* %call.101, i8** %7, align 8, !dbg !1140
  br label %else.114

else.114:                                         ; preds = %else.113, %else.112
  %.field.ld.56 = load %Mutex.0*, %Mutex.0** %field.398, align 8, !dbg !1141
  call void @sync.Mutex.Unlock(i8* nest undef, %Mutex.0* %.field.ld.56), !dbg !1142
  %cast.1393 = bitcast { i8*, i64 }* %tmpv.367 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1393, i8* nonnull align 8 %cast.1305, i64 16, i1 false)
  %.field.ld.57 = load { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.400, align 8, !dbg !1143
  %call.103 = call i8* @runtime.mapaccess1(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7.1command_line_arguments.Warp, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %.field.ld.57, i8* nonnull %cast.1393), !dbg !1144
  %cast.1398 = bitcast i8* %call.103 to %Warp.0**, !dbg !1144
  %.ld.85 = load %Warp.0*, %Warp.0** %cast.1398, align 8, !dbg !1144
  call void @command_line_arguments.Warp.handleHost(i8* nest undef, %Warp.0* %.ld.85, i64 %ctx.chunk0, i64 %ctx.chunk1, %Session.0* nonnull %ss), !dbg !1145
  %call.104 = call { i64, i64 } @command_line_arguments.Session.ToString(i8* nest undef, %Session.0* nonnull %ss), !dbg !1146
  %call.104.fca.0.extract = extractvalue { i64, i64 } %call.104, 0, !dbg !1146
  %call.104.fca.1.extract = extractvalue { i64, i64 } %call.104, 1, !dbg !1146
  %call.105 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !1147
  %tmpv.371.sroa.0.0.cast.1404.sroa_cast = bitcast { i8*, i64 }* %tmpv.373 to i64*
  store i64 %call.104.fca.0.extract, i64* %tmpv.371.sroa.0.0.cast.1404.sroa_cast, align 8
  %tmpv.371.sroa.2.0.cast.1404.sroa_idx3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.373, i64 0, i32 1
  store i64 %call.104.fca.1.extract, i64* %tmpv.371.sroa.2.0.cast.1404.sroa_idx3, align 8
  %cast.1407 = bitcast { i8*, i64 }* %tmpv.373 to i8*, !dbg !1147
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.105, i8* nonnull %cast.1407), !dbg !1147
  %tmp.67.sroa.0.0.cast.1409.sroa_idx = getelementptr inbounds [1 x %IPST.9], [1 x %IPST.9]* %tmpv.374, i64 0, i64 0, i32 0, !dbg !1147
  store %_type.0* @string..d, %_type.0** %tmp.67.sroa.0.0.cast.1409.sroa_idx, align 8, !dbg !1147
  %tmp.67.sroa.2.0.cast.1409.sroa_idx43 = getelementptr inbounds [1 x %IPST.9], [1 x %IPST.9]* %tmpv.374, i64 0, i64 0, i32 1, !dbg !1147
  store i8* %call.105, i8** %tmp.67.sroa.2.0.cast.1409.sroa_idx43, align 8, !dbg !1147
  %field.431 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.68, i64 0, i32 0, !dbg !1147
  %cast.1413 = getelementptr inbounds [1 x %IPST.9], [1 x %IPST.9]* %tmpv.374, i64 0, i64 0, !dbg !1147
  store %IPST.9* %cast.1413, %IPST.9** %field.431, align 8, !dbg !1147
  %field.432 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.68, i64 0, i32 1, !dbg !1147
  store i64 1, i64* %field.432, align 8, !dbg !1147
  %field.433 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.68, i64 0, i32 2, !dbg !1147
  store i64 1, i64* %field.433, align 8, !dbg !1147
  call void @github_com_spolu_warp_lib_logging.Logf(i8* nest undef, i64 %ctx.chunk0, i64 %ctx.chunk1, i64 ptrtoint ([29 x i8]* @const.235 to i64), i64 28, %IPST.3* byval nonnull %tmp.68), !dbg !1147
  %.field.ld.58 = load %Mutex.0*, %Mutex.0** %field.398, align 8, !dbg !1148
  call void @sync.Mutex.Lock(i8* nest undef, %Mutex.0* %.field.ld.58), !dbg !1149
  %.field.ld.59 = load { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.400, align 8, !dbg !1150
  %cast.1417 = bitcast { i8*, i64 }* %tmpv.378 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1417, i8* nonnull align 8 %cast.1305, i64 16, i1 false)
  call void @runtime.mapdelete(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7.1command_line_arguments.Warp, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %.field.ld.59, i8* nonnull %cast.1417), !dbg !1151
  %.field.ld.60 = load %Mutex.0*, %Mutex.0** %field.398, align 8, !dbg !1152
  call void @sync.Mutex.Unlock(i8* nest undef, %Mutex.0* %.field.ld.60), !dbg !1153
  call void @llvm.dbg.value(metadata i64 0, metadata !1154, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1155
  call void @llvm.dbg.value(metadata i64 0, metadata !1154, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1155
  ret { i64, i64 } zeroinitializer, !dbg !1156
}

define { i64, i64 } @command_line_arguments.Srv.handleShellClient(i8* nest nocapture readnone %nest.11, %Srv.0* readonly %s, i64 %ctx.chunk0, i64 %ctx.chunk1, %Session.0* %ss) #0 !dbg !1157 {
entry:
  %tmp.72 = alloca %IPST.3, align 8
  %tmp.70 = alloca %IPST.3, align 8
  %tmpv.382 = alloca { i8*, i64 }, align 8
  %tmpv.391 = alloca { i8*, i64 }, align 8
  %tmpv.394 = alloca { i8*, i64 }, align 8
  %tmpv.395 = alloca [1 x %IPST.9], align 8
  %tmpv.396 = alloca { i8*, i64 }, align 8
  %tmpv.397 = alloca { i8*, i64 }, align 8
  %tmpv.400 = alloca { i8*, i64 }, align 8
  %tmpv.401 = alloca [1 x %IPST.9], align 8
  %tmpv.404 = alloca { i8*, i64 }, align 8
  call void @llvm.dbg.value(metadata %Srv.0* %s, metadata !1158, metadata !DIExpression()), !dbg !1159
  call void @llvm.dbg.value(metadata i64 %ctx.chunk0, metadata !1160, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1161
  call void @llvm.dbg.value(metadata i64 %ctx.chunk1, metadata !1160, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1161
  call void @llvm.dbg.value(metadata %Session.0* %ss, metadata !1162, metadata !DIExpression()), !dbg !1163
  %icmp.125 = icmp eq %Srv.0* %s, null, !dbg !1164
  br i1 %icmp.125, label %then.121, label %else.121

then.121:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1164
  unreachable

else.121:                                         ; preds = %entry
  %field.438 = getelementptr inbounds %Srv.0, %Srv.0* %s, i64 0, i32 4, !dbg !1164
  %.field.ld.61 = load %Mutex.0*, %Mutex.0** %field.438, align 8, !dbg !1164
  call void @sync.Mutex.Lock(i8* nest undef, %Mutex.0* %.field.ld.61), !dbg !1166
  call void @llvm.dbg.value(metadata i8 0, metadata !1167, metadata !DIExpression()), !dbg !1168
  %icmp.126 = icmp eq %Session.0* %ss, null, !dbg !1169
  br i1 %icmp.126, label %then.122, label %else.122

then.122:                                         ; preds = %else.121
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1169
  unreachable

else.122:                                         ; preds = %else.121
  %field.439 = getelementptr inbounds %Session.0, %Session.0* %ss, i64 0, i32 1, !dbg !1169
  %cast.1430 = bitcast { i8*, i64 }* %tmpv.382 to i8*
  %cast.1431 = bitcast { i8*, i64 }* %field.439 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1430, i8* nonnull align 8 %cast.1431, i64 16, i1 false)
  %field.440 = getelementptr inbounds %Srv.0, %Srv.0* %s, i64 0, i32 3, !dbg !1170
  %.field.ld.62 = load { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.440, align 8, !dbg !1170
  %call.106 = call { i64, i8 } @runtime.mapaccess2(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7.1command_line_arguments.Warp, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %.field.ld.62, i8* nonnull %cast.1430), !dbg !1171
  %call.106.fca.1.extract = extractvalue { i64, i8 } %call.106, 1, !dbg !1171
  call void @llvm.dbg.value(metadata i8 %call.106.fca.1.extract, metadata !1167, metadata !DIExpression()), !dbg !1168
  %.field.ld.63 = load %Mutex.0*, %Mutex.0** %field.438, align 8, !dbg !1172
  call void @sync.Mutex.Unlock(i8* nest undef, %Mutex.0* %.field.ld.63), !dbg !1173
  %icmp.131 = icmp eq i8 %call.106.fca.1.extract, 0, !dbg !1174
  br i1 %icmp.131, label %else.126, label %else.128

else.126:                                         ; preds = %else.122
  %cast.1443 = bitcast { i8*, i64 }* %tmpv.391 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1443, i8* nonnull align 8 %cast.1431, i64 16, i1 false)
  %call.107 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !1175
  %cast.1446 = bitcast { i8*, i64 }* %tmpv.394 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1446, i8* nonnull align 8 %cast.1443, i64 16, i1 false)
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.107, i8* nonnull %cast.1446), !dbg !1175
  %tmp.69.sroa.0.0.cast.1451.sroa_idx = getelementptr inbounds [1 x %IPST.9], [1 x %IPST.9]* %tmpv.395, i64 0, i64 0, i32 0, !dbg !1175
  store %_type.0* @string..d, %_type.0** %tmp.69.sroa.0.0.cast.1451.sroa_idx, align 8, !dbg !1175
  %tmp.69.sroa.2.0.cast.1451.sroa_idx15 = getelementptr inbounds [1 x %IPST.9], [1 x %IPST.9]* %tmpv.395, i64 0, i64 0, i32 1, !dbg !1175
  store i8* %call.107, i8** %tmp.69.sroa.2.0.cast.1451.sroa_idx15, align 8, !dbg !1175
  %field.447 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.70, i64 0, i32 0, !dbg !1175
  %cast.1454 = getelementptr inbounds [1 x %IPST.9], [1 x %IPST.9]* %tmpv.395, i64 0, i64 0, !dbg !1175
  store %IPST.9* %cast.1454, %IPST.9** %field.447, align 8, !dbg !1175
  %field.448 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.70, i64 0, i32 1, !dbg !1175
  store i64 1, i64* %field.448, align 8, !dbg !1175
  %field.449 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.70, i64 0, i32 2, !dbg !1175
  store i64 1, i64* %field.449, align 8, !dbg !1175
  %call.108 = call { i64, i64 } @fmt.Sprintf(i8* nest undef, i64 ptrtoint ([54 x i8]* @const.237 to i64), i64 53, %IPST.3* byval nonnull %tmp.70), !dbg !1175
  %call.108.fca.0.extract = extractvalue { i64, i64 } %call.108, 0, !dbg !1175
  %call.108.fca.1.extract = extractvalue { i64, i64 } %call.108, 1, !dbg !1175
  %sret.actual.58.sroa.0.0.cast.1456.sroa_cast = bitcast { i8*, i64 }* %tmpv.396 to i64*
  store i64 %call.108.fca.0.extract, i64* %sret.actual.58.sroa.0.0.cast.1456.sroa_cast, align 8
  %sret.actual.58.sroa.2.0.cast.1456.sroa_idx5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.396, i64 0, i32 1
  store i64 %call.108.fca.1.extract, i64* %sret.actual.58.sroa.2.0.cast.1456.sroa_idx5, align 8
  call void @command_line_arguments.Session.SendError(i8* nest undef, %Session.0* nonnull %ss, i64 %ctx.chunk0, i64 %ctx.chunk1, i64 ptrtoint ([13 x i8]* @const.239 to i64), i64 12, { i8*, i64 }* byval nonnull %tmpv.396), !dbg !1176
  %cast.1461 = bitcast { i8*, i64 }* %tmpv.397 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1461, i8* nonnull align 8 %cast.1431, i64 16, i1 false)
  %call.109 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !1177
  %cast.1464 = bitcast { i8*, i64 }* %tmpv.400 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1464, i8* nonnull align 8 %cast.1461, i64 16, i1 false)
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.109, i8* nonnull %cast.1464), !dbg !1177
  %tmp.71.sroa.0.0.cast.1469.sroa_idx = getelementptr inbounds [1 x %IPST.9], [1 x %IPST.9]* %tmpv.401, i64 0, i64 0, i32 0, !dbg !1177
  store %_type.0* @string..d, %_type.0** %tmp.71.sroa.0.0.cast.1469.sroa_idx, align 8, !dbg !1177
  %tmp.71.sroa.2.0.cast.1469.sroa_idx16 = getelementptr inbounds [1 x %IPST.9], [1 x %IPST.9]* %tmpv.401, i64 0, i64 0, i32 1, !dbg !1177
  store i8* %call.109, i8** %tmp.71.sroa.2.0.cast.1469.sroa_idx16, align 8, !dbg !1177
  %field.453 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.72, i64 0, i32 0, !dbg !1177
  %cast.1472 = getelementptr inbounds [1 x %IPST.9], [1 x %IPST.9]* %tmpv.401, i64 0, i64 0, !dbg !1177
  store %IPST.9* %cast.1472, %IPST.9** %field.453, align 8, !dbg !1177
  %field.454 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.72, i64 0, i32 1, !dbg !1177
  store i64 1, i64* %field.454, align 8, !dbg !1177
  %field.455 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.72, i64 0, i32 2, !dbg !1177
  store i64 1, i64* %field.455, align 8, !dbg !1177
  %call.110 = call { i64, i64 } @github_com_spolu_warp_lib_errors.Newf(i8* nest undef, i64 ptrtoint ([30 x i8]* @const.241 to i64), i64 29, %IPST.3* byval nonnull %tmp.72), !dbg !1177
  %call.110.fca.0.extract = extractvalue { i64, i64 } %call.110, 0, !dbg !1177
  %call.110.fca.1.extract = extractvalue { i64, i64 } %call.110, 1, !dbg !1177
  %call.111 = call { i64, i64 } @github_com_spolu_warp_lib_errors.Trace(i8* nest undef, i64 %call.110.fca.0.extract, i64 %call.110.fca.1.extract), !dbg !1178
  ret { i64, i64 } %call.111, !dbg !1179

else.128:                                         ; preds = %else.122
  %cast.1484 = bitcast { i8*, i64 }* %tmpv.404 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1484, i8* nonnull align 8 %cast.1431, i64 16, i1 false)
  %.field.ld.64 = load { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.440, align 8, !dbg !1180
  %call.112 = call i8* @runtime.mapaccess1(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7.1command_line_arguments.Warp, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %.field.ld.64, i8* nonnull %cast.1484), !dbg !1181
  %cast.1489 = bitcast i8* %call.112 to %Warp.0**, !dbg !1181
  %.ld.99 = load %Warp.0*, %Warp.0** %cast.1489, align 8, !dbg !1181
  call void @command_line_arguments.Warp.handleShellClient(i8* nest undef, %Warp.0* %.ld.99, i64 %ctx.chunk0, i64 %ctx.chunk1, %Session.0* nonnull %ss), !dbg !1182
  call void @llvm.dbg.value(metadata i64 0, metadata !1183, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1184
  call void @llvm.dbg.value(metadata i64 0, metadata !1183, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1184
  ret { i64, i64 } zeroinitializer, !dbg !1185
}

define void @command_line_arguments.Warp.CientSessions(%IPST.4* nocapture sret %sret.formal.4, i8* nest nocapture readnone %nest.15, %Warp.0* readonly %w, i64 %ctx.chunk0, i64 %ctx.chunk1) #0 !dbg !1186 {
entry:
  %tmpv.463 = alloca %IPST.5, align 8
  %tmpv.469 = alloca %IPST.6, align 8
  %tmpv.471 = alloca %IPST.4, align 8
  %sret.actual.63 = alloca { i8**, i64, i64 }, align 8
  %tmpv.488 = alloca %IPST.6, align 8
  %tmpv.490 = alloca %IPST.4, align 8
  %sret.actual.64 = alloca { i8**, i64, i64 }, align 8
  call void @llvm.dbg.value(metadata %Warp.0* %w, metadata !1214, metadata !DIExpression()), !dbg !1215
  call void @llvm.dbg.value(metadata i64 %ctx.chunk0, metadata !1216, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1217
  call void @llvm.dbg.value(metadata i64 %ctx.chunk1, metadata !1216, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1217
  %call.116 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%ArrayType.0, %ArrayType.0* @type...60x.7.1command_line_arguments.Session, i64 0, i32 0)), !dbg !1218
  call void @llvm.dbg.value(metadata i64 0, metadata !1220, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1221
  call void @llvm.dbg.value(metadata i64 0, metadata !1220, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 64)), !dbg !1221
  %icmp.155 = icmp eq %Warp.0* %w, null, !dbg !1222
  br i1 %icmp.155, label %then.150, label %else.150

then.150:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1222
  unreachable

else.150:                                         ; preds = %entry
  %cast.1628 = bitcast i8* %call.116 to %Session.0**, !dbg !1218
  call void @llvm.dbg.value(metadata %Session.0** %cast.1628, metadata !1220, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1221
  %field.497 = getelementptr inbounds %Warp.0, %Warp.0* %w, i64 0, i32 5, !dbg !1222
  %.field.ld.72 = load %Mutex.0*, %Mutex.0** %field.497, align 8, !dbg !1222
  call void @sync.Mutex.Lock(i8* nest undef, %Mutex.0* %.field.ld.72), !dbg !1223
  call void @llvm.dbg.value(metadata %UserState.0* null, metadata !1224, metadata !DIExpression()), !dbg !1227
  %field.498 = getelementptr inbounds %Warp.0, %Warp.0* %w, i64 0, i32 3, !dbg !1228
  %.field.ld.73 = load { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.498, align 8, !dbg !1228
  %cast.1633 = bitcast %IPST.5* %tmpv.463 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %cast.1633, i8 0, i64 96, i1 false)
  call void @runtime.mapiterinit(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7.1command_line_arguments.UserState, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %.field.ld.73, i8* nonnull %cast.1633), !dbg !1229
  call void @llvm.dbg.value(metadata i64 0, metadata !1220, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 64)), !dbg !1221
  call void @llvm.dbg.value(metadata i64 0, metadata !1220, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1221
  call void @llvm.dbg.value(metadata %Session.0** %cast.1628, metadata !1220, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1221
  %field.517 = getelementptr inbounds %IPST.5, %IPST.5* %tmpv.463, i64 0, i32 0, !dbg !1229
  %tmpv.463.field.ld.2138 = load { i8*, i64 }*, { i8*, i64 }** %field.517, align 8, !dbg !1229
  %icmp.170139 = icmp eq { i8*, i64 }* %tmpv.463.field.ld.2138, null, !dbg !1229
  br i1 %icmp.170139, label %else.161, label %then.160.lr.ph

then.160.lr.ph:                                   ; preds = %else.150
  %field.500 = getelementptr inbounds %IPST.5, %IPST.5* %tmpv.463, i64 0, i32 1
  %cast.1642 = bitcast %IPST.6* %tmpv.469 to i8*
  %field.516 = getelementptr inbounds %IPST.6, %IPST.6* %tmpv.469, i64 0, i32 0
  %field.503 = getelementptr inbounds %IPST.6, %IPST.6* %tmpv.469, i64 0, i32 1
  %sessions.sroa.0.0.cast.1648.sroa_idx = getelementptr inbounds %IPST.4, %IPST.4* %tmpv.471, i64 0, i32 0
  %sessions.sroa.8.0.cast.1648.sroa_idx39 = getelementptr inbounds %IPST.4, %IPST.4* %tmpv.471, i64 0, i32 1
  %sessions.sroa.9.0.cast.1648.sroa_idx49 = getelementptr inbounds %IPST.4, %IPST.4* %tmpv.471, i64 0, i32 2
  %cast.1651 = bitcast %IPST.4* %tmpv.471 to { i8**, i64, i64 }*
  %tmpv.477.sroa.0.0.cast.1656.sroa_idx = bitcast { i8**, i64, i64 }* %sret.actual.63 to %Session.0***
  %0 = getelementptr inbounds { i8**, i64, i64 }, { i8**, i64, i64 }* %sret.actual.63, i64 0, i32 1
  %1 = getelementptr inbounds { i8**, i64, i64 }, { i8**, i64, i64 }* %sret.actual.63, i64 0, i32 2
  br label %then.160

then.152:                                         ; preds = %then.160
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1230
  unreachable

else.152:                                         ; preds = %then.160
  %field.501 = getelementptr inbounds %UserState.0, %UserState.0* %.ld.120, i64 0, i32 3, !dbg !1230
  %.field.ld.74 = load { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.501, align 8, !dbg !1230
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %cast.1642, i8 0, i64 96, i1 false)
  call void @runtime.mapiterinit(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7.1command_line_arguments.Session, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %.field.ld.74, i8* nonnull %cast.1642), !dbg !1232
  call void @llvm.dbg.value(metadata i64 %sessions.sroa.9.0142, metadata !1220, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 64)), !dbg !1221
  call void @llvm.dbg.value(metadata i64 %sessions.sroa.8.0141, metadata !1220, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1221
  call void @llvm.dbg.value(metadata %Session.0** %sessions.sroa.0.0140, metadata !1220, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1221
  %tmpv.469.field.ld.2130 = load { i8*, i64 }*, { i8*, i64 }** %field.516, align 8, !dbg !1232
  %icmp.169131 = icmp eq { i8*, i64 }* %tmpv.469.field.ld.2130, null, !dbg !1232
  br i1 %icmp.169131, label %else.159, label %then.159

then.153:                                         ; preds = %then.159
  call void @runtime.growslice({ i8**, i64, i64 }* nonnull sret %sret.actual.63, i8* nest undef, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Session, i64 0, i32 0), { i8**, i64, i64 }* byval nonnull %cast.1651, i64 %add.0), !dbg !1233
  %tmpv.477.sroa.0.0.copyload = load %Session.0**, %Session.0*** %tmpv.477.sroa.0.0.cast.1656.sroa_idx, align 8
  %tmpv.477.sroa.3.0.copyload = load i64, i64* %0, align 8
  %tmpv.477.sroa.4.0.copyload = load i64, i64* %1, align 8
  br label %fallthrough.153

fallthrough.153:                                  ; preds = %else.153, %then.153
  %tmpv.477.sroa.0.0 = phi %Session.0** [ %tmpv.477.sroa.0.0.copyload, %then.153 ], [ %sessions.sroa.0.1132, %else.153 ]
  %tmpv.477.sroa.3.0 = phi i64 [ %tmpv.477.sroa.3.0.copyload, %then.153 ], [ %add.0, %else.153 ]
  %tmpv.477.sroa.4.0 = phi i64 [ %tmpv.477.sroa.4.0.copyload, %then.153 ], [ %sessions.sroa.9.1134, %else.153 ]
  store %Session.0** %tmpv.477.sroa.0.0, %Session.0*** %sessions.sroa.0.0.cast.1648.sroa_idx, align 8, !dbg !1233
  store i64 %tmpv.477.sroa.3.0, i64* %sessions.sroa.8.0.cast.1648.sroa_idx39, align 8, !dbg !1233
  store i64 %tmpv.477.sroa.4.0, i64* %sessions.sroa.9.0.cast.1648.sroa_idx49, align 8, !dbg !1233
  %icmp.165 = icmp sge i64 %sessions.sroa.8.1133, %tmpv.477.sroa.3.0, !dbg !1233
  %2 = icmp slt i64 %sessions.sroa.8.1133, 0, !dbg !1233
  %ior.100 = or i1 %2, %icmp.165, !dbg !1233
  br i1 %ior.100, label %then.156, label %else.156

else.153:                                         ; preds = %then.159
  %icmp.160 = icmp sgt i64 %add.0, %sessions.sroa.9.1134, !dbg !1233
  %add.0.lobit91 = or i64 %add.0, %sessions.sroa.9.1134, !dbg !1233
  %3 = icmp slt i64 %add.0.lobit91, 0, !dbg !1233
  %4 = or i1 %icmp.160, %3, !dbg !1233
  br i1 %4, label %then.154, label %fallthrough.153

then.154:                                         ; preds = %else.153
  call void @__go_runtime_error(i8* nest undef, i32 3), !dbg !1233
  unreachable

then.156:                                         ; preds = %fallthrough.153
  call void @__go_runtime_error(i8* nest undef, i32 0), !dbg !1233
  unreachable

else.156:                                         ; preds = %fallthrough.153
  %ptroff.1 = getelementptr %Session.0*, %Session.0** %tmpv.477.sroa.0.0, i64 %sessions.sroa.8.1133, !dbg !1233
  %runtime.writeBarrier.ld.15 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1233
  %icmp.168 = icmp eq i32 %runtime.writeBarrier.ld.15, 0, !dbg !1233
  br i1 %icmp.168, label %then.157, label %else.157

then.157:                                         ; preds = %else.156
  %icmp.167 = icmp eq %Session.0** %ptroff.1, null, !dbg !1233
  br i1 %icmp.167, label %then.158, label %else.158

fallthrough.157:                                  ; preds = %else.157, %else.158
  %sessions.sroa.0.0.copyload34 = load %Session.0**, %Session.0*** %sessions.sroa.0.0.cast.1648.sroa_idx, align 8, !dbg !1234
  %sessions.sroa.8.0.copyload41 = load i64, i64* %sessions.sroa.8.0.cast.1648.sroa_idx39, align 8, !dbg !1234
  %sessions.sroa.9.0.copyload51 = load i64, i64* %sessions.sroa.9.0.cast.1648.sroa_idx49, align 8, !dbg !1234
  call void @runtime.mapiternext(i8* nest undef, i8* nonnull %cast.1642), !dbg !1232
  call void @llvm.dbg.value(metadata i64 %sessions.sroa.9.0.copyload51, metadata !1220, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 64)), !dbg !1221
  call void @llvm.dbg.value(metadata i64 %sessions.sroa.8.0.copyload41, metadata !1220, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1221
  call void @llvm.dbg.value(metadata %Session.0** %sessions.sroa.0.0.copyload34, metadata !1220, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1221
  %tmpv.469.field.ld.2 = load { i8*, i64 }*, { i8*, i64 }** %field.516, align 8, !dbg !1232
  %icmp.169 = icmp eq { i8*, i64 }* %tmpv.469.field.ld.2, null, !dbg !1232
  br i1 %icmp.169, label %else.159, label %then.159

else.157:                                         ; preds = %else.156
  %cast.1662 = bitcast %Session.0** %ptroff.1 to i8*, !dbg !1233
  %cast.1663 = bitcast %Session.0* %.ld.122 to i8*, !dbg !1233
  call void @runtime.writebarrierptr(i8* nest undef, i8* %cast.1662, i8* %cast.1663), !dbg !1233
  br label %fallthrough.157

then.158:                                         ; preds = %then.157
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1233
  unreachable

else.158:                                         ; preds = %then.157
  store %Session.0* %.ld.122, %Session.0** %ptroff.1, align 8, !dbg !1233
  br label %fallthrough.157

then.159:                                         ; preds = %else.152, %fallthrough.157
  %sessions.sroa.9.1134 = phi i64 [ %sessions.sroa.9.0.copyload51, %fallthrough.157 ], [ %sessions.sroa.9.0142, %else.152 ]
  %sessions.sroa.8.1133 = phi i64 [ %sessions.sroa.8.0.copyload41, %fallthrough.157 ], [ %sessions.sroa.8.0141, %else.152 ]
  %sessions.sroa.0.1132 = phi %Session.0** [ %sessions.sroa.0.0.copyload34, %fallthrough.157 ], [ %sessions.sroa.0.0140, %else.152 ]
  call void @llvm.dbg.value(metadata i64 %sessions.sroa.9.1134, metadata !1220, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 64)), !dbg !1221
  call void @llvm.dbg.value(metadata i64 %sessions.sroa.8.1133, metadata !1220, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1221
  call void @llvm.dbg.value(metadata %Session.0** %sessions.sroa.0.1132, metadata !1220, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1221
  %tmpv.469.field.ld.1 = load %Session.0**, %Session.0*** %field.503, align 8, !dbg !1232
  %.ld.122 = load %Session.0*, %Session.0** %tmpv.469.field.ld.1, align 8, !dbg !1232
  call void @llvm.dbg.value(metadata %Session.0* %.ld.122, metadata !1235, metadata !DIExpression()), !dbg !1236
  store %Session.0** %sessions.sroa.0.1132, %Session.0*** %sessions.sroa.0.0.cast.1648.sroa_idx, align 8
  store i64 %sessions.sroa.8.1133, i64* %sessions.sroa.8.0.cast.1648.sroa_idx39, align 8
  store i64 %sessions.sroa.9.1134, i64* %sessions.sroa.9.0.cast.1648.sroa_idx49, align 8
  %add.0 = add i64 %sessions.sroa.8.1133, 1, !dbg !1233
  %icmp.158 = icmp ugt i64 %add.0, %sessions.sroa.9.1134, !dbg !1233
  br i1 %icmp.158, label %then.153, label %else.153

else.159:                                         ; preds = %fallthrough.157, %else.152
  %sessions.sroa.0.1.lcssa = phi %Session.0** [ %sessions.sroa.0.0140, %else.152 ], [ %sessions.sroa.0.0.copyload34, %fallthrough.157 ], !dbg !1237
  %sessions.sroa.8.1.lcssa = phi i64 [ %sessions.sroa.8.0141, %else.152 ], [ %sessions.sroa.8.0.copyload41, %fallthrough.157 ], !dbg !1237
  %sessions.sroa.9.1.lcssa = phi i64 [ %sessions.sroa.9.0142, %else.152 ], [ %sessions.sroa.9.0.copyload51, %fallthrough.157 ], !dbg !1237
  call void @runtime.mapiternext(i8* nest undef, i8* nonnull %cast.1633), !dbg !1229
  call void @llvm.dbg.value(metadata i64 %sessions.sroa.9.1.lcssa, metadata !1220, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 64)), !dbg !1221
  call void @llvm.dbg.value(metadata i64 %sessions.sroa.8.1.lcssa, metadata !1220, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1221
  call void @llvm.dbg.value(metadata %Session.0** %sessions.sroa.0.1.lcssa, metadata !1220, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1221
  %tmpv.463.field.ld.2 = load { i8*, i64 }*, { i8*, i64 }** %field.517, align 8, !dbg !1229
  %icmp.170 = icmp eq { i8*, i64 }* %tmpv.463.field.ld.2, null, !dbg !1229
  br i1 %icmp.170, label %else.161, label %then.160

then.160:                                         ; preds = %then.160.lr.ph, %else.159
  %sessions.sroa.9.0142 = phi i64 [ 0, %then.160.lr.ph ], [ %sessions.sroa.9.1.lcssa, %else.159 ]
  %sessions.sroa.8.0141 = phi i64 [ 0, %then.160.lr.ph ], [ %sessions.sroa.8.1.lcssa, %else.159 ]
  %sessions.sroa.0.0140 = phi %Session.0** [ %cast.1628, %then.160.lr.ph ], [ %sessions.sroa.0.1.lcssa, %else.159 ]
  call void @llvm.dbg.value(metadata i64 %sessions.sroa.9.0142, metadata !1220, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 64)), !dbg !1221
  call void @llvm.dbg.value(metadata i64 %sessions.sroa.8.0141, metadata !1220, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1221
  call void @llvm.dbg.value(metadata %Session.0** %sessions.sroa.0.0140, metadata !1220, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1221
  %tmpv.463.field.ld.1 = load %UserState.0**, %UserState.0*** %field.500, align 8, !dbg !1229
  %.ld.120 = load %UserState.0*, %UserState.0** %tmpv.463.field.ld.1, align 8, !dbg !1229
  call void @llvm.dbg.value(metadata %UserState.0* %.ld.120, metadata !1224, metadata !DIExpression()), !dbg !1227
  call void @llvm.dbg.value(metadata %Session.0* null, metadata !1235, metadata !DIExpression()), !dbg !1236
  %icmp.157 = icmp eq %UserState.0* %.ld.120, null, !dbg !1230
  br i1 %icmp.157, label %then.152, label %else.152

else.161:                                         ; preds = %else.159, %else.150
  %sessions.sroa.0.0.lcssa = phi %Session.0** [ %cast.1628, %else.150 ], [ %sessions.sroa.0.1.lcssa, %else.159 ], !dbg !1218
  %sessions.sroa.8.0.lcssa = phi i64 [ 0, %else.150 ], [ %sessions.sroa.8.1.lcssa, %else.159 ], !dbg !1218
  %sessions.sroa.9.0.lcssa = phi i64 [ 0, %else.150 ], [ %sessions.sroa.9.1.lcssa, %else.159 ], !dbg !1218
  call void @llvm.dbg.value(metadata %Session.0** %sessions.sroa.0.0.lcssa, metadata !1220, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1221
  call void @llvm.dbg.value(metadata i64 %sessions.sroa.8.0.lcssa, metadata !1220, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1221
  call void @llvm.dbg.value(metadata i64 %sessions.sroa.9.0.lcssa, metadata !1220, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 64)), !dbg !1221
  call void @llvm.dbg.value(metadata %Session.0* null, metadata !1238, metadata !DIExpression()), !dbg !1240
  %field.518 = getelementptr inbounds %Warp.0, %Warp.0* %w, i64 0, i32 2, !dbg !1241
  %.field.ld.78 = load %HostState.0*, %HostState.0** %field.518, align 8, !dbg !1241
  %icmp.172 = icmp eq %HostState.0* %.field.ld.78, null, !dbg !1242
  br i1 %icmp.172, label %then.162, label %else.162

then.162:                                         ; preds = %else.161
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1242
  unreachable

else.162:                                         ; preds = %else.161
  %field.520 = getelementptr inbounds %HostState.0, %HostState.0* %.field.ld.78, i64 0, i32 0, i32 3, !dbg !1243
  %.field.field.ld.1 = load { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.520, align 8, !dbg !1243
  %cast.1674 = bitcast %IPST.6* %tmpv.488 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %cast.1674, i8 0, i64 96, i1 false)
  call void @runtime.mapiterinit(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7.1command_line_arguments.Session, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %.field.field.ld.1, i8* nonnull %cast.1674), !dbg !1244
  call void @llvm.dbg.value(metadata i64 %sessions.sroa.9.0.lcssa, metadata !1220, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 64)), !dbg !1221
  call void @llvm.dbg.value(metadata i64 %sessions.sroa.8.0.lcssa, metadata !1220, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1221
  call void @llvm.dbg.value(metadata %Session.0** %sessions.sroa.0.0.lcssa, metadata !1220, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1221
  %field.535 = getelementptr inbounds %IPST.6, %IPST.6* %tmpv.488, i64 0, i32 0, !dbg !1244
  %tmpv.488.field.ld.2123 = load { i8*, i64 }*, { i8*, i64 }** %field.535, align 8, !dbg !1244
  %icmp.184124 = icmp eq { i8*, i64 }* %tmpv.488.field.ld.2123, null, !dbg !1244
  br i1 %icmp.184124, label %else.170, label %then.169.lr.ph

then.169.lr.ph:                                   ; preds = %else.162
  %field.522 = getelementptr inbounds %IPST.6, %IPST.6* %tmpv.488, i64 0, i32 1
  %sessions.sroa.0.0.cast.1680.sroa_idx = getelementptr inbounds %IPST.4, %IPST.4* %tmpv.490, i64 0, i32 0
  %sessions.sroa.8.0.cast.1680.sroa_idx42 = getelementptr inbounds %IPST.4, %IPST.4* %tmpv.490, i64 0, i32 1
  %sessions.sroa.9.0.cast.1680.sroa_idx52 = getelementptr inbounds %IPST.4, %IPST.4* %tmpv.490, i64 0, i32 2
  %cast.1683 = bitcast %IPST.4* %tmpv.490 to { i8**, i64, i64 }*
  %tmpv.496.sroa.0.0.cast.1688.sroa_idx = bitcast { i8**, i64, i64 }* %sret.actual.64 to %Session.0***
  %5 = getelementptr inbounds { i8**, i64, i64 }, { i8**, i64, i64 }* %sret.actual.64, i64 0, i32 1
  %6 = getelementptr inbounds { i8**, i64, i64 }, { i8**, i64, i64 }* %sret.actual.64, i64 0, i32 2
  br label %then.169

then.163:                                         ; preds = %then.169
  call void @runtime.growslice({ i8**, i64, i64 }* nonnull sret %sret.actual.64, i8* nest undef, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Session, i64 0, i32 0), { i8**, i64, i64 }* byval nonnull %cast.1683, i64 %add.2), !dbg !1245
  %tmpv.496.sroa.0.0.copyload = load %Session.0**, %Session.0*** %tmpv.496.sroa.0.0.cast.1688.sroa_idx, align 8
  %tmpv.496.sroa.3.0.copyload = load i64, i64* %5, align 8
  %tmpv.496.sroa.4.0.copyload = load i64, i64* %6, align 8
  br label %fallthrough.163

fallthrough.163:                                  ; preds = %else.163, %then.163
  %tmpv.496.sroa.0.0 = phi %Session.0** [ %tmpv.496.sroa.0.0.copyload, %then.163 ], [ %sessions.sroa.0.2125, %else.163 ]
  %tmpv.496.sroa.3.0 = phi i64 [ %tmpv.496.sroa.3.0.copyload, %then.163 ], [ %add.2, %else.163 ]
  %tmpv.496.sroa.4.0 = phi i64 [ %tmpv.496.sroa.4.0.copyload, %then.163 ], [ %sessions.sroa.9.2127, %else.163 ]
  store %Session.0** %tmpv.496.sroa.0.0, %Session.0*** %sessions.sroa.0.0.cast.1680.sroa_idx, align 8, !dbg !1245
  store i64 %tmpv.496.sroa.3.0, i64* %sessions.sroa.8.0.cast.1680.sroa_idx42, align 8, !dbg !1245
  store i64 %tmpv.496.sroa.4.0, i64* %sessions.sroa.9.0.cast.1680.sroa_idx52, align 8, !dbg !1245
  %icmp.180 = icmp sge i64 %sessions.sroa.8.2126, %tmpv.496.sroa.3.0, !dbg !1245
  %7 = icmp slt i64 %sessions.sroa.8.2126, 0, !dbg !1245
  %ior.108 = or i1 %7, %icmp.180, !dbg !1245
  br i1 %ior.108, label %then.166, label %else.166

else.163:                                         ; preds = %then.169
  %icmp.175 = icmp sgt i64 %add.2, %sessions.sroa.9.2127, !dbg !1245
  %add.2.lobit92 = or i64 %add.2, %sessions.sroa.9.2127, !dbg !1245
  %8 = icmp slt i64 %add.2.lobit92, 0, !dbg !1245
  %9 = or i1 %icmp.175, %8, !dbg !1245
  br i1 %9, label %then.164, label %fallthrough.163

then.164:                                         ; preds = %else.163
  call void @__go_runtime_error(i8* nest undef, i32 3), !dbg !1245
  unreachable

then.166:                                         ; preds = %fallthrough.163
  call void @__go_runtime_error(i8* nest undef, i32 0), !dbg !1245
  unreachable

else.166:                                         ; preds = %fallthrough.163
  %ptroff.3 = getelementptr %Session.0*, %Session.0** %tmpv.496.sroa.0.0, i64 %sessions.sroa.8.2126, !dbg !1245
  %runtime.writeBarrier.ld.16 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1245
  %icmp.183 = icmp eq i32 %runtime.writeBarrier.ld.16, 0, !dbg !1245
  br i1 %icmp.183, label %then.167, label %else.167

then.167:                                         ; preds = %else.166
  %icmp.182 = icmp eq %Session.0** %ptroff.3, null, !dbg !1245
  br i1 %icmp.182, label %then.168, label %else.168

fallthrough.167:                                  ; preds = %else.167, %else.168
  %sessions.sroa.0.0.copyload36 = load %Session.0**, %Session.0*** %sessions.sroa.0.0.cast.1680.sroa_idx, align 8, !dbg !1246
  %sessions.sroa.8.0.copyload45 = load i64, i64* %sessions.sroa.8.0.cast.1680.sroa_idx42, align 8, !dbg !1246
  %sessions.sroa.9.0.copyload55 = load i64, i64* %sessions.sroa.9.0.cast.1680.sroa_idx52, align 8, !dbg !1246
  call void @runtime.mapiternext(i8* nest undef, i8* nonnull %cast.1674), !dbg !1244
  call void @llvm.dbg.value(metadata i64 %sessions.sroa.9.0.copyload55, metadata !1220, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 64)), !dbg !1221
  call void @llvm.dbg.value(metadata i64 %sessions.sroa.8.0.copyload45, metadata !1220, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1221
  call void @llvm.dbg.value(metadata %Session.0** %sessions.sroa.0.0.copyload36, metadata !1220, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1221
  %tmpv.488.field.ld.2 = load { i8*, i64 }*, { i8*, i64 }** %field.535, align 8, !dbg !1244
  %icmp.184 = icmp eq { i8*, i64 }* %tmpv.488.field.ld.2, null, !dbg !1244
  br i1 %icmp.184, label %else.170, label %then.169

else.167:                                         ; preds = %else.166
  %cast.1694 = bitcast %Session.0** %ptroff.3 to i8*, !dbg !1245
  %cast.1695 = bitcast %Session.0* %.ld.134 to i8*, !dbg !1245
  call void @runtime.writebarrierptr(i8* nest undef, i8* %cast.1694, i8* %cast.1695), !dbg !1245
  br label %fallthrough.167

then.168:                                         ; preds = %then.167
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1245
  unreachable

else.168:                                         ; preds = %then.167
  store %Session.0* %.ld.134, %Session.0** %ptroff.3, align 8, !dbg !1245
  br label %fallthrough.167

then.169:                                         ; preds = %then.169.lr.ph, %fallthrough.167
  %sessions.sroa.9.2127 = phi i64 [ %sessions.sroa.9.0.lcssa, %then.169.lr.ph ], [ %sessions.sroa.9.0.copyload55, %fallthrough.167 ]
  %sessions.sroa.8.2126 = phi i64 [ %sessions.sroa.8.0.lcssa, %then.169.lr.ph ], [ %sessions.sroa.8.0.copyload45, %fallthrough.167 ]
  %sessions.sroa.0.2125 = phi %Session.0** [ %sessions.sroa.0.0.lcssa, %then.169.lr.ph ], [ %sessions.sroa.0.0.copyload36, %fallthrough.167 ]
  call void @llvm.dbg.value(metadata i64 %sessions.sroa.9.2127, metadata !1220, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 64)), !dbg !1221
  call void @llvm.dbg.value(metadata i64 %sessions.sroa.8.2126, metadata !1220, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1221
  call void @llvm.dbg.value(metadata %Session.0** %sessions.sroa.0.2125, metadata !1220, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1221
  %tmpv.488.field.ld.1 = load %Session.0**, %Session.0*** %field.522, align 8, !dbg !1244
  %.ld.134 = load %Session.0*, %Session.0** %tmpv.488.field.ld.1, align 8, !dbg !1244
  call void @llvm.dbg.value(metadata %Session.0* %.ld.134, metadata !1238, metadata !DIExpression()), !dbg !1240
  store %Session.0** %sessions.sroa.0.2125, %Session.0*** %sessions.sroa.0.0.cast.1680.sroa_idx, align 8
  store i64 %sessions.sroa.8.2126, i64* %sessions.sroa.8.0.cast.1680.sroa_idx42, align 8
  store i64 %sessions.sroa.9.2127, i64* %sessions.sroa.9.0.cast.1680.sroa_idx52, align 8
  %add.2 = add i64 %sessions.sroa.8.2126, 1, !dbg !1245
  %icmp.173 = icmp ugt i64 %add.2, %sessions.sroa.9.2127, !dbg !1245
  br i1 %icmp.173, label %then.163, label %else.163

else.170:                                         ; preds = %fallthrough.167, %else.162
  %sessions.sroa.0.2.lcssa = phi %Session.0** [ %sessions.sroa.0.0.lcssa, %else.162 ], [ %sessions.sroa.0.0.copyload36, %fallthrough.167 ], !dbg !1247
  %sessions.sroa.8.2.lcssa = phi i64 [ %sessions.sroa.8.0.lcssa, %else.162 ], [ %sessions.sroa.8.0.copyload45, %fallthrough.167 ], !dbg !1247
  %sessions.sroa.9.2.lcssa = phi i64 [ %sessions.sroa.9.0.lcssa, %else.162 ], [ %sessions.sroa.9.0.copyload55, %fallthrough.167 ], !dbg !1247
  call void @llvm.dbg.value(metadata %Session.0** %sessions.sroa.0.2.lcssa, metadata !1220, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1221
  call void @llvm.dbg.value(metadata i64 %sessions.sroa.8.2.lcssa, metadata !1220, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1221
  call void @llvm.dbg.value(metadata i64 %sessions.sroa.9.2.lcssa, metadata !1220, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 64)), !dbg !1221
  %.field.ld.82 = load %Mutex.0*, %Mutex.0** %field.497, align 8, !dbg !1248
  call void @sync.Mutex.Unlock(i8* nest undef, %Mutex.0* %.field.ld.82), !dbg !1249
  call void @llvm.dbg.value(metadata %Session.0** undef, metadata !1250, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1251
  call void @llvm.dbg.value(metadata i64 undef, metadata !1250, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1251
  call void @llvm.dbg.value(metadata i64 undef, metadata !1250, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 64)), !dbg !1251
  %"$ret11.sroa.0.0.cast.1703.sroa_idx" = getelementptr inbounds %IPST.4, %IPST.4* %sret.formal.4, i64 0, i32 0, !dbg !1252
  store %Session.0** %sessions.sroa.0.2.lcssa, %Session.0*** %"$ret11.sroa.0.0.cast.1703.sroa_idx", align 8, !dbg !1252
  %"$ret11.sroa.5.0.cast.1703.sroa_idx61" = getelementptr inbounds %IPST.4, %IPST.4* %sret.formal.4, i64 0, i32 1, !dbg !1252
  store i64 %sessions.sroa.8.2.lcssa, i64* %"$ret11.sroa.5.0.cast.1703.sroa_idx61", align 8, !dbg !1252
  %"$ret11.sroa.6.0.cast.1703.sroa_idx64" = getelementptr inbounds %IPST.4, %IPST.4* %sret.formal.4, i64 0, i32 2, !dbg !1252
  store i64 %sessions.sroa.9.2.lcssa, i64* %"$ret11.sroa.6.0.cast.1703.sroa_idx64", align 8, !dbg !1252
  ret void, !dbg !1252
}

define void @command_line_arguments.Warp.State(%State.0* nocapture sret %sret.formal.3, i8* nest nocapture readnone %nest.14, %Warp.0* readonly %w, i64 %ctx.chunk0, i64 %ctx.chunk1) #0 personality i32 (i32, i32, i64, i8*, i8*)* @__gccgo_personality_v0 !dbg !1253 {
entry:
  %"$ret10.sroa.0" = alloca { { i8*, i64 }, %Size.0 }, align 8
  %tmpv.422 = alloca i8, align 1
  %state.sroa.0 = alloca { { i8*, i64 }, %Size.0 }, align 8
  %tmpv.426 = alloca { %Mutex.0* }, align 8
  %tmpv.428 = alloca { i8*, i64 }, align 8
  %tmpv.430 = alloca %Size.0, align 8
  %tmpv.438 = alloca { i8*, i64 }, align 8
  %tmpv.440 = alloca %User.0, align 8
  %sret.actual.61 = alloca %User.0, align 8
  %tmpv.447 = alloca { i8*, i64 }, align 8
  %tmpv.449 = alloca %IPST.5, align 8
  %tmpv.452 = alloca { i8*, i64 }, align 8
  %tmpv.453 = alloca %User.0, align 8
  %sret.actual.62 = alloca %User.0, align 8
  call void @llvm.dbg.value(metadata %Warp.0* %w, metadata !1260, metadata !DIExpression()), !dbg !1261
  call void @llvm.dbg.value(metadata i64 %ctx.chunk0, metadata !1262, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1263
  call void @llvm.dbg.value(metadata i64 %ctx.chunk1, metadata !1262, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1263
  %"$ret10.sroa.0.0.sroa_cast15" = bitcast { { i8*, i64 }, %Size.0 }* %"$ret10.sroa.0" to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %"$ret10.sroa.0.0.sroa_cast15")
  store i8 0, i8* %tmpv.422, align 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %"$ret10.sroa.0.0.sroa_cast15", i8 0, i64 32, i1 false)
  call void @llvm.dbg.value(metadata { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* null, metadata !1264, metadata !DIExpression(DW_OP_LLVM_fragment, 256, 64)), !dbg !1265
  %state.sroa.0.0.sroa_cast = bitcast { { i8*, i64 }, %Size.0 }* %state.sroa.0 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %state.sroa.0.0.sroa_cast)
  %icmp.140 = icmp eq %Warp.0* %w, null, !dbg !1266
  br i1 %icmp.140, label %then.136, label %fallthrough.136

finally.4:                                        ; preds = %else.149, %pad.8.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, %catchpad.4
  %"$ret10.sroa.5.1" = phi { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* [ null, %catchpad.4 ], [ null, %pad.8.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp ], [ %call.113, %else.149 ]
  %ehtmp.4.sroa.0.0 = phi i8* [ %ex2.4.fca.0.extract, %catchpad.4 ], [ undef, %pad.8.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp ], [ undef, %else.149 ]
  %ehtmp.4.sroa.2.0 = phi i32 [ %ex2.4.fca.1.extract, %catchpad.4 ], [ undef, %pad.8.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp ], [ undef, %else.149 ]
  %finvar.4.0 = phi i8 [ 0, %catchpad.4 ], [ 1, %pad.8.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp ], [ 1, %else.149 ]
  call void @llvm.dbg.value(metadata { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %"$ret10.sroa.5.1", metadata !1264, metadata !DIExpression(DW_OP_LLVM_fragment, 256, 64)), !dbg !1265
  br label %finish.4

pad.8.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp: ; preds = %fallthrough.147, %else.147, %then.148, %cont.132, %then.149, %fallthrough.146, %else.144, %then.145, %cont.126, %fallthrough.143, %then.142, %then.141, %fallthrough.139, %fallthrough.137, %fallthrough.136, %then.136
  %lpad.loopexit.split-lp26 = landingpad { i8*, i32 }
          catch i8* null
  invoke void @runtime.checkdefer(i8* nest undef, i8* nonnull %tmpv.422)
          to label %finally.4 unwind label %catchpad.4, !dbg !1268

then.136:                                         ; preds = %entry
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.136 unwind label %pad.8.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1266

fallthrough.136:                                  ; preds = %entry, %then.136
  %field.475 = getelementptr inbounds %Warp.0, %Warp.0* %w, i64 0, i32 5, !dbg !1266
  %.field.ld.66 = load %Mutex.0*, %Mutex.0** %field.475, align 8, !dbg !1266
  invoke void @sync.Mutex.Lock(i8* nest undef, %Mutex.0* %.field.ld.66)
          to label %fallthrough.137 unwind label %pad.8.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1269

fallthrough.137:                                  ; preds = %fallthrough.136
  %0 = bitcast %Mutex.0** %field.475 to i64*, !dbg !1270
  %.field.ld.6719 = load i64, i64* %0, align 8, !dbg !1270
  %cast.1531 = bitcast { %Mutex.0* }* %tmpv.426 to i8*
  %1 = bitcast { %Mutex.0* }* %tmpv.426 to i64*, !dbg !1271
  store i64 %.field.ld.6719, i64* %1, align 8, !dbg !1271
  invoke void @runtime.deferproc(i8* nest undef, i8* nonnull %tmpv.422, %__go_descriptor.50* bitcast (i8 (i8*, { %Mutex.0* }*)* @command_line_arguments.command_line_arguments..thunk7 to %__go_descriptor.50*), i8* nonnull %cast.1531)
          to label %fallthrough.139 unwind label %pad.8.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1271

fallthrough.139:                                  ; preds = %fallthrough.137
  %cast.1536 = bitcast { i8*, i64 }* %tmpv.428 to i8*
  %cast.1537 = bitcast %Warp.0* %w to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1536, i8* align 8 %cast.1537, i64 16, i1 false)
  %field.479 = getelementptr inbounds %Warp.0, %Warp.0* %w, i64 0, i32 1, !dbg !1272
  %cast.1539 = bitcast %Size.0* %tmpv.430 to i8*
  %cast.1540 = bitcast %Size.0* %field.479 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1539, i8* nonnull align 8 %cast.1540, i64 16, i1 false)
  %call.113 = invoke { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* @__go_construct_map(i8* nest undef, i8* bitcast (%MapType.0* @type..map.6string.7github_com_spolu_warp.User to i8*), i64 0, i64 64, i64 16, i8* null)
          to label %fallthrough.140 unwind label %pad.8.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1273

fallthrough.140:                                  ; preds = %fallthrough.139
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %state.sroa.0.0.sroa_cast, i8* nonnull align 8 %cast.1536, i64 16, i1 false), !dbg !1274
  %state.sroa.0.16.sroa_idx = getelementptr inbounds { { i8*, i64 }, %Size.0 }, { { i8*, i64 }, %Size.0 }* %state.sroa.0, i64 0, i32 1, !dbg !1274
  %state.sroa.0.16.sroa_cast = bitcast %Size.0* %state.sroa.0.16.sroa_idx to i8*, !dbg !1274
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %state.sroa.0.16.sroa_cast, i8* nonnull align 8 %cast.1539, i64 16, i1 false), !dbg !1274
  call void @llvm.dbg.value(metadata { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.113, metadata !1275, metadata !DIExpression(DW_OP_LLVM_fragment, 256, 64)), !dbg !1276
  %field.483 = getelementptr inbounds %Warp.0, %Warp.0* %w, i64 0, i32 2, !dbg !1277
  %.field.ld.68 = load %HostState.0*, %HostState.0** %field.483, align 8, !dbg !1277
  %icmp.145 = icmp eq %HostState.0* %.field.ld.68, null, !dbg !1278
  br i1 %icmp.145, label %then.141, label %fallthrough.141

then.141:                                         ; preds = %fallthrough.140
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.141 unwind label %pad.8.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1278

fallthrough.141:                                  ; preds = %fallthrough.140, %then.141
  %field.484 = getelementptr inbounds %HostState.0, %HostState.0* %.field.ld.68, i64 0, i32 1, !dbg !1278
  %.field.ld.69 = load %Session.0*, %Session.0** %field.484, align 8, !dbg !1278
  %icmp.146 = icmp eq %Session.0* %.field.ld.69, null, !dbg !1279
  br i1 %icmp.146, label %then.142, label %fallthrough.143

then.142:                                         ; preds = %fallthrough.141
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.143 unwind label %pad.8.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1279

fallthrough.143:                                  ; preds = %then.142, %fallthrough.141
  %field.486 = getelementptr inbounds %Session.0, %Session.0* %.field.ld.69, i64 0, i32 0, i32 1, !dbg !1280
  %cast.1569 = bitcast { i8*, i64 }* %tmpv.438 to i8*
  %cast.1570 = bitcast { i8*, i64 }* %field.486 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1569, i8* nonnull align 8 %cast.1570, i64 16, i1 false)
  %.field.ld.70 = load %HostState.0*, %HostState.0** %field.483, align 8, !dbg !1281
  invoke void @command_line_arguments.HostState.User(%User.0* nonnull sret %sret.actual.61, i8* nest undef, %HostState.0* %.field.ld.70, i64 undef, i64 undef)
          to label %cont.126 unwind label %pad.8.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1282

cont.126:                                         ; preds = %fallthrough.143
  %cast.1573 = bitcast %User.0* %tmpv.440 to i8*
  %cast.1574 = bitcast %User.0* %sret.actual.61 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1573, i8* nonnull align 8 %cast.1574, i64 48, i1 false)
  %call.114 = invoke i8* @runtime.mapassign(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7github_com_spolu_warp.User, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.113, i8* nonnull %cast.1569)
          to label %cont.127 unwind label %pad.8.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1283

cont.127:                                         ; preds = %cont.126
  %runtime.writeBarrier.ld.13 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1283
  %icmp.149 = icmp eq i32 %runtime.writeBarrier.ld.13, 0, !dbg !1283
  br i1 %icmp.149, label %then.144, label %else.144

then.144:                                         ; preds = %cont.127
  %icmp.148 = icmp eq i8* %call.114, null, !dbg !1283
  br i1 %icmp.148, label %then.145, label %fallthrough.145

else.144:                                         ; preds = %cont.127
  invoke void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @github_com_spolu_warp.User..d, i64 0, i32 0), i8* %call.114, i8* nonnull %cast.1573)
          to label %fallthrough.146 unwind label %pad.8.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1283

then.145:                                         ; preds = %then.144
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.145 unwind label %pad.8.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1283

fallthrough.145:                                  ; preds = %then.144, %then.145
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %call.114, i8* nonnull align 8 %cast.1573, i64 48, i1 false), !dbg !1283
  br label %fallthrough.146

fallthrough.146:                                  ; preds = %fallthrough.145, %else.144
  call void @llvm.dbg.value(metadata %UserState.0* null, metadata !1284, metadata !DIExpression()), !dbg !1286
  %field.489 = getelementptr inbounds %Warp.0, %Warp.0* %w, i64 0, i32 3, !dbg !1287
  %.field.ld.71 = load { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.489, align 8, !dbg !1287
  %cast.1587 = bitcast { i8*, i64 }* %tmpv.447 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %cast.1587, i8 0, i64 16, i1 false)
  %cast.1589 = bitcast %IPST.5* %tmpv.449 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %cast.1589, i8 0, i64 96, i1 false)
  invoke void @runtime.mapiterinit(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7.1command_line_arguments.UserState, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %.field.ld.71, i8* nonnull %cast.1589)
          to label %label.0.preheader unwind label %pad.8.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1288

label.0.preheader:                                ; preds = %fallthrough.146
  %field.493 = getelementptr inbounds %IPST.5, %IPST.5* %tmpv.449, i64 0, i32 0
  %field.491 = getelementptr inbounds %IPST.5, %IPST.5* %tmpv.449, i64 0, i32 1
  %cast.1599 = bitcast { i8*, i64 }* %tmpv.452 to i8*
  %cast.1602 = bitcast %User.0* %tmpv.453 to i8*
  %cast.1603 = bitcast %User.0* %sret.actual.62 to i8*
  br label %label.0, !dbg !1288

label.0:                                          ; preds = %label.0.preheader, %fallthrough.147
  %2 = phi i8* [ %3, %fallthrough.147 ], [ undef, %label.0.preheader ]
  %tmpv.449.field.ld.2 = load { i8*, i64 }*, { i8*, i64 }** %field.493, align 8, !dbg !1288
  %icmp.153 = icmp eq { i8*, i64 }* %tmpv.449.field.ld.2, null, !dbg !1288
  br i1 %icmp.153, label %else.149, label %then.149

cont.132:                                         ; preds = %then.149
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1602, i8* nonnull align 8 %cast.1603, i64 48, i1 false)
  %call.115 = invoke i8* @runtime.mapassign(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7github_com_spolu_warp.User, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.113, i8* nonnull %cast.1599)
          to label %cont.133 unwind label %pad.8.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1289

cont.133:                                         ; preds = %cont.132
  %runtime.writeBarrier.ld.14 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1289
  %icmp.152 = icmp eq i32 %runtime.writeBarrier.ld.14, 0, !dbg !1289
  br i1 %icmp.152, label %then.147, label %else.147

then.147:                                         ; preds = %cont.133
  %icmp.151 = icmp eq i8* %call.115, null, !dbg !1289
  br i1 %icmp.151, label %then.148, label %fallthrough.148

fallthrough.147:                                  ; preds = %else.147, %fallthrough.148
  %3 = phi i8* [ %4, %fallthrough.148 ], [ %2, %else.147 ]
  invoke void @runtime.mapiternext(i8* nest undef, i8* nonnull %cast.1589)
          to label %label.0 unwind label %pad.8.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1288

else.147:                                         ; preds = %cont.133
  invoke void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @github_com_spolu_warp.User..d, i64 0, i32 0), i8* %call.115, i8* nonnull %cast.1602)
          to label %fallthrough.147 unwind label %pad.8.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1289

then.148:                                         ; preds = %then.147
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.148 unwind label %pad.8.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1289

fallthrough.148:                                  ; preds = %then.147, %then.148
  %4 = phi i8* [ %2, %then.148 ], [ %call.115, %then.147 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* nonnull align 8 %cast.1602, i64 48, i1 false), !dbg !1289
  br label %fallthrough.147

then.149:                                         ; preds = %label.0
  %cast.1594 = bitcast { i8*, i64 }* %tmpv.449.field.ld.2 to i8*, !dbg !1288
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1587, i8* align 8 %cast.1594, i64 16, i1 false), !dbg !1288
  %tmpv.449.field.ld.1 = load %UserState.0**, %UserState.0*** %field.491, align 8, !dbg !1288
  %.ld.116 = load %UserState.0*, %UserState.0** %tmpv.449.field.ld.1, align 8, !dbg !1288
  call void @llvm.dbg.value(metadata %UserState.0* %.ld.116, metadata !1284, metadata !DIExpression()), !dbg !1286
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1599, i8* nonnull align 8 %cast.1587, i64 16, i1 false)
  invoke void @command_line_arguments.UserState.User(%User.0* nonnull sret %sret.actual.62, i8* nest undef, %UserState.0* %.ld.116, i64 undef, i64 undef)
          to label %cont.132 unwind label %pad.8.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1290

else.149:                                         ; preds = %label.0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %"$ret10.sroa.0.0.sroa_cast15", i8* nonnull align 8 %state.sroa.0.0.sroa_cast, i64 32, i1 false), !dbg !1291
  call void @llvm.dbg.value(metadata { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.113, metadata !1264, metadata !DIExpression(DW_OP_LLVM_fragment, 256, 64)), !dbg !1265
  br label %finally.4

catchpad.4:                                       ; preds = %pad.8.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp
  %ex2.4 = landingpad { i8*, i32 }
          cleanup
  %ex2.4.fca.0.extract = extractvalue { i8*, i32 } %ex2.4, 0
  %ex2.4.fca.1.extract = extractvalue { i8*, i32 } %ex2.4, 1
  br label %finally.4

pad.9:                                            ; preds = %finish.4
  %ex.9 = landingpad { i8*, i32 }
          catch i8* null
  call void @runtime.checkdefer(i8* nest undef, i8* nonnull %tmpv.422), !dbg !1268
  br label %finish.4

finish.4:                                         ; preds = %pad.9, %finally.4
  invoke void @runtime.deferreturn(i8* nest undef, i8* nonnull %tmpv.422)
          to label %cont.138 unwind label %pad.9, !dbg !1268

cont.138:                                         ; preds = %finish.4
  %icmp.154 = icmp eq i8 %finvar.4.0, 1
  br i1 %icmp.154, label %finret.4, label %finres.4

finres.4:                                         ; preds = %cont.138
  %excv.4.fca.0.insert = insertvalue { i8*, i32 } undef, i8* %ehtmp.4.sroa.0.0, 0
  %excv.4.fca.1.insert = insertvalue { i8*, i32 } %excv.4.fca.0.insert, i32 %ehtmp.4.sroa.2.0, 1
  resume { i8*, i32 } %excv.4.fca.1.insert

finret.4:                                         ; preds = %cont.138
  %"$ret10.sroa.0.0.cast.1617.sroa_cast" = bitcast %State.0* %sret.formal.3 to i8*, !dbg !1292
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %"$ret10.sroa.0.0.cast.1617.sroa_cast", i8* nonnull align 8 %"$ret10.sroa.0.0.sroa_cast15", i64 32, i1 false), !dbg !1292
  %"$ret10.sroa.5.0.cast.1617.sroa_idx12" = getelementptr inbounds %State.0, %State.0* %sret.formal.3, i64 0, i32 2, !dbg !1292
  store { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %"$ret10.sroa.5.1", { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %"$ret10.sroa.5.0.cast.1617.sroa_idx12", align 8, !dbg !1292
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %"$ret10.sroa.0.0.sroa_cast15"), !dbg !1292
  ret void, !dbg !1292
}

define void @command_line_arguments.Warp.handleHost(i8* nest nocapture readnone %nest.20, %Warp.0* %param, i64 %param.chunk0, i64 %param.chunk1, %Session.0* %param1) #0 !dbg !1293 {
entry:
  %tmpv.633 = alloca {}, align 8
  %tmp.88 = alloca %IPST.3, align 8
  %tmp.86 = alloca %IPST.3, align 8
  %tmpv.579 = alloca %Warp.0*, align 8
  %tmpv.581 = alloca %Context.0, align 8
  %tmpv.583 = alloca %Session.0*, align 8
  %tmpv.589 = alloca { i8*, i64 }, align 8
  %tmpv.593.sroa.0 = alloca { { i8*, i64 }, { i8*, i64 } }, align 8
  %tmpv.595 = alloca %HostState.0, align 8
  %tmpv.604 = alloca { i8*, %Warp.0**, %Context.0*, %Session.0** }, align 8
  %tmpv.607 = alloca { %__go_descriptor.10* }, align 8
  %tmpv.613 = alloca { i8*, %Context.0*, %Warp.0**, %Session.0** }, align 8
  %tmpv.616 = alloca { %__go_descriptor.10* }, align 8
  %tmpv.622 = alloca { i8*, %Warp.0**, %Session.0**, %Context.0* }, align 8
  %tmpv.625 = alloca { %__go_descriptor.10* }, align 8
  %tmpv.628 = alloca { i8*, i64 }, align 8
  %tmpv.629 = alloca [1 x %IPST.9], align 8
  %tmpv.638 = alloca { i8*, i64 }, align 8
  %tmpv.639 = alloca [1 x %IPST.9], align 8
  %sret.actual.77 = alloca %IPST.4, align 8
  call void @llvm.dbg.value(metadata %Warp.0* %param, metadata !1296, metadata !DIExpression()), !dbg !1297
  call void @llvm.dbg.value(metadata i64 %param.chunk0, metadata !1298, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1299
  call void @llvm.dbg.value(metadata i64 %param.chunk1, metadata !1298, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1299
  call void @llvm.dbg.value(metadata %Session.0* %param1, metadata !1300, metadata !DIExpression()), !dbg !1301
  %call.132 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Warp, i64 0, i32 0)), !dbg !1297
  %cast.1850 = bitcast i8* %call.132 to %Warp.0**, !dbg !1297
  store %Warp.0* %param, %Warp.0** %tmpv.579, align 8
  %cast.1853 = bitcast %Warp.0** %tmpv.579 to i8*, !dbg !1297
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Warp, i64 0, i32 0), i8* %call.132, i8* nonnull %cast.1853), !dbg !1297
  call void @llvm.dbg.value(metadata %Warp.0** %cast.1850, metadata !1302, metadata !DIExpression()), !dbg !1297
  %call.133 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @context.Context..d, i64 0, i32 0)), !dbg !1299
  %param.addr2.sroa.0.0.cast.1856.sroa_cast = bitcast %Context.0* %tmpv.581 to i64*
  store i64 %param.chunk0, i64* %param.addr2.sroa.0.0.cast.1856.sroa_cast, align 8
  %param.addr2.sroa.2.0.cast.1856.sroa_idx29 = getelementptr inbounds %Context.0, %Context.0* %tmpv.581, i64 0, i32 1
  %param.addr2.sroa.2.0.cast.1856.sroa_cast = bitcast i8** %param.addr2.sroa.2.0.cast.1856.sroa_idx29 to i64*
  store i64 %param.chunk1, i64* %param.addr2.sroa.2.0.cast.1856.sroa_cast, align 8
  %cast.1860 = bitcast %Context.0* %tmpv.581 to i8*, !dbg !1299
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @context.Context..d, i64 0, i32 0), i8* %call.133, i8* nonnull %cast.1860), !dbg !1299
  call void @llvm.dbg.value(metadata i8* %call.133, metadata !1304, metadata !DIExpression()), !dbg !1299
  %call.134 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Session, i64 0, i32 0)), !dbg !1301
  %cast.1862 = bitcast i8* %call.134 to %Session.0**, !dbg !1301
  store %Session.0* %param1, %Session.0** %tmpv.583, align 8
  %cast.1865 = bitcast %Session.0** %tmpv.583 to i8*, !dbg !1301
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Session, i64 0, i32 0), i8* %call.134, i8* nonnull %cast.1865), !dbg !1301
  call void @llvm.dbg.value(metadata %Session.0** %cast.1862, metadata !1305, metadata !DIExpression()), !dbg !1301
  %.ld.172 = load %Warp.0*, %Warp.0** %cast.1850, align 8, !dbg !1306
  %icmp.219 = icmp eq %Warp.0* %.ld.172, null, !dbg !1308
  br i1 %icmp.219, label %then.203, label %else.203

then.203:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1308
  unreachable

else.203:                                         ; preds = %entry
  %field.609 = getelementptr inbounds %Warp.0, %Warp.0* %.ld.172, i64 0, i32 5, !dbg !1308
  %.field.ld.101 = load %Mutex.0*, %Mutex.0** %field.609, align 8, !dbg !1308
  call void @sync.Mutex.Lock(i8* nest undef, %Mutex.0* %.field.ld.101), !dbg !1309
  %.ld.174 = load %Warp.0*, %Warp.0** %cast.1850, align 8, !dbg !1310
  %icmp.220 = icmp eq %Warp.0* %.ld.174, null, !dbg !1311
  br i1 %icmp.220, label %then.204, label %else.204

then.204:                                         ; preds = %else.203
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1311
  unreachable

else.204:                                         ; preds = %else.203
  %field.610 = getelementptr inbounds %Warp.0, %Warp.0* %.ld.174, i64 0, i32 2, !dbg !1311
  %.ld.176 = load %Session.0*, %Session.0** %cast.1862, align 8, !dbg !1312
  %icmp.221 = icmp eq %Session.0* %.ld.176, null, !dbg !1313
  br i1 %icmp.221, label %then.205, label %else.206

then.205:                                         ; preds = %else.204
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1313
  unreachable

else.206:                                         ; preds = %else.204
  %field.612 = getelementptr inbounds %Session.0, %Session.0* %.ld.176, i64 0, i32 0, i32 1, !dbg !1314
  %cast.1870 = bitcast { i8*, i64 }* %field.612 to i8*
  %tmpv.593.sroa.03536 = bitcast { { i8*, i64 }, { i8*, i64 } }* %tmpv.593.sroa.0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %tmpv.593.sroa.03536, i8* nonnull align 8 %cast.1870, i64 16, i1 false)
  %field.613 = getelementptr inbounds %Session.0, %Session.0* %.ld.176, i64 0, i32 3, !dbg !1315
  %cast.1872 = bitcast { i8*, i64 }* %tmpv.589 to i8*
  %cast.1873 = bitcast { i8*, i64 }* %field.613 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1872, i8* nonnull align 8 %cast.1873, i64 16, i1 false)
  %call.135 = call { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* @__go_construct_map(i8* nest undef, i8* bitcast (%MapType.0* @type..map.6string.7.1command_line_arguments.Session to i8*), i64 0, i64 24, i64 16, i8* null), !dbg !1316
  %tmpv.593.sroa.0.0.sroa_cast18 = bitcast { { i8*, i64 }, { i8*, i64 } }* %tmpv.593.sroa.0 to i8*, !dbg !1317
  %tmpv.593.sroa.0.16.sroa_idx = getelementptr inbounds { { i8*, i64 }, { i8*, i64 } }, { { i8*, i64 }, { i8*, i64 } }* %tmpv.593.sroa.0, i64 0, i32 1, !dbg !1317
  %tmpv.593.sroa.0.16.sroa_cast = bitcast { i8*, i64 }* %tmpv.593.sroa.0.16.sroa_idx to i8*, !dbg !1317
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %tmpv.593.sroa.0.16.sroa_cast, i8* nonnull align 8 %cast.1872, i64 16, i1 false), !dbg !1317
  %call.136 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.HostState..d, i64 0, i32 0)), !dbg !1318
  %0 = bitcast i8* %call.134 to i64*, !dbg !1319
  %.ld.18032 = load i64, i64* %0, align 8, !dbg !1319
  %tmpv.593.sroa.0.0.cast.1883.sroa_cast = bitcast %HostState.0* %tmpv.595 to i8*, !dbg !1320
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %tmpv.593.sroa.0.0.cast.1883.sroa_cast, i8* nonnull align 8 %tmpv.593.sroa.0.0.sroa_cast18, i64 32, i1 false), !dbg !1320
  %tmpv.593.sroa.3.0.cast.1883.sroa_idx19 = getelementptr inbounds %HostState.0, %HostState.0* %tmpv.595, i64 0, i32 0, i32 2, !dbg !1320
  store i64 3, i64* %tmpv.593.sroa.3.0.cast.1883.sroa_idx19, align 8, !dbg !1320
  %tmpv.593.sroa.4.0.cast.1883.sroa_idx20 = getelementptr inbounds %HostState.0, %HostState.0* %tmpv.595, i64 0, i32 0, i32 3, !dbg !1320
  store { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.135, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %tmpv.593.sroa.4.0.cast.1883.sroa_idx20, align 8, !dbg !1320
  %field.619 = getelementptr inbounds %HostState.0, %HostState.0* %tmpv.595, i64 0, i32 1, !dbg !1320
  %1 = bitcast %Session.0** %field.619 to i64*, !dbg !1320
  store i64 %.ld.18032, i64* %1, align 8, !dbg !1320
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.HostState..d, i64 0, i32 0), i8* %call.136, i8* nonnull %tmpv.593.sroa.0.0.cast.1883.sroa_cast), !dbg !1318
  %runtime.writeBarrier.ld.17 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1321
  %icmp.224 = icmp eq i32 %runtime.writeBarrier.ld.17, 0, !dbg !1321
  br i1 %icmp.224, label %else.208, label %else.207

fallthrough.207:                                  ; preds = %else.207, %else.208
  %.ld.182 = load %Warp.0*, %Warp.0** %cast.1850, align 8, !dbg !1322
  %icmp.225 = icmp eq %Warp.0* %.ld.182, null, !dbg !1323
  br i1 %icmp.225, label %then.209, label %else.209

else.207:                                         ; preds = %else.206
  %cast.1889 = bitcast %HostState.0** %field.610 to i8*, !dbg !1321
  call void @runtime.writebarrierptr(i8* nest undef, i8* nonnull %cast.1889, i8* %call.136), !dbg !1321
  br label %fallthrough.207

else.208:                                         ; preds = %else.206
  %2 = bitcast %HostState.0** %field.610 to i8**, !dbg !1321
  store i8* %call.136, i8** %2, align 8, !dbg !1321
  br label %fallthrough.207

then.209:                                         ; preds = %fallthrough.207
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1323
  unreachable

else.209:                                         ; preds = %fallthrough.207
  %field.620 = getelementptr inbounds %Warp.0, %Warp.0* %.ld.182, i64 0, i32 5, !dbg !1323
  %.field.ld.102 = load %Mutex.0*, %Mutex.0** %field.620, align 8, !dbg !1323
  call void @sync.Mutex.Unlock(i8* nest undef, %Mutex.0* %.field.ld.102), !dbg !1324
  %call.137 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.4x.5.f.f.0.1.4void.5.2.command_line_arguments.w1.0.1.1command_line_arguments.Warp.2.command_line_arguments.ctx2.0.1context.Context.2.command_line_arguments.ss3.0.1.1command_line_arguments.Session.5, i64 0, i32 0)), !dbg !1325
  %field.621 = getelementptr inbounds { i8*, %Warp.0**, %Context.0*, %Session.0** }, { i8*, %Warp.0**, %Context.0*, %Session.0** }* %tmpv.604, i64 0, i32 0, !dbg !1325
  store i8* bitcast (void (i8*)* @command_line_arguments..1command_line_arguments.Warp.handleHost..func1 to i8*), i8** %field.621, align 8, !dbg !1325
  %field.622 = getelementptr inbounds { i8*, %Warp.0**, %Context.0*, %Session.0** }, { i8*, %Warp.0**, %Context.0*, %Session.0** }* %tmpv.604, i64 0, i32 1, !dbg !1325
  %3 = bitcast %Warp.0*** %field.622 to i8**, !dbg !1325
  store i8* %call.132, i8** %3, align 8, !dbg !1325
  %field.623 = getelementptr inbounds { i8*, %Warp.0**, %Context.0*, %Session.0** }, { i8*, %Warp.0**, %Context.0*, %Session.0** }* %tmpv.604, i64 0, i32 2, !dbg !1325
  %4 = bitcast %Context.0** %field.623 to i8**, !dbg !1325
  store i8* %call.133, i8** %4, align 8, !dbg !1325
  %field.624 = getelementptr inbounds { i8*, %Warp.0**, %Context.0*, %Session.0** }, { i8*, %Warp.0**, %Context.0*, %Session.0** }* %tmpv.604, i64 0, i32 3, !dbg !1325
  %5 = bitcast %Session.0*** %field.624 to i8**, !dbg !1325
  store i8* %call.134, i8** %5, align 8, !dbg !1325
  %cast.1901 = bitcast { i8*, %Warp.0**, %Context.0*, %Session.0** }* %tmpv.604 to i8*, !dbg !1325
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.4x.5.f.f.0.1.4void.5.2.command_line_arguments.w1.0.1.1command_line_arguments.Warp.2.command_line_arguments.ctx2.0.1context.Context.2.command_line_arguments.ss3.0.1.1command_line_arguments.Session.5, i64 0, i32 0), i8* %call.137, i8* nonnull %cast.1901), !dbg !1325
  %icmp.226 = icmp eq i8* %call.137, null, !dbg !1326
  br i1 %icmp.226, label %then.210, label %else.210

then.210:                                         ; preds = %else.209
  call void @__go_runtime_error(i8* nest undef, i32 11), !dbg !1326
  unreachable

else.210:                                         ; preds = %else.209
  %call.138 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.4x.5fn.0func.8.9.8.9.5, i64 0, i32 0)), !dbg !1326
  %6 = bitcast { %__go_descriptor.10* }* %tmpv.607 to i8**, !dbg !1326
  store i8* %call.137, i8** %6, align 8, !dbg !1326
  %cast.1908 = bitcast { %__go_descriptor.10* }* %tmpv.607 to i8*, !dbg !1326
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.4x.5fn.0func.8.9.8.9.5, i64 0, i32 0), i8* %call.138, i8* nonnull %cast.1908), !dbg !1326
  call void @__go_go(i8* nest undef, %__go_descriptor.50* bitcast (void (i8*, { %__go_descriptor.10* }*)* @command_line_arguments.command_line_arguments..thunk8 to %__go_descriptor.50*), i8* %call.138), !dbg !1326
  %call.139 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.4x.5.f.f.0.1.4void.5.2.command_line_arguments.ctx1.0.1context.Context.2.command_line_arguments.w2.0.1.1command_line_arguments.Warp.2.command_line_arguments.ss3.0.1.1command_line_arguments.Session.5, i64 0, i32 0)), !dbg !1327
  %field.626 = getelementptr inbounds { i8*, %Context.0*, %Warp.0**, %Session.0** }, { i8*, %Context.0*, %Warp.0**, %Session.0** }* %tmpv.613, i64 0, i32 0, !dbg !1327
  store i8* bitcast (void (i8*)* @command_line_arguments..1command_line_arguments.Warp.handleHost..func2 to i8*), i8** %field.626, align 8, !dbg !1327
  %field.627 = getelementptr inbounds { i8*, %Context.0*, %Warp.0**, %Session.0** }, { i8*, %Context.0*, %Warp.0**, %Session.0** }* %tmpv.613, i64 0, i32 1, !dbg !1327
  %7 = bitcast %Context.0** %field.627 to i8**, !dbg !1327
  store i8* %call.133, i8** %7, align 8, !dbg !1327
  %field.628 = getelementptr inbounds { i8*, %Context.0*, %Warp.0**, %Session.0** }, { i8*, %Context.0*, %Warp.0**, %Session.0** }* %tmpv.613, i64 0, i32 2, !dbg !1327
  %8 = bitcast %Warp.0*** %field.628 to i8**, !dbg !1327
  store i8* %call.132, i8** %8, align 8, !dbg !1327
  %field.629 = getelementptr inbounds { i8*, %Context.0*, %Warp.0**, %Session.0** }, { i8*, %Context.0*, %Warp.0**, %Session.0** }* %tmpv.613, i64 0, i32 3, !dbg !1327
  %9 = bitcast %Session.0*** %field.629 to i8**, !dbg !1327
  store i8* %call.134, i8** %9, align 8, !dbg !1327
  %cast.1920 = bitcast { i8*, %Context.0*, %Warp.0**, %Session.0** }* %tmpv.613 to i8*, !dbg !1327
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.4x.5.f.f.0.1.4void.5.2.command_line_arguments.ctx1.0.1context.Context.2.command_line_arguments.w2.0.1.1command_line_arguments.Warp.2.command_line_arguments.ss3.0.1.1command_line_arguments.Session.5, i64 0, i32 0), i8* %call.139, i8* nonnull %cast.1920), !dbg !1327
  %icmp.227 = icmp eq i8* %call.139, null, !dbg !1328
  br i1 %icmp.227, label %then.211, label %else.211

then.211:                                         ; preds = %else.210
  call void @__go_runtime_error(i8* nest undef, i32 11), !dbg !1328
  unreachable

else.211:                                         ; preds = %else.210
  %call.140 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.4x.5fn.0func.8.9.8.9.5, i64 0, i32 0)), !dbg !1328
  %10 = bitcast { %__go_descriptor.10* }* %tmpv.616 to i8**, !dbg !1328
  store i8* %call.139, i8** %10, align 8, !dbg !1328
  %cast.1927 = bitcast { %__go_descriptor.10* }* %tmpv.616 to i8*, !dbg !1328
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.4x.5fn.0func.8.9.8.9.5, i64 0, i32 0), i8* %call.140, i8* nonnull %cast.1927), !dbg !1328
  call void @__go_go(i8* nest undef, %__go_descriptor.50* bitcast (void (i8*, { %__go_descriptor.10* }*)* @command_line_arguments.command_line_arguments..thunk9 to %__go_descriptor.50*), i8* %call.140), !dbg !1328
  %call.141 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.4x.5.f.f.0.1.4void.5.2.command_line_arguments.w1.0.1.1command_line_arguments.Warp.2.command_line_arguments.ss2.0.1.1command_line_arguments.Session.2.command_line_arguments.ctx3.0.1context.Context.5, i64 0, i32 0)), !dbg !1329
  %field.631 = getelementptr inbounds { i8*, %Warp.0**, %Session.0**, %Context.0* }, { i8*, %Warp.0**, %Session.0**, %Context.0* }* %tmpv.622, i64 0, i32 0, !dbg !1329
  store i8* bitcast (void (i8*)* @command_line_arguments..1command_line_arguments.Warp.handleHost..func4 to i8*), i8** %field.631, align 8, !dbg !1329
  %field.632 = getelementptr inbounds { i8*, %Warp.0**, %Session.0**, %Context.0* }, { i8*, %Warp.0**, %Session.0**, %Context.0* }* %tmpv.622, i64 0, i32 1, !dbg !1329
  %11 = bitcast %Warp.0*** %field.632 to i8**, !dbg !1329
  store i8* %call.132, i8** %11, align 8, !dbg !1329
  %field.633 = getelementptr inbounds { i8*, %Warp.0**, %Session.0**, %Context.0* }, { i8*, %Warp.0**, %Session.0**, %Context.0* }* %tmpv.622, i64 0, i32 2, !dbg !1329
  %12 = bitcast %Session.0*** %field.633 to i8**, !dbg !1329
  store i8* %call.134, i8** %12, align 8, !dbg !1329
  %field.634 = getelementptr inbounds { i8*, %Warp.0**, %Session.0**, %Context.0* }, { i8*, %Warp.0**, %Session.0**, %Context.0* }* %tmpv.622, i64 0, i32 3, !dbg !1329
  %13 = bitcast %Context.0** %field.634 to i8**, !dbg !1329
  store i8* %call.133, i8** %13, align 8, !dbg !1329
  %cast.1939 = bitcast { i8*, %Warp.0**, %Session.0**, %Context.0* }* %tmpv.622 to i8*, !dbg !1329
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.4x.5.f.f.0.1.4void.5.2.command_line_arguments.w1.0.1.1command_line_arguments.Warp.2.command_line_arguments.ss2.0.1.1command_line_arguments.Session.2.command_line_arguments.ctx3.0.1context.Context.5, i64 0, i32 0), i8* %call.141, i8* nonnull %cast.1939), !dbg !1329
  %icmp.228 = icmp eq i8* %call.141, null, !dbg !1330
  br i1 %icmp.228, label %then.212, label %else.212

then.212:                                         ; preds = %else.211
  call void @__go_runtime_error(i8* nest undef, i32 11), !dbg !1330
  unreachable

else.212:                                         ; preds = %else.211
  %call.142 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.4x.5fn.0func.8.9.8.9.5, i64 0, i32 0)), !dbg !1330
  %14 = bitcast { %__go_descriptor.10* }* %tmpv.625 to i8**, !dbg !1330
  store i8* %call.141, i8** %14, align 8, !dbg !1330
  %cast.1946 = bitcast { %__go_descriptor.10* }* %tmpv.625 to i8*, !dbg !1330
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.4x.5fn.0func.8.9.8.9.5, i64 0, i32 0), i8* %call.142, i8* nonnull %cast.1946), !dbg !1330
  call void @__go_go(i8* nest undef, %__go_descriptor.50* bitcast (void (i8*, { %__go_descriptor.10* }*)* @command_line_arguments.command_line_arguments..thunk10 to %__go_descriptor.50*), i8* %call.142), !dbg !1330
  %.ld.184 = load %Warp.0*, %Warp.0** %cast.1850, align 8, !dbg !1331
  %field0.122 = bitcast i8* %call.133 to i64*, !dbg !1332
  %ld.216 = load i64, i64* %field0.122, align 8, !dbg !1332
  %field1.122 = getelementptr inbounds i8, i8* %call.133, i64 8, !dbg !1332
  %15 = bitcast i8* %field1.122 to i64*, !dbg !1332
  %ld.217 = load i64, i64* %15, align 8, !dbg !1332
  call void @command_line_arguments.Warp.updateHost(i8* nest undef, %Warp.0* %.ld.184, i64 %ld.216, i64 %ld.217), !dbg !1332
  %.ld.185 = load %Warp.0*, %Warp.0** %cast.1850, align 8, !dbg !1333
  %ld.218 = load i64, i64* %field0.122, align 8, !dbg !1334
  %ld.219 = load i64, i64* %15, align 8, !dbg !1334
  call void @command_line_arguments.Warp.updateClientSessions(i8* nest undef, %Warp.0* %.ld.185, i64 %ld.218, i64 %ld.219), !dbg !1334
  %.ld.186 = load %Session.0*, %Session.0** %cast.1862, align 8, !dbg !1335
  %call.143 = call { i64, i64 } @command_line_arguments.Session.ToString(i8* nest undef, %Session.0* %.ld.186), !dbg !1336
  %call.143.fca.0.extract = extractvalue { i64, i64 } %call.143, 0, !dbg !1336
  %call.143.fca.1.extract = extractvalue { i64, i64 } %call.143, 1, !dbg !1336
  %call.144 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !1337
  %tmpv.626.sroa.0.0.cast.1955.sroa_cast = bitcast { i8*, i64 }* %tmpv.628 to i64*
  store i64 %call.143.fca.0.extract, i64* %tmpv.626.sroa.0.0.cast.1955.sroa_cast, align 8
  %tmpv.626.sroa.2.0.cast.1955.sroa_idx17 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.628, i64 0, i32 1
  store i64 %call.143.fca.1.extract, i64* %tmpv.626.sroa.2.0.cast.1955.sroa_idx17, align 8
  %cast.1958 = bitcast { i8*, i64 }* %tmpv.628 to i8*, !dbg !1337
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.144, i8* nonnull %cast.1958), !dbg !1337
  %tmp.85.sroa.0.0.cast.1960.sroa_idx = getelementptr inbounds [1 x %IPST.9], [1 x %IPST.9]* %tmpv.629, i64 0, i64 0, i32 0, !dbg !1337
  store %_type.0* @string..d, %_type.0** %tmp.85.sroa.0.0.cast.1960.sroa_idx, align 8, !dbg !1337
  %tmp.85.sroa.2.0.cast.1960.sroa_idx30 = getelementptr inbounds [1 x %IPST.9], [1 x %IPST.9]* %tmpv.629, i64 0, i64 0, i32 1, !dbg !1337
  store i8* %call.144, i8** %tmp.85.sroa.2.0.cast.1960.sroa_idx30, align 8, !dbg !1337
  %field.638 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.86, i64 0, i32 0, !dbg !1337
  %cast.1964 = getelementptr inbounds [1 x %IPST.9], [1 x %IPST.9]* %tmpv.629, i64 0, i64 0, !dbg !1337
  store %IPST.9* %cast.1964, %IPST.9** %field.638, align 8, !dbg !1337
  %field.639 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.86, i64 0, i32 1, !dbg !1337
  store i64 1, i64* %field.639, align 8, !dbg !1337
  %field.640 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.86, i64 0, i32 2, !dbg !1337
  store i64 1, i64* %field.640, align 8, !dbg !1337
  %ld.220 = load i64, i64* %field0.122, align 8, !dbg !1337
  %ld.221 = load i64, i64* %15, align 8, !dbg !1337
  call void @github_com_spolu_warp_lib_logging.Logf(i8* nest undef, i64 %ld.220, i64 %ld.221, i64 ptrtoint ([33 x i8]* @const.269 to i64), i64 32, %IPST.3* byval nonnull %tmp.86), !dbg !1337
  %.ld.187 = load %Session.0*, %Session.0** %cast.1862, align 8, !dbg !1338
  %icmp.229 = icmp eq %Session.0* %.ld.187, null, !dbg !1339
  br i1 %icmp.229, label %then.213, label %else.213

then.213:                                         ; preds = %else.212
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1339
  unreachable

else.213:                                         ; preds = %else.212
  %tmpv.630.sroa.0.0.cast.1967.sroa_idx = getelementptr inbounds %Session.0, %Session.0* %.ld.187, i64 0, i32 14, i32 0
  %tmpv.630.sroa.0.0.copyload = load { %_type.0*, void ({ %Time.0, i8 }*, i8*, i8*)*, {}* (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, i64, i64)* }*, { %_type.0*, void ({ %Time.0, i8 }*, i8*, i8*)*, {}* (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, i64, i64)* }** %tmpv.630.sroa.0.0.cast.1967.sroa_idx, align 8
  %tmpv.630.sroa.2.0.cast.1967.sroa_idx15 = getelementptr inbounds %Session.0, %Session.0* %.ld.187, i64 0, i32 14, i32 1
  %tmpv.630.sroa.2.0.copyload = load i8*, i8** %tmpv.630.sroa.2.0.cast.1967.sroa_idx15, align 8
  %field.643 = getelementptr inbounds { %_type.0*, void ({ %Time.0, i8 }*, i8*, i8*)*, {}* (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, i64, i64)* }, { %_type.0*, void ({ %Time.0, i8 }*, i8*, i8*)*, {}* (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, i64, i64)* }* %tmpv.630.sroa.0.0.copyload, i64 0, i32 2, !dbg !1340
  %.field.ld.103 = load {}* (i8*, i8*)*, {}* (i8*, i8*)** %field.643, align 8, !dbg !1340
  %call.145 = call {}* %.field.ld.103(i8* nest undef, i8* %tmpv.630.sroa.2.0.copyload), !dbg !1340
  %cast.1968 = bitcast {}* %tmpv.633 to i8*, !dbg !1341
  call void @runtime.chanrecv1(i8* nest undef, {}* %call.145, i8* nonnull %cast.1968), !dbg !1341
  %.ld.189 = load %Warp.0*, %Warp.0** %cast.1850, align 8, !dbg !1342
  %icmp.230 = icmp eq %Warp.0* %.ld.189, null, !dbg !1343
  br i1 %icmp.230, label %then.214, label %else.214

then.214:                                         ; preds = %else.213
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1343
  unreachable

else.214:                                         ; preds = %else.213
  %field.645 = getelementptr inbounds %Warp.0, %Warp.0* %.ld.189, i64 0, i32 4, !dbg !1343
  %.field.ld.104 = load {}*, {}** %field.645, align 8, !dbg !1343
  call void @runtime.closechan(i8* nest undef, {}* %.field.ld.104), !dbg !1344
  %.ld.191 = load %Session.0*, %Session.0** %cast.1862, align 8, !dbg !1345
  %call.146 = call { i64, i64 } @command_line_arguments.Session.ToString(i8* nest undef, %Session.0* %.ld.191), !dbg !1346
  %call.146.fca.0.extract = extractvalue { i64, i64 } %call.146, 0, !dbg !1346
  %call.146.fca.1.extract = extractvalue { i64, i64 } %call.146, 1, !dbg !1346
  %call.147 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !1347
  %tmpv.636.sroa.0.0.cast.1974.sroa_cast = bitcast { i8*, i64 }* %tmpv.638 to i64*
  store i64 %call.146.fca.0.extract, i64* %tmpv.636.sroa.0.0.cast.1974.sroa_cast, align 8
  %tmpv.636.sroa.2.0.cast.1974.sroa_idx14 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.638, i64 0, i32 1
  store i64 %call.146.fca.1.extract, i64* %tmpv.636.sroa.2.0.cast.1974.sroa_idx14, align 8
  %cast.1977 = bitcast { i8*, i64 }* %tmpv.638 to i8*, !dbg !1347
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.147, i8* nonnull %cast.1977), !dbg !1347
  %tmp.87.sroa.0.0.cast.1979.sroa_idx = getelementptr inbounds [1 x %IPST.9], [1 x %IPST.9]* %tmpv.639, i64 0, i64 0, i32 0, !dbg !1347
  store %_type.0* @string..d, %_type.0** %tmp.87.sroa.0.0.cast.1979.sroa_idx, align 8, !dbg !1347
  %tmp.87.sroa.2.0.cast.1979.sroa_idx31 = getelementptr inbounds [1 x %IPST.9], [1 x %IPST.9]* %tmpv.639, i64 0, i64 0, i32 1, !dbg !1347
  store i8* %call.147, i8** %tmp.87.sroa.2.0.cast.1979.sroa_idx31, align 8, !dbg !1347
  %field.648 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.88, i64 0, i32 0, !dbg !1347
  %cast.1983 = getelementptr inbounds [1 x %IPST.9], [1 x %IPST.9]* %tmpv.639, i64 0, i64 0, !dbg !1347
  store %IPST.9* %cast.1983, %IPST.9** %field.648, align 8, !dbg !1347
  %field.649 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.88, i64 0, i32 1, !dbg !1347
  store i64 1, i64* %field.649, align 8, !dbg !1347
  %field.650 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.88, i64 0, i32 2, !dbg !1347
  store i64 1, i64* %field.650, align 8, !dbg !1347
  %ld.224 = load i64, i64* %field0.122, align 8, !dbg !1347
  %ld.225 = load i64, i64* %15, align 8, !dbg !1347
  call void @github_com_spolu_warp_lib_logging.Logf(i8* nest undef, i64 %ld.224, i64 %ld.225, i64 ptrtoint ([35 x i8]* @const.271 to i64), i64 34, %IPST.3* byval nonnull %tmp.88), !dbg !1347
  %.ld.192 = load %Warp.0*, %Warp.0** %cast.1850, align 8, !dbg !1348
  call void @command_line_arguments.Warp.CientSessions(%IPST.4* nonnull sret %sret.actual.77, i8* nest undef, %Warp.0* %.ld.192, i64 undef, i64 undef), !dbg !1349
  %sessions.sroa.0.0.cast.1986.sroa_idx = getelementptr inbounds %IPST.4, %IPST.4* %sret.actual.77, i64 0, i32 0
  %sessions.sroa.0.0.copyload = load %Session.0**, %Session.0*** %sessions.sroa.0.0.cast.1986.sroa_idx, align 8
  call void @llvm.dbg.value(metadata %Session.0** %sessions.sroa.0.0.copyload, metadata !1350, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1351
  %sessions.sroa.4.0.cast.1986.sroa_idx22 = getelementptr inbounds %IPST.4, %IPST.4* %sret.actual.77, i64 0, i32 1
  %sessions.sroa.4.0.copyload = load i64, i64* %sessions.sroa.4.0.cast.1986.sroa_idx22, align 8
  call void @llvm.dbg.value(metadata i64 %sessions.sroa.4.0.copyload, metadata !1350, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1351
  call void @llvm.dbg.value(metadata %IPST.4* %sret.actual.77, metadata !1350, metadata !DIExpression(DW_OP_plus_uconst, 16, DW_OP_deref, DW_OP_stack_value, DW_OP_LLVM_fragment, 128, 64)), !dbg !1351
  call void @llvm.dbg.value(metadata %Session.0* null, metadata !1352, metadata !DIExpression()), !dbg !1354
  %icmp.23333 = icmp sgt i64 %sessions.sroa.4.0.copyload, 0, !dbg !1355
  br i1 %icmp.23333, label %else.215, label %else.216

else.215:                                         ; preds = %else.214, %else.215
  %tmpv.640.034 = phi i64 [ %add.6, %else.215 ], [ 0, %else.214 ]
  %ptroff.6 = getelementptr %Session.0*, %Session.0** %sessions.sroa.0.0.copyload, i64 %tmpv.640.034, !dbg !1355
  %.ptroff.ld.2 = load %Session.0*, %Session.0** %ptroff.6, align 8, !dbg !1355
  call void @llvm.dbg.value(metadata %Session.0* %.ptroff.ld.2, metadata !1352, metadata !DIExpression()), !dbg !1354
  %ld.230 = load i64, i64* %field0.122, align 8, !dbg !1356
  %ld.231 = load i64, i64* %15, align 8, !dbg !1356
  call void @command_line_arguments.Session.SendError(i8* nest undef, %Session.0* %.ptroff.ld.2, i64 %ld.230, i64 %ld.231, i64 ptrtoint ([18 x i8]* @const.273 to i64), i64 17, { i8*, i64 }* byval nonnull @const.276), !dbg !1356
  call void @command_line_arguments.Session.TearDown(i8* nest undef, %Session.0* %.ptroff.ld.2), !dbg !1357
  %add.6 = add nuw nsw i64 %tmpv.640.034, 1, !dbg !1355
  %exitcond = icmp eq i64 %add.6, %sessions.sroa.4.0.copyload, !dbg !1355
  br i1 %exitcond, label %else.216, label %else.215

else.216:                                         ; preds = %else.215, %else.214
  ret void
}

define void @command_line_arguments.Warp.handleShellClient(i8* nest nocapture readnone %nest.25, %Warp.0* %param, i64 %param.chunk0, i64 %param.chunk1, %Session.0* %param1) #0 !dbg !1358 {
entry:
  %tmpv.856 = alloca {}, align 8
  %tmp.110 = alloca %IPST.3, align 8
  %tmp.108 = alloca %IPST.3, align 8
  %tmpv.738 = alloca %Warp.0*, align 8
  %tmpv.740 = alloca %Context.0, align 8
  %tmpv.742 = alloca %Session.0*, align 8
  %tmpv.743 = alloca %UserState.0*, align 8
  %tmpv.754 = alloca { i8*, i64 }, align 8
  %tmpv.768 = alloca { i8*, i64 }, align 8
  %tmpv.775 = alloca { i8*, i64 }, align 8
  %tmpv.785 = alloca { i8*, i64 }, align 8
  %tmpv.787 = alloca { i8*, i64 }, align 8
  %tmpv.789 = alloca { i8*, i64 }, align 8
  %tmpv.794 = alloca %UserState.0, align 8
  %tmpv.802 = alloca { i8*, %UserState.0** }, align 8
  %tmpv.808 = alloca { i8*, i64 }, align 8
  %tmpv.813 = alloca { i8*, i64 }, align 8
  %tmpv.825 = alloca { i8*, i64 }, align 8
  %tmpv.830 = alloca { i8*, i64 }, align 8
  %tmpv.845 = alloca { i8*, %Context.0*, %Warp.0**, %Session.0** }, align 8
  %tmpv.848 = alloca { %__go_descriptor.10* }, align 8
  %tmpv.851 = alloca { i8*, i64 }, align 8
  %tmpv.852 = alloca [1 x %IPST.9], align 8
  %tmpv.860 = alloca { i8*, i64 }, align 8
  %tmpv.861 = alloca [1 x %IPST.9], align 8
  %tmpv.867 = alloca { i8*, i64 }, align 8
  %tmpv.869 = alloca { i8*, i64 }, align 8
  %tmpv.876 = alloca { i8*, i64 }, align 8
  %tmpv.878 = alloca { i8*, i64 }, align 8
  %tmpv.887 = alloca { i8*, i64 }, align 8
  call void @llvm.dbg.value(metadata %Warp.0* %param, metadata !1359, metadata !DIExpression()), !dbg !1360
  call void @llvm.dbg.value(metadata i64 %param.chunk0, metadata !1361, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1362
  call void @llvm.dbg.value(metadata i64 %param.chunk1, metadata !1361, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1362
  call void @llvm.dbg.value(metadata %Session.0* %param1, metadata !1363, metadata !DIExpression()), !dbg !1364
  %call.173 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Warp, i64 0, i32 0)), !dbg !1360
  %cast.2236 = bitcast i8* %call.173 to %Warp.0**, !dbg !1360
  store %Warp.0* %param, %Warp.0** %tmpv.738, align 8
  %cast.2239 = bitcast %Warp.0** %tmpv.738 to i8*, !dbg !1360
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Warp, i64 0, i32 0), i8* %call.173, i8* nonnull %cast.2239), !dbg !1360
  call void @llvm.dbg.value(metadata %Warp.0** %cast.2236, metadata !1365, metadata !DIExpression()), !dbg !1360
  %call.174 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @context.Context..d, i64 0, i32 0)), !dbg !1362
  %param.addr2.sroa.0.0.cast.2242.sroa_cast = bitcast %Context.0* %tmpv.740 to i64*
  store i64 %param.chunk0, i64* %param.addr2.sroa.0.0.cast.2242.sroa_cast, align 8
  %param.addr2.sroa.2.0.cast.2242.sroa_idx26 = getelementptr inbounds %Context.0, %Context.0* %tmpv.740, i64 0, i32 1
  %param.addr2.sroa.2.0.cast.2242.sroa_cast = bitcast i8** %param.addr2.sroa.2.0.cast.2242.sroa_idx26 to i64*
  store i64 %param.chunk1, i64* %param.addr2.sroa.2.0.cast.2242.sroa_cast, align 8
  %cast.2246 = bitcast %Context.0* %tmpv.740 to i8*, !dbg !1362
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @context.Context..d, i64 0, i32 0), i8* %call.174, i8* nonnull %cast.2246), !dbg !1362
  call void @llvm.dbg.value(metadata i8* %call.174, metadata !1366, metadata !DIExpression()), !dbg !1362
  %call.175 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Session, i64 0, i32 0)), !dbg !1364
  %cast.2248 = bitcast i8* %call.175 to %Session.0**, !dbg !1364
  store %Session.0* %param1, %Session.0** %tmpv.742, align 8
  %cast.2251 = bitcast %Session.0** %tmpv.742 to i8*, !dbg !1364
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Session, i64 0, i32 0), i8* %call.175, i8* nonnull %cast.2251), !dbg !1364
  call void @llvm.dbg.value(metadata %Session.0** %cast.2248, metadata !1367, metadata !DIExpression()), !dbg !1364
  call void @llvm.dbg.value(metadata %UserState.0* null, metadata !1368, metadata !DIExpression()), !dbg !1371
  store %UserState.0* null, %UserState.0** %tmpv.743, align 8
  %.ld.242 = load %Warp.0*, %Warp.0** %cast.2236, align 8, !dbg !1372
  %icmp.263 = icmp eq %Warp.0* %.ld.242, null, !dbg !1373
  br i1 %icmp.263, label %then.245, label %else.245

then.245:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1373
  unreachable

else.245:                                         ; preds = %entry
  %field.813 = getelementptr inbounds %Warp.0, %Warp.0* %.ld.242, i64 0, i32 5, !dbg !1373
  %.field.ld.173 = load %Mutex.0*, %Mutex.0** %field.813, align 8, !dbg !1373
  call void @sync.Mutex.Lock(i8* nest undef, %Mutex.0* %.field.ld.173), !dbg !1374
  call void @llvm.dbg.value(metadata i8 0, metadata !1375, metadata !DIExpression()), !dbg !1376
  %.ld.244 = load %Warp.0*, %Warp.0** %cast.2236, align 8, !dbg !1377
  %icmp.264 = icmp eq %Warp.0* %.ld.244, null, !dbg !1378
  br i1 %icmp.264, label %then.246, label %else.246

then.246:                                         ; preds = %else.245
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1378
  unreachable

else.246:                                         ; preds = %else.245
  %field.814 = getelementptr inbounds %Warp.0, %Warp.0* %.ld.244, i64 0, i32 2, !dbg !1378
  %.field.ld.174 = load %HostState.0*, %HostState.0** %field.814, align 8, !dbg !1378
  %.ld.307 = load %Session.0*, %Session.0** %cast.2248, align 8, !dbg !1379
  %icmp.302 = icmp eq %Session.0* %.ld.307, null, !dbg !1380
  br i1 %icmp.302, label %then.247, label %else.247

then.247:                                         ; preds = %else.246
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1380
  unreachable

else.247:                                         ; preds = %else.246
  %icmp.303 = icmp eq %HostState.0* %.field.ld.174, null, !dbg !1381
  br i1 %icmp.303, label %then.248, label %else.248

then.248:                                         ; preds = %else.247
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1381
  unreachable

else.248:                                         ; preds = %else.247
  %field.871 = getelementptr inbounds %Session.0, %Session.0* %.ld.307, i64 0, i32 0, i32 1, !dbg !1382
  %field0.166 = bitcast { i8*, i64 }* %field.871 to i64*, !dbg !1383
  %ld.302 = load i64, i64* %field0.166, align 8, !dbg !1383
  %0 = getelementptr inbounds %Session.0, %Session.0* %.ld.307, i64 0, i32 0, i32 1, i32 1, !dbg !1383
  %ld.303 = load i64, i64* %0, align 8, !dbg !1383
  %field0.167 = bitcast %HostState.0* %.field.ld.174 to i64*, !dbg !1383
  %ld.304 = load i64, i64* %field0.167, align 8, !dbg !1383
  %1 = getelementptr inbounds %HostState.0, %HostState.0* %.field.ld.174, i64 0, i32 0, i32 0, i32 1, !dbg !1383
  %ld.305 = load i64, i64* %1, align 8, !dbg !1383
  %call.189 = call i8 @runtime.eqstring(i8* nest undef, i64 %ld.302, i64 %ld.303, i64 %ld.304, i64 %ld.305), !dbg !1383
  %icmp.304 = icmp eq i8 %call.189, 1, !dbg !1383
  br i1 %icmp.304, label %then.249, label %else.249

then.249:                                         ; preds = %else.248
  %.ld.246 = load %Warp.0*, %Warp.0** %cast.2236, align 8, !dbg !1384
  %icmp.265 = icmp eq %Warp.0* %.ld.246, null, !dbg !1385
  br i1 %icmp.265, label %then.250, label %else.250

fallthrough.249:                                  ; preds = %else.288, %else.287, %else.264, %else.263
  %isHostSession.0 = phi i1 [ true, %else.264 ], [ true, %else.263 ], [ false, %else.288 ], [ false, %else.287 ]
  %.ld.310 = load %Warp.0*, %Warp.0** %cast.2236, align 8, !dbg !1386
  %icmp.305 = icmp eq %Warp.0* %.ld.310, null, !dbg !1387
  br i1 %icmp.305, label %then.289, label %else.289

else.249:                                         ; preds = %else.248
  call void @llvm.dbg.value(metadata %UserState.0* null, metadata !1368, metadata !DIExpression()), !dbg !1371
  store %UserState.0* null, %UserState.0** %tmpv.743, align 8
  call void @llvm.dbg.value(metadata i8 0, metadata !1388, metadata !DIExpression()), !dbg !1371
  %.ld.268 = load %Session.0*, %Session.0** %cast.2248, align 8, !dbg !1389
  %icmp.279 = icmp eq %Session.0* %.ld.268, null, !dbg !1390
  br i1 %icmp.279, label %then.265, label %else.265

then.250:                                         ; preds = %then.249
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1385
  unreachable

else.250:                                         ; preds = %then.249
  %field.815 = getelementptr inbounds %Warp.0, %Warp.0* %.ld.246, i64 0, i32 2, !dbg !1385
  %.field.ld.175 = load %HostState.0*, %HostState.0** %field.815, align 8, !dbg !1385
  %icmp.266 = icmp eq %HostState.0* %.field.ld.175, null, !dbg !1391
  br i1 %icmp.266, label %then.251, label %else.251

then.251:                                         ; preds = %else.250
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1391
  unreachable

else.251:                                         ; preds = %else.250
  %field.816 = getelementptr inbounds %HostState.0, %HostState.0* %.field.ld.175, i64 0, i32 1, !dbg !1391
  %.field.ld.176 = load %Session.0*, %Session.0** %field.816, align 8, !dbg !1391
  %.ld.252 = load %Session.0*, %Session.0** %cast.2248, align 8, !dbg !1392
  %icmp.268 = icmp eq %Session.0* %.ld.252, null, !dbg !1393
  br i1 %icmp.268, label %then.252, label %else.252

then.252:                                         ; preds = %else.251
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1393
  unreachable

else.252:                                         ; preds = %else.251
  %icmp.269 = icmp eq %Session.0* %.field.ld.176, null, !dbg !1394
  br i1 %icmp.269, label %then.253, label %else.253

then.253:                                         ; preds = %else.252
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1394
  unreachable

else.253:                                         ; preds = %else.252
  %field.819 = getelementptr inbounds %Session.0, %Session.0* %.ld.252, i64 0, i32 0, i32 2, !dbg !1395
  %field.821 = getelementptr inbounds %Session.0, %Session.0* %.field.ld.176, i64 0, i32 0, i32 2, !dbg !1396
  %field0.160 = bitcast { i8*, i64 }* %field.819 to i64*, !dbg !1397
  %ld.290 = load i64, i64* %field0.160, align 8, !dbg !1397
  %2 = getelementptr inbounds %Session.0, %Session.0* %.ld.252, i64 0, i32 0, i32 2, i32 1, !dbg !1397
  %ld.291 = load i64, i64* %2, align 8, !dbg !1397
  %field0.161 = bitcast { i8*, i64 }* %field.821 to i64*, !dbg !1397
  %ld.292 = load i64, i64* %field0.161, align 8, !dbg !1397
  %3 = getelementptr inbounds %Session.0, %Session.0* %.field.ld.176, i64 0, i32 0, i32 2, i32 1, !dbg !1397
  %ld.293 = load i64, i64* %3, align 8, !dbg !1397
  %call.176 = call i8 @runtime.eqstring(i8* nest undef, i64 %ld.290, i64 %ld.291, i64 %ld.292, i64 %ld.293), !dbg !1397
  %icmp.270 = icmp eq i8 %call.176, 1, !dbg !1397
  %.ld.255 = load %Session.0*, %Session.0** %cast.2248, align 8, !dbg !1398
  br i1 %icmp.270, label %else.254, label %then.254

then.254:                                         ; preds = %else.253
  %field0.158 = bitcast i8* %call.174 to i64*, !dbg !1399
  %ld.286 = load i64, i64* %field0.158, align 8, !dbg !1399
  %field1.158 = getelementptr inbounds i8, i8* %call.174, i64 8, !dbg !1399
  %4 = bitcast i8* %field1.158 to i64*, !dbg !1399
  %ld.287 = load i64, i64* %4, align 8, !dbg !1399
  call void @command_line_arguments.Session.SendError(i8* nest undef, %Session.0* %.ld.255, i64 %ld.286, i64 %ld.287, i64 ptrtoint ([21 x i8]* @const.298 to i64), i64 20, { i8*, i64 }* byval nonnull @const.301), !dbg !1399
  %.ld.250 = load %Warp.0*, %Warp.0** %cast.2236, align 8, !dbg !1400
  %icmp.267 = icmp eq %Warp.0* %.ld.250, null, !dbg !1401
  br i1 %icmp.267, label %then.255, label %else.255

else.254:                                         ; preds = %else.253
  call void @llvm.dbg.value(metadata i8 1, metadata !1375, metadata !DIExpression()), !dbg !1376
  call void @llvm.dbg.value(metadata %Session.0* null, metadata !1402, metadata !DIExpression()), !dbg !1404
  call void @llvm.dbg.value(metadata i8 0, metadata !1405, metadata !DIExpression()), !dbg !1404
  %icmp.271 = icmp eq %Session.0* %.ld.255, null, !dbg !1406
  br i1 %icmp.271, label %then.256, label %else.256

then.255:                                         ; preds = %then.254
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1401
  unreachable

else.255:                                         ; preds = %then.254
  %field.817 = getelementptr inbounds %Warp.0, %Warp.0* %.ld.250, i64 0, i32 5, !dbg !1401
  %.field.ld.177 = load %Mutex.0*, %Mutex.0** %field.817, align 8, !dbg !1401
  call void @sync.Mutex.Unlock(i8* nest undef, %Mutex.0* %.field.ld.177), !dbg !1407
  ret void, !dbg !1408

then.256:                                         ; preds = %else.254
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1406
  unreachable

else.256:                                         ; preds = %else.254
  %cast.2264 = bitcast { i8*, i64 }* %tmpv.754 to i8*
  %cast.2265 = bitcast %Session.0* %.ld.255 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2264, i8* align 8 %cast.2265, i64 16, i1 false)
  %.ld.257 = load %Warp.0*, %Warp.0** %cast.2236, align 8, !dbg !1409
  %icmp.272 = icmp eq %Warp.0* %.ld.257, null, !dbg !1410
  br i1 %icmp.272, label %then.257, label %else.257

then.257:                                         ; preds = %else.256
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1410
  unreachable

else.257:                                         ; preds = %else.256
  %field.824 = getelementptr inbounds %Warp.0, %Warp.0* %.ld.257, i64 0, i32 2, !dbg !1410
  %.field.ld.178 = load %HostState.0*, %HostState.0** %field.824, align 8, !dbg !1410
  %icmp.273 = icmp eq %HostState.0* %.field.ld.178, null, !dbg !1411
  br i1 %icmp.273, label %then.258, label %else.258

then.258:                                         ; preds = %else.257
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1411
  unreachable

else.258:                                         ; preds = %else.257
  %field.826 = getelementptr inbounds %HostState.0, %HostState.0* %.field.ld.178, i64 0, i32 0, i32 3, !dbg !1412
  %.field.field.ld.5 = load { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.826, align 8, !dbg !1412
  %call.177 = call { i64, i8 } @runtime.mapaccess2(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7.1command_line_arguments.Session, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %.field.field.ld.5, i8* nonnull %cast.2264), !dbg !1413
  %call.177.fca.1.extract = extractvalue { i64, i8 } %call.177, 1, !dbg !1413
  call void @llvm.dbg.value(metadata i8 %call.177.fca.1.extract, metadata !1405, metadata !DIExpression()), !dbg !1404
  %5 = and i8 %call.177.fca.1.extract, 1, !dbg !1414
  %trunc.256 = icmp eq i8 %5, 0, !dbg !1414
  br i1 %trunc.256, label %fallthrough.259, label %then.259

then.259:                                         ; preds = %else.258
  %call.177.fca.0.extract = extractvalue { i64, i8 } %call.177, 0, !dbg !1413
  %cast.2275 = inttoptr i64 %call.177.fca.0.extract to %Session.0**, !dbg !1413
  %.ld.260 = load %Session.0*, %Session.0** %cast.2275, align 8, !dbg !1413
  call void @llvm.dbg.value(metadata %Session.0* %.ld.260, metadata !1402, metadata !DIExpression()), !dbg !1404
  call void @command_line_arguments.Session.TearDown(i8* nest undef, %Session.0* %.ld.260), !dbg !1415
  br label %fallthrough.259

fallthrough.259:                                  ; preds = %else.258, %then.259
  %.ld.261 = load %Warp.0*, %Warp.0** %cast.2236, align 8, !dbg !1416
  %icmp.274 = icmp eq %Warp.0* %.ld.261, null, !dbg !1417
  br i1 %icmp.274, label %then.260, label %else.260

then.260:                                         ; preds = %fallthrough.259
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1417
  unreachable

else.260:                                         ; preds = %fallthrough.259
  %field.829 = getelementptr inbounds %Warp.0, %Warp.0* %.ld.261, i64 0, i32 2, !dbg !1417
  %.field.ld.179 = load %HostState.0*, %HostState.0** %field.829, align 8, !dbg !1417
  %.ld.263 = load %Session.0*, %Session.0** %cast.2248, align 8, !dbg !1418
  %icmp.275 = icmp eq %Session.0* %.ld.263, null, !dbg !1419
  br i1 %icmp.275, label %then.261, label %else.261

then.261:                                         ; preds = %else.260
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1419
  unreachable

else.261:                                         ; preds = %else.260
  %cast.2278 = bitcast { i8*, i64 }* %tmpv.768 to i8*
  %cast.2279 = bitcast %Session.0* %.ld.263 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2278, i8* align 8 %cast.2279, i64 16, i1 false)
  %.ld.265 = load %Session.0*, %Session.0** %cast.2248, align 8, !dbg !1420
  %icmp.276 = icmp eq %HostState.0* %.field.ld.179, null, !dbg !1421
  br i1 %icmp.276, label %then.262, label %else.262

then.262:                                         ; preds = %else.261
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1421
  unreachable

else.262:                                         ; preds = %else.261
  %field.833 = getelementptr inbounds %HostState.0, %HostState.0* %.field.ld.179, i64 0, i32 0, i32 3, !dbg !1422
  %.field.field.ld.6 = load { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.833, align 8, !dbg !1422
  %call.178 = call i8* @runtime.mapassign(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7.1command_line_arguments.Session, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %.field.field.ld.6, i8* nonnull %cast.2278), !dbg !1423
  %cast.2283 = bitcast i8* %call.178 to %Session.0**, !dbg !1423
  %runtime.writeBarrier.ld.18 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1423
  %icmp.278 = icmp eq i32 %runtime.writeBarrier.ld.18, 0, !dbg !1423
  br i1 %icmp.278, label %then.263, label %else.263

then.263:                                         ; preds = %else.262
  %icmp.277 = icmp eq i8* %call.178, null, !dbg !1423
  br i1 %icmp.277, label %then.264, label %else.264

else.263:                                         ; preds = %else.262
  %cast.2286 = bitcast %Session.0* %.ld.265 to i8*, !dbg !1423
  call void @runtime.writebarrierptr(i8* nest undef, i8* %call.178, i8* %cast.2286), !dbg !1423
  br label %fallthrough.249

then.264:                                         ; preds = %then.263
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1423
  unreachable

else.264:                                         ; preds = %then.263
  store %Session.0* %.ld.265, %Session.0** %cast.2283, align 8, !dbg !1423
  br label %fallthrough.249

then.265:                                         ; preds = %else.249
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1390
  unreachable

else.265:                                         ; preds = %else.249
  %field.835 = getelementptr inbounds %Session.0, %Session.0* %.ld.268, i64 0, i32 0, i32 1, !dbg !1424
  %cast.2288 = bitcast { i8*, i64 }* %tmpv.775 to i8*
  %cast.2289 = bitcast { i8*, i64 }* %field.835 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2288, i8* nonnull align 8 %cast.2289, i64 16, i1 false)
  %.ld.270 = load %Warp.0*, %Warp.0** %cast.2236, align 8, !dbg !1425
  %icmp.280 = icmp eq %Warp.0* %.ld.270, null, !dbg !1426
  br i1 %icmp.280, label %then.266, label %else.266

then.266:                                         ; preds = %else.265
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1426
  unreachable

else.266:                                         ; preds = %else.265
  %field.836 = getelementptr inbounds %Warp.0, %Warp.0* %.ld.270, i64 0, i32 3, !dbg !1426
  %.field.ld.180 = load { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.836, align 8, !dbg !1426
  %call.179 = call { i64, i8 } @runtime.mapaccess2(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7.1command_line_arguments.UserState, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %.field.ld.180, i8* nonnull %cast.2288), !dbg !1427
  %call.179.fca.0.extract = extractvalue { i64, i8 } %call.179, 0, !dbg !1427
  %call.179.fca.1.extract = extractvalue { i64, i8 } %call.179, 1, !dbg !1427
  %6 = inttoptr i64 %call.179.fca.0.extract to i64*, !dbg !1427
  %.ld.27229 = load i64, i64* %6, align 8, !dbg !1427
  call void @llvm.dbg.value(metadata i64* %6, metadata !1368, metadata !DIExpression(DW_OP_deref)), !dbg !1371
  %7 = bitcast %UserState.0** %tmpv.743 to i64*, !dbg !1427
  store i64 %.ld.27229, i64* %7, align 8, !dbg !1427
  call void @llvm.dbg.value(metadata i8 %call.179.fca.1.extract, metadata !1388, metadata !DIExpression()), !dbg !1371
  %icmp.291 = icmp eq i8 %call.179.fca.1.extract, 0, !dbg !1428
  br i1 %icmp.291, label %then.267, label %else.267

then.267:                                         ; preds = %else.266
  %.ld.273 = load %Warp.0*, %Warp.0** %cast.2236, align 8, !dbg !1429
  %.ld.274 = load %Session.0*, %Session.0** %cast.2248, align 8, !dbg !1430
  %icmp.281 = icmp eq %Session.0* %.ld.274, null, !dbg !1431
  br i1 %icmp.281, label %then.268, label %else.268

fallthrough.267:                                  ; preds = %else.275, %else.273, %else.272
  call void @llvm.dbg.value(metadata %Session.0* null, metadata !1432, metadata !DIExpression()), !dbg !1434
  call void @llvm.dbg.value(metadata i8 0, metadata !1435, metadata !DIExpression()), !dbg !1434
  %.ld.288 = load %Session.0*, %Session.0** %cast.2248, align 8, !dbg !1436
  %icmp.292 = icmp eq %Session.0* %.ld.288, null, !dbg !1437
  br i1 %icmp.292, label %then.278, label %else.278

else.267:                                         ; preds = %else.266
  %cast.2328 = bitcast { i8*, %UserState.0** }* %tmpv.802 to i8*
  %field.849 = getelementptr inbounds { i8*, %UserState.0** }, { i8*, %UserState.0** }* %tmpv.802, i64 0, i32 0, !dbg !1438
  store i8* bitcast (%Session.0* (i8*)* @command_line_arguments..1command_line_arguments.Warp.handleShellClient..func1 to i8*), i8** %field.849, align 8, !dbg !1438
  %field.850 = getelementptr inbounds { i8*, %UserState.0** }, { i8*, %UserState.0** }* %tmpv.802, i64 0, i32 1, !dbg !1438
  store %UserState.0** %tmpv.743, %UserState.0*** %field.850, align 8, !dbg !1438
  call void @llvm.dbg.value(metadata i8* %cast.2328, metadata !1440, metadata !DIExpression()), !dbg !1448
  %call.183 = call %Session.0* @command_line_arguments..1command_line_arguments.Warp.handleShellClient..func1(i8* nest nonnull %cast.2328), !dbg !1449
  %.ld.285 = load %Session.0*, %Session.0** %cast.2248, align 8, !dbg !1450
  %icmp.288 = icmp eq %Session.0* %.ld.285, null, !dbg !1451
  br i1 %icmp.288, label %then.274, label %else.274

then.268:                                         ; preds = %then.267
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1431
  unreachable

else.268:                                         ; preds = %then.267
  %field.840 = getelementptr inbounds %Session.0, %Session.0* %.ld.274, i64 0, i32 0, i32 1, !dbg !1452
  %cast.2300 = bitcast { i8*, i64 }* %tmpv.785 to i8*
  %cast.2301 = bitcast { i8*, i64 }* %field.840 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2300, i8* nonnull align 8 %cast.2301, i64 16, i1 false)
  %.ld.276 = load %Session.0*, %Session.0** %cast.2248, align 8, !dbg !1453
  %icmp.282 = icmp eq %Session.0* %.ld.276, null, !dbg !1454
  br i1 %icmp.282, label %then.269, label %else.270

then.269:                                         ; preds = %else.268
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1454
  unreachable

else.270:                                         ; preds = %else.268
  %field.842 = getelementptr inbounds %Session.0, %Session.0* %.ld.276, i64 0, i32 0, i32 1, !dbg !1455
  %cast.2303 = bitcast { i8*, i64 }* %tmpv.787 to i8*
  %cast.2304 = bitcast { i8*, i64 }* %field.842 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2303, i8* nonnull align 8 %cast.2304, i64 16, i1 false)
  %field.843 = getelementptr inbounds %Session.0, %Session.0* %.ld.276, i64 0, i32 3, !dbg !1456
  %cast.2306 = bitcast { i8*, i64 }* %tmpv.789 to i8*
  %cast.2307 = bitcast { i8*, i64 }* %field.843 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2306, i8* nonnull align 8 %cast.2307, i64 16, i1 false)
  %call.180 = call { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* @__go_construct_map(i8* nest undef, i8* bitcast (%MapType.0* @type..map.6string.7.1command_line_arguments.Session to i8*), i64 0, i64 24, i64 16, i8* null), !dbg !1457
  %call.181 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.UserState..d, i64 0, i32 0)), !dbg !1458
  %cast.2313 = bitcast %UserState.0* %tmpv.794 to i8*, !dbg !1459
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2313, i8* nonnull align 8 %cast.2303, i64 16, i1 false), !dbg !1459
  %field.845 = getelementptr inbounds %UserState.0, %UserState.0* %tmpv.794, i64 0, i32 1, !dbg !1459
  %cast.2315 = bitcast { i8*, i64 }* %field.845 to i8*, !dbg !1459
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2315, i8* nonnull align 8 %cast.2306, i64 16, i1 false), !dbg !1459
  %field.846 = getelementptr inbounds %UserState.0, %UserState.0* %tmpv.794, i64 0, i32 2, !dbg !1459
  store i64 1, i64* %field.846, align 8, !dbg !1459
  %field.847 = getelementptr inbounds %UserState.0, %UserState.0* %tmpv.794, i64 0, i32 3, !dbg !1459
  store { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.180, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.847, align 8, !dbg !1459
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.UserState..d, i64 0, i32 0), i8* %call.181, i8* nonnull %cast.2313), !dbg !1458
  %icmp.284 = icmp eq %Warp.0* %.ld.273, null, !dbg !1460
  br i1 %icmp.284, label %then.271, label %else.271

then.271:                                         ; preds = %else.270
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1460
  unreachable

else.271:                                         ; preds = %else.270
  %field.848 = getelementptr inbounds %Warp.0, %Warp.0* %.ld.273, i64 0, i32 3, !dbg !1460
  %.field.ld.181 = load { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.848, align 8, !dbg !1460
  %call.182 = call i8* @runtime.mapassign(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7.1command_line_arguments.UserState, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %.field.ld.181, i8* nonnull %cast.2300), !dbg !1461
  %runtime.writeBarrier.ld.19 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1461
  %icmp.286 = icmp eq i32 %runtime.writeBarrier.ld.19, 0, !dbg !1461
  br i1 %icmp.286, label %then.272, label %else.272

then.272:                                         ; preds = %else.271
  %icmp.285 = icmp eq i8* %call.182, null, !dbg !1461
  br i1 %icmp.285, label %then.273, label %else.273

else.272:                                         ; preds = %else.271
  call void @runtime.writebarrierptr(i8* nest undef, i8* %call.182, i8* %call.181), !dbg !1461
  br label %fallthrough.267

then.273:                                         ; preds = %then.272
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1461
  unreachable

else.273:                                         ; preds = %then.272
  %8 = bitcast i8* %call.182 to i8**, !dbg !1461
  store i8* %call.181, i8** %8, align 8, !dbg !1461
  br label %fallthrough.267

then.274:                                         ; preds = %else.267
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1451
  unreachable

else.274:                                         ; preds = %else.267
  %icmp.289 = icmp eq %Session.0* %call.183, null, !dbg !1462
  br i1 %icmp.289, label %then.275, label %else.275

then.275:                                         ; preds = %else.274
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1462
  unreachable

else.275:                                         ; preds = %else.274
  %field.853 = getelementptr inbounds %Session.0, %Session.0* %.ld.285, i64 0, i32 0, i32 2, !dbg !1463
  %field.855 = getelementptr inbounds %Session.0, %Session.0* %call.183, i64 0, i32 0, i32 2, !dbg !1464
  %field0.164 = bitcast { i8*, i64 }* %field.853 to i64*, !dbg !1465
  %ld.298 = load i64, i64* %field0.164, align 8, !dbg !1465
  %9 = getelementptr inbounds %Session.0, %Session.0* %.ld.285, i64 0, i32 0, i32 2, i32 1, !dbg !1465
  %ld.299 = load i64, i64* %9, align 8, !dbg !1465
  %field0.165 = bitcast { i8*, i64 }* %field.855 to i64*, !dbg !1465
  %ld.300 = load i64, i64* %field0.165, align 8, !dbg !1465
  %10 = getelementptr inbounds %Session.0, %Session.0* %call.183, i64 0, i32 0, i32 2, i32 1, !dbg !1465
  %ld.301 = load i64, i64* %10, align 8, !dbg !1465
  %call.184 = call i8 @runtime.eqstring(i8* nest undef, i64 %ld.298, i64 %ld.299, i64 %ld.300, i64 %ld.301), !dbg !1465
  %icmp.290 = icmp eq i8 %call.184, 1, !dbg !1465
  br i1 %icmp.290, label %fallthrough.267, label %then.276

then.276:                                         ; preds = %else.275
  %.ld.282 = load %Session.0*, %Session.0** %cast.2248, align 8, !dbg !1466
  %field0.162 = bitcast i8* %call.174 to i64*, !dbg !1467
  %ld.294 = load i64, i64* %field0.162, align 8, !dbg !1467
  %field1.162 = getelementptr inbounds i8, i8* %call.174, i64 8, !dbg !1467
  %11 = bitcast i8* %field1.162 to i64*, !dbg !1467
  %ld.295 = load i64, i64* %11, align 8, !dbg !1467
  call void @command_line_arguments.Session.SendError(i8* nest undef, %Session.0* %.ld.282, i64 %ld.294, i64 %ld.295, i64 ptrtoint ([21 x i8]* @const.298 to i64), i64 20, { i8*, i64 }* byval nonnull @const.301), !dbg !1467
  %.ld.283 = load %Warp.0*, %Warp.0** %cast.2236, align 8, !dbg !1468
  %icmp.287 = icmp eq %Warp.0* %.ld.283, null, !dbg !1469
  br i1 %icmp.287, label %then.277, label %else.277

then.277:                                         ; preds = %then.276
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1469
  unreachable

else.277:                                         ; preds = %then.276
  %field.851 = getelementptr inbounds %Warp.0, %Warp.0* %.ld.283, i64 0, i32 5, !dbg !1469
  %.field.ld.182 = load %Mutex.0*, %Mutex.0** %field.851, align 8, !dbg !1469
  call void @sync.Mutex.Unlock(i8* nest undef, %Mutex.0* %.field.ld.182), !dbg !1470
  ret void, !dbg !1471

then.278:                                         ; preds = %fallthrough.267
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1437
  unreachable

else.278:                                         ; preds = %fallthrough.267
  %cast.2342 = bitcast { i8*, i64 }* %tmpv.808 to i8*
  %cast.2343 = bitcast %Session.0* %.ld.288 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2342, i8* align 8 %cast.2343, i64 16, i1 false)
  %.ld.290 = load %Session.0*, %Session.0** %cast.2248, align 8, !dbg !1472
  %icmp.293 = icmp eq %Session.0* %.ld.290, null, !dbg !1473
  br i1 %icmp.293, label %then.279, label %else.279

then.279:                                         ; preds = %else.278
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1473
  unreachable

else.279:                                         ; preds = %else.278
  %field.859 = getelementptr inbounds %Session.0, %Session.0* %.ld.290, i64 0, i32 0, i32 1, !dbg !1474
  %cast.2347 = bitcast { i8*, i64 }* %tmpv.813 to i8*
  %cast.2348 = bitcast { i8*, i64 }* %field.859 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2347, i8* nonnull align 8 %cast.2348, i64 16, i1 false)
  %.ld.292 = load %Warp.0*, %Warp.0** %cast.2236, align 8, !dbg !1475
  %icmp.294 = icmp eq %Warp.0* %.ld.292, null, !dbg !1476
  br i1 %icmp.294, label %then.280, label %else.280

then.280:                                         ; preds = %else.279
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1476
  unreachable

else.280:                                         ; preds = %else.279
  %field.860 = getelementptr inbounds %Warp.0, %Warp.0* %.ld.292, i64 0, i32 3, !dbg !1476
  %.field.ld.183 = load { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.860, align 8, !dbg !1476
  %call.185 = call i8* @runtime.mapaccess1(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7.1command_line_arguments.UserState, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %.field.ld.183, i8* nonnull %cast.2347), !dbg !1477
  %cast.2352 = bitcast i8* %call.185 to %UserState.0**, !dbg !1477
  %.ld.294 = load %UserState.0*, %UserState.0** %cast.2352, align 8, !dbg !1477
  %icmp.295 = icmp eq %UserState.0* %.ld.294, null, !dbg !1478
  br i1 %icmp.295, label %then.281, label %else.281

then.281:                                         ; preds = %else.280
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1478
  unreachable

else.281:                                         ; preds = %else.280
  %field.861 = getelementptr inbounds %UserState.0, %UserState.0* %.ld.294, i64 0, i32 3, !dbg !1478
  %.field.ld.184 = load { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.861, align 8, !dbg !1478
  %call.186 = call { i64, i8 } @runtime.mapaccess2(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7.1command_line_arguments.Session, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %.field.ld.184, i8* nonnull %cast.2342), !dbg !1479
  %call.186.fca.1.extract = extractvalue { i64, i8 } %call.186, 1, !dbg !1479
  call void @llvm.dbg.value(metadata i8 %call.186.fca.1.extract, metadata !1435, metadata !DIExpression()), !dbg !1434
  %12 = and i8 %call.186.fca.1.extract, 1, !dbg !1480
  %trunc.279 = icmp eq i8 %12, 0, !dbg !1480
  br i1 %trunc.279, label %fallthrough.282, label %then.282

then.282:                                         ; preds = %else.281
  %call.186.fca.0.extract = extractvalue { i64, i8 } %call.186, 0, !dbg !1479
  %cast.2359 = inttoptr i64 %call.186.fca.0.extract to %Session.0**, !dbg !1479
  %.ld.296 = load %Session.0*, %Session.0** %cast.2359, align 8, !dbg !1479
  call void @llvm.dbg.value(metadata %Session.0* %.ld.296, metadata !1432, metadata !DIExpression()), !dbg !1434
  call void @command_line_arguments.Session.TearDown(i8* nest undef, %Session.0* %.ld.296), !dbg !1481
  br label %fallthrough.282

fallthrough.282:                                  ; preds = %else.281, %then.282
  %.ld.297 = load %Warp.0*, %Warp.0** %cast.2236, align 8, !dbg !1482
  %.ld.298 = load %Session.0*, %Session.0** %cast.2248, align 8, !dbg !1483
  %icmp.296 = icmp eq %Warp.0* %.ld.297, null, !dbg !1484
  br i1 %icmp.296, label %then.283, label %else.283

then.283:                                         ; preds = %fallthrough.282
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1484
  unreachable

else.283:                                         ; preds = %fallthrough.282
  %icmp.297 = icmp eq %Session.0* %.ld.298, null, !dbg !1485
  br i1 %icmp.297, label %then.284, label %else.284

then.284:                                         ; preds = %else.283
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1485
  unreachable

else.284:                                         ; preds = %else.283
  %field.864 = getelementptr inbounds %Warp.0, %Warp.0* %.ld.297, i64 0, i32 3, !dbg !1484
  %.field.ld.185 = load { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.864, align 8, !dbg !1484
  %field.866 = getelementptr inbounds %Session.0, %Session.0* %.ld.298, i64 0, i32 0, i32 1, !dbg !1486
  %cast.2362 = bitcast { i8*, i64 }* %tmpv.825 to i8*
  %cast.2363 = bitcast { i8*, i64 }* %field.866 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2362, i8* nonnull align 8 %cast.2363, i64 16, i1 false)
  %call.187 = call i8* @runtime.mapaccess1(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7.1command_line_arguments.UserState, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %.field.ld.185, i8* nonnull %cast.2362), !dbg !1487
  %cast.2366 = bitcast i8* %call.187 to %UserState.0**, !dbg !1487
  %.ld.301 = load %UserState.0*, %UserState.0** %cast.2366, align 8, !dbg !1487
  %.ld.302 = load %Session.0*, %Session.0** %cast.2248, align 8, !dbg !1488
  %icmp.298 = icmp eq %Session.0* %.ld.302, null, !dbg !1489
  br i1 %icmp.298, label %then.285, label %else.285

then.285:                                         ; preds = %else.284
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1489
  unreachable

else.285:                                         ; preds = %else.284
  %cast.2368 = bitcast { i8*, i64 }* %tmpv.830 to i8*
  %cast.2369 = bitcast %Session.0* %.ld.302 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2368, i8* align 8 %cast.2369, i64 16, i1 false)
  %.ld.304 = load %Session.0*, %Session.0** %cast.2248, align 8, !dbg !1490
  %icmp.299 = icmp eq %UserState.0* %.ld.301, null, !dbg !1491
  br i1 %icmp.299, label %then.286, label %else.286

then.286:                                         ; preds = %else.285
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1491
  unreachable

else.286:                                         ; preds = %else.285
  %field.869 = getelementptr inbounds %UserState.0, %UserState.0* %.ld.301, i64 0, i32 3, !dbg !1491
  %.field.ld.186 = load { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.869, align 8, !dbg !1491
  %call.188 = call i8* @runtime.mapassign(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7.1command_line_arguments.Session, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %.field.ld.186, i8* nonnull %cast.2368), !dbg !1492
  %cast.2373 = bitcast i8* %call.188 to %Session.0**, !dbg !1492
  %runtime.writeBarrier.ld.20 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1492
  %icmp.301 = icmp eq i32 %runtime.writeBarrier.ld.20, 0, !dbg !1492
  br i1 %icmp.301, label %then.287, label %else.287

then.287:                                         ; preds = %else.286
  %icmp.300 = icmp eq i8* %call.188, null, !dbg !1492
  br i1 %icmp.300, label %then.288, label %else.288

else.287:                                         ; preds = %else.286
  %cast.2376 = bitcast %Session.0* %.ld.304 to i8*, !dbg !1492
  call void @runtime.writebarrierptr(i8* nest undef, i8* %call.188, i8* %cast.2376), !dbg !1492
  br label %fallthrough.249

then.288:                                         ; preds = %then.287
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1492
  unreachable

else.288:                                         ; preds = %then.287
  store %Session.0* %.ld.304, %Session.0** %cast.2373, align 8, !dbg !1492
  br label %fallthrough.249

then.289:                                         ; preds = %fallthrough.249
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1387
  unreachable

else.289:                                         ; preds = %fallthrough.249
  %field.874 = getelementptr inbounds %Warp.0, %Warp.0* %.ld.310, i64 0, i32 5, !dbg !1387
  %.field.ld.187 = load %Mutex.0*, %Mutex.0** %field.874, align 8, !dbg !1387
  call void @sync.Mutex.Unlock(i8* nest undef, %Mutex.0* %.field.ld.187), !dbg !1493
  %call.190 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.4x.5.f.f.0.1.4void.5.2.command_line_arguments.ctx1.0.1context.Context.2.command_line_arguments.w2.0.1.1command_line_arguments.Warp.2.command_line_arguments.ss3.0.1.1command_line_arguments.Session.5, i64 0, i32 0)), !dbg !1494
  %field.875 = getelementptr inbounds { i8*, %Context.0*, %Warp.0**, %Session.0** }, { i8*, %Context.0*, %Warp.0**, %Session.0** }* %tmpv.845, i64 0, i32 0, !dbg !1494
  store i8* bitcast (void (i8*)* @command_line_arguments..1command_line_arguments.Warp.handleShellClient..func2 to i8*), i8** %field.875, align 8, !dbg !1494
  %field.876 = getelementptr inbounds { i8*, %Context.0*, %Warp.0**, %Session.0** }, { i8*, %Context.0*, %Warp.0**, %Session.0** }* %tmpv.845, i64 0, i32 1, !dbg !1494
  %13 = bitcast %Context.0** %field.876 to i8**, !dbg !1494
  store i8* %call.174, i8** %13, align 8, !dbg !1494
  %field.877 = getelementptr inbounds { i8*, %Context.0*, %Warp.0**, %Session.0** }, { i8*, %Context.0*, %Warp.0**, %Session.0** }* %tmpv.845, i64 0, i32 2, !dbg !1494
  %14 = bitcast %Warp.0*** %field.877 to i8**, !dbg !1494
  store i8* %call.173, i8** %14, align 8, !dbg !1494
  %field.878 = getelementptr inbounds { i8*, %Context.0*, %Warp.0**, %Session.0** }, { i8*, %Context.0*, %Warp.0**, %Session.0** }* %tmpv.845, i64 0, i32 3, !dbg !1494
  %15 = bitcast %Session.0*** %field.878 to i8**, !dbg !1494
  store i8* %call.175, i8** %15, align 8, !dbg !1494
  %cast.2387 = bitcast { i8*, %Context.0*, %Warp.0**, %Session.0** }* %tmpv.845 to i8*, !dbg !1494
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.4x.5.f.f.0.1.4void.5.2.command_line_arguments.ctx1.0.1context.Context.2.command_line_arguments.w2.0.1.1command_line_arguments.Warp.2.command_line_arguments.ss3.0.1.1command_line_arguments.Session.5, i64 0, i32 0), i8* %call.190, i8* nonnull %cast.2387), !dbg !1494
  %icmp.306 = icmp eq i8* %call.190, null, !dbg !1495
  br i1 %icmp.306, label %then.290, label %else.290

then.290:                                         ; preds = %else.289
  call void @__go_runtime_error(i8* nest undef, i32 11), !dbg !1495
  unreachable

else.290:                                         ; preds = %else.289
  %call.191 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.4x.5fn.0func.8.9.8.9.5, i64 0, i32 0)), !dbg !1495
  %16 = bitcast { %__go_descriptor.10* }* %tmpv.848 to i8**, !dbg !1495
  store i8* %call.190, i8** %16, align 8, !dbg !1495
  %cast.2394 = bitcast { %__go_descriptor.10* }* %tmpv.848 to i8*, !dbg !1495
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.4x.5fn.0func.8.9.8.9.5, i64 0, i32 0), i8* %call.191, i8* nonnull %cast.2394), !dbg !1495
  call void @__go_go(i8* nest undef, %__go_descriptor.50* bitcast (void (i8*, { %__go_descriptor.10* }*)* @command_line_arguments.command_line_arguments..thunk11 to %__go_descriptor.50*), i8* %call.191), !dbg !1495
  %.ld.312 = load %Warp.0*, %Warp.0** %cast.2236, align 8, !dbg !1496
  %field0.168 = bitcast i8* %call.174 to i64*, !dbg !1497
  %ld.306 = load i64, i64* %field0.168, align 8, !dbg !1497
  %field1.168 = getelementptr inbounds i8, i8* %call.174, i64 8, !dbg !1497
  %17 = bitcast i8* %field1.168 to i64*, !dbg !1497
  %ld.307 = load i64, i64* %17, align 8, !dbg !1497
  call void @command_line_arguments.Warp.updateHost(i8* nest undef, %Warp.0* %.ld.312, i64 %ld.306, i64 %ld.307), !dbg !1497
  %.ld.313 = load %Warp.0*, %Warp.0** %cast.2236, align 8, !dbg !1498
  %ld.308 = load i64, i64* %field0.168, align 8, !dbg !1499
  %ld.309 = load i64, i64* %17, align 8, !dbg !1499
  call void @command_line_arguments.Warp.updateClientSessions(i8* nest undef, %Warp.0* %.ld.313, i64 %ld.308, i64 %ld.309), !dbg !1499
  %.ld.314 = load %Session.0*, %Session.0** %cast.2248, align 8, !dbg !1500
  %call.192 = call { i64, i64 } @command_line_arguments.Session.ToString(i8* nest undef, %Session.0* %.ld.314), !dbg !1501
  %call.192.fca.0.extract = extractvalue { i64, i64 } %call.192, 0, !dbg !1501
  %call.192.fca.1.extract = extractvalue { i64, i64 } %call.192, 1, !dbg !1501
  %call.193 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !1502
  %tmpv.849.sroa.0.0.cast.2403.sroa_cast = bitcast { i8*, i64 }* %tmpv.851 to i64*
  store i64 %call.192.fca.0.extract, i64* %tmpv.849.sroa.0.0.cast.2403.sroa_cast, align 8
  %tmpv.849.sroa.2.0.cast.2403.sroa_idx12 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.851, i64 0, i32 1
  store i64 %call.192.fca.1.extract, i64* %tmpv.849.sroa.2.0.cast.2403.sroa_idx12, align 8
  %cast.2406 = bitcast { i8*, i64 }* %tmpv.851 to i8*, !dbg !1502
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.193, i8* nonnull %cast.2406), !dbg !1502
  %tmp.107.sroa.0.0.cast.2408.sroa_idx = getelementptr inbounds [1 x %IPST.9], [1 x %IPST.9]* %tmpv.852, i64 0, i64 0, i32 0, !dbg !1502
  store %_type.0* @string..d, %_type.0** %tmp.107.sroa.0.0.cast.2408.sroa_idx, align 8, !dbg !1502
  %tmp.107.sroa.2.0.cast.2408.sroa_idx27 = getelementptr inbounds [1 x %IPST.9], [1 x %IPST.9]* %tmpv.852, i64 0, i64 0, i32 1, !dbg !1502
  store i8* %call.193, i8** %tmp.107.sroa.2.0.cast.2408.sroa_idx27, align 8, !dbg !1502
  %field.882 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.108, i64 0, i32 0, !dbg !1502
  %cast.2412 = getelementptr inbounds [1 x %IPST.9], [1 x %IPST.9]* %tmpv.852, i64 0, i64 0, !dbg !1502
  store %IPST.9* %cast.2412, %IPST.9** %field.882, align 8, !dbg !1502
  %field.883 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.108, i64 0, i32 1, !dbg !1502
  store i64 1, i64* %field.883, align 8, !dbg !1502
  %field.884 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.108, i64 0, i32 2, !dbg !1502
  store i64 1, i64* %field.884, align 8, !dbg !1502
  %ld.310 = load i64, i64* %field0.168, align 8, !dbg !1502
  %ld.311 = load i64, i64* %17, align 8, !dbg !1502
  call void @github_com_spolu_warp_lib_logging.Logf(i8* nest undef, i64 %ld.310, i64 %ld.311, i64 ptrtoint ([35 x i8]* @const.303 to i64), i64 34, %IPST.3* byval nonnull %tmp.108), !dbg !1502
  %.ld.315 = load %Session.0*, %Session.0** %cast.2248, align 8, !dbg !1503
  %icmp.307 = icmp eq %Session.0* %.ld.315, null, !dbg !1504
  br i1 %icmp.307, label %then.291, label %else.291

then.291:                                         ; preds = %else.290
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1504
  unreachable

else.291:                                         ; preds = %else.290
  %tmpv.853.sroa.0.0.cast.2415.sroa_idx = getelementptr inbounds %Session.0, %Session.0* %.ld.315, i64 0, i32 14, i32 0
  %tmpv.853.sroa.0.0.copyload = load { %_type.0*, void ({ %Time.0, i8 }*, i8*, i8*)*, {}* (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, i64, i64)* }*, { %_type.0*, void ({ %Time.0, i8 }*, i8*, i8*)*, {}* (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, i64, i64)* }** %tmpv.853.sroa.0.0.cast.2415.sroa_idx, align 8
  %tmpv.853.sroa.2.0.cast.2415.sroa_idx10 = getelementptr inbounds %Session.0, %Session.0* %.ld.315, i64 0, i32 14, i32 1
  %tmpv.853.sroa.2.0.copyload = load i8*, i8** %tmpv.853.sroa.2.0.cast.2415.sroa_idx10, align 8
  %field.887 = getelementptr inbounds { %_type.0*, void ({ %Time.0, i8 }*, i8*, i8*)*, {}* (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, i64, i64)* }, { %_type.0*, void ({ %Time.0, i8 }*, i8*, i8*)*, {}* (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, i64, i64)* }* %tmpv.853.sroa.0.0.copyload, i64 0, i32 2, !dbg !1505
  %.field.ld.188 = load {}* (i8*, i8*)*, {}* (i8*, i8*)** %field.887, align 8, !dbg !1505
  %call.194 = call {}* %.field.ld.188(i8* nest undef, i8* %tmpv.853.sroa.2.0.copyload), !dbg !1505
  %cast.2416 = bitcast {}* %tmpv.856 to i8*, !dbg !1506
  call void @runtime.chanrecv1(i8* nest undef, {}* %call.194, i8* nonnull %cast.2416), !dbg !1506
  %.ld.317 = load %Session.0*, %Session.0** %cast.2248, align 8, !dbg !1507
  %call.195 = call { i64, i64 } @command_line_arguments.Session.ToString(i8* nest undef, %Session.0* %.ld.317), !dbg !1508
  %call.195.fca.0.extract = extractvalue { i64, i64 } %call.195, 0, !dbg !1508
  %call.195.fca.1.extract = extractvalue { i64, i64 } %call.195, 1, !dbg !1508
  %call.196 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !1509
  %tmpv.858.sroa.0.0.cast.2421.sroa_cast = bitcast { i8*, i64 }* %tmpv.860 to i64*
  store i64 %call.195.fca.0.extract, i64* %tmpv.858.sroa.0.0.cast.2421.sroa_cast, align 8
  %tmpv.858.sroa.2.0.cast.2421.sroa_idx9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.860, i64 0, i32 1
  store i64 %call.195.fca.1.extract, i64* %tmpv.858.sroa.2.0.cast.2421.sroa_idx9, align 8
  %cast.2424 = bitcast { i8*, i64 }* %tmpv.860 to i8*, !dbg !1509
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.196, i8* nonnull %cast.2424), !dbg !1509
  %tmp.109.sroa.0.0.cast.2426.sroa_idx = getelementptr inbounds [1 x %IPST.9], [1 x %IPST.9]* %tmpv.861, i64 0, i64 0, i32 0, !dbg !1509
  store %_type.0* @string..d, %_type.0** %tmp.109.sroa.0.0.cast.2426.sroa_idx, align 8, !dbg !1509
  %tmp.109.sroa.2.0.cast.2426.sroa_idx28 = getelementptr inbounds [1 x %IPST.9], [1 x %IPST.9]* %tmpv.861, i64 0, i64 0, i32 1, !dbg !1509
  store i8* %call.196, i8** %tmp.109.sroa.2.0.cast.2426.sroa_idx28, align 8, !dbg !1509
  %field.891 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.110, i64 0, i32 0, !dbg !1509
  %cast.2430 = getelementptr inbounds [1 x %IPST.9], [1 x %IPST.9]* %tmpv.861, i64 0, i64 0, !dbg !1509
  store %IPST.9* %cast.2430, %IPST.9** %field.891, align 8, !dbg !1509
  %field.892 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.110, i64 0, i32 1, !dbg !1509
  store i64 1, i64* %field.892, align 8, !dbg !1509
  %field.893 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.110, i64 0, i32 2, !dbg !1509
  store i64 1, i64* %field.893, align 8, !dbg !1509
  %ld.314 = load i64, i64* %field0.168, align 8, !dbg !1509
  %ld.315 = load i64, i64* %17, align 8, !dbg !1509
  call void @github_com_spolu_warp_lib_logging.Logf(i8* nest undef, i64 %ld.314, i64 %ld.315, i64 ptrtoint ([31 x i8]* @const.305 to i64), i64 30, %IPST.3* byval nonnull %tmp.110), !dbg !1509
  %.ld.318 = load %Warp.0*, %Warp.0** %cast.2236, align 8, !dbg !1510
  %icmp.308 = icmp eq %Warp.0* %.ld.318, null, !dbg !1511
  br i1 %icmp.308, label %then.292, label %else.292

then.292:                                         ; preds = %else.291
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1511
  unreachable

else.292:                                         ; preds = %else.291
  %field.894 = getelementptr inbounds %Warp.0, %Warp.0* %.ld.318, i64 0, i32 5, !dbg !1511
  %.field.ld.189 = load %Mutex.0*, %Mutex.0** %field.894, align 8, !dbg !1511
  call void @sync.Mutex.Lock(i8* nest undef, %Mutex.0* %.field.ld.189), !dbg !1512
  br i1 %isHostSession.0, label %then.293, label %else.293

then.293:                                         ; preds = %else.292
  %.ld.320 = load %Warp.0*, %Warp.0** %cast.2236, align 8, !dbg !1513
  %icmp.309 = icmp eq %Warp.0* %.ld.320, null, !dbg !1514
  br i1 %icmp.309, label %then.294, label %else.294

fallthrough.293:                                  ; preds = %else.304, %else.307, %else.296
  %.ld.343 = load %Warp.0*, %Warp.0** %cast.2236, align 8, !dbg !1515
  %icmp.323 = icmp eq %Warp.0* %.ld.343, null, !dbg !1516
  br i1 %icmp.323, label %then.308, label %else.308

else.293:                                         ; preds = %else.292
  %.ld.325 = load %Session.0*, %Session.0** %cast.2248, align 8, !dbg !1517
  %icmp.312 = icmp eq %Session.0* %.ld.325, null, !dbg !1518
  br i1 %icmp.312, label %then.297, label %else.297

then.294:                                         ; preds = %then.293
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1514
  unreachable

else.294:                                         ; preds = %then.293
  %field.895 = getelementptr inbounds %Warp.0, %Warp.0* %.ld.320, i64 0, i32 2, !dbg !1514
  %.field.ld.190 = load %HostState.0*, %HostState.0** %field.895, align 8, !dbg !1514
  %icmp.310 = icmp eq %HostState.0* %.field.ld.190, null, !dbg !1519
  br i1 %icmp.310, label %then.295, label %else.295

then.295:                                         ; preds = %else.294
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1519
  unreachable

else.295:                                         ; preds = %else.294
  %.ld.323 = load %Session.0*, %Session.0** %cast.2248, align 8, !dbg !1520
  %icmp.311 = icmp eq %Session.0* %.ld.323, null, !dbg !1521
  br i1 %icmp.311, label %then.296, label %else.296

then.296:                                         ; preds = %else.295
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1521
  unreachable

else.296:                                         ; preds = %else.295
  %field.897 = getelementptr inbounds %HostState.0, %HostState.0* %.field.ld.190, i64 0, i32 0, i32 3, !dbg !1519
  %.field.field.ld.7 = load { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.897, align 8, !dbg !1519
  %cast.2435 = bitcast { i8*, i64 }* %tmpv.867 to i8*
  %cast.2436 = bitcast %Session.0* %.ld.323 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2435, i8* align 8 %cast.2436, i64 16, i1 false)
  call void @runtime.mapdelete(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7.1command_line_arguments.Session, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %.field.field.ld.7, i8* nonnull %cast.2435), !dbg !1522
  br label %fallthrough.293

then.297:                                         ; preds = %else.293
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1518
  unreachable

else.297:                                         ; preds = %else.293
  %field.901 = getelementptr inbounds %Session.0, %Session.0* %.ld.325, i64 0, i32 0, i32 1, !dbg !1523
  %cast.2440 = bitcast { i8*, i64 }* %tmpv.869 to i8*
  %cast.2441 = bitcast { i8*, i64 }* %field.901 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2440, i8* nonnull align 8 %cast.2441, i64 16, i1 false)
  %.ld.327 = load %Warp.0*, %Warp.0** %cast.2236, align 8, !dbg !1524
  %icmp.313 = icmp eq %Warp.0* %.ld.327, null, !dbg !1525
  br i1 %icmp.313, label %then.298, label %else.298

then.298:                                         ; preds = %else.297
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1525
  unreachable

else.298:                                         ; preds = %else.297
  %field.902 = getelementptr inbounds %Warp.0, %Warp.0* %.ld.327, i64 0, i32 3, !dbg !1525
  %.field.ld.191 = load { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.902, align 8, !dbg !1525
  %call.197 = call i8* @runtime.mapaccess1(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7.1command_line_arguments.UserState, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %.field.ld.191, i8* nonnull %cast.2440), !dbg !1526
  %cast.2445 = bitcast i8* %call.197 to %UserState.0**, !dbg !1526
  %.ld.329 = load %UserState.0*, %UserState.0** %cast.2445, align 8, !dbg !1526
  %icmp.314 = icmp eq %UserState.0* %.ld.329, null, !dbg !1527
  br i1 %icmp.314, label %then.299, label %else.299

then.299:                                         ; preds = %else.298
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1527
  unreachable

else.299:                                         ; preds = %else.298
  %.ld.331 = load %Session.0*, %Session.0** %cast.2248, align 8, !dbg !1528
  %icmp.315 = icmp eq %Session.0* %.ld.331, null, !dbg !1529
  br i1 %icmp.315, label %then.300, label %else.300

then.300:                                         ; preds = %else.299
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1529
  unreachable

else.300:                                         ; preds = %else.299
  %field.903 = getelementptr inbounds %UserState.0, %UserState.0* %.ld.329, i64 0, i32 3, !dbg !1527
  %.field.ld.192 = load { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.903, align 8, !dbg !1527
  %cast.2448 = bitcast { i8*, i64 }* %tmpv.876 to i8*
  %cast.2449 = bitcast %Session.0* %.ld.331 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2448, i8* align 8 %cast.2449, i64 16, i1 false)
  call void @runtime.mapdelete(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7.1command_line_arguments.Session, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %.field.ld.192, i8* nonnull %cast.2448), !dbg !1530
  %.ld.333 = load %Session.0*, %Session.0** %cast.2248, align 8, !dbg !1531
  %icmp.316 = icmp eq %Session.0* %.ld.333, null, !dbg !1532
  br i1 %icmp.316, label %then.301, label %else.301

then.301:                                         ; preds = %else.300
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1532
  unreachable

else.301:                                         ; preds = %else.300
  %field.907 = getelementptr inbounds %Session.0, %Session.0* %.ld.333, i64 0, i32 0, i32 1, !dbg !1533
  %cast.2453 = bitcast { i8*, i64 }* %tmpv.878 to i8*
  %cast.2454 = bitcast { i8*, i64 }* %field.907 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2453, i8* nonnull align 8 %cast.2454, i64 16, i1 false)
  %.ld.335 = load %Warp.0*, %Warp.0** %cast.2236, align 8, !dbg !1534
  %icmp.317 = icmp eq %Warp.0* %.ld.335, null, !dbg !1535
  br i1 %icmp.317, label %then.302, label %else.302

then.302:                                         ; preds = %else.301
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1535
  unreachable

else.302:                                         ; preds = %else.301
  %field.908 = getelementptr inbounds %Warp.0, %Warp.0* %.ld.335, i64 0, i32 3, !dbg !1535
  %.field.ld.193 = load { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.908, align 8, !dbg !1535
  %call.198 = call i8* @runtime.mapaccess1(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7.1command_line_arguments.UserState, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %.field.ld.193, i8* nonnull %cast.2453), !dbg !1536
  %cast.2458 = bitcast i8* %call.198 to %UserState.0**, !dbg !1536
  %.ld.337 = load %UserState.0*, %UserState.0** %cast.2458, align 8, !dbg !1536
  %icmp.318 = icmp eq %UserState.0* %.ld.337, null, !dbg !1537
  br i1 %icmp.318, label %then.303, label %else.303

then.303:                                         ; preds = %else.302
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1537
  unreachable

else.303:                                         ; preds = %else.302
  %field.909 = getelementptr inbounds %UserState.0, %UserState.0* %.ld.337, i64 0, i32 3, !dbg !1537
  %18 = bitcast { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.909 to i64**, !dbg !1537
  %.field.ld.19431 = load i64*, i64** %18, align 8, !dbg !1537
  %icmp.321 = icmp eq i64* %.field.ld.19431, null, !dbg !1538
  br i1 %icmp.321, label %then.305, label %else.304

else.304:                                         ; preds = %else.303
  %deref.ld.69 = load i64, i64* %.field.ld.19431, align 8, !dbg !1538
  %phitmp = icmp eq i64 %deref.ld.69, 0
  br i1 %phitmp, label %then.305, label %fallthrough.293

then.305:                                         ; preds = %else.303, %else.304
  %.ld.339 = load %Warp.0*, %Warp.0** %cast.2236, align 8, !dbg !1539
  %icmp.319 = icmp eq %Warp.0* %.ld.339, null, !dbg !1540
  br i1 %icmp.319, label %then.306, label %else.306

then.306:                                         ; preds = %then.305
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1540
  unreachable

else.306:                                         ; preds = %then.305
  %.ld.341 = load %Session.0*, %Session.0** %cast.2248, align 8, !dbg !1541
  %icmp.320 = icmp eq %Session.0* %.ld.341, null, !dbg !1542
  br i1 %icmp.320, label %then.307, label %else.307

then.307:                                         ; preds = %else.306
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1542
  unreachable

else.307:                                         ; preds = %else.306
  %field.910 = getelementptr inbounds %Warp.0, %Warp.0* %.ld.339, i64 0, i32 3, !dbg !1540
  %.field.ld.195 = load { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.910, align 8, !dbg !1540
  %field.912 = getelementptr inbounds %Session.0, %Session.0* %.ld.341, i64 0, i32 0, i32 1, !dbg !1543
  %cast.2462 = bitcast { i8*, i64 }* %tmpv.887 to i8*
  %cast.2463 = bitcast { i8*, i64 }* %field.912 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2462, i8* nonnull align 8 %cast.2463, i64 16, i1 false)
  call void @runtime.mapdelete(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7.1command_line_arguments.UserState, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %.field.ld.195, i8* nonnull %cast.2462), !dbg !1544
  br label %fallthrough.293

then.308:                                         ; preds = %fallthrough.293
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1516
  unreachable

else.308:                                         ; preds = %fallthrough.293
  %field.913 = getelementptr inbounds %Warp.0, %Warp.0* %.ld.343, i64 0, i32 5, !dbg !1516
  %.field.ld.196 = load %Mutex.0*, %Mutex.0** %field.913, align 8, !dbg !1516
  call void @sync.Mutex.Unlock(i8* nest undef, %Mutex.0* %.field.ld.196), !dbg !1545
  %.ld.345 = load %Warp.0*, %Warp.0** %cast.2236, align 8, !dbg !1546
  %ld.318 = load i64, i64* %field0.168, align 8, !dbg !1547
  %ld.319 = load i64, i64* %17, align 8, !dbg !1547
  call void @command_line_arguments.Warp.updateHost(i8* nest undef, %Warp.0* %.ld.345, i64 %ld.318, i64 %ld.319), !dbg !1547
  %.ld.346 = load %Warp.0*, %Warp.0** %cast.2236, align 8, !dbg !1548
  %ld.320 = load i64, i64* %field0.168, align 8, !dbg !1549
  %ld.321 = load i64, i64* %17, align 8, !dbg !1549
  call void @command_line_arguments.Warp.updateClientSessions(i8* nest undef, %Warp.0* %.ld.346, i64 %ld.320, i64 %ld.321), !dbg !1549
  ret void
}

define void @command_line_arguments.Warp.rcvHostData(i8* nest nocapture readnone %nest.19, %Warp.0* readonly %w, i64 %ctx.chunk0, i64 %ctx.chunk1, %Session.0* nocapture readnone %ss, { i8*, i64, i64 }* byval %data) #0 !dbg !1550 {
entry:
  call void @llvm.dbg.declare(metadata { i8*, i64, i64 }* %data, metadata !1553, metadata !DIExpression()), !dbg !1554
  %sret.actual.73 = alloca %IPST.4, align 8
  %sret.actual.74 = alloca { i64, %error.0 }, align 8
  call void @llvm.dbg.value(metadata %Warp.0* %w, metadata !1555, metadata !DIExpression()), !dbg !1556
  call void @llvm.dbg.value(metadata i64 %ctx.chunk0, metadata !1557, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1558
  call void @llvm.dbg.value(metadata i64 %ctx.chunk1, metadata !1557, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1558
  call void @llvm.dbg.value(metadata %Session.0* %ss, metadata !1559, metadata !DIExpression()), !dbg !1560
  call void @command_line_arguments.Warp.CientSessions(%IPST.4* nonnull sret %sret.actual.73, i8* nest undef, %Warp.0* %w, i64 undef, i64 undef), !dbg !1561
  %sessions.sroa.0.0.cast.1832.sroa_idx = getelementptr inbounds %IPST.4, %IPST.4* %sret.actual.73, i64 0, i32 0
  %sessions.sroa.0.0.copyload = load %Session.0**, %Session.0*** %sessions.sroa.0.0.cast.1832.sroa_idx, align 8
  call void @llvm.dbg.value(metadata %Session.0** %sessions.sroa.0.0.copyload, metadata !1563, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1564
  %sessions.sroa.4.0.cast.1832.sroa_idx22 = getelementptr inbounds %IPST.4, %IPST.4* %sret.actual.73, i64 0, i32 1
  %sessions.sroa.4.0.copyload = load i64, i64* %sessions.sroa.4.0.cast.1832.sroa_idx22, align 8
  call void @llvm.dbg.value(metadata i64 %sessions.sroa.4.0.copyload, metadata !1563, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1564
  call void @llvm.dbg.value(metadata %IPST.4* %sret.actual.73, metadata !1563, metadata !DIExpression(DW_OP_plus_uconst, 16, DW_OP_deref, DW_OP_stack_value, DW_OP_LLVM_fragment, 128, 64)), !dbg !1564
  call void @llvm.dbg.value(metadata %Session.0* null, metadata !1565, metadata !DIExpression()), !dbg !1567
  %icmp.21828 = icmp sgt i64 %sessions.sroa.4.0.copyload, 0, !dbg !1568
  br i1 %icmp.21828, label %else.199.lr.ph, label %else.202

else.199.lr.ph:                                   ; preds = %entry
  %tmpv.573.sroa.3.sroa.0.0.tmpv.573.sroa.3.0.cast.1841.sroa_cast.sroa_idx = getelementptr inbounds { i64, %error.0 }, { i64, %error.0 }* %sret.actual.74, i64 0, i32 1, i32 0
  br label %else.199

else.199:                                         ; preds = %else.199.lr.ph, %fallthrough.201
  %tmpv.567.029 = phi i64 [ 0, %else.199.lr.ph ], [ %add.5, %fallthrough.201 ]
  %ptroff.5 = getelementptr %Session.0*, %Session.0** %sessions.sroa.0.0.copyload, i64 %tmpv.567.029, !dbg !1568
  %.ptroff.ld.1 = load %Session.0*, %Session.0** %ptroff.5, align 8, !dbg !1568
  call void @llvm.dbg.value(metadata %Session.0* %.ptroff.ld.1, metadata !1565, metadata !DIExpression()), !dbg !1567
  %icmp.216 = icmp eq %Session.0* %.ptroff.ld.1, null, !dbg !1569
  br i1 %icmp.216, label %then.200, label %else.200

then.200:                                         ; preds = %else.199
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1569
  unreachable

else.200:                                         ; preds = %else.199
  %tmpv.574.sroa.0.0.cast.1839.sroa_idx = getelementptr inbounds %Session.0, %Session.0* %.ptroff.ld.1, i64 0, i32 12, i32 0
  %tmpv.574.sroa.0.0.copyload = load { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }** %tmpv.574.sroa.0.0.cast.1839.sroa_idx, align 8
  %tmpv.574.sroa.2.0.cast.1839.sroa_idx2 = getelementptr inbounds %Session.0, %Session.0* %.ptroff.ld.1, i64 0, i32 12, i32 1
  %tmpv.574.sroa.2.0.copyload = load i8*, i8** %tmpv.574.sroa.2.0.cast.1839.sroa_idx2, align 8
  %field.604 = getelementptr inbounds { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }, { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }* %tmpv.574.sroa.0.0.copyload, i64 0, i32 8, !dbg !1571
  %.field.ld.100 = load void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)** %field.604, align 8, !dbg !1571
  call void %.field.ld.100({ i64, %error.0 }* nonnull sret %sret.actual.74, i8* nest undef, i8* %tmpv.574.sroa.2.0.copyload, { i8*, i64, i64 }* byval nonnull %data), !dbg !1571
  %tmpv.573.sroa.3.sroa.0.0.copyload9 = load { %_type.0*, { i64, i64 } (i8*, i8*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)* }** %tmpv.573.sroa.3.sroa.0.0.tmpv.573.sroa.3.0.cast.1841.sroa_cast.sroa_idx, align 8, !dbg !1571
  call void @llvm.dbg.value(metadata { i64, %error.0 }* %sret.actual.74, metadata !1572, metadata !DIExpression(DW_OP_deref)), !dbg !1573
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.573.sroa.3.sroa.0.0.copyload9, metadata !1574, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1573
  call void @llvm.dbg.value(metadata { i64, %error.0 }* %sret.actual.74, metadata !1574, metadata !DIExpression(DW_OP_plus_uconst, 16, DW_OP_deref, DW_OP_stack_value, DW_OP_LLVM_fragment, 64, 64)), !dbg !1573
  %icmp.217 = icmp eq { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.573.sroa.3.sroa.0.0.copyload9, null, !dbg !1575
  br i1 %icmp.217, label %fallthrough.201, label %then.201

then.201:                                         ; preds = %else.200
  call void @command_line_arguments.Session.SendInternalError(i8* nest undef, %Session.0* nonnull %.ptroff.ld.1, i64 %ctx.chunk0, i64 %ctx.chunk1), !dbg !1576
  call void @command_line_arguments.Session.TearDown(i8* nest undef, %Session.0* nonnull %.ptroff.ld.1), !dbg !1577
  br label %fallthrough.201

fallthrough.201:                                  ; preds = %else.200, %then.201
  %add.5 = add nuw nsw i64 %tmpv.567.029, 1, !dbg !1568
  %icmp.218 = icmp slt i64 %add.5, %sessions.sroa.4.0.copyload, !dbg !1568
  br i1 %icmp.218, label %else.199, label %else.202

else.202:                                         ; preds = %fallthrough.201, %entry
  ret void
}

define void @command_line_arguments.Warp.rcvShellClientData(i8* nest nocapture readnone %nest.18, %Warp.0* readonly %w, i64 %ctx.chunk0, i64 %ctx.chunk1, %Session.0* readonly %ss, { i8*, i64, i64 }* byval nocapture readonly %data) #0 !dbg !1578 {
entry:
  call void @llvm.dbg.declare(metadata { i8*, i64, i64 }* %data, metadata !1579, metadata !DIExpression()), !dbg !1580
  %tmpv.548 = alloca { i8*, i64 }, align 8
  %tmpv.556 = alloca { i8*, i64 }, align 8
  %tmpv.565 = alloca { i8*, i64, i64 }, align 8
  call void @llvm.dbg.value(metadata %Warp.0* %w, metadata !1581, metadata !DIExpression()), !dbg !1582
  call void @llvm.dbg.value(metadata i64 %ctx.chunk0, metadata !1583, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1584
  call void @llvm.dbg.value(metadata i64 %ctx.chunk1, metadata !1583, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1584
  call void @llvm.dbg.value(metadata %Session.0* %ss, metadata !1585, metadata !DIExpression()), !dbg !1586
  call void @llvm.dbg.value(metadata i64 0, metadata !1587, metadata !DIExpression()), !dbg !1589
  %icmp.199 = icmp eq %Warp.0* %w, null, !dbg !1590
  br i1 %icmp.199, label %then.183, label %else.183

then.183:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1590
  unreachable

else.183:                                         ; preds = %entry
  %field.579 = getelementptr inbounds %Warp.0, %Warp.0* %w, i64 0, i32 5, !dbg !1590
  %.field.ld.92 = load %Mutex.0*, %Mutex.0** %field.579, align 8, !dbg !1590
  call void @sync.Mutex.Lock(i8* nest undef, %Mutex.0* %.field.ld.92), !dbg !1591
  %field.580 = getelementptr inbounds %Warp.0, %Warp.0* %w, i64 0, i32 2, !dbg !1592
  %.field.ld.93 = load %HostState.0*, %HostState.0** %field.580, align 8, !dbg !1592
  %icmp.208 = icmp eq %Session.0* %ss, null, !dbg !1593
  br i1 %icmp.208, label %then.185, label %else.185

then.185:                                         ; preds = %else.183
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1593
  unreachable

else.185:                                         ; preds = %else.183
  %field.594 = getelementptr inbounds %Session.0, %Session.0* %ss, i64 0, i32 0, i32 1, !dbg !1594
  %icmp.209 = icmp eq %HostState.0* %.field.ld.93, null, !dbg !1595
  br i1 %icmp.209, label %then.186, label %else.186

then.186:                                         ; preds = %else.185
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1595
  unreachable

else.186:                                         ; preds = %else.185
  %field0.116 = bitcast { i8*, i64 }* %field.594 to i64*, !dbg !1596
  %ld.208 = load i64, i64* %field0.116, align 8, !dbg !1596
  %0 = getelementptr inbounds %Session.0, %Session.0* %ss, i64 0, i32 0, i32 1, i32 1, !dbg !1596
  %ld.209 = load i64, i64* %0, align 8, !dbg !1596
  %field0.117 = bitcast %HostState.0* %.field.ld.93 to i64*, !dbg !1596
  %ld.210 = load i64, i64* %field0.117, align 8, !dbg !1596
  %1 = getelementptr inbounds %HostState.0, %HostState.0* %.field.ld.93, i64 0, i32 0, i32 0, i32 1, !dbg !1596
  %ld.211 = load i64, i64* %1, align 8, !dbg !1596
  %call.131 = call i8 @runtime.eqstring(i8* nest undef, i64 %ld.208, i64 %ld.209, i64 %ld.210, i64 %ld.211), !dbg !1596
  %icmp.210 = icmp eq i8 %call.131, 1, !dbg !1596
  br i1 %icmp.210, label %else.188, label %else.190

else.188:                                         ; preds = %else.186
  %.field.ld.94 = load %HostState.0*, %HostState.0** %field.580, align 8, !dbg !1597
  %icmp.202 = icmp eq %HostState.0* %.field.ld.94, null, !dbg !1598
  br i1 %icmp.202, label %then.189, label %else.189

then.189:                                         ; preds = %else.188
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1598
  unreachable

else.189:                                         ; preds = %else.188
  %field.583 = getelementptr inbounds %HostState.0, %HostState.0* %.field.ld.94, i64 0, i32 0, i32 2, !dbg !1599
  br label %else.196.sink.split

else.190:                                         ; preds = %else.186
  call void @llvm.dbg.value(metadata i8 0, metadata !1600, metadata !DIExpression()), !dbg !1602
  %cast.1801 = bitcast { i8*, i64 }* %tmpv.548 to i8*
  %cast.1802 = bitcast { i8*, i64 }* %field.594 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1801, i8* nonnull align 8 %cast.1802, i64 16, i1 false)
  %field.586 = getelementptr inbounds %Warp.0, %Warp.0* %w, i64 0, i32 3, !dbg !1603
  %.field.ld.95 = load { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.586, align 8, !dbg !1603
  %call.129 = call { i64, i8 } @runtime.mapaccess2(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7.1command_line_arguments.UserState, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %.field.ld.95, i8* nonnull %cast.1801), !dbg !1604
  %call.129.fca.1.extract = extractvalue { i64, i8 } %call.129, 1, !dbg !1604
  call void @llvm.dbg.value(metadata i8 %call.129.fca.1.extract, metadata !1600, metadata !DIExpression()), !dbg !1602
  %2 = and i8 %call.129.fca.1.extract, 1, !dbg !1605
  %trunc.192 = icmp eq i8 %2, 0, !dbg !1605
  br i1 %trunc.192, label %fallthrough.197.critedge, label %else.193

else.193:                                         ; preds = %else.190
  %cast.1813 = bitcast { i8*, i64 }* %tmpv.556 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1813, i8* nonnull align 8 %cast.1802, i64 16, i1 false)
  %.field.ld.96 = load { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.586, align 8, !dbg !1606
  %call.130 = call i8* @runtime.mapaccess1(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7.1command_line_arguments.UserState, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %.field.ld.96, i8* nonnull %cast.1813), !dbg !1607
  %cast.1818 = bitcast i8* %call.130 to %UserState.0**, !dbg !1607
  %.ld.164 = load %UserState.0*, %UserState.0** %cast.1818, align 8, !dbg !1607
  %icmp.207 = icmp eq %UserState.0* %.ld.164, null, !dbg !1608
  br i1 %icmp.207, label %then.195, label %else.195

then.195:                                         ; preds = %else.193
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1608
  unreachable

else.195:                                         ; preds = %else.193
  %field.592 = getelementptr inbounds %UserState.0, %UserState.0* %.ld.164, i64 0, i32 2, !dbg !1608
  call void @llvm.dbg.value(metadata i64 %.field.ld.97, metadata !1587, metadata !DIExpression()), !dbg !1589
  br label %else.196.sink.split

else.196.sink.split:                              ; preds = %else.189, %else.195
  %field.592.sink = phi i64* [ %field.592, %else.195 ], [ %field.583, %else.189 ]
  %.field.ld.97 = load i64, i64* %field.592.sink, align 8, !dbg !1609
  %phitmp = and i64 %.field.ld.97, 2, !dbg !1610
  %phitmp3 = icmp eq i64 %phitmp, 0, !dbg !1610
  %.field.ld.98 = load %Mutex.0*, %Mutex.0** %field.579, align 8, !dbg !1610
  call void @sync.Mutex.Unlock(i8* nest undef, %Mutex.0* %.field.ld.98), !dbg !1611
  br i1 %phitmp3, label %fallthrough.197, label %then.197

then.197:                                         ; preds = %else.196.sink.split
  %cast.1825 = bitcast { i8*, i64, i64 }* %tmpv.565 to i8*
  %cast.1826 = bitcast { i8*, i64, i64 }* %data to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1825, i8* nonnull align 8 %cast.1826, i64 24, i1 false)
  %field.598 = getelementptr inbounds %Warp.0, %Warp.0* %w, i64 0, i32 4, !dbg !1612
  %.field.ld.99 = load {}*, {}** %field.598, align 8, !dbg !1612
  call void @runtime.chansend1(i8* nest undef, {}* %.field.ld.99, i8* nonnull %cast.1825), !dbg !1613
  br label %fallthrough.197

fallthrough.197.critedge:                         ; preds = %else.190
  %.field.ld.98.c = load %Mutex.0*, %Mutex.0** %field.579, align 8, !dbg !1610
  call void @sync.Mutex.Unlock(i8* nest undef, %Mutex.0* %.field.ld.98.c), !dbg !1611
  br label %fallthrough.197

fallthrough.197:                                  ; preds = %fallthrough.197.critedge, %else.196.sink.split, %then.197
  ret void
}

define void @command_line_arguments.Warp.updateClientSessions(i8* nest nocapture readnone %nest.16, %Warp.0* readonly %w, i64 %ctx.chunk0, i64 %ctx.chunk1) #0 !dbg !1614 {
entry:
  %tmp.78 = alloca %IPST.3, align 8
  %st.sroa.0 = alloca { i8*, i64 }, align 8
  %sret.actual.65 = alloca %State.0, align 8
  %sret.actual.66 = alloca %IPST.4, align 8
  %tmpv.512 = alloca { i8*, i64 }, align 8
  %tmpv.515 = alloca [3 x %IPST.9], align 8
  %tmpv.517 = alloca %State.0, align 8
  call void @llvm.dbg.value(metadata %Warp.0* %w, metadata !1617, metadata !DIExpression()), !dbg !1618
  call void @llvm.dbg.value(metadata i64 %ctx.chunk0, metadata !1619, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1620
  call void @llvm.dbg.value(metadata i64 %ctx.chunk1, metadata !1619, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1620
  %st.sroa.0.0.sroa_cast32 = bitcast { i8*, i64 }* %st.sroa.0 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %st.sroa.0.0.sroa_cast32)
  call void @command_line_arguments.Warp.State(%State.0* nonnull sret %sret.actual.65, i8* nest undef, %Warp.0* %w, i64 %ctx.chunk0, i64 %ctx.chunk1), !dbg !1621
  %st.sroa.0.0.cast.1710.sroa_cast = bitcast %State.0* %sret.actual.65 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %st.sroa.0.0.sroa_cast32, i8* nonnull align 8 %st.sroa.0.0.cast.1710.sroa_cast, i64 16, i1 false)
  %st.sroa.4.0.cast.1710.sroa_idx20 = getelementptr inbounds %State.0, %State.0* %sret.actual.65, i64 0, i32 1, i32 0
  %st.sroa.4.0.copyload = load i64, i64* %st.sroa.4.0.cast.1710.sroa_idx20, align 8
  call void @llvm.dbg.value(metadata i64 %st.sroa.4.0.copyload, metadata !1623, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 64)), !dbg !1624
  %st.sroa.5.0.cast.1710.sroa_idx24 = getelementptr inbounds %State.0, %State.0* %sret.actual.65, i64 0, i32 1, i32 1
  %st.sroa.5.0.copyload = load i64, i64* %st.sroa.5.0.cast.1710.sroa_idx24, align 8
  call void @llvm.dbg.value(metadata i64 %st.sroa.5.0.copyload, metadata !1623, metadata !DIExpression(DW_OP_LLVM_fragment, 192, 64)), !dbg !1624
  %st.sroa.6.0.cast.1710.sroa_idx28 = getelementptr inbounds %State.0, %State.0* %sret.actual.65, i64 0, i32 2
  %0 = bitcast { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %st.sroa.6.0.cast.1710.sroa_idx28 to i64*
  %st.sroa.6.0.copyload41 = load i64, i64* %0, align 8
  call void @llvm.dbg.value(metadata { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %st.sroa.6.0.cast.1710.sroa_idx28, metadata !1623, metadata !DIExpression(DW_OP_deref, DW_OP_LLVM_fragment, 256, 64)), !dbg !1624
  call void @command_line_arguments.Warp.CientSessions(%IPST.4* nonnull sret %sret.actual.66, i8* nest undef, %Warp.0* %w, i64 undef, i64 undef), !dbg !1625
  %sessions.sroa.0.0.cast.1713.sroa_idx = getelementptr inbounds %IPST.4, %IPST.4* %sret.actual.66, i64 0, i32 0
  %sessions.sroa.0.0.copyload = load %Session.0**, %Session.0*** %sessions.sroa.0.0.cast.1713.sroa_idx, align 8
  call void @llvm.dbg.value(metadata %Session.0** %sessions.sroa.0.0.copyload, metadata !1626, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1627
  %sessions.sroa.4.0.cast.1713.sroa_idx13 = getelementptr inbounds %IPST.4, %IPST.4* %sret.actual.66, i64 0, i32 1
  %sessions.sroa.4.0.copyload = load i64, i64* %sessions.sroa.4.0.cast.1713.sroa_idx13, align 8
  call void @llvm.dbg.value(metadata i64 %sessions.sroa.4.0.copyload, metadata !1626, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1627
  call void @llvm.dbg.value(metadata %IPST.4* %sret.actual.66, metadata !1626, metadata !DIExpression(DW_OP_plus_uconst, 16, DW_OP_deref, DW_OP_stack_value, DW_OP_LLVM_fragment, 128, 64)), !dbg !1627
  call void @llvm.dbg.value(metadata %Session.0* null, metadata !1628, metadata !DIExpression()), !dbg !1630
  %icmp.18943 = icmp sgt i64 %sessions.sroa.4.0.copyload, 0, !dbg !1631
  br i1 %icmp.18943, label %else.171.lr.ph, label %else.173

else.171.lr.ph:                                   ; preds = %entry
  %tmpv.508.sroa.0.0.cast.1720.sroa_cast = bitcast { i8*, i64 }* %tmpv.512 to i64*
  %tmpv.508.sroa.2.0.cast.1720.sroa_idx3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.512, i64 0, i32 1
  %cast.1723 = bitcast { i8*, i64 }* %tmpv.512 to i8*
  %tmp.75.sroa.0.0.cast.1729.sroa_idx = getelementptr inbounds [3 x %IPST.9], [3 x %IPST.9]* %tmpv.515, i64 0, i64 0, i32 0
  %tmp.75.sroa.2.0.cast.1729.sroa_idx38 = getelementptr inbounds [3 x %IPST.9], [3 x %IPST.9]* %tmpv.515, i64 0, i64 0, i32 1
  %tmp.76.sroa.0.0.cast.1731.sroa_idx = getelementptr inbounds [3 x %IPST.9], [3 x %IPST.9]* %tmpv.515, i64 0, i64 1, i32 0
  %tmp.76.sroa.2.0.cast.1731.sroa_idx39 = getelementptr inbounds [3 x %IPST.9], [3 x %IPST.9]* %tmpv.515, i64 0, i64 1, i32 1
  %tmp.77.sroa.0.0.cast.1733.sroa_idx = getelementptr inbounds [3 x %IPST.9], [3 x %IPST.9]* %tmpv.515, i64 0, i64 2, i32 0
  %tmp.77.sroa.2.0.cast.1733.sroa_idx40 = getelementptr inbounds [3 x %IPST.9], [3 x %IPST.9]* %tmpv.515, i64 0, i64 2, i32 1
  %field.550 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.78, i64 0, i32 0
  %cast.1737 = getelementptr inbounds [3 x %IPST.9], [3 x %IPST.9]* %tmpv.515, i64 0, i64 0
  %field.551 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.78, i64 0, i32 1
  %field.552 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.78, i64 0, i32 2
  %st.sroa.0.0.cast.1740.sroa_cast = bitcast %State.0* %tmpv.517 to i8*
  %st.sroa.4.0.cast.1740.sroa_idx21 = getelementptr inbounds %State.0, %State.0* %tmpv.517, i64 0, i32 1, i32 0
  %st.sroa.5.0.cast.1740.sroa_idx25 = getelementptr inbounds %State.0, %State.0* %tmpv.517, i64 0, i32 1, i32 1
  %st.sroa.6.0.cast.1740.sroa_idx29 = getelementptr inbounds %State.0, %State.0* %tmpv.517, i64 0, i32 2
  %1 = bitcast { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %st.sroa.6.0.cast.1740.sroa_idx29 to i64*
  br label %else.171

else.171:                                         ; preds = %else.171.lr.ph, %else.172
  %tmpv.502.044 = phi i64 [ 0, %else.171.lr.ph ], [ %add.4, %else.172 ]
  %ptroff.4 = getelementptr %Session.0*, %Session.0** %sessions.sroa.0.0.copyload, i64 %tmpv.502.044, !dbg !1631
  %.ptroff.ld.0 = load %Session.0*, %Session.0** %ptroff.4, align 8, !dbg !1631
  call void @llvm.dbg.value(metadata %Session.0* %.ptroff.ld.0, metadata !1628, metadata !DIExpression()), !dbg !1630
  %call.117 = call { i64, i64 } @command_line_arguments.Session.ToString(i8* nest undef, %Session.0* %.ptroff.ld.0), !dbg !1632
  %call.117.fca.0.extract = extractvalue { i64, i64 } %call.117, 0, !dbg !1632
  %call.117.fca.1.extract = extractvalue { i64, i64 } %call.117, 1, !dbg !1632
  %call.118 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !1633
  store i64 %call.117.fca.0.extract, i64* %tmpv.508.sroa.0.0.cast.1720.sroa_cast, align 8
  store i64 %call.117.fca.1.extract, i64* %tmpv.508.sroa.2.0.cast.1720.sroa_idx3, align 8
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.118, i8* nonnull %cast.1723), !dbg !1633
  %call.119 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @int..d), !dbg !1633
  %cast.1724 = bitcast i8* %call.119 to i64*, !dbg !1633
  store i64 %st.sroa.4.0.copyload, i64* %cast.1724, align 8, !dbg !1633
  %call.120 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @int..d), !dbg !1633
  %cast.1725 = bitcast i8* %call.120 to i64*, !dbg !1633
  store i64 %st.sroa.5.0.copyload, i64* %cast.1725, align 8, !dbg !1633
  store %_type.0* @string..d, %_type.0** %tmp.75.sroa.0.0.cast.1729.sroa_idx, align 8, !dbg !1633
  store i8* %call.118, i8** %tmp.75.sroa.2.0.cast.1729.sroa_idx38, align 8, !dbg !1633
  store %_type.0* @int..d, %_type.0** %tmp.76.sroa.0.0.cast.1731.sroa_idx, align 8, !dbg !1633
  store i8* %call.119, i8** %tmp.76.sroa.2.0.cast.1731.sroa_idx39, align 8, !dbg !1633
  store %_type.0* @int..d, %_type.0** %tmp.77.sroa.0.0.cast.1733.sroa_idx, align 8, !dbg !1633
  store i8* %call.120, i8** %tmp.77.sroa.2.0.cast.1733.sroa_idx40, align 8, !dbg !1633
  store %IPST.9* %cast.1737, %IPST.9** %field.550, align 8, !dbg !1633
  store i64 3, i64* %field.551, align 8, !dbg !1633
  store i64 3, i64* %field.552, align 8, !dbg !1633
  call void @github_com_spolu_warp_lib_logging.Logf(i8* nest undef, i64 %ctx.chunk0, i64 %ctx.chunk1, i64 ptrtoint ([51 x i8]* @const.255 to i64), i64 50, %IPST.3* byval nonnull %tmp.78), !dbg !1633
  %icmp.188 = icmp eq %Session.0* %.ptroff.ld.0, null, !dbg !1634
  br i1 %icmp.188, label %then.172, label %else.172

then.172:                                         ; preds = %else.171
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1634
  unreachable

else.172:                                         ; preds = %else.171
  %field.553 = getelementptr inbounds %Session.0, %Session.0* %.ptroff.ld.0, i64 0, i32 7, !dbg !1634
  %.field.ld.83 = load %Encoder.0*, %Encoder.0** %field.553, align 8, !dbg !1634
  %call.121 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @github_com_spolu_warp.State..d, i64 0, i32 0)), !dbg !1635
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %st.sroa.0.0.cast.1740.sroa_cast, i8* nonnull align 8 %st.sroa.0.0.sroa_cast32, i64 16, i1 false)
  store i64 %st.sroa.4.0.copyload, i64* %st.sroa.4.0.cast.1740.sroa_idx21, align 8
  store i64 %st.sroa.5.0.copyload, i64* %st.sroa.5.0.cast.1740.sroa_idx25, align 8
  store i64 %st.sroa.6.0.copyload41, i64* %1, align 8
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @github_com_spolu_warp.State..d, i64 0, i32 0), i8* %call.121, i8* nonnull %st.sroa.0.0.cast.1740.sroa_cast), !dbg !1635
  %2 = ptrtoint i8* %call.121 to i64, !dbg !1635
  %call.122 = call { i64, i64 } @encoding_gob.Encoder.Encode(i8* nest undef, %Encoder.0* %.field.ld.83, i64 ptrtoint (%StructType.0* @github_com_spolu_warp.State..d to i64), i64 %2), !dbg !1636
  %add.4 = add nuw nsw i64 %tmpv.502.044, 1, !dbg !1631
  %icmp.189 = icmp slt i64 %add.4, %sessions.sroa.4.0.copyload, !dbg !1631
  br i1 %icmp.189, label %else.171, label %else.173

else.173:                                         ; preds = %else.172, %entry
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %st.sroa.0.0.sroa_cast32)
  ret void
}

define void @command_line_arguments.Warp.updateHost(i8* nest nocapture readnone %nest.17, %Warp.0* readonly %w, i64 %ctx.chunk0, i64 %ctx.chunk1) #0 !dbg !1637 {
entry:
  %tmp.83 = alloca %IPST.3, align 8
  %st.sroa.0 = alloca { i8*, i64 }, align 8
  %sret.actual.69 = alloca %State.0, align 8
  %tmpv.530 = alloca { i8*, i64 }, align 8
  %tmpv.533 = alloca [3 x %IPST.9], align 8
  %tmpv.539 = alloca %State.0, align 8
  call void @llvm.dbg.value(metadata %Warp.0* %w, metadata !1638, metadata !DIExpression()), !dbg !1639
  call void @llvm.dbg.value(metadata i64 %ctx.chunk0, metadata !1640, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1641
  call void @llvm.dbg.value(metadata i64 %ctx.chunk1, metadata !1640, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1641
  %icmp.190 = icmp eq %Warp.0* %w, null, !dbg !1642
  br i1 %icmp.190, label %then.174, label %else.174

then.174:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1642
  unreachable

else.174:                                         ; preds = %entry
  %field.556 = getelementptr inbounds %Warp.0, %Warp.0* %w, i64 0, i32 2, !dbg !1642
  %.field.ld.84 = load %HostState.0*, %HostState.0** %field.556, align 8, !dbg !1642
  %icmp.191 = icmp eq %HostState.0* %.field.ld.84, null, !dbg !1643
  br i1 %icmp.191, label %then.175, label %else.175

then.175:                                         ; preds = %else.174
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1643
  unreachable

else.175:                                         ; preds = %else.174
  %field.557 = getelementptr inbounds %HostState.0, %HostState.0* %.field.ld.84, i64 0, i32 1, !dbg !1643
  %.field.ld.85 = load %Session.0*, %Session.0** %field.557, align 8, !dbg !1643
  %icmp.197 = icmp eq %Session.0* %.field.ld.85, null, !dbg !1644
  br i1 %icmp.197, label %then.176, label %else.176

then.176:                                         ; preds = %else.175
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1644
  unreachable

else.176:                                         ; preds = %else.175
  %field.578 = getelementptr inbounds %Session.0, %Session.0* %.field.ld.85, i64 0, i32 13, !dbg !1644
  %.field.ld.91 = load i8, i8* %field.578, align 1, !dbg !1644
  %icmp.198 = icmp eq i8 %.field.ld.91, 0, !dbg !1645
  br i1 %icmp.198, label %then.177, label %fallthrough.177

then.177:                                         ; preds = %else.176
  %st.sroa.0.0.sroa_cast19 = bitcast { i8*, i64 }* %st.sroa.0 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %st.sroa.0.0.sroa_cast19)
  call void @command_line_arguments.Warp.State(%State.0* nonnull sret %sret.actual.69, i8* nest undef, %Warp.0* nonnull %w, i64 %ctx.chunk0, i64 %ctx.chunk1), !dbg !1646
  %st.sroa.0.0.cast.1755.sroa_cast = bitcast %State.0* %sret.actual.69 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %st.sroa.0.0.sroa_cast19, i8* nonnull align 8 %st.sroa.0.0.cast.1755.sroa_cast, i64 16, i1 false)
  %st.sroa.4.0.cast.1755.sroa_idx7 = getelementptr inbounds %State.0, %State.0* %sret.actual.69, i64 0, i32 1, i32 0
  %st.sroa.4.0.copyload = load i64, i64* %st.sroa.4.0.cast.1755.sroa_idx7, align 8
  call void @llvm.dbg.value(metadata i64 %st.sroa.4.0.copyload, metadata !1648, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 64)), !dbg !1649
  %st.sroa.5.0.cast.1755.sroa_idx11 = getelementptr inbounds %State.0, %State.0* %sret.actual.69, i64 0, i32 1, i32 1
  %st.sroa.5.0.copyload = load i64, i64* %st.sroa.5.0.cast.1755.sroa_idx11, align 8
  call void @llvm.dbg.value(metadata i64 %st.sroa.5.0.copyload, metadata !1648, metadata !DIExpression(DW_OP_LLVM_fragment, 192, 64)), !dbg !1649
  %st.sroa.6.0.cast.1755.sroa_idx15 = getelementptr inbounds %State.0, %State.0* %sret.actual.69, i64 0, i32 2
  %0 = bitcast { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %st.sroa.6.0.cast.1755.sroa_idx15 to i64*
  %st.sroa.6.0.copyload26 = load i64, i64* %0, align 8
  call void @llvm.dbg.value(metadata { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %st.sroa.6.0.cast.1755.sroa_idx15, metadata !1648, metadata !DIExpression(DW_OP_deref, DW_OP_LLVM_fragment, 256, 64)), !dbg !1649
  %.field.ld.86 = load %HostState.0*, %HostState.0** %field.556, align 8, !dbg !1650
  %icmp.193 = icmp eq %HostState.0* %.field.ld.86, null, !dbg !1651
  br i1 %icmp.193, label %then.179, label %else.179

fallthrough.177:                                  ; preds = %else.176, %else.182
  ret void

then.179:                                         ; preds = %then.177
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1651
  unreachable

else.179:                                         ; preds = %then.177
  %field.559 = getelementptr inbounds %HostState.0, %HostState.0* %.field.ld.86, i64 0, i32 1, !dbg !1651
  %.field.ld.87 = load %Session.0*, %Session.0** %field.559, align 8, !dbg !1651
  %call.123 = call { i64, i64 } @command_line_arguments.Session.ToString(i8* nest undef, %Session.0* %.field.ld.87), !dbg !1652
  %call.123.fca.0.extract = extractvalue { i64, i64 } %call.123, 0, !dbg !1652
  %call.123.fca.1.extract = extractvalue { i64, i64 } %call.123, 1, !dbg !1652
  %call.124 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !1653
  %tmpv.525.sroa.0.0.cast.1762.sroa_cast = bitcast { i8*, i64 }* %tmpv.530 to i64*
  store i64 %call.123.fca.0.extract, i64* %tmpv.525.sroa.0.0.cast.1762.sroa_cast, align 8
  %tmpv.525.sroa.2.0.cast.1762.sroa_idx3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.530, i64 0, i32 1
  store i64 %call.123.fca.1.extract, i64* %tmpv.525.sroa.2.0.cast.1762.sroa_idx3, align 8
  %cast.1765 = bitcast { i8*, i64 }* %tmpv.530 to i8*, !dbg !1653
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.124, i8* nonnull %cast.1765), !dbg !1653
  %call.125 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @int..d), !dbg !1653
  %cast.1766 = bitcast i8* %call.125 to i64*, !dbg !1653
  store i64 %st.sroa.4.0.copyload, i64* %cast.1766, align 8, !dbg !1653
  %call.126 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @int..d), !dbg !1653
  %cast.1767 = bitcast i8* %call.126 to i64*, !dbg !1653
  store i64 %st.sroa.5.0.copyload, i64* %cast.1767, align 8, !dbg !1653
  %tmp.80.sroa.0.0.cast.1771.sroa_idx = getelementptr inbounds [3 x %IPST.9], [3 x %IPST.9]* %tmpv.533, i64 0, i64 0, i32 0, !dbg !1653
  store %_type.0* @string..d, %_type.0** %tmp.80.sroa.0.0.cast.1771.sroa_idx, align 8, !dbg !1653
  %tmp.80.sroa.2.0.cast.1771.sroa_idx23 = getelementptr inbounds [3 x %IPST.9], [3 x %IPST.9]* %tmpv.533, i64 0, i64 0, i32 1, !dbg !1653
  store i8* %call.124, i8** %tmp.80.sroa.2.0.cast.1771.sroa_idx23, align 8, !dbg !1653
  %tmp.81.sroa.0.0.cast.1773.sroa_idx = getelementptr inbounds [3 x %IPST.9], [3 x %IPST.9]* %tmpv.533, i64 0, i64 1, i32 0, !dbg !1653
  store %_type.0* @int..d, %_type.0** %tmp.81.sroa.0.0.cast.1773.sroa_idx, align 8, !dbg !1653
  %tmp.81.sroa.2.0.cast.1773.sroa_idx24 = getelementptr inbounds [3 x %IPST.9], [3 x %IPST.9]* %tmpv.533, i64 0, i64 1, i32 1, !dbg !1653
  store i8* %call.125, i8** %tmp.81.sroa.2.0.cast.1773.sroa_idx24, align 8, !dbg !1653
  %tmp.82.sroa.0.0.cast.1775.sroa_idx = getelementptr inbounds [3 x %IPST.9], [3 x %IPST.9]* %tmpv.533, i64 0, i64 2, i32 0, !dbg !1653
  store %_type.0* @int..d, %_type.0** %tmp.82.sroa.0.0.cast.1775.sroa_idx, align 8, !dbg !1653
  %tmp.82.sroa.2.0.cast.1775.sroa_idx25 = getelementptr inbounds [3 x %IPST.9], [3 x %IPST.9]* %tmpv.533, i64 0, i64 2, i32 1, !dbg !1653
  store i8* %call.126, i8** %tmp.82.sroa.2.0.cast.1775.sroa_idx25, align 8, !dbg !1653
  %field.570 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.83, i64 0, i32 0, !dbg !1653
  %cast.1779 = getelementptr inbounds [3 x %IPST.9], [3 x %IPST.9]* %tmpv.533, i64 0, i64 0, !dbg !1653
  store %IPST.9* %cast.1779, %IPST.9** %field.570, align 8, !dbg !1653
  %field.571 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.83, i64 0, i32 1, !dbg !1653
  store i64 3, i64* %field.571, align 8, !dbg !1653
  %field.572 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.83, i64 0, i32 2, !dbg !1653
  store i64 3, i64* %field.572, align 8, !dbg !1653
  call void @github_com_spolu_warp_lib_logging.Logf(i8* nest undef, i64 %ctx.chunk0, i64 %ctx.chunk1, i64 ptrtoint ([49 x i8]* @const.257 to i64), i64 48, %IPST.3* byval nonnull %tmp.83), !dbg !1653
  %.field.ld.88 = load %HostState.0*, %HostState.0** %field.556, align 8, !dbg !1654
  %icmp.195 = icmp eq %HostState.0* %.field.ld.88, null, !dbg !1655
  br i1 %icmp.195, label %then.181, label %else.181

then.181:                                         ; preds = %else.179
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1655
  unreachable

else.181:                                         ; preds = %else.179
  %field.574 = getelementptr inbounds %HostState.0, %HostState.0* %.field.ld.88, i64 0, i32 1, !dbg !1655
  %.field.ld.89 = load %Session.0*, %Session.0** %field.574, align 8, !dbg !1655
  %icmp.196 = icmp eq %Session.0* %.field.ld.89, null, !dbg !1656
  br i1 %icmp.196, label %then.182, label %else.182

then.182:                                         ; preds = %else.181
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1656
  unreachable

else.182:                                         ; preds = %else.181
  %field.575 = getelementptr inbounds %Session.0, %Session.0* %.field.ld.89, i64 0, i32 7, !dbg !1656
  %.field.ld.90 = load %Encoder.0*, %Encoder.0** %field.575, align 8, !dbg !1656
  %call.127 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @github_com_spolu_warp.State..d, i64 0, i32 0)), !dbg !1657
  %st.sroa.0.0.cast.1784.sroa_cast = bitcast %State.0* %tmpv.539 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %st.sroa.0.0.cast.1784.sroa_cast, i8* nonnull align 8 %st.sroa.0.0.sroa_cast19, i64 16, i1 false)
  %st.sroa.4.0.cast.1784.sroa_idx8 = getelementptr inbounds %State.0, %State.0* %tmpv.539, i64 0, i32 1, i32 0
  store i64 %st.sroa.4.0.copyload, i64* %st.sroa.4.0.cast.1784.sroa_idx8, align 8
  %st.sroa.5.0.cast.1784.sroa_idx12 = getelementptr inbounds %State.0, %State.0* %tmpv.539, i64 0, i32 1, i32 1
  store i64 %st.sroa.5.0.copyload, i64* %st.sroa.5.0.cast.1784.sroa_idx12, align 8
  %st.sroa.6.0.cast.1784.sroa_idx16 = getelementptr inbounds %State.0, %State.0* %tmpv.539, i64 0, i32 2
  %1 = bitcast { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %st.sroa.6.0.cast.1784.sroa_idx16 to i64*
  store i64 %st.sroa.6.0.copyload26, i64* %1, align 8
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @github_com_spolu_warp.State..d, i64 0, i32 0), i8* %call.127, i8* nonnull %st.sroa.0.0.cast.1784.sroa_cast), !dbg !1657
  %2 = ptrtoint i8* %call.127 to i64, !dbg !1657
  %call.128 = call { i64, i64 } @encoding_gob.Encoder.Encode(i8* nest undef, %Encoder.0* %.field.ld.90, i64 ptrtoint (%StructType.0* @github_com_spolu_warp.State..d to i64), i64 %2), !dbg !1658
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %st.sroa.0.0.sroa_cast19)
  br label %fallthrough.177
}

define void @command_line_arguments.HostState.User(%User.0* nocapture sret %sret.formal.2, i8* nest nocapture readnone %nest.13, %HostState.0* readonly %h, i64 %ctx.chunk0, i64 %ctx.chunk1) #0 !dbg !1659 {
entry:
  %"$ret9.sroa.0" = alloca { { i8*, i64 }, { i8*, i64 } }, align 8
  call void @llvm.dbg.declare(metadata [7 x i8]* bitcast (i8* getelementptr inbounds (i8, i8* bitcast (%User.0* @const.243 to i8*), i64 41) to [7 x i8]*), metadata !1667, metadata !DIExpression(DW_OP_LLVM_fragment, 328, 56)), !dbg !1668
  call void @llvm.dbg.value(metadata %HostState.0* %h, metadata !1669, metadata !DIExpression()), !dbg !1670
  call void @llvm.dbg.value(metadata i64 %ctx.chunk0, metadata !1671, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1672
  call void @llvm.dbg.value(metadata i64 %ctx.chunk1, metadata !1671, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1672
  %"$ret9.sroa.0.0.sroa_cast15" = bitcast { { i8*, i64 }, { i8*, i64 } }* %"$ret9.sroa.0" to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %"$ret9.sroa.0.0.sroa_cast15")
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %"$ret9.sroa.0.0.sroa_cast15", i8 0, i64 32, i1 false)
  %icmp.137 = icmp eq %HostState.0* %h, null, !dbg !1673
  br i1 %icmp.137, label %then.133, label %else.133

then.133:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1673
  unreachable

else.133:                                         ; preds = %entry
  %cast.1515 = bitcast %HostState.0* %h to i8*
  %"$ret9.sroa.01819" = bitcast { { i8*, i64 }, { i8*, i64 } }* %"$ret9.sroa.0" to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %"$ret9.sroa.01819", i8* align 8 %cast.1515, i64 16, i1 false)
  %field.468 = getelementptr inbounds %HostState.0, %HostState.0* %h, i64 0, i32 0, i32 1, !dbg !1674
  %cast.1518 = bitcast { i8*, i64 }* %field.468 to i8*
  %field.470 = getelementptr inbounds %HostState.0, %HostState.0* %h, i64 0, i32 0, i32 2, !dbg !1675
  %.field.field.ld.0 = load i64, i64* %field.470, align 8, !dbg !1675
  %"$ret9.sroa.0.16.sroa_idx" = getelementptr inbounds { { i8*, i64 }, { i8*, i64 } }, { { i8*, i64 }, { i8*, i64 } }* %"$ret9.sroa.0", i64 0, i32 1, !dbg !1676
  %"$ret9.sroa.0.16.sroa_cast" = bitcast { i8*, i64 }* %"$ret9.sroa.0.16.sroa_idx" to i8*, !dbg !1676
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %"$ret9.sroa.0.16.sroa_cast", i8* nonnull align 8 %cast.1518, i64 16, i1 false), !dbg !1676
  call void @llvm.dbg.value(metadata i64 %.field.field.ld.0, metadata !1667, metadata !DIExpression(DW_OP_LLVM_fragment, 256, 64)), !dbg !1668
  call void @llvm.dbg.value(metadata i8 1, metadata !1667, metadata !DIExpression(DW_OP_LLVM_fragment, 320, 8)), !dbg !1668
  %"$ret9.sroa.0.0.cast.1524.sroa_cast" = bitcast %User.0* %sret.formal.2 to i8*, !dbg !1677
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %"$ret9.sroa.0.0.cast.1524.sroa_cast", i8* nonnull align 8 %"$ret9.sroa.0.0.sroa_cast15", i64 32, i1 false), !dbg !1677
  %"$ret9.sroa.6.0.cast.1524.sroa_idx6" = getelementptr inbounds %User.0, %User.0* %sret.formal.2, i64 0, i32 2, !dbg !1677
  store i64 %.field.field.ld.0, i64* %"$ret9.sroa.6.0.cast.1524.sroa_idx6", align 8, !dbg !1677
  %"$ret9.sroa.7.0.cast.1524.sroa_idx" = getelementptr inbounds %User.0, %User.0* %sret.formal.2, i64 0, i32 3, !dbg !1677
  store i8 1, i8* %"$ret9.sroa.7.0.cast.1524.sroa_idx", align 8, !dbg !1677
  %"$ret9.sroa.8.0.cast.1524.sroa_raw_idx" = getelementptr inbounds i8, i8* %"$ret9.sroa.0.0.cast.1524.sroa_cast", i64 41, !dbg !1677
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %"$ret9.sroa.8.0.cast.1524.sroa_raw_idx", i8* align 1 getelementptr inbounds ([7 x i8], [7 x i8]* bitcast (i8* getelementptr inbounds (i8, i8* bitcast (%User.0* @const.243 to i8*), i64 41) to [7 x i8]*), i64 0, i64 0), i64 7, i1 false), !dbg !1677
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %"$ret9.sroa.0.0.sroa_cast15"), !dbg !1677
  ret void, !dbg !1677
}

define void @command_line_arguments.UserState.User(%User.0* nocapture sret %sret.formal.1, i8* nest nocapture readnone %nest.12, %UserState.0* readonly %u, i64 %ctx.chunk0, i64 %ctx.chunk1) #0 !dbg !1678 {
entry:
  %"$ret8.sroa.0" = alloca { { i8*, i64 }, { i8*, i64 } }, align 8
  call void @llvm.dbg.declare(metadata [7 x i8]* bitcast (i8* getelementptr inbounds (i8, i8* bitcast (%User.0* @const.243 to i8*), i64 41) to [7 x i8]*), metadata !1681, metadata !DIExpression(DW_OP_LLVM_fragment, 328, 56)), !dbg !1682
  call void @llvm.dbg.value(metadata %UserState.0* %u, metadata !1683, metadata !DIExpression()), !dbg !1684
  call void @llvm.dbg.value(metadata i64 %ctx.chunk0, metadata !1685, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1686
  call void @llvm.dbg.value(metadata i64 %ctx.chunk1, metadata !1685, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1686
  %"$ret8.sroa.0.0.sroa_cast15" = bitcast { { i8*, i64 }, { i8*, i64 } }* %"$ret8.sroa.0" to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %"$ret8.sroa.0.0.sroa_cast15")
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %"$ret8.sroa.0.0.sroa_cast15", i8 0, i64 32, i1 false)
  %icmp.134 = icmp eq %UserState.0* %u, null, !dbg !1687
  br i1 %icmp.134, label %then.130, label %else.130

then.130:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1687
  unreachable

else.130:                                         ; preds = %entry
  %cast.1499 = bitcast %UserState.0* %u to i8*
  %"$ret8.sroa.01819" = bitcast { { i8*, i64 }, { i8*, i64 } }* %"$ret8.sroa.0" to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %"$ret8.sroa.01819", i8* align 8 %cast.1499, i64 16, i1 false)
  %field.459 = getelementptr inbounds %UserState.0, %UserState.0* %u, i64 0, i32 1, !dbg !1688
  %cast.1502 = bitcast { i8*, i64 }* %field.459 to i8*
  %field.460 = getelementptr inbounds %UserState.0, %UserState.0* %u, i64 0, i32 2, !dbg !1689
  %.field.ld.65 = load i64, i64* %field.460, align 8, !dbg !1689
  %"$ret8.sroa.0.16.sroa_idx" = getelementptr inbounds { { i8*, i64 }, { i8*, i64 } }, { { i8*, i64 }, { i8*, i64 } }* %"$ret8.sroa.0", i64 0, i32 1, !dbg !1690
  %"$ret8.sroa.0.16.sroa_cast" = bitcast { i8*, i64 }* %"$ret8.sroa.0.16.sroa_idx" to i8*, !dbg !1690
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %"$ret8.sroa.0.16.sroa_cast", i8* nonnull align 8 %cast.1502, i64 16, i1 false), !dbg !1690
  call void @llvm.dbg.value(metadata i64 %.field.ld.65, metadata !1681, metadata !DIExpression(DW_OP_LLVM_fragment, 256, 64)), !dbg !1682
  call void @llvm.dbg.value(metadata i8 0, metadata !1681, metadata !DIExpression(DW_OP_LLVM_fragment, 320, 8)), !dbg !1682
  %"$ret8.sroa.0.0.cast.1508.sroa_cast" = bitcast %User.0* %sret.formal.1 to i8*, !dbg !1691
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %"$ret8.sroa.0.0.cast.1508.sroa_cast", i8* nonnull align 8 %"$ret8.sroa.0.0.sroa_cast15", i64 32, i1 false), !dbg !1691
  %"$ret8.sroa.6.0.cast.1508.sroa_idx6" = getelementptr inbounds %User.0, %User.0* %sret.formal.1, i64 0, i32 2, !dbg !1691
  store i64 %.field.ld.65, i64* %"$ret8.sroa.6.0.cast.1508.sroa_idx6", align 8, !dbg !1691
  %"$ret8.sroa.7.0.cast.1508.sroa_idx" = getelementptr inbounds %User.0, %User.0* %sret.formal.1, i64 0, i32 3, !dbg !1691
  store i8 0, i8* %"$ret8.sroa.7.0.cast.1508.sroa_idx", align 8, !dbg !1691
  %"$ret8.sroa.8.0.cast.1508.sroa_raw_idx" = getelementptr inbounds i8, i8* %"$ret8.sroa.0.0.cast.1508.sroa_cast", i64 41, !dbg !1691
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %"$ret8.sroa.8.0.cast.1508.sroa_raw_idx", i8* align 1 getelementptr inbounds ([7 x i8], [7 x i8]* bitcast (i8* getelementptr inbounds (i8, i8* bitcast (%User.0* @const.243 to i8*), i64 41) to [7 x i8]*), i64 0, i64 0), i64 7, i1 false), !dbg !1691
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %"$ret8.sroa.0.0.sroa_cast15"), !dbg !1691
  ret void, !dbg !1691
}

define %Srv.0* @command_line_arguments.NewSrv(i8* nest nocapture readnone %nest.6, i64 %ctx.chunk0, i64 %ctx.chunk1, i64 %address.chunk0, i64 %address.chunk1, i64 %certFile.chunk0, i64 %certFile.chunk1, { i8*, i64 }* byval nocapture readonly %keyFile) #0 !dbg !1692 {
entry:
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %keyFile, metadata !1695, metadata !DIExpression()), !dbg !1696
  %tmpv.201 = alloca %Srv.0, align 8
  call void @llvm.dbg.value(metadata i64 %ctx.chunk0, metadata !1697, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1698
  call void @llvm.dbg.value(metadata i64 %ctx.chunk1, metadata !1697, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1698
  call void @llvm.dbg.value(metadata i64 %address.chunk0, metadata !1699, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1700
  call void @llvm.dbg.value(metadata i64 %address.chunk1, metadata !1699, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1700
  call void @llvm.dbg.value(metadata i64 %certFile.chunk0, metadata !1701, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1702
  call void @llvm.dbg.value(metadata i64 %certFile.chunk1, metadata !1701, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1702
  call void @llvm.dbg.value(metadata %Srv.0* null, metadata !1703, metadata !DIExpression()), !dbg !1704
  %call.46 = call { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* @__go_construct_map(i8* nest undef, i8* bitcast (%MapType.0* @type..map.6string.7.1command_line_arguments.Warp to i8*), i64 0, i64 24, i64 16, i8* null), !dbg !1705
  %call.47 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @sync.Mutex..d, i64 0, i32 0)), !dbg !1706
  %0 = bitcast i8* %call.47 to i64*, !dbg !1706
  store i64 0, i64* %0, align 4, !dbg !1706
  %call.48 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.Srv..d, i64 0, i32 0)), !dbg !1707
  %cast.844 = bitcast i8* %call.48 to %Srv.0*, !dbg !1707
  %address.addr.sroa.0.0.cast.845.sroa_cast = bitcast %Srv.0* %tmpv.201 to i64*, !dbg !1708
  store i64 %address.chunk0, i64* %address.addr.sroa.0.0.cast.845.sroa_cast, align 8, !dbg !1708
  %address.addr.sroa.2.0.cast.845.sroa_idx6 = getelementptr inbounds %Srv.0, %Srv.0* %tmpv.201, i64 0, i32 0, i32 1, !dbg !1708
  store i64 %address.chunk1, i64* %address.addr.sroa.2.0.cast.845.sroa_idx6, align 8, !dbg !1708
  %certFile.addr.sroa.0.0.cast.847.sroa_idx = getelementptr inbounds %Srv.0, %Srv.0* %tmpv.201, i64 0, i32 1, !dbg !1708
  %certFile.addr.sroa.0.0.cast.847.sroa_cast = bitcast { i8*, i64 }* %certFile.addr.sroa.0.0.cast.847.sroa_idx to i64*, !dbg !1708
  store i64 %certFile.chunk0, i64* %certFile.addr.sroa.0.0.cast.847.sroa_cast, align 8, !dbg !1708
  %certFile.addr.sroa.2.0.cast.847.sroa_idx5 = getelementptr inbounds %Srv.0, %Srv.0* %tmpv.201, i64 0, i32 1, i32 1, !dbg !1708
  store i64 %certFile.chunk1, i64* %certFile.addr.sroa.2.0.cast.847.sroa_idx5, align 8, !dbg !1708
  %field.221 = getelementptr inbounds %Srv.0, %Srv.0* %tmpv.201, i64 0, i32 2, !dbg !1708
  %cast.849 = bitcast { i8*, i64 }* %field.221 to i8*, !dbg !1708
  %cast.850 = bitcast { i8*, i64 }* %keyFile to i8*, !dbg !1708
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.849, i8* nonnull align 8 %cast.850, i64 16, i1 false), !dbg !1708
  %field.222 = getelementptr inbounds %Srv.0, %Srv.0* %tmpv.201, i64 0, i32 3, !dbg !1708
  store { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.46, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.222, align 8, !dbg !1708
  %field.223 = getelementptr inbounds %Srv.0, %Srv.0* %tmpv.201, i64 0, i32 4, !dbg !1708
  %1 = bitcast %Mutex.0** %field.223 to i8**, !dbg !1708
  store i8* %call.47, i8** %1, align 8, !dbg !1708
  %cast.853 = bitcast %Srv.0* %tmpv.201 to i8*, !dbg !1707
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.Srv..d, i64 0, i32 0), i8* %call.48, i8* nonnull %cast.853), !dbg !1707
  call void @llvm.dbg.value(metadata %Srv.0* %cast.844, metadata !1703, metadata !DIExpression()), !dbg !1704
  ret %Srv.0* %cast.844, !dbg !1709
}

declare { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* @__go_construct_map(i8*, i8*, i64, i64, i64, i8*) local_unnamed_addr #0

declare i8 @runtime.eqstring(i8*, i64, i64, i64, i64) local_unnamed_addr #0

declare void @crypto_tls.LoadX509KeyPair({ %Certificate.0, %error.0 }*, i8*, i64, i64, i64, i64) local_unnamed_addr #0

declare void @crypto_tls.Listen({ %Listener.0, %error.0 }*, i8*, i64, i64, i64, i64, %Config.0*) local_unnamed_addr #0

declare void @net.Listen({ %Listener.0, %error.0 }*, i8*, i64, i64, i64, i64) local_unnamed_addr #0

; Function Attrs: noinline
define internal i8 @command_line_arguments.command_line_arguments..thunk4(i8* nest nocapture readnone %nest.33, { %Listener.0 }* nocapture readonly %__go_thunk_parameter) #4 !dbg !1710 {
entry:
  call void @llvm.dbg.value(metadata { %Listener.0 }* %__go_thunk_parameter, metadata !1717, metadata !DIExpression()), !dbg !1718
  call void @llvm.dbg.value(metadata i8 0, metadata !1719, metadata !DIExpression()), !dbg !1718
  %call.203 = call i8 @runtime.setdeferretaddr(i8* nest undef, i8* blockaddress(@command_line_arguments.command_line_arguments..thunk4, %label.0)), !dbg !1718
  %0 = and i8 %call.203, 1, !dbg !1718
  %trunc.315 = icmp eq i8 %0, 0, !dbg !1718
  br i1 %trunc.315, label %else.315, label %label.0

else.315:                                         ; preds = %entry
  %tmpv.907.sroa.0.0.cast.2515.sroa_idx = getelementptr inbounds { %Listener.0 }, { %Listener.0 }* %__go_thunk_parameter, i64 0, i32 0, i32 0
  %tmpv.907.sroa.0.0.copyload = load { %_type.0*, void ({ %Conn.0, %error.0 }*, i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)* }*, { %_type.0*, void ({ %Conn.0, %error.0 }*, i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)* }** %tmpv.907.sroa.0.0.cast.2515.sroa_idx, align 8
  %tmpv.907.sroa.2.0.cast.2515.sroa_idx1 = getelementptr inbounds { %Listener.0 }, { %Listener.0 }* %__go_thunk_parameter, i64 0, i32 0, i32 1
  %tmpv.907.sroa.2.0.copyload = load i8*, i8** %tmpv.907.sroa.2.0.cast.2515.sroa_idx1, align 8
  %field.950 = getelementptr inbounds { %_type.0*, void ({ %Conn.0, %error.0 }*, i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)* }, { %_type.0*, void ({ %Conn.0, %error.0 }*, i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)* }* %tmpv.907.sroa.0.0.copyload, i64 0, i32 3, !dbg !1718
  %.field.ld.218 = load { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)** %field.950, align 8, !dbg !1718
  %call.204 = call { i64, i64 } %.field.ld.218(i8* nest undef, i8* %tmpv.907.sroa.2.0.copyload), !dbg !1718
  br label %label.0

label.0:                                          ; preds = %entry, %else.315
  call void @llvm.dbg.value(metadata i8 0, metadata !1719, metadata !DIExpression()), !dbg !1718
  ret i8 0, !dbg !1718
}

define internal void @command_line_arguments..1command_line_arguments.Srv.Run..func1(i8* nest nocapture readonly %"$closure") #0 !dbg !1720 {
entry:
  %tmp.55 = alloca %IPST.3, align 8
  %tmp.53 = alloca %IPST.3, align 8
  %tmpv.285 = alloca { i8*, i64 }, align 8
  %tmpv.286 = alloca [2 x %IPST.9], align 8
  %tmpv.291 = alloca { i8*, i64 }, align 8
  %tmpv.292 = alloca [1 x %IPST.9], align 8
  %field.323 = getelementptr inbounds i8, i8* %"$closure", i64 8, !dbg !1721
  %0 = bitcast i8* %field.323 to %Srv.0***, !dbg !1721
  %.field.ld.30 = load %Srv.0**, %Srv.0*** %0, align 8, !dbg !1721
  %.ld.68 = load %Srv.0*, %Srv.0** %.field.ld.30, align 8, !dbg !1721
  %field.324 = getelementptr inbounds i8, i8* %"$closure", i64 16, !dbg !1723
  %1 = bitcast i8* %field.324 to { i64, i64 }**, !dbg !1723
  %.field.ld.3115 = load { i64, i64 }*, { i64, i64 }** %1, align 8, !dbg !1723
  %field.325 = getelementptr inbounds i8, i8* %"$closure", i64 24, !dbg !1724
  %2 = bitcast i8* %field.325 to %Conn.0**, !dbg !1724
  %3 = bitcast i8* %field.325 to { i64, i64 }**, !dbg !1724
  %.field.ld.3216 = load { i64, i64 }*, { i64, i64 }** %3, align 8, !dbg !1724
  %field0.56 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %.field.ld.3115, i64 0, i32 0, !dbg !1725
  %ld.99 = load i64, i64* %field0.56, align 8, !dbg !1725
  %field1.56 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %.field.ld.3115, i64 0, i32 1, !dbg !1725
  %ld.100 = load i64, i64* %field1.56, align 8, !dbg !1725
  %field0.57 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %.field.ld.3216, i64 0, i32 0, !dbg !1725
  %ld.101 = load i64, i64* %field0.57, align 8, !dbg !1725
  %field1.57 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %.field.ld.3216, i64 0, i32 1, !dbg !1725
  %ld.102 = load i64, i64* %field1.57, align 8, !dbg !1725
  %call.70 = call { i64, i64 } @command_line_arguments.Srv.handle(i8* nest undef, %Srv.0* %.ld.68, i64 %ld.99, i64 %ld.100, i64 %ld.101, i64 %ld.102), !dbg !1725
  %call.70.fca.0.extract = extractvalue { i64, i64 } %call.70, 0, !dbg !1725
  call void @llvm.dbg.value(metadata i64 %call.70.fca.0.extract, metadata !1726, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1727
  %icmp.95 = icmp eq i64 %call.70.fca.0.extract, 0, !dbg !1728
  %.field.ld.33 = load %Conn.0*, %Conn.0** %2, align 8, !dbg !1729
  %field.327 = getelementptr inbounds %Conn.0, %Conn.0* %.field.ld.33, i64 0, i32 0, !dbg !1729
  %.field.ld.34 = load { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }** %field.327, align 8, !dbg !1729
  %field.328 = getelementptr inbounds { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }, { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }* %.field.ld.34, i64 0, i32 4, !dbg !1729
  %.field.ld.36 = load { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)** %field.328, align 8, !dbg !1729
  %field.330 = getelementptr inbounds %Conn.0, %Conn.0* %.field.ld.33, i64 0, i32 1, !dbg !1729
  %.field.ld.37 = load i8*, i8** %field.330, align 8, !dbg !1729
  %call.71 = call { i64, i64 } %.field.ld.36(i8* nest undef, i8* %.field.ld.37), !dbg !1729
  %call.71.fca.0.extract = extractvalue { i64, i64 } %call.71, 0, !dbg !1729
  %call.71.fca.1.extract = extractvalue { i64, i64 } %call.71, 1, !dbg !1729
  %4 = inttoptr i64 %call.71.fca.0.extract to { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)* }*, !dbg !1729
  %field.352 = getelementptr inbounds { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)* }, { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)* }* %4, i64 0, i32 2, !dbg !1729
  %.field.ld.46 = load { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)** %field.352, align 8, !dbg !1729
  %5 = inttoptr i64 %call.71.fca.1.extract to i8*, !dbg !1729
  %call.75 = call { i64, i64 } %.field.ld.46(i8* nest undef, i8* %5), !dbg !1729
  %call.75.fca.0.extract = extractvalue { i64, i64 } %call.75, 0, !dbg !1729
  %call.75.fca.1.extract = extractvalue { i64, i64 } %call.75, 1, !dbg !1729
  %call.76 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !1729
  br i1 %icmp.95, label %else.92, label %then.92

then.92:                                          ; preds = %entry
  %call.70.fca.1.extract = extractvalue { i64, i64 } %call.70, 1, !dbg !1725
  call void @llvm.dbg.value(metadata i64 %call.70.fca.1.extract, metadata !1726, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1727
  %tmpv.283.sroa.0.0.cast.1144.sroa_cast = bitcast { i8*, i64 }* %tmpv.285 to i64*
  store i64 %call.75.fca.0.extract, i64* %tmpv.283.sroa.0.0.cast.1144.sroa_cast, align 8
  %tmpv.283.sroa.2.0.cast.1144.sroa_idx5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.285, i64 0, i32 1
  store i64 %call.75.fca.1.extract, i64* %tmpv.283.sroa.2.0.cast.1144.sroa_idx5, align 8
  %cast.1147 = bitcast { i8*, i64 }* %tmpv.285 to i8*, !dbg !1730
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.76, i8* nonnull %cast.1147), !dbg !1730
  %6 = inttoptr i64 %call.70.fca.0.extract to i64*, !dbg !1731
  %.field.ld.3918 = load i64, i64* %6, align 8, !dbg !1731
  %7 = inttoptr i64 %call.70.fca.1.extract to i8*, !dbg !1730
  %tmp.51.sroa.0.0.cast.1151.sroa_idx = getelementptr inbounds [2 x %IPST.9], [2 x %IPST.9]* %tmpv.286, i64 0, i64 0, i32 0, !dbg !1730
  store %_type.0* @string..d, %_type.0** %tmp.51.sroa.0.0.cast.1151.sroa_idx, align 8, !dbg !1730
  %tmp.51.sroa.2.0.cast.1151.sroa_idx12 = getelementptr inbounds [2 x %IPST.9], [2 x %IPST.9]* %tmpv.286, i64 0, i64 0, i32 1, !dbg !1730
  store i8* %call.76, i8** %tmp.51.sroa.2.0.cast.1151.sroa_idx12, align 8, !dbg !1730
  %tmp.52.sroa.0.0.cast.1153.sroa_idx = getelementptr inbounds [2 x %IPST.9], [2 x %IPST.9]* %tmpv.286, i64 0, i64 1, i32 0, !dbg !1730
  %8 = bitcast %_type.0** %tmp.52.sroa.0.0.cast.1153.sroa_idx to i64*, !dbg !1730
  store i64 %.field.ld.3918, i64* %8, align 8, !dbg !1730
  %tmp.52.sroa.2.0.cast.1153.sroa_idx13 = getelementptr inbounds [2 x %IPST.9], [2 x %IPST.9]* %tmpv.286, i64 0, i64 1, i32 1, !dbg !1730
  store i8* %7, i8** %tmp.52.sroa.2.0.cast.1153.sroa_idx13, align 8, !dbg !1730
  %.field.ld.4019 = load { i64, i64 }*, { i64, i64 }** %1, align 8, !dbg !1732
  %field.343 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.53, i64 0, i32 0, !dbg !1730
  %cast.1157 = getelementptr inbounds [2 x %IPST.9], [2 x %IPST.9]* %tmpv.286, i64 0, i64 0, !dbg !1730
  store %IPST.9* %cast.1157, %IPST.9** %field.343, align 8, !dbg !1730
  %field.344 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.53, i64 0, i32 1, !dbg !1730
  store i64 2, i64* %field.344, align 8, !dbg !1730
  %field.345 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.53, i64 0, i32 2, !dbg !1730
  store i64 2, i64* %field.345, align 8, !dbg !1730
  %field0.58 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %.field.ld.4019, i64 0, i32 0, !dbg !1730
  %ld.103 = load i64, i64* %field0.58, align 8, !dbg !1730
  %field1.58 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %.field.ld.4019, i64 0, i32 1, !dbg !1730
  %ld.104 = load i64, i64* %field1.58, align 8, !dbg !1730
  call void @github_com_spolu_warp_lib_logging.Logf(i8* nest undef, i64 %ld.103, i64 %ld.104, i64 ptrtoint ([46 x i8]* @const.212 to i64), i64 45, %IPST.3* byval nonnull %tmp.53), !dbg !1730
  br label %fallthrough.92

fallthrough.92:                                   ; preds = %else.92, %then.92
  ret void

else.92:                                          ; preds = %entry
  %tmpv.289.sroa.0.0.cast.1165.sroa_cast = bitcast { i8*, i64 }* %tmpv.291 to i64*
  store i64 %call.75.fca.0.extract, i64* %tmpv.289.sroa.0.0.cast.1165.sroa_cast, align 8
  %tmpv.289.sroa.2.0.cast.1165.sroa_idx2 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.291, i64 0, i32 1
  store i64 %call.75.fca.1.extract, i64* %tmpv.289.sroa.2.0.cast.1165.sroa_idx2, align 8
  %cast.1168 = bitcast { i8*, i64 }* %tmpv.291 to i8*, !dbg !1733
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.76, i8* nonnull %cast.1168), !dbg !1733
  %tmp.54.sroa.0.0.cast.1170.sroa_idx = getelementptr inbounds [1 x %IPST.9], [1 x %IPST.9]* %tmpv.292, i64 0, i64 0, i32 0, !dbg !1733
  store %_type.0* @string..d, %_type.0** %tmp.54.sroa.0.0.cast.1170.sroa_idx, align 8, !dbg !1733
  %tmp.54.sroa.2.0.cast.1170.sroa_idx14 = getelementptr inbounds [1 x %IPST.9], [1 x %IPST.9]* %tmpv.292, i64 0, i64 0, i32 1, !dbg !1733
  store i8* %call.76, i8** %tmp.54.sroa.2.0.cast.1170.sroa_idx14, align 8, !dbg !1733
  %.field.ld.4717 = load { i64, i64 }*, { i64, i64 }** %1, align 8, !dbg !1734
  %field.357 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.55, i64 0, i32 0, !dbg !1733
  %cast.1174 = getelementptr inbounds [1 x %IPST.9], [1 x %IPST.9]* %tmpv.292, i64 0, i64 0, !dbg !1733
  store %IPST.9* %cast.1174, %IPST.9** %field.357, align 8, !dbg !1733
  %field.358 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.55, i64 0, i32 1, !dbg !1733
  store i64 1, i64* %field.358, align 8, !dbg !1733
  %field.359 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.55, i64 0, i32 2, !dbg !1733
  store i64 1, i64* %field.359, align 8, !dbg !1733
  %field0.60 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %.field.ld.4717, i64 0, i32 0, !dbg !1733
  %ld.107 = load i64, i64* %field0.60, align 8, !dbg !1733
  %field1.60 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %.field.ld.4717, i64 0, i32 1, !dbg !1733
  %ld.108 = load i64, i64* %field1.60, align 8, !dbg !1733
  call void @github_com_spolu_warp_lib_logging.Logf(i8* nest undef, i64 %ld.107, i64 %ld.108, i64 ptrtoint ([36 x i8]* @const.214 to i64), i64 35, %IPST.3* byval nonnull %tmp.55), !dbg !1733
  br label %fallthrough.92
}

define internal void @command_line_arguments.command_line_arguments..thunk5(i8* nest nocapture readnone %nest.34, { %__go_descriptor.10* }* nocapture readonly %__go_thunk_parameter) #0 !dbg !1735 {
entry:
  call void @llvm.dbg.value(metadata { %__go_descriptor.10* }* %__go_thunk_parameter, metadata !1736, metadata !DIExpression()), !dbg !1737
  %field.952 = getelementptr inbounds { %__go_descriptor.10* }, { %__go_descriptor.10* }* %__go_thunk_parameter, i64 0, i32 0, !dbg !1737
  %.field.ld.219 = load %__go_descriptor.10*, %__go_descriptor.10** %field.952, align 8, !dbg !1737
  %0 = getelementptr inbounds %__go_descriptor.10, %__go_descriptor.10* %.field.ld.219, i64 0, i32 0, !dbg !1737
  %deref.ld.741 = load void (i8*)*, void (i8*)** %0, align 8, !dbg !1737
  %cast.2519 = bitcast %__go_descriptor.10* %.field.ld.219 to i8*, !dbg !1737
  call void %deref.ld.741(i8* nest %cast.2519), !dbg !1737
  ret void
}

declare void @context.WithCancel({ %Context.0, %__go_descriptor.70* }*, i8*, i64, i64) local_unnamed_addr #0

define internal void @command_line_arguments.command_line_arguments..thunk6(i8* nest nocapture readnone %nest.35, { %Session.0* }* nocapture readonly %__go_thunk_parameter) #0 !dbg !1738 {
entry:
  call void @llvm.dbg.value(metadata { %Session.0* }* %__go_thunk_parameter, metadata !1745, metadata !DIExpression()), !dbg !1746
  %field.954 = getelementptr inbounds { %Session.0* }, { %Session.0* }* %__go_thunk_parameter, i64 0, i32 0, !dbg !1746
  %.field.ld.221 = load %Session.0*, %Session.0** %field.954, align 8, !dbg !1746
  call void @command_line_arguments.Session.TearDown(i8* nest undef, %Session.0* %.field.ld.221), !dbg !1746
  ret void
}

declare { i64, i8 } @runtime.mapaccess2(i8*, %_type.0*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, i8*) local_unnamed_addr #0

declare void @sync.Mutex.Unlock(i8*, %Mutex.0*) local_unnamed_addr #0

declare {}* @runtime.makechan(i8*, %_type.0*, i64) local_unnamed_addr #0

declare i8* @runtime.mapassign(i8*, %_type.0*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, i8*) local_unnamed_addr #0

declare i8* @runtime.mapaccess1(i8*, %_type.0*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, i8*) local_unnamed_addr #0

declare void @runtime.mapdelete(i8*, %_type.0*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, i8*) local_unnamed_addr #0

; Function Attrs: noinline
define internal i8 @command_line_arguments.command_line_arguments..thunk7(i8* nest nocapture readnone %nest.36, { %Mutex.0* }* nocapture readonly %__go_thunk_parameter) #4 !dbg !1747 {
entry:
  call void @llvm.dbg.value(metadata { %Mutex.0* }* %__go_thunk_parameter, metadata !1748, metadata !DIExpression()), !dbg !1749
  call void @llvm.dbg.value(metadata i8 0, metadata !1750, metadata !DIExpression()), !dbg !1749
  %call.205 = call i8 @runtime.setdeferretaddr(i8* nest undef, i8* blockaddress(@command_line_arguments.command_line_arguments..thunk7, %label.0)), !dbg !1749
  %0 = and i8 %call.205, 1, !dbg !1749
  %trunc.316 = icmp eq i8 %0, 0, !dbg !1749
  br i1 %trunc.316, label %else.316, label %label.0

else.316:                                         ; preds = %entry
  %field.955 = getelementptr inbounds { %Mutex.0* }, { %Mutex.0* }* %__go_thunk_parameter, i64 0, i32 0, !dbg !1749
  %.field.ld.222 = load %Mutex.0*, %Mutex.0** %field.955, align 8, !dbg !1749
  call void @sync.Mutex.Unlock(i8* nest undef, %Mutex.0* %.field.ld.222), !dbg !1749
  br label %label.0

label.0:                                          ; preds = %entry, %else.316
  call void @llvm.dbg.value(metadata i8 0, metadata !1750, metadata !DIExpression()), !dbg !1749
  ret i8 0, !dbg !1749
}

declare void @runtime.mapiterinit(i8*, %_type.0*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, i8*) local_unnamed_addr #0

declare void @runtime.mapiternext(i8*, i8*) local_unnamed_addr #0

declare void @runtime.growslice({ i8**, i64, i64 }*, i8*, %_type.0*, { i8**, i64, i64 }*, i64) local_unnamed_addr #0

declare void @runtime.chansend1(i8*, {}*, i8*) local_unnamed_addr #0

define internal void @command_line_arguments..1command_line_arguments.Warp.handleHost..func1(i8* nest nocapture readonly %"$closure") #0 !dbg !1751 {
entry:
  %tmp.105 = alloca %IPST.3, align 8
  %tmp.101 = alloca %IPST.3, align 8
  %tmp.98 = alloca %IPST.3, align 8
  %tmp.96 = alloca %IPST.3, align 8
  %tmp.92 = alloca %IPST.3, align 8
  %tmpv.655 = alloca { i8*, i64 }, align 8
  %tmpv.656 = alloca [2 x %IPST.9], align 8
  %tmpv.660 = alloca { %__go_descriptor.1*, %Session.0* }, align 8
  %tmpv.662 = alloca { i8*, i64 }, align 8
  %tmpv.664 = alloca { i8*, i64 }, align 8
  %tmpv.666 = alloca %__go_descriptor.1*, align 8
  %tmpv.668 = alloca { i8*, i64 }, align 8
  %tmpv.670 = alloca { i8*, i64 }, align 8
  %tmpv.671 = alloca [3 x %IPST.9], align 8
  %tmpv.680 = alloca { %__go_descriptor.1*, %Session.0* }, align 8
  %tmpv.683 = alloca %__go_descriptor.1*, align 8
  %tmpv.684 = alloca [1 x %IPST.9], align 8
  %user = alloca { i8*, i64 }, align 8
  %tmpv.688 = alloca { i8*, i64 }, align 8
  %tmpv.690 = alloca %IPST.7, align 8
  %tmpv.693 = alloca { i8*, i64 }, align 8
  %tmpv.706 = alloca { i8*, i64 }, align 8
  %tmpv.708 = alloca { i8*, i64 }, align 8
  %tmpv.709 = alloca [2 x %IPST.9], align 8
  %tmpv.715 = alloca { i8*, i64 }, align 8
  %tmpv.718 = alloca [3 x %IPST.9], align 8
  %call.148124 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @github_com_spolu_warp.HostUpdate..d, i64 0, i32 0)), !dbg !1752
  call void @llvm.dbg.value(metadata i8* %call.148124, metadata !1754, metadata !DIExpression()), !dbg !1755
  %field.654 = getelementptr inbounds i8, i8* %"$closure", i64 8, !dbg !1756
  %0 = bitcast i8* %field.654 to %Warp.0***, !dbg !1756
  %.field.ld.105125 = load %Warp.0**, %Warp.0*** %0, align 8, !dbg !1756
  %.ld.194126 = load %Warp.0*, %Warp.0** %.field.ld.105125, align 8, !dbg !1756
  %icmp.234127 = icmp eq %Warp.0* %.ld.194126, null, !dbg !1758
  br i1 %icmp.234127, label %then.217, label %else.217.lr.ph

else.217.lr.ph:                                   ; preds = %entry
  %field.698 = getelementptr inbounds i8, i8* %"$closure", i64 24
  %1 = bitcast i8* %field.698 to %Session.0***
  %2 = bitcast { i8*, i64 }* %user to i8*
  %cast.2104 = bitcast { i8*, i64 }* %tmpv.688 to i8*
  %cast.2106 = bitcast %IPST.7* %tmpv.690 to i8*
  %field.751 = getelementptr inbounds %IPST.7, %IPST.7* %tmpv.690, i64 0, i32 0
  %field.732 = getelementptr inbounds %IPST.7, %IPST.7* %tmpv.690, i64 0, i32 1
  %cast.2130 = bitcast { i8*, i64 }* %tmpv.693 to i8*
  %tmpv.711.sroa.0.0.cast.2175.sroa_cast = bitcast { i8*, i64 }* %tmpv.715 to i64*
  %tmpv.711.sroa.2.0.cast.2175.sroa_idx2 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.715, i64 0, i32 1
  %cast.2178 = bitcast { i8*, i64 }* %tmpv.715 to i8*
  %tmp.102.sroa.0.0.cast.2184.sroa_idx = getelementptr inbounds [3 x %IPST.9], [3 x %IPST.9]* %tmpv.718, i64 0, i64 0, i32 0
  %tmp.102.sroa.2.0.cast.2184.sroa_idx22 = getelementptr inbounds [3 x %IPST.9], [3 x %IPST.9]* %tmpv.718, i64 0, i64 0, i32 1
  %tmp.103.sroa.0.0.cast.2186.sroa_idx = getelementptr inbounds [3 x %IPST.9], [3 x %IPST.9]* %tmpv.718, i64 0, i64 1, i32 0
  %tmp.103.sroa.2.0.cast.2186.sroa_idx23 = getelementptr inbounds [3 x %IPST.9], [3 x %IPST.9]* %tmpv.718, i64 0, i64 1, i32 1
  %tmp.104.sroa.0.0.cast.2188.sroa_idx = getelementptr inbounds [3 x %IPST.9], [3 x %IPST.9]* %tmpv.718, i64 0, i64 2, i32 0
  %tmp.104.sroa.2.0.cast.2188.sroa_idx24 = getelementptr inbounds [3 x %IPST.9], [3 x %IPST.9]* %tmpv.718, i64 0, i64 2, i32 1
  %field.766 = getelementptr inbounds i8, i8* %"$closure", i64 16
  %3 = bitcast i8* %field.766 to { i64, i64 }**
  %field.767 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.105, i64 0, i32 0
  %cast.2192 = getelementptr inbounds [3 x %IPST.9], [3 x %IPST.9]* %tmpv.718, i64 0, i64 0
  %field.768 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.105, i64 0, i32 1
  %field.769 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.105, i64 0, i32 2
  %user174 = bitcast { i8*, i64 }* %user to i8*
  br label %else.217

then.217:                                         ; preds = %else.238, %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1758
  unreachable

else.217:                                         ; preds = %else.217.lr.ph, %else.238
  %.ld.194129 = phi %Warp.0* [ %.ld.194126, %else.217.lr.ph ], [ %.ld.194, %else.238 ]
  %call.148128 = phi i8* [ %call.148124, %else.217.lr.ph ], [ %call.148, %else.238 ]
  %field.656 = getelementptr inbounds %Warp.0, %Warp.0* %.ld.194129, i64 0, i32 2, !dbg !1758
  %.field.ld.107 = load %HostState.0*, %HostState.0** %field.656, align 8, !dbg !1758
  %icmp.235 = icmp eq %HostState.0* %.field.ld.107, null, !dbg !1759
  br i1 %icmp.235, label %then.218, label %else.218

then.218:                                         ; preds = %else.217
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1759
  unreachable

else.218:                                         ; preds = %else.217
  %field.657 = getelementptr inbounds %HostState.0, %HostState.0* %.field.ld.107, i64 0, i32 1, !dbg !1759
  %.field.ld.108 = load %Session.0*, %Session.0** %field.657, align 8, !dbg !1759
  %icmp.236 = icmp eq %Session.0* %.field.ld.108, null, !dbg !1760
  br i1 %icmp.236, label %then.219, label %else.219

then.219:                                         ; preds = %else.218
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1760
  unreachable

else.219:                                         ; preds = %else.218
  %field.658 = getelementptr inbounds %Session.0, %Session.0* %.field.ld.108, i64 0, i32 9, !dbg !1760
  %.field.ld.109 = load %Decoder.0*, %Decoder.0** %field.658, align 8, !dbg !1760
  %4 = ptrtoint i8* %call.148128 to i64, !dbg !1761
  %call.149 = call { i64, i64 } @encoding_gob.Decoder.Decode(i8* nest undef, %Decoder.0* %.field.ld.109, i64 ptrtoint (%PtrType.0* @type...1github_com_spolu_warp.HostUpdate to i64), i64 %4), !dbg !1762
  %call.149.fca.0.extract = extractvalue { i64, i64 } %call.149, 0, !dbg !1762
  call void @llvm.dbg.value(metadata i64 %call.149.fca.0.extract, metadata !1763, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1764
  %icmp.238 = icmp eq i64 %call.149.fca.0.extract, 0, !dbg !1765
  br i1 %icmp.238, label %else.220, label %then.220

then.220:                                         ; preds = %else.219
  %call.149.fca.1.extract = extractvalue { i64, i64 } %call.149, 1, !dbg !1762
  call void @llvm.dbg.value(metadata i64 %call.149.fca.1.extract, metadata !1763, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1764
  %.field.ld.110 = load %Session.0**, %Session.0*** %1, align 8, !dbg !1766
  %.ld.198 = load %Session.0*, %Session.0** %.field.ld.110, align 8, !dbg !1766
  %call.150 = call { i64, i64 } @command_line_arguments.Session.ToString(i8* nest undef, %Session.0* %.ld.198), !dbg !1767
  %call.150.fca.0.extract = extractvalue { i64, i64 } %call.150, 0, !dbg !1767
  %call.150.fca.1.extract = extractvalue { i64, i64 } %call.150, 1, !dbg !1767
  %call.151 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !1768
  %tmpv.653.sroa.0.0.cast.2007.sroa_cast = bitcast { i8*, i64 }* %tmpv.655 to i64*
  store i64 %call.150.fca.0.extract, i64* %tmpv.653.sroa.0.0.cast.2007.sroa_cast, align 8
  %tmpv.653.sroa.2.0.cast.2007.sroa_idx9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.655, i64 0, i32 1
  store i64 %call.150.fca.1.extract, i64* %tmpv.653.sroa.2.0.cast.2007.sroa_idx9, align 8
  %cast.2010 = bitcast { i8*, i64 }* %tmpv.655 to i8*, !dbg !1768
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.151, i8* nonnull %cast.2010), !dbg !1768
  %5 = inttoptr i64 %call.149.fca.0.extract to i64*, !dbg !1769
  %.field.ld.11135 = load i64, i64* %5, align 8, !dbg !1769
  %6 = inttoptr i64 %call.149.fca.1.extract to i8*, !dbg !1768
  %tmp.90.sroa.0.0.cast.2014.sroa_idx = getelementptr inbounds [2 x %IPST.9], [2 x %IPST.9]* %tmpv.656, i64 0, i64 0, i32 0, !dbg !1768
  store %_type.0* @string..d, %_type.0** %tmp.90.sroa.0.0.cast.2014.sroa_idx, align 8, !dbg !1768
  %tmp.90.sroa.2.0.cast.2014.sroa_idx14 = getelementptr inbounds [2 x %IPST.9], [2 x %IPST.9]* %tmpv.656, i64 0, i64 0, i32 1, !dbg !1768
  store i8* %call.151, i8** %tmp.90.sroa.2.0.cast.2014.sroa_idx14, align 8, !dbg !1768
  %tmp.91.sroa.0.0.cast.2016.sroa_idx = getelementptr inbounds [2 x %IPST.9], [2 x %IPST.9]* %tmpv.656, i64 0, i64 1, i32 0, !dbg !1768
  %7 = bitcast %_type.0** %tmp.91.sroa.0.0.cast.2016.sroa_idx to i64*, !dbg !1768
  store i64 %.field.ld.11135, i64* %7, align 8, !dbg !1768
  %tmp.91.sroa.2.0.cast.2016.sroa_idx15 = getelementptr inbounds [2 x %IPST.9], [2 x %IPST.9]* %tmpv.656, i64 0, i64 1, i32 1, !dbg !1768
  store i8* %6, i8** %tmp.91.sroa.2.0.cast.2016.sroa_idx15, align 8, !dbg !1768
  %.field.ld.11236 = load { i64, i64 }*, { i64, i64 }** %3, align 8, !dbg !1770
  %field.671 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.92, i64 0, i32 0, !dbg !1768
  %cast.2020 = getelementptr inbounds [2 x %IPST.9], [2 x %IPST.9]* %tmpv.656, i64 0, i64 0, !dbg !1768
  store %IPST.9* %cast.2020, %IPST.9** %field.671, align 8, !dbg !1768
  %field.672 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.92, i64 0, i32 1, !dbg !1768
  store i64 2, i64* %field.672, align 8, !dbg !1768
  %field.673 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.92, i64 0, i32 2, !dbg !1768
  store i64 2, i64* %field.673, align 8, !dbg !1768
  %field0.133 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %.field.ld.11236, i64 0, i32 0, !dbg !1768
  %ld.236 = load i64, i64* %field0.133, align 8, !dbg !1768
  %field1.133 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %.field.ld.11236, i64 0, i32 1, !dbg !1768
  %ld.237 = load i64, i64* %field1.133, align 8, !dbg !1768
  call void @github_com_spolu_warp_lib_logging.Logf(i8* nest undef, i64 %ld.236, i64 %ld.237, i64 ptrtoint ([49 x i8]* @const.277 to i64), i64 48, %IPST.3* byval nonnull %tmp.92), !dbg !1768
  br label %label.2

else.220:                                         ; preds = %else.219
  %.field.ld.117 = load %Warp.0**, %Warp.0*** %0, align 8, !dbg !1771
  %.ld.202 = load %Warp.0*, %Warp.0** %.field.ld.117, align 8, !dbg !1771
  %icmp.240 = icmp eq %Warp.0* %.ld.202, null, !dbg !1772
  br i1 %icmp.240, label %then.222, label %else.222

label.2:                                          ; preds = %else.234, %then.230, %else.224, %then.220
  %.field.ld.148 = load %Session.0**, %Session.0*** %1, align 8, !dbg !1773
  %.ld.228 = load %Session.0*, %Session.0** %.field.ld.148, align 8, !dbg !1773
  %.field.ld.14928 = load { i64, i64 }*, { i64, i64 }** %3, align 8, !dbg !1774
  %field0.152 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %.field.ld.14928, i64 0, i32 0, !dbg !1775
  %ld.274 = load i64, i64* %field0.152, align 8, !dbg !1775
  %field1.152 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %.field.ld.14928, i64 0, i32 1, !dbg !1775
  %ld.275 = load i64, i64* %field1.152, align 8, !dbg !1775
  call void @command_line_arguments.Session.SendInternalError(i8* nest undef, %Session.0* %.ld.228, i64 %ld.274, i64 %ld.275), !dbg !1775
  %.field.ld.150 = load %Session.0**, %Session.0*** %1, align 8, !dbg !1776
  %.ld.229 = load %Session.0*, %Session.0** %.field.ld.150, align 8, !dbg !1776
  call void @command_line_arguments.Session.TearDown(i8* nest undef, %Session.0* %.ld.229), !dbg !1777
  ret void

then.222:                                         ; preds = %else.220
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1772
  unreachable

else.222:                                         ; preds = %else.220
  %field0.137 = bitcast i8* %call.148128 to i64*, !dbg !1778
  %ld.244 = load i64, i64* %field0.137, align 8, !dbg !1778
  %field1.137 = getelementptr inbounds i8, i8* %call.148128, i64 8, !dbg !1778
  %8 = bitcast i8* %field1.137 to i64*, !dbg !1778
  %ld.245 = load i64, i64* %8, align 8, !dbg !1778
  %field0.138 = bitcast %Warp.0* %.ld.202 to i64*, !dbg !1778
  %ld.246 = load i64, i64* %field0.138, align 8, !dbg !1778
  %9 = getelementptr inbounds %Warp.0, %Warp.0* %.ld.202, i64 0, i32 0, i32 1, !dbg !1778
  %ld.247 = load i64, i64* %9, align 8, !dbg !1778
  %call.156 = call i8 @runtime.eqstring(i8* nest undef, i64 %ld.244, i64 %ld.245, i64 %ld.246, i64 %ld.247), !dbg !1778
  %icmp.241 = icmp eq i8 %call.156, 1, !dbg !1778
  br i1 %icmp.241, label %else.223, label %then.223

then.223:                                         ; preds = %else.222
  %call.152 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.4x.5fn.0func.8.9.8string.9.2val.0.1command_line_arguments.Session.5, i64 0, i32 0)), !dbg !1779
  %10 = bitcast i8* %field.698 to i64**, !dbg !1780
  %.field.ld.11333 = load i64*, i64** %10, align 8, !dbg !1780
  %.ld.19932 = load i64, i64* %.field.ld.11333, align 8, !dbg !1780
  %field.676 = getelementptr inbounds { %__go_descriptor.1*, %Session.0* }, { %__go_descriptor.1*, %Session.0* }* %tmpv.660, i64 0, i32 0, !dbg !1779
  store %__go_descriptor.1* bitcast ({ i64, i64 } (i8*)* @command_line_arguments.command_line_arguments..thunk0 to %__go_descriptor.1*), %__go_descriptor.1** %field.676, align 8, !dbg !1779
  %field.677 = getelementptr inbounds { %__go_descriptor.1*, %Session.0* }, { %__go_descriptor.1*, %Session.0* }* %tmpv.660, i64 0, i32 1, !dbg !1779
  %11 = bitcast %Session.0** %field.677 to i64*, !dbg !1779
  store i64 %.ld.19932, i64* %11, align 8, !dbg !1779
  %cast.2031 = bitcast { %__go_descriptor.1*, %Session.0* }* %tmpv.660 to i8*, !dbg !1779
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.4x.5fn.0func.8.9.8string.9.2val.0.1command_line_arguments.Session.5, i64 0, i32 0), i8* %call.152, i8* nonnull %cast.2031), !dbg !1779
  %.field.ld.114 = load %Warp.0**, %Warp.0*** %0, align 8, !dbg !1781
  %.ld.200 = load %Warp.0*, %Warp.0** %.field.ld.114, align 8, !dbg !1781
  %icmp.239 = icmp eq %Warp.0* %.ld.200, null, !dbg !1782
  br i1 %icmp.239, label %then.224, label %else.224

else.223:                                         ; preds = %else.222
  %.field.ld.119 = load %Session.0**, %Session.0*** %1, align 8, !dbg !1783
  %.ld.204 = load %Session.0*, %Session.0** %.field.ld.119, align 8, !dbg !1783
  %icmp.242 = icmp eq %Session.0* %.ld.204, null, !dbg !1784
  br i1 %icmp.242, label %then.225, label %else.225

then.224:                                         ; preds = %then.223
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1782
  unreachable

else.224:                                         ; preds = %then.223
  %cast.2034 = bitcast { i8*, i64 }* %tmpv.662 to i8*
  %cast.2035 = bitcast %Warp.0* %.ld.200 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2034, i8* align 8 %cast.2035, i64 16, i1 false)
  %cast.2036 = bitcast { i8*, i64 }* %tmpv.664 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2036, i8* nonnull align 8 %call.148128, i64 16, i1 false)
  %call.153 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.9.8string.9, i64 0, i32 0)), !dbg !1785
  %12 = bitcast %__go_descriptor.1** %tmpv.666 to i8**
  store i8* %call.152, i8** %12, align 8
  %cast.2042 = bitcast %__go_descriptor.1** %tmpv.666 to i8*, !dbg !1785
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.9.8string.9, i64 0, i32 0), i8* %call.153, i8* nonnull %cast.2042), !dbg !1785
  %call.154 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !1785
  %cast.2044 = bitcast { i8*, i64 }* %tmpv.668 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2044, i8* nonnull align 8 %cast.2034, i64 16, i1 false)
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.154, i8* nonnull %cast.2044), !dbg !1785
  %call.155 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !1785
  %cast.2049 = bitcast { i8*, i64 }* %tmpv.670 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2049, i8* nonnull align 8 %cast.2036, i64 16, i1 false)
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.155, i8* nonnull %cast.2049), !dbg !1785
  %tmp.93.sroa.0.0.cast.2057.sroa_idx = getelementptr inbounds [3 x %IPST.9], [3 x %IPST.9]* %tmpv.671, i64 0, i64 0, i32 0, !dbg !1785
  store %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.9.8string.9, i64 0, i32 0), %_type.0** %tmp.93.sroa.0.0.cast.2057.sroa_idx, align 8, !dbg !1785
  %tmp.93.sroa.2.0.cast.2057.sroa_idx16 = getelementptr inbounds [3 x %IPST.9], [3 x %IPST.9]* %tmpv.671, i64 0, i64 0, i32 1, !dbg !1785
  store i8* %call.153, i8** %tmp.93.sroa.2.0.cast.2057.sroa_idx16, align 8, !dbg !1785
  %tmp.94.sroa.0.0.cast.2059.sroa_idx = getelementptr inbounds [3 x %IPST.9], [3 x %IPST.9]* %tmpv.671, i64 0, i64 1, i32 0, !dbg !1785
  store %_type.0* @string..d, %_type.0** %tmp.94.sroa.0.0.cast.2059.sroa_idx, align 8, !dbg !1785
  %tmp.94.sroa.2.0.cast.2059.sroa_idx17 = getelementptr inbounds [3 x %IPST.9], [3 x %IPST.9]* %tmpv.671, i64 0, i64 1, i32 1, !dbg !1785
  store i8* %call.154, i8** %tmp.94.sroa.2.0.cast.2059.sroa_idx17, align 8, !dbg !1785
  %tmp.95.sroa.0.0.cast.2061.sroa_idx = getelementptr inbounds [3 x %IPST.9], [3 x %IPST.9]* %tmpv.671, i64 0, i64 2, i32 0, !dbg !1785
  store %_type.0* @string..d, %_type.0** %tmp.95.sroa.0.0.cast.2061.sroa_idx, align 8, !dbg !1785
  %tmp.95.sroa.2.0.cast.2061.sroa_idx18 = getelementptr inbounds [3 x %IPST.9], [3 x %IPST.9]* %tmpv.671, i64 0, i64 2, i32 1, !dbg !1785
  store i8* %call.155, i8** %tmp.95.sroa.2.0.cast.2061.sroa_idx18, align 8, !dbg !1785
  %.field.ld.11634 = load { i64, i64 }*, { i64, i64 }** %3, align 8, !dbg !1786
  %field.689 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.96, i64 0, i32 0, !dbg !1785
  %cast.2065 = getelementptr inbounds [3 x %IPST.9], [3 x %IPST.9]* %tmpv.671, i64 0, i64 0, !dbg !1785
  store %IPST.9* %cast.2065, %IPST.9** %field.689, align 8, !dbg !1785
  %field.690 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.96, i64 0, i32 1, !dbg !1785
  store i64 3, i64* %field.690, align 8, !dbg !1785
  %field.691 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.96, i64 0, i32 2, !dbg !1785
  store i64 3, i64* %field.691, align 8, !dbg !1785
  %field0.135 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %.field.ld.11634, i64 0, i32 0, !dbg !1785
  %ld.240 = load i64, i64* %field0.135, align 8, !dbg !1785
  %field1.135 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %.field.ld.11634, i64 0, i32 1, !dbg !1785
  %ld.241 = load i64, i64* %field1.135, align 8, !dbg !1785
  call void @github_com_spolu_warp_lib_logging.Logf(i8* nest undef, i64 %ld.240, i64 %ld.241, i64 ptrtoint ([61 x i8]* @const.281 to i64), i64 60, %IPST.3* byval nonnull %tmp.96), !dbg !1785
  br label %label.2

then.225:                                         ; preds = %else.223
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1784
  unreachable

else.225:                                         ; preds = %else.223
  %field.696 = getelementptr inbounds i8, i8* %call.148128, i64 16, !dbg !1787
  %field0.139 = bitcast i8* %field.696 to i64*, !dbg !1788
  %ld.248 = load i64, i64* %field0.139, align 8, !dbg !1788
  %field1.139 = getelementptr inbounds i8, i8* %call.148128, i64 24, !dbg !1788
  %13 = bitcast i8* %field1.139 to i64*, !dbg !1788
  %ld.249 = load i64, i64* %13, align 8, !dbg !1788
  %field0.140 = bitcast %Session.0* %.ld.204 to i64*, !dbg !1788
  %ld.250 = load i64, i64* %field0.140, align 8, !dbg !1788
  %14 = getelementptr inbounds %Session.0, %Session.0* %.ld.204, i64 0, i32 0, i32 0, i32 1, !dbg !1788
  %ld.251 = load i64, i64* %14, align 8, !dbg !1788
  %call.157 = call i8 @runtime.eqstring(i8* nest undef, i64 %ld.248, i64 %ld.249, i64 %ld.250, i64 %ld.251), !dbg !1788
  %icmp.243 = icmp eq i8 %call.157, 1, !dbg !1788
  br i1 %icmp.243, label %then.226, label %then.230

then.226:                                         ; preds = %else.225
  %.field.ld.121 = load %Session.0**, %Session.0*** %1, align 8, !dbg !1789
  %.ld.206 = load %Session.0*, %Session.0** %.field.ld.121, align 8, !dbg !1789
  %icmp.244 = icmp eq %Session.0* %.ld.206, null, !dbg !1790
  br i1 %icmp.244, label %then.227, label %fallthrough.226

fallthrough.226:                                  ; preds = %then.226
  %field.703 = getelementptr inbounds i8, i8* %call.148128, i64 32, !dbg !1791
  %field.707 = getelementptr inbounds %Session.0, %Session.0* %.ld.206, i64 0, i32 0, i32 1, !dbg !1792
  %field0.141 = bitcast i8* %field.703 to i64*, !dbg !1793
  %ld.252 = load i64, i64* %field0.141, align 8, !dbg !1793
  %field1.141 = getelementptr inbounds i8, i8* %call.148128, i64 40, !dbg !1793
  %15 = bitcast i8* %field1.141 to i64*, !dbg !1793
  %ld.253 = load i64, i64* %15, align 8, !dbg !1793
  %field0.142 = bitcast { i8*, i64 }* %field.707 to i64*, !dbg !1793
  %ld.254 = load i64, i64* %field0.142, align 8, !dbg !1793
  %16 = getelementptr inbounds %Session.0, %Session.0* %.ld.206, i64 0, i32 0, i32 1, i32 1, !dbg !1793
  %ld.255 = load i64, i64* %16, align 8, !dbg !1793
  %call.158 = call i8 @runtime.eqstring(i8* nest undef, i64 %ld.252, i64 %ld.253, i64 %ld.254, i64 %ld.255), !dbg !1793
  %icmp.245 = icmp eq i8 %call.158, 1, !dbg !1793
  br i1 %icmp.245, label %then.228, label %then.230

then.227:                                         ; preds = %then.226
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1790
  unreachable

then.228:                                         ; preds = %fallthrough.226
  %.field.ld.123 = load %Session.0**, %Session.0*** %1, align 8, !dbg !1794
  %.ld.208 = load %Session.0*, %Session.0** %.field.ld.123, align 8, !dbg !1794
  %icmp.247 = icmp eq %Session.0* %.ld.208, null, !dbg !1795
  br i1 %icmp.247, label %then.229, label %fallthrough.228

fallthrough.228:                                  ; preds = %then.228
  %field.709 = getelementptr inbounds i8, i8* %call.148128, i64 48, !dbg !1796
  %field.713 = getelementptr inbounds %Session.0, %Session.0* %.ld.208, i64 0, i32 0, i32 2, !dbg !1797
  %field0.143 = bitcast i8* %field.709 to i64*, !dbg !1798
  %ld.256 = load i64, i64* %field0.143, align 8, !dbg !1798
  %field1.143 = getelementptr inbounds i8, i8* %call.148128, i64 56, !dbg !1798
  %17 = bitcast i8* %field1.143 to i64*, !dbg !1798
  %ld.257 = load i64, i64* %17, align 8, !dbg !1798
  %field0.144 = bitcast { i8*, i64 }* %field.713 to i64*, !dbg !1798
  %ld.258 = load i64, i64* %field0.144, align 8, !dbg !1798
  %18 = getelementptr inbounds %Session.0, %Session.0* %.ld.208, i64 0, i32 0, i32 2, i32 1, !dbg !1798
  %ld.259 = load i64, i64* %18, align 8, !dbg !1798
  %call.159 = call i8 @runtime.eqstring(i8* nest undef, i64 %ld.256, i64 %ld.257, i64 %ld.258, i64 %ld.259), !dbg !1798
  %icmp.248 = icmp eq i8 %call.159, 1, !dbg !1798
  br i1 %icmp.248, label %else.230, label %then.230

then.229:                                         ; preds = %then.228
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1795
  unreachable

then.230:                                         ; preds = %fallthrough.228, %fallthrough.226, %else.225
  %call.160 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.4x.5fn.0func.8.9.8string.9.2val.0.1command_line_arguments.Session.5, i64 0, i32 0)), !dbg !1799
  %19 = bitcast i8* %field.698 to i64**, !dbg !1800
  %.field.ld.12530 = load i64*, i64** %19, align 8, !dbg !1800
  %.ld.21029 = load i64, i64* %.field.ld.12530, align 8, !dbg !1800
  %field.715 = getelementptr inbounds { %__go_descriptor.1*, %Session.0* }, { %__go_descriptor.1*, %Session.0* }* %tmpv.680, i64 0, i32 0, !dbg !1799
  store %__go_descriptor.1* bitcast ({ i64, i64 } (i8*)* @command_line_arguments.command_line_arguments..thunk0 to %__go_descriptor.1*), %__go_descriptor.1** %field.715, align 8, !dbg !1799
  %field.716 = getelementptr inbounds { %__go_descriptor.1*, %Session.0* }, { %__go_descriptor.1*, %Session.0* }* %tmpv.680, i64 0, i32 1, !dbg !1799
  %20 = bitcast %Session.0** %field.716 to i64*, !dbg !1799
  store i64 %.ld.21029, i64* %20, align 8, !dbg !1799
  %cast.2084 = bitcast { %__go_descriptor.1*, %Session.0* }* %tmpv.680 to i8*, !dbg !1799
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.4x.5fn.0func.8.9.8string.9.2val.0.1command_line_arguments.Session.5, i64 0, i32 0), i8* %call.160, i8* nonnull %cast.2084), !dbg !1799
  %call.161 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.9.8string.9, i64 0, i32 0)), !dbg !1801
  %21 = bitcast %__go_descriptor.1** %tmpv.683 to i8**
  store i8* %call.160, i8** %21, align 8
  %cast.2090 = bitcast %__go_descriptor.1** %tmpv.683 to i8*, !dbg !1801
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.9.8string.9, i64 0, i32 0), i8* %call.161, i8* nonnull %cast.2090), !dbg !1801
  %tmp.97.sroa.0.0.cast.2093.sroa_idx = getelementptr inbounds [1 x %IPST.9], [1 x %IPST.9]* %tmpv.684, i64 0, i64 0, i32 0, !dbg !1801
  store %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.9.8string.9, i64 0, i32 0), %_type.0** %tmp.97.sroa.0.0.cast.2093.sroa_idx, align 8, !dbg !1801
  %tmp.97.sroa.2.0.cast.2093.sroa_idx19 = getelementptr inbounds [1 x %IPST.9], [1 x %IPST.9]* %tmpv.684, i64 0, i64 0, i32 1, !dbg !1801
  store i8* %call.161, i8** %tmp.97.sroa.2.0.cast.2093.sroa_idx19, align 8, !dbg !1801
  %.field.ld.12631 = load { i64, i64 }*, { i64, i64 }** %3, align 8, !dbg !1802
  %field.720 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.98, i64 0, i32 0, !dbg !1801
  %cast.2097 = getelementptr inbounds [1 x %IPST.9], [1 x %IPST.9]* %tmpv.684, i64 0, i64 0, !dbg !1801
  store %IPST.9* %cast.2097, %IPST.9** %field.720, align 8, !dbg !1801
  %field.721 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.98, i64 0, i32 1, !dbg !1801
  store i64 1, i64* %field.721, align 8, !dbg !1801
  %field.722 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.98, i64 0, i32 2, !dbg !1801
  store i64 1, i64* %field.722, align 8, !dbg !1801
  %field0.145 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %.field.ld.12631, i64 0, i32 0, !dbg !1801
  %ld.260 = load i64, i64* %field0.145, align 8, !dbg !1801
  %field1.145 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %.field.ld.12631, i64 0, i32 1, !dbg !1801
  %ld.261 = load i64, i64* %field1.145, align 8, !dbg !1801
  call void @github_com_spolu_warp_lib_logging.Logf(i8* nest undef, i64 %ld.260, i64 %ld.261, i64 ptrtoint ([38 x i8]* @const.283 to i64), i64 37, %IPST.3* byval nonnull %tmp.98), !dbg !1801
  br label %label.2

else.230:                                         ; preds = %fallthrough.228
  %.field.ld.127 = load %Warp.0**, %Warp.0*** %0, align 8, !dbg !1803
  %.ld.211 = load %Warp.0*, %Warp.0** %.field.ld.127, align 8, !dbg !1803
  %icmp.250 = icmp eq %Warp.0* %.ld.211, null, !dbg !1804
  br i1 %icmp.250, label %then.231, label %else.231

then.231:                                         ; preds = %else.230
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1804
  unreachable

else.231:                                         ; preds = %else.230
  %field.725 = getelementptr inbounds %Warp.0, %Warp.0* %.ld.211, i64 0, i32 5, !dbg !1804
  %.field.ld.129 = load %Mutex.0*, %Mutex.0** %field.725, align 8, !dbg !1804
  call void @sync.Mutex.Lock(i8* nest undef, %Mutex.0* %.field.ld.129), !dbg !1805
  %.field.ld.130 = load %Warp.0**, %Warp.0*** %0, align 8, !dbg !1806
  %.ld.213 = load %Warp.0*, %Warp.0** %.field.ld.130, align 8, !dbg !1806
  %icmp.251 = icmp eq %Warp.0* %.ld.213, null, !dbg !1807
  br i1 %icmp.251, label %then.232, label %else.232

then.232:                                         ; preds = %else.231
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1807
  unreachable

else.232:                                         ; preds = %else.231
  %field.728 = getelementptr inbounds %Warp.0, %Warp.0* %.ld.213, i64 0, i32 1, !dbg !1807
  %field.729 = getelementptr inbounds i8, i8* %call.148128, i64 64, !dbg !1808
  %cast.2100 = bitcast %Size.0* %field.728 to i8*, !dbg !1809
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2100, i8* nonnull align 8 %field.729, i64 16, i1 false), !dbg !1809
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %2, i8 0, i64 16, i1 false)
  call void @llvm.dbg.value(metadata i64 0, metadata !1810, metadata !DIExpression()), !dbg !1812
  %field.730 = getelementptr inbounds i8, i8* %call.148128, i64 80, !dbg !1813
  %22 = bitcast i8* %field.730 to { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }**, !dbg !1813
  %.field.ld.132 = load { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %22, align 8, !dbg !1813
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %cast.2104, i8 0, i64 16, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %cast.2106, i8 0, i64 96, i1 false)
  call void @runtime.mapiterinit(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7github_com_spolu_warp.Mode, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %.field.ld.132, i8* nonnull %cast.2106), !dbg !1814
  %tmpv.690.field.ld.2121 = load { i8*, i64 }*, { i8*, i64 }** %field.751, align 8, !dbg !1814
  %icmp.255122 = icmp eq { i8*, i64 }* %tmpv.690.field.ld.2121, null, !dbg !1814
  br i1 %icmp.255122, label %else.237, label %then.237

then.233:                                         ; preds = %then.237
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1815
  unreachable

else.233:                                         ; preds = %then.237
  %field.735 = getelementptr inbounds %Warp.0, %Warp.0* %.ld.216, i64 0, i32 3, !dbg !1815
  %.field.ld.135 = load { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.735, align 8, !dbg !1815
  %call.162 = call { i64, i8 } @runtime.mapaccess2(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7.1command_line_arguments.UserState, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %.field.ld.135, i8* nonnull %cast.2130), !dbg !1817
  %call.162.fca.1.extract = extractvalue { i64, i8 } %call.162, 1, !dbg !1817
  call void @llvm.dbg.value(metadata i8 %call.162.fca.1.extract, metadata !1818, metadata !DIExpression()), !dbg !1819
  %23 = and i8 %call.162.fca.1.extract, 1, !dbg !1820
  %trunc.236 = icmp eq i8 %23, 0, !dbg !1820
  br i1 %trunc.236, label %else.234, label %then.234

then.234:                                         ; preds = %else.233
  %.field.ld.136 = load %Warp.0**, %Warp.0*** %0, align 8, !dbg !1821
  %.ld.219 = load %Warp.0*, %Warp.0** %.field.ld.136, align 8, !dbg !1821
  %icmp.253 = icmp eq %Warp.0* %.ld.219, null, !dbg !1822
  br i1 %icmp.253, label %then.235, label %else.235

else.234:                                         ; preds = %else.233
  %.field.ld.139 = load %Session.0**, %Session.0*** %1, align 8, !dbg !1823
  %.ld.223 = load %Session.0*, %Session.0** %.field.ld.139, align 8, !dbg !1823
  %call.164 = call { i64, i64 } @command_line_arguments.Session.ToString(i8* nest undef, %Session.0* %.ld.223), !dbg !1824
  %call.164.fca.0.extract = extractvalue { i64, i64 } %call.164, 0, !dbg !1824
  %call.164.fca.1.extract = extractvalue { i64, i64 } %call.164, 1, !dbg !1824
  %call.165 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !1825
  %tmpv.704.sroa.0.0.cast.2150.sroa_cast = bitcast { i8*, i64 }* %tmpv.706 to i64*
  store i64 %call.164.fca.0.extract, i64* %tmpv.704.sroa.0.0.cast.2150.sroa_cast, align 8
  %tmpv.704.sroa.2.0.cast.2150.sroa_idx4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.706, i64 0, i32 1
  store i64 %call.164.fca.1.extract, i64* %tmpv.704.sroa.2.0.cast.2150.sroa_idx4, align 8
  %cast.2153 = bitcast { i8*, i64 }* %tmpv.706 to i8*, !dbg !1825
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.165, i8* nonnull %cast.2153), !dbg !1825
  %call.166 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !1825
  %cast.2155 = bitcast { i8*, i64 }* %tmpv.708 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2155, i8* nonnull align 8 %2, i64 16, i1 false)
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.166, i8* nonnull %cast.2155), !dbg !1825
  %tmp.99.sroa.0.0.cast.2161.sroa_idx = getelementptr inbounds [2 x %IPST.9], [2 x %IPST.9]* %tmpv.709, i64 0, i64 0, i32 0, !dbg !1825
  store %_type.0* @string..d, %_type.0** %tmp.99.sroa.0.0.cast.2161.sroa_idx, align 8, !dbg !1825
  %tmp.99.sroa.2.0.cast.2161.sroa_idx20 = getelementptr inbounds [2 x %IPST.9], [2 x %IPST.9]* %tmpv.709, i64 0, i64 0, i32 1, !dbg !1825
  store i8* %call.165, i8** %tmp.99.sroa.2.0.cast.2161.sroa_idx20, align 8, !dbg !1825
  %tmp.100.sroa.0.0.cast.2163.sroa_idx = getelementptr inbounds [2 x %IPST.9], [2 x %IPST.9]* %tmpv.709, i64 0, i64 1, i32 0, !dbg !1825
  store %_type.0* @string..d, %_type.0** %tmp.100.sroa.0.0.cast.2163.sroa_idx, align 8, !dbg !1825
  %tmp.100.sroa.2.0.cast.2163.sroa_idx21 = getelementptr inbounds [2 x %IPST.9], [2 x %IPST.9]* %tmpv.709, i64 0, i64 1, i32 1, !dbg !1825
  store i8* %call.166, i8** %tmp.100.sroa.2.0.cast.2163.sroa_idx21, align 8, !dbg !1825
  %.field.ld.14027 = load { i64, i64 }*, { i64, i64 }** %3, align 8, !dbg !1826
  %field.748 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.101, i64 0, i32 0, !dbg !1825
  %cast.2167 = getelementptr inbounds [2 x %IPST.9], [2 x %IPST.9]* %tmpv.709, i64 0, i64 0, !dbg !1825
  store %IPST.9* %cast.2167, %IPST.9** %field.748, align 8, !dbg !1825
  %field.749 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.101, i64 0, i32 1, !dbg !1825
  store i64 2, i64* %field.749, align 8, !dbg !1825
  %field.750 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.101, i64 0, i32 2, !dbg !1825
  store i64 2, i64* %field.750, align 8, !dbg !1825
  %field0.147 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %.field.ld.14027, i64 0, i32 0, !dbg !1825
  %ld.264 = load i64, i64* %field0.147, align 8, !dbg !1825
  %field1.147 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %.field.ld.14027, i64 0, i32 1, !dbg !1825
  %ld.265 = load i64, i64* %field1.147, align 8, !dbg !1825
  call void @github_com_spolu_warp_lib_logging.Logf(i8* nest undef, i64 %ld.264, i64 %ld.265, i64 ptrtoint ([50 x i8]* @const.292 to i64), i64 49, %IPST.3* byval nonnull %tmp.101), !dbg !1825
  br label %label.2

then.235:                                         ; preds = %then.234
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1822
  unreachable

else.235:                                         ; preds = %then.234
  %field.740 = getelementptr inbounds %Warp.0, %Warp.0* %.ld.219, i64 0, i32 3, !dbg !1822
  %.field.ld.138 = load { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.740, align 8, !dbg !1822
  %call.163 = call i8* @runtime.mapaccess1(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7.1command_line_arguments.UserState, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %.field.ld.138, i8* nonnull %2), !dbg !1827
  %cast.2144 = bitcast i8* %call.163 to %UserState.0**, !dbg !1827
  %.ld.221 = load %UserState.0*, %UserState.0** %cast.2144, align 8, !dbg !1827
  %icmp.254 = icmp eq %UserState.0* %.ld.221, null, !dbg !1828
  br i1 %icmp.254, label %then.236, label %else.236

then.236:                                         ; preds = %else.235
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1828
  unreachable

else.236:                                         ; preds = %else.235
  %field.741 = getelementptr inbounds %UserState.0, %UserState.0* %.ld.221, i64 0, i32 2, !dbg !1828
  store i64 %.ld.215, i64* %field.741, align 8, !dbg !1829
  call void @runtime.mapiternext(i8* nest undef, i8* nonnull %cast.2106), !dbg !1814
  %tmpv.690.field.ld.2 = load { i8*, i64 }*, { i8*, i64 }** %field.751, align 8, !dbg !1814
  %icmp.255 = icmp eq { i8*, i64 }* %tmpv.690.field.ld.2, null, !dbg !1814
  br i1 %icmp.255, label %else.237, label %then.237

then.237:                                         ; preds = %else.232, %else.236
  %tmpv.690.field.ld.2123 = phi { i8*, i64 }* [ %tmpv.690.field.ld.2, %else.236 ], [ %tmpv.690.field.ld.2121, %else.232 ]
  %cast.2125 = bitcast { i8*, i64 }* %tmpv.690.field.ld.2123 to i8*, !dbg !1814
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2104, i8* align 8 %cast.2125, i64 16, i1 false), !dbg !1814
  %tmpv.690.field.ld.1 = load i64*, i64** %field.732, align 8, !dbg !1814
  %.ld.215 = load i64, i64* %tmpv.690.field.ld.1, align 8, !dbg !1814
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %user174, i8* nonnull align 8 %cast.2104, i64 16, i1 false)
  call void @llvm.dbg.value(metadata i64 %.ld.215, metadata !1810, metadata !DIExpression()), !dbg !1812
  call void @llvm.dbg.value(metadata i8 0, metadata !1818, metadata !DIExpression()), !dbg !1819
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2130, i8* nonnull align 8 %cast.2104, i64 16, i1 false)
  %.field.ld.133 = load %Warp.0**, %Warp.0*** %0, align 8, !dbg !1830
  %.ld.216 = load %Warp.0*, %Warp.0** %.field.ld.133, align 8, !dbg !1830
  %icmp.252 = icmp eq %Warp.0* %.ld.216, null, !dbg !1815
  br i1 %icmp.252, label %then.233, label %else.233

else.237:                                         ; preds = %else.236, %else.232
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2)
  %.field.ld.141 = load %Warp.0**, %Warp.0*** %0, align 8, !dbg !1831
  %.ld.224 = load %Warp.0*, %Warp.0** %.field.ld.141, align 8, !dbg !1831
  %icmp.256 = icmp eq %Warp.0* %.ld.224, null, !dbg !1832
  br i1 %icmp.256, label %then.238, label %else.238

then.238:                                         ; preds = %else.237
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1832
  unreachable

else.238:                                         ; preds = %else.237
  %field.754 = getelementptr inbounds %Warp.0, %Warp.0* %.ld.224, i64 0, i32 5, !dbg !1832
  %.field.ld.143 = load %Mutex.0*, %Mutex.0** %field.754, align 8, !dbg !1832
  call void @sync.Mutex.Unlock(i8* nest undef, %Mutex.0* %.field.ld.143), !dbg !1833
  %.field.ld.144 = load %Session.0**, %Session.0*** %1, align 8, !dbg !1834
  %.ld.226 = load %Session.0*, %Session.0** %.field.ld.144, align 8, !dbg !1834
  %call.167 = call { i64, i64 } @command_line_arguments.Session.ToString(i8* nest undef, %Session.0* %.ld.226), !dbg !1835
  %call.167.fca.0.extract = extractvalue { i64, i64 } %call.167, 0, !dbg !1835
  %call.167.fca.1.extract = extractvalue { i64, i64 } %call.167, 1, !dbg !1835
  %field.757 = bitcast i8* %field.729 to i64*, !dbg !1836
  %.field.field.ld.3 = load i64, i64* %field.757, align 8, !dbg !1836
  %field.759 = getelementptr inbounds i8, i8* %call.148128, i64 72, !dbg !1837
  %24 = bitcast i8* %field.759 to i64*, !dbg !1837
  %.field.field.ld.4 = load i64, i64* %24, align 8, !dbg !1837
  %call.168 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !1838
  store i64 %call.167.fca.0.extract, i64* %tmpv.711.sroa.0.0.cast.2175.sroa_cast, align 8
  store i64 %call.167.fca.1.extract, i64* %tmpv.711.sroa.2.0.cast.2175.sroa_idx2, align 8
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.168, i8* nonnull %cast.2178), !dbg !1838
  %call.169 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @int..d), !dbg !1838
  %cast.2179 = bitcast i8* %call.169 to i64*, !dbg !1838
  store i64 %.field.field.ld.3, i64* %cast.2179, align 8, !dbg !1838
  %call.170 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @int..d), !dbg !1838
  %cast.2180 = bitcast i8* %call.170 to i64*, !dbg !1838
  store i64 %.field.field.ld.4, i64* %cast.2180, align 8, !dbg !1838
  store %_type.0* @string..d, %_type.0** %tmp.102.sroa.0.0.cast.2184.sroa_idx, align 8, !dbg !1838
  store i8* %call.168, i8** %tmp.102.sroa.2.0.cast.2184.sroa_idx22, align 8, !dbg !1838
  store %_type.0* @int..d, %_type.0** %tmp.103.sroa.0.0.cast.2186.sroa_idx, align 8, !dbg !1838
  store i8* %call.169, i8** %tmp.103.sroa.2.0.cast.2186.sroa_idx23, align 8, !dbg !1838
  store %_type.0* @int..d, %_type.0** %tmp.104.sroa.0.0.cast.2188.sroa_idx, align 8, !dbg !1838
  store i8* %call.170, i8** %tmp.104.sroa.2.0.cast.2188.sroa_idx24, align 8, !dbg !1838
  %.field.ld.14525 = load { i64, i64 }*, { i64, i64 }** %3, align 8, !dbg !1839
  store %IPST.9* %cast.2192, %IPST.9** %field.767, align 8, !dbg !1838
  store i64 3, i64* %field.768, align 8, !dbg !1838
  store i64 3, i64* %field.769, align 8, !dbg !1838
  %field0.149 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %.field.ld.14525, i64 0, i32 0, !dbg !1838
  %ld.268 = load i64, i64* %field0.149, align 8, !dbg !1838
  %field1.149 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %.field.ld.14525, i64 0, i32 1, !dbg !1838
  %ld.269 = load i64, i64* %field1.149, align 8, !dbg !1838
  call void @github_com_spolu_warp_lib_logging.Logf(i8* nest undef, i64 %ld.268, i64 %ld.269, i64 ptrtoint ([49 x i8]* @const.294 to i64), i64 48, %IPST.3* byval nonnull %tmp.105), !dbg !1838
  %.field.ld.146 = load %Warp.0**, %Warp.0*** %0, align 8, !dbg !1840
  %.ld.227 = load %Warp.0*, %Warp.0** %.field.ld.146, align 8, !dbg !1840
  %.field.ld.14726 = load { i64, i64 }*, { i64, i64 }** %3, align 8, !dbg !1841
  %field0.151 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %.field.ld.14726, i64 0, i32 0, !dbg !1842
  %ld.272 = load i64, i64* %field0.151, align 8, !dbg !1842
  %field1.151 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %.field.ld.14726, i64 0, i32 1, !dbg !1842
  %ld.273 = load i64, i64* %field1.151, align 8, !dbg !1842
  call void @command_line_arguments.Warp.updateClientSessions(i8* nest undef, %Warp.0* %.ld.227, i64 %ld.272, i64 %ld.273), !dbg !1842
  %call.148 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @github_com_spolu_warp.HostUpdate..d, i64 0, i32 0)), !dbg !1752
  call void @llvm.dbg.value(metadata i8* %call.148, metadata !1754, metadata !DIExpression()), !dbg !1755
  %.field.ld.105 = load %Warp.0**, %Warp.0*** %0, align 8, !dbg !1756
  %.ld.194 = load %Warp.0*, %Warp.0** %.field.ld.105, align 8, !dbg !1756
  %icmp.234 = icmp eq %Warp.0* %.ld.194, null, !dbg !1758
  br i1 %icmp.234, label %then.217, label %else.217
}

define internal void @command_line_arguments.command_line_arguments..thunk8(i8* nest nocapture readnone %nest.37, { %__go_descriptor.10* }* nocapture readonly %__go_thunk_parameter) #0 !dbg !1843 {
entry:
  call void @llvm.dbg.value(metadata { %__go_descriptor.10* }* %__go_thunk_parameter, metadata !1844, metadata !DIExpression()), !dbg !1845
  %field.956 = getelementptr inbounds { %__go_descriptor.10* }, { %__go_descriptor.10* }* %__go_thunk_parameter, i64 0, i32 0, !dbg !1845
  %.field.ld.223 = load %__go_descriptor.10*, %__go_descriptor.10** %field.956, align 8, !dbg !1845
  %0 = getelementptr inbounds %__go_descriptor.10, %__go_descriptor.10* %.field.ld.223, i64 0, i32 0, !dbg !1845
  %deref.ld.751 = load void (i8*)*, void (i8*)** %0, align 8, !dbg !1845
  %cast.2522 = bitcast %__go_descriptor.10* %.field.ld.223 to i8*, !dbg !1845
  call void %deref.ld.751(i8* nest %cast.2522), !dbg !1845
  ret void
}

define internal void @command_line_arguments..1command_line_arguments.Warp.handleHost..func2(i8* nest nocapture readonly %"$closure") #0 !dbg !1846 {
entry:
  %tmpv.725 = alloca { i8*, %Warp.0**, %Context.0*, %Session.0** }, align 8
  %field.776 = getelementptr inbounds i8, i8* %"$closure", i64 8, !dbg !1847
  %0 = bitcast i8* %field.776 to %Context.0**, !dbg !1847
  %.field.ld.152 = load %Context.0*, %Context.0** %0, align 8, !dbg !1847
  %field.777 = getelementptr inbounds i8, i8* %"$closure", i64 24, !dbg !1847
  %1 = bitcast i8* %field.777 to %Session.0***, !dbg !1847
  %.field.ld.153 = load %Session.0**, %Session.0*** %1, align 8, !dbg !1847
  %.ld.230 = load %Session.0*, %Session.0** %.field.ld.153, align 8, !dbg !1848
  %icmp.257 = icmp eq %Session.0* %.ld.230, null, !dbg !1849
  br i1 %icmp.257, label %then.239, label %else.239

then.239:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1849
  unreachable

else.239:                                         ; preds = %entry
  %field.775 = getelementptr inbounds i8, i8* %"$closure", i64 16, !dbg !1847
  %2 = bitcast i8* %field.775 to i64*, !dbg !1847
  %.field.ld.1512 = load i64, i64* %2, align 8, !dbg !1847
  %tmpv.723.sroa.0.0.cast.2199.sroa_idx = getelementptr inbounds %Session.0, %Session.0* %.ld.230, i64 0, i32 12, i32 0
  %tmpv.723.sroa.0.0.copyload = load { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }** %tmpv.723.sroa.0.0.cast.2199.sroa_idx, align 8
  %tmpv.723.sroa.3.0.cast.2199.sroa_idx1 = getelementptr inbounds %Session.0, %Session.0* %.ld.230, i64 0, i32 12, i32 1
  %3 = bitcast i8** %tmpv.723.sroa.3.0.cast.2199.sroa_idx1 to i64*
  %tmpv.723.sroa.3.0.copyload3 = load i64, i64* %3, align 8
  %field.781 = getelementptr inbounds { i8*, %Warp.0**, %Context.0*, %Session.0** }, { i8*, %Warp.0**, %Context.0*, %Session.0** }* %tmpv.725, i64 0, i32 0, !dbg !1847
  store i8* bitcast (void (i8*, { i8*, i64, i64 }*)* @command_line_arguments..1command_line_arguments.Warp.handleHost..func3 to i8*), i8** %field.781, align 8, !dbg !1847
  %field.782 = getelementptr inbounds { i8*, %Warp.0**, %Context.0*, %Session.0** }, { i8*, %Warp.0**, %Context.0*, %Session.0** }* %tmpv.725, i64 0, i32 1, !dbg !1847
  %4 = bitcast %Warp.0*** %field.782 to i64*, !dbg !1847
  store i64 %.field.ld.1512, i64* %4, align 8, !dbg !1847
  %field.783 = getelementptr inbounds { i8*, %Warp.0**, %Context.0*, %Session.0** }, { i8*, %Warp.0**, %Context.0*, %Session.0** }* %tmpv.725, i64 0, i32 2, !dbg !1847
  store %Context.0* %.field.ld.152, %Context.0** %field.783, align 8, !dbg !1847
  %field.784 = getelementptr inbounds { i8*, %Warp.0**, %Context.0*, %Session.0** }, { i8*, %Warp.0**, %Context.0*, %Session.0** }* %tmpv.725, i64 0, i32 3, !dbg !1847
  store %Session.0** %.field.ld.153, %Session.0*** %field.784, align 8, !dbg !1847
  %cast.2202 = bitcast { i8*, %Warp.0**, %Context.0*, %Session.0** }* %tmpv.725 to %__go_descriptor.71*, !dbg !1847
  %icmp.258 = icmp eq { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }* %tmpv.723.sroa.0.0.copyload, null, !dbg !1849
  br i1 %icmp.258, label %fallthrough.240, label %else.240

fallthrough.240:                                  ; preds = %else.239, %else.240
  %tmpv.727.0 = phi %_type.0* [ %.field.ld.157, %else.240 ], [ null, %else.239 ]
  %call.171 = call i8* @runtime.requireitab(i8* nest undef, %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @io.Reader..d, i64 0, i32 0), %_type.0* %tmpv.727.0), !dbg !1849
  %5 = ptrtoint i8* %call.171 to i64, !dbg !1849
  %field0.153 = bitcast %Context.0* %.field.ld.152 to i64*, !dbg !1850
  %ld.276 = load i64, i64* %field0.153, align 8, !dbg !1850
  %field1.153 = getelementptr inbounds %Context.0, %Context.0* %.field.ld.152, i64 0, i32 1, !dbg !1850
  %6 = bitcast i8** %field1.153 to i64*, !dbg !1850
  %ld.277 = load i64, i64* %6, align 8, !dbg !1850
  call void @github_com_spolu_warp_lib_plex.Run(i8* nest undef, i64 %ld.276, i64 %ld.277, %__go_descriptor.71* nonnull %cast.2202, i64 %5, i64 %tmpv.723.sroa.3.0.copyload3), !dbg !1850
  %.field.ld.158 = load %Session.0**, %Session.0*** %1, align 8, !dbg !1851
  %.ld.232 = load %Session.0*, %Session.0** %.field.ld.158, align 8, !dbg !1851
  %7 = bitcast i8* %field.776 to { i64, i64 }**, !dbg !1852
  %.field.ld.1594 = load { i64, i64 }*, { i64, i64 }** %7, align 8, !dbg !1852
  %field0.155 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %.field.ld.1594, i64 0, i32 0, !dbg !1853
  %ld.280 = load i64, i64* %field0.155, align 8, !dbg !1853
  %field1.155 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %.field.ld.1594, i64 0, i32 1, !dbg !1853
  %ld.281 = load i64, i64* %field1.155, align 8, !dbg !1853
  call void @command_line_arguments.Session.SendInternalError(i8* nest undef, %Session.0* %.ld.232, i64 %ld.280, i64 %ld.281), !dbg !1853
  %.field.ld.160 = load %Session.0**, %Session.0*** %1, align 8, !dbg !1854
  %.ld.233 = load %Session.0*, %Session.0** %.field.ld.160, align 8, !dbg !1854
  call void @command_line_arguments.Session.TearDown(i8* nest undef, %Session.0* %.ld.233), !dbg !1855
  ret void

else.240:                                         ; preds = %else.239
  %field.788 = getelementptr inbounds { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }, { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }* %tmpv.723.sroa.0.0.copyload, i64 0, i32 0, !dbg !1849
  %.field.ld.157 = load %_type.0*, %_type.0** %field.788, align 8, !dbg !1849
  br label %fallthrough.240
}

define internal void @command_line_arguments.command_line_arguments..thunk9(i8* nest nocapture readnone %nest.38, { %__go_descriptor.10* }* nocapture readonly %__go_thunk_parameter) #0 !dbg !1856 {
entry:
  call void @llvm.dbg.value(metadata { %__go_descriptor.10* }* %__go_thunk_parameter, metadata !1857, metadata !DIExpression()), !dbg !1858
  %field.958 = getelementptr inbounds { %__go_descriptor.10* }, { %__go_descriptor.10* }* %__go_thunk_parameter, i64 0, i32 0, !dbg !1858
  %.field.ld.225 = load %__go_descriptor.10*, %__go_descriptor.10** %field.958, align 8, !dbg !1858
  %0 = getelementptr inbounds %__go_descriptor.10, %__go_descriptor.10* %.field.ld.225, i64 0, i32 0, !dbg !1858
  %deref.ld.761 = load void (i8*)*, void (i8*)** %0, align 8, !dbg !1858
  %cast.2525 = bitcast %__go_descriptor.10* %.field.ld.225 to i8*, !dbg !1858
  call void %deref.ld.761(i8* nest %cast.2525), !dbg !1858
  ret void
}

define internal void @command_line_arguments..1command_line_arguments.Warp.handleHost..func4(i8* nest nocapture readonly %"$closure") #0 !dbg !1859 {
entry:
  %buf = alloca { i8*, i64, i64 }, align 8
  %tmpv.728 = alloca { i8*, i64, i64 }, align 8
  %sret.actual.83 = alloca { i64, %error.0 }, align 8
  %0 = bitcast { i8*, i64, i64 }* %buf to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %0, i8 0, i64 24, i1 false)
  call void @llvm.dbg.value(metadata i8 0, metadata !1860, metadata !DIExpression()), !dbg !1862
  %cast.2215 = bitcast { i8*, i64, i64 }* %tmpv.728 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %cast.2215, i8 0, i64 24, i1 false)
  %field.798 = getelementptr inbounds i8, i8* %"$closure", i64 8, !dbg !1863
  %1 = bitcast i8* %field.798 to %Warp.0***, !dbg !1863
  %.field.ld.16414 = load %Warp.0**, %Warp.0*** %1, align 8, !dbg !1863
  %.ld.23615 = load %Warp.0*, %Warp.0** %.field.ld.16414, align 8, !dbg !1863
  %icmp.25916 = icmp eq %Warp.0* %.ld.23615, null, !dbg !1864
  br i1 %icmp.25916, label %then.241, label %else.241.lr.ph

else.241.lr.ph:                                   ; preds = %entry
  %field.801 = getelementptr inbounds i8, i8* %"$closure", i64 16
  %2 = bitcast i8* %field.801 to %Session.0***
  %tmpv.732.sroa.3.sroa.0.0.tmpv.732.sroa.3.0.cast.2227.sroa_cast.sroa_idx = getelementptr inbounds { i64, %error.0 }, { i64, %error.0 }* %sret.actual.83, i64 0, i32 1, i32 0
  br label %else.241

then.241:                                         ; preds = %else.244, %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1864
  unreachable

else.241:                                         ; preds = %else.241.lr.ph, %else.244
  %.ld.23617 = phi %Warp.0* [ %.ld.23615, %else.241.lr.ph ], [ %.ld.236, %else.244 ]
  %field.800 = getelementptr inbounds %Warp.0, %Warp.0* %.ld.23617, i64 0, i32 4, !dbg !1864
  %.field.ld.166 = load {}*, {}** %field.800, align 8, !dbg !1864
  %call.172 = call i8 @runtime.chanrecv2(i8* nest undef, {}* %.field.ld.166, i8* nonnull %cast.2215), !dbg !1865
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %cast.2215, i64 24, i1 false), !dbg !1865
  call void @llvm.dbg.value(metadata i8 %call.172, metadata !1860, metadata !DIExpression()), !dbg !1862
  %.field.ld.167 = load %Session.0**, %Session.0*** %2, align 8, !dbg !1866
  %.ld.238 = load %Session.0*, %Session.0** %.field.ld.167, align 8, !dbg !1866
  %icmp.260 = icmp eq %Session.0* %.ld.238, null, !dbg !1867
  br i1 %icmp.260, label %then.242, label %else.242

then.242:                                         ; preds = %else.241
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1867
  unreachable

else.242:                                         ; preds = %else.241
  %tmpv.733.sroa.0.0.cast.2225.sroa_idx = getelementptr inbounds %Session.0, %Session.0* %.ld.238, i64 0, i32 12, i32 0
  %tmpv.733.sroa.0.0.copyload = load { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }** %tmpv.733.sroa.0.0.cast.2225.sroa_idx, align 8
  %tmpv.733.sroa.2.0.cast.2225.sroa_idx1 = getelementptr inbounds %Session.0, %Session.0* %.ld.238, i64 0, i32 12, i32 1
  %tmpv.733.sroa.2.0.copyload = load i8*, i8** %tmpv.733.sroa.2.0.cast.2225.sroa_idx1, align 8
  %field.805 = getelementptr inbounds { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }, { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }* %tmpv.733.sroa.0.0.copyload, i64 0, i32 8, !dbg !1868
  %.field.ld.169 = load void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)** %field.805, align 8, !dbg !1868
  call void @llvm.dbg.value(metadata { i8*, i64, i64 }* %buf, metadata !1869, metadata !DIExpression(DW_OP_deref)), !dbg !1862
  call void %.field.ld.169({ i64, %error.0 }* nonnull sret %sret.actual.83, i8* nest undef, i8* %tmpv.733.sroa.2.0.copyload, { i8*, i64, i64 }* byval nonnull %buf), !dbg !1868
  %tmpv.732.sroa.3.sroa.0.0.copyload8 = load { %_type.0*, { i64, i64 } (i8*, i8*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)* }** %tmpv.732.sroa.3.sroa.0.0.tmpv.732.sroa.3.0.cast.2227.sroa_cast.sroa_idx, align 8, !dbg !1868
  call void @llvm.dbg.value(metadata { i64, %error.0 }* %sret.actual.83, metadata !1870, metadata !DIExpression(DW_OP_deref)), !dbg !1871
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.732.sroa.3.sroa.0.0.copyload8, metadata !1872, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1871
  call void @llvm.dbg.value(metadata { i64, %error.0 }* %sret.actual.83, metadata !1872, metadata !DIExpression(DW_OP_plus_uconst, 16, DW_OP_deref, DW_OP_stack_value, DW_OP_LLVM_fragment, 64, 64)), !dbg !1871
  %icmp.261 = icmp ne { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.732.sroa.3.sroa.0.0.copyload8, null, !dbg !1873
  %icmp.262 = icmp eq i8 %call.172, 0, !dbg !1874
  %or.cond = or i1 %icmp.262, %icmp.261
  br i1 %or.cond, label %label.2, label %else.244

label.2:                                          ; preds = %else.242
  %.field.ld.170 = load %Session.0**, %Session.0*** %2, align 8, !dbg !1875
  %.ld.240 = load %Session.0*, %Session.0** %.field.ld.170, align 8, !dbg !1875
  %field.811 = getelementptr inbounds i8, i8* %"$closure", i64 24, !dbg !1876
  %3 = bitcast i8* %field.811 to { i64, i64 }**, !dbg !1876
  %.field.ld.17112 = load { i64, i64 }*, { i64, i64 }** %3, align 8, !dbg !1876
  %field0.157 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %.field.ld.17112, i64 0, i32 0, !dbg !1877
  %ld.284 = load i64, i64* %field0.157, align 8, !dbg !1877
  %field1.157 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %.field.ld.17112, i64 0, i32 1, !dbg !1877
  %ld.285 = load i64, i64* %field1.157, align 8, !dbg !1877
  call void @command_line_arguments.Session.SendInternalError(i8* nest undef, %Session.0* %.ld.240, i64 %ld.284, i64 %ld.285), !dbg !1877
  %.field.ld.172 = load %Session.0**, %Session.0*** %2, align 8, !dbg !1878
  %.ld.241 = load %Session.0*, %Session.0** %.field.ld.172, align 8, !dbg !1878
  call void @command_line_arguments.Session.TearDown(i8* nest undef, %Session.0* %.ld.241), !dbg !1879
  ret void

else.244:                                         ; preds = %else.242
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %0, i8 0, i64 24, i1 false)
  call void @llvm.dbg.value(metadata i8 0, metadata !1860, metadata !DIExpression()), !dbg !1862
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %cast.2215, i8 0, i64 24, i1 false)
  %.field.ld.164 = load %Warp.0**, %Warp.0*** %1, align 8, !dbg !1863
  %.ld.236 = load %Warp.0*, %Warp.0** %.field.ld.164, align 8, !dbg !1863
  %icmp.259 = icmp eq %Warp.0* %.ld.236, null, !dbg !1864
  br i1 %icmp.259, label %then.241, label %else.241
}

define internal void @command_line_arguments.command_line_arguments..thunk10(i8* nest nocapture readnone %nest.39, { %__go_descriptor.10* }* nocapture readonly %__go_thunk_parameter) #0 !dbg !1880 {
entry:
  call void @llvm.dbg.value(metadata { %__go_descriptor.10* }* %__go_thunk_parameter, metadata !1881, metadata !DIExpression()), !dbg !1882
  %field.960 = getelementptr inbounds { %__go_descriptor.10* }, { %__go_descriptor.10* }* %__go_thunk_parameter, i64 0, i32 0, !dbg !1882
  %.field.ld.227 = load %__go_descriptor.10*, %__go_descriptor.10** %field.960, align 8, !dbg !1882
  %0 = getelementptr inbounds %__go_descriptor.10, %__go_descriptor.10* %.field.ld.227, i64 0, i32 0, !dbg !1882
  %deref.ld.771 = load void (i8*)*, void (i8*)** %0, align 8, !dbg !1882
  %cast.2528 = bitcast %__go_descriptor.10* %.field.ld.227 to i8*, !dbg !1882
  call void %deref.ld.771(i8* nest %cast.2528), !dbg !1882
  ret void
}

declare void @runtime.chanrecv1(i8*, {}*, i8*) local_unnamed_addr #0

declare void @runtime.closechan(i8*, {}*) local_unnamed_addr #0

define internal { i64, i64 } @command_line_arguments.command_line_arguments..thunk0(i8* nest nocapture readonly %"$closurecommand_line_arguments..thunk0") #0 !dbg !1883 {
entry:
  %field.943 = getelementptr inbounds i8, i8* %"$closurecommand_line_arguments..thunk0", i64 8, !dbg !1886
  %0 = bitcast i8* %field.943 to %Session.0**, !dbg !1886
  %.field.ld.213 = load %Session.0*, %Session.0** %0, align 8, !dbg !1886
  %call.200 = call { i64, i64 } @command_line_arguments.Session.ToString(i8* nest undef, %Session.0* %.field.ld.213), !dbg !1886
  ret { i64, i64 } %call.200, !dbg !1886
}

define internal void @command_line_arguments..1command_line_arguments.Warp.handleHost..func3(i8* nest nocapture readonly %"$closure", { i8*, i64, i64 }* byval %data) #0 !dbg !1887 {
entry:
  call void @llvm.dbg.declare(metadata { i8*, i64, i64 }* %data, metadata !1890, metadata !DIExpression()), !dbg !1891
  %field.795 = getelementptr inbounds i8, i8* %"$closure", i64 8, !dbg !1892
  %0 = bitcast i8* %field.795 to %Warp.0***, !dbg !1892
  %.field.ld.161 = load %Warp.0**, %Warp.0*** %0, align 8, !dbg !1892
  %.ld.234 = load %Warp.0*, %Warp.0** %.field.ld.161, align 8, !dbg !1892
  %field.796 = getelementptr inbounds i8, i8* %"$closure", i64 16, !dbg !1893
  %1 = bitcast i8* %field.796 to { i64, i64 }**, !dbg !1893
  %.field.ld.1621 = load { i64, i64 }*, { i64, i64 }** %1, align 8, !dbg !1893
  %field0.156 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %.field.ld.1621, i64 0, i32 0, !dbg !1894
  %ld.282 = load i64, i64* %field0.156, align 8, !dbg !1894
  %field1.156 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %.field.ld.1621, i64 0, i32 1, !dbg !1894
  %ld.283 = load i64, i64* %field1.156, align 8, !dbg !1894
  call void @command_line_arguments.Warp.rcvHostData(i8* nest undef, %Warp.0* %.ld.234, i64 %ld.282, i64 %ld.283, %Session.0* undef, { i8*, i64, i64 }* byval nonnull %data), !dbg !1894
  ret void
}

declare void @github_com_spolu_warp_lib_plex.Run(i8*, i64, i64, %__go_descriptor.71*, i64, i64) local_unnamed_addr #0

declare i8 @runtime.chanrecv2(i8*, {}*, i8*) local_unnamed_addr #0

define internal %Session.0* @command_line_arguments..1command_line_arguments.Warp.handleShellClient..func1(i8* nest nocapture readonly %"$closure") #0 !dbg !1895 {
entry:
  %tmpv.895 = alloca %IPST.6, align 8
  call void @llvm.dbg.value(metadata %Session.0* null, metadata !1896, metadata !DIExpression()), !dbg !1897
  call void @llvm.dbg.value(metadata %Session.0* null, metadata !1898, metadata !DIExpression()), !dbg !1900
  %field.914 = getelementptr inbounds i8, i8* %"$closure", i64 8, !dbg !1901
  %0 = bitcast i8* %field.914 to %UserState.0***, !dbg !1901
  %.field.ld.197 = load %UserState.0**, %UserState.0*** %0, align 8, !dbg !1901
  %.ld.347 = load %UserState.0*, %UserState.0** %.field.ld.197, align 8, !dbg !1901
  %icmp.324 = icmp eq %UserState.0* %.ld.347, null, !dbg !1902
  br i1 %icmp.324, label %then.309, label %else.309

then.309:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1902
  unreachable

else.309:                                         ; preds = %entry
  %field.916 = getelementptr inbounds %UserState.0, %UserState.0* %.ld.347, i64 0, i32 3, !dbg !1902
  %.field.ld.199 = load { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.916, align 8, !dbg !1902
  %cast.2475 = bitcast %IPST.6* %tmpv.895 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %cast.2475, i8 0, i64 96, i1 false)
  call void @runtime.mapiterinit(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7.1command_line_arguments.Session, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %.field.ld.199, i8* nonnull %cast.2475), !dbg !1903
  %field.919 = getelementptr inbounds %IPST.6, %IPST.6* %tmpv.895, i64 0, i32 0, !dbg !1903
  %tmpv.895.field.ld.2 = load { i8*, i64 }*, { i8*, i64 }** %field.919, align 8, !dbg !1903
  %icmp.325 = icmp eq { i8*, i64 }* %tmpv.895.field.ld.2, null, !dbg !1903
  br i1 %icmp.325, label %else.310, label %then.310

then.310:                                         ; preds = %else.309
  %field.918 = getelementptr inbounds %IPST.6, %IPST.6* %tmpv.895, i64 0, i32 1, !dbg !1903
  %tmpv.895.field.ld.1 = load %Session.0**, %Session.0*** %field.918, align 8, !dbg !1903
  %.ld.349 = load %Session.0*, %Session.0** %tmpv.895.field.ld.1, align 8, !dbg !1903
  call void @llvm.dbg.value(metadata %Session.0* %.ld.349, metadata !1898, metadata !DIExpression()), !dbg !1900
  call void @llvm.dbg.value(metadata %Session.0* %.ld.349, metadata !1896, metadata !DIExpression()), !dbg !1897
  ret %Session.0* %.ld.349, !dbg !1904

else.310:                                         ; preds = %else.309
  call void @llvm.dbg.value(metadata %Session.0* null, metadata !1896, metadata !DIExpression()), !dbg !1897
  ret %Session.0* null, !dbg !1905
}

define internal void @command_line_arguments..1command_line_arguments.Warp.handleShellClient..func2(i8* nest nocapture readonly %"$closure") #0 !dbg !1906 {
entry:
  %tmpv.903 = alloca { i8*, %Warp.0**, %Context.0*, %Session.0** }, align 8
  %field.921 = getelementptr inbounds i8, i8* %"$closure", i64 8, !dbg !1907
  %0 = bitcast i8* %field.921 to %Context.0**, !dbg !1907
  %.field.ld.201 = load %Context.0*, %Context.0** %0, align 8, !dbg !1907
  %field.922 = getelementptr inbounds i8, i8* %"$closure", i64 24, !dbg !1907
  %1 = bitcast i8* %field.922 to %Session.0***, !dbg !1907
  %.field.ld.202 = load %Session.0**, %Session.0*** %1, align 8, !dbg !1907
  %.ld.350 = load %Session.0*, %Session.0** %.field.ld.202, align 8, !dbg !1908
  %icmp.326 = icmp eq %Session.0* %.ld.350, null, !dbg !1909
  br i1 %icmp.326, label %then.311, label %else.311

then.311:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1909
  unreachable

else.311:                                         ; preds = %entry
  %field.920 = getelementptr inbounds i8, i8* %"$closure", i64 16, !dbg !1907
  %2 = bitcast i8* %field.920 to i64*, !dbg !1907
  %.field.ld.2002 = load i64, i64* %2, align 8, !dbg !1907
  %tmpv.901.sroa.0.0.cast.2488.sroa_idx = getelementptr inbounds %Session.0, %Session.0* %.ld.350, i64 0, i32 12, i32 0
  %tmpv.901.sroa.0.0.copyload = load { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }** %tmpv.901.sroa.0.0.cast.2488.sroa_idx, align 8
  %tmpv.901.sroa.3.0.cast.2488.sroa_idx1 = getelementptr inbounds %Session.0, %Session.0* %.ld.350, i64 0, i32 12, i32 1
  %3 = bitcast i8** %tmpv.901.sroa.3.0.cast.2488.sroa_idx1 to i64*
  %tmpv.901.sroa.3.0.copyload3 = load i64, i64* %3, align 8
  %field.926 = getelementptr inbounds { i8*, %Warp.0**, %Context.0*, %Session.0** }, { i8*, %Warp.0**, %Context.0*, %Session.0** }* %tmpv.903, i64 0, i32 0, !dbg !1907
  store i8* bitcast (void (i8*, { i8*, i64, i64 }*)* @command_line_arguments..1command_line_arguments.Warp.handleShellClient..func3 to i8*), i8** %field.926, align 8, !dbg !1907
  %field.927 = getelementptr inbounds { i8*, %Warp.0**, %Context.0*, %Session.0** }, { i8*, %Warp.0**, %Context.0*, %Session.0** }* %tmpv.903, i64 0, i32 1, !dbg !1907
  %4 = bitcast %Warp.0*** %field.927 to i64*, !dbg !1907
  store i64 %.field.ld.2002, i64* %4, align 8, !dbg !1907
  %field.928 = getelementptr inbounds { i8*, %Warp.0**, %Context.0*, %Session.0** }, { i8*, %Warp.0**, %Context.0*, %Session.0** }* %tmpv.903, i64 0, i32 2, !dbg !1907
  store %Context.0* %.field.ld.201, %Context.0** %field.928, align 8, !dbg !1907
  %field.929 = getelementptr inbounds { i8*, %Warp.0**, %Context.0*, %Session.0** }, { i8*, %Warp.0**, %Context.0*, %Session.0** }* %tmpv.903, i64 0, i32 3, !dbg !1907
  store %Session.0** %.field.ld.202, %Session.0*** %field.929, align 8, !dbg !1907
  %cast.2491 = bitcast { i8*, %Warp.0**, %Context.0*, %Session.0** }* %tmpv.903 to %__go_descriptor.71*, !dbg !1907
  %icmp.327 = icmp eq { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }* %tmpv.901.sroa.0.0.copyload, null, !dbg !1909
  br i1 %icmp.327, label %fallthrough.312, label %else.312

fallthrough.312:                                  ; preds = %else.311, %else.312
  %tmpv.905.0 = phi %_type.0* [ %.field.ld.206, %else.312 ], [ null, %else.311 ]
  %call.199 = call i8* @runtime.requireitab(i8* nest undef, %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @io.Reader..d, i64 0, i32 0), %_type.0* %tmpv.905.0), !dbg !1909
  %5 = ptrtoint i8* %call.199 to i64, !dbg !1909
  %field0.177 = bitcast %Context.0* %.field.ld.201 to i64*, !dbg !1910
  %ld.322 = load i64, i64* %field0.177, align 8, !dbg !1910
  %field1.177 = getelementptr inbounds %Context.0, %Context.0* %.field.ld.201, i64 0, i32 1, !dbg !1910
  %6 = bitcast i8** %field1.177 to i64*, !dbg !1910
  %ld.323 = load i64, i64* %6, align 8, !dbg !1910
  call void @github_com_spolu_warp_lib_plex.Run(i8* nest undef, i64 %ld.322, i64 %ld.323, %__go_descriptor.71* nonnull %cast.2491, i64 %5, i64 %tmpv.901.sroa.3.0.copyload3), !dbg !1910
  %.field.ld.207 = load %Session.0**, %Session.0*** %1, align 8, !dbg !1911
  %.ld.352 = load %Session.0*, %Session.0** %.field.ld.207, align 8, !dbg !1911
  %7 = bitcast i8* %field.921 to { i64, i64 }**, !dbg !1912
  %.field.ld.2084 = load { i64, i64 }*, { i64, i64 }** %7, align 8, !dbg !1912
  %field0.179 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %.field.ld.2084, i64 0, i32 0, !dbg !1913
  %ld.326 = load i64, i64* %field0.179, align 8, !dbg !1913
  %field1.179 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %.field.ld.2084, i64 0, i32 1, !dbg !1913
  %ld.327 = load i64, i64* %field1.179, align 8, !dbg !1913
  call void @command_line_arguments.Session.SendInternalError(i8* nest undef, %Session.0* %.ld.352, i64 %ld.326, i64 %ld.327), !dbg !1913
  %.field.ld.209 = load %Session.0**, %Session.0*** %1, align 8, !dbg !1914
  %.ld.353 = load %Session.0*, %Session.0** %.field.ld.209, align 8, !dbg !1914
  call void @command_line_arguments.Session.TearDown(i8* nest undef, %Session.0* %.ld.353), !dbg !1915
  ret void

else.312:                                         ; preds = %else.311
  %field.933 = getelementptr inbounds { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }, { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }* %tmpv.901.sroa.0.0.copyload, i64 0, i32 0, !dbg !1909
  %.field.ld.206 = load %_type.0*, %_type.0** %field.933, align 8, !dbg !1909
  br label %fallthrough.312
}

define internal void @command_line_arguments.command_line_arguments..thunk11(i8* nest nocapture readnone %nest.40, { %__go_descriptor.10* }* nocapture readonly %__go_thunk_parameter) #0 !dbg !1916 {
entry:
  call void @llvm.dbg.value(metadata { %__go_descriptor.10* }* %__go_thunk_parameter, metadata !1917, metadata !DIExpression()), !dbg !1918
  %field.962 = getelementptr inbounds { %__go_descriptor.10* }, { %__go_descriptor.10* }* %__go_thunk_parameter, i64 0, i32 0, !dbg !1918
  %.field.ld.229 = load %__go_descriptor.10*, %__go_descriptor.10** %field.962, align 8, !dbg !1918
  %0 = getelementptr inbounds %__go_descriptor.10, %__go_descriptor.10* %.field.ld.229, i64 0, i32 0, !dbg !1918
  %deref.ld.781 = load void (i8*)*, void (i8*)** %0, align 8, !dbg !1918
  %cast.2531 = bitcast %__go_descriptor.10* %.field.ld.229 to i8*, !dbg !1918
  call void %deref.ld.781(i8* nest %cast.2531), !dbg !1918
  ret void
}

define internal void @command_line_arguments..1command_line_arguments.Warp.handleShellClient..func3(i8* nest nocapture readonly %"$closure", { i8*, i64, i64 }* byval nocapture readonly %data) #0 !dbg !1919 {
entry:
  call void @llvm.dbg.declare(metadata { i8*, i64, i64 }* %data, metadata !1920, metadata !DIExpression()), !dbg !1921
  %field.940 = getelementptr inbounds i8, i8* %"$closure", i64 8, !dbg !1922
  %0 = bitcast i8* %field.940 to %Warp.0***, !dbg !1922
  %.field.ld.210 = load %Warp.0**, %Warp.0*** %0, align 8, !dbg !1922
  %.ld.354 = load %Warp.0*, %Warp.0** %.field.ld.210, align 8, !dbg !1922
  %field.942 = getelementptr inbounds i8, i8* %"$closure", i64 24, !dbg !1923
  %1 = bitcast i8* %field.942 to %Session.0***, !dbg !1923
  %.field.ld.212 = load %Session.0**, %Session.0*** %1, align 8, !dbg !1923
  %.ld.355 = load %Session.0*, %Session.0** %.field.ld.212, align 8, !dbg !1923
  call void @command_line_arguments.Warp.rcvShellClientData(i8* nest undef, %Warp.0* %.ld.354, i64 undef, i64 undef, %Session.0* %.ld.355, { i8*, i64, i64 }* byval nonnull %data), !dbg !1924
  ret void
}

declare i8 @runtime.setdeferretaddr(i8*, i8*) local_unnamed_addr #0

declare void @runtime.registerGCRoots(i8*, i8*) local_unnamed_addr #0

define void @command_line_arguments..import(i8* nest nocapture readnone %nest.53) local_unnamed_addr #0 !dbg !1925 {
entry:
  call void @runtime.registerGCRoots(i8* nest undef, i8* bitcast ({ i8*, i64, [67 x { i8*, i64, i64, i8* }] }* @go..C0 to i8*)), !dbg !1926
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.value(metadata, metadata, metadata) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1) #1

attributes #0 = { "disable-tail-calls"="true" "no-frame-pointer-elim"="false" "split-stack" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { noreturn "disable-tail-calls"="true" "no-frame-pointer-elim"="false" "split-stack" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" }
attributes #3 = { nounwind readnone speculatable }
attributes #4 = { noinline "disable-tail-calls"="true" "no-frame-pointer-elim"="false" "split-stack" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" }

!llvm.module.flags = !{!0}
!llvm.dbg.cu = !{!1}

!0 = !{i32 7, !"PIC Level", i32 0}
!1 = distinct !DICompileUnit(language: DW_LANG_Go, file: !2, producer: "llvm-goc", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3, globals: !4)
!2 = !DIFile(filename: "./session.go", directory: "/home/wangcong/go_path/src/github.com/spolu/warp/daemon")
!3 = !{}
!4 = !{!5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "runtime.writeBarrier", linkageName: "runtime.writeBarrier", scope: !1, file: !7, line: 1, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "<built-in>", directory: "")
!8 = !DIBasicType(name: "uint32", size: 32, encoding: DW_ATE_unsigned)
!9 = distinct !DISubprogram(name: "daemon.SendError..1command_line_arguments.Session", linkageName: "command_line_arguments.Session.SendError", scope: null, file: !10, line: 152, type: !11, isLocal: false, isDefinition: true, scopeLine: 152, isOptimized: false, unit: !1, retainedNodes: !3)
!10 = !DIFile(filename: "session.go", directory: ".")
!11 = !DISubroutineType(types: !12)
!12 = !{!13, !14, !14, !348, !21, !21}
!13 = !DIBasicType(name: "void")
!14 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15, size: 64)
!15 = !DICompositeType(tag: DW_TAG_structure_type, name: "Session", file: !10, line: 18, size: 1984, align: 8, elements: !16)
!16 = !{!17, !30, !31, !36, !37, !178, !283, !284, !319, !320, !343, !344, !345, !346, !347, !377, !385}
!17 = !DIDerivedType(tag: DW_TAG_member, name: "session", file: !10, line: 19, baseType: !18, size: 384, align: 64)
!18 = !DICompositeType(tag: DW_TAG_structure_type, name: "Session", file: !10, line: 12, size: 384, align: 8, elements: !19)
!19 = !{!20, !28, !29}
!20 = !DIDerivedType(tag: DW_TAG_member, name: "Token", file: !10, line: 12, baseType: !21, size: 128, align: 64)
!21 = !DICompositeType(tag: DW_TAG_structure_type, name: "string", file: !7, line: 1, size: 128, align: 8, elements: !22)
!22 = !{!23, !26}
!23 = !DIDerivedType(tag: DW_TAG_member, name: "__data", file: !7, line: 1, baseType: !24, size: 64, align: 64)
!24 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !25, size: 64)
!25 = !DIBasicType(name: "uint8", size: 8, encoding: DW_ATE_unsigned)
!26 = !DIDerivedType(tag: DW_TAG_member, name: "__length", file: !7, line: 1, baseType: !27, size: 64, align: 64, offset: 64)
!27 = !DIBasicType(name: "int", size: 64, encoding: DW_ATE_signed)
!28 = !DIDerivedType(tag: DW_TAG_member, name: "User", file: !10, line: 12, baseType: !21, size: 128, align: 64, offset: 128)
!29 = !DIDerivedType(tag: DW_TAG_member, name: "Secret", file: !10, line: 12, baseType: !21, size: 128, align: 64, offset: 256)
!30 = !DIDerivedType(tag: DW_TAG_member, name: "warp", file: !10, line: 21, baseType: !21, size: 128, align: 64, offset: 384)
!31 = !DIDerivedType(tag: DW_TAG_member, name: "sessionType", file: !10, line: 22, baseType: !32, size: 128, align: 64, offset: 512)
!32 = !DICompositeType(tag: DW_TAG_structure_type, name: "SessionType", file: !10, line: 12, size: 128, align: 8, elements: !33)
!33 = !{!34, !35}
!34 = !DIDerivedType(tag: DW_TAG_member, name: "__data", file: !10, line: 1, baseType: !24, size: 64, align: 64)
!35 = !DIDerivedType(tag: DW_TAG_member, name: "__length", file: !10, line: 1, baseType: !27, size: 64, align: 64, offset: 64)
!36 = !DIDerivedType(tag: DW_TAG_member, name: "username", file: !10, line: 24, baseType: !21, size: 128, align: 64, offset: 640)
!37 = !DIDerivedType(tag: DW_TAG_member, name: "conn", file: !10, line: 26, baseType: !38, size: 128, align: 64, offset: 768)
!38 = !DICompositeType(tag: DW_TAG_structure_type, name: "Conn", file: !10, line: 7, size: 128, align: 8, elements: !39)
!39 = !{!40, !124}
!40 = !DIDerivedType(tag: DW_TAG_member, name: "__methods", file: !10, line: 7, baseType: !41, size: 64, align: 64)
!41 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !42, size: 64)
!42 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*_type,*func(*void)error,*func(*void)Addr,*func(*void,struct{*uint8,int,int})struct{int,error},*func(*void)Addr,*func(*void,Time)error,*func(*void,Time)error,*func(*void,Time)error,*func(*void,struct{*uint8,int,int})struct{int,error}}", file: !43, size: 576, align: 8, elements: !44)
!43 = !DIFile(filename: "", directory: "")
!44 = !{!45, !96, !112, !125, !136, !137, !175, !176, !177}
!45 = !DIDerivedType(tag: DW_TAG_member, name: "__type_descriptor", file: !43, line: 7, baseType: !46, size: 64, align: 64)
!46 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !47, size: 64)
!47 = !DICompositeType(tag: DW_TAG_structure_type, name: "_type", file: !7, line: 1, size: 576, align: 8, elements: !48)
!48 = !{!49, !51, !52, !53, !54, !55, !56, !65, !74, !75, !77, !95}
!49 = !DIDerivedType(tag: DW_TAG_member, name: "size", file: !7, line: 1, baseType: !50, size: 64, align: 64)
!50 = !DIBasicType(name: "uintptr", size: 64, encoding: DW_ATE_unsigned)
!51 = !DIDerivedType(tag: DW_TAG_member, name: "ptrdata", file: !7, line: 1, baseType: !50, size: 64, align: 64, offset: 64)
!52 = !DIDerivedType(tag: DW_TAG_member, name: "hash", file: !7, line: 1, baseType: !8, size: 32, align: 32, offset: 128)
!53 = !DIDerivedType(tag: DW_TAG_member, name: "kind", file: !7, line: 1, baseType: !25, size: 8, align: 8, offset: 160)
!54 = !DIDerivedType(tag: DW_TAG_member, name: "align", file: !7, line: 1, baseType: !25, size: 8, align: 8, offset: 168)
!55 = !DIDerivedType(tag: DW_TAG_member, name: "fieldAlign", file: !7, line: 1, baseType: !25, size: 8, align: 8, offset: 176)
!56 = !DIDerivedType(tag: DW_TAG_member, name: "hashfn", file: !7, line: 1, baseType: !57, size: 64, align: 64, offset: 192)
!57 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !58, size: 64)
!58 = !DICompositeType(tag: DW_TAG_structure_type, name: "__go_descriptor", file: !7, line: 1, size: 64, align: 8, elements: !59)
!59 = !{!60}
!60 = !DIDerivedType(tag: DW_TAG_member, name: "code", file: !7, line: 1, baseType: !61, size: 64, align: 64)
!61 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !62, size: 64)
!62 = !DISubroutineType(types: !63)
!63 = !{!50, !64, !50}
!64 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13, size: 64)
!65 = !DIDerivedType(tag: DW_TAG_member, name: "equalfn", file: !7, line: 1, baseType: !66, size: 64, align: 64, offset: 256)
!66 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !67, size: 64)
!67 = !DICompositeType(tag: DW_TAG_structure_type, name: "__go_descriptor", file: !7, line: 1, size: 64, align: 8, elements: !68)
!68 = !{!69}
!69 = !DIDerivedType(tag: DW_TAG_member, name: "code", file: !7, line: 1, baseType: !70, size: 64, align: 64)
!70 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !71, size: 64)
!71 = !DISubroutineType(types: !72)
!72 = !{!73, !64, !64}
!73 = !DIBasicType(name: "bool", size: 8, encoding: DW_ATE_unsigned)
!74 = !DIDerivedType(tag: DW_TAG_member, name: "gcdata", file: !7, line: 1, baseType: !24, size: 64, align: 64, offset: 320)
!75 = !DIDerivedType(tag: DW_TAG_member, name: "string", file: !7, line: 1, baseType: !76, size: 64, align: 64, offset: 384)
!76 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !21, size: 64)
!77 = !DIDerivedType(tag: DW_TAG_member, name: "uncommonType", file: !7, line: 1, baseType: !78, size: 64, align: 64, offset: 448)
!78 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !79, size: 64)
!79 = !DICompositeType(tag: DW_TAG_structure_type, name: "uncommonType", file: !7, line: 1, size: 320, align: 8, elements: !80)
!80 = !{!81, !82, !83}
!81 = !DIDerivedType(tag: DW_TAG_member, name: "name", file: !7, line: 1, baseType: !76, size: 64, align: 64)
!82 = !DIDerivedType(tag: DW_TAG_member, name: "pkgPath", file: !7, line: 1, baseType: !76, size: 64, align: 64, offset: 64)
!83 = !DIDerivedType(tag: DW_TAG_member, name: "methods", file: !7, line: 1, baseType: !84, size: 192, align: 64, offset: 128)
!84 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*method,int,int}", file: !43, size: 192, align: 8, elements: !85)
!85 = !{!86, !93, !94}
!86 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !43, line: 1, baseType: !87, size: 64, align: 64)
!87 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !88, size: 64)
!88 = !DICompositeType(tag: DW_TAG_structure_type, name: "method", file: !7, line: 1, size: 320, align: 8, elements: !89)
!89 = !{!81, !82, !90, !91, !92}
!90 = !DIDerivedType(tag: DW_TAG_member, name: "mtyp", file: !7, line: 1, baseType: !64, size: 64, align: 64, offset: 128)
!91 = !DIDerivedType(tag: DW_TAG_member, name: "typ", file: !7, line: 1, baseType: !64, size: 64, align: 64, offset: 192)
!92 = !DIDerivedType(tag: DW_TAG_member, name: "tfn", file: !7, line: 1, baseType: !64, size: 64, align: 64, offset: 256)
!93 = !DIDerivedType(tag: DW_TAG_member, name: "__count", file: !43, line: 1, baseType: !27, size: 64, align: 64, offset: 64)
!94 = !DIDerivedType(tag: DW_TAG_member, name: "__capacity", file: !43, line: 1, baseType: !27, size: 64, align: 64, offset: 128)
!95 = !DIDerivedType(tag: DW_TAG_member, name: "ptrToThis", file: !7, line: 1, baseType: !64, size: 64, align: 64, offset: 512)
!96 = !DIDerivedType(tag: DW_TAG_member, name: "Close", file: !43, line: 7, baseType: !97, size: 64, align: 64, offset: 64)
!97 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !98, size: 64)
!98 = !DISubroutineType(types: !99)
!99 = !{!100, !64}
!100 = !DICompositeType(tag: DW_TAG_structure_type, name: "error", file: !7, line: 1, size: 128, align: 8, elements: !101)
!101 = !{!102, !111}
!102 = !DIDerivedType(tag: DW_TAG_member, name: "__methods", file: !7, line: 1, baseType: !103, size: 64, align: 64)
!103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !104, size: 64)
!104 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*_type,*func(*void)string}", file: !43, size: 128, align: 8, elements: !105)
!105 = !{!106, !107}
!106 = !DIDerivedType(tag: DW_TAG_member, name: "__type_descriptor", file: !43, line: 1, baseType: !46, size: 64, align: 64)
!107 = !DIDerivedType(tag: DW_TAG_member, name: "Error", file: !43, line: 1, baseType: !108, size: 64, align: 64, offset: 64)
!108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !109, size: 64)
!109 = !DISubroutineType(types: !110)
!110 = !{!21, !64}
!111 = !DIDerivedType(tag: DW_TAG_member, name: "__object", file: !7, line: 1, baseType: !64, size: 64, align: 64, offset: 64)
!112 = !DIDerivedType(tag: DW_TAG_member, name: "LocalAddr", file: !43, line: 7, baseType: !113, size: 64, align: 64, offset: 128)
!113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !114, size: 64)
!114 = !DISubroutineType(types: !115)
!115 = !{!116, !64}
!116 = !DICompositeType(tag: DW_TAG_structure_type, name: "Addr", file: !10, line: 7, size: 128, align: 8, elements: !117)
!117 = !{!118, !124}
!118 = !DIDerivedType(tag: DW_TAG_member, name: "__methods", file: !10, line: 7, baseType: !119, size: 64, align: 64)
!119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !120, size: 64)
!120 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*_type,*func(*void)string,*func(*void)string}", file: !43, size: 192, align: 8, elements: !121)
!121 = !{!45, !122, !123}
!122 = !DIDerivedType(tag: DW_TAG_member, name: "Network", file: !43, line: 7, baseType: !108, size: 64, align: 64, offset: 64)
!123 = !DIDerivedType(tag: DW_TAG_member, name: "String", file: !43, line: 7, baseType: !108, size: 64, align: 64, offset: 128)
!124 = !DIDerivedType(tag: DW_TAG_member, name: "__object", file: !10, line: 1, baseType: !64, size: 64, align: 64, offset: 64)
!125 = !DIDerivedType(tag: DW_TAG_member, name: "Read", file: !43, line: 7, baseType: !126, size: 64, align: 64, offset: 192)
!126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !127, size: 64)
!127 = !DISubroutineType(types: !128)
!128 = !{!129, !64, !133}
!129 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{int,error}", file: !43, size: 192, align: 8, elements: !130)
!130 = !{!131, !132}
!131 = !DIDerivedType(tag: DW_TAG_member, name: "n", file: !43, line: 7, baseType: !27, size: 64, align: 64)
!132 = !DIDerivedType(tag: DW_TAG_member, name: "err", file: !43, line: 7, baseType: !100, size: 128, align: 64, offset: 64)
!133 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*uint8,int,int}", file: !43, size: 192, align: 8, elements: !134)
!134 = !{!135, !93, !94}
!135 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !43, line: 1, baseType: !24, size: 64, align: 64)
!136 = !DIDerivedType(tag: DW_TAG_member, name: "RemoteAddr", file: !43, line: 7, baseType: !113, size: 64, align: 64, offset: 256)
!137 = !DIDerivedType(tag: DW_TAG_member, name: "SetDeadline", file: !43, line: 7, baseType: !138, size: 64, align: 64, offset: 320)
!138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !139, size: 64)
!139 = !DISubroutineType(types: !140)
!140 = !{!100, !64, !141}
!141 = !DICompositeType(tag: DW_TAG_structure_type, name: "Time", file: !10, line: 4, size: 192, align: 8, elements: !142)
!142 = !{!143, !145, !147}
!143 = !DIDerivedType(tag: DW_TAG_member, name: "wall", file: !10, line: 4, baseType: !144, size: 64, align: 64)
!144 = !DIBasicType(name: "uint64", size: 64, encoding: DW_ATE_unsigned)
!145 = !DIDerivedType(tag: DW_TAG_member, name: "ext", file: !10, line: 4, baseType: !146, size: 64, align: 64, offset: 64)
!146 = !DIBasicType(name: "int64", size: 64, encoding: DW_ATE_signed)
!147 = !DIDerivedType(tag: DW_TAG_member, name: "loc", file: !10, line: 4, baseType: !148, size: 64, align: 64, offset: 128)
!148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !149, size: 64)
!149 = !DICompositeType(tag: DW_TAG_structure_type, name: "Location", file: !10, line: 4, size: 704, align: 8, elements: !150)
!150 = !{!151, !152, !161, !172, !173, !174}
!151 = !DIDerivedType(tag: DW_TAG_member, name: "name", file: !10, line: 4, baseType: !21, size: 128, align: 64)
!152 = !DIDerivedType(tag: DW_TAG_member, name: "zone", file: !10, line: 4, baseType: !153, size: 192, align: 64, offset: 128)
!153 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*.time.zone,int,int}", file: !43, size: 192, align: 8, elements: !154)
!154 = !{!155, !93, !94}
!155 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !43, line: 1, baseType: !156, size: 64, align: 64)
!156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !157, size: 64)
!157 = !DICompositeType(tag: DW_TAG_structure_type, name: ".time.zone", file: !10, line: 4, size: 256, align: 8, elements: !158)
!158 = !{!151, !159, !160}
!159 = !DIDerivedType(tag: DW_TAG_member, name: "offset", file: !10, line: 4, baseType: !27, size: 64, align: 64, offset: 128)
!160 = !DIDerivedType(tag: DW_TAG_member, name: "isDST", file: !10, line: 4, baseType: !73, size: 8, align: 8, offset: 192)
!161 = !DIDerivedType(tag: DW_TAG_member, name: "tx", file: !10, line: 4, baseType: !162, size: 192, align: 64, offset: 320)
!162 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*.time.zoneTrans,int,int}", file: !43, size: 192, align: 8, elements: !163)
!163 = !{!164, !93, !94}
!164 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !43, line: 1, baseType: !165, size: 64, align: 64)
!165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !166, size: 64)
!166 = !DICompositeType(tag: DW_TAG_structure_type, name: ".time.zoneTrans", file: !10, line: 4, size: 128, align: 8, elements: !167)
!167 = !{!168, !169, !170, !171}
!168 = !DIDerivedType(tag: DW_TAG_member, name: "when", file: !10, line: 4, baseType: !146, size: 64, align: 64)
!169 = !DIDerivedType(tag: DW_TAG_member, name: "index", file: !10, line: 4, baseType: !25, size: 8, align: 8, offset: 64)
!170 = !DIDerivedType(tag: DW_TAG_member, name: "isstd", file: !10, line: 4, baseType: !73, size: 8, align: 8, offset: 72)
!171 = !DIDerivedType(tag: DW_TAG_member, name: "isutc", file: !10, line: 4, baseType: !73, size: 8, align: 8, offset: 80)
!172 = !DIDerivedType(tag: DW_TAG_member, name: "cacheStart", file: !10, line: 4, baseType: !146, size: 64, align: 64, offset: 512)
!173 = !DIDerivedType(tag: DW_TAG_member, name: "cacheEnd", file: !10, line: 4, baseType: !146, size: 64, align: 64, offset: 576)
!174 = !DIDerivedType(tag: DW_TAG_member, name: "cacheZone", file: !10, line: 4, baseType: !156, size: 64, align: 64, offset: 640)
!175 = !DIDerivedType(tag: DW_TAG_member, name: "SetReadDeadline", file: !43, line: 7, baseType: !138, size: 64, align: 64, offset: 384)
!176 = !DIDerivedType(tag: DW_TAG_member, name: "SetWriteDeadline", file: !43, line: 7, baseType: !138, size: 64, align: 64, offset: 448)
!177 = !DIDerivedType(tag: DW_TAG_member, name: "Write", file: !43, line: 7, baseType: !126, size: 64, align: 64, offset: 512)
!178 = !DIDerivedType(tag: DW_TAG_member, name: "mux", file: !10, line: 27, baseType: !179, size: 64, align: 64, offset: 896)
!179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !180, size: 64)
!180 = !DICompositeType(tag: DW_TAG_structure_type, name: "Session", file: !10, line: 11, size: 1408, align: 8, elements: !181)
!181 = !{!182, !184, !185, !186, !212, !225, !236, !254, !268, !269, !270, !271, !272, !273, !276, !277, !278, !279, !280, !281, !282}
!182 = !DIDerivedType(tag: DW_TAG_member, name: "remoteGoAway", file: !10, line: 11, baseType: !183, size: 32, align: 32)
!183 = !DIBasicType(name: "int32", size: 32, encoding: DW_ATE_signed)
!184 = !DIDerivedType(tag: DW_TAG_member, name: "localGoAway", file: !10, line: 11, baseType: !183, size: 32, align: 32, offset: 32)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "nextStreamID", file: !10, line: 11, baseType: !8, size: 32, align: 32, offset: 64)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "config", file: !10, line: 11, baseType: !187, size: 64, align: 64, offset: 128)
!187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !188, size: 64)
!188 = !DICompositeType(tag: DW_TAG_structure_type, name: "Config", file: !10, line: 11, size: 448, align: 8, elements: !189)
!189 = !{!190, !191, !192, !194, !195, !196}
!190 = !DIDerivedType(tag: DW_TAG_member, name: "AcceptBacklog", file: !10, line: 11, baseType: !27, size: 64, align: 64)
!191 = !DIDerivedType(tag: DW_TAG_member, name: "EnableKeepAlive", file: !10, line: 11, baseType: !73, size: 8, align: 8, offset: 64)
!192 = !DIDerivedType(tag: DW_TAG_member, name: "KeepAliveInterval", file: !10, line: 11, baseType: !193, size: 64, align: 64, offset: 128)
!193 = !DIBasicType(name: "Duration", size: 64, encoding: DW_ATE_signed)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "ConnectionWriteTimeout", file: !10, line: 11, baseType: !193, size: 64, align: 64, offset: 192)
!195 = !DIDerivedType(tag: DW_TAG_member, name: "MaxStreamWindowSize", file: !10, line: 11, baseType: !8, size: 32, align: 32, offset: 256)
!196 = !DIDerivedType(tag: DW_TAG_member, name: "LogOutput", file: !10, line: 11, baseType: !197, size: 128, align: 64, offset: 320)
!197 = !DICompositeType(tag: DW_TAG_structure_type, name: "Writer", file: !10, line: 5, size: 128, align: 8, elements: !198)
!198 = !{!199, !124}
!199 = !DIDerivedType(tag: DW_TAG_member, name: "__methods", file: !10, line: 5, baseType: !200, size: 64, align: 64)
!200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !201, size: 64)
!201 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*_type,*func(*void,struct{*uint8,int,int})struct{int,error}}", file: !43, size: 128, align: 8, elements: !202)
!202 = !{!203, !204}
!203 = !DIDerivedType(tag: DW_TAG_member, name: "__type_descriptor", file: !43, line: 5, baseType: !46, size: 64, align: 64)
!204 = !DIDerivedType(tag: DW_TAG_member, name: "Write", file: !43, line: 5, baseType: !205, size: 64, align: 64, offset: 64)
!205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !206, size: 64)
!206 = !DISubroutineType(types: !207)
!207 = !{!208, !64, !133}
!208 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{int,error}", file: !43, size: 192, align: 8, elements: !209)
!209 = !{!210, !211}
!210 = !DIDerivedType(tag: DW_TAG_member, name: "n", file: !43, line: 5, baseType: !27, size: 64, align: 64)
!211 = !DIDerivedType(tag: DW_TAG_member, name: "err", file: !43, line: 5, baseType: !100, size: 128, align: 64, offset: 64)
!212 = !DIDerivedType(tag: DW_TAG_member, name: "logger", file: !10, line: 11, baseType: !213, size: 64, align: 64, offset: 192)
!213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !214, size: 64)
!214 = !DICompositeType(tag: DW_TAG_structure_type, name: "Logger", file: !10, line: 11, size: 576, align: 8, elements: !215)
!215 = !{!216, !221, !222, !223, !224}
!216 = !DIDerivedType(tag: DW_TAG_member, name: "mu", file: !10, line: 11, baseType: !217, size: 64, align: 32)
!217 = !DICompositeType(tag: DW_TAG_structure_type, name: "Mutex", file: !10, line: 5, size: 64, align: 8, elements: !218)
!218 = !{!219, !220}
!219 = !DIDerivedType(tag: DW_TAG_member, name: "state", file: !10, line: 5, baseType: !183, size: 32, align: 32)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "sema", file: !10, line: 5, baseType: !8, size: 32, align: 32, offset: 32)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "prefix", file: !10, line: 11, baseType: !21, size: 128, align: 64, offset: 64)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "flag", file: !10, line: 11, baseType: !27, size: 64, align: 64, offset: 192)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "out", file: !10, line: 11, baseType: !197, size: 128, align: 64, offset: 256)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "buf", file: !10, line: 11, baseType: !133, size: 192, align: 64, offset: 384)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "conn", file: !10, line: 11, baseType: !226, size: 128, align: 64, offset: 256)
!226 = !DICompositeType(tag: DW_TAG_structure_type, name: "ReadWriteCloser", file: !10, line: 11, size: 128, align: 8, elements: !227)
!227 = !{!228, !124}
!228 = !DIDerivedType(tag: DW_TAG_member, name: "__methods", file: !10, line: 11, baseType: !229, size: 64, align: 64)
!229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !230, size: 64)
!230 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*_type,*func(*void)error,*func(*void,struct{*uint8,int,int})struct{int,error},*func(*void,struct{*uint8,int,int})struct{int,error}}", file: !43, size: 256, align: 8, elements: !231)
!231 = !{!232, !233, !234, !235}
!232 = !DIDerivedType(tag: DW_TAG_member, name: "__type_descriptor", file: !43, line: 11, baseType: !46, size: 64, align: 64)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "Close", file: !43, line: 11, baseType: !97, size: 64, align: 64, offset: 64)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "Read", file: !43, line: 11, baseType: !205, size: 64, align: 64, offset: 128)
!235 = !DIDerivedType(tag: DW_TAG_member, name: "Write", file: !43, line: 11, baseType: !205, size: 64, align: 64, offset: 192)
!236 = !DIDerivedType(tag: DW_TAG_member, name: "bufRead", file: !10, line: 11, baseType: !237, size: 64, align: 64, offset: 384)
!237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !238, size: 64)
!238 = !DICompositeType(tag: DW_TAG_structure_type, name: "Reader", file: !10, line: 11, size: 704, align: 8, elements: !239)
!239 = !{!240, !241, !249, !250, !251, !252, !253}
!240 = !DIDerivedType(tag: DW_TAG_member, name: "buf", file: !10, line: 11, baseType: !133, size: 192, align: 64)
!241 = !DIDerivedType(tag: DW_TAG_member, name: "rd", file: !10, line: 11, baseType: !242, size: 128, align: 64, offset: 192)
!242 = !DICompositeType(tag: DW_TAG_structure_type, name: "Reader", file: !10, line: 5, size: 128, align: 8, elements: !243)
!243 = !{!244, !124}
!244 = !DIDerivedType(tag: DW_TAG_member, name: "__methods", file: !10, line: 5, baseType: !245, size: 64, align: 64)
!245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !246, size: 64)
!246 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*_type,*func(*void,struct{*uint8,int,int})struct{int,error}}", file: !43, size: 128, align: 8, elements: !247)
!247 = !{!203, !248}
!248 = !DIDerivedType(tag: DW_TAG_member, name: "Read", file: !43, line: 5, baseType: !205, size: 64, align: 64, offset: 64)
!249 = !DIDerivedType(tag: DW_TAG_member, name: "r", file: !10, line: 11, baseType: !27, size: 64, align: 64, offset: 320)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "w", file: !10, line: 11, baseType: !27, size: 64, align: 64, offset: 384)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "err", file: !10, line: 11, baseType: !100, size: 128, align: 64, offset: 448)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "lastByte", file: !10, line: 11, baseType: !27, size: 64, align: 64, offset: 576)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "lastRuneSize", file: !10, line: 11, baseType: !27, size: 64, align: 64, offset: 640)
!254 = !DIDerivedType(tag: DW_TAG_member, name: "pings", file: !10, line: 11, baseType: !255, size: 64, align: 64, offset: 448)
!255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !256, size: 64)
!256 = !DICompositeType(tag: DW_TAG_structure_type, name: "runtime.hmap", file: !7, line: 1, size: 384, align: 8, elements: !257)
!257 = !{!258, !259, !260, !261, !263, !264, !265, !266, !267}
!258 = !DIDerivedType(tag: DW_TAG_member, name: "count", file: !7, line: 1, baseType: !27, size: 64, align: 64)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "flags", file: !7, line: 1, baseType: !25, size: 8, align: 8, offset: 64)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "B", file: !7, line: 1, baseType: !25, size: 8, align: 8, offset: 72)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "noverflow", file: !7, line: 1, baseType: !262, size: 16, align: 16, offset: 80)
!262 = !DIBasicType(name: "uint16", size: 16, encoding: DW_ATE_unsigned)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "hash0", file: !7, line: 1, baseType: !8, size: 32, align: 32, offset: 96)
!264 = !DIDerivedType(tag: DW_TAG_member, name: "buckets", file: !7, line: 1, baseType: !64, size: 64, align: 64, offset: 128)
!265 = !DIDerivedType(tag: DW_TAG_member, name: "oldbuckets", file: !7, line: 1, baseType: !64, size: 64, align: 64, offset: 192)
!266 = !DIDerivedType(tag: DW_TAG_member, name: "nevacuate", file: !7, line: 1, baseType: !50, size: 64, align: 64, offset: 256)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "extra", file: !7, line: 1, baseType: !64, size: 64, align: 64, offset: 320)
!268 = !DIDerivedType(tag: DW_TAG_member, name: "pingID", file: !10, line: 11, baseType: !8, size: 32, align: 32, offset: 512)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "pingLock", file: !10, line: 11, baseType: !217, size: 64, align: 32, offset: 544)
!270 = !DIDerivedType(tag: DW_TAG_member, name: "streams", file: !10, line: 11, baseType: !255, size: 64, align: 64, offset: 640)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "inflight", file: !10, line: 11, baseType: !255, size: 64, align: 64, offset: 704)
!272 = !DIDerivedType(tag: DW_TAG_member, name: "streamLock", file: !10, line: 11, baseType: !217, size: 64, align: 32, offset: 768)
!273 = !DIDerivedType(tag: DW_TAG_member, name: "synCh", file: !10, line: 11, baseType: !274, size: 64, align: 64, offset: 832)
!274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !275, size: 64)
!275 = !DICompositeType(tag: DW_TAG_structure_type, name: "__go_channel", file: !7, line: 1, align: 8, elements: !3)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "acceptCh", file: !10, line: 11, baseType: !274, size: 64, align: 64, offset: 896)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "sendCh", file: !10, line: 11, baseType: !274, size: 64, align: 64, offset: 960)
!278 = !DIDerivedType(tag: DW_TAG_member, name: "recvDoneCh", file: !10, line: 11, baseType: !274, size: 64, align: 64, offset: 1024)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", file: !10, line: 11, baseType: !73, size: 8, align: 8, offset: 1088)
!280 = !DIDerivedType(tag: DW_TAG_member, name: "shutdownErr", file: !10, line: 11, baseType: !100, size: 128, align: 64, offset: 1152)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "shutdownCh", file: !10, line: 11, baseType: !274, size: 64, align: 64, offset: 1280)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "shutdownLock", file: !10, line: 11, baseType: !217, size: 64, align: 32, offset: 1344)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "stateC", file: !10, line: 29, baseType: !38, size: 128, align: 64, offset: 960)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "stateW", file: !10, line: 30, baseType: !285, size: 64, align: 64, offset: 1088)
!285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !286, size: 64)
!286 = !DICompositeType(tag: DW_TAG_structure_type, name: "Encoder", file: !10, line: 5, size: 1280, align: 8, elements: !287)
!287 = !{!288, !289, !294, !295, !316, !317, !318}
!288 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", file: !10, line: 5, baseType: !217, size: 64, align: 32)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "w", file: !10, line: 5, baseType: !290, size: 192, align: 64, offset: 64)
!290 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*Writer,int,int}", file: !43, size: 192, align: 8, elements: !291)
!291 = !{!292, !93, !94}
!292 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !43, line: 1, baseType: !293, size: 64, align: 64)
!293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !197, size: 64)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "sent", file: !10, line: 5, baseType: !255, size: 64, align: 64, offset: 256)
!295 = !DIDerivedType(tag: DW_TAG_member, name: "countState", file: !10, line: 5, baseType: !296, size: 64, align: 64, offset: 320)
!296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !297, size: 64)
!297 = !DICompositeType(tag: DW_TAG_structure_type, name: ".encoding/gob.encoderState", file: !10, line: 5, size: 448, align: 8, elements: !298)
!298 = !{!299, !300, !309, !310, !311, !315}
!299 = !DIDerivedType(tag: DW_TAG_member, name: "enc", file: !10, line: 5, baseType: !64, size: 64, align: 64)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "b", file: !10, line: 5, baseType: !301, size: 64, align: 64, offset: 64)
!301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !302, size: 64)
!302 = !DICompositeType(tag: DW_TAG_structure_type, name: ".encoding/gob.encBuffer", file: !10, line: 5, size: 704, align: 8, elements: !303)
!303 = !{!304, !305}
!304 = !DIDerivedType(tag: DW_TAG_member, name: "data", file: !10, line: 5, baseType: !133, size: 192, align: 64)
!305 = !DIDerivedType(tag: DW_TAG_member, name: "scratch", file: !10, line: 5, baseType: !306, size: 512, align: 8, offset: 192)
!306 = !DICompositeType(tag: DW_TAG_array_type, baseType: !25, size: 512, align: 1, elements: !307)
!307 = !{!308}
!308 = !DISubrange(count: 64)
!309 = !DIDerivedType(tag: DW_TAG_member, name: "sendZero", file: !10, line: 5, baseType: !73, size: 8, align: 8, offset: 128)
!310 = !DIDerivedType(tag: DW_TAG_member, name: "fieldnum", file: !10, line: 5, baseType: !27, size: 64, align: 64, offset: 192)
!311 = !DIDerivedType(tag: DW_TAG_member, name: "buf", file: !10, line: 5, baseType: !312, size: 72, align: 8, offset: 256)
!312 = !DICompositeType(tag: DW_TAG_array_type, baseType: !25, size: 72, align: 1, elements: !313)
!313 = !{!314}
!314 = !DISubrange(count: 9)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "next", file: !10, line: 5, baseType: !64, size: 64, align: 64, offset: 384)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "freeList", file: !10, line: 5, baseType: !296, size: 64, align: 64, offset: 384)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "byteBuf", file: !10, line: 5, baseType: !302, size: 704, align: 64, offset: 448)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "err", file: !10, line: 5, baseType: !100, size: 128, align: 64, offset: 1152)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "updateC", file: !10, line: 31, baseType: !38, size: 128, align: 64, offset: 1152)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "updateR", file: !10, line: 32, baseType: !321, size: 64, align: 64, offset: 1280)
!321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !322, size: 64)
!322 = !DICompositeType(tag: DW_TAG_structure_type, name: "Decoder", file: !10, line: 5, size: 1024, align: 8, elements: !323)
!323 = !{!288, !324, !325, !329, !330, !331, !332, !341, !342}
!324 = !DIDerivedType(tag: DW_TAG_member, name: "r", file: !10, line: 5, baseType: !242, size: 128, align: 64, offset: 64)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "buf", file: !10, line: 5, baseType: !326, size: 256, align: 64, offset: 192)
!326 = !DICompositeType(tag: DW_TAG_structure_type, name: ".encoding/gob.decBuffer", file: !10, line: 5, size: 256, align: 8, elements: !327)
!327 = !{!304, !328}
!328 = !DIDerivedType(tag: DW_TAG_member, name: "offset", file: !10, line: 5, baseType: !27, size: 64, align: 64, offset: 192)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "wireType", file: !10, line: 5, baseType: !255, size: 64, align: 64, offset: 448)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "decoderCache", file: !10, line: 5, baseType: !255, size: 64, align: 64, offset: 512)
!331 = !DIDerivedType(tag: DW_TAG_member, name: "ignorerCache", file: !10, line: 5, baseType: !255, size: 64, align: 64, offset: 576)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "freeList", file: !10, line: 5, baseType: !333, size: 64, align: 64, offset: 640)
!333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !334, size: 64)
!334 = !DICompositeType(tag: DW_TAG_structure_type, name: ".encoding/gob.decoderState", file: !10, line: 5, size: 256, align: 8, elements: !335)
!335 = !{!336, !337, !339, !340}
!336 = !DIDerivedType(tag: DW_TAG_member, name: "dec", file: !10, line: 5, baseType: !64, size: 64, align: 64)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "b", file: !10, line: 5, baseType: !338, size: 64, align: 64, offset: 64)
!338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !326, size: 64)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "fieldnum", file: !10, line: 5, baseType: !27, size: 64, align: 64, offset: 128)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "next", file: !10, line: 5, baseType: !64, size: 64, align: 64, offset: 192)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "countBuf", file: !10, line: 5, baseType: !133, size: 192, align: 64, offset: 704)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "err", file: !10, line: 5, baseType: !100, size: 128, align: 64, offset: 896)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "errorC", file: !10, line: 33, baseType: !38, size: 128, align: 64, offset: 1344)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "errorW", file: !10, line: 34, baseType: !285, size: 64, align: 64, offset: 1472)
!345 = !DIDerivedType(tag: DW_TAG_member, name: "dataC", file: !10, line: 35, baseType: !38, size: 128, align: 64, offset: 1536)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "tornDown", file: !10, line: 37, baseType: !73, size: 8, align: 8, offset: 1664)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", file: !10, line: 38, baseType: !348, size: 128, align: 64, offset: 1728)
!348 = !DICompositeType(tag: DW_TAG_structure_type, name: "Context", file: !10, line: 4, size: 128, align: 8, elements: !349)
!349 = !{!350, !124}
!350 = !DIDerivedType(tag: DW_TAG_member, name: "__methods", file: !10, line: 4, baseType: !351, size: 64, align: 64)
!351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !352, size: 64)
!352 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*_type,*func(*void)struct{Time,bool},*func(*void)*__go_channel,*func(*void)error,*func(*void,PrivateKey)PrivateKey}", file: !43, size: 320, align: 8, elements: !353)
!353 = !{!354, !355, !363, !367, !368}
!354 = !DIDerivedType(tag: DW_TAG_member, name: "__type_descriptor", file: !43, line: 4, baseType: !46, size: 64, align: 64)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "Deadline", file: !43, line: 4, baseType: !356, size: 64, align: 64, offset: 64)
!356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !357, size: 64)
!357 = !DISubroutineType(types: !358)
!358 = !{!359, !64}
!359 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{Time,bool}", file: !43, size: 256, align: 8, elements: !360)
!360 = !{!361, !362}
!361 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", file: !43, line: 4, baseType: !141, size: 192, align: 64)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "ok", file: !43, line: 4, baseType: !73, size: 8, align: 8, offset: 192)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "Done", file: !43, line: 4, baseType: !364, size: 64, align: 64, offset: 128)
!364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !365, size: 64)
!365 = !DISubroutineType(types: !366)
!366 = !{!274, !64}
!367 = !DIDerivedType(tag: DW_TAG_member, name: "Err", file: !43, line: 4, baseType: !97, size: 64, align: 64, offset: 192)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "Value", file: !43, line: 4, baseType: !369, size: 64, align: 64, offset: 256)
!369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !370, size: 64)
!370 = !DISubroutineType(types: !371)
!371 = !{!372, !64, !372}
!372 = !DICompositeType(tag: DW_TAG_structure_type, name: "PrivateKey", file: !373, line: 5, size: 128, align: 8, elements: !374)
!373 = !DIFile(filename: "srv.go", directory: ".")
!374 = !{!375, !376}
!375 = !DIDerivedType(tag: DW_TAG_member, name: "__type_descriptor", file: !373, line: 1, baseType: !46, size: 64, align: 64)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "__object", file: !373, line: 1, baseType: !64, size: 64, align: 64, offset: 64)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "cancel", file: !10, line: 39, baseType: !378, size: 64, align: 64, offset: 1856)
!378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !379, size: 64)
!379 = !DICompositeType(tag: DW_TAG_structure_type, name: "__go_descriptor", file: !10, line: 39, size: 64, align: 8, elements: !380)
!380 = !{!381}
!381 = !DIDerivedType(tag: DW_TAG_member, name: "code", file: !10, line: 39, baseType: !382, size: 64, align: 64)
!382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !383, size: 64)
!383 = !DISubroutineType(types: !384)
!384 = !{!13}
!385 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", file: !10, line: 41, baseType: !386, size: 64, align: 64, offset: 1920)
!386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !217, size: 64)
!387 = !DILocalVariable(name: "message", arg: 4, scope: !9, file: !10, line: 155, type: !21)
!388 = !DILocation(line: 155, column: 2, scope: !9)
!389 = !DILocalVariable(name: "ss", arg: 1, scope: !9, file: !10, line: 152, type: !14)
!390 = !DILocation(line: 152, column: 1, scope: !9)
!391 = !DILocalVariable(name: "ctx", arg: 2, scope: !9, file: !10, line: 153, type: !348)
!392 = !DILocation(line: 153, column: 2, scope: !9)
!393 = !DILocalVariable(name: "code", arg: 3, scope: !9, file: !10, line: 154, type: !21)
!394 = !DILocation(line: 154, column: 2, scope: !9)
!395 = !DILocation(line: 157, column: 4, scope: !9)
!396 = !DILocation(line: 175, column: 1, scope: !9)
!397 = !DILocation(line: 157, column: 10, scope: !9)
!398 = !DILocation(line: 158, column: 10, scope: !9)
!399 = !DILocation(line: 158, column: 2, scope: !9)
!400 = !DILocation(line: 159, column: 7, scope: !9)
!401 = !DILocation(line: 159, column: 2, scope: !9)
!402 = !DILocation(line: 164, column: 5, scope: !9)
!403 = !DILocation(line: 162, column: 10, scope: !9)
!404 = !DILocation(line: 166, column: 34, scope: !405)
!405 = distinct !DILexicalBlock(scope: !9, file: !10, line: 166, column: 2)
!406 = !DILocation(line: 166, column: 14, scope: !405)
!407 = !DILocation(line: 166, column: 21, scope: !405)
!408 = !DILocalVariable(name: "err", scope: !405, file: !10, line: 166, type: !100)
!409 = !DILocation(line: 166, column: 5, scope: !9)
!410 = !DILocation(line: 169, column: 10, scope: !405)
!411 = !DILocation(line: 172, column: 6, scope: !405)
!412 = !DILocation(line: 170, column: 11, scope: !405)
!413 = !DILocation(line: 172, column: 19, scope: !405)
!414 = !DILocation(line: 160, column: 3, scope: !9)
!415 = distinct !DISubprogram(name: "daemon.SendInternalError..1command_line_arguments.Session", linkageName: "command_line_arguments.Session.SendInternalError", scope: null, file: !10, line: 179, type: !416, isLocal: false, isDefinition: true, scopeLine: 179, isOptimized: false, unit: !1, retainedNodes: !3)
!416 = !DISubroutineType(types: !417)
!417 = !{!13, !14, !14, !348}
!418 = !DILocalVariable(name: "ss", arg: 1, scope: !415, file: !10, line: 179, type: !14)
!419 = !DILocation(line: 179, column: 1, scope: !415)
!420 = !DILocalVariable(name: "ctx", arg: 2, scope: !415, file: !10, line: 180, type: !348)
!421 = !DILocation(line: 180, column: 2, scope: !415)
!422 = !DILocation(line: 186, column: 6, scope: !415)
!423 = !DILocation(line: 184, column: 7, scope: !415)
!424 = !DILocation(line: 182, column: 4, scope: !415)
!425 = distinct !DISubprogram(name: "daemon.TearDown..1command_line_arguments.Session", linkageName: "command_line_arguments.Session.TearDown", scope: null, file: !10, line: 134, type: !426, isLocal: false, isDefinition: true, scopeLine: 134, isOptimized: false, unit: !1, retainedNodes: !3)
!426 = !DISubroutineType(types: !427)
!427 = !{!13, !14, !14}
!428 = !DILocalVariable(name: "param", arg: 1, scope: !425, file: !10, line: 134, type: !14)
!429 = !DILocation(line: 134, column: 1, scope: !425)
!430 = !DILocation(line: 148, column: 1, scope: !425)
!431 = !DILocalVariable(name: "ss", scope: !425, file: !10, line: 134, type: !432)
!432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 64)
!433 = !DILocation(line: 135, column: 2, scope: !425)
!434 = !DILocation(line: 135, column: 4, scope: !425)
!435 = !DILocation(line: 135, column: 10, scope: !425)
!436 = !DILocation(line: 136, column: 8, scope: !425)
!437 = !DILocation(line: 136, column: 10, scope: !425)
!438 = !DILocation(line: 136, column: 2, scope: !425)
!439 = !DILocation(line: 137, column: 6, scope: !425)
!440 = !DILocation(line: 137, column: 8, scope: !425)
!441 = !DILocation(line: 137, column: 5, scope: !425)
!442 = !DILocation(line: 138, column: 3, scope: !425)
!443 = !DILocation(line: 138, column: 5, scope: !425)
!444 = !DILocation(line: 138, column: 15, scope: !425)
!445 = !DILocation(line: 139, column: 3, scope: !425)
!446 = !DILocation(line: 139, column: 5, scope: !425)
!447 = !DILocation(line: 140, column: 6, scope: !425)
!448 = !DILocation(line: 140, column: 3, scope: !425)
!449 = distinct !DISubprogram(name: "daemon.ToString..1command_line_arguments.Session", linkageName: "command_line_arguments.Session.ToString", scope: null, file: !10, line: 127, type: !450, isLocal: false, isDefinition: true, scopeLine: 127, isOptimized: false, unit: !1, retainedNodes: !3)
!450 = !DISubroutineType(types: !451)
!451 = !{!21, !14, !14}
!452 = !DILocalVariable(name: "ss", arg: 1, scope: !449, file: !10, line: 127, type: !14)
!453 = !DILocation(line: 127, column: 1, scope: !449)
!454 = !DILocation(line: 129, column: 17, scope: !449)
!455 = !DILocation(line: 129, column: 34, scope: !449)
!456 = !DILocation(line: 128, column: 13, scope: !449)
!457 = !DILocation(line: 128, column: 2, scope: !449)
!458 = distinct !DISubprogram(name: "daemon.NewSession", linkageName: "command_line_arguments.NewSession", scope: null, file: !10, line: 46, type: !459, isLocal: false, isDefinition: true, scopeLine: 46, isOptimized: false, unit: !1, retainedNodes: !3)
!459 = !DISubroutineType(types: !460)
!460 = !{!461, !348, !378, !38}
!461 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*Session,error}", file: !43, size: 192, align: 8, elements: !462)
!462 = !{!463, !464}
!463 = !DIDerivedType(tag: DW_TAG_member, name: "UNNAMED", file: !43, line: 50, baseType: !14, size: 64, align: 64)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "UNNAMED", file: !43, line: 50, baseType: !100, size: 128, align: 64, offset: 64)
!465 = !DILocalVariable(name: "ctx", arg: 1, scope: !458, file: !10, line: 47, type: !348)
!466 = !DILocation(line: 47, column: 2, scope: !458)
!467 = !DILocalVariable(name: "cancel", arg: 2, scope: !458, file: !10, line: 48, type: !378)
!468 = !DILocation(line: 48, column: 2, scope: !458)
!469 = !DILocalVariable(name: "conn", arg: 3, scope: !458, file: !10, line: 49, type: !38)
!470 = !DILocation(line: 49, column: 2, scope: !458)
!471 = !DILocalVariable(name: "$ret0", scope: !458, file: !10, line: 50, type: !14)
!472 = !DILocation(line: 50, column: 4, scope: !458)
!473 = !DILocation(line: 51, column: 27, scope: !474)
!474 = distinct !DILexicalBlock(scope: !458, file: !10, line: 46, column: 1)
!475 = !DILocation(line: 51, column: 20, scope: !474)
!476 = !DILocalVariable(name: "mux", scope: !474, file: !10, line: 51, type: !179)
!477 = !DILocation(line: 51, column: 2, scope: !458)
!478 = !DILocalVariable(name: "err", scope: !474, file: !10, line: 51, type: !100)
!479 = !DILocation(line: 52, column: 9, scope: !474)
!480 = !DILocation(line: 64, column: 13, scope: !474)
!481 = !DILocation(line: 58, column: 8, scope: !474)
!482 = !DILocation(line: 58, column: 9, scope: !474)
!483 = !DILocalVariable(name: "ss", scope: !474, file: !10, line: 58, type: !14)
!484 = !DILocation(line: 58, column: 2, scope: !458)
!485 = !DILocation(line: 68, column: 22, scope: !474)
!486 = !DILocation(line: 68, column: 4, scope: !474)
!487 = !DILocation(line: 54, column: 33, scope: !474)
!488 = !DILocation(line: 54, column: 11, scope: !474)
!489 = !DILocation(line: 53, column: 22, scope: !474)
!490 = !DILocalVariable(name: "$ret1", scope: !458, file: !10, line: 50, type: !100)
!491 = !DILocation(line: 50, column: 14, scope: !458)
!492 = !DILocation(line: 53, column: 3, scope: !474)
!493 = !DILocation(line: 68, column: 17, scope: !474)
!494 = !DILocation(line: 69, column: 9, scope: !474)
!495 = !DILocation(line: 70, column: 5, scope: !474)
!496 = !DILocation(line: 72, column: 48, scope: !474)
!497 = !DILocation(line: 72, column: 11, scope: !474)
!498 = !DILocation(line: 71, column: 22, scope: !474)
!499 = !DILocation(line: 71, column: 3, scope: !474)
!500 = !DILocation(line: 75, column: 31, scope: !474)
!501 = !DILocation(line: 75, column: 18, scope: !474)
!502 = !DILocation(line: 75, column: 4, scope: !474)
!503 = !DILocation(line: 75, column: 12, scope: !474)
!504 = !DILocation(line: 78, column: 23, scope: !474)
!505 = !DILocation(line: 78, column: 4, scope: !474)
!506 = !DILocation(line: 78, column: 18, scope: !474)
!507 = !DILocation(line: 79, column: 9, scope: !474)
!508 = !DILocation(line: 80, column: 5, scope: !474)
!509 = !DILocation(line: 82, column: 49, scope: !474)
!510 = !DILocation(line: 82, column: 11, scope: !474)
!511 = !DILocation(line: 81, column: 22, scope: !474)
!512 = !DILocation(line: 81, column: 3, scope: !474)
!513 = !DILocation(line: 85, column: 32, scope: !474)
!514 = !DILocation(line: 85, column: 19, scope: !474)
!515 = !DILocation(line: 85, column: 4, scope: !474)
!516 = !DILocation(line: 85, column: 13, scope: !474)
!517 = !DILocation(line: 87, column: 6, scope: !474)
!518 = !DILocalVariable(name: "hello", scope: !474, file: !10, line: 87, type: !519)
!519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !520, size: 64)
!520 = !DICompositeType(tag: DW_TAG_structure_type, name: "SessionHello", file: !10, line: 12, size: 896, align: 8, elements: !521)
!521 = !{!522, !523, !524, !525, !526}
!522 = !DIDerivedType(tag: DW_TAG_member, name: "Warp", file: !10, line: 12, baseType: !21, size: 128, align: 64)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "From", file: !10, line: 12, baseType: !18, size: 384, align: 64, offset: 128)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "Version", file: !10, line: 12, baseType: !21, size: 128, align: 64, offset: 512)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "Type", file: !10, line: 12, baseType: !32, size: 128, align: 64, offset: 640)
!526 = !DIDerivedType(tag: DW_TAG_member, name: "Username", file: !10, line: 12, baseType: !21, size: 128, align: 64, offset: 768)
!527 = !DILocation(line: 87, column: 6, scope: !458)
!528 = !DILocation(line: 88, column: 14, scope: !529)
!529 = distinct !DILexicalBlock(scope: !474, file: !10, line: 88, column: 2)
!530 = !DILocation(line: 88, column: 30, scope: !529)
!531 = !DILocation(line: 88, column: 22, scope: !529)
!532 = !DILocalVariable(name: "err", scope: !529, file: !10, line: 88, type: !100)
!533 = !DILocation(line: 88, column: 5, scope: !474)
!534 = !DILocation(line: 88, column: 43, scope: !529)
!535 = !DILocation(line: 89, column: 5, scope: !529)
!536 = !DILocation(line: 91, column: 51, scope: !529)
!537 = !DILocation(line: 91, column: 11, scope: !529)
!538 = !DILocation(line: 90, column: 22, scope: !529)
!539 = !DILocation(line: 90, column: 3, scope: !529)
!540 = !DILocation(line: 94, column: 20, scope: !474)
!541 = !DILocation(line: 94, column: 13, scope: !474)
!542 = !DILocation(line: 95, column: 4, scope: !474)
!543 = !DILocation(line: 95, column: 10, scope: !474)
!544 = !DILocation(line: 96, column: 4, scope: !474)
!545 = !DILocation(line: 96, column: 24, scope: !474)
!546 = !DILocation(line: 96, column: 17, scope: !474)
!547 = !DILocation(line: 97, column: 4, scope: !474)
!548 = !DILocation(line: 97, column: 21, scope: !474)
!549 = !DILocation(line: 97, column: 14, scope: !474)
!550 = !DILocation(line: 101, column: 5, scope: !474)
!551 = !DILocation(line: 99, column: 10, scope: !474)
!552 = !DILocation(line: 105, column: 22, scope: !474)
!553 = !DILocation(line: 105, column: 4, scope: !474)
!554 = !DILocation(line: 105, column: 17, scope: !474)
!555 = !DILocation(line: 106, column: 9, scope: !474)
!556 = !DILocation(line: 107, column: 5, scope: !474)
!557 = !DILocation(line: 109, column: 48, scope: !474)
!558 = !DILocation(line: 109, column: 11, scope: !474)
!559 = !DILocation(line: 108, column: 22, scope: !474)
!560 = !DILocation(line: 108, column: 3, scope: !474)
!561 = !DILocation(line: 112, column: 31, scope: !474)
!562 = !DILocation(line: 112, column: 18, scope: !474)
!563 = !DILocation(line: 112, column: 4, scope: !474)
!564 = !DILocation(line: 112, column: 12, scope: !474)
!565 = !DILocation(line: 115, column: 21, scope: !474)
!566 = !DILocation(line: 115, column: 4, scope: !474)
!567 = !DILocation(line: 115, column: 16, scope: !474)
!568 = !DILocation(line: 116, column: 9, scope: !474)
!569 = !DILocation(line: 117, column: 5, scope: !474)
!570 = !DILocation(line: 119, column: 47, scope: !474)
!571 = !DILocation(line: 119, column: 11, scope: !474)
!572 = !DILocation(line: 118, column: 22, scope: !474)
!573 = !DILocation(line: 118, column: 3, scope: !474)
!574 = !DILocation(line: 123, column: 2, scope: !474)
!575 = distinct !DISubprogram(name: "daemon.command_line_arguments..thunk1", scope: null, file: !10, line: 136, type: !576, isLocal: true, isDefinition: true, scopeLine: 136, isOptimized: false, unit: !1, retainedNodes: !3)
!576 = !DISubroutineType(types: !577)
!577 = !{!73, !578}
!578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !579, size: 64)
!579 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*Mutex}", file: !43, size: 64, align: 8, elements: !580)
!580 = !{!581}
!581 = !DIDerivedType(tag: DW_TAG_member, name: "a0", file: !43, line: 136, baseType: !386, size: 64, align: 64)
!582 = !DILocalVariable(name: "__go_thunk_parameter", arg: 1, scope: !575, file: !10, line: 136, type: !578)
!583 = !DILocation(line: 136, column: 2, scope: !575)
!584 = !DILocalVariable(name: "$ret14", scope: !575, file: !10, line: 136, type: !73)
!585 = distinct !DISubprogram(name: "daemon.func1", scope: null, file: !10, line: 140, type: !383, isLocal: true, isDefinition: true, scopeLine: 140, isOptimized: false, unit: !1, retainedNodes: !3)
!586 = !DILocation(line: 143, column: 9, scope: !585)
!587 = !DILocation(line: 145, column: 4, scope: !585)
!588 = !DILocation(line: 145, column: 6, scope: !585)
!589 = !DILocation(line: 145, column: 10, scope: !585)
!590 = distinct !DISubprogram(name: "daemon.command_line_arguments..thunk2", scope: null, file: !10, line: 140, type: !591, isLocal: true, isDefinition: true, scopeLine: 140, isOptimized: false, unit: !1, retainedNodes: !3)
!591 = !DISubroutineType(types: !592)
!592 = !{!13, !593}
!593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !594, size: 64)
!594 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*__go_descriptor}", file: !43, size: 64, align: 8, elements: !595)
!595 = !{!596}
!596 = !DIDerivedType(tag: DW_TAG_member, name: "fn", file: !43, line: 140, baseType: !378, size: 64, align: 64)
!597 = !DILocalVariable(name: "__go_thunk_parameter", arg: 1, scope: !590, file: !10, line: 140, type: !593)
!598 = !DILocation(line: 140, column: 3, scope: !590)
!599 = distinct !DISubprogram(name: "daemon.command_line_arguments..thunk3", scope: null, file: !10, line: 158, type: !576, isLocal: true, isDefinition: true, scopeLine: 158, isOptimized: false, unit: !1, retainedNodes: !3)
!600 = !DILocalVariable(name: "__go_thunk_parameter", arg: 1, scope: !599, file: !10, line: 158, type: !578)
!601 = !DILocation(line: 158, column: 2, scope: !599)
!602 = !DILocalVariable(name: "$ret15", scope: !599, file: !10, line: 158, type: !73)
!603 = distinct !DISubprogram(name: "daemon.Run..1command_line_arguments.Srv", linkageName: "command_line_arguments.Srv.Run", scope: null, file: !373, line: 42, type: !604, isLocal: false, isDefinition: true, scopeLine: 42, isOptimized: false, unit: !1, retainedNodes: !3)
!604 = !DISubroutineType(types: !605)
!605 = !{!100, !606, !606, !348}
!606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !607, size: 64)
!607 = !DICompositeType(tag: DW_TAG_structure_type, name: "Srv", file: !373, line: 16, size: 512, align: 8, elements: !608)
!608 = !{!609, !610, !611, !612, !613}
!609 = !DIDerivedType(tag: DW_TAG_member, name: "address", file: !373, line: 17, baseType: !21, size: 128, align: 64)
!610 = !DIDerivedType(tag: DW_TAG_member, name: "certFile", file: !373, line: 18, baseType: !21, size: 128, align: 64, offset: 128)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "keyFile", file: !373, line: 19, baseType: !21, size: 128, align: 64, offset: 256)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "warps", file: !373, line: 21, baseType: !255, size: 64, align: 64, offset: 384)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", file: !373, line: 22, baseType: !386, size: 64, align: 64, offset: 448)
!614 = !DILocalVariable(name: "param", arg: 1, scope: !603, file: !373, line: 42, type: !606)
!615 = !DILocation(line: 42, column: 1, scope: !603)
!616 = !DILocalVariable(name: "param", arg: 2, scope: !603, file: !373, line: 43, type: !348)
!617 = !DILocation(line: 43, column: 2, scope: !603)
!618 = !DILocalVariable(name: "$ret4", scope: !603, file: !373, line: 44, type: !100)
!619 = !DILocation(line: 44, column: 3, scope: !603)
!620 = !DILocation(line: 109, column: 1, scope: !603)
!621 = !DILocalVariable(name: "s", scope: !603, file: !373, line: 42, type: !622)
!622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !606, size: 64)
!623 = !DILocalVariable(name: "ctx", scope: !603, file: !373, line: 43, type: !624)
!624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !348, size: 64)
!625 = !DILocation(line: 47, column: 5, scope: !626)
!626 = distinct !DILexicalBlock(scope: !603, file: !373, line: 42, column: 1)
!627 = !DILocation(line: 47, column: 6, scope: !626)
!628 = !DILocation(line: 47, column: 16, scope: !626)
!629 = !DILocation(line: 47, column: 25, scope: !626)
!630 = !DILocation(line: 47, column: 26, scope: !626)
!631 = !DILocation(line: 47, column: 35, scope: !626)
!632 = !DILocation(line: 48, column: 35, scope: !633)
!633 = distinct !DILexicalBlock(scope: !626, file: !373, line: 47, column: 41)
!634 = !DILocation(line: 48, column: 36, scope: !633)
!635 = !DILocation(line: 0, scope: !636)
!636 = distinct !DILexicalBlock(scope: !626, file: !373, line: 75, column: 4)
!637 = !DILocalVariable(name: "ln", scope: !626, file: !373, line: 45, type: !638)
!638 = !DICompositeType(tag: DW_TAG_structure_type, name: "Listener", file: !10, line: 7, size: 128, align: 8, elements: !639)
!639 = !{!640, !124}
!640 = !DIDerivedType(tag: DW_TAG_member, name: "__methods", file: !10, line: 7, baseType: !641, size: 64, align: 64)
!641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !642, size: 64)
!642 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*_type,*func(*void)struct{Conn,error},*func(*void)Addr,*func(*void)error}", file: !43, size: 256, align: 8, elements: !643)
!643 = !{!45, !644, !652, !653}
!644 = !DIDerivedType(tag: DW_TAG_member, name: "Accept", file: !43, line: 7, baseType: !645, size: 64, align: 64, offset: 64)
!645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !646, size: 64)
!646 = !DISubroutineType(types: !647)
!647 = !{!648, !64}
!648 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{Conn,error}", file: !43, size: 256, align: 8, elements: !649)
!649 = !{!650, !651}
!650 = !DIDerivedType(tag: DW_TAG_member, name: "UNNAMED", file: !43, line: 7, baseType: !38, size: 128, align: 64)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "UNNAMED", file: !43, line: 7, baseType: !100, size: 128, align: 64, offset: 128)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "Addr", file: !43, line: 7, baseType: !113, size: 64, align: 64, offset: 128)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "Close", file: !43, line: 7, baseType: !97, size: 64, align: 64, offset: 192)
!654 = !DILocation(line: 45, column: 6, scope: !603)
!655 = !DILocation(line: 83, column: 2, scope: !626)
!656 = !DILocation(line: 77, column: 31, scope: !636)
!657 = !DILocation(line: 77, column: 32, scope: !636)
!658 = !DILocation(line: 48, column: 47, scope: !633)
!659 = !DILocation(line: 48, column: 48, scope: !633)
!660 = !DILocation(line: 48, column: 19, scope: !633)
!661 = !DILocalVariable(name: "err", scope: !633, file: !373, line: 48, type: !100)
!662 = !DILocation(line: 48, column: 3, scope: !626)
!663 = !DILocation(line: 49, column: 10, scope: !633)
!664 = !DILocation(line: 50, column: 18, scope: !633)
!665 = !DILocation(line: 54, column: 18, scope: !633)
!666 = !DILocation(line: 60, column: 18, scope: !633)
!667 = !DILocation(line: 56, column: 22, scope: !633)
!668 = !DILocation(line: 53, column: 16, scope: !633)
!669 = !DILocation(line: 53, column: 21, scope: !633)
!670 = !DILocalVariable(name: "tlsConfig", scope: !633, file: !373, line: 53, type: !671)
!671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !672, size: 64)
!672 = !DICompositeType(tag: DW_TAG_structure_type, name: "Config", file: !373, line: 5, size: 2944, align: 8, elements: !673)
!673 = !{!674, !675, !683, !848, !849, !886, !899, !910, !926, !933, !934, !935, !937, !938, !939, !940, !941, !942, !946, !974, !975, !976, !977, !978, !980, !981, !986, !994}
!674 = !DIDerivedType(tag: DW_TAG_member, name: "Rand", file: !373, line: 5, baseType: !242, size: 128, align: 64)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "Time", file: !373, line: 5, baseType: !676, size: 64, align: 64, offset: 128)
!676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !677, size: 64)
!677 = !DICompositeType(tag: DW_TAG_structure_type, name: "__go_descriptor", file: !373, line: 5, size: 64, align: 8, elements: !678)
!678 = !{!679}
!679 = !DIDerivedType(tag: DW_TAG_member, name: "code", file: !373, line: 5, baseType: !680, size: 64, align: 64)
!680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !681, size: 64)
!681 = !DISubroutineType(types: !682)
!682 = !{!141}
!683 = !DIDerivedType(tag: DW_TAG_member, name: "Certificates", file: !373, line: 5, baseType: !684, size: 192, align: 64, offset: 192)
!684 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*Certificate,int,int}", file: !43, size: 192, align: 8, elements: !685)
!685 = !{!686, !93, !94}
!686 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !43, line: 1, baseType: !687, size: 64, align: 64)
!687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !688, size: 64)
!688 = !DICompositeType(tag: DW_TAG_structure_type, name: "Certificate", file: !373, line: 5, size: 768, align: 8, elements: !689)
!689 = !{!690, !695, !696, !697, !698}
!690 = !DIDerivedType(tag: DW_TAG_member, name: "Certificate", file: !373, line: 5, baseType: !691, size: 192, align: 64)
!691 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*struct{*uint8,int,int},int,int}", file: !43, size: 192, align: 8, elements: !692)
!692 = !{!693, !93, !94}
!693 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !43, line: 1, baseType: !694, size: 64, align: 64)
!694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !133, size: 64)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "PrivateKey", file: !373, line: 5, baseType: !372, size: 128, align: 64, offset: 192)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "OCSPStaple", file: !373, line: 5, baseType: !133, size: 192, align: 64, offset: 320)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "SignedCertificateTimestamps", file: !373, line: 5, baseType: !691, size: 192, align: 64, offset: 512)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "Leaf", file: !373, line: 5, baseType: !699, size: 64, align: 64, offset: 704)
!699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !700, size: 64)
!700 = !DICompositeType(tag: DW_TAG_structure_type, name: "Certificate", file: !373, line: 5, size: 10624, align: 8, elements: !701)
!701 = !{!702, !703, !704, !705, !706, !707, !708, !710, !712, !713, !714, !727, !756, !757, !758, !759, !761, !771, !772, !777, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !804, !827, !828, !829, !830, !841, !842, !843, !844, !845, !846, !847}
!702 = !DIDerivedType(tag: DW_TAG_member, name: "Raw", file: !373, line: 5, baseType: !133, size: 192, align: 64)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "RawTBSCertificate", file: !373, line: 5, baseType: !133, size: 192, align: 64, offset: 192)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "RawSubjectPublicKeyInfo", file: !373, line: 5, baseType: !133, size: 192, align: 64, offset: 384)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "RawSubject", file: !373, line: 5, baseType: !133, size: 192, align: 64, offset: 576)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "RawIssuer", file: !373, line: 5, baseType: !133, size: 192, align: 64, offset: 768)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "Signature", file: !373, line: 5, baseType: !133, size: 192, align: 64, offset: 960)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "SignatureAlgorithm", file: !373, line: 5, baseType: !709, size: 64, align: 64, offset: 1152)
!709 = !DIBasicType(name: "SignatureAlgorithm", size: 64, encoding: DW_ATE_signed)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "PublicKeyAlgorithm", file: !373, line: 5, baseType: !711, size: 64, align: 64, offset: 1216)
!711 = !DIBasicType(name: "PublicKeyAlgorithm", size: 64, encoding: DW_ATE_signed)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "PublicKey", file: !373, line: 5, baseType: !372, size: 128, align: 64, offset: 1280)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "Version", file: !373, line: 5, baseType: !27, size: 64, align: 64, offset: 1408)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "SerialNumber", file: !373, line: 5, baseType: !715, size: 64, align: 64, offset: 1472)
!715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !716, size: 64)
!716 = !DICompositeType(tag: DW_TAG_structure_type, name: "Int", file: !373, line: 5, size: 256, align: 8, elements: !717)
!717 = !{!718, !719}
!718 = !DIDerivedType(tag: DW_TAG_member, name: "neg", file: !373, line: 5, baseType: !73, size: 8, align: 8)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "abs", file: !373, line: 5, baseType: !720, size: 192, align: 64, offset: 64)
!720 = !DICompositeType(tag: DW_TAG_structure_type, name: ".math/big.nat", file: !373, line: 5, size: 192, align: 8, elements: !721)
!721 = !{!722, !725, !726}
!722 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !373, line: 1, baseType: !723, size: 64, align: 64)
!723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !724, size: 64)
!724 = !DIBasicType(name: "Word", size: 64, encoding: DW_ATE_unsigned)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "__count", file: !373, line: 1, baseType: !27, size: 64, align: 64, offset: 64)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "__capacity", file: !373, line: 1, baseType: !27, size: 64, align: 64, offset: 128)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "Issuer", file: !373, line: 5, baseType: !728, size: 1984, align: 64, offset: 1536)
!728 = !DICompositeType(tag: DW_TAG_structure_type, name: "Name", file: !373, line: 5, size: 1984, align: 8, elements: !729)
!729 = !{!730, !734, !735, !736, !737, !738, !739, !740, !741, !742, !755}
!730 = !DIDerivedType(tag: DW_TAG_member, name: "Country", file: !373, line: 5, baseType: !731, size: 192, align: 64)
!731 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*string,int,int}", file: !43, size: 192, align: 8, elements: !732)
!732 = !{!733, !93, !94}
!733 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !43, line: 1, baseType: !76, size: 64, align: 64)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "Organization", file: !373, line: 5, baseType: !731, size: 192, align: 64, offset: 192)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "OrganizationalUnit", file: !373, line: 5, baseType: !731, size: 192, align: 64, offset: 384)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "Locality", file: !373, line: 5, baseType: !731, size: 192, align: 64, offset: 576)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "Province", file: !373, line: 5, baseType: !731, size: 192, align: 64, offset: 768)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "StreetAddress", file: !373, line: 5, baseType: !731, size: 192, align: 64, offset: 960)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "PostalCode", file: !373, line: 5, baseType: !731, size: 192, align: 64, offset: 1152)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "SerialNumber", file: !373, line: 5, baseType: !21, size: 128, align: 64, offset: 1344)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "CommonName", file: !373, line: 5, baseType: !21, size: 128, align: 64, offset: 1472)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "Names", file: !373, line: 5, baseType: !743, size: 192, align: 64, offset: 1600)
!743 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*AttributeTypeAndValue,int,int}", file: !43, size: 192, align: 8, elements: !744)
!744 = !{!745, !93, !94}
!745 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !43, line: 1, baseType: !746, size: 64, align: 64)
!746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !747, size: 64)
!747 = !DICompositeType(tag: DW_TAG_structure_type, name: "AttributeTypeAndValue", file: !373, line: 5, size: 320, align: 8, elements: !748)
!748 = !{!749, !754}
!749 = !DIDerivedType(tag: DW_TAG_member, name: "Type", file: !373, line: 5, baseType: !750, size: 192, align: 64)
!750 = !DICompositeType(tag: DW_TAG_structure_type, name: "ObjectIdentifier", file: !373, line: 5, size: 192, align: 8, elements: !751)
!751 = !{!752, !725, !726}
!752 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !373, line: 1, baseType: !753, size: 64, align: 64)
!753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !27, size: 64)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "Value", file: !373, line: 5, baseType: !372, size: 128, align: 64, offset: 192)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "ExtraNames", file: !373, line: 5, baseType: !743, size: 192, align: 64, offset: 1792)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "Subject", file: !373, line: 5, baseType: !728, size: 1984, align: 64, offset: 3520)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "NotBefore", file: !373, line: 5, baseType: !141, size: 192, align: 64, offset: 5504)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "NotAfter", file: !373, line: 5, baseType: !141, size: 192, align: 64, offset: 5696)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "KeyUsage", file: !373, line: 5, baseType: !760, size: 64, align: 64, offset: 5888)
!760 = !DIBasicType(name: "KeyUsage", size: 64, encoding: DW_ATE_signed)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "Extensions", file: !373, line: 5, baseType: !762, size: 192, align: 64, offset: 5952)
!762 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*Extension,int,int}", file: !43, size: 192, align: 8, elements: !763)
!763 = !{!764, !93, !94}
!764 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !43, line: 1, baseType: !765, size: 64, align: 64)
!765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !766, size: 64)
!766 = !DICompositeType(tag: DW_TAG_structure_type, name: "Extension", file: !373, line: 5, size: 448, align: 8, elements: !767)
!767 = !{!768, !769, !770}
!768 = !DIDerivedType(tag: DW_TAG_member, name: "Id", file: !373, line: 5, baseType: !750, size: 192, align: 64)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "Critical", file: !373, line: 5, baseType: !73, size: 8, align: 8, offset: 192)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "Value", file: !373, line: 5, baseType: !133, size: 192, align: 64, offset: 256)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "ExtraExtensions", file: !373, line: 5, baseType: !762, size: 192, align: 64, offset: 6144)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "UnhandledCriticalExtensions", file: !373, line: 5, baseType: !773, size: 192, align: 64, offset: 6336)
!773 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*ObjectIdentifier,int,int}", file: !43, size: 192, align: 8, elements: !774)
!774 = !{!775, !93, !94}
!775 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !43, line: 1, baseType: !776, size: 64, align: 64)
!776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !750, size: 64)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "ExtKeyUsage", file: !373, line: 5, baseType: !778, size: 192, align: 64, offset: 6528)
!778 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*ExtKeyUsage,int,int}", file: !43, size: 192, align: 8, elements: !779)
!779 = !{!780, !93, !94}
!780 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !43, line: 1, baseType: !781, size: 64, align: 64)
!781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !782, size: 64)
!782 = !DIBasicType(name: "ExtKeyUsage", size: 64, encoding: DW_ATE_signed)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "UnknownExtKeyUsage", file: !373, line: 5, baseType: !773, size: 192, align: 64, offset: 6720)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "BasicConstraintsValid", file: !373, line: 5, baseType: !73, size: 8, align: 8, offset: 6912)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "IsCA", file: !373, line: 5, baseType: !73, size: 8, align: 8, offset: 6920)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "MaxPathLen", file: !373, line: 5, baseType: !27, size: 64, align: 64, offset: 6976)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "MaxPathLenZero", file: !373, line: 5, baseType: !73, size: 8, align: 8, offset: 7040)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "SubjectKeyId", file: !373, line: 5, baseType: !133, size: 192, align: 64, offset: 7104)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "AuthorityKeyId", file: !373, line: 5, baseType: !133, size: 192, align: 64, offset: 7296)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "OCSPServer", file: !373, line: 5, baseType: !731, size: 192, align: 64, offset: 7488)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "IssuingCertificateURL", file: !373, line: 5, baseType: !731, size: 192, align: 64, offset: 7680)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "DNSNames", file: !373, line: 5, baseType: !731, size: 192, align: 64, offset: 7872)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "EmailAddresses", file: !373, line: 5, baseType: !731, size: 192, align: 64, offset: 8064)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "IPAddresses", file: !373, line: 5, baseType: !795, size: 192, align: 64, offset: 8256)
!795 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*IP,int,int}", file: !43, size: 192, align: 8, elements: !796)
!796 = !{!797, !93, !94}
!797 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !43, line: 1, baseType: !798, size: 64, align: 64)
!798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !799, size: 64)
!799 = !DICompositeType(tag: DW_TAG_structure_type, name: "IP", file: !10, line: 7, size: 192, align: 8, elements: !800)
!800 = !{!801, !802, !803}
!801 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !10, line: 1, baseType: !24, size: 64, align: 64)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "__count", file: !10, line: 1, baseType: !27, size: 64, align: 64, offset: 64)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "__capacity", file: !10, line: 1, baseType: !27, size: 64, align: 64, offset: 128)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "URIs", file: !373, line: 5, baseType: !805, size: 192, align: 64, offset: 8448)
!805 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{**URL,int,int}", file: !43, size: 192, align: 8, elements: !806)
!806 = !{!807, !93, !94}
!807 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !43, line: 1, baseType: !808, size: 64, align: 64)
!808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !809, size: 64)
!809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !810, size: 64)
!810 = !DICompositeType(tag: DW_TAG_structure_type, name: "URL", file: !373, line: 5, size: 1024, align: 8, elements: !811)
!811 = !{!812, !813, !814, !821, !822, !823, !824, !825, !826}
!812 = !DIDerivedType(tag: DW_TAG_member, name: "Scheme", file: !373, line: 5, baseType: !21, size: 128, align: 64)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "Opaque", file: !373, line: 5, baseType: !21, size: 128, align: 64, offset: 128)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "User", file: !373, line: 5, baseType: !815, size: 64, align: 64, offset: 256)
!815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !816, size: 64)
!816 = !DICompositeType(tag: DW_TAG_structure_type, name: "Userinfo", file: !373, line: 5, size: 320, align: 8, elements: !817)
!817 = !{!818, !819, !820}
!818 = !DIDerivedType(tag: DW_TAG_member, name: "username", file: !373, line: 5, baseType: !21, size: 128, align: 64)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "password", file: !373, line: 5, baseType: !21, size: 128, align: 64, offset: 128)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "passwordSet", file: !373, line: 5, baseType: !73, size: 8, align: 8, offset: 256)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "Host", file: !373, line: 5, baseType: !21, size: 128, align: 64, offset: 320)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "Path", file: !373, line: 5, baseType: !21, size: 128, align: 64, offset: 448)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "RawPath", file: !373, line: 5, baseType: !21, size: 128, align: 64, offset: 576)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "ForceQuery", file: !373, line: 5, baseType: !73, size: 8, align: 8, offset: 704)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "RawQuery", file: !373, line: 5, baseType: !21, size: 128, align: 64, offset: 768)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "Fragment", file: !373, line: 5, baseType: !21, size: 128, align: 64, offset: 896)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "PermittedDNSDomainsCritical", file: !373, line: 5, baseType: !73, size: 8, align: 8, offset: 8640)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "PermittedDNSDomains", file: !373, line: 5, baseType: !731, size: 192, align: 64, offset: 8704)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "ExcludedDNSDomains", file: !373, line: 5, baseType: !731, size: 192, align: 64, offset: 8896)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "PermittedIPRanges", file: !373, line: 5, baseType: !831, size: 192, align: 64, offset: 9088)
!831 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{**IPNet,int,int}", file: !43, size: 192, align: 8, elements: !832)
!832 = !{!833, !93, !94}
!833 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !43, line: 1, baseType: !834, size: 64, align: 64)
!834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !835, size: 64)
!835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !836, size: 64)
!836 = !DICompositeType(tag: DW_TAG_structure_type, name: "IPNet", file: !10, line: 7, size: 384, align: 8, elements: !837)
!837 = !{!838, !839}
!838 = !DIDerivedType(tag: DW_TAG_member, name: "IP", file: !10, line: 7, baseType: !799, size: 192, align: 64)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "Mask", file: !10, line: 7, baseType: !840, size: 192, align: 64, offset: 192)
!840 = !DICompositeType(tag: DW_TAG_structure_type, name: "IPMask", file: !10, line: 7, size: 192, align: 8, elements: !800)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "ExcludedIPRanges", file: !373, line: 5, baseType: !831, size: 192, align: 64, offset: 9280)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "PermittedEmailAddresses", file: !373, line: 5, baseType: !731, size: 192, align: 64, offset: 9472)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "ExcludedEmailAddresses", file: !373, line: 5, baseType: !731, size: 192, align: 64, offset: 9664)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "PermittedURIDomains", file: !373, line: 5, baseType: !731, size: 192, align: 64, offset: 9856)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "ExcludedURIDomains", file: !373, line: 5, baseType: !731, size: 192, align: 64, offset: 10048)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "CRLDistributionPoints", file: !373, line: 5, baseType: !731, size: 192, align: 64, offset: 10240)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "PolicyIdentifiers", file: !373, line: 5, baseType: !773, size: 192, align: 64, offset: 10432)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "NameToCertificate", file: !373, line: 5, baseType: !255, size: 64, align: 64, offset: 384)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "GetCertificate", file: !373, line: 5, baseType: !850, size: 64, align: 64, offset: 448)
!850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !851, size: 64)
!851 = !DICompositeType(tag: DW_TAG_structure_type, name: "__go_descriptor", file: !373, line: 5, size: 64, align: 8, elements: !852)
!852 = !{!853}
!853 = !DIDerivedType(tag: DW_TAG_member, name: "code", file: !373, line: 5, baseType: !854, size: 64, align: 64)
!854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !855, size: 64)
!855 = !DISubroutineType(types: !856)
!856 = !{!857, !861}
!857 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*Certificate,error}", file: !43, size: 192, align: 8, elements: !858)
!858 = !{!859, !860}
!859 = !DIDerivedType(tag: DW_TAG_member, name: "UNNAMED", file: !43, line: 5, baseType: !687, size: 64, align: 64)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "UNNAMED", file: !43, line: 5, baseType: !100, size: 128, align: 64, offset: 64)
!861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !862, size: 64)
!862 = !DICompositeType(tag: DW_TAG_structure_type, name: "ClientHelloInfo", file: !373, line: 5, size: 1408, align: 8, elements: !863)
!863 = !{!864, !869, !870, !876, !877, !883, !884, !885}
!864 = !DIDerivedType(tag: DW_TAG_member, name: "CipherSuites", file: !373, line: 5, baseType: !865, size: 192, align: 64)
!865 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*uint16,int,int}", file: !43, size: 192, align: 8, elements: !866)
!866 = !{!867, !93, !94}
!867 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !43, line: 1, baseType: !868, size: 64, align: 64)
!868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !262, size: 64)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "ServerName", file: !373, line: 5, baseType: !21, size: 128, align: 64, offset: 192)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "SupportedCurves", file: !373, line: 5, baseType: !871, size: 192, align: 64, offset: 320)
!871 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*CurveID,int,int}", file: !43, size: 192, align: 8, elements: !872)
!872 = !{!873, !93, !94}
!873 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !43, line: 1, baseType: !874, size: 64, align: 64)
!874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !875, size: 64)
!875 = !DIBasicType(name: "CurveID", size: 16, encoding: DW_ATE_unsigned)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "SupportedPoints", file: !373, line: 5, baseType: !133, size: 192, align: 64, offset: 512)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "SignatureSchemes", file: !373, line: 5, baseType: !878, size: 192, align: 64, offset: 704)
!878 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*SignatureScheme,int,int}", file: !43, size: 192, align: 8, elements: !879)
!879 = !{!880, !93, !94}
!880 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !43, line: 1, baseType: !881, size: 64, align: 64)
!881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !882, size: 64)
!882 = !DIBasicType(name: "SignatureScheme", size: 16, encoding: DW_ATE_unsigned)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "SupportedProtos", file: !373, line: 5, baseType: !731, size: 192, align: 64, offset: 896)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "SupportedVersions", file: !373, line: 5, baseType: !865, size: 192, align: 64, offset: 1088)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "Conn", file: !373, line: 5, baseType: !38, size: 128, align: 64, offset: 1280)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "GetClientCertificate", file: !373, line: 5, baseType: !887, size: 64, align: 64, offset: 512)
!887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !888, size: 64)
!888 = !DICompositeType(tag: DW_TAG_structure_type, name: "__go_descriptor", file: !373, line: 5, size: 64, align: 8, elements: !889)
!889 = !{!890}
!890 = !DIDerivedType(tag: DW_TAG_member, name: "code", file: !373, line: 5, baseType: !891, size: 64, align: 64)
!891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !892, size: 64)
!892 = !DISubroutineType(types: !893)
!893 = !{!857, !894}
!894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !895, size: 64)
!895 = !DICompositeType(tag: DW_TAG_structure_type, name: "CertificateRequestInfo", file: !373, line: 5, size: 384, align: 8, elements: !896)
!896 = !{!897, !898}
!897 = !DIDerivedType(tag: DW_TAG_member, name: "AcceptableCAs", file: !373, line: 5, baseType: !691, size: 192, align: 64)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "SignatureSchemes", file: !373, line: 5, baseType: !878, size: 192, align: 64, offset: 192)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "GetConfigForClient", file: !373, line: 5, baseType: !900, size: 64, align: 64, offset: 576)
!900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !901, size: 64)
!901 = !DICompositeType(tag: DW_TAG_structure_type, name: "__go_descriptor", file: !373, line: 5, size: 64, align: 8, elements: !902)
!902 = !{!903}
!903 = !DIDerivedType(tag: DW_TAG_member, name: "code", file: !373, line: 5, baseType: !904, size: 64, align: 64)
!904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !905, size: 64)
!905 = !DISubroutineType(types: !906)
!906 = !{!907, !861}
!907 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*Config,error}", file: !43, size: 192, align: 8, elements: !908)
!908 = !{!909, !860}
!909 = !DIDerivedType(tag: DW_TAG_member, name: "UNNAMED", file: !43, line: 5, baseType: !64, size: 64, align: 64)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "VerifyPeerCertificate", file: !373, line: 5, baseType: !911, size: 64, align: 64, offset: 640)
!911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !912, size: 64)
!912 = !DICompositeType(tag: DW_TAG_structure_type, name: "__go_descriptor", file: !373, line: 5, size: 64, align: 8, elements: !913)
!913 = !{!914}
!914 = !DIDerivedType(tag: DW_TAG_member, name: "code", file: !373, line: 5, baseType: !915, size: 64, align: 64)
!915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !916, size: 64)
!916 = !DISubroutineType(types: !917)
!917 = !{!100, !691, !918}
!918 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*struct{**Certificate,int,int},int,int}", file: !43, size: 192, align: 8, elements: !919)
!919 = !{!920, !93, !94}
!920 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !43, line: 1, baseType: !921, size: 64, align: 64)
!921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !922, size: 64)
!922 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{**Certificate,int,int}", file: !43, size: 192, align: 8, elements: !923)
!923 = !{!924, !93, !94}
!924 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !43, line: 1, baseType: !925, size: 64, align: 64)
!925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !699, size: 64)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "RootCAs", file: !373, line: 5, baseType: !927, size: 64, align: 64, offset: 704)
!927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !928, size: 64)
!928 = !DICompositeType(tag: DW_TAG_structure_type, name: "CertPool", file: !373, line: 5, size: 320, align: 8, elements: !929)
!929 = !{!930, !931, !932}
!930 = !DIDerivedType(tag: DW_TAG_member, name: "bySubjectKeyId", file: !373, line: 5, baseType: !255, size: 64, align: 64)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "byName", file: !373, line: 5, baseType: !255, size: 64, align: 64, offset: 64)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "certs", file: !373, line: 5, baseType: !922, size: 192, align: 64, offset: 128)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "NextProtos", file: !373, line: 5, baseType: !731, size: 192, align: 64, offset: 768)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "ServerName", file: !373, line: 5, baseType: !21, size: 128, align: 64, offset: 960)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "ClientAuth", file: !373, line: 5, baseType: !936, size: 64, align: 64, offset: 1088)
!936 = !DIBasicType(name: "ClientAuthType", size: 64, encoding: DW_ATE_signed)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "ClientCAs", file: !373, line: 5, baseType: !927, size: 64, align: 64, offset: 1152)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "InsecureSkipVerify", file: !373, line: 5, baseType: !73, size: 8, align: 8, offset: 1216)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "CipherSuites", file: !373, line: 5, baseType: !865, size: 192, align: 64, offset: 1280)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "PreferServerCipherSuites", file: !373, line: 5, baseType: !73, size: 8, align: 8, offset: 1472)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "SessionTicketsDisabled", file: !373, line: 5, baseType: !73, size: 8, align: 8, offset: 1480)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "SessionTicketKey", file: !373, line: 5, baseType: !943, size: 256, align: 8, offset: 1488)
!943 = !DICompositeType(tag: DW_TAG_array_type, baseType: !25, size: 256, align: 1, elements: !944)
!944 = !{!945}
!945 = !DISubrange(count: 32)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "ClientSessionCache", file: !373, line: 5, baseType: !947, size: 128, align: 64, offset: 1792)
!947 = !DICompositeType(tag: DW_TAG_structure_type, name: "ClientSessionCache", file: !373, line: 5, size: 128, align: 8, elements: !948)
!948 = !{!949, !376}
!949 = !DIDerivedType(tag: DW_TAG_member, name: "__methods", file: !373, line: 5, baseType: !950, size: 64, align: 64)
!950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !951, size: 64)
!951 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*_type,*func(*void,string)struct{*ClientSessionState,bool},*func(*void,string,*ClientSessionState)void}", file: !43, size: 192, align: 8, elements: !952)
!952 = !{!203, !953, !970}
!953 = !DIDerivedType(tag: DW_TAG_member, name: "Get", file: !43, line: 5, baseType: !954, size: 64, align: 64, offset: 64)
!954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !955, size: 64)
!955 = !DISubroutineType(types: !956)
!956 = !{!957, !64, !21}
!957 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*ClientSessionState,bool}", file: !43, size: 128, align: 8, elements: !958)
!958 = !{!959, !969}
!959 = !DIDerivedType(tag: DW_TAG_member, name: "session", file: !43, line: 5, baseType: !960, size: 64, align: 64)
!960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !961, size: 64)
!961 = !DICompositeType(tag: DW_TAG_structure_type, name: "ClientSessionState", file: !373, line: 5, size: 832, align: 8, elements: !962)
!962 = !{!963, !964, !965, !966, !967, !968}
!963 = !DIDerivedType(tag: DW_TAG_member, name: "sessionTicket", file: !373, line: 5, baseType: !133, size: 192, align: 64)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "vers", file: !373, line: 5, baseType: !262, size: 16, align: 16, offset: 192)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "cipherSuite", file: !373, line: 5, baseType: !262, size: 16, align: 16, offset: 208)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "masterSecret", file: !373, line: 5, baseType: !133, size: 192, align: 64, offset: 256)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "serverCertificates", file: !373, line: 5, baseType: !922, size: 192, align: 64, offset: 448)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "verifiedChains", file: !373, line: 5, baseType: !918, size: 192, align: 64, offset: 640)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "ok", file: !43, line: 5, baseType: !73, size: 8, align: 8, offset: 64)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "Put", file: !43, line: 5, baseType: !971, size: 64, align: 64, offset: 128)
!971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !972, size: 64)
!972 = !DISubroutineType(types: !973)
!973 = !{!13, !64, !21, !960}
!974 = !DIDerivedType(tag: DW_TAG_member, name: "MinVersion", file: !373, line: 5, baseType: !262, size: 16, align: 16, offset: 1920)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "MaxVersion", file: !373, line: 5, baseType: !262, size: 16, align: 16, offset: 1936)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "CurvePreferences", file: !373, line: 5, baseType: !871, size: 192, align: 64, offset: 1984)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "DynamicRecordSizingDisabled", file: !373, line: 5, baseType: !73, size: 8, align: 8, offset: 2176)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "Renegotiation", file: !373, line: 5, baseType: !979, size: 64, align: 64, offset: 2240)
!979 = !DIBasicType(name: "RenegotiationSupport", size: 64, encoding: DW_ATE_signed)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "KeyLogWriter", file: !373, line: 5, baseType: !197, size: 128, align: 64, offset: 2304)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "serverInitOnce", file: !373, line: 5, baseType: !982, size: 96, align: 32, offset: 2432)
!982 = !DICompositeType(tag: DW_TAG_structure_type, name: "Once", file: !10, line: 7, size: 96, align: 8, elements: !983)
!983 = !{!984, !985}
!984 = !DIDerivedType(tag: DW_TAG_member, name: "m", file: !10, line: 7, baseType: !217, size: 64, align: 32)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "done", file: !10, line: 7, baseType: !8, size: 32, align: 32, offset: 64)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", file: !373, line: 5, baseType: !987, size: 192, align: 32, offset: 2528)
!987 = !DICompositeType(tag: DW_TAG_structure_type, name: "RWMutex", file: !10, line: 8, size: 192, align: 8, elements: !988)
!988 = !{!989, !990, !991, !992, !993}
!989 = !DIDerivedType(tag: DW_TAG_member, name: "w", file: !10, line: 8, baseType: !217, size: 64, align: 32)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "writerSem", file: !10, line: 8, baseType: !8, size: 32, align: 32, offset: 64)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "readerSem", file: !10, line: 8, baseType: !8, size: 32, align: 32, offset: 96)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "readerCount", file: !10, line: 8, baseType: !183, size: 32, align: 32, offset: 128)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "readerWait", file: !10, line: 8, baseType: !183, size: 32, align: 32, offset: 160)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "sessionTicketKeys", file: !373, line: 5, baseType: !995, size: 192, align: 64, offset: 2752)
!995 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*.crypto/tls.ticketKey,int,int}", file: !43, size: 192, align: 8, elements: !996)
!996 = !{!997, !93, !94}
!997 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !43, line: 1, baseType: !998, size: 64, align: 64)
!998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !999, size: 64)
!999 = !DICompositeType(tag: DW_TAG_structure_type, name: ".crypto/tls.ticketKey", file: !373, line: 5, size: 384, align: 8, elements: !1000)
!1000 = !{!1001, !1005, !1006}
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "keyName", file: !373, line: 5, baseType: !1002, size: 128, align: 8)
!1002 = !DICompositeType(tag: DW_TAG_array_type, baseType: !25, size: 128, align: 1, elements: !1003)
!1003 = !{!1004}
!1004 = !DISubrange(count: 16)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "aesKey", file: !373, line: 5, baseType: !1002, size: 128, align: 8, offset: 128)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "hmacKey", file: !373, line: 5, baseType: !1002, size: 128, align: 8, offset: 256)
!1007 = !DILocation(line: 53, column: 3, scope: !626)
!1008 = !DILocation(line: 68, column: 31, scope: !633)
!1009 = !DILocation(line: 68, column: 32, scope: !633)
!1010 = !DILocation(line: 68, column: 17, scope: !633)
!1011 = !DILocation(line: 69, column: 10, scope: !633)
!1012 = !DILocation(line: 70, column: 18, scope: !633)
!1013 = !DILocation(line: 74, column: 4, scope: !633)
!1014 = !DILocation(line: 74, column: 5, scope: !633)
!1015 = !DILocation(line: 74, column: 16, scope: !633)
!1016 = !DILocation(line: 74, column: 15, scope: !633)
!1017 = !DILocation(line: 74, column: 27, scope: !633)
!1018 = !DILocation(line: 74, column: 28, scope: !633)
!1019 = !DILocation(line: 72, column: 11, scope: !633)
!1020 = !DILocation(line: 77, column: 17, scope: !636)
!1021 = !DILocalVariable(name: "err", scope: !636, file: !373, line: 76, type: !100)
!1022 = !DILocation(line: 76, column: 7, scope: !626)
!1023 = !DILocation(line: 78, column: 10, scope: !636)
!1024 = !DILocation(line: 79, column: 18, scope: !636)
!1025 = !DILocation(line: 81, column: 56, scope: !636)
!1026 = !DILocation(line: 81, column: 57, scope: !636)
!1027 = !DILocation(line: 81, column: 11, scope: !636)
!1028 = !DILocation(line: 86, column: 18, scope: !1029)
!1029 = distinct !DILexicalBlock(scope: !626, file: !373, line: 85, column: 6)
!1030 = !DILocation(line: 86, column: 3, scope: !1029)
!1031 = !DILocalVariable(name: "conn", scope: !1029, file: !373, line: 86, type: !1032)
!1032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !38, size: 64)
!1033 = !DILocation(line: 86, column: 3, scope: !626)
!1034 = !DILocalVariable(name: "err", scope: !1029, file: !373, line: 86, type: !100)
!1035 = !DILocation(line: 87, column: 10, scope: !1029)
!1036 = !DILocation(line: 90, column: 9, scope: !1029)
!1037 = !DILocation(line: 94, column: 6, scope: !1029)
!1038 = !DILocation(line: 90, column: 22, scope: !1029)
!1039 = !DILocation(line: 88, column: 12, scope: !1029)
!1040 = !DILocation(line: 90, column: 33, scope: !1029)
!1041 = !DILocation(line: 94, column: 3, scope: !1029)
!1042 = !DILocation(line: 50, column: 4, scope: !603)
!1043 = distinct !DISubprogram(name: "daemon.handle..1command_line_arguments.Srv", linkageName: "command_line_arguments.Srv.handle", scope: null, file: !373, line: 112, type: !1044, isLocal: false, isDefinition: true, scopeLine: 112, isOptimized: false, unit: !1, retainedNodes: !3)
!1044 = !DISubroutineType(types: !1045)
!1045 = !{!100, !606, !606, !348, !38}
!1046 = !DILocalVariable(name: "s", arg: 1, scope: !1043, file: !373, line: 112, type: !606)
!1047 = !DILocation(line: 112, column: 1, scope: !1043)
!1048 = !DILocalVariable(name: "ctx", arg: 2, scope: !1043, file: !373, line: 113, type: !348)
!1049 = !DILocation(line: 113, column: 2, scope: !1043)
!1050 = !DILocalVariable(name: "conn", arg: 3, scope: !1043, file: !373, line: 114, type: !38)
!1051 = !DILocation(line: 114, column: 2, scope: !1043)
!1052 = !DILocalVariable(name: "$ret5", scope: !1043, file: !373, line: 115, type: !100)
!1053 = !DILocation(line: 115, column: 3, scope: !1043)
!1054 = !DILocation(line: 118, column: 7, scope: !1055)
!1055 = distinct !DILexicalBlock(scope: !1043, file: !373, line: 112, column: 1)
!1056 = !DILocation(line: 141, column: 1, scope: !1043)
!1057 = !DILocation(line: 118, column: 20, scope: !1055)
!1058 = !DILocation(line: 116, column: 10, scope: !1055)
!1059 = !DILocation(line: 122, column: 25, scope: !1055)
!1060 = !DILocalVariable(name: "cancel", scope: !1055, file: !373, line: 122, type: !1061)
!1061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1062, size: 64)
!1062 = !DICompositeType(tag: DW_TAG_structure_type, name: "__go_descriptor", file: !10, line: 4, size: 64, align: 8, elements: !1063)
!1063 = !{!1064}
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "code", file: !10, line: 4, baseType: !382, size: 64, align: 64)
!1065 = !DILocation(line: 122, column: 2, scope: !1043)
!1066 = !DILocation(line: 124, column: 13, scope: !1055)
!1067 = !DILocalVariable(name: "ss", scope: !1055, file: !373, line: 124, type: !14)
!1068 = !DILocation(line: 124, column: 2, scope: !1043)
!1069 = !DILocalVariable(name: "err", scope: !1055, file: !373, line: 124, type: !100)
!1070 = !DILocation(line: 125, column: 9, scope: !1055)
!1071 = !DILocation(line: 126, column: 17, scope: !1055)
!1072 = !DILocation(line: 129, column: 2, scope: !1055)
!1073 = !DILocation(line: 131, column: 11, scope: !1055)
!1074 = !DILocation(line: 132, column: 2, scope: !1055)
!1075 = !DILocation(line: 133, column: 10, scope: !1055)
!1076 = !DILocation(line: 134, column: 2, scope: !1055)
!1077 = !DILocation(line: 0, scope: !1055)
!1078 = !DILocation(line: 137, column: 9, scope: !1055)
!1079 = !DILocation(line: 135, column: 10, scope: !1055)
!1080 = !DILocation(line: 138, column: 17, scope: !1055)
!1081 = !DILocation(line: 126, column: 3, scope: !1043)
!1082 = distinct !DISubprogram(name: "daemon.handleHost..1command_line_arguments.Srv", linkageName: "command_line_arguments.Srv.handleHost", scope: null, file: !373, line: 145, type: !1083, isLocal: false, isDefinition: true, scopeLine: 145, isOptimized: false, unit: !1, retainedNodes: !3)
!1083 = !DISubroutineType(types: !1084)
!1084 = !{!100, !606, !606, !348, !14}
!1085 = !DILocalVariable(name: "s", arg: 1, scope: !1082, file: !373, line: 145, type: !606)
!1086 = !DILocation(line: 145, column: 1, scope: !1082)
!1087 = !DILocalVariable(name: "ctx", arg: 2, scope: !1082, file: !373, line: 146, type: !348)
!1088 = !DILocation(line: 146, column: 2, scope: !1082)
!1089 = !DILocalVariable(name: "ss", arg: 3, scope: !1082, file: !373, line: 147, type: !14)
!1090 = !DILocation(line: 147, column: 2, scope: !1082)
!1091 = !DILocation(line: 149, column: 6, scope: !1092)
!1092 = distinct !DILexicalBlock(scope: !1082, file: !373, line: 145, column: 1)
!1093 = !DILocalVariable(name: "initial", scope: !1092, file: !373, line: 149, type: !1094)
!1094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1095, size: 64)
!1095 = !DICompositeType(tag: DW_TAG_structure_type, name: "HostUpdate", file: !10, line: 12, size: 704, align: 8, elements: !1096)
!1096 = !{!522, !523, !1097, !1102}
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "WindowSize", file: !10, line: 12, baseType: !1098, size: 128, align: 64, offset: 512)
!1098 = !DICompositeType(tag: DW_TAG_structure_type, name: "Size", file: !10, line: 12, size: 128, align: 8, elements: !1099)
!1099 = !{!1100, !1101}
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "Rows", file: !10, line: 12, baseType: !27, size: 64, align: 64)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "Cols", file: !10, line: 12, baseType: !27, size: 64, align: 64, offset: 64)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "Modes", file: !10, line: 12, baseType: !255, size: 64, align: 64, offset: 640)
!1103 = !DILocation(line: 149, column: 6, scope: !1082)
!1104 = !DILocation(line: 150, column: 14, scope: !1105)
!1105 = distinct !DILexicalBlock(scope: !1092, file: !373, line: 150, column: 2)
!1106 = !DILocation(line: 150, column: 30, scope: !1105)
!1107 = !DILocation(line: 150, column: 22, scope: !1105)
!1108 = !DILocalVariable(name: "err", scope: !1105, file: !373, line: 150, type: !100)
!1109 = !DILocation(line: 150, column: 5, scope: !1092)
!1110 = !DILocation(line: 150, column: 45, scope: !1105)
!1111 = !DILocation(line: 151, column: 5, scope: !1105)
!1112 = !DILocation(line: 153, column: 49, scope: !1105)
!1113 = !DILocation(line: 153, column: 11, scope: !1105)
!1114 = !DILocation(line: 152, column: 17, scope: !1105)
!1115 = !DILocation(line: 152, column: 3, scope: !1105)
!1116 = !DILocation(line: 158, column: 5, scope: !1092)
!1117 = !DILocation(line: 156, column: 10, scope: !1092)
!1118 = !DILocation(line: 161, column: 3, scope: !1092)
!1119 = !DILocation(line: 161, column: 9, scope: !1092)
!1120 = !DILocalVariable(name: "ok", scope: !1092, file: !373, line: 162, type: !73)
!1121 = !DILocation(line: 162, column: 2, scope: !1082)
!1122 = !DILocation(line: 162, column: 21, scope: !1092)
!1123 = !DILocation(line: 162, column: 12, scope: !1092)
!1124 = !DILocation(line: 162, column: 2, scope: !1092)
!1125 = !DILocation(line: 164, column: 2, scope: !1092)
!1126 = !DILocation(line: 165, column: 4, scope: !1092)
!1127 = !DILocation(line: 165, column: 10, scope: !1092)
!1128 = !DILocation(line: 168, column: 8, scope: !1092)
!1129 = !DILocation(line: 166, column: 5, scope: !1092)
!1130 = !DILocation(line: 174, column: 11, scope: !1092)
!1131 = !DILocation(line: 173, column: 17, scope: !1092)
!1132 = !DILocation(line: 173, column: 3, scope: !1092)
!1133 = !DILocation(line: 180, column: 22, scope: !1092)
!1134 = !DILocation(line: 182, column: 15, scope: !1092)
!1135 = !DILocation(line: 183, column: 15, scope: !1092)
!1136 = !DILocation(line: 184, column: 15, scope: !1092)
!1137 = !DILocation(line: 178, column: 21, scope: !1092)
!1138 = !DILocation(line: 178, column: 22, scope: !1092)
!1139 = !DILocation(line: 178, column: 3, scope: !1092)
!1140 = !DILocation(line: 178, column: 19, scope: !1092)
!1141 = !DILocation(line: 187, column: 3, scope: !1092)
!1142 = !DILocation(line: 187, column: 9, scope: !1092)
!1143 = !DILocation(line: 189, column: 3, scope: !1092)
!1144 = !DILocation(line: 189, column: 9, scope: !1092)
!1145 = !DILocation(line: 189, column: 18, scope: !1092)
!1146 = !DILocation(line: 194, column: 5, scope: !1092)
!1147 = !DILocation(line: 192, column: 10, scope: !1092)
!1148 = !DILocation(line: 196, column: 3, scope: !1092)
!1149 = !DILocation(line: 196, column: 9, scope: !1092)
!1150 = !DILocation(line: 197, column: 10, scope: !1092)
!1151 = !DILocation(line: 197, column: 2, scope: !1092)
!1152 = !DILocation(line: 198, column: 3, scope: !1092)
!1153 = !DILocation(line: 198, column: 9, scope: !1092)
!1154 = !DILocalVariable(name: "$ret6", scope: !1082, file: !373, line: 148, type: !100)
!1155 = !DILocation(line: 148, column: 3, scope: !1082)
!1156 = !DILocation(line: 200, column: 2, scope: !1092)
!1157 = distinct !DISubprogram(name: "daemon.handleShellClient..1command_line_arguments.Srv", linkageName: "command_line_arguments.Srv.handleShellClient", scope: null, file: !373, line: 205, type: !1083, isLocal: false, isDefinition: true, scopeLine: 205, isOptimized: false, unit: !1, retainedNodes: !3)
!1158 = !DILocalVariable(name: "s", arg: 1, scope: !1157, file: !373, line: 205, type: !606)
!1159 = !DILocation(line: 205, column: 1, scope: !1157)
!1160 = !DILocalVariable(name: "ctx", arg: 2, scope: !1157, file: !373, line: 206, type: !348)
!1161 = !DILocation(line: 206, column: 2, scope: !1157)
!1162 = !DILocalVariable(name: "ss", arg: 3, scope: !1157, file: !373, line: 207, type: !14)
!1163 = !DILocation(line: 207, column: 2, scope: !1157)
!1164 = !DILocation(line: 209, column: 3, scope: !1165)
!1165 = distinct !DILexicalBlock(scope: !1157, file: !373, line: 205, column: 1)
!1166 = !DILocation(line: 209, column: 9, scope: !1165)
!1167 = !DILocalVariable(name: "ok", scope: !1165, file: !373, line: 210, type: !73)
!1168 = !DILocation(line: 210, column: 2, scope: !1157)
!1169 = !DILocation(line: 210, column: 21, scope: !1165)
!1170 = !DILocation(line: 210, column: 12, scope: !1165)
!1171 = !DILocation(line: 210, column: 2, scope: !1165)
!1172 = !DILocation(line: 211, column: 3, scope: !1165)
!1173 = !DILocation(line: 211, column: 9, scope: !1165)
!1174 = !DILocation(line: 213, column: 5, scope: !1165)
!1175 = !DILocation(line: 217, column: 8, scope: !1165)
!1176 = !DILocation(line: 215, column: 5, scope: !1165)
!1177 = !DILocation(line: 223, column: 11, scope: !1165)
!1178 = !DILocation(line: 222, column: 17, scope: !1165)
!1179 = !DILocation(line: 222, column: 3, scope: !1165)
!1180 = !DILocation(line: 227, column: 3, scope: !1165)
!1181 = !DILocation(line: 227, column: 9, scope: !1165)
!1182 = !DILocation(line: 227, column: 18, scope: !1165)
!1183 = !DILocalVariable(name: "$ret7", scope: !1157, file: !373, line: 208, type: !100)
!1184 = !DILocation(line: 208, column: 3, scope: !1157)
!1185 = !DILocation(line: 229, column: 2, scope: !1165)
!1186 = distinct !DISubprogram(name: "daemon.CientSessions..1command_line_arguments.Warp", linkageName: "command_line_arguments.Warp.CientSessions", scope: null, file: !1187, line: 89, type: !1188, isLocal: false, isDefinition: true, scopeLine: 89, isOptimized: false, unit: !1, retainedNodes: !3)
!1187 = !DIFile(filename: "warp.go", directory: ".")
!1188 = !DISubroutineType(types: !1189)
!1189 = !{!1190, !1193, !1193, !348}
!1190 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{**Session,int,int}", file: !43, size: 192, align: 8, elements: !1191)
!1191 = !{!1192, !93, !94}
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !43, line: 1, baseType: !432, size: 64, align: 64)
!1193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1194, size: 64)
!1194 = !DICompositeType(tag: DW_TAG_structure_type, name: "Warp", file: !1187, line: 13, size: 512, align: 8, elements: !1195)
!1195 = !{!1196, !1197, !1198, !1211, !1212, !1213}
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "token", file: !1187, line: 14, baseType: !21, size: 128, align: 64)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "windowSize", file: !1187, line: 16, baseType: !1098, size: 128, align: 64, offset: 128)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "host", file: !1187, line: 18, baseType: !1199, size: 64, align: 64, offset: 256)
!1199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1200, size: 64)
!1200 = !DICompositeType(tag: DW_TAG_structure_type, name: "HostState", file: !1187, line: 49, size: 448, align: 8, elements: !1201)
!1201 = !{!1202, !1210}
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "UserState", file: !1187, line: 50, baseType: !1203, size: 384, align: 64)
!1203 = !DICompositeType(tag: DW_TAG_structure_type, name: "UserState", file: !1187, line: 28, size: 384, align: 8, elements: !1204)
!1204 = !{!1205, !1206, !1207, !1209}
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "token", file: !1187, line: 29, baseType: !21, size: 128, align: 64)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "username", file: !1187, line: 30, baseType: !21, size: 128, align: 64, offset: 128)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "mode", file: !1187, line: 31, baseType: !1208, size: 64, align: 64, offset: 256)
!1208 = !DIBasicType(name: "Mode", size: 64, encoding: DW_ATE_unsigned)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "sessions", file: !1187, line: 32, baseType: !255, size: 64, align: 64, offset: 320)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "session", file: !1187, line: 51, baseType: !14, size: 64, align: 64, offset: 384)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "clients", file: !1187, line: 19, baseType: !255, size: 64, align: 64, offset: 320)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "data", file: !1187, line: 21, baseType: !274, size: 64, align: 64, offset: 384)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", file: !1187, line: 23, baseType: !386, size: 64, align: 64, offset: 448)
!1214 = !DILocalVariable(name: "w", arg: 1, scope: !1186, file: !1187, line: 89, type: !1193)
!1215 = !DILocation(line: 89, column: 1, scope: !1186)
!1216 = !DILocalVariable(name: "ctx", arg: 2, scope: !1186, file: !1187, line: 90, type: !348)
!1217 = !DILocation(line: 90, column: 2, scope: !1186)
!1218 = !DILocation(line: 92, column: 14, scope: !1219)
!1219 = distinct !DILexicalBlock(scope: !1186, file: !1187, line: 89, column: 1)
!1220 = !DILocalVariable(name: "sessions", scope: !1219, file: !1187, line: 92, type: !1190)
!1221 = !DILocation(line: 92, column: 2, scope: !1186)
!1222 = !DILocation(line: 93, column: 3, scope: !1219)
!1223 = !DILocation(line: 93, column: 9, scope: !1219)
!1224 = !DILocalVariable(name: "user", scope: !1225, file: !1187, line: 94, type: !1226)
!1225 = distinct !DILexicalBlock(scope: !1219, file: !1187, line: 94, column: 2)
!1226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1203, size: 64)
!1227 = !DILocation(line: 94, column: 6, scope: !1219)
!1228 = !DILocation(line: 94, column: 24, scope: !1225)
!1229 = !DILocation(line: 94, column: 2, scope: !1225)
!1230 = !DILocation(line: 95, column: 25, scope: !1231)
!1231 = distinct !DILexicalBlock(scope: !1225, file: !1187, line: 95, column: 3)
!1232 = !DILocation(line: 95, column: 3, scope: !1231)
!1233 = !DILocation(line: 96, column: 15, scope: !1231)
!1234 = !DILocation(line: 96, column: 13, scope: !1231)
!1235 = !DILocalVariable(name: "c", scope: !1231, file: !1187, line: 95, type: !14)
!1236 = !DILocation(line: 95, column: 7, scope: !1225)
!1237 = !DILocation(line: 0, scope: !1231)
!1238 = !DILocalVariable(name: "c", scope: !1239, file: !1187, line: 100, type: !14)
!1239 = distinct !DILexicalBlock(scope: !1219, file: !1187, line: 100, column: 2)
!1240 = !DILocation(line: 100, column: 6, scope: !1219)
!1241 = !DILocation(line: 100, column: 21, scope: !1239)
!1242 = !DILocation(line: 100, column: 26, scope: !1239)
!1243 = !DILocation(line: 100, column: 36, scope: !1239)
!1244 = !DILocation(line: 100, column: 2, scope: !1239)
!1245 = !DILocation(line: 101, column: 14, scope: !1239)
!1246 = !DILocation(line: 101, column: 12, scope: !1239)
!1247 = !DILocation(line: 0, scope: !1239)
!1248 = !DILocation(line: 103, column: 3, scope: !1219)
!1249 = !DILocation(line: 103, column: 9, scope: !1219)
!1250 = !DILocalVariable(name: "$ret11", scope: !1186, file: !1187, line: 91, type: !1190)
!1251 = !DILocation(line: 91, column: 3, scope: !1186)
!1252 = !DILocation(line: 104, column: 2, scope: !1219)
!1253 = distinct !DISubprogram(name: "daemon.State..1command_line_arguments.Warp", linkageName: "command_line_arguments.Warp.State", scope: null, file: !1187, line: 68, type: !1254, isLocal: false, isDefinition: true, scopeLine: 68, isOptimized: false, unit: !1, retainedNodes: !3)
!1254 = !DISubroutineType(types: !1255)
!1255 = !{!1256, !1193, !1193, !348}
!1256 = !DICompositeType(tag: DW_TAG_structure_type, name: "State", file: !10, line: 12, size: 320, align: 8, elements: !1257)
!1257 = !{!522, !1258, !1259}
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "WindowSize", file: !10, line: 12, baseType: !1098, size: 128, align: 64, offset: 128)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "Users", file: !10, line: 12, baseType: !255, size: 64, align: 64, offset: 256)
!1260 = !DILocalVariable(name: "w", arg: 1, scope: !1253, file: !1187, line: 68, type: !1193)
!1261 = !DILocation(line: 68, column: 1, scope: !1253)
!1262 = !DILocalVariable(name: "ctx", arg: 2, scope: !1253, file: !1187, line: 69, type: !348)
!1263 = !DILocation(line: 69, column: 2, scope: !1253)
!1264 = !DILocalVariable(name: "$ret10", scope: !1253, file: !1187, line: 70, type: !1256)
!1265 = !DILocation(line: 70, column: 3, scope: !1253)
!1266 = !DILocation(line: 71, column: 3, scope: !1267)
!1267 = distinct !DILexicalBlock(scope: !1253, file: !1187, line: 68, column: 1)
!1268 = !DILocation(line: 86, column: 1, scope: !1253)
!1269 = !DILocation(line: 71, column: 9, scope: !1267)
!1270 = !DILocation(line: 72, column: 9, scope: !1267)
!1271 = !DILocation(line: 72, column: 2, scope: !1267)
!1272 = !DILocation(line: 75, column: 16, scope: !1267)
!1273 = !DILocation(line: 76, column: 15, scope: !1267)
!1274 = !DILocation(line: 73, column: 16, scope: !1267)
!1275 = !DILocalVariable(name: "state", scope: !1267, file: !1187, line: 73, type: !1256)
!1276 = !DILocation(line: 73, column: 2, scope: !1253)
!1277 = !DILocation(line: 79, column: 15, scope: !1267)
!1278 = !DILocation(line: 79, column: 20, scope: !1267)
!1279 = !DILocation(line: 79, column: 28, scope: !1267)
!1280 = !DILocation(line: 79, column: 36, scope: !1267)
!1281 = !DILocation(line: 79, column: 46, scope: !1267)
!1282 = !DILocation(line: 79, column: 51, scope: !1267)
!1283 = !DILocation(line: 79, column: 43, scope: !1267)
!1284 = !DILocalVariable(name: "user", scope: !1285, file: !1187, line: 81, type: !1226)
!1285 = distinct !DILexicalBlock(scope: !1267, file: !1187, line: 81, column: 2)
!1286 = !DILocation(line: 81, column: 6, scope: !1267)
!1287 = !DILocation(line: 81, column: 28, scope: !1285)
!1288 = !DILocation(line: 81, column: 2, scope: !1285)
!1289 = !DILocation(line: 82, column: 22, scope: !1285)
!1290 = !DILocation(line: 82, column: 28, scope: !1285)
!1291 = !DILocation(line: 85, column: 2, scope: !1267)
!1292 = !DILocation(line: 85, column: 2, scope: !1253)
!1293 = distinct !DISubprogram(name: "daemon.handleHost..1command_line_arguments.Warp", linkageName: "command_line_arguments.Warp.handleHost", scope: null, file: !1187, line: 187, type: !1294, isLocal: false, isDefinition: true, scopeLine: 187, isOptimized: false, unit: !1, retainedNodes: !3)
!1294 = !DISubroutineType(types: !1295)
!1295 = !{!13, !1193, !1193, !348, !14}
!1296 = !DILocalVariable(name: "param", arg: 1, scope: !1293, file: !1187, line: 187, type: !1193)
!1297 = !DILocation(line: 187, column: 1, scope: !1293)
!1298 = !DILocalVariable(name: "param", arg: 2, scope: !1293, file: !1187, line: 188, type: !348)
!1299 = !DILocation(line: 188, column: 2, scope: !1293)
!1300 = !DILocalVariable(name: "param", arg: 3, scope: !1293, file: !1187, line: 189, type: !14)
!1301 = !DILocation(line: 189, column: 2, scope: !1293)
!1302 = !DILocalVariable(name: "w", scope: !1293, file: !1187, line: 187, type: !1303)
!1303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1193, size: 64)
!1304 = !DILocalVariable(name: "ctx", scope: !1293, file: !1187, line: 188, type: !624)
!1305 = !DILocalVariable(name: "ss", scope: !1293, file: !1187, line: 189, type: !432)
!1306 = !DILocation(line: 192, column: 2, scope: !1307)
!1307 = distinct !DILexicalBlock(scope: !1293, file: !1187, line: 187, column: 1)
!1308 = !DILocation(line: 192, column: 3, scope: !1307)
!1309 = !DILocation(line: 192, column: 9, scope: !1307)
!1310 = !DILocation(line: 193, column: 2, scope: !1307)
!1311 = !DILocation(line: 193, column: 3, scope: !1307)
!1312 = !DILocation(line: 195, column: 14, scope: !1307)
!1313 = !DILocation(line: 195, column: 16, scope: !1307)
!1314 = !DILocation(line: 195, column: 24, scope: !1307)
!1315 = !DILocation(line: 196, column: 16, scope: !1307)
!1316 = !DILocation(line: 202, column: 14, scope: !1307)
!1317 = !DILocation(line: 194, column: 14, scope: !1307)
!1318 = !DILocation(line: 193, column: 11, scope: !1307)
!1319 = !DILocation(line: 204, column: 12, scope: !1307)
!1320 = !DILocation(line: 193, column: 12, scope: !1307)
!1321 = !DILocation(line: 193, column: 9, scope: !1307)
!1322 = !DILocation(line: 206, column: 2, scope: !1307)
!1323 = !DILocation(line: 206, column: 3, scope: !1307)
!1324 = !DILocation(line: 206, column: 9, scope: !1307)
!1325 = !DILocation(line: 209, column: 5, scope: !1307)
!1326 = !DILocation(line: 209, column: 2, scope: !1307)
!1327 = !DILocation(line: 270, column: 5, scope: !1307)
!1328 = !DILocation(line: 270, column: 2, scope: !1307)
!1329 = !DILocation(line: 283, column: 5, scope: !1307)
!1330 = !DILocation(line: 283, column: 2, scope: !1307)
!1331 = !DILocation(line: 304, column: 2, scope: !1307)
!1332 = !DILocation(line: 304, column: 3, scope: !1307)
!1333 = !DILocation(line: 305, column: 2, scope: !1307)
!1334 = !DILocation(line: 305, column: 3, scope: !1307)
!1335 = !DILocation(line: 309, column: 3, scope: !1307)
!1336 = !DILocation(line: 309, column: 5, scope: !1307)
!1337 = !DILocation(line: 307, column: 10, scope: !1307)
!1338 = !DILocation(line: 312, column: 4, scope: !1307)
!1339 = !DILocation(line: 312, column: 6, scope: !1307)
!1340 = !DILocation(line: 312, column: 10, scope: !1307)
!1341 = !DILocation(line: 312, column: 2, scope: !1307)
!1342 = !DILocation(line: 314, column: 8, scope: !1307)
!1343 = !DILocation(line: 314, column: 9, scope: !1307)
!1344 = !DILocation(line: 314, column: 2, scope: !1307)
!1345 = !DILocation(line: 319, column: 3, scope: !1307)
!1346 = !DILocation(line: 319, column: 5, scope: !1307)
!1347 = !DILocation(line: 317, column: 10, scope: !1307)
!1348 = !DILocation(line: 321, column: 14, scope: !1307)
!1349 = !DILocation(line: 321, column: 15, scope: !1307)
!1350 = !DILocalVariable(name: "sessions", scope: !1307, file: !1187, line: 321, type: !1190)
!1351 = !DILocation(line: 321, column: 2, scope: !1293)
!1352 = !DILocalVariable(name: "s", scope: !1353, file: !1187, line: 322, type: !14)
!1353 = distinct !DILexicalBlock(scope: !1307, file: !1187, line: 322, column: 2)
!1354 = !DILocation(line: 322, column: 6, scope: !1307)
!1355 = !DILocation(line: 322, column: 2, scope: !1353)
!1356 = !DILocation(line: 323, column: 4, scope: !1353)
!1357 = !DILocation(line: 327, column: 4, scope: !1353)
!1358 = distinct !DISubprogram(name: "daemon.handleShellClient..1command_line_arguments.Warp", linkageName: "command_line_arguments.Warp.handleShellClient", scope: null, file: !1187, line: 334, type: !1294, isLocal: false, isDefinition: true, scopeLine: 334, isOptimized: false, unit: !1, retainedNodes: !3)
!1359 = !DILocalVariable(name: "param", arg: 1, scope: !1358, file: !1187, line: 334, type: !1193)
!1360 = !DILocation(line: 334, column: 1, scope: !1358)
!1361 = !DILocalVariable(name: "param", arg: 2, scope: !1358, file: !1187, line: 335, type: !348)
!1362 = !DILocation(line: 335, column: 2, scope: !1358)
!1363 = !DILocalVariable(name: "param", arg: 3, scope: !1358, file: !1187, line: 336, type: !14)
!1364 = !DILocation(line: 336, column: 2, scope: !1358)
!1365 = !DILocalVariable(name: "w", scope: !1358, file: !1187, line: 334, type: !1303)
!1366 = !DILocalVariable(name: "ctx", scope: !1358, file: !1187, line: 335, type: !624)
!1367 = !DILocalVariable(name: "ss", scope: !1358, file: !1187, line: 336, type: !432)
!1368 = !DILocalVariable(name: "c", scope: !1369, file: !1187, line: 358, type: !1226)
!1369 = distinct !DILexicalBlock(scope: !1370, file: !1187, line: 358, column: 3)
!1370 = distinct !DILexicalBlock(scope: !1358, file: !1187, line: 334, column: 1)
!1371 = !DILocation(line: 358, column: 6, scope: !1370)
!1372 = !DILocation(line: 339, column: 2, scope: !1370)
!1373 = !DILocation(line: 339, column: 3, scope: !1370)
!1374 = !DILocation(line: 339, column: 9, scope: !1370)
!1375 = !DILocalVariable(name: "isHostSession", scope: !1370, file: !1187, line: 340, type: !73)
!1376 = !DILocation(line: 340, column: 2, scope: !1358)
!1377 = !DILocation(line: 341, column: 24, scope: !1370)
!1378 = !DILocation(line: 341, column: 25, scope: !1370)
!1379 = !DILocation(line: 341, column: 5, scope: !1370)
!1380 = !DILocation(line: 341, column: 7, scope: !1370)
!1381 = !DILocation(line: 341, column: 30, scope: !1370)
!1382 = !DILocation(line: 341, column: 15, scope: !1370)
!1383 = !DILocation(line: 341, column: 21, scope: !1370)
!1384 = !DILocation(line: 343, column: 27, scope: !1370)
!1385 = !DILocation(line: 343, column: 28, scope: !1370)
!1386 = !DILocation(line: 388, column: 2, scope: !1370)
!1387 = !DILocation(line: 388, column: 3, scope: !1370)
!1388 = !DILocalVariable(name: "ok", scope: !1369, file: !1187, line: 358, type: !73)
!1389 = !DILocation(line: 358, column: 25, scope: !1369)
!1390 = !DILocation(line: 358, column: 27, scope: !1369)
!1391 = !DILocation(line: 343, column: 33, scope: !1370)
!1392 = !DILocation(line: 343, column: 6, scope: !1370)
!1393 = !DILocation(line: 343, column: 8, scope: !1370)
!1394 = !DILocation(line: 343, column: 41, scope: !1370)
!1395 = !DILocation(line: 343, column: 16, scope: !1370)
!1396 = !DILocation(line: 343, column: 49, scope: !1370)
!1397 = !DILocation(line: 343, column: 24, scope: !1370)
!1398 = !DILocation(line: 0, scope: !1370)
!1399 = !DILocation(line: 344, column: 6, scope: !1370)
!1400 = !DILocation(line: 348, column: 4, scope: !1370)
!1401 = !DILocation(line: 348, column: 5, scope: !1370)
!1402 = !DILocalVariable(name: "s", scope: !1403, file: !1187, line: 353, type: !14)
!1403 = distinct !DILexicalBlock(scope: !1370, file: !1187, line: 353, column: 3)
!1404 = !DILocation(line: 353, column: 6, scope: !1370)
!1405 = !DILocalVariable(name: "ok", scope: !1403, file: !1187, line: 353, type: !73)
!1406 = !DILocation(line: 353, column: 43, scope: !1403)
!1407 = !DILocation(line: 348, column: 11, scope: !1370)
!1408 = !DILocation(line: 349, column: 4, scope: !1370)
!1409 = !DILocation(line: 353, column: 15, scope: !1403)
!1410 = !DILocation(line: 353, column: 16, scope: !1403)
!1411 = !DILocation(line: 353, column: 21, scope: !1403)
!1412 = !DILocation(line: 353, column: 31, scope: !1403)
!1413 = !DILocation(line: 353, column: 6, scope: !1403)
!1414 = !DILocation(line: 353, column: 3, scope: !1403)
!1415 = !DILocation(line: 354, column: 5, scope: !1403)
!1416 = !DILocation(line: 356, column: 3, scope: !1370)
!1417 = !DILocation(line: 356, column: 4, scope: !1370)
!1418 = !DILocation(line: 356, column: 29, scope: !1370)
!1419 = !DILocation(line: 356, column: 31, scope: !1370)
!1420 = !DILocation(line: 356, column: 49, scope: !1370)
!1421 = !DILocation(line: 356, column: 9, scope: !1370)
!1422 = !DILocation(line: 356, column: 19, scope: !1370)
!1423 = !DILocation(line: 356, column: 47, scope: !1370)
!1424 = !DILocation(line: 358, column: 35, scope: !1369)
!1425 = !DILocation(line: 358, column: 15, scope: !1369)
!1426 = !DILocation(line: 358, column: 16, scope: !1369)
!1427 = !DILocation(line: 358, column: 6, scope: !1369)
!1428 = !DILocation(line: 358, column: 43, scope: !1369)
!1429 = !DILocation(line: 359, column: 4, scope: !1369)
!1430 = !DILocation(line: 359, column: 14, scope: !1369)
!1431 = !DILocation(line: 359, column: 16, scope: !1369)
!1432 = !DILocalVariable(name: "s", scope: !1433, file: !1187, line: 383, type: !14)
!1433 = distinct !DILexicalBlock(scope: !1370, file: !1187, line: 383, column: 3)
!1434 = !DILocation(line: 383, column: 6, scope: !1370)
!1435 = !DILocalVariable(name: "ok", scope: !1433, file: !1187, line: 383, type: !73)
!1436 = !DILocation(line: 383, column: 51, scope: !1433)
!1437 = !DILocation(line: 383, column: 53, scope: !1433)
!1438 = !DILocation(line: 366, column: 11, scope: !1439)
!1439 = distinct !DILexicalBlock(scope: !1369, file: !1187, line: 365, column: 5)
!1440 = !DILocalVariable(name: "any", scope: !1439, file: !1187, line: 366, type: !1441)
!1441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1442, size: 64)
!1442 = !DICompositeType(tag: DW_TAG_structure_type, name: "__go_descriptor", file: !1187, line: 366, size: 64, align: 8, elements: !1443)
!1443 = !{!1444}
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "code", file: !1187, line: 366, baseType: !1445, size: 64, align: 64)
!1445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1446, size: 64)
!1446 = !DISubroutineType(types: !1447)
!1447 = !{!14}
!1448 = !DILocation(line: 366, column: 4, scope: !1369)
!1449 = !DILocation(line: 373, column: 28, scope: !1439)
!1450 = !DILocation(line: 373, column: 7, scope: !1439)
!1451 = !DILocation(line: 373, column: 9, scope: !1439)
!1452 = !DILocation(line: 359, column: 24, scope: !1369)
!1453 = !DILocation(line: 360, column: 15, scope: !1369)
!1454 = !DILocation(line: 360, column: 17, scope: !1369)
!1455 = !DILocation(line: 360, column: 25, scope: !1369)
!1456 = !DILocation(line: 361, column: 17, scope: !1369)
!1457 = !DILocation(line: 363, column: 15, scope: !1369)
!1458 = !DILocation(line: 359, column: 33, scope: !1369)
!1459 = !DILocation(line: 359, column: 34, scope: !1369)
!1460 = !DILocation(line: 359, column: 5, scope: !1369)
!1461 = !DILocation(line: 359, column: 31, scope: !1369)
!1462 = !DILocation(line: 373, column: 33, scope: !1439)
!1463 = !DILocation(line: 373, column: 17, scope: !1439)
!1464 = !DILocation(line: 373, column: 41, scope: !1439)
!1465 = !DILocation(line: 373, column: 25, scope: !1439)
!1466 = !DILocation(line: 374, column: 5, scope: !1439)
!1467 = !DILocation(line: 374, column: 7, scope: !1439)
!1468 = !DILocation(line: 378, column: 5, scope: !1439)
!1469 = !DILocation(line: 378, column: 6, scope: !1439)
!1470 = !DILocation(line: 378, column: 12, scope: !1439)
!1471 = !DILocation(line: 379, column: 5, scope: !1439)
!1472 = !DILocation(line: 383, column: 25, scope: !1433)
!1473 = !DILocation(line: 383, column: 27, scope: !1433)
!1474 = !DILocation(line: 383, column: 35, scope: !1433)
!1475 = !DILocation(line: 383, column: 15, scope: !1433)
!1476 = !DILocation(line: 383, column: 16, scope: !1433)
!1477 = !DILocation(line: 383, column: 24, scope: !1433)
!1478 = !DILocation(line: 383, column: 41, scope: !1433)
!1479 = !DILocation(line: 383, column: 6, scope: !1433)
!1480 = !DILocation(line: 383, column: 3, scope: !1433)
!1481 = !DILocation(line: 384, column: 5, scope: !1433)
!1482 = !DILocation(line: 386, column: 3, scope: !1370)
!1483 = !DILocation(line: 386, column: 13, scope: !1370)
!1484 = !DILocation(line: 386, column: 4, scope: !1370)
!1485 = !DILocation(line: 386, column: 15, scope: !1370)
!1486 = !DILocation(line: 386, column: 23, scope: !1370)
!1487 = !DILocation(line: 386, column: 12, scope: !1370)
!1488 = !DILocation(line: 386, column: 39, scope: !1370)
!1489 = !DILocation(line: 386, column: 41, scope: !1370)
!1490 = !DILocation(line: 386, column: 59, scope: !1370)
!1491 = !DILocation(line: 386, column: 29, scope: !1370)
!1492 = !DILocation(line: 386, column: 57, scope: !1370)
!1493 = !DILocation(line: 388, column: 9, scope: !1370)
!1494 = !DILocation(line: 391, column: 5, scope: !1370)
!1495 = !DILocation(line: 391, column: 2, scope: !1370)
!1496 = !DILocation(line: 404, column: 2, scope: !1370)
!1497 = !DILocation(line: 404, column: 3, scope: !1370)
!1498 = !DILocation(line: 405, column: 2, scope: !1370)
!1499 = !DILocation(line: 405, column: 3, scope: !1370)
!1500 = !DILocation(line: 409, column: 3, scope: !1370)
!1501 = !DILocation(line: 409, column: 5, scope: !1370)
!1502 = !DILocation(line: 407, column: 10, scope: !1370)
!1503 = !DILocation(line: 412, column: 4, scope: !1370)
!1504 = !DILocation(line: 412, column: 6, scope: !1370)
!1505 = !DILocation(line: 412, column: 10, scope: !1370)
!1506 = !DILocation(line: 412, column: 2, scope: !1370)
!1507 = !DILocation(line: 417, column: 3, scope: !1370)
!1508 = !DILocation(line: 417, column: 5, scope: !1370)
!1509 = !DILocation(line: 415, column: 10, scope: !1370)
!1510 = !DILocation(line: 420, column: 2, scope: !1370)
!1511 = !DILocation(line: 420, column: 3, scope: !1370)
!1512 = !DILocation(line: 420, column: 9, scope: !1370)
!1513 = !DILocation(line: 422, column: 10, scope: !1370)
!1514 = !DILocation(line: 422, column: 11, scope: !1370)
!1515 = !DILocation(line: 429, column: 2, scope: !1370)
!1516 = !DILocation(line: 429, column: 3, scope: !1370)
!1517 = !DILocation(line: 424, column: 20, scope: !1370)
!1518 = !DILocation(line: 424, column: 22, scope: !1370)
!1519 = !DILocation(line: 422, column: 16, scope: !1370)
!1520 = !DILocation(line: 422, column: 27, scope: !1370)
!1521 = !DILocation(line: 422, column: 29, scope: !1370)
!1522 = !DILocation(line: 422, column: 3, scope: !1370)
!1523 = !DILocation(line: 424, column: 30, scope: !1370)
!1524 = !DILocation(line: 424, column: 10, scope: !1370)
!1525 = !DILocation(line: 424, column: 11, scope: !1370)
!1526 = !DILocation(line: 424, column: 19, scope: !1370)
!1527 = !DILocation(line: 424, column: 36, scope: !1370)
!1528 = !DILocation(line: 424, column: 47, scope: !1370)
!1529 = !DILocation(line: 424, column: 49, scope: !1370)
!1530 = !DILocation(line: 424, column: 3, scope: !1370)
!1531 = !DILocation(line: 425, column: 20, scope: !1370)
!1532 = !DILocation(line: 425, column: 22, scope: !1370)
!1533 = !DILocation(line: 425, column: 30, scope: !1370)
!1534 = !DILocation(line: 425, column: 10, scope: !1370)
!1535 = !DILocation(line: 425, column: 11, scope: !1370)
!1536 = !DILocation(line: 425, column: 19, scope: !1370)
!1537 = !DILocation(line: 425, column: 36, scope: !1370)
!1538 = !DILocation(line: 425, column: 6, scope: !1370)
!1539 = !DILocation(line: 426, column: 11, scope: !1370)
!1540 = !DILocation(line: 426, column: 12, scope: !1370)
!1541 = !DILocation(line: 426, column: 22, scope: !1370)
!1542 = !DILocation(line: 426, column: 24, scope: !1370)
!1543 = !DILocation(line: 426, column: 32, scope: !1370)
!1544 = !DILocation(line: 426, column: 4, scope: !1370)
!1545 = !DILocation(line: 429, column: 9, scope: !1370)
!1546 = !DILocation(line: 432, column: 2, scope: !1370)
!1547 = !DILocation(line: 432, column: 3, scope: !1370)
!1548 = !DILocation(line: 433, column: 2, scope: !1370)
!1549 = !DILocation(line: 433, column: 3, scope: !1370)
!1550 = distinct !DISubprogram(name: "daemon.rcvHostData..1command_line_arguments.Warp", linkageName: "command_line_arguments.Warp.rcvHostData", scope: null, file: !1187, line: 162, type: !1551, isLocal: false, isDefinition: true, scopeLine: 162, isOptimized: false, unit: !1, retainedNodes: !3)
!1551 = !DISubroutineType(types: !1552)
!1552 = !{!13, !1193, !1193, !348, !14, !133}
!1553 = !DILocalVariable(name: "data", arg: 4, scope: !1550, file: !1187, line: 165, type: !133)
!1554 = !DILocation(line: 165, column: 2, scope: !1550)
!1555 = !DILocalVariable(name: "w", arg: 1, scope: !1550, file: !1187, line: 162, type: !1193)
!1556 = !DILocation(line: 162, column: 1, scope: !1550)
!1557 = !DILocalVariable(name: "ctx", arg: 2, scope: !1550, file: !1187, line: 163, type: !348)
!1558 = !DILocation(line: 163, column: 2, scope: !1550)
!1559 = !DILocalVariable(name: "ss", arg: 3, scope: !1550, file: !1187, line: 164, type: !14)
!1560 = !DILocation(line: 164, column: 2, scope: !1550)
!1561 = !DILocation(line: 167, column: 15, scope: !1562)
!1562 = distinct !DILexicalBlock(scope: !1550, file: !1187, line: 162, column: 1)
!1563 = !DILocalVariable(name: "sessions", scope: !1562, file: !1187, line: 167, type: !1190)
!1564 = !DILocation(line: 167, column: 2, scope: !1550)
!1565 = !DILocalVariable(name: "s", scope: !1566, file: !1187, line: 168, type: !14)
!1566 = distinct !DILexicalBlock(scope: !1562, file: !1187, line: 168, column: 2)
!1567 = !DILocation(line: 168, column: 6, scope: !1562)
!1568 = !DILocation(line: 168, column: 2, scope: !1566)
!1569 = !DILocation(line: 173, column: 14, scope: !1570)
!1570 = distinct !DILexicalBlock(scope: !1566, file: !1187, line: 168, column: 29)
!1571 = !DILocation(line: 173, column: 20, scope: !1570)
!1572 = !DILocalVariable(name: "sink$0", scope: !1570, file: !1187, line: 173, type: !27)
!1573 = !DILocation(line: 173, column: 3, scope: !1566)
!1574 = !DILocalVariable(name: "err", scope: !1570, file: !1187, line: 173, type: !100)
!1575 = !DILocation(line: 174, column: 10, scope: !1570)
!1576 = !DILocation(line: 177, column: 5, scope: !1570)
!1577 = !DILocation(line: 178, column: 5, scope: !1570)
!1578 = distinct !DISubprogram(name: "daemon.rcvShellClientData..1command_line_arguments.Warp", linkageName: "command_line_arguments.Warp.rcvShellClientData", scope: null, file: !1187, line: 141, type: !1551, isLocal: false, isDefinition: true, scopeLine: 141, isOptimized: false, unit: !1, retainedNodes: !3)
!1579 = !DILocalVariable(name: "data", arg: 4, scope: !1578, file: !1187, line: 144, type: !133)
!1580 = !DILocation(line: 144, column: 2, scope: !1578)
!1581 = !DILocalVariable(name: "w", arg: 1, scope: !1578, file: !1187, line: 141, type: !1193)
!1582 = !DILocation(line: 141, column: 1, scope: !1578)
!1583 = !DILocalVariable(name: "ctx", arg: 2, scope: !1578, file: !1187, line: 142, type: !348)
!1584 = !DILocation(line: 142, column: 2, scope: !1578)
!1585 = !DILocalVariable(name: "ss", arg: 3, scope: !1578, file: !1187, line: 143, type: !14)
!1586 = !DILocation(line: 143, column: 2, scope: !1578)
!1587 = !DILocalVariable(name: "mode", scope: !1588, file: !1187, line: 146, type: !1208)
!1588 = distinct !DILexicalBlock(scope: !1578, file: !1187, line: 141, column: 1)
!1589 = !DILocation(line: 146, column: 6, scope: !1578)
!1590 = !DILocation(line: 147, column: 3, scope: !1588)
!1591 = !DILocation(line: 147, column: 9, scope: !1588)
!1592 = !DILocation(line: 148, column: 25, scope: !1588)
!1593 = !DILocation(line: 148, column: 7, scope: !1588)
!1594 = !DILocation(line: 148, column: 15, scope: !1588)
!1595 = !DILocation(line: 148, column: 30, scope: !1588)
!1596 = !DILocation(line: 148, column: 21, scope: !1588)
!1597 = !DILocation(line: 149, column: 11, scope: !1588)
!1598 = !DILocation(line: 149, column: 16, scope: !1588)
!1599 = !DILocation(line: 149, column: 26, scope: !1588)
!1600 = !DILocalVariable(name: "ok", scope: !1601, file: !1187, line: 151, type: !73)
!1601 = distinct !DILexicalBlock(scope: !1588, file: !1187, line: 151, column: 3)
!1602 = !DILocation(line: 151, column: 6, scope: !1588)
!1603 = !DILocation(line: 151, column: 16, scope: !1601)
!1604 = !DILocation(line: 151, column: 6, scope: !1601)
!1605 = !DILocation(line: 151, column: 3, scope: !1601)
!1606 = !DILocation(line: 152, column: 12, scope: !1601)
!1607 = !DILocation(line: 152, column: 20, scope: !1601)
!1608 = !DILocation(line: 152, column: 37, scope: !1601)
!1609 = !DILocation(line: 0, scope: !1588)
!1610 = !DILocation(line: 155, column: 3, scope: !1588)
!1611 = !DILocation(line: 155, column: 9, scope: !1588)
!1612 = !DILocation(line: 158, column: 4, scope: !1588)
!1613 = !DILocation(line: 158, column: 10, scope: !1588)
!1614 = distinct !DISubprogram(name: "daemon.updateClientSessions..1command_line_arguments.Warp", linkageName: "command_line_arguments.Warp.updateClientSessions", scope: null, file: !1187, line: 108, type: !1615, isLocal: false, isDefinition: true, scopeLine: 108, isOptimized: false, unit: !1, retainedNodes: !3)
!1615 = !DISubroutineType(types: !1616)
!1616 = !{!13, !1193, !1193, !348}
!1617 = !DILocalVariable(name: "w", arg: 1, scope: !1614, file: !1187, line: 108, type: !1193)
!1618 = !DILocation(line: 108, column: 1, scope: !1614)
!1619 = !DILocalVariable(name: "ctx", arg: 2, scope: !1614, file: !1187, line: 109, type: !348)
!1620 = !DILocation(line: 109, column: 2, scope: !1614)
!1621 = !DILocation(line: 111, column: 9, scope: !1622)
!1622 = distinct !DILexicalBlock(scope: !1614, file: !1187, line: 108, column: 1)
!1623 = !DILocalVariable(name: "st", scope: !1622, file: !1187, line: 111, type: !1256)
!1624 = !DILocation(line: 111, column: 2, scope: !1614)
!1625 = !DILocation(line: 112, column: 15, scope: !1622)
!1626 = !DILocalVariable(name: "sessions", scope: !1622, file: !1187, line: 112, type: !1190)
!1627 = !DILocation(line: 112, column: 2, scope: !1614)
!1628 = !DILocalVariable(name: "ss", scope: !1629, file: !1187, line: 113, type: !14)
!1629 = distinct !DILexicalBlock(scope: !1622, file: !1187, line: 113, column: 2)
!1630 = !DILocation(line: 113, column: 6, scope: !1622)
!1631 = !DILocation(line: 113, column: 2, scope: !1629)
!1632 = !DILocation(line: 116, column: 6, scope: !1629)
!1633 = !DILocation(line: 114, column: 11, scope: !1629)
!1634 = !DILocation(line: 119, column: 5, scope: !1629)
!1635 = !DILocation(line: 119, column: 20, scope: !1629)
!1636 = !DILocation(line: 119, column: 12, scope: !1629)
!1637 = distinct !DISubprogram(name: "daemon.updateHost..1command_line_arguments.Warp", linkageName: "command_line_arguments.Warp.updateHost", scope: null, file: !1187, line: 124, type: !1615, isLocal: false, isDefinition: true, scopeLine: 124, isOptimized: false, unit: !1, retainedNodes: !3)
!1638 = !DILocalVariable(name: "w", arg: 1, scope: !1637, file: !1187, line: 124, type: !1193)
!1639 = !DILocation(line: 124, column: 1, scope: !1637)
!1640 = !DILocalVariable(name: "ctx", arg: 2, scope: !1637, file: !1187, line: 125, type: !348)
!1641 = !DILocation(line: 125, column: 2, scope: !1637)
!1642 = !DILocation(line: 127, column: 7, scope: !1637)
!1643 = !DILocation(line: 127, column: 12, scope: !1637)
!1644 = !DILocation(line: 127, column: 20, scope: !1637)
!1645 = !DILocation(line: 127, column: 5, scope: !1637)
!1646 = !DILocation(line: 128, column: 10, scope: !1647)
!1647 = distinct !DILexicalBlock(scope: !1637, file: !1187, line: 127, column: 30)
!1648 = !DILocalVariable(name: "st", scope: !1647, file: !1187, line: 128, type: !1256)
!1649 = !DILocation(line: 128, column: 3, scope: !1637)
!1650 = !DILocation(line: 132, column: 5, scope: !1647)
!1651 = !DILocation(line: 132, column: 10, scope: !1647)
!1652 = !DILocation(line: 132, column: 18, scope: !1647)
!1653 = !DILocation(line: 130, column: 11, scope: !1647)
!1654 = !DILocation(line: 135, column: 4, scope: !1647)
!1655 = !DILocation(line: 135, column: 9, scope: !1647)
!1656 = !DILocation(line: 135, column: 17, scope: !1647)
!1657 = !DILocation(line: 135, column: 32, scope: !1647)
!1658 = !DILocation(line: 135, column: 24, scope: !1647)
!1659 = distinct !DISubprogram(name: "daemon.User..1command_line_arguments.HostState", linkageName: "command_line_arguments.HostState.User", scope: null, file: !1187, line: 55, type: !1660, isLocal: false, isDefinition: true, scopeLine: 55, isOptimized: false, unit: !1, retainedNodes: !3)
!1660 = !DISubroutineType(types: !1661)
!1661 = !{!1662, !1199, !1199, !348}
!1662 = !DICompositeType(tag: DW_TAG_structure_type, name: "User", file: !10, line: 12, size: 384, align: 8, elements: !1663)
!1663 = !{!20, !1664, !1665, !1666}
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "Username", file: !10, line: 12, baseType: !21, size: 128, align: 64, offset: 128)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", file: !10, line: 12, baseType: !1208, size: 64, align: 64, offset: 256)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "Hosting", file: !10, line: 12, baseType: !73, size: 8, align: 8, offset: 320)
!1667 = !DILocalVariable(name: "$ret9", scope: !1659, file: !1187, line: 57, type: !1662)
!1668 = !DILocation(line: 57, column: 3, scope: !1659)
!1669 = !DILocalVariable(name: "h", arg: 1, scope: !1659, file: !1187, line: 55, type: !1199)
!1670 = !DILocation(line: 55, column: 1, scope: !1659)
!1671 = !DILocalVariable(name: "ctx", arg: 2, scope: !1659, file: !1187, line: 56, type: !348)
!1672 = !DILocation(line: 56, column: 2, scope: !1659)
!1673 = !DILocation(line: 59, column: 14, scope: !1659)
!1674 = !DILocation(line: 60, column: 24, scope: !1659)
!1675 = !DILocation(line: 61, column: 24, scope: !1659)
!1676 = !DILocation(line: 58, column: 14, scope: !1659)
!1677 = !DILocation(line: 58, column: 2, scope: !1659)
!1678 = distinct !DISubprogram(name: "daemon.User..1command_line_arguments.UserState", linkageName: "command_line_arguments.UserState.User", scope: null, file: !1187, line: 36, type: !1679, isLocal: false, isDefinition: true, scopeLine: 36, isOptimized: false, unit: !1, retainedNodes: !3)
!1679 = !DISubroutineType(types: !1680)
!1680 = !{!1662, !1226, !1226, !348}
!1681 = !DILocalVariable(name: "$ret8", scope: !1678, file: !1187, line: 38, type: !1662)
!1682 = !DILocation(line: 38, column: 3, scope: !1678)
!1683 = !DILocalVariable(name: "u", arg: 1, scope: !1678, file: !1187, line: 36, type: !1226)
!1684 = !DILocation(line: 36, column: 1, scope: !1678)
!1685 = !DILocalVariable(name: "ctx", arg: 2, scope: !1678, file: !1187, line: 37, type: !348)
!1686 = !DILocation(line: 37, column: 2, scope: !1678)
!1687 = !DILocation(line: 40, column: 14, scope: !1678)
!1688 = !DILocation(line: 41, column: 14, scope: !1678)
!1689 = !DILocation(line: 42, column: 14, scope: !1678)
!1690 = !DILocation(line: 39, column: 14, scope: !1678)
!1691 = !DILocation(line: 39, column: 2, scope: !1678)
!1692 = distinct !DISubprogram(name: "daemon.NewSrv", linkageName: "command_line_arguments.NewSrv", scope: null, file: !373, line: 26, type: !1693, isLocal: false, isDefinition: true, scopeLine: 26, isOptimized: false, unit: !1, retainedNodes: !3)
!1693 = !DISubroutineType(types: !1694)
!1694 = !{!606, !348, !21, !21, !21}
!1695 = !DILocalVariable(name: "keyFile", arg: 4, scope: !1692, file: !373, line: 30, type: !21)
!1696 = !DILocation(line: 30, column: 2, scope: !1692)
!1697 = !DILocalVariable(name: "ctx", arg: 1, scope: !1692, file: !373, line: 27, type: !348)
!1698 = !DILocation(line: 27, column: 2, scope: !1692)
!1699 = !DILocalVariable(name: "address", arg: 2, scope: !1692, file: !373, line: 28, type: !21)
!1700 = !DILocation(line: 28, column: 2, scope: !1692)
!1701 = !DILocalVariable(name: "certFile", arg: 3, scope: !1692, file: !373, line: 29, type: !21)
!1702 = !DILocation(line: 29, column: 2, scope: !1692)
!1703 = !DILocalVariable(name: "$ret3", scope: !1692, file: !373, line: 31, type: !606)
!1704 = !DILocation(line: 31, column: 3, scope: !1692)
!1705 = !DILocation(line: 36, column: 13, scope: !1692)
!1706 = !DILocation(line: 37, column: 13, scope: !1692)
!1707 = !DILocation(line: 32, column: 9, scope: !1692)
!1708 = !DILocation(line: 32, column: 10, scope: !1692)
!1709 = !DILocation(line: 32, column: 2, scope: !1692)
!1710 = distinct !DISubprogram(name: "daemon.command_line_arguments..thunk4", scope: null, file: !373, line: 83, type: !1711, isLocal: true, isDefinition: true, scopeLine: 83, isOptimized: false, unit: !1, retainedNodes: !3)
!1711 = !DISubroutineType(types: !1712)
!1712 = !{!73, !1713}
!1713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1714, size: 64)
!1714 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{Listener}", file: !43, size: 128, align: 8, elements: !1715)
!1715 = !{!1716}
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "object", file: !43, line: 83, baseType: !638, size: 128, align: 64)
!1717 = !DILocalVariable(name: "__go_thunk_parameter", arg: 1, scope: !1710, file: !373, line: 83, type: !1713)
!1718 = !DILocation(line: 83, column: 2, scope: !1710)
!1719 = !DILocalVariable(name: "$ret16", scope: !1710, file: !373, line: 83, type: !73)
!1720 = distinct !DISubprogram(name: "daemon.func1", scope: null, file: !373, line: 94, type: !383, isLocal: true, isDefinition: true, scopeLine: 94, isOptimized: false, unit: !1, retainedNodes: !3)
!1721 = !DILocation(line: 95, column: 11, scope: !1722)
!1722 = distinct !DILexicalBlock(scope: !1720, file: !373, line: 94, column: 6)
!1723 = !DILocation(line: 95, column: 20, scope: !1722)
!1724 = !DILocation(line: 95, column: 25, scope: !1722)
!1725 = !DILocation(line: 95, column: 12, scope: !1722)
!1726 = !DILocalVariable(name: "err", scope: !1722, file: !373, line: 95, type: !100)
!1727 = !DILocation(line: 95, column: 4, scope: !1720)
!1728 = !DILocation(line: 96, column: 11, scope: !1722)
!1729 = !DILocation(line: 0, scope: !1722)
!1730 = !DILocation(line: 97, column: 13, scope: !1722)
!1731 = !DILocation(line: 99, column: 34, scope: !1722)
!1732 = !DILocation(line: 97, column: 18, scope: !1722)
!1733 = !DILocation(line: 102, column: 13, scope: !1722)
!1734 = !DILocation(line: 102, column: 18, scope: !1722)
!1735 = distinct !DISubprogram(name: "daemon.command_line_arguments..thunk5", scope: null, file: !373, line: 94, type: !591, isLocal: true, isDefinition: true, scopeLine: 94, isOptimized: false, unit: !1, retainedNodes: !3)
!1736 = !DILocalVariable(name: "__go_thunk_parameter", arg: 1, scope: !1735, file: !373, line: 94, type: !593)
!1737 = !DILocation(line: 94, column: 3, scope: !1735)
!1738 = distinct !DISubprogram(name: "daemon.command_line_arguments..thunk6", scope: null, file: !373, line: 129, type: !1739, isLocal: true, isDefinition: true, scopeLine: 129, isOptimized: false, unit: !1, retainedNodes: !3)
!1739 = !DISubroutineType(types: !1740)
!1740 = !{!13, !1741}
!1741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1742, size: 64)
!1742 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*Session}", file: !43, size: 64, align: 8, elements: !1743)
!1743 = !{!1744}
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "a0", file: !43, line: 129, baseType: !14, size: 64, align: 64)
!1745 = !DILocalVariable(name: "__go_thunk_parameter", arg: 1, scope: !1738, file: !373, line: 129, type: !1741)
!1746 = !DILocation(line: 129, column: 2, scope: !1738)
!1747 = distinct !DISubprogram(name: "daemon.command_line_arguments..thunk7", scope: null, file: !1187, line: 72, type: !576, isLocal: true, isDefinition: true, scopeLine: 72, isOptimized: false, unit: !1, retainedNodes: !3)
!1748 = !DILocalVariable(name: "__go_thunk_parameter", arg: 1, scope: !1747, file: !1187, line: 72, type: !578)
!1749 = !DILocation(line: 72, column: 2, scope: !1747)
!1750 = !DILocalVariable(name: "$ret17", scope: !1747, file: !1187, line: 72, type: !73)
!1751 = distinct !DISubprogram(name: "daemon.func1", scope: null, file: !1187, line: 209, type: !383, isLocal: true, isDefinition: true, scopeLine: 209, isOptimized: false, unit: !1, retainedNodes: !3)
!1752 = !DILocation(line: 212, column: 8, scope: !1753)
!1753 = distinct !DILexicalBlock(scope: !1751, file: !1187, line: 211, column: 7)
!1754 = !DILocalVariable(name: "st", scope: !1753, file: !1187, line: 212, type: !1094)
!1755 = !DILocation(line: 212, column: 8, scope: !1751)
!1756 = !DILocation(line: 213, column: 14, scope: !1757)
!1757 = distinct !DILexicalBlock(scope: !1753, file: !1187, line: 213, column: 4)
!1758 = !DILocation(line: 213, column: 15, scope: !1757)
!1759 = !DILocation(line: 213, column: 20, scope: !1757)
!1760 = !DILocation(line: 213, column: 28, scope: !1757)
!1761 = !DILocation(line: 213, column: 44, scope: !1757)
!1762 = !DILocation(line: 213, column: 36, scope: !1757)
!1763 = !DILocalVariable(name: "err", scope: !1757, file: !1187, line: 213, type: !100)
!1764 = !DILocation(line: 213, column: 7, scope: !1753)
!1765 = !DILocation(line: 213, column: 54, scope: !1757)
!1766 = !DILocation(line: 216, column: 6, scope: !1757)
!1767 = !DILocation(line: 216, column: 8, scope: !1757)
!1768 = !DILocation(line: 214, column: 13, scope: !1757)
!1769 = !DILocation(line: 216, column: 21, scope: !1757)
!1770 = !DILocation(line: 214, column: 18, scope: !1757)
!1771 = !DILocation(line: 222, column: 18, scope: !1753)
!1772 = !DILocation(line: 222, column: 19, scope: !1753)
!1773 = !DILocation(line: 265, column: 3, scope: !1751)
!1774 = !DILocation(line: 265, column: 24, scope: !1751)
!1775 = !DILocation(line: 265, column: 5, scope: !1751)
!1776 = !DILocation(line: 266, column: 3, scope: !1751)
!1777 = !DILocation(line: 266, column: 5, scope: !1751)
!1778 = !DILocation(line: 222, column: 15, scope: !1753)
!1779 = !DILocation(line: 226, column: 8, scope: !1753)
!1780 = !DILocation(line: 226, column: 6, scope: !1753)
!1781 = !DILocation(line: 226, column: 19, scope: !1753)
!1782 = !DILocation(line: 226, column: 20, scope: !1753)
!1783 = !DILocation(line: 233, column: 24, scope: !1753)
!1784 = !DILocation(line: 233, column: 26, scope: !1753)
!1785 = !DILocation(line: 223, column: 13, scope: !1753)
!1786 = !DILocation(line: 223, column: 18, scope: !1753)
!1787 = !DILocation(line: 233, column: 9, scope: !1753)
!1788 = !DILocation(line: 233, column: 21, scope: !1753)
!1789 = !DILocation(line: 234, column: 21, scope: !1753)
!1790 = !DILocation(line: 234, column: 23, scope: !1753)
!1791 = !DILocation(line: 234, column: 12, scope: !1753)
!1792 = !DILocation(line: 234, column: 31, scope: !1753)
!1793 = !DILocation(line: 234, column: 18, scope: !1753)
!1794 = !DILocation(line: 235, column: 23, scope: !1753)
!1795 = !DILocation(line: 235, column: 25, scope: !1753)
!1796 = !DILocation(line: 235, column: 12, scope: !1753)
!1797 = !DILocation(line: 235, column: 33, scope: !1753)
!1798 = !DILocation(line: 235, column: 20, scope: !1753)
!1799 = !DILocation(line: 238, column: 8, scope: !1753)
!1800 = !DILocation(line: 238, column: 6, scope: !1753)
!1801 = !DILocation(line: 236, column: 13, scope: !1753)
!1802 = !DILocation(line: 236, column: 18, scope: !1753)
!1803 = !DILocation(line: 243, column: 4, scope: !1753)
!1804 = !DILocation(line: 243, column: 5, scope: !1753)
!1805 = !DILocation(line: 243, column: 11, scope: !1753)
!1806 = !DILocation(line: 244, column: 4, scope: !1753)
!1807 = !DILocation(line: 244, column: 5, scope: !1753)
!1808 = !DILocation(line: 244, column: 21, scope: !1753)
!1809 = !DILocation(line: 244, column: 17, scope: !1753)
!1810 = !DILocalVariable(name: "mode", scope: !1811, file: !1187, line: 245, type: !1208)
!1811 = distinct !DILexicalBlock(scope: !1753, file: !1187, line: 245, column: 4)
!1812 = !DILocation(line: 245, column: 8, scope: !1753)
!1813 = !DILocation(line: 245, column: 30, scope: !1811)
!1814 = !DILocation(line: 245, column: 4, scope: !1811)
!1815 = !DILocation(line: 246, column: 18, scope: !1816)
!1816 = distinct !DILexicalBlock(scope: !1811, file: !1187, line: 246, column: 5)
!1817 = !DILocation(line: 246, column: 8, scope: !1816)
!1818 = !DILocalVariable(name: "ok", scope: !1816, file: !1187, line: 246, type: !73)
!1819 = !DILocation(line: 246, column: 8, scope: !1811)
!1820 = !DILocation(line: 246, column: 5, scope: !1816)
!1821 = !DILocation(line: 247, column: 6, scope: !1816)
!1822 = !DILocation(line: 247, column: 7, scope: !1816)
!1823 = !DILocation(line: 251, column: 7, scope: !1816)
!1824 = !DILocation(line: 251, column: 9, scope: !1816)
!1825 = !DILocation(line: 249, column: 14, scope: !1816)
!1826 = !DILocation(line: 249, column: 19, scope: !1816)
!1827 = !DILocation(line: 247, column: 15, scope: !1816)
!1828 = !DILocation(line: 247, column: 21, scope: !1816)
!1829 = !DILocation(line: 247, column: 27, scope: !1816)
!1830 = !DILocation(line: 246, column: 17, scope: !1816)
!1831 = !DILocation(line: 256, column: 4, scope: !1753)
!1832 = !DILocation(line: 256, column: 5, scope: !1753)
!1833 = !DILocation(line: 256, column: 11, scope: !1753)
!1834 = !DILocation(line: 260, column: 5, scope: !1753)
!1835 = !DILocation(line: 260, column: 7, scope: !1753)
!1836 = !DILocation(line: 260, column: 33, scope: !1753)
!1837 = !DILocation(line: 260, column: 53, scope: !1753)
!1838 = !DILocation(line: 258, column: 12, scope: !1753)
!1839 = !DILocation(line: 258, column: 17, scope: !1753)
!1840 = !DILocation(line: 263, column: 4, scope: !1753)
!1841 = !DILocation(line: 263, column: 27, scope: !1753)
!1842 = !DILocation(line: 263, column: 5, scope: !1753)
!1843 = distinct !DISubprogram(name: "daemon.command_line_arguments..thunk8", scope: null, file: !1187, line: 209, type: !591, isLocal: true, isDefinition: true, scopeLine: 209, isOptimized: false, unit: !1, retainedNodes: !3)
!1844 = !DILocalVariable(name: "__go_thunk_parameter", arg: 1, scope: !1843, file: !1187, line: 209, type: !593)
!1845 = !DILocation(line: 209, column: 2, scope: !1843)
!1846 = distinct !DISubprogram(name: "daemon.func2", scope: null, file: !1187, line: 270, type: !383, isLocal: true, isDefinition: true, scopeLine: 270, isOptimized: false, unit: !1, retainedNodes: !3)
!1847 = !DILocation(line: 271, column: 17, scope: !1846)
!1848 = !DILocation(line: 277, column: 6, scope: !1846)
!1849 = !DILocation(line: 277, column: 8, scope: !1846)
!1850 = !DILocation(line: 271, column: 8, scope: !1846)
!1851 = !DILocation(line: 278, column: 3, scope: !1846)
!1852 = !DILocation(line: 278, column: 24, scope: !1846)
!1853 = !DILocation(line: 278, column: 5, scope: !1846)
!1854 = !DILocation(line: 279, column: 3, scope: !1846)
!1855 = !DILocation(line: 279, column: 5, scope: !1846)
!1856 = distinct !DISubprogram(name: "daemon.command_line_arguments..thunk9", scope: null, file: !1187, line: 270, type: !591, isLocal: true, isDefinition: true, scopeLine: 270, isOptimized: false, unit: !1, retainedNodes: !3)
!1857 = !DILocalVariable(name: "__go_thunk_parameter", arg: 1, scope: !1856, file: !1187, line: 270, type: !593)
!1858 = !DILocation(line: 270, column: 2, scope: !1856)
!1859 = distinct !DISubprogram(name: "daemon.func4", scope: null, file: !1187, line: 283, type: !383, isLocal: true, isDefinition: true, scopeLine: 283, isOptimized: false, unit: !1, retainedNodes: !3)
!1860 = !DILocalVariable(name: "ok", scope: !1861, file: !1187, line: 286, type: !73)
!1861 = distinct !DILexicalBlock(scope: !1859, file: !1187, line: 285, column: 7)
!1862 = !DILocation(line: 286, column: 4, scope: !1859)
!1863 = !DILocation(line: 286, column: 17, scope: !1861)
!1864 = !DILocation(line: 286, column: 18, scope: !1861)
!1865 = !DILocation(line: 286, column: 4, scope: !1861)
!1866 = !DILocation(line: 291, column: 14, scope: !1861)
!1867 = !DILocation(line: 291, column: 16, scope: !1861)
!1868 = !DILocation(line: 291, column: 22, scope: !1861)
!1869 = !DILocalVariable(name: "buf", scope: !1861, file: !1187, line: 286, type: !133)
!1870 = !DILocalVariable(name: "sink$1", scope: !1861, file: !1187, line: 291, type: !27)
!1871 = !DILocation(line: 291, column: 4, scope: !1859)
!1872 = !DILocalVariable(name: "err", scope: !1861, file: !1187, line: 291, type: !100)
!1873 = !DILocation(line: 292, column: 11, scope: !1861)
!1874 = !DILocation(line: 295, column: 7, scope: !1861)
!1875 = !DILocation(line: 299, column: 3, scope: !1859)
!1876 = !DILocation(line: 299, column: 24, scope: !1859)
!1877 = !DILocation(line: 299, column: 5, scope: !1859)
!1878 = !DILocation(line: 300, column: 3, scope: !1859)
!1879 = !DILocation(line: 300, column: 5, scope: !1859)
!1880 = distinct !DISubprogram(name: "daemon.command_line_arguments..thunk10", scope: null, file: !1187, line: 283, type: !591, isLocal: true, isDefinition: true, scopeLine: 283, isOptimized: false, unit: !1, retainedNodes: !3)
!1881 = !DILocalVariable(name: "__go_thunk_parameter", arg: 1, scope: !1880, file: !1187, line: 283, type: !593)
!1882 = !DILocation(line: 283, column: 2, scope: !1880)
!1883 = distinct !DISubprogram(name: "daemon.command_line_arguments..thunk0", scope: null, file: !10, line: 127, type: !1884, isLocal: true, isDefinition: true, scopeLine: 127, isOptimized: false, unit: !1, retainedNodes: !3)
!1884 = !DISubroutineType(types: !1885)
!1885 = !{!21}
!1886 = !DILocation(line: 127, column: 1, scope: !1883)
!1887 = distinct !DISubprogram(name: "daemon.func3", scope: null, file: !1187, line: 271, type: !1888, isLocal: true, isDefinition: true, scopeLine: 271, isOptimized: false, unit: !1, retainedNodes: !3)
!1888 = !DISubroutineType(types: !1889)
!1889 = !{!13, !133}
!1890 = !DILocalVariable(name: "data", arg: 1, scope: !1887, file: !1187, line: 271, type: !133)
!1891 = !DILocation(line: 271, column: 22, scope: !1887)
!1892 = !DILocation(line: 276, column: 4, scope: !1887)
!1893 = !DILocation(line: 276, column: 18, scope: !1887)
!1894 = !DILocation(line: 276, column: 5, scope: !1887)
!1895 = distinct !DISubprogram(name: "daemon.func1", scope: null, file: !1187, line: 366, type: !1446, isLocal: true, isDefinition: true, scopeLine: 366, isOptimized: false, unit: !1, retainedNodes: !3)
!1896 = !DILocalVariable(name: "$ret12", scope: !1895, file: !1187, line: 366, type: !14)
!1897 = !DILocation(line: 366, column: 18, scope: !1895)
!1898 = !DILocalVariable(name: "s", scope: !1899, file: !1187, line: 367, type: !14)
!1899 = distinct !DILexicalBlock(scope: !1895, file: !1187, line: 367, column: 5)
!1900 = !DILocation(line: 367, column: 9, scope: !1895)
!1901 = !DILocation(line: 367, column: 23, scope: !1899)
!1902 = !DILocation(line: 367, column: 24, scope: !1899)
!1903 = !DILocation(line: 367, column: 5, scope: !1899)
!1904 = !DILocation(line: 368, column: 6, scope: !1899)
!1905 = !DILocation(line: 370, column: 5, scope: !1895)
!1906 = distinct !DISubprogram(name: "daemon.func2", scope: null, file: !1187, line: 391, type: !383, isLocal: true, isDefinition: true, scopeLine: 391, isOptimized: false, unit: !1, retainedNodes: !3)
!1907 = !DILocation(line: 392, column: 17, scope: !1906)
!1908 = !DILocation(line: 398, column: 6, scope: !1906)
!1909 = !DILocation(line: 398, column: 8, scope: !1906)
!1910 = !DILocation(line: 392, column: 8, scope: !1906)
!1911 = !DILocation(line: 399, column: 3, scope: !1906)
!1912 = !DILocation(line: 399, column: 24, scope: !1906)
!1913 = !DILocation(line: 399, column: 5, scope: !1906)
!1914 = !DILocation(line: 400, column: 3, scope: !1906)
!1915 = !DILocation(line: 400, column: 5, scope: !1906)
!1916 = distinct !DISubprogram(name: "daemon.command_line_arguments..thunk11", scope: null, file: !1187, line: 391, type: !591, isLocal: true, isDefinition: true, scopeLine: 391, isOptimized: false, unit: !1, retainedNodes: !3)
!1917 = !DILocalVariable(name: "__go_thunk_parameter", arg: 1, scope: !1916, file: !1187, line: 391, type: !593)
!1918 = !DILocation(line: 391, column: 2, scope: !1916)
!1919 = distinct !DISubprogram(name: "daemon.func3", scope: null, file: !1187, line: 392, type: !1888, isLocal: true, isDefinition: true, scopeLine: 392, isOptimized: false, unit: !1, retainedNodes: !3)
!1920 = !DILocalVariable(name: "data", arg: 1, scope: !1919, file: !1187, line: 392, type: !133)
!1921 = !DILocation(line: 392, column: 22, scope: !1919)
!1922 = !DILocation(line: 397, column: 4, scope: !1919)
!1923 = !DILocation(line: 397, column: 30, scope: !1919)
!1924 = !DILocation(line: 397, column: 5, scope: !1919)
!1925 = distinct !DISubprogram(name: "daemon.command_line_arguments..import", linkageName: "command_line_arguments..import", scope: null, file: !10, line: 1, type: !383, isLocal: false, isDefinition: true, scopeLine: 1, isOptimized: false, unit: !1, retainedNodes: !3)
!1926 = !DILocation(line: 1, column: 1, scope: !1927)
!1927 = !DILexicalBlockFile(scope: !1925, file: !7, discriminator: 0)
	.text
	.file	"gomodule"

	.section ".go_export","e",@progbits
	.ascii "v2;\n"
	.ascii "package "
	.ascii "daemon"
	.ascii ";\n"
	.ascii "pkgpath "
	.ascii "command-line-arguments"
	.ascii ";\n"
	.ascii "import "
	.ascii "context"
	.ascii " "
	.ascii "context"
	.ascii " \""
	.ascii "context"
	.ascii "\";\n"
	.ascii "import "
	.ascii "tls"
	.ascii " "
	.ascii "crypto/tls"
	.ascii " \""
	.ascii "crypto/tls"
	.ascii "\";\n"
	.ascii "import "
	.ascii "gob"
	.ascii " "
	.ascii "encoding/gob"
	.ascii " \""
	.ascii "encoding/gob"
	.ascii "\";\n"
	.ascii "import "
	.ascii "fmt"
	.ascii " "
	.ascii "fmt"
	.ascii " \""
	.ascii "fmt"
	.ascii "\";\n"
	.ascii "import "
	.ascii "yamux"
	.ascii " "
	.ascii "github.com/spolu/warp/vendor/github.com/hashicorp/yamux"
	.ascii " \""
	.ascii "github.com/hashicorp/yamux"
	.ascii "\";\n"
	.ascii "import "
	.ascii "warp"
	.ascii " "
	.ascii "github.com/spolu/warp"
	.ascii " \""
	.ascii "github.com/spolu/warp"
	.ascii "\";\n"
	.ascii "import "
	.ascii "errors"
	.ascii " "
	.ascii "github.com/spolu/warp/lib/errors"
	.ascii " \""
	.ascii "github.com/spolu/warp/lib/errors"
	.ascii "\";\n"
	.ascii "import "
	.ascii "logging"
	.ascii " "
	.ascii "github.com/spolu/warp/lib/logging"
	.ascii " \""
	.ascii "github.com/spolu/warp/lib/logging"
	.ascii "\";\n"
	.ascii "import "
	.ascii "plex"
	.ascii " "
	.ascii "github.com/spolu/warp/lib/plex"
	.ascii " \""
	.ascii "github.com/spolu/warp/lib/plex"
	.ascii "\";\n"
	.ascii "import "
	.ascii "net"
	.ascii " "
	.ascii "net"
	.ascii " \""
	.ascii "net"
	.ascii "\";\n"
	.ascii "import "
	.ascii "sync"
	.ascii " "
	.ascii "sync"
	.ascii " \""
	.ascii "sync"
	.ascii "\";\n"
	.ascii "import "
	.ascii "time"
	.ascii " "
	.ascii "time"
	.ascii " \""
	.ascii "time"
	.ascii "\";\n"
	.ascii "init"
	.ascii " "
	.ascii "bufio"
	.ascii " "
	.ascii "bufio..import"
	.ascii " "
	.ascii "bytes"
	.ascii " "
	.ascii "bytes..import"
	.ascii " "
	.ascii "context"
	.ascii " "
	.ascii "context..import"
	.ascii " "
	.ascii "crypto"
	.ascii " "
	.ascii "crypto..import"
	.ascii " "
	.ascii "cipher"
	.ascii " "
	.ascii "crypto_cipher..import"
	.ascii " "
	.ascii "des"
	.ascii " "
	.ascii "crypto_des..import"
	.ascii " "
	.ascii "dsa"
	.ascii " "
	.ascii "crypto_dsa..import"
	.ascii " "
	.ascii "ecdsa"
	.ascii " "
	.ascii "crypto_ecdsa..import"
	.ascii " "
	.ascii "elliptic"
	.ascii " "
	.ascii "crypto_elliptic..import"
	.ascii " "
	.ascii "md5"
	.ascii " "
	.ascii "crypto_md5..import"
	.ascii " "
	.ascii "rand"
	.ascii " "
	.ascii "crypto_rand..import"
	.ascii " "
	.ascii "rsa"
	.ascii " "
	.ascii "crypto_rsa..import"
	.ascii " "
	.ascii "sha1"
	.ascii " "
	.ascii "crypto_sha1..import"
	.ascii " "
	.ascii "sha256"
	.ascii " "
	.ascii "crypto_sha256..import"
	.ascii " "
	.ascii "sha512"
	.ascii " "
	.ascii "crypto_sha512..import"
	.ascii " "
	.ascii "tls"
	.ascii " "
	.ascii "crypto_tls..import"
	.ascii " "
	.ascii "x509"
	.ascii " "
	.ascii "crypto_x509..import"
	.ascii " "
	.ascii "pkix"
	.ascii " "
	.ascii "crypto_x509_pkix..import"
	.ascii " "
	.ascii "asn1"
	.ascii " "
	.ascii "encoding_asn1..import"
	.ascii " "
	.ascii "base64"
	.ascii " "
	.ascii "encoding_base64..import"
	.ascii " "
	.ascii "binary"
	.ascii " "
	.ascii "encoding_binary..import"
	.ascii " "
	.ascii "gob"
	.ascii " "
	.ascii "encoding_gob..import"
	.ascii " "
	.ascii "hex"
	.ascii " "
	.ascii "encoding_hex..import"
	.ascii " "
	.ascii "pem"
	.ascii " "
	.ascii "encoding_pem..import"
	.ascii " "
	.ascii "fmt"
	.ascii " "
	.ascii "fmt..import"
	.ascii " "
	.ascii "warp"
	.ascii " "
	.ascii "github_com_spolu_warp..import"
	.ascii " "
	.ascii "logging"
	.ascii " "
	.ascii "github_com_spolu_warp_lib_logging..import"
	.ascii " "
	.ascii "yamux"
	.ascii " "
	.ascii "github_com_spolu_warp_vendor_github_com_hashicorp_yamux..import"
	.ascii " "
	.ascii "poll"
	.ascii " "
	.ascii "internal_poll..import"
	.ascii " "
	.ascii "testlog"
	.ascii " "
	.ascii "internal_testlog..import"
	.ascii " "
	.ascii "io"
	.ascii " "
	.ascii "io..import"
	.ascii " "
	.ascii "ioutil"
	.ascii " "
	.ascii "io_ioutil..import"
	.ascii " "
	.ascii "log"
	.ascii " "
	.ascii "log..import"
	.ascii " "
	.ascii "big"
	.ascii " "
	.ascii "math_big..import"
	.ascii " "
	.ascii "rand"
	.ascii " "
	.ascii "math_rand..import"
	.ascii " "
	.ascii "net"
	.ascii " "
	.ascii "net..import"
	.ascii " "
	.ascii "os"
	.ascii " "
	.ascii "os..import"
	.ascii " "
	.ascii "filepath"
	.ascii " "
	.ascii "path_filepath..import"
	.ascii " "
	.ascii "reflect"
	.ascii " "
	.ascii "reflect..import"
	.ascii " "
	.ascii "regexp"
	.ascii " "
	.ascii "regexp..import"
	.ascii " "
	.ascii "syntax"
	.ascii " "
	.ascii "regexp_syntax..import"
	.ascii " "
	.ascii "runtime"
	.ascii " "
	.ascii "runtime..import"
	.ascii " "
	.ascii "sys"
	.ascii " "
	.ascii "runtime_internal_sys..import"
	.ascii " "
	.ascii "strconv"
	.ascii " "
	.ascii "strconv..import"
	.ascii " "
	.ascii "sync"
	.ascii " "
	.ascii "sync..import"
	.ascii " "
	.ascii "syscall"
	.ascii " "
	.ascii "syscall..import"
	.ascii " "
	.ascii "time"
	.ascii " "
	.ascii "time..import"
	.ascii " "
	.ascii "unicode"
	.ascii " "
	.ascii "unicode..import"
	.ascii " "
	.ascii "chacha20poly1305"
	.ascii " "
	.ascii "vendor_golang_org_x_crypto_chacha20poly1305..import"
	.ascii " "
	.ascii "cryptobyte"
	.ascii " "
	.ascii "vendor_golang_org_x_crypto_cryptobyte..import"
	.ascii ";\n"
	.ascii "init_graph"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "41"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "44"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "47"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "41"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "44"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "47"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "24"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "41"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "43"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "44"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "45"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "46"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "47"
	.ascii " "
	.ascii "3"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "3"
	.ascii " "
	.ascii "41"
	.ascii " "
	.ascii "3"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "3"
	.ascii " "
	.ascii "43"
	.ascii " "
	.ascii "3"
	.ascii " "
	.ascii "44"
	.ascii " "
	.ascii "4"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "4"
	.ascii " "
	.ascii "41"
	.ascii " "
	.ascii "4"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "4"
	.ascii " "
	.ascii "44"
	.ascii " "
	.ascii "5"
	.ascii " "
	.ascii "4"
	.ascii " "
	.ascii "5"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "5"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "5"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "5"
	.ascii " "
	.ascii "41"
	.ascii " "
	.ascii "5"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "5"
	.ascii " "
	.ascii "43"
	.ascii " "
	.ascii "5"
	.ascii " "
	.ascii "44"
	.ascii " "
	.ascii "5"
	.ascii " "
	.ascii "47"
	.ascii " "
	.ascii "6"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "6"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "6"
	.ascii " "
	.ascii "24"
	.ascii " "
	.ascii "6"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "6"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "6"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "6"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "6"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "6"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "6"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "6"
	.ascii " "
	.ascii "41"
	.ascii " "
	.ascii "6"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "6"
	.ascii " "
	.ascii "43"
	.ascii " "
	.ascii "6"
	.ascii " "
	.ascii "44"
	.ascii " "
	.ascii "6"
	.ascii " "
	.ascii "45"
	.ascii " "
	.ascii "6"
	.ascii " "
	.ascii "46"
	.ascii " "
	.ascii "6"
	.ascii " "
	.ascii "47"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "3"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "4"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "8"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "14"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "24"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "41"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "43"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "44"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "45"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "46"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "47"
	.ascii " "
	.ascii "8"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "8"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "8"
	.ascii " "
	.ascii "24"
	.ascii " "
	.ascii "8"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "8"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "8"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "8"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "8"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "8"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "8"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "8"
	.ascii " "
	.ascii "41"
	.ascii " "
	.ascii "8"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "8"
	.ascii " "
	.ascii "43"
	.ascii " "
	.ascii "8"
	.ascii " "
	.ascii "44"
	.ascii " "
	.ascii "8"
	.ascii " "
	.ascii "45"
	.ascii " "
	.ascii "8"
	.ascii " "
	.ascii "46"
	.ascii " "
	.ascii "8"
	.ascii " "
	.ascii "47"
	.ascii " "
	.ascii "9"
	.ascii " "
	.ascii "3"
	.ascii " "
	.ascii "9"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "9"
	.ascii " "
	.ascii "41"
	.ascii " "
	.ascii "9"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "9"
	.ascii " "
	.ascii "43"
	.ascii " "
	.ascii "9"
	.ascii " "
	.ascii "44"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "4"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "24"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "41"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "43"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "44"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "45"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "46"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "47"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "3"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "4"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "24"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "41"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "43"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "44"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "45"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "46"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "47"
	.ascii " "
	.ascii "12"
	.ascii " "
	.ascii "3"
	.ascii " "
	.ascii "12"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "12"
	.ascii " "
	.ascii "41"
	.ascii " "
	.ascii "12"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "12"
	.ascii " "
	.ascii "43"
	.ascii " "
	.ascii "12"
	.ascii " "
	.ascii "44"
	.ascii " "
	.ascii "13"
	.ascii " "
	.ascii "3"
	.ascii " "
	.ascii "13"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "13"
	.ascii " "
	.ascii "41"
	.ascii " "
	.ascii "13"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "13"
	.ascii " "
	.ascii "43"
	.ascii " "
	.ascii "13"
	.ascii " "
	.ascii "44"
	.ascii " "
	.ascii "14"
	.ascii " "
	.ascii "3"
	.ascii " "
	.ascii "14"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "14"
	.ascii " "
	.ascii "41"
	.ascii " "
	.ascii "14"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "14"
	.ascii " "
	.ascii "43"
	.ascii " "
	.ascii "14"
	.ascii " "
	.ascii "44"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "3"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "4"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "5"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "6"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "8"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "9"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "12"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "13"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "14"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "22"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "23"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "24"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "31"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "37"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "41"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "43"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "44"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "45"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "46"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "47"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "48"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "49"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "3"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "4"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "5"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "6"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "8"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "9"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "12"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "13"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "14"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "22"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "23"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "24"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "31"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "37"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "41"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "43"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "44"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "45"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "46"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "47"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "49"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "22"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "24"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "41"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "43"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "44"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "45"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "46"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "47"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "24"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "41"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "43"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "44"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "45"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "46"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "47"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "41"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "43"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "44"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "47"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "41"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "43"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "44"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "47"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "24"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "41"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "43"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "44"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "45"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "46"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "47"
	.ascii " "
	.ascii "22"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "22"
	.ascii " "
	.ascii "24"
	.ascii " "
	.ascii "22"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "22"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "22"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "22"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "22"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "22"
	.ascii " "
	.ascii "41"
	.ascii " "
	.ascii "22"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "22"
	.ascii " "
	.ascii "43"
	.ascii " "
	.ascii "22"
	.ascii " "
	.ascii "44"
	.ascii " "
	.ascii "22"
	.ascii " "
	.ascii "45"
	.ascii " "
	.ascii "22"
	.ascii " "
	.ascii "46"
	.ascii " "
	.ascii "22"
	.ascii " "
	.ascii "47"
	.ascii " "
	.ascii "23"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "23"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "23"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "23"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "23"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "23"
	.ascii " "
	.ascii "41"
	.ascii " "
	.ascii "23"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "23"
	.ascii " "
	.ascii "43"
	.ascii " "
	.ascii "23"
	.ascii " "
	.ascii "44"
	.ascii " "
	.ascii "23"
	.ascii " "
	.ascii "47"
	.ascii " "
	.ascii "24"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "24"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "24"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "24"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "24"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "24"
	.ascii " "
	.ascii "41"
	.ascii " "
	.ascii "24"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "24"
	.ascii " "
	.ascii "43"
	.ascii " "
	.ascii "24"
	.ascii " "
	.ascii "44"
	.ascii " "
	.ascii "24"
	.ascii " "
	.ascii "45"
	.ascii " "
	.ascii "24"
	.ascii " "
	.ascii "46"
	.ascii " "
	.ascii "24"
	.ascii " "
	.ascii "47"
	.ascii " "
	.ascii "25"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "25"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "25"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "25"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "25"
	.ascii " "
	.ascii "40"
	.ascii " "
	.ascii "25"
	.ascii " "
	.ascii "41"
	.ascii " "
	.ascii "25"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "25"
	.ascii " "
	.ascii "43"
	.ascii " "
	.ascii "25"
	.ascii " "
	.ascii "44"
	.ascii " "
	.ascii "25"
	.ascii " "
	.ascii "47"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "24"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "41"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "43"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "44"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "45"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "46"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "47"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "24"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "31"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "37"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "41"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "43"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "44"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "45"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "46"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "47"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "41"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "44"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "45"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "46"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "41"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "44"
	.ascii " "
	.ascii "31"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "31"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "31"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "31"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "31"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "31"
	.ascii " "
	.ascii "37"
	.ascii " "
	.ascii "31"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "31"
	.ascii " "
	.ascii "41"
	.ascii " "
	.ascii "31"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "31"
	.ascii " "
	.ascii "43"
	.ascii " "
	.ascii "31"
	.ascii " "
	.ascii "44"
	.ascii " "
	.ascii "31"
	.ascii " "
	.ascii "45"
	.ascii " "
	.ascii "31"
	.ascii " "
	.ascii "46"
	.ascii " "
	.ascii "31"
	.ascii " "
	.ascii "47"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "24"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "41"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "43"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "44"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "45"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "46"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "47"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "24"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "41"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "43"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "44"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "45"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "46"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "47"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "41"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "44"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "24"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "41"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "43"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "44"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "45"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "46"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "47"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "41"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "44"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "45"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "46"
	.ascii " "
	.ascii "37"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "37"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "37"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "37"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "37"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "37"
	.ascii " "
	.ascii "41"
	.ascii " "
	.ascii "37"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "37"
	.ascii " "
	.ascii "43"
	.ascii " "
	.ascii "37"
	.ascii " "
	.ascii "44"
	.ascii " "
	.ascii "37"
	.ascii " "
	.ascii "45"
	.ascii " "
	.ascii "37"
	.ascii " "
	.ascii "46"
	.ascii " "
	.ascii "37"
	.ascii " "
	.ascii "47"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "41"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "43"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "44"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "47"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "40"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "41"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "43"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "44"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "47"
	.ascii " "
	.ascii "40"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "40"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "40"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "40"
	.ascii " "
	.ascii "41"
	.ascii " "
	.ascii "40"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "40"
	.ascii " "
	.ascii "43"
	.ascii " "
	.ascii "40"
	.ascii " "
	.ascii "44"
	.ascii " "
	.ascii "40"
	.ascii " "
	.ascii "47"
	.ascii " "
	.ascii "41"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "43"
	.ascii " "
	.ascii "41"
	.ascii " "
	.ascii "43"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "44"
	.ascii " "
	.ascii "41"
	.ascii " "
	.ascii "44"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "45"
	.ascii " "
	.ascii "41"
	.ascii " "
	.ascii "45"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "45"
	.ascii " "
	.ascii "44"
	.ascii " "
	.ascii "46"
	.ascii " "
	.ascii "41"
	.ascii " "
	.ascii "46"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "46"
	.ascii " "
	.ascii "44"
	.ascii " "
	.ascii "46"
	.ascii " "
	.ascii "45"
	.ascii " "
	.ascii "48"
	.ascii " "
	.ascii "4"
	.ascii " "
	.ascii "48"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "48"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "48"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "48"
	.ascii " "
	.ascii "41"
	.ascii " "
	.ascii "48"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "48"
	.ascii " "
	.ascii "43"
	.ascii " "
	.ascii "48"
	.ascii " "
	.ascii "44"
	.ascii " "
	.ascii "48"
	.ascii " "
	.ascii "47"
	.ascii " "
	.ascii "49"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "49"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "49"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "49"
	.ascii " "
	.ascii "24"
	.ascii " "
	.ascii "49"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "49"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "49"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "49"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "49"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "49"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "49"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "49"
	.ascii " "
	.ascii "41"
	.ascii " "
	.ascii "49"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "49"
	.ascii " "
	.ascii "43"
	.ascii " "
	.ascii "49"
	.ascii " "
	.ascii "44"
	.ascii " "
	.ascii "49"
	.ascii " "
	.ascii "45"
	.ascii " "
	.ascii "49"
	.ascii " "
	.ascii "46"
	.ascii " "
	.ascii "49"
	.ascii " "
	.ascii "47"
	.ascii ";\n"
	.ascii "type "
	.ascii "<type 1 "
	.ascii "\"HostState\" "
	.ascii "<type 2 "
	.ascii "struct { "
	.ascii "? "
	.ascii "<type 3 "
	.ascii "\"UserState\" "
	.ascii "<type 4 "
	.ascii "struct { "
	.ascii ".command-line-arguments.token"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii ".command-line-arguments.username"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii ".command-line-arguments.mode"
	.ascii " "
	.ascii "<type 5 "
	.ascii "\"github.com/spolu/warp.Mode\" "
	.ascii "<type -8>"
	.ascii ">"
	.ascii "; "
	.ascii ".command-line-arguments.sessions"
	.ascii " "
	.ascii "<type 6 "
	.ascii "map ["
	.ascii "<type -16>"
	.ascii "] "
	.ascii "<type 7 "
	.ascii "*"
	.ascii "<type 8 "
	.ascii "\"Session\" "
	.ascii "<type 9 "
	.ascii "struct { "
	.ascii ".command-line-arguments.session"
	.ascii " "
	.ascii "<type 10 "
	.ascii "\"github.com/spolu/warp.Session\" "
	.ascii "<type 11 "
	.ascii "struct { "
	.ascii "Token"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "User"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "Secret"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".command-line-arguments.warp"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii ".command-line-arguments.sessionType"
	.ascii " "
	.ascii "<type 12 "
	.ascii "\"github.com/spolu/warp.SessionType\" "
	.ascii "<type -16>"
	.ascii ">"
	.ascii "; "
	.ascii ".command-line-arguments.username"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii ".command-line-arguments.conn"
	.ascii " "
	.ascii "<type 13 "
	.ascii "\"net.Conn\" "
	.ascii "<type 14 "
	.ascii "interface { "
	.ascii "Read"
	.ascii " ("
	.ascii "b"
	.ascii " "
	.ascii "<type 15 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "("
	.ascii "n"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii "; "
	.ascii "Write"
	.ascii " ("
	.ascii "b"
	.ascii " "
	.ascii "<type 16 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "("
	.ascii "n"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii "; "
	.ascii "Close"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii "; "
	.ascii "LocalAddr"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 17 "
	.ascii "\"net.Addr\" "
	.ascii "<type 18 "
	.ascii "interface { "
	.ascii "Network"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "String"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii "RemoteAddr"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 17>"
	.ascii "; "
	.ascii "SetDeadline"
	.ascii " ("
	.ascii "t"
	.ascii " "
	.ascii "<type 19 "
	.ascii "\"time.Time\" "
	.ascii "<type 20 "
	.ascii "struct { "
	.ascii ".time.wall"
	.ascii " "
	.ascii "<type -8>"
	.ascii "; "
	.ascii ".time.ext"
	.ascii " "
	.ascii "<type -4>"
	.ascii "; "
	.ascii ".time.loc"
	.ascii " "
	.ascii "<type 21 "
	.ascii "*"
	.ascii "<type 22 "
	.ascii "\"time.Location\" "
	.ascii "<type 23 "
	.ascii "struct { "
	.ascii ".time.name"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii ".time.zone"
	.ascii " "
	.ascii "<type 24 "
	.ascii "["
	.ascii "] "
	.ascii "<type 25 "
	.ascii "\".time.zone\" "
	.ascii "<type 26 "
	.ascii "struct { "
	.ascii ".time.name"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii ".time.offset"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii ".time.isDST"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".time.tx"
	.ascii " "
	.ascii "<type 27 "
	.ascii "["
	.ascii "] "
	.ascii "<type 28 "
	.ascii "\".time.zoneTrans\" "
	.ascii "<type 29 "
	.ascii "struct { "
	.ascii ".time.when"
	.ascii " "
	.ascii "<type -4>"
	.ascii "; "
	.ascii ".time.index"
	.ascii " "
	.ascii "<type -5>"
	.ascii "; "
	.ascii ".time.isstd"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii ".time.isutc"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".time.cacheStart"
	.ascii " "
	.ascii "<type -4>"
	.ascii "; "
	.ascii ".time.cacheEnd"
	.ascii " "
	.ascii "<type -4>"
	.ascii "; "
	.ascii ".time.cacheZone"
	.ascii " "
	.ascii "<type 30 "
	.ascii "*"
	.ascii "<type 25>"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "l"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 31 "
	.ascii "*"
	.ascii "<type 22>"
	.ascii ">"
	.ascii ") "
	.ascii ".time.lookupFirstZone"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "l"
	.ascii " "
	.ascii "<esc:0x22>"
	.ascii " "
	.ascii "<type 31>"
	.ascii ") "
	.ascii "String"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "l"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 31>"
	.ascii ") "
	.ascii ".time.lookupName"
	.ascii " ("
	.ascii "name"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "unix"
	.ascii " "
	.ascii "<type -4>"
	.ascii ")"
	.ascii " ("
	.ascii "offset"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "ok"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "l"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 31>"
	.ascii ") "
	.ascii ".time.firstZoneUsed"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "l"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 31>"
	.ascii ") "
	.ascii ".time.get"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 31>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "l"
	.ascii " "
	.ascii "<esc:0x32>"
	.ascii " "
	.ascii "<type 31>"
	.ascii ") "
	.ascii ".time.lookup"
	.ascii " ("
	.ascii "sec"
	.ascii " "
	.ascii "<type -4>"
	.ascii ")"
	.ascii " ("
	.ascii "name"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "offset"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "isDST"
	.ascii " "
	.ascii "<type -15>"
	.ascii ", "
	.ascii "start"
	.ascii " "
	.ascii "<type -4>"
	.ascii ", "
	.ascii "end"
	.ascii " "
	.ascii "<type -4>"
	.ascii ")"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 32 "
	.ascii "*"
	.ascii "<type 19>"
	.ascii ">"
	.ascii ") "
	.ascii "UnmarshalJSON"
	.ascii " ("
	.ascii "data"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 33 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 19>"
	.ascii ") "
	.ascii "GobEncode"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 34 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 32>"
	.ascii ") "
	.ascii ".time.setLoc"
	.ascii " ("
	.ascii "loc"
	.ascii " "
	.ascii "<type 21>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 32>"
	.ascii ") "
	.ascii ".time.addSec"
	.ascii " ("
	.ascii "d"
	.ascii " "
	.ascii "<type -4>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 32>"
	.ascii ") "
	.ascii ".time.unixSec"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -4>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 19>"
	.ascii ") "
	.ascii "String"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 19>"
	.ascii ") "
	.ascii "Before"
	.ascii " ("
	.ascii "u"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 19>"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 19>"
	.ascii ") "
	.ascii "Equal"
	.ascii " ("
	.ascii "u"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 19>"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 19>"
	.ascii ") "
	.ascii ".time.abs"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -8>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 32>"
	.ascii ") "
	.ascii ".time.stripMono"
	.ascii " ("
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 19>"
	.ascii ") "
	.ascii "Minute"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 32>"
	.ascii ") "
	.ascii "GobDecode"
	.ascii " ("
	.ascii "data"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 35 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 19>"
	.ascii ") "
	.ascii "Unix"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -4>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 19>"
	.ascii ") "
	.ascii "After"
	.ascii " ("
	.ascii "u"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 19>"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 19>"
	.ascii ") "
	.ascii "Day"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 32>"
	.ascii ") "
	.ascii ".time.sec"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -4>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 32>"
	.ascii ") "
	.ascii "UnmarshalText"
	.ascii " ("
	.ascii "data"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 36 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 19>"
	.ascii ") "
	.ascii "Weekday"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 37 "
	.ascii "\"time.Weekday\" "
	.ascii "<type -11>"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "d"
	.ascii " "
	.ascii "<type 37>"
	.ascii ") "
	.ascii "String"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii ">"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 19>"
	.ascii ") "
	.ascii "In"
	.ascii " ("
	.ascii "loc"
	.ascii " "
	.ascii "<type 21>"
	.ascii ")"
	.ascii " "
	.ascii "<type 19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x32>"
	.ascii " "
	.ascii "<type 19>"
	.ascii ") "
	.ascii "Zone"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "name"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "offset"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 32>"
	.ascii ") "
	.ascii ".time.setMono"
	.ascii " ("
	.ascii "m"
	.ascii " "
	.ascii "<type -4>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x32>"
	.ascii " "
	.ascii "<type 19>"
	.ascii ") "
	.ascii ".time.locabs"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "name"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "offset"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "abs"
	.ascii " "
	.ascii "<type -8>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 19>"
	.ascii ") "
	.ascii "Round"
	.ascii " ("
	.ascii "d"
	.ascii " "
	.ascii "<type 38 "
	.ascii "\"time.Duration\" "
	.ascii "<type -4>"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "d"
	.ascii " "
	.ascii "<type 38>"
	.ascii ") "
	.ascii "Minutes"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -10>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "d"
	.ascii " "
	.ascii "<type 38>"
	.ascii ") "
	.ascii "Round"
	.ascii " ("
	.ascii "m"
	.ascii " "
	.ascii "<type 38>"
	.ascii ")"
	.ascii " "
	.ascii "<type 38>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "d"
	.ascii " "
	.ascii "<type 38>"
	.ascii ") "
	.ascii "String"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "d"
	.ascii " "
	.ascii "<type 38>"
	.ascii ") "
	.ascii "Seconds"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -10>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "d"
	.ascii " "
	.ascii "<type 38>"
	.ascii ") "
	.ascii "Hours"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -10>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "d"
	.ascii " "
	.ascii "<type 38>"
	.ascii ") "
	.ascii "Truncate"
	.ascii " ("
	.ascii "m"
	.ascii " "
	.ascii "<type 38>"
	.ascii ")"
	.ascii " "
	.ascii "<type 38>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "d"
	.ascii " "
	.ascii "<type 38>"
	.ascii ") "
	.ascii "Nanoseconds"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -4>"
	.ascii ";\n"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type 19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 19>"
	.ascii ") "
	.ascii "Date"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "year"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "month"
	.ascii " "
	.ascii "<type 39 "
	.ascii "\"time.Month\" "
	.ascii "<type -11>"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "m"
	.ascii " "
	.ascii "<type 39>"
	.ascii ") "
	.ascii "String"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii ">"
	.ascii ", "
	.ascii "day"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 19>"
	.ascii ") "
	.ascii "MarshalJSON"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 40 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 19>"
	.ascii ") "
	.ascii "MarshalText"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 41 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 19>"
	.ascii ") "
	.ascii "IsZero"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 19>"
	.ascii ") "
	.ascii "Format"
	.ascii " ("
	.ascii "layout"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 19>"
	.ascii ") "
	.ascii "Truncate"
	.ascii " ("
	.ascii "d"
	.ascii " "
	.ascii "<type 38>"
	.ascii ")"
	.ascii " "
	.ascii "<type 19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 19>"
	.ascii ") "
	.ascii "Year"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 19>"
	.ascii ") "
	.ascii "UTC"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 19>"
	.ascii ") "
	.ascii ".time.date"
	.ascii " ("
	.ascii "full"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii " ("
	.ascii "year"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "month"
	.ascii " "
	.ascii "<type 39>"
	.ascii ", "
	.ascii "day"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "yday"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 32>"
	.ascii ") "
	.ascii ".time.nsec"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -3>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<type 19>"
	.ascii ") "
	.ascii "AddDate"
	.ascii " ("
	.ascii "years"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "months"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "days"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " "
	.ascii "<type 19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 19>"
	.ascii ") "
	.ascii "Month"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 39>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 19>"
	.ascii ") "
	.ascii "Second"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 32>"
	.ascii ") "
	.ascii ".time.mono"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -4>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 19>"
	.ascii ") "
	.ascii "AppendFormat"
	.ascii " ("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 42 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ", "
	.ascii "layout"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " "
	.ascii "<type 43 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 19>"
	.ascii ") "
	.ascii "ISOWeek"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "year"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "week"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 19>"
	.ascii ") "
	.ascii "Clock"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "hour"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "min"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "sec"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 19>"
	.ascii ") "
	.ascii "Hour"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 19>"
	.ascii ") "
	.ascii "Nanosecond"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 19>"
	.ascii ") "
	.ascii "MarshalBinary"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 44 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 19>"
	.ascii ") "
	.ascii "UnixNano"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -4>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 19>"
	.ascii ") "
	.ascii "YearDay"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 32>"
	.ascii ") "
	.ascii "UnmarshalBinary"
	.ascii " ("
	.ascii "data"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 45 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 19>"
	.ascii ") "
	.ascii "Add"
	.ascii " ("
	.ascii "d"
	.ascii " "
	.ascii "<type 38>"
	.ascii ")"
	.ascii " "
	.ascii "<type 19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 19>"
	.ascii ") "
	.ascii "Sub"
	.ascii " ("
	.ascii "u"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 19>"
	.ascii ")"
	.ascii " "
	.ascii "<type 38>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 19>"
	.ascii ") "
	.ascii "Local"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 19>"
	.ascii ") "
	.ascii "Location"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 21>"
	.ascii ";\n"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii "; "
	.ascii "SetReadDeadline"
	.ascii " ("
	.ascii "t"
	.ascii " "
	.ascii "<type 19>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii "; "
	.ascii "SetWriteDeadline"
	.ascii " ("
	.ascii "t"
	.ascii " "
	.ascii "<type 19>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".command-line-arguments.mux"
	.ascii " "
	.ascii "<type 46 "
	.ascii "*"
	.ascii "<type 47 "
	.ascii "\"github.com/spolu/warp/vendor/github.com/hashicorp/yamux.Session\" "
	.ascii "<type 48 "
	.ascii "struct { "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.remoteGoAway"
	.ascii " "
	.ascii "<type -3>"
	.ascii "; "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.localGoAway"
	.ascii " "
	.ascii "<type -3>"
	.ascii "; "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.nextStreamID"
	.ascii " "
	.ascii "<type -7>"
	.ascii "; "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.config"
	.ascii " "
	.ascii "<type 49 "
	.ascii "*"
	.ascii "<type 50 "
	.ascii "\"github.com/spolu/warp/vendor/github.com/hashicorp/yamux.Config\" "
	.ascii "<type 51 "
	.ascii "struct { "
	.ascii "AcceptBacklog"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii "EnableKeepAlive"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii "KeepAliveInterval"
	.ascii " "
	.ascii "<type 38>"
	.ascii "; "
	.ascii "ConnectionWriteTimeout"
	.ascii " "
	.ascii "<type 38>"
	.ascii "; "
	.ascii "MaxStreamWindowSize"
	.ascii " "
	.ascii "<type -7>"
	.ascii "; "
	.ascii "LogOutput"
	.ascii " "
	.ascii "<type 52 "
	.ascii "\"io.Writer\" "
	.ascii "\""
	.ascii "io"
	.ascii "\" "
	.ascii "<type 53 "
	.ascii "interface { "
	.ascii "Write"
	.ascii " ("
	.ascii "p"
	.ascii " "
	.ascii "<type 54 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "("
	.ascii "n"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.logger"
	.ascii " "
	.ascii "<type 55 "
	.ascii "*"
	.ascii "<type 56 "
	.ascii "\"log.Logger\" "
	.ascii "\""
	.ascii "log"
	.ascii "\" "
	.ascii "<type 57 "
	.ascii "struct { "
	.ascii ".log.mu"
	.ascii " "
	.ascii "<type 58 "
	.ascii "\"sync.Mutex\" "
	.ascii "<type 59 "
	.ascii "struct { "
	.ascii ".sync.state"
	.ascii " "
	.ascii "<type -3>"
	.ascii "; "
	.ascii ".sync.sema"
	.ascii " "
	.ascii "<type -7>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "m"
	.ascii " "
	.ascii "<type 60 "
	.ascii "*"
	.ascii "<type 58>"
	.ascii ">"
	.ascii ") "
	.ascii "Unlock"
	.ascii " ("
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "m"
	.ascii " "
	.ascii "<type 60>"
	.ascii ") "
	.ascii "Lock"
	.ascii " ("
	.ascii ")"
	.ascii ";\n"
	.ascii ">"
	.ascii "; "
	.ascii ".log.prefix"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii ".log.flag"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii ".log.out"
	.ascii " "
	.ascii "<type 52>"
	.ascii "; "
	.ascii ".log.buf"
	.ascii " "
	.ascii "<type 61 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "l"
	.ascii " "
	.ascii "<type 62 "
	.ascii "*"
	.ascii "<type 56>"
	.ascii ">"
	.ascii ") "
	.ascii "Fatalf"
	.ascii " ("
	.ascii "format"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "..."
	.ascii "<type 63 "
	.ascii "interface { "
	.ascii "}"
	.ascii ">"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "l"
	.ascii " "
	.ascii "<type 62>"
	.ascii ") "
	.ascii "Fatal"
	.ascii " ("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "..."
	.ascii "<type 64 "
	.ascii "interface { "
	.ascii "}"
	.ascii ">"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "l"
	.ascii " "
	.ascii "<type 62>"
	.ascii ") "
	.ascii "Panicln"
	.ascii " ("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "..."
	.ascii "<type 65 "
	.ascii "interface { "
	.ascii "}"
	.ascii ">"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "l"
	.ascii " "
	.ascii "<type 62>"
	.ascii ") "
	.ascii "Println"
	.ascii " ("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "..."
	.ascii "<type 66 "
	.ascii "interface { "
	.ascii "}"
	.ascii ">"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "l"
	.ascii " "
	.ascii "<type 62>"
	.ascii ") "
	.ascii "Fatalln"
	.ascii " ("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "..."
	.ascii "<type 67 "
	.ascii "interface { "
	.ascii "}"
	.ascii ">"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "l"
	.ascii " "
	.ascii "<type 62>"
	.ascii ") "
	.ascii "Panicf"
	.ascii " ("
	.ascii "format"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "..."
	.ascii "<type 68 "
	.ascii "interface { "
	.ascii "}"
	.ascii ">"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "l"
	.ascii " "
	.ascii "<type 62>"
	.ascii ") "
	.ascii "SetFlags"
	.ascii " ("
	.ascii "flag"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "l"
	.ascii " "
	.ascii "<type 62>"
	.ascii ") "
	.ascii "SetPrefix"
	.ascii " ("
	.ascii "prefix"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "l"
	.ascii " "
	.ascii "<type 62>"
	.ascii ") "
	.ascii "SetOutput"
	.ascii " ("
	.ascii "w"
	.ascii " "
	.ascii "<type 52>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "l"
	.ascii " "
	.ascii "<type 62>"
	.ascii ") "
	.ascii "Panic"
	.ascii " ("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "..."
	.ascii "<type 69 "
	.ascii "interface { "
	.ascii "}"
	.ascii ">"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "l"
	.ascii " "
	.ascii "<type 62>"
	.ascii ") "
	.ascii "Flags"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "l"
	.ascii " "
	.ascii "<type 62>"
	.ascii ") "
	.ascii "Printf"
	.ascii " ("
	.ascii "format"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "..."
	.ascii "<type 70 "
	.ascii "interface { "
	.ascii "}"
	.ascii ">"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "l"
	.ascii " "
	.ascii "<type 62>"
	.ascii ") "
	.ascii "Prefix"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "l"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 62>"
	.ascii ") "
	.ascii ".log.formatHeader"
	.ascii " ("
	.ascii "buf"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 71 "
	.ascii "*"
	.ascii "<type 72 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ">"
	.ascii ", "
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 19>"
	.ascii ", "
	.ascii "file"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "line"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "l"
	.ascii " "
	.ascii "<type 62>"
	.ascii ") "
	.ascii "Print"
	.ascii " ("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "..."
	.ascii "<type 73 "
	.ascii "interface { "
	.ascii "}"
	.ascii ">"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "l"
	.ascii " "
	.ascii "<type 62>"
	.ascii ") "
	.ascii "Output"
	.ascii " ("
	.ascii "calldepth"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "s"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.conn"
	.ascii " "
	.ascii "<type 74 "
	.ascii "\"io.ReadWriteCloser\" "
	.ascii "<type 75 "
	.ascii "interface { "
	.ascii "? "
	.ascii "<type 76 "
	.ascii "\"io.Reader\" "
	.ascii "<type 77 "
	.ascii "interface { "
	.ascii "Read"
	.ascii " ("
	.ascii "p"
	.ascii " "
	.ascii "<type 78 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "("
	.ascii "n"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii "? "
	.ascii "<type 52>"
	.ascii "; "
	.ascii "? "
	.ascii "<type 79 "
	.ascii "\"io.Closer\" "
	.ascii "<type 80 "
	.ascii "interface { "
	.ascii "Close"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.bufRead"
	.ascii " "
	.ascii "<type 81 "
	.ascii "*"
	.ascii "<type 82 "
	.ascii "\"bufio.Reader\" "
	.ascii "\""
	.ascii "bufio"
	.ascii "\" "
	.ascii "<type 83 "
	.ascii "struct { "
	.ascii ".bufio.buf"
	.ascii " "
	.ascii "<type 84 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii "; "
	.ascii ".bufio.rd"
	.ascii " "
	.ascii "<type 76>"
	.ascii "; "
	.ascii ".bufio.r"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii ".bufio.w"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii ".bufio.err"
	.ascii " "
	.ascii "<type -19>"
	.ascii "; "
	.ascii ".bufio.lastByte"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii ".bufio.lastRuneSize"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x10a>"
	.ascii " "
	.ascii "<type 85 "
	.ascii "*"
	.ascii "<type 82>"
	.ascii ">"
	.ascii ") "
	.ascii "ReadByte"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type -20>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x10a>"
	.ascii " "
	.ascii "<type 85>"
	.ascii ") "
	.ascii "Read"
	.ascii " ("
	.ascii "p"
	.ascii " "
	.ascii "<type 86 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ")"
	.ascii " ("
	.ascii "n"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 85>"
	.ascii ") "
	.ascii ".bufio.fill"
	.ascii " ("
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 85>"
	.ascii ") "
	.ascii ".bufio.writeBuf"
	.ascii " ("
	.ascii "w"
	.ascii " "
	.ascii "<type 52>"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type -4>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x10a>"
	.ascii " "
	.ascii "<type 85>"
	.ascii ") "
	.ascii "Discard"
	.ascii " ("
	.ascii "n"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " ("
	.ascii "discarded"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x10a>"
	.ascii " "
	.ascii "<type 85>"
	.ascii ") "
	.ascii "ReadBytes"
	.ascii " ("
	.ascii "delim"
	.ascii " "
	.ascii "<type -20>"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 87 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x12a>"
	.ascii " "
	.ascii "<type 85>"
	.ascii ") "
	.ascii "Peek"
	.ascii " ("
	.ascii "n"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 88 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x80a>"
	.ascii " "
	.ascii "<type 85>"
	.ascii ") "
	.ascii "ReadRune"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "r"
	.ascii " "
	.ascii "<type -21>"
	.ascii ", "
	.ascii "size"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 85>"
	.ascii ") "
	.ascii "Buffered"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x10a>"
	.ascii " "
	.ascii "<type 85>"
	.ascii ") "
	.ascii "ReadString"
	.ascii " ("
	.ascii "delim"
	.ascii " "
	.ascii "<type -20>"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x82a>"
	.ascii " "
	.ascii "<type 85>"
	.ascii ") "
	.ascii "ReadLine"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "line"
	.ascii " "
	.ascii "<type 89 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ", "
	.ascii "isPrefix"
	.ascii " "
	.ascii "<type -15>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x10a>"
	.ascii " "
	.ascii "<type 85>"
	.ascii ") "
	.ascii "WriteTo"
	.ascii " ("
	.ascii "w"
	.ascii " "
	.ascii "<type 52>"
	.ascii ")"
	.ascii " ("
	.ascii "n"
	.ascii " "
	.ascii "<type -4>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 85>"
	.ascii ") "
	.ascii "UnreadByte"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "r"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 85>"
	.ascii ") "
	.ascii "Size"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x12a>"
	.ascii " "
	.ascii "<type 85>"
	.ascii ") "
	.ascii "ReadSlice"
	.ascii " ("
	.ascii "delim"
	.ascii " "
	.ascii "<type -20>"
	.ascii ")"
	.ascii " ("
	.ascii "line"
	.ascii " "
	.ascii "<type 90 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 85>"
	.ascii ") "
	.ascii "UnreadRune"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x22>"
	.ascii " "
	.ascii "<type 85>"
	.ascii ") "
	.ascii ".bufio.readErr"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 85>"
	.ascii ") "
	.ascii ".bufio.reset"
	.ascii " ("
	.ascii "buf"
	.ascii " "
	.ascii "<type 91 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ", "
	.ascii "r"
	.ascii " "
	.ascii "<type 76>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 85>"
	.ascii ") "
	.ascii "Reset"
	.ascii " ("
	.ascii "r"
	.ascii " "
	.ascii "<type 76>"
	.ascii ")"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.pings"
	.ascii " "
	.ascii "<type 92 "
	.ascii "map ["
	.ascii "<type -7>"
	.ascii "] "
	.ascii "<type 93 "
	.ascii "chan "
	.ascii "<type 94 "
	.ascii "struct { "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.pingID"
	.ascii " "
	.ascii "<type -7>"
	.ascii "; "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.pingLock"
	.ascii " "
	.ascii "<type 58>"
	.ascii "; "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.streams"
	.ascii " "
	.ascii "<type 95 "
	.ascii "map ["
	.ascii "<type -7>"
	.ascii "] "
	.ascii "<type 96 "
	.ascii "*"
	.ascii "<type 97 "
	.ascii "\"github.com/spolu/warp/vendor/github.com/hashicorp/yamux.Stream\" "
	.ascii "<type 98 "
	.ascii "struct { "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.recvWindow"
	.ascii " "
	.ascii "<type -7>"
	.ascii "; "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.sendWindow"
	.ascii " "
	.ascii "<type -7>"
	.ascii "; "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.id"
	.ascii " "
	.ascii "<type -7>"
	.ascii "; "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.session"
	.ascii " "
	.ascii "<type 99 "
	.ascii "*"
	.ascii "<type 47>"
	.ascii ">"
	.ascii "; "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.state"
	.ascii " "
	.ascii "<type 100 "
	.ascii "\".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.streamState\" "
	.ascii "<type -11>"
	.ascii ">"
	.ascii "; "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.stateLock"
	.ascii " "
	.ascii "<type 58>"
	.ascii "; "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.recvBuf"
	.ascii " "
	.ascii "<type 101 "
	.ascii "*"
	.ascii "<type 102 "
	.ascii "\"bytes.Buffer\" "
	.ascii "\""
	.ascii "bytes"
	.ascii "\" "
	.ascii "<type 103 "
	.ascii "struct { "
	.ascii ".bytes.buf"
	.ascii " "
	.ascii "<type 104 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii "; "
	.ascii ".bytes.off"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii ".bytes.bootstrap"
	.ascii " "
	.ascii "<type 105 "
	.ascii "["
	.ascii "64"
	.ascii " "
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii "; "
	.ascii ".bytes.lastRead"
	.ascii " "
	.ascii "<type 106 "
	.ascii "\".bytes.readOp\" "
	.ascii "<type -1>"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 107 "
	.ascii "*"
	.ascii "<type 102>"
	.ascii ">"
	.ascii ") "
	.ascii "UnreadByte"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 107>"
	.ascii ") "
	.ascii "ReadRune"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "r"
	.ascii " "
	.ascii "<type -21>"
	.ascii ", "
	.ascii "size"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 107>"
	.ascii ") "
	.ascii ".bytes.empty"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 107>"
	.ascii ") "
	.ascii "Len"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 107>"
	.ascii ") "
	.ascii "String"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x22>"
	.ascii " "
	.ascii "<type 107>"
	.ascii ") "
	.ascii "Bytes"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 108 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<type 107>"
	.ascii ") "
	.ascii "ReadFrom"
	.ascii " ("
	.ascii "r"
	.ascii " "
	.ascii "<type 76>"
	.ascii ")"
	.ascii " ("
	.ascii "n"
	.ascii " "
	.ascii "<type -4>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 107>"
	.ascii ") "
	.ascii ".bytes.tryGrowByReslice"
	.ascii " ("
	.ascii "n"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 107>"
	.ascii ") "
	.ascii "Cap"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 107>"
	.ascii ") "
	.ascii "Reset"
	.ascii " ("
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 107>"
	.ascii ") "
	.ascii "ReadBytes"
	.ascii " ("
	.ascii "delim"
	.ascii " "
	.ascii "<type -20>"
	.ascii ")"
	.ascii " ("
	.ascii "line"
	.ascii " "
	.ascii "<type 109 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<type 107>"
	.ascii ") "
	.ascii "Grow"
	.ascii " ("
	.ascii "n"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 107>"
	.ascii ") "
	.ascii "Truncate"
	.ascii " ("
	.ascii "n"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x22>"
	.ascii " "
	.ascii "<type 107>"
	.ascii ") "
	.ascii "Next"
	.ascii " ("
	.ascii "n"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " "
	.ascii "<type 110 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<type 107>"
	.ascii ") "
	.ascii "Write"
	.ascii " ("
	.ascii "p"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 111 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ")"
	.ascii " ("
	.ascii "n"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 107>"
	.ascii ") "
	.ascii "WriteTo"
	.ascii " ("
	.ascii "w"
	.ascii " "
	.ascii "<type 52>"
	.ascii ")"
	.ascii " ("
	.ascii "n"
	.ascii " "
	.ascii "<type -4>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<type 107>"
	.ascii ") "
	.ascii "WriteString"
	.ascii " ("
	.ascii "s"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " ("
	.ascii "n"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<type 107>"
	.ascii ") "
	.ascii "WriteByte"
	.ascii " ("
	.ascii "c"
	.ascii " "
	.ascii "<type -20>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 107>"
	.ascii ") "
	.ascii "ReadString"
	.ascii " ("
	.ascii "delim"
	.ascii " "
	.ascii "<type -20>"
	.ascii ")"
	.ascii " ("
	.ascii "line"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<type 107>"
	.ascii ") "
	.ascii "WriteRune"
	.ascii " ("
	.ascii "r"
	.ascii " "
	.ascii "<type -21>"
	.ascii ")"
	.ascii " ("
	.ascii "n"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 107>"
	.ascii ") "
	.ascii "ReadByte"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type -20>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x22>"
	.ascii " "
	.ascii "<type 107>"
	.ascii ") "
	.ascii ".bytes.readSlice"
	.ascii " ("
	.ascii "delim"
	.ascii " "
	.ascii "<type -20>"
	.ascii ")"
	.ascii " ("
	.ascii "line"
	.ascii " "
	.ascii "<type 112 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 107>"
	.ascii ") "
	.ascii "UnreadRune"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<type 107>"
	.ascii ") "
	.ascii ".bytes.grow"
	.ascii " ("
	.ascii "n"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 107>"
	.ascii ") "
	.ascii "Read"
	.ascii " ("
	.ascii "p"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 113 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ")"
	.ascii " ("
	.ascii "n"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.recvLock"
	.ascii " "
	.ascii "<type 58>"
	.ascii "; "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.controlHdr"
	.ascii " "
	.ascii "<type 114 "
	.ascii "\".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.header\" "
	.ascii "<type 115 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "h"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 114>"
	.ascii ") "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.encode"
	.ascii " ("
	.ascii "msgType"
	.ascii " "
	.ascii "<type -5>"
	.ascii ", "
	.ascii "flags"
	.ascii " "
	.ascii "<type -6>"
	.ascii ", "
	.ascii "streamID"
	.ascii " "
	.ascii "<type -7>"
	.ascii ", "
	.ascii "length"
	.ascii " "
	.ascii "<type -7>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "h"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 114>"
	.ascii ") "
	.ascii "String"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "h"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 114>"
	.ascii ") "
	.ascii "Length"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -7>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "h"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 114>"
	.ascii ") "
	.ascii "Version"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -5>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "h"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 114>"
	.ascii ") "
	.ascii "Flags"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -6>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "h"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 114>"
	.ascii ") "
	.ascii "MsgType"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -5>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "h"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 114>"
	.ascii ") "
	.ascii "StreamID"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -7>"
	.ascii ";\n"
	.ascii ">"
	.ascii "; "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.controlErr"
	.ascii " "
	.ascii "<type 116 "
	.ascii "chan "
	.ascii "<type -19>"
	.ascii ">"
	.ascii "; "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.controlHdrLock"
	.ascii " "
	.ascii "<type 58>"
	.ascii "; "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.sendHdr"
	.ascii " "
	.ascii "<type 114>"
	.ascii "; "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.sendErr"
	.ascii " "
	.ascii "<type 117 "
	.ascii "chan "
	.ascii "<type -19>"
	.ascii ">"
	.ascii "; "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.sendLock"
	.ascii " "
	.ascii "<type 58>"
	.ascii "; "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.recvNotifyCh"
	.ascii " "
	.ascii "<type 118 "
	.ascii "chan "
	.ascii "<type 119 "
	.ascii "struct { "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.sendNotifyCh"
	.ascii " "
	.ascii "<type 120 "
	.ascii "chan "
	.ascii "<type 121 "
	.ascii "struct { "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.readDeadline"
	.ascii " "
	.ascii "<type 19>"
	.ascii "; "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.writeDeadline"
	.ascii " "
	.ascii "<type 19>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<type 122 "
	.ascii "*"
	.ascii "<type 97>"
	.ascii ">"
	.ascii ") "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.readData"
	.ascii " ("
	.ascii "hdr"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 114>"
	.ascii ", "
	.ascii "flags"
	.ascii " "
	.ascii "<type -6>"
	.ascii ", "
	.ascii "conn"
	.ascii " "
	.ascii "<type 76>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<type 122>"
	.ascii ") "
	.ascii "Shrink"
	.ascii " ("
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 122>"
	.ascii ") "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.notifyWaiting"
	.ascii " ("
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 122>"
	.ascii ") "
	.ascii "SetReadDeadline"
	.ascii " ("
	.ascii "t"
	.ascii " "
	.ascii "<type 19>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<type 122>"
	.ascii ") "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.processFlags"
	.ascii " ("
	.ascii "flags"
	.ascii " "
	.ascii "<type -6>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 122>"
	.ascii ") "
	.ascii "StreamID"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -7>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 122>"
	.ascii ") "
	.ascii "LocalAddr"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 17>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<type 122>"
	.ascii ") "
	.ascii "Close"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<type 122>"
	.ascii ") "
	.ascii "Read"
	.ascii " ("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 123 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ")"
	.ascii " ("
	.ascii "n"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<type 122>"
	.ascii ") "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.sendFlags"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -6>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 122>"
	.ascii ") "
	.ascii "SetDeadline"
	.ascii " ("
	.ascii "t"
	.ascii " "
	.ascii "<type 19>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<type 122>"
	.ascii ") "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.sendClose"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<esc:0x22>"
	.ascii " "
	.ascii "<type 122>"
	.ascii ") "
	.ascii "Session"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 99>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 122>"
	.ascii ") "
	.ascii "RemoteAddr"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 17>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<type 122>"
	.ascii ") "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.forceClose"
	.ascii " ("
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<type 122>"
	.ascii ") "
	.ascii "Write"
	.ascii " ("
	.ascii "b"
	.ascii " "
	.ascii "<type 124 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ")"
	.ascii " ("
	.ascii "n"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<type 122>"
	.ascii ") "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.incrSendWindow"
	.ascii " ("
	.ascii "hdr"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 114>"
	.ascii ", "
	.ascii "flags"
	.ascii " "
	.ascii "<type -6>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<type 122>"
	.ascii ") "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.sendWindowUpdate"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 122>"
	.ascii ") "
	.ascii "SetWriteDeadline"
	.ascii " ("
	.ascii "t"
	.ascii " "
	.ascii "<type 19>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<type 122>"
	.ascii ") "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.write"
	.ascii " ("
	.ascii "b"
	.ascii " "
	.ascii "<type 125 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ")"
	.ascii " ("
	.ascii "n"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.inflight"
	.ascii " "
	.ascii "<type 126 "
	.ascii "map ["
	.ascii "<type -7>"
	.ascii "] "
	.ascii "<type 127 "
	.ascii "struct { "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.streamLock"
	.ascii " "
	.ascii "<type 58>"
	.ascii "; "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.synCh"
	.ascii " "
	.ascii "<type 128 "
	.ascii "chan "
	.ascii "<type 129 "
	.ascii "struct { "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.acceptCh"
	.ascii " "
	.ascii "<type 130 "
	.ascii "chan "
	.ascii "<type 96>"
	.ascii ">"
	.ascii "; "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.sendCh"
	.ascii " "
	.ascii "<type 131 "
	.ascii "chan "
	.ascii "<type 132 "
	.ascii "\".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.sendReady\" "
	.ascii "<type 133 "
	.ascii "struct { "
	.ascii "Hdr"
	.ascii " "
	.ascii "<type 134 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii "; "
	.ascii "Body"
	.ascii " "
	.ascii "<type 76>"
	.ascii "; "
	.ascii "Err"
	.ascii " "
	.ascii "<type 135 "
	.ascii "chan "
	.ascii "<type -19>"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.recvDoneCh"
	.ascii " "
	.ascii "<type 136 "
	.ascii "chan "
	.ascii "<type 137 "
	.ascii "struct { "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.shutdown"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.shutdownErr"
	.ascii " "
	.ascii "<type -19>"
	.ascii "; "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.shutdownCh"
	.ascii " "
	.ascii "<type 138 "
	.ascii "chan "
	.ascii "<type 139 "
	.ascii "struct { "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.shutdownLock"
	.ascii " "
	.ascii "<type 58>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<type 99>"
	.ascii ") "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.closeStream"
	.ascii " ("
	.ascii "id"
	.ascii " "
	.ascii "<type -7>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<type 99>"
	.ascii ") "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.incomingStream"
	.ascii " ("
	.ascii "id"
	.ascii " "
	.ascii "<type -7>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<type 99>"
	.ascii ") "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.handleGoAway"
	.ascii " ("
	.ascii "hdr"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 114>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<type 99>"
	.ascii ") "
	.ascii "Close"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<esc:0x102>"
	.ascii " "
	.ascii "<type 99>"
	.ascii ") "
	.ascii "AcceptStream"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 96>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<type 99>"
	.ascii ") "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.recvLoop"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<type 99>"
	.ascii ") "
	.ascii "OpenStream"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 96>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<type 99>"
	.ascii ") "
	.ascii "NumStreams"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<type 99>"
	.ascii ") "
	.ascii "Open"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 13>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 140 "
	.ascii "*"
	.ascii "<type 47>"
	.ascii ">"
	.ascii ") "
	.ascii "LocalAddr"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 17>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 140>"
	.ascii ") "
	.ascii "Addr"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 17>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 99>"
	.ascii ") "
	.ascii "IsClosed"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 140>"
	.ascii ") "
	.ascii "RemoteAddr"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 17>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 99>"
	.ascii ") "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.sendNoWait"
	.ascii " ("
	.ascii "hdr"
	.ascii " "
	.ascii "<type 114>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<esc:0x102>"
	.ascii " "
	.ascii "<type 99>"
	.ascii ") "
	.ascii "Accept"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 13>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<type 99>"
	.ascii ") "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.keepalive"
	.ascii " ("
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<type 99>"
	.ascii ") "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.exitErr"
	.ascii " ("
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<type 99>"
	.ascii ") "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.recv"
	.ascii " ("
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<type 99>"
	.ascii ") "
	.ascii "GoAway"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<type 99>"
	.ascii ") "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.establishStream"
	.ascii " ("
	.ascii "id"
	.ascii " "
	.ascii "<type -7>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 99>"
	.ascii ") "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.waitForSendErr"
	.ascii " ("
	.ascii "hdr"
	.ascii " "
	.ascii "<type 114>"
	.ascii ", "
	.ascii "body"
	.ascii " "
	.ascii "<type 76>"
	.ascii ", "
	.ascii "errCh"
	.ascii " "
	.ascii "<type 141 "
	.ascii "chan "
	.ascii "<type -19>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 99>"
	.ascii ") "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.waitForSend"
	.ascii " ("
	.ascii "hdr"
	.ascii " "
	.ascii "<type 114>"
	.ascii ", "
	.ascii "body"
	.ascii " "
	.ascii "<type 76>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<type 99>"
	.ascii ") "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.goAway"
	.ascii " ("
	.ascii "reason"
	.ascii " "
	.ascii "<type -7>"
	.ascii ")"
	.ascii " "
	.ascii "<type 114>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<type 99>"
	.ascii ") "
	.ascii "Ping"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 38>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<type 99>"
	.ascii ") "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.send"
	.ascii " ("
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<type 99>"
	.ascii ") "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.handlePing"
	.ascii " ("
	.ascii "hdr"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 114>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<type 99>"
	.ascii ") "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.handleStreamMessage"
	.ascii " ("
	.ascii "hdr"
	.ascii " "
	.ascii "<type 114>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".command-line-arguments.stateC"
	.ascii " "
	.ascii "<type 13>"
	.ascii "; "
	.ascii ".command-line-arguments.stateW"
	.ascii " "
	.ascii "<type 142 "
	.ascii "*"
	.ascii "<type 143 "
	.ascii "\"encoding/gob.Encoder\" "
	.ascii "<type 144 "
	.ascii "struct { "
	.ascii ".encoding/gob.mutex"
	.ascii " "
	.ascii "<type 58>"
	.ascii "; "
	.ascii ".encoding/gob.w"
	.ascii " "
	.ascii "<type 145 "
	.ascii "["
	.ascii "] "
	.ascii "<type 52>"
	.ascii ">"
	.ascii "; "
	.ascii ".encoding/gob.sent"
	.ascii " "
	.ascii "<type 146 "
	.ascii "map ["
	.ascii "<type 147 "
	.ascii "\"reflect.Type\" "
	.ascii "\""
	.ascii "reflect"
	.ascii "\" "
	.ascii "<type 148 "
	.ascii "interface { "
	.ascii "Align"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii "FieldAlign"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii "Method"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " "
	.ascii "<type 149 "
	.ascii "\"reflect.Method\" "
	.ascii "<type 150 "
	.ascii "struct { "
	.ascii "Name"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "PkgPath"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "Type"
	.ascii " "
	.ascii "<type 147>"
	.ascii "; "
	.ascii "Func"
	.ascii " "
	.ascii "<type 151 "
	.ascii "\"reflect.Value\" "
	.ascii "<type 152 "
	.ascii "struct { "
	.ascii ".reflect.typ"
	.ascii " "
	.ascii "<type 153 "
	.ascii "*"
	.ascii "<type 154 "
	.ascii "\".reflect.rtype\" "
	.ascii "<type 155 "
	.ascii "struct { "
	.ascii ".reflect.size"
	.ascii " "
	.ascii "<type -13>"
	.ascii "; "
	.ascii ".reflect.ptrdata"
	.ascii " "
	.ascii "<type -13>"
	.ascii "; "
	.ascii ".reflect.hash"
	.ascii " "
	.ascii "<type -7>"
	.ascii "; "
	.ascii ".reflect.kind"
	.ascii " "
	.ascii "<type -5>"
	.ascii "; "
	.ascii ".reflect.align"
	.ascii " "
	.ascii "<type -1>"
	.ascii "; "
	.ascii ".reflect.fieldAlign"
	.ascii " "
	.ascii "<type -5>"
	.ascii "; "
	.ascii ".reflect._"
	.ascii " "
	.ascii "<type -5>"
	.ascii "; "
	.ascii ".reflect.hashfn"
	.ascii " "
	.ascii "<type 156 "
	.ascii "("
	.ascii "?"
	.ascii " "
	.ascii "<type 157 "
	.ascii "\"unsafe.Pointer\" "
	.ascii "\""
	.ascii "unsafe"
	.ascii "\" "
	.ascii "<type 158 "
	.ascii "*"
	.ascii "any"
	.ascii ">"
	.ascii ">"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -13>"
	.ascii ")"
	.ascii " "
	.ascii "<type -13>"
	.ascii ">"
	.ascii "; "
	.ascii ".reflect.equalfn"
	.ascii " "
	.ascii "<type 159 "
	.ascii "("
	.ascii "?"
	.ascii " "
	.ascii "<type 157>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type 157>"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ">"
	.ascii "; "
	.ascii ".reflect.gcdata"
	.ascii " "
	.ascii "<type 160 "
	.ascii "*"
	.ascii "<type -20>"
	.ascii ">"
	.ascii "; "
	.ascii ".reflect.string"
	.ascii " "
	.ascii "<type 161 "
	.ascii "*"
	.ascii "<type -16>"
	.ascii ">"
	.ascii "; "
	.ascii "? "
	.ascii "<type 162 "
	.ascii "*"
	.ascii "<type 163 "
	.ascii "\".reflect.uncommonType\" "
	.ascii "<type 164 "
	.ascii "struct { "
	.ascii ".reflect.name"
	.ascii " "
	.ascii "<type 161>"
	.ascii "; "
	.ascii ".reflect.pkgPath"
	.ascii " "
	.ascii "<type 161>"
	.ascii "; "
	.ascii ".reflect.methods"
	.ascii " "
	.ascii "<type 165 "
	.ascii "["
	.ascii "] "
	.ascii "<type 166 "
	.ascii "\".reflect.method\" "
	.ascii "<type 167 "
	.ascii "struct { "
	.ascii ".reflect.name"
	.ascii " "
	.ascii "<type 161>"
	.ascii "; "
	.ascii ".reflect.pkgPath"
	.ascii " "
	.ascii "<type 161>"
	.ascii "; "
	.ascii ".reflect.mtyp"
	.ascii " "
	.ascii "<type 168 "
	.ascii "*"
	.ascii "<type 154>"
	.ascii ">"
	.ascii "; "
	.ascii ".reflect.typ"
	.ascii " "
	.ascii "<type 168>"
	.ascii "; "
	.ascii ".reflect.tfn"
	.ascii " "
	.ascii "<type 157>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 169 "
	.ascii "*"
	.ascii "<type 163>"
	.ascii ">"
	.ascii ") "
	.ascii ".reflect.uncommon"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 169>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x32>"
	.ascii " "
	.ascii "<type 169>"
	.ascii ") "
	.ascii "PkgPath"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x32>"
	.ascii " "
	.ascii "<type 169>"
	.ascii ") "
	.ascii "Name"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".reflect.ptrToThis"
	.ascii " "
	.ascii "<type 168>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<type 168>"
	.ascii ") "
	.ascii "FieldByNameFunc"
	.ascii " ("
	.ascii "match"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 170 "
	.ascii "("
	.ascii "?"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ">"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 171 "
	.ascii "\"reflect.StructField\" "
	.ascii "<type 172 "
	.ascii "struct { "
	.ascii "Name"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "PkgPath"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "Type"
	.ascii " "
	.ascii "<type 147>"
	.ascii "; "
	.ascii "Tag"
	.ascii " "
	.ascii "<type 173 "
	.ascii "\"reflect.StructTag\" "
	.ascii "<type -16>"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "tag"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 173>"
	.ascii ") "
	.ascii "Get"
	.ascii " ("
	.ascii "key"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "tag"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 173>"
	.ascii ") "
	.ascii "Lookup"
	.ascii " ("
	.ascii "key"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " ("
	.ascii "value"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "ok"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii ";\n"
	.ascii ">"
	.ascii "; "
	.ascii "Offset"
	.ascii " "
	.ascii "<type -13>"
	.ascii "; "
	.ascii "Index"
	.ascii " "
	.ascii "<type 174 "
	.ascii "["
	.ascii "] "
	.ascii "<type -11>"
	.ascii ">"
	.ascii "; "
	.ascii "Anonymous"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 168>"
	.ascii ") "
	.ascii "In"
	.ascii " ("
	.ascii "i"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " "
	.ascii "<type 147>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x4a>"
	.ascii " "
	.ascii "<type 168>"
	.ascii ") "
	.ascii "Field"
	.ascii " ("
	.ascii "i"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " "
	.ascii "<type 171>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 168>"
	.ascii ") "
	.ascii "NumField"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 168>"
	.ascii ") "
	.ascii "Elem"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 147>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 168>"
	.ascii ") "
	.ascii "String"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<type 168>"
	.ascii ") "
	.ascii ".reflect.ptrTo"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 168>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 168>"
	.ascii ") "
	.ascii "IsVariadic"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<type 168>"
	.ascii ") "
	.ascii "FieldByIndex"
	.ascii " ("
	.ascii "index"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 175 "
	.ascii "["
	.ascii "] "
	.ascii "<type -11>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type 171>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 168>"
	.ascii ") "
	.ascii "Size"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -13>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x42>"
	.ascii " "
	.ascii "<type 168>"
	.ascii ") "
	.ascii "Name"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<type 168>"
	.ascii ") "
	.ascii "MethodByName"
	.ascii " ("
	.ascii "name"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " ("
	.ascii "m"
	.ascii " "
	.ascii "<type 149>"
	.ascii ", "
	.ascii "ok"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 168>"
	.ascii ") "
	.ascii ".reflect.common"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 168>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 168>"
	.ascii ") "
	.ascii "Kind"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 176 "
	.ascii "\"reflect.Kind\" "
	.ascii "<type -12>"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "k"
	.ascii " "
	.ascii "<type 176>"
	.ascii ") "
	.ascii "String"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii ">"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 168>"
	.ascii ") "
	.ascii "Bits"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<type 168>"
	.ascii ") "
	.ascii ".reflect.exportedMethods"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 177 "
	.ascii "["
	.ascii "] "
	.ascii "<type 166>"
	.ascii ">"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<type 168>"
	.ascii ") "
	.ascii "NumMethod"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 168>"
	.ascii ") "
	.ascii "Comparable"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 168>"
	.ascii ") "
	.ascii "Implements"
	.ascii " ("
	.ascii "u"
	.ascii " "
	.ascii "<type 147>"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<type 168>"
	.ascii ") "
	.ascii "FieldByName"
	.ascii " ("
	.ascii "name"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 171>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 168>"
	.ascii ") "
	.ascii "AssignableTo"
	.ascii " ("
	.ascii "u"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 147>"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 168>"
	.ascii ") "
	.ascii "Len"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x32>"
	.ascii " "
	.ascii "<type 168>"
	.ascii ") "
	.ascii ".reflect.rawString"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 168>"
	.ascii ") "
	.ascii "Out"
	.ascii " ("
	.ascii "i"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " "
	.ascii "<type 147>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 168>"
	.ascii ") "
	.ascii "ConvertibleTo"
	.ascii " ("
	.ascii "u"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 147>"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x42>"
	.ascii " "
	.ascii "<type 168>"
	.ascii ") "
	.ascii "PkgPath"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 168>"
	.ascii ") "
	.ascii ".reflect.pointers"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<type 168>"
	.ascii ") "
	.ascii "Method"
	.ascii " ("
	.ascii "i"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " ("
	.ascii "m"
	.ascii " "
	.ascii "<type 149>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 168>"
	.ascii ") "
	.ascii "Align"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 168>"
	.ascii ") "
	.ascii "NumOut"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 168>"
	.ascii ") "
	.ascii "ChanDir"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 178 "
	.ascii "\"reflect.ChanDir\" "
	.ascii "<type -11>"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "d"
	.ascii " "
	.ascii "<type 178>"
	.ascii ") "
	.ascii "String"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii ">"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 168>"
	.ascii ") "
	.ascii "Key"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 147>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 168>"
	.ascii ") "
	.ascii "FieldAlign"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 168>"
	.ascii ") "
	.ascii "NumIn"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".reflect.ptr"
	.ascii " "
	.ascii "<type 157>"
	.ascii "; "
	.ascii "? "
	.ascii "<type 179 "
	.ascii "\".reflect.flag\" "
	.ascii "<type -13>"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "f"
	.ascii " "
	.ascii "<type 179>"
	.ascii ") "
	.ascii ".reflect.mustBeExported"
	.ascii " ("
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "f"
	.ascii " "
	.ascii "<type 179>"
	.ascii ") "
	.ascii ".reflect.mustBeAssignable"
	.ascii " ("
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "f"
	.ascii " "
	.ascii "<type 179>"
	.ascii ") "
	.ascii ".reflect.kind"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 176>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "f"
	.ascii " "
	.ascii "<type 179>"
	.ascii ") "
	.ascii ".reflect.ro"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 179>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "f"
	.ascii " "
	.ascii "<type 179>"
	.ascii ") "
	.ascii ".reflect.mustBe"
	.ascii " ("
	.ascii "expected"
	.ascii " "
	.ascii "<type 176>"
	.ascii ")"
	.ascii ";\n"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 151>"
	.ascii ") "
	.ascii "SetBytes"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<type 180 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 151>"
	.ascii ") "
	.ascii "CanAddr"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x2a>"
	.ascii " "
	.ascii "<type 151>"
	.ascii ") "
	.ascii "MapIndex"
	.ascii " ("
	.ascii "key"
	.ascii " "
	.ascii "<type 151>"
	.ascii ")"
	.ascii " "
	.ascii "<type 151>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 151>"
	.ascii ") "
	.ascii "SetMapIndex"
	.ascii " ("
	.ascii "key"
	.ascii " "
	.ascii "<type 151>"
	.ascii ", "
	.ascii "val"
	.ascii " "
	.ascii "<type 151>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 151>"
	.ascii ") "
	.ascii "SetBool"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 151>"
	.ascii ") "
	.ascii "SetFloat"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<type -10>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<type 151>"
	.ascii ") "
	.ascii "Set"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<type 151>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 151>"
	.ascii ") "
	.ascii "Send"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<type 151>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 151>"
	.ascii ") "
	.ascii "OverflowInt"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<type -4>"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<type 151>"
	.ascii ") "
	.ascii "Method"
	.ascii " ("
	.ascii "i"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " "
	.ascii "<type 151>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 151>"
	.ascii ") "
	.ascii "OverflowFloat"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<type -10>"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<type 151>"
	.ascii ") "
	.ascii "Type"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 147>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 151>"
	.ascii ") "
	.ascii "OverflowComplex"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<type -18>"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 151>"
	.ascii ") "
	.ascii "MapKeys"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 181 "
	.ascii "["
	.ascii "] "
	.ascii "<type 151>"
	.ascii ">"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<type 151>"
	.ascii ") "
	.ascii "Len"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 151>"
	.ascii ") "
	.ascii "SetLen"
	.ascii " ("
	.ascii "n"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<type 151>"
	.ascii ") "
	.ascii "MethodByName"
	.ascii " ("
	.ascii "name"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " "
	.ascii "<type 151>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<type 151>"
	.ascii ") "
	.ascii "FieldByIndex"
	.ascii " ("
	.ascii "index"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 182 "
	.ascii "["
	.ascii "] "
	.ascii "<type -11>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type 151>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<type 151>"
	.ascii ") "
	.ascii "String"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 151>"
	.ascii ") "
	.ascii "NumField"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 151>"
	.ascii ") "
	.ascii "Field"
	.ascii " ("
	.ascii "i"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " "
	.ascii "<type 151>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 151>"
	.ascii ") "
	.ascii "SetPointer"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<type 157>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 151>"
	.ascii ") "
	.ascii "OverflowUint"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<type -8>"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<type 151>"
	.ascii ") "
	.ascii "FieldByName"
	.ascii " ("
	.ascii "name"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " "
	.ascii "<type 151>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<type 151>"
	.ascii ") "
	.ascii "CallSlice"
	.ascii " ("
	.ascii "in"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 183 "
	.ascii "["
	.ascii "] "
	.ascii "<type 151>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type 184 "
	.ascii "["
	.ascii "] "
	.ascii "<type 151>"
	.ascii ">"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 151>"
	.ascii ") "
	.ascii "Float"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -10>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 151>"
	.ascii ") "
	.ascii "TrySend"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<type 151>"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 151>"
	.ascii ") "
	.ascii "SetCap"
	.ascii " ("
	.ascii "n"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 151>"
	.ascii ") "
	.ascii "Index"
	.ascii " ("
	.ascii "i"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " "
	.ascii "<type 151>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<type 151>"
	.ascii ") "
	.ascii "Cap"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 151>"
	.ascii ") "
	.ascii ".reflect.setRunes"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<type 185 "
	.ascii "["
	.ascii "] "
	.ascii "<type -21>"
	.ascii ">"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 151>"
	.ascii ") "
	.ascii "SetComplex"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<type -18>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x2a>"
	.ascii " "
	.ascii "<type 151>"
	.ascii ") "
	.ascii ".reflect.runes"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 186 "
	.ascii "["
	.ascii "] "
	.ascii "<type -21>"
	.ascii ">"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 151>"
	.ascii ") "
	.ascii "InterfaceData"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 187 "
	.ascii "["
	.ascii "2"
	.ascii " "
	.ascii "] "
	.ascii "<type -13>"
	.ascii ">"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<type 151>"
	.ascii ") "
	.ascii "TryRecv"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<type 151>"
	.ascii ", "
	.ascii "ok"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 151>"
	.ascii ") "
	.ascii "Uint"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -8>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<type 151>"
	.ascii ") "
	.ascii "Convert"
	.ascii " ("
	.ascii "t"
	.ascii " "
	.ascii "<type 147>"
	.ascii ")"
	.ascii " "
	.ascii "<type 151>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 151>"
	.ascii ") "
	.ascii "Bool"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<type 151>"
	.ascii ") "
	.ascii "Slice"
	.ascii " ("
	.ascii "i"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "j"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " "
	.ascii "<type 151>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 151>"
	.ascii ") "
	.ascii "SetInt"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<type -4>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<type 151>"
	.ascii ") "
	.ascii "Elem"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 151>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<type 151>"
	.ascii ") "
	.ascii ".reflect.recv"
	.ascii " ("
	.ascii "nb"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii " ("
	.ascii "val"
	.ascii " "
	.ascii "<type 151>"
	.ascii ", "
	.ascii "ok"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<type 151>"
	.ascii ") "
	.ascii ".reflect.assignTo"
	.ascii " ("
	.ascii "context"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "dst"
	.ascii " "
	.ascii "<type 153>"
	.ascii ", "
	.ascii "target"
	.ascii " "
	.ascii "<type 157>"
	.ascii ")"
	.ascii " "
	.ascii "<type 151>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<type 151>"
	.ascii ") "
	.ascii "Slice3"
	.ascii " ("
	.ascii "i"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "j"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "k"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " "
	.ascii "<type 151>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 151>"
	.ascii ") "
	.ascii "SetString"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 151>"
	.ascii ") "
	.ascii "SetUint"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<type -8>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 151>"
	.ascii ") "
	.ascii "CanInterface"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<type 151>"
	.ascii ") "
	.ascii "Recv"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<type 151>"
	.ascii ", "
	.ascii "ok"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<type 151>"
	.ascii ") "
	.ascii "Close"
	.ascii " ("
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<type 151>"
	.ascii ") "
	.ascii "Call"
	.ascii " ("
	.ascii "in"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 188 "
	.ascii "["
	.ascii "] "
	.ascii "<type 151>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type 189 "
	.ascii "["
	.ascii "] "
	.ascii "<type 151>"
	.ascii ">"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x2a>"
	.ascii " "
	.ascii "<type 151>"
	.ascii ") "
	.ascii "Bytes"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 190 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<type 151>"
	.ascii ") "
	.ascii "Addr"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 151>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<type 151>"
	.ascii ") "
	.ascii "Interface"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "i"
	.ascii " "
	.ascii "<type 191 "
	.ascii "interface { "
	.ascii "}"
	.ascii ">"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 151>"
	.ascii ") "
	.ascii "Kind"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 176>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 151>"
	.ascii ") "
	.ascii "Int"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -4>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 151>"
	.ascii ") "
	.ascii ".reflect.send"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<type 151>"
	.ascii ", "
	.ascii "nb"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii " ("
	.ascii "selected"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 151>"
	.ascii ") "
	.ascii ".reflect.pointer"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 157>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 151>"
	.ascii ") "
	.ascii "CanSet"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 151>"
	.ascii ") "
	.ascii "Pointer"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -13>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<type 151>"
	.ascii ") "
	.ascii "FieldByNameFunc"
	.ascii " ("
	.ascii "match"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 192 "
	.ascii "("
	.ascii "?"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type 151>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 151>"
	.ascii ") "
	.ascii "Complex"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -18>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<type 151>"
	.ascii ") "
	.ascii "NumMethod"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 151>"
	.ascii ") "
	.ascii "IsValid"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<type 151>"
	.ascii ") "
	.ascii ".reflect.call"
	.ascii " ("
	.ascii "op"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "in"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 193 "
	.ascii "["
	.ascii "] "
	.ascii "<type 151>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type 194 "
	.ascii "["
	.ascii "] "
	.ascii "<type 151>"
	.ascii ">"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 151>"
	.ascii ") "
	.ascii "UnsafeAddr"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -13>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 151>"
	.ascii ") "
	.ascii "IsNil"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii ">"
	.ascii "; "
	.ascii "Index"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii "MethodByName"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " "
	.ascii "("
	.ascii "?"
	.ascii " "
	.ascii "<type 149>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii "; "
	.ascii "NumMethod"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii "Name"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "PkgPath"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "Size"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -13>"
	.ascii "; "
	.ascii "String"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii ".reflect.rawString"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "Kind"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 176>"
	.ascii "; "
	.ascii "Implements"
	.ascii " ("
	.ascii "u"
	.ascii " "
	.ascii "<type 147>"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii "AssignableTo"
	.ascii " ("
	.ascii "u"
	.ascii " "
	.ascii "<type 147>"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii "ConvertibleTo"
	.ascii " ("
	.ascii "u"
	.ascii " "
	.ascii "<type 147>"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii "Comparable"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii "Bits"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii "ChanDir"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 178>"
	.ascii "; "
	.ascii "IsVariadic"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii "Elem"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 147>"
	.ascii "; "
	.ascii "Field"
	.ascii " ("
	.ascii "i"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " "
	.ascii "<type 171>"
	.ascii "; "
	.ascii "FieldByIndex"
	.ascii " ("
	.ascii "index"
	.ascii " "
	.ascii "<type 195 "
	.ascii "["
	.ascii "] "
	.ascii "<type -11>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type 171>"
	.ascii "; "
	.ascii "FieldByName"
	.ascii " ("
	.ascii "name"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " "
	.ascii "("
	.ascii "?"
	.ascii " "
	.ascii "<type 171>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii "; "
	.ascii "FieldByNameFunc"
	.ascii " ("
	.ascii "match"
	.ascii " "
	.ascii "<type 196 "
	.ascii "("
	.ascii "?"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "("
	.ascii "?"
	.ascii " "
	.ascii "<type 171>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii "; "
	.ascii "In"
	.ascii " ("
	.ascii "i"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " "
	.ascii "<type 147>"
	.ascii "; "
	.ascii "Key"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 147>"
	.ascii "; "
	.ascii "Len"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii "NumField"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii "NumIn"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii "NumOut"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii "Out"
	.ascii " ("
	.ascii "i"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " "
	.ascii "<type 147>"
	.ascii "; "
	.ascii ".reflect.common"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 153>"
	.ascii "; "
	.ascii ".reflect.uncommon"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 162>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii "] "
	.ascii "<type 197 "
	.ascii "\".encoding/gob.typeId\" "
	.ascii "<type -3>"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<type 197>"
	.ascii ") "
	.ascii ".encoding/gob.name"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<type 197>"
	.ascii ") "
	.ascii ".encoding/gob.string"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<type 197>"
	.ascii ") "
	.ascii ".encoding/gob.gobType"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 198 "
	.ascii "\".encoding/gob.gobType\" "
	.ascii "<type 199 "
	.ascii "interface { "
	.ascii ".encoding/gob.id"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 197>"
	.ascii "; "
	.ascii ".encoding/gob.setId"
	.ascii " ("
	.ascii "id"
	.ascii " "
	.ascii "<type 197>"
	.ascii ")"
	.ascii "; "
	.ascii ".encoding/gob.name"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii ".encoding/gob.string"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii ".encoding/gob.safeString"
	.ascii " ("
	.ascii "seen"
	.ascii " "
	.ascii "<type 200 "
	.ascii "map ["
	.ascii "<type 197>"
	.ascii "] "
	.ascii "<type -15>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".encoding/gob.countState"
	.ascii " "
	.ascii "<type 201 "
	.ascii "*"
	.ascii "<type 202 "
	.ascii "\".encoding/gob.encoderState\" "
	.ascii "<type 203 "
	.ascii "struct { "
	.ascii ".encoding/gob.enc"
	.ascii " "
	.ascii "<type 204 "
	.ascii "*"
	.ascii "<type 143>"
	.ascii ">"
	.ascii "; "
	.ascii ".encoding/gob.b"
	.ascii " "
	.ascii "<type 205 "
	.ascii "*"
	.ascii "<type 206 "
	.ascii "\".encoding/gob.encBuffer\" "
	.ascii "<type 207 "
	.ascii "struct { "
	.ascii ".encoding/gob.data"
	.ascii " "
	.ascii "<type 208 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii "; "
	.ascii ".encoding/gob.scratch"
	.ascii " "
	.ascii "<type 209 "
	.ascii "["
	.ascii "64"
	.ascii " "
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "e"
	.ascii " "
	.ascii "<type 210 "
	.ascii "*"
	.ascii "<type 206>"
	.ascii ">"
	.ascii ") "
	.ascii "Reset"
	.ascii " ("
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "e"
	.ascii " "
	.ascii "<esc:0x22>"
	.ascii " "
	.ascii "<type 210>"
	.ascii ") "
	.ascii "Bytes"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 211 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "e"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 210>"
	.ascii ") "
	.ascii "WriteByte"
	.ascii " ("
	.ascii "c"
	.ascii " "
	.ascii "<type -20>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "e"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 210>"
	.ascii ") "
	.ascii "Write"
	.ascii " ("
	.ascii "p"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 212 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "e"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 210>"
	.ascii ") "
	.ascii "Len"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "e"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 210>"
	.ascii ") "
	.ascii "WriteString"
	.ascii " ("
	.ascii "s"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".encoding/gob.sendZero"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii ".encoding/gob.fieldnum"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii ".encoding/gob.buf"
	.ascii " "
	.ascii "<type 213 "
	.ascii "["
	.ascii "9"
	.ascii " "
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii "; "
	.ascii ".encoding/gob.next"
	.ascii " "
	.ascii "<type 214 "
	.ascii "*"
	.ascii "<type 202>"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "state"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 215 "
	.ascii "*"
	.ascii "<type 202>"
	.ascii ">"
	.ascii ") "
	.ascii ".encoding/gob.update"
	.ascii " ("
	.ascii "instr"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 216 "
	.ascii "*"
	.ascii "<type 217 "
	.ascii "\".encoding/gob.encInstr\" "
	.ascii "<type 218 "
	.ascii "struct { "
	.ascii ".encoding/gob.op"
	.ascii " "
	.ascii "<type 219 "
	.ascii "\".encoding/gob.encOp\" "
	.ascii "<type 220 "
	.ascii "("
	.ascii "i"
	.ascii " "
	.ascii "<type 221 "
	.ascii "*"
	.ascii "<type 217>"
	.ascii ">"
	.ascii ", "
	.ascii "state"
	.ascii " "
	.ascii "<type 215>"
	.ascii ", "
	.ascii "v"
	.ascii " "
	.ascii "<type 151>"
	.ascii ")"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".encoding/gob.field"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii ".encoding/gob.index"
	.ascii " "
	.ascii "<type 222 "
	.ascii "["
	.ascii "] "
	.ascii "<type -11>"
	.ascii ">"
	.ascii "; "
	.ascii ".encoding/gob.indir"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "state"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 215>"
	.ascii ") "
	.ascii ".encoding/gob.encodeInt"
	.ascii " ("
	.ascii "i"
	.ascii " "
	.ascii "<type -4>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "state"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 215>"
	.ascii ") "
	.ascii ".encoding/gob.encodeUint"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<type -8>"
	.ascii ")"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".encoding/gob.freeList"
	.ascii " "
	.ascii "<type 201>"
	.ascii "; "
	.ascii ".encoding/gob.byteBuf"
	.ascii " "
	.ascii "<type 206>"
	.ascii "; "
	.ascii ".encoding/gob.err"
	.ascii " "
	.ascii "<type -19>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "enc"
	.ascii " "
	.ascii "<type 223 "
	.ascii "*"
	.ascii "<type 143>"
	.ascii ">"
	.ascii ") "
	.ascii "EncodeValue"
	.ascii " ("
	.ascii "value"
	.ascii " "
	.ascii "<type 151>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "enc"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 223>"
	.ascii ") "
	.ascii ".encoding/gob.sendTypeId"
	.ascii " ("
	.ascii "state"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 201>"
	.ascii ", "
	.ascii "ut"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 224 "
	.ascii "*"
	.ascii "<type 225 "
	.ascii "\".encoding/gob.userTypeInfo\" "
	.ascii "<type 226 "
	.ascii "struct { "
	.ascii ".encoding/gob.user"
	.ascii " "
	.ascii "<type 147>"
	.ascii "; "
	.ascii ".encoding/gob.base"
	.ascii " "
	.ascii "<type 147>"
	.ascii "; "
	.ascii ".encoding/gob.indir"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii ".encoding/gob.externalEnc"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii ".encoding/gob.externalDec"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii ".encoding/gob.encIndir"
	.ascii " "
	.ascii "<type -1>"
	.ascii "; "
	.ascii ".encoding/gob.decIndir"
	.ascii " "
	.ascii "<type -1>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "enc"
	.ascii " "
	.ascii "<type 223>"
	.ascii ") "
	.ascii ".encoding/gob.sendTypeDescriptor"
	.ascii " ("
	.ascii "w"
	.ascii " "
	.ascii "<type 52>"
	.ascii ", "
	.ascii "state"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 201>"
	.ascii ", "
	.ascii "ut"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 224>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "enc"
	.ascii " "
	.ascii "<type 223>"
	.ascii ") "
	.ascii "Encode"
	.ascii " ("
	.ascii "e"
	.ascii " "
	.ascii "<type 227 "
	.ascii "interface { "
	.ascii "}"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "enc"
	.ascii " "
	.ascii "<type 223>"
	.ascii ") "
	.ascii ".encoding/gob.sendActualType"
	.ascii " ("
	.ascii "w"
	.ascii " "
	.ascii "<type 52>"
	.ascii ", "
	.ascii "state"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 201>"
	.ascii ", "
	.ascii "ut"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 224>"
	.ascii ", "
	.ascii "actual"
	.ascii " "
	.ascii "<type 147>"
	.ascii ")"
	.ascii " ("
	.ascii "sent"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "enc"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 223>"
	.ascii ") "
	.ascii ".encoding/gob.pushWriter"
	.ascii " ("
	.ascii "w"
	.ascii " "
	.ascii "<type 52>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "enc"
	.ascii " "
	.ascii "<type 223>"
	.ascii ") "
	.ascii ".encoding/gob.encodeSingle"
	.ascii " ("
	.ascii "b"
	.ascii " "
	.ascii "<type 205>"
	.ascii ", "
	.ascii "engine"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 228 "
	.ascii "*"
	.ascii "<type 229 "
	.ascii "\".encoding/gob.encEngine\" "
	.ascii "<type 230 "
	.ascii "struct { "
	.ascii ".encoding/gob.instr"
	.ascii " "
	.ascii "<type 231 "
	.ascii "["
	.ascii "] "
	.ascii "<type 217>"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii ", "
	.ascii "value"
	.ascii " "
	.ascii "<type 151>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "enc"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 223>"
	.ascii ") "
	.ascii ".encoding/gob.freeEncoderState"
	.ascii " ("
	.ascii "e"
	.ascii " "
	.ascii "<type 201>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "enc"
	.ascii " "
	.ascii "<type 223>"
	.ascii ") "
	.ascii ".encoding/gob.encodeStruct"
	.ascii " ("
	.ascii "b"
	.ascii " "
	.ascii "<type 205>"
	.ascii ", "
	.ascii "engine"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 228>"
	.ascii ", "
	.ascii "value"
	.ascii " "
	.ascii "<type 151>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "enc"
	.ascii " "
	.ascii "<type 223>"
	.ascii ") "
	.ascii ".encoding/gob.newEncoderState"
	.ascii " ("
	.ascii "b"
	.ascii " "
	.ascii "<type 205>"
	.ascii ")"
	.ascii " "
	.ascii "<type 201>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "enc"
	.ascii " "
	.ascii "<type 223>"
	.ascii ") "
	.ascii ".encoding/gob.encodeMap"
	.ascii " ("
	.ascii "b"
	.ascii " "
	.ascii "<type 205>"
	.ascii ", "
	.ascii "mv"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 151>"
	.ascii ", "
	.ascii "keyOp"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 219>"
	.ascii ", "
	.ascii "elemOp"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 219>"
	.ascii ", "
	.ascii "keyIndir"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "elemIndir"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "enc"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 223>"
	.ascii ") "
	.ascii ".encoding/gob.popWriter"
	.ascii " ("
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "enc"
	.ascii " "
	.ascii "<type 223>"
	.ascii ") "
	.ascii ".encoding/gob.encodeArray"
	.ascii " ("
	.ascii "b"
	.ascii " "
	.ascii "<type 205>"
	.ascii ", "
	.ascii "value"
	.ascii " "
	.ascii "<type 151>"
	.ascii ", "
	.ascii "op"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 219>"
	.ascii ", "
	.ascii "elemIndir"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "length"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "helper"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 232 "
	.ascii "\".encoding/gob.encHelper\" "
	.ascii "<type 233 "
	.ascii "("
	.ascii "state"
	.ascii " "
	.ascii "<type 201>"
	.ascii ", "
	.ascii "v"
	.ascii " "
	.ascii "<type 151>"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ">"
	.ascii ">"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "enc"
	.ascii " "
	.ascii "<type 223>"
	.ascii ") "
	.ascii ".encoding/gob.encode"
	.ascii " ("
	.ascii "b"
	.ascii " "
	.ascii "<type 205>"
	.ascii ", "
	.ascii "value"
	.ascii " "
	.ascii "<type 151>"
	.ascii ", "
	.ascii "ut"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 224>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "enc"
	.ascii " "
	.ascii "<esc:0x32>"
	.ascii " "
	.ascii "<type 223>"
	.ascii ") "
	.ascii ".encoding/gob.writer"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 52>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "enc"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 223>"
	.ascii ") "
	.ascii ".encoding/gob.writeMessage"
	.ascii " ("
	.ascii "w"
	.ascii " "
	.ascii "<type 52>"
	.ascii ", "
	.ascii "b"
	.ascii " "
	.ascii "<type 205>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "enc"
	.ascii " "
	.ascii "<type 223>"
	.ascii ") "
	.ascii ".encoding/gob.encodeInterface"
	.ascii " ("
	.ascii "b"
	.ascii " "
	.ascii "<type 205>"
	.ascii ", "
	.ascii "iv"
	.ascii " "
	.ascii "<type 151>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "enc"
	.ascii " "
	.ascii "<type 223>"
	.ascii ") "
	.ascii ".encoding/gob.sendType"
	.ascii " ("
	.ascii "w"
	.ascii " "
	.ascii "<type 52>"
	.ascii ", "
	.ascii "state"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 201>"
	.ascii ", "
	.ascii "origt"
	.ascii " "
	.ascii "<type 147>"
	.ascii ")"
	.ascii " ("
	.ascii "sent"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "enc"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 223>"
	.ascii ") "
	.ascii ".encoding/gob.setError"
	.ascii " ("
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "enc"
	.ascii " "
	.ascii "<type 223>"
	.ascii ") "
	.ascii ".encoding/gob.encodeGobEncoder"
	.ascii " ("
	.ascii "b"
	.ascii " "
	.ascii "<type 205>"
	.ascii ", "
	.ascii "ut"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 224>"
	.ascii ", "
	.ascii "v"
	.ascii " "
	.ascii "<type 151>"
	.ascii ")"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".command-line-arguments.updateC"
	.ascii " "
	.ascii "<type 13>"
	.ascii "; "
	.ascii ".command-line-arguments.updateR"
	.ascii " "
	.ascii "<type 234 "
	.ascii "*"
	.ascii "<type 235 "
	.ascii "\"encoding/gob.Decoder\" "
	.ascii "<type 236 "
	.ascii "struct { "
	.ascii ".encoding/gob.mutex"
	.ascii " "
	.ascii "<type 58>"
	.ascii "; "
	.ascii ".encoding/gob.r"
	.ascii " "
	.ascii "<type 76>"
	.ascii "; "
	.ascii ".encoding/gob.buf"
	.ascii " "
	.ascii "<type 237 "
	.ascii "\".encoding/gob.decBuffer\" "
	.ascii "<type 238 "
	.ascii "struct { "
	.ascii ".encoding/gob.data"
	.ascii " "
	.ascii "<type 239 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii "; "
	.ascii ".encoding/gob.offset"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "d"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 240 "
	.ascii "*"
	.ascii "<type 237>"
	.ascii ">"
	.ascii ") "
	.ascii "Reset"
	.ascii " ("
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "d"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 240>"
	.ascii ") "
	.ascii "Len"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "d"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 240>"
	.ascii ") "
	.ascii "Read"
	.ascii " ("
	.ascii "p"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 241 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "d"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 240>"
	.ascii ") "
	.ascii "ReadByte"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type -20>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "d"
	.ascii " "
	.ascii "<esc:0x22>"
	.ascii " "
	.ascii "<type 240>"
	.ascii ") "
	.ascii "Bytes"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 242 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "d"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 240>"
	.ascii ") "
	.ascii "Drop"
	.ascii " ("
	.ascii "n"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "d"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 240>"
	.ascii ") "
	.ascii "Size"
	.ascii " ("
	.ascii "n"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii ";\n"
	.ascii ">"
	.ascii "; "
	.ascii ".encoding/gob.wireType"
	.ascii " "
	.ascii "<type 243 "
	.ascii "map ["
	.ascii "<type 197>"
	.ascii "] "
	.ascii "<type 244 "
	.ascii "*"
	.ascii "<type 245 "
	.ascii "\".encoding/gob.wireType\" "
	.ascii "<type 246 "
	.ascii "struct { "
	.ascii "ArrayT"
	.ascii " "
	.ascii "<type 247 "
	.ascii "*"
	.ascii "<type 248 "
	.ascii "\".encoding/gob.arrayType\" "
	.ascii "<type 249 "
	.ascii "struct { "
	.ascii "? "
	.ascii "<type 250 "
	.ascii "\"encoding/gob.CommonType\" "
	.ascii "<type 251 "
	.ascii "struct { "
	.ascii "Name"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "Id"
	.ascii " "
	.ascii "<type 197>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x22>"
	.ascii " "
	.ascii "<type 252 "
	.ascii "*"
	.ascii "<type 250>"
	.ascii ">"
	.ascii ") "
	.ascii ".encoding/gob.name"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 252>"
	.ascii ") "
	.ascii ".encoding/gob.setId"
	.ascii " ("
	.ascii "id"
	.ascii " "
	.ascii "<type 197>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x22>"
	.ascii " "
	.ascii "<type 252>"
	.ascii ") "
	.ascii ".encoding/gob.string"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 252>"
	.ascii ") "
	.ascii ".encoding/gob.id"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 197>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x22>"
	.ascii " "
	.ascii "<type 252>"
	.ascii ") "
	.ascii ".encoding/gob.safeString"
	.ascii " ("
	.ascii "seen"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 253 "
	.ascii "map ["
	.ascii "<type 197>"
	.ascii "] "
	.ascii "<type -15>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii ">"
	.ascii "; "
	.ascii "Elem"
	.ascii " "
	.ascii "<type 197>"
	.ascii "; "
	.ascii "Len"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "a"
	.ascii " "
	.ascii "<esc:0x2a>"
	.ascii " "
	.ascii "<type 254 "
	.ascii "*"
	.ascii "<type 248>"
	.ascii ">"
	.ascii ") "
	.ascii ".encoding/gob.string"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "a"
	.ascii " "
	.ascii "<esc:0x2a>"
	.ascii " "
	.ascii "<type 254>"
	.ascii ") "
	.ascii ".encoding/gob.safeString"
	.ascii " ("
	.ascii "seen"
	.ascii " "
	.ascii "<type 255 "
	.ascii "map ["
	.ascii "<type 197>"
	.ascii "] "
	.ascii "<type -15>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "a"
	.ascii " "
	.ascii "<type 254>"
	.ascii ") "
	.ascii ".encoding/gob.init"
	.ascii " ("
	.ascii "elem"
	.ascii " "
	.ascii "<type 198>"
	.ascii ", "
	.ascii "len"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii "SliceT"
	.ascii " "
	.ascii "<type 256 "
	.ascii "*"
	.ascii "<type 257 "
	.ascii "\".encoding/gob.sliceType\" "
	.ascii "<type 258 "
	.ascii "struct { "
	.ascii "? "
	.ascii "<type 250>"
	.ascii "; "
	.ascii "Elem"
	.ascii " "
	.ascii "<type 197>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<esc:0x22>"
	.ascii " "
	.ascii "<type 259 "
	.ascii "*"
	.ascii "<type 257>"
	.ascii ">"
	.ascii ") "
	.ascii ".encoding/gob.string"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<esc:0x22>"
	.ascii " "
	.ascii "<type 259>"
	.ascii ") "
	.ascii ".encoding/gob.safeString"
	.ascii " ("
	.ascii "seen"
	.ascii " "
	.ascii "<type 260 "
	.ascii "map ["
	.ascii "<type 197>"
	.ascii "] "
	.ascii "<type -15>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<type 259>"
	.ascii ") "
	.ascii ".encoding/gob.init"
	.ascii " ("
	.ascii "elem"
	.ascii " "
	.ascii "<type 198>"
	.ascii ")"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii "StructT"
	.ascii " "
	.ascii "<type 261 "
	.ascii "*"
	.ascii "<type 262 "
	.ascii "\".encoding/gob.structType\" "
	.ascii "<type 263 "
	.ascii "struct { "
	.ascii "? "
	.ascii "<type 250>"
	.ascii "; "
	.ascii "Field"
	.ascii " "
	.ascii "<type 264 "
	.ascii "["
	.ascii "] "
	.ascii "<type 265 "
	.ascii "*"
	.ascii "<type 266 "
	.ascii "\".encoding/gob.fieldType\" "
	.ascii "<type 267 "
	.ascii "struct { "
	.ascii "Name"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "Id"
	.ascii " "
	.ascii "<type 197>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<esc:0x2a>"
	.ascii " "
	.ascii "<type 268 "
	.ascii "*"
	.ascii "<type 262>"
	.ascii ">"
	.ascii ") "
	.ascii ".encoding/gob.string"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<esc:0x2a>"
	.ascii " "
	.ascii "<type 268>"
	.ascii ") "
	.ascii ".encoding/gob.safeString"
	.ascii " ("
	.ascii "seen"
	.ascii " "
	.ascii "<type 269 "
	.ascii "map ["
	.ascii "<type 197>"
	.ascii "] "
	.ascii "<type -15>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii "MapT"
	.ascii " "
	.ascii "<type 270 "
	.ascii "*"
	.ascii "<type 271 "
	.ascii "\".encoding/gob.mapType\" "
	.ascii "<type 272 "
	.ascii "struct { "
	.ascii "? "
	.ascii "<type 250>"
	.ascii "; "
	.ascii "Key"
	.ascii " "
	.ascii "<type 197>"
	.ascii "; "
	.ascii "Elem"
	.ascii " "
	.ascii "<type 197>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "m"
	.ascii " "
	.ascii "<esc:0x22>"
	.ascii " "
	.ascii "<type 273 "
	.ascii "*"
	.ascii "<type 271>"
	.ascii ">"
	.ascii ") "
	.ascii ".encoding/gob.string"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "m"
	.ascii " "
	.ascii "<esc:0x22>"
	.ascii " "
	.ascii "<type 273>"
	.ascii ") "
	.ascii ".encoding/gob.safeString"
	.ascii " ("
	.ascii "seen"
	.ascii " "
	.ascii "<type 274 "
	.ascii "map ["
	.ascii "<type 197>"
	.ascii "] "
	.ascii "<type -15>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "m"
	.ascii " "
	.ascii "<type 273>"
	.ascii ") "
	.ascii ".encoding/gob.init"
	.ascii " ("
	.ascii "key"
	.ascii " "
	.ascii "<type 198>"
	.ascii ", "
	.ascii "elem"
	.ascii " "
	.ascii "<type 198>"
	.ascii ")"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii "GobEncoderT"
	.ascii " "
	.ascii "<type 275 "
	.ascii "*"
	.ascii "<type 276 "
	.ascii "\".encoding/gob.gobEncoderType\" "
	.ascii "<type 277 "
	.ascii "struct { "
	.ascii "? "
	.ascii "<type 250>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "g"
	.ascii " "
	.ascii "<esc:0x22>"
	.ascii " "
	.ascii "<type 278 "
	.ascii "*"
	.ascii "<type 276>"
	.ascii ">"
	.ascii ") "
	.ascii ".encoding/gob.string"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "g"
	.ascii " "
	.ascii "<esc:0x22>"
	.ascii " "
	.ascii "<type 278>"
	.ascii ") "
	.ascii ".encoding/gob.safeString"
	.ascii " ("
	.ascii "seen"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 279 "
	.ascii "map ["
	.ascii "<type 197>"
	.ascii "] "
	.ascii "<type -15>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii "BinaryMarshalerT"
	.ascii " "
	.ascii "<type 275>"
	.ascii "; "
	.ascii "TextMarshalerT"
	.ascii " "
	.ascii "<type 275>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "w"
	.ascii " "
	.ascii "<esc:0x32>"
	.ascii " "
	.ascii "<type 280 "
	.ascii "*"
	.ascii "<type 245>"
	.ascii ">"
	.ascii ") "
	.ascii ".encoding/gob.string"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".encoding/gob.decoderCache"
	.ascii " "
	.ascii "<type 281 "
	.ascii "map ["
	.ascii "<type 147>"
	.ascii "] "
	.ascii "<type 282 "
	.ascii "map ["
	.ascii "<type 197>"
	.ascii "] "
	.ascii "<type 283 "
	.ascii "*"
	.ascii "<type 284 "
	.ascii "*"
	.ascii "<type 285 "
	.ascii "\".encoding/gob.decEngine\" "
	.ascii "<type 286 "
	.ascii "struct { "
	.ascii ".encoding/gob.instr"
	.ascii " "
	.ascii "<type 287 "
	.ascii "["
	.ascii "] "
	.ascii "<type 288 "
	.ascii "\".encoding/gob.decInstr\" "
	.ascii "<type 289 "
	.ascii "struct { "
	.ascii ".encoding/gob.op"
	.ascii " "
	.ascii "<type 290 "
	.ascii "\".encoding/gob.decOp\" "
	.ascii "<type 291 "
	.ascii "("
	.ascii "i"
	.ascii " "
	.ascii "<type 292 "
	.ascii "*"
	.ascii "<type 288>"
	.ascii ">"
	.ascii ", "
	.ascii "state"
	.ascii " "
	.ascii "<type 293 "
	.ascii "*"
	.ascii "<type 294 "
	.ascii "\".encoding/gob.decoderState\" "
	.ascii "<type 295 "
	.ascii "struct { "
	.ascii ".encoding/gob.dec"
	.ascii " "
	.ascii "<type 296 "
	.ascii "*"
	.ascii "<type 235>"
	.ascii ">"
	.ascii "; "
	.ascii ".encoding/gob.b"
	.ascii " "
	.ascii "<type 240>"
	.ascii "; "
	.ascii ".encoding/gob.fieldnum"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii ".encoding/gob.next"
	.ascii " "
	.ascii "<type 297 "
	.ascii "*"
	.ascii "<type 294>"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "state"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 298 "
	.ascii "*"
	.ascii "<type 294>"
	.ascii ">"
	.ascii ") "
	.ascii ".encoding/gob.getLength"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "state"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 298>"
	.ascii ") "
	.ascii ".encoding/gob.decodeInt"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -4>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "state"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 298>"
	.ascii ") "
	.ascii ".encoding/gob.decodeUint"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<type -8>"
	.ascii ")"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii ", "
	.ascii "v"
	.ascii " "
	.ascii "<type 151>"
	.ascii ")"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".encoding/gob.field"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii ".encoding/gob.index"
	.ascii " "
	.ascii "<type 299 "
	.ascii "["
	.ascii "] "
	.ascii "<type -11>"
	.ascii ">"
	.ascii "; "
	.ascii ".encoding/gob.ovfl"
	.ascii " "
	.ascii "<type -19>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".encoding/gob.numInstr"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".encoding/gob.ignorerCache"
	.ascii " "
	.ascii "<type 300 "
	.ascii "map ["
	.ascii "<type 197>"
	.ascii "] "
	.ascii "<type 283>"
	.ascii ">"
	.ascii "; "
	.ascii ".encoding/gob.freeList"
	.ascii " "
	.ascii "<type 293>"
	.ascii "; "
	.ascii ".encoding/gob.countBuf"
	.ascii " "
	.ascii "<type 301 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii "; "
	.ascii ".encoding/gob.err"
	.ascii " "
	.ascii "<type -19>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "dec"
	.ascii " "
	.ascii "<type 302 "
	.ascii "*"
	.ascii "<type 235>"
	.ascii ">"
	.ascii ") "
	.ascii "Decode"
	.ascii " ("
	.ascii "e"
	.ascii " "
	.ascii "<type 303 "
	.ascii "interface { "
	.ascii "}"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "dec"
	.ascii " "
	.ascii "<type 302>"
	.ascii ") "
	.ascii ".encoding/gob.nextUint"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -8>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "dec"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 302>"
	.ascii ") "
	.ascii ".encoding/gob.readMessage"
	.ascii " ("
	.ascii "nbytes"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "dec"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 302>"
	.ascii ") "
	.ascii ".encoding/gob.recvMessage"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "dec"
	.ascii " "
	.ascii "<type 302>"
	.ascii ") "
	.ascii ".encoding/gob.decodeIgnoredValue"
	.ascii " ("
	.ascii "wireId"
	.ascii " "
	.ascii "<type 197>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "dec"
	.ascii " "
	.ascii "<type 302>"
	.ascii ") "
	.ascii ".encoding/gob.decodeValue"
	.ascii " ("
	.ascii "wireId"
	.ascii " "
	.ascii "<type 197>"
	.ascii ", "
	.ascii "value"
	.ascii " "
	.ascii "<type 151>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "dec"
	.ascii " "
	.ascii "<type 302>"
	.ascii ") "
	.ascii ".encoding/gob.nextInt"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -4>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "dec"
	.ascii " "
	.ascii "<type 302>"
	.ascii ") "
	.ascii ".encoding/gob.getIgnoreEnginePtr"
	.ascii " ("
	.ascii "wireId"
	.ascii " "
	.ascii "<type 197>"
	.ascii ")"
	.ascii " ("
	.ascii "enginePtr"
	.ascii " "
	.ascii "<type 283>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "dec"
	.ascii " "
	.ascii "<type 302>"
	.ascii ") "
	.ascii ".encoding/gob.getDecEnginePtr"
	.ascii " ("
	.ascii "remoteId"
	.ascii " "
	.ascii "<type 197>"
	.ascii ", "
	.ascii "ut"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 224>"
	.ascii ")"
	.ascii " ("
	.ascii "enginePtr"
	.ascii " "
	.ascii "<type 283>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "dec"
	.ascii " "
	.ascii "<type 302>"
	.ascii ") "
	.ascii ".encoding/gob.decodeTypeSequence"
	.ascii " ("
	.ascii "isInterface"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii " "
	.ascii "<type 197>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "dec"
	.ascii " "
	.ascii "<type 302>"
	.ascii ") "
	.ascii ".encoding/gob.compileDec"
	.ascii " ("
	.ascii "remoteId"
	.ascii " "
	.ascii "<type 197>"
	.ascii ", "
	.ascii "ut"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 224>"
	.ascii ")"
	.ascii " ("
	.ascii "engine"
	.ascii " "
	.ascii "<type 284>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "dec"
	.ascii " "
	.ascii "<type 302>"
	.ascii ") "
	.ascii "DecodeValue"
	.ascii " ("
	.ascii "v"
	.ascii " "
	.ascii "<type 151>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "dec"
	.ascii " "
	.ascii "<type 302>"
	.ascii ") "
	.ascii ".encoding/gob.compileIgnoreSingle"
	.ascii " ("
	.ascii "remoteId"
	.ascii " "
	.ascii "<type 197>"
	.ascii ")"
	.ascii " ("
	.ascii "engine"
	.ascii " "
	.ascii "<type 284>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "dec"
	.ascii " "
	.ascii "<type 302>"
	.ascii ") "
	.ascii ".encoding/gob.compileSingle"
	.ascii " ("
	.ascii "remoteId"
	.ascii " "
	.ascii "<type 197>"
	.ascii ", "
	.ascii "ut"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 224>"
	.ascii ")"
	.ascii " ("
	.ascii "engine"
	.ascii " "
	.ascii "<type 284>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "dec"
	.ascii " "
	.ascii "<esc:0x52>"
	.ascii " "
	.ascii "<type 302>"
	.ascii ") "
	.ascii ".encoding/gob.typeString"
	.ascii " ("
	.ascii "remoteId"
	.ascii " "
	.ascii "<type 197>"
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "dec"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 302>"
	.ascii ") "
	.ascii ".encoding/gob.decodeMap"
	.ascii " ("
	.ascii "mtyp"
	.ascii " "
	.ascii "<type 147>"
	.ascii ", "
	.ascii "state"
	.ascii " "
	.ascii "<type 293>"
	.ascii ", "
	.ascii "value"
	.ascii " "
	.ascii "<type 151>"
	.ascii ", "
	.ascii "keyOp"
	.ascii " "
	.ascii "<type 290>"
	.ascii ", "
	.ascii "elemOp"
	.ascii " "
	.ascii "<type 290>"
	.ascii ", "
	.ascii "ovfl"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "dec"
	.ascii " "
	.ascii "<type 302>"
	.ascii ") "
	.ascii ".encoding/gob.recvType"
	.ascii " ("
	.ascii "id"
	.ascii " "
	.ascii "<type 197>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "dec"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 302>"
	.ascii ") "
	.ascii ".encoding/gob.ignoreSlice"
	.ascii " ("
	.ascii "state"
	.ascii " "
	.ascii "<type 293>"
	.ascii ", "
	.ascii "elemOp"
	.ascii " "
	.ascii "<type 290>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "dec"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 302>"
	.ascii ") "
	.ascii ".encoding/gob.ignoreMap"
	.ascii " ("
	.ascii "state"
	.ascii " "
	.ascii "<type 293>"
	.ascii ", "
	.ascii "keyOp"
	.ascii " "
	.ascii "<type 290>"
	.ascii ", "
	.ascii "elemOp"
	.ascii " "
	.ascii "<type 290>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "dec"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 302>"
	.ascii ") "
	.ascii ".encoding/gob.decodeArray"
	.ascii " ("
	.ascii "state"
	.ascii " "
	.ascii "<type 293>"
	.ascii ", "
	.ascii "value"
	.ascii " "
	.ascii "<type 151>"
	.ascii ", "
	.ascii "elemOp"
	.ascii " "
	.ascii "<type 290>"
	.ascii ", "
	.ascii "length"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "ovfl"
	.ascii " "
	.ascii "<type -19>"
	.ascii ", "
	.ascii "helper"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 304 "
	.ascii "\".encoding/gob.decHelper\" "
	.ascii "<type 305 "
	.ascii "("
	.ascii "state"
	.ascii " "
	.ascii "<type 293>"
	.ascii ", "
	.ascii "v"
	.ascii " "
	.ascii "<type 151>"
	.ascii ", "
	.ascii "length"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "ovfl"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ">"
	.ascii ">"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "dec"
	.ascii " "
	.ascii "<type 302>"
	.ascii ") "
	.ascii ".encoding/gob.ignoreStruct"
	.ascii " ("
	.ascii "engine"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 284>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "dec"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 302>"
	.ascii ") "
	.ascii ".encoding/gob.decodeGobDecoder"
	.ascii " ("
	.ascii "ut"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 224>"
	.ascii ", "
	.ascii "state"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 293>"
	.ascii ", "
	.ascii "value"
	.ascii " "
	.ascii "<type 151>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "dec"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 302>"
	.ascii ") "
	.ascii ".encoding/gob.ignoreArrayHelper"
	.ascii " ("
	.ascii "state"
	.ascii " "
	.ascii "<type 293>"
	.ascii ", "
	.ascii "elemOp"
	.ascii " "
	.ascii "<type 290>"
	.ascii ", "
	.ascii "length"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "dec"
	.ascii " "
	.ascii "<type 302>"
	.ascii ") "
	.ascii ".encoding/gob.decodeStruct"
	.ascii " ("
	.ascii "engine"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 284>"
	.ascii ", "
	.ascii "value"
	.ascii " "
	.ascii "<type 151>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "dec"
	.ascii " "
	.ascii "<type 302>"
	.ascii ") "
	.ascii ".encoding/gob.newDecoderState"
	.ascii " ("
	.ascii "buf"
	.ascii " "
	.ascii "<type 240>"
	.ascii ")"
	.ascii " "
	.ascii "<type 293>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "dec"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 302>"
	.ascii ") "
	.ascii ".encoding/gob.freeDecoderState"
	.ascii " ("
	.ascii "d"
	.ascii " "
	.ascii "<type 293>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "dec"
	.ascii " "
	.ascii "<type 302>"
	.ascii ") "
	.ascii ".encoding/gob.decIgnoreOpFor"
	.ascii " ("
	.ascii "wireId"
	.ascii " "
	.ascii "<type 197>"
	.ascii ", "
	.ascii "inProgress"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 306 "
	.ascii "map ["
	.ascii "<type 197>"
	.ascii "] "
	.ascii "<type 307 "
	.ascii "*"
	.ascii "<type 290>"
	.ascii ">"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type 307>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "dec"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 302>"
	.ascii ") "
	.ascii ".encoding/gob.ignoreArray"
	.ascii " ("
	.ascii "state"
	.ascii " "
	.ascii "<type 293>"
	.ascii ", "
	.ascii "elemOp"
	.ascii " "
	.ascii "<type 290>"
	.ascii ", "
	.ascii "length"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "dec"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 302>"
	.ascii ") "
	.ascii ".encoding/gob.gobDecodeOpFor"
	.ascii " ("
	.ascii "ut"
	.ascii " "
	.ascii "<type 224>"
	.ascii ")"
	.ascii " "
	.ascii "<type 307>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "dec"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 302>"
	.ascii ") "
	.ascii ".encoding/gob.decodeSlice"
	.ascii " ("
	.ascii "state"
	.ascii " "
	.ascii "<type 293>"
	.ascii ", "
	.ascii "value"
	.ascii " "
	.ascii "<type 151>"
	.ascii ", "
	.ascii "elemOp"
	.ascii " "
	.ascii "<type 290>"
	.ascii ", "
	.ascii "ovfl"
	.ascii " "
	.ascii "<type -19>"
	.ascii ", "
	.ascii "helper"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 304>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "dec"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 302>"
	.ascii ") "
	.ascii ".encoding/gob.decodeArrayHelper"
	.ascii " ("
	.ascii "state"
	.ascii " "
	.ascii "<type 293>"
	.ascii ", "
	.ascii "value"
	.ascii " "
	.ascii "<type 151>"
	.ascii ", "
	.ascii "elemOp"
	.ascii " "
	.ascii "<type 290>"
	.ascii ", "
	.ascii "length"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "ovfl"
	.ascii " "
	.ascii "<type -19>"
	.ascii ", "
	.ascii "helper"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 304>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "dec"
	.ascii " "
	.ascii "<type 302>"
	.ascii ") "
	.ascii ".encoding/gob.decodeInterface"
	.ascii " ("
	.ascii "ityp"
	.ascii " "
	.ascii "<type 147>"
	.ascii ", "
	.ascii "state"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 293>"
	.ascii ", "
	.ascii "value"
	.ascii " "
	.ascii "<type 151>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "dec"
	.ascii " "
	.ascii "<type 302>"
	.ascii ") "
	.ascii ".encoding/gob.ignoreSingle"
	.ascii " ("
	.ascii "engine"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 284>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "dec"
	.ascii " "
	.ascii "<type 302>"
	.ascii ") "
	.ascii ".encoding/gob.decodeSingle"
	.ascii " ("
	.ascii "engine"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 284>"
	.ascii ", "
	.ascii "value"
	.ascii " "
	.ascii "<type 151>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "dec"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 302>"
	.ascii ") "
	.ascii ".encoding/gob.ignoreGobDecoder"
	.ascii " ("
	.ascii "state"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 293>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "dec"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 302>"
	.ascii ") "
	.ascii ".encoding/gob.compatibleType"
	.ascii " ("
	.ascii "fr"
	.ascii " "
	.ascii "<type 147>"
	.ascii ", "
	.ascii "fw"
	.ascii " "
	.ascii "<type 197>"
	.ascii ", "
	.ascii "inProgress"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 308 "
	.ascii "map ["
	.ascii "<type 147>"
	.ascii "] "
	.ascii "<type 197>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "dec"
	.ascii " "
	.ascii "<type 302>"
	.ascii ") "
	.ascii ".encoding/gob.ignoreInterface"
	.ascii " ("
	.ascii "state"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 293>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "dec"
	.ascii " "
	.ascii "<type 302>"
	.ascii ") "
	.ascii ".encoding/gob.decOpFor"
	.ascii " ("
	.ascii "wireId"
	.ascii " "
	.ascii "<type 197>"
	.ascii ", "
	.ascii "rt"
	.ascii " "
	.ascii "<type 147>"
	.ascii ", "
	.ascii "name"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "inProgress"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 309 "
	.ascii "map ["
	.ascii "<type 147>"
	.ascii "] "
	.ascii "<type 307>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type 307>"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".command-line-arguments.errorC"
	.ascii " "
	.ascii "<type 13>"
	.ascii "; "
	.ascii ".command-line-arguments.errorW"
	.ascii " "
	.ascii "<type 142>"
	.ascii "; "
	.ascii ".command-line-arguments.dataC"
	.ascii " "
	.ascii "<type 13>"
	.ascii "; "
	.ascii ".command-line-arguments.tornDown"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii ".command-line-arguments.ctx"
	.ascii " "
	.ascii "<type 310 "
	.ascii "\"context.Context\" "
	.ascii "<type 311 "
	.ascii "interface { "
	.ascii "Deadline"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "("
	.ascii "deadline"
	.ascii " "
	.ascii "<type 19>"
	.ascii ", "
	.ascii "ok"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii "; "
	.ascii "Done"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 312 "
	.ascii "chan "
	.ascii "<- "
	.ascii "<type 313 "
	.ascii "struct { "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii "Err"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii "; "
	.ascii "Value"
	.ascii " ("
	.ascii "key"
	.ascii " "
	.ascii "<type 314 "
	.ascii "interface { "
	.ascii "}"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type 315 "
	.ascii "interface { "
	.ascii "}"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".command-line-arguments.cancel"
	.ascii " "
	.ascii "<type 316 "
	.ascii "("
	.ascii ")"
	.ascii ">"
	.ascii "; "
	.ascii ".command-line-arguments.mutex"
	.ascii " "
	.ascii "<type 60>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "ss"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 317 "
	.ascii "*"
	.ascii "<type 8>"
	.ascii ">"
	.ascii ") "
	.ascii "ToString"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "ss"
	.ascii " "
	.ascii "<type 317>"
	.ascii ") "
	.ascii "TearDown"
	.ascii " ("
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "ss"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 317>"
	.ascii ") "
	.ascii "SendError"
	.ascii " ("
	.ascii "ctx"
	.ascii " "
	.ascii "<type 310>"
	.ascii ", "
	.ascii "code"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "message"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "ss"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 317>"
	.ascii ") "
	.ascii "SendInternalError"
	.ascii " ("
	.ascii "ctx"
	.ascii " "
	.ascii "<type 310>"
	.ascii ")"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "u"
	.ascii " "
	.ascii "<esc:0x22>"
	.ascii " "
	.ascii "<type 318 "
	.ascii "*"
	.ascii "<type 3>"
	.ascii ">"
	.ascii ") "
	.ascii "User"
	.ascii " ("
	.ascii "ctx"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 310>"
	.ascii ")"
	.ascii " "
	.ascii "<type 319 "
	.ascii "\"github.com/spolu/warp.User\" "
	.ascii "<type 320 "
	.ascii "struct { "
	.ascii "Token"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "Username"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "Mode"
	.ascii " "
	.ascii "<type 5>"
	.ascii "; "
	.ascii "Hosting"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ";\n"
	.ascii ">"
	.ascii "; "
	.ascii ".command-line-arguments.session"
	.ascii " "
	.ascii "<type 7>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "h"
	.ascii " "
	.ascii "<esc:0x22>"
	.ascii " "
	.ascii "<type 321 "
	.ascii "*"
	.ascii "<type 1>"
	.ascii ">"
	.ascii ") "
	.ascii "User"
	.ascii " ("
	.ascii "ctx"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 310>"
	.ascii ")"
	.ascii " "
	.ascii "<type 319>"
	.ascii ";\n"
	.ascii ">"
	.ascii ";\n"
	.ascii "func "
	.ascii "NewSession"
	.ascii " ("
	.ascii "ctx"
	.ascii " "
	.ascii "<type 310>"
	.ascii ", "
	.ascii "cancel"
	.ascii " "
	.ascii "<type 322 "
	.ascii "("
	.ascii ")"
	.ascii ">"
	.ascii ", "
	.ascii "conn"
	.ascii " "
	.ascii "<type 13>"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 7>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii "func "
	.ascii "NewSrv"
	.ascii " ("
	.ascii "ctx"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 310>"
	.ascii ", "
	.ascii "address"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "certFile"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "keyFile"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " "
	.ascii "<type 323 "
	.ascii "*"
	.ascii "<type 324 "
	.ascii "\"Srv\" "
	.ascii "<type 325 "
	.ascii "struct { "
	.ascii ".command-line-arguments.address"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii ".command-line-arguments.certFile"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii ".command-line-arguments.keyFile"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii ".command-line-arguments.warps"
	.ascii " "
	.ascii "<type 326 "
	.ascii "map ["
	.ascii "<type -16>"
	.ascii "] "
	.ascii "<type 327 "
	.ascii "*"
	.ascii "<type 328 "
	.ascii "\"Warp\" "
	.ascii "<type 329 "
	.ascii "struct { "
	.ascii ".command-line-arguments.token"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii ".command-line-arguments.windowSize"
	.ascii " "
	.ascii "<type 330 "
	.ascii "\"github.com/spolu/warp.Size\" "
	.ascii "<type 331 "
	.ascii "struct { "
	.ascii "Rows"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii "Cols"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".command-line-arguments.host"
	.ascii " "
	.ascii "<type 332 "
	.ascii "*"
	.ascii "<type 1>"
	.ascii ">"
	.ascii "; "
	.ascii ".command-line-arguments.clients"
	.ascii " "
	.ascii "<type 333 "
	.ascii "map ["
	.ascii "<type -16>"
	.ascii "] "
	.ascii "<type 334 "
	.ascii "*"
	.ascii "<type 3>"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".command-line-arguments.data"
	.ascii " "
	.ascii "<type 335 "
	.ascii "chan "
	.ascii "<type 336 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".command-line-arguments.mutex"
	.ascii " "
	.ascii "<type 60>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "w"
	.ascii " "
	.ascii "<esc:0x2a>"
	.ascii " "
	.ascii "<type 337 "
	.ascii "*"
	.ascii "<type 328>"
	.ascii ">"
	.ascii ") "
	.ascii "State"
	.ascii " ("
	.ascii "ctx"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 310>"
	.ascii ")"
	.ascii " "
	.ascii "<type 338 "
	.ascii "\"github.com/spolu/warp.State\" "
	.ascii "<type 339 "
	.ascii "struct { "
	.ascii "Warp"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "WindowSize"
	.ascii " "
	.ascii "<type 330>"
	.ascii "; "
	.ascii "Users"
	.ascii " "
	.ascii "<type 340 "
	.ascii "map ["
	.ascii "<type -16>"
	.ascii "] "
	.ascii "<type 319>"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "w"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 337>"
	.ascii ") "
	.ascii "CientSessions"
	.ascii " ("
	.ascii "ctx"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 310>"
	.ascii ")"
	.ascii " "
	.ascii "<type 341 "
	.ascii "["
	.ascii "] "
	.ascii "<type 7>"
	.ascii ">"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "w"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 337>"
	.ascii ") "
	.ascii ".command-line-arguments.updateClientSessions"
	.ascii " ("
	.ascii "ctx"
	.ascii " "
	.ascii "<type 310>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "w"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 337>"
	.ascii ") "
	.ascii ".command-line-arguments.updateHost"
	.ascii " ("
	.ascii "ctx"
	.ascii " "
	.ascii "<type 310>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "w"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 337>"
	.ascii ") "
	.ascii ".command-line-arguments.rcvShellClientData"
	.ascii " ("
	.ascii "ctx"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 310>"
	.ascii ", "
	.ascii "ss"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 7>"
	.ascii ", "
	.ascii "data"
	.ascii " "
	.ascii "<type 342 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "w"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 337>"
	.ascii ") "
	.ascii ".command-line-arguments.rcvHostData"
	.ascii " ("
	.ascii "ctx"
	.ascii " "
	.ascii "<type 310>"
	.ascii ", "
	.ascii "ss"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 7>"
	.ascii ", "
	.ascii "data"
	.ascii " "
	.ascii "<type 343 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "w"
	.ascii " "
	.ascii "<type 337>"
	.ascii ") "
	.ascii ".command-line-arguments.handleHost"
	.ascii " ("
	.ascii "ctx"
	.ascii " "
	.ascii "<type 310>"
	.ascii ", "
	.ascii "ss"
	.ascii " "
	.ascii "<type 7>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "w"
	.ascii " "
	.ascii "<type 337>"
	.ascii ") "
	.ascii ".command-line-arguments.handleShellClient"
	.ascii " ("
	.ascii "ctx"
	.ascii " "
	.ascii "<type 310>"
	.ascii ", "
	.ascii "ss"
	.ascii " "
	.ascii "<type 7>"
	.ascii ")"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".command-line-arguments.mutex"
	.ascii " "
	.ascii "<type 60>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<type 344 "
	.ascii "*"
	.ascii "<type 324>"
	.ascii ">"
	.ascii ") "
	.ascii "Run"
	.ascii " ("
	.ascii "ctx"
	.ascii " "
	.ascii "<type 310>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 344>"
	.ascii ") "
	.ascii ".command-line-arguments.handle"
	.ascii " ("
	.ascii "ctx"
	.ascii " "
	.ascii "<type 310>"
	.ascii ", "
	.ascii "conn"
	.ascii " "
	.ascii "<type 13>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 344>"
	.ascii ") "
	.ascii ".command-line-arguments.handleHost"
	.ascii " ("
	.ascii "ctx"
	.ascii " "
	.ascii "<type 310>"
	.ascii ", "
	.ascii "ss"
	.ascii " "
	.ascii "<type 7>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 344>"
	.ascii ") "
	.ascii ".command-line-arguments.handleShellClient"
	.ascii " ("
	.ascii "ctx"
	.ascii " "
	.ascii "<type 310>"
	.ascii ", "
	.ascii "ss"
	.ascii " "
	.ascii "<type 7>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii ";\n"
	.ascii "type "
	.ascii "<type 8>"
	.ascii ";\n"
	.ascii "type "
	.ascii "<type 324>"
	.ascii ";\n"
	.ascii "type "
	.ascii "<type 3>"
	.ascii ";\n"
	.ascii "type "
	.ascii "<type 328>"
	.ascii ";\n"
	.ascii "checksum 29E5AAE0BDAFAA372BB1677598B1B518ABDB0706;\n"
	.text


	.file	1 "<built-in>"
	.section	.text.command_line_arguments.Session.SendError,"ax",@progbits
	.globl	command_line_arguments.Session.SendError
	.p2align	4, 0x90
	.type	command_line_arguments.Session.SendError,@function
command_line_arguments.Session.SendError:
.Lfunc_begin0:
	.file	2 "./session.go"
	.loc	2 152 0
	.cfi_startproc
	.cfi_personality 3, __gccgo_personality_v0
	.cfi_lsda 3, .Lexception0
	leaq	-360(%rsp), %r11
	cmpq	%fs:112, %r11
	ja	.LBB0_2
	movq	%r10, %rax
	movabsq	$360, %r10
	movabsq	$16, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB0_2:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$312, %rsp
	.cfi_def_cfa_offset 368
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%r8, 48(%rsp)
	movq	%rcx, %r13
	movq	%rdx, 40(%rsp)
	movq	%rsi, 32(%rsp)
	movq	%rdi, %rbx
	movb	$0, 27(%rsp)
.Ltmp43:
	.loc	2 157 4 prologue_end
	testq	%rdi, %rdi
	jne	.LBB0_4
.Ltmp44:
.Ltmp0:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp1:
.Ltmp45:
.LBB0_4:
	movq	240(%rbx), %rdi
.Ltmp2:
	.loc	2 157 10 is_stmt 0
	callq	sync.Mutex.Lock
.Ltmp3:
.Ltmp46:
	.loc	2 158 10 is_stmt 1
	movq	240(%rbx), %rax
	.loc	2 158 2 is_stmt 0
	movq	%rax, 56(%rsp)
.Ltmp4:
	leaq	27(%rsp), %rdi
	leaq	56(%rsp), %rdx
	movl	$command_line_arguments.command_line_arguments..thunk3, %esi
	callq	runtime.deferproc
.Ltmp5:
.Ltmp47:
	.loc	2 0 2
	testb	$1, 208(%rbx)
	jne	.LBB0_21
.Ltmp48:
.Ltmp6:
	movb	$1, %al
	.loc	2 164 5 is_stmt 1
	movl	%eax, 28(%rsp)
	movq	%rbx, %rdi
	callq	command_line_arguments.Session.ToString
.Ltmp7:
.Ltmp49:
	.loc	2 0 5 is_stmt 0
	movq	%rax, %rbp
	movq	%rdx, %r14
.Ltmp8:
	.loc	2 162 10 is_stmt 1
	movl	$string..d, %edi
	callq	runtime.newobject
.Ltmp9:
.Ltmp50:
	.loc	2 0 10 is_stmt 0
	movq	%rax, %r12
	movq	%rbp, 144(%rsp)
	movq	%r14, 152(%rsp)
.Ltmp10:
	leaq	144(%rsp), %rdx
	.loc	2 162 10
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
.Ltmp11:
.Ltmp51:
.Ltmp12:
	movl	$string..d, %edi
	callq	runtime.newobject
.Ltmp13:
.Ltmp52:
	.loc	2 0 10
	movq	%rax, %r14
	movq	%r13, 128(%rsp)
	movq	48(%rsp), %rax
	movq	%rax, 136(%rsp)
.Ltmp14:
	leaq	128(%rsp), %rdx
	.loc	2 162 10
	movl	$string..d, %edi
	movq	%r14, %rsi
	callq	runtime.typedmemmove
.Ltmp15:
.Ltmp53:
.Ltmp16:
	movl	$string..d, %edi
	callq	runtime.newobject
.Ltmp17:
.Ltmp54:
	.loc	2 0 10
	movq	%rax, %r15
	leaq	368(%rsp), %rbp
	movups	(%rbp), %xmm0
	movaps	%xmm0, 256(%rsp)
.Ltmp18:
	leaq	256(%rsp), %rdx
	.loc	2 162 10
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
.Ltmp19:
.Ltmp55:
	movq	$string..d, 192(%rsp)
	movq	%r12, 200(%rsp)
	movq	$string..d, 208(%rsp)
	movq	%r14, 216(%rsp)
	movq	$string..d, 224(%rsp)
	movq	%r15, 232(%rsp)
	leaq	192(%rsp), %rax
	movq	%rax, 64(%rsp)
	movq	$3, 72(%rsp)
	movq	$3, 80(%rsp)
.Ltmp20:
	movq	80(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	64(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.67, %edx
	movl	$52, %ecx
	movq	32(%rsp), %rdi
	movq	40(%rsp), %rsi
	callq	github_com_spolu_warp_lib_logging.Logf
.Ltmp21:
.Ltmp56:
	.loc	2 166 34 is_stmt 1
	movups	(%rbp), %xmm0
	movaps	%xmm0, 240(%rsp)
	.loc	2 166 14 is_stmt 0
	movq	184(%rbx), %r14
.Ltmp22:
	.loc	2 166 34
	movl	$github_com_spolu_warp.Error..d, %edi
	callq	runtime.newobject
.Ltmp23:
.Ltmp57:
	.loc	2 0 34
	movq	%rax, %rbp
	movq	%r13, 280(%rsp)
	movq	48(%rsp), %rax
	movq	%rax, 288(%rsp)
	movaps	240(%rsp), %xmm0
	movups	%xmm0, 296(%rsp)
.Ltmp24:
	leaq	280(%rsp), %rdx
	.loc	2 166 34
	movl	$github_com_spolu_warp.Error..d, %edi
	movq	%rbp, %rsi
	callq	runtime.typedmemmove
.Ltmp25:
.Ltmp58:
.Ltmp26:
	.loc	2 166 21
	movl	$github_com_spolu_warp.Error..d, %esi
	movq	%r14, %rdi
	movq	%rbp, %rdx
	callq	encoding_gob.Encoder.Encode
.Ltmp27:
.Ltmp59:
	.loc	2 0 21
	movq	%rax, %rbp
	.loc	2 169 10 is_stmt 1
	testq	%rax, %rax
	je	.LBB0_19
.Ltmp60:
	.loc	2 0 10 is_stmt 0
	movq	%rdx, %r14
.Ltmp28:
	.loc	2 172 6 is_stmt 1
	movq	%rbx, %rdi
	callq	command_line_arguments.Session.ToString
.Ltmp29:
.Ltmp61:
	.loc	2 0 6 is_stmt 0
	movq	%rax, %r15
	movq	%rdx, %r12
.Ltmp30:
	.loc	2 170 11 is_stmt 1
	movl	$string..d, %edi
	callq	runtime.newobject
.Ltmp31:
.Ltmp62:
	.loc	2 0 11 is_stmt 0
	movq	%rax, %rbx
.Ltmp63:
	movq	%r15, 112(%rsp)
	movq	%r12, 120(%rsp)
.Ltmp32:
	leaq	112(%rsp), %rdx
	.loc	2 170 11
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
.Ltmp33:
.Ltmp64:
	.loc	2 172 19 is_stmt 1
	movq	(%rbp), %rax
	.loc	2 170 11
	movq	$string..d, 160(%rsp)
	movq	%rbx, 168(%rsp)
	movq	%rax, 176(%rsp)
	movq	%r14, 184(%rsp)
	leaq	160(%rsp), %rax
	movq	%rax, 88(%rsp)
	movq	$2, 96(%rsp)
	movq	$2, 104(%rsp)
.Ltmp34:
	movq	104(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	88(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.69, %edx
	movl	$48, %ecx
	movq	32(%rsp), %rdi
	movq	40(%rsp), %rsi
	callq	github_com_spolu_warp_lib_logging.Logf
.Ltmp35:
.Ltmp65:
	.loc	2 0 11 is_stmt 0
	leaq	27(%rsp), %rbp
.Ltmp66:
	jmp	.LBB0_29
.Ltmp67:
.LBB0_19:
	leaq	27(%rsp), %rbp
	jmp	.LBB0_29
.Ltmp68:
.LBB0_20:
.Ltmp36:
.Ltmp37:
	leaq	27(%rsp), %rdi
	.loc	2 175 1 is_stmt 1
	callq	runtime.checkdefer
.Ltmp38:
.Ltmp69:
.LBB0_21:
	.loc	2 0 1 is_stmt 0
	movb	$1, %al
	movl	%eax, 28(%rsp)
	leaq	27(%rsp), %rbp
	jmp	.LBB0_29
.Ltmp70:
.LBB0_27:
.Ltmp39:
	movq	%rax, %rbx
	movl	$0, 28(%rsp)
	leaq	27(%rsp), %rbp
	jmp	.LBB0_29
.Ltmp71:
.LBB0_28:
.Ltmp42:
	.loc	2 175 1
	movq	%rbp, %rdi
	callq	runtime.checkdefer
.Ltmp72:
	.p2align	4, 0x90
.LBB0_29:
.Ltmp40:
	movq	%rbp, %rdi
	callq	runtime.deferreturn
.Ltmp41:
.Ltmp73:
	.loc	2 0 1
	cmpb	$0, 28(%rsp)
	je	.LBB0_32
.Ltmp74:
	.loc	2 160 3 is_stmt 1
	addq	$312, %rsp
.Ltmp75:
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
.Ltmp76:
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp77:
.LBB0_32:
	.cfi_def_cfa_offset 368
	.loc	2 0 3 is_stmt 0
	movq	%rbx, %rdi
	callq	_Unwind_Resume
.Lfunc_end0:
	.size	command_line_arguments.Session.SendError, .Lfunc_end0-command_line_arguments.Session.SendError
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table0:
.Lexception0:
	.byte	255
	.byte	3
	.uleb128 .Lttbase0-.Lttbaseref0
.Lttbaseref0:
	.byte	1
	.uleb128 .Lcst_end0-.Lcst_begin0
.Lcst_begin0:
	.uleb128 .Lfunc_begin0-.Lfunc_begin0
	.uleb128 .Ltmp0-.Lfunc_begin0
	.byte	0
	.byte	0
	.uleb128 .Ltmp0-.Lfunc_begin0
	.uleb128 .Ltmp35-.Ltmp0
	.uleb128 .Ltmp36-.Lfunc_begin0
	.byte	1
	.uleb128 .Ltmp37-.Lfunc_begin0
	.uleb128 .Ltmp38-.Ltmp37
	.uleb128 .Ltmp39-.Lfunc_begin0
	.byte	0
	.uleb128 .Ltmp38-.Lfunc_begin0
	.uleb128 .Ltmp40-.Ltmp38
	.byte	0
	.byte	0
	.uleb128 .Ltmp40-.Lfunc_begin0
	.uleb128 .Ltmp41-.Ltmp40
	.uleb128 .Ltmp42-.Lfunc_begin0
	.byte	1
	.uleb128 .Ltmp41-.Lfunc_begin0
	.uleb128 .Lfunc_end0-.Ltmp41
	.byte	0
	.byte	0
.Lcst_end0:
	.byte	1
	.byte	0
	.p2align	2
	.long	0
.Lttbase0:
	.p2align	2

	.section	.text.command_line_arguments.Session.SendInternalError,"ax",@progbits
	.globl	command_line_arguments.Session.SendInternalError
	.p2align	4, 0x90
	.type	command_line_arguments.Session.SendInternalError,@function
command_line_arguments.Session.SendInternalError:
.Lfunc_begin1:
	.loc	2 179 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB1_2
	movq	%r10, %rax
	movabsq	$152, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB1_2:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$104, %rsp
	.cfi_def_cfa_offset 160
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rdx, %r14
	movq	%rsi, %r15
	movq	%rdi, %r12
.Ltmp78:
	.loc	2 186 6 prologue_end
	callq	command_line_arguments.Session.ToString
	movq	%rax, %rbx
	movq	%rdx, %r13
	.loc	2 184 7
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbp
	movq	%rbx, 88(%rsp)
	movq	%r13, 96(%rsp)
	leaq	88(%rsp), %rdx
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movq	$string..d, 72(%rsp)
	movq	%rbp, 80(%rsp)
	leaq	72(%rsp), %rax
	movq	%rax, 32(%rsp)
	movq	$1, 40(%rsp)
	movq	$1, 48(%rsp)
	movq	48(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	32(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.71, %edi
	movl	$53, %esi
	callq	fmt.Sprintf
	movq	%rax, 56(%rsp)
	movq	%rdx, 64(%rsp)
	.loc	2 182 4
	movups	56(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.73, %ecx
	movl	$14, %r8d
	movq	%r12, %rdi
	movq	%r15, %rsi
.Ltmp79:
	movq	%r14, %rdx
.Ltmp80:
	callq	command_line_arguments.Session.SendError
.Ltmp81:
	.loc	2 0 4 is_stmt 0
	addq	$104, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
.Ltmp82:
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp83:
.Lfunc_end1:
	.size	command_line_arguments.Session.SendInternalError, .Lfunc_end1-command_line_arguments.Session.SendInternalError
	.cfi_endproc

	.section	.text.command_line_arguments.Session.TearDown,"ax",@progbits
	.globl	command_line_arguments.Session.TearDown
	.p2align	4, 0x90
	.type	command_line_arguments.Session.TearDown,@function
command_line_arguments.Session.TearDown:
.Lfunc_begin2:
	.loc	2 134 0 is_stmt 1
	.cfi_startproc
	.cfi_personality 3, __gccgo_personality_v0
	.cfi_lsda 3, .Lexception1
	cmpq	%fs:112, %rsp
	ja	.LBB2_2
	movq	%r10, %rax
	movabsq	$88, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB2_2:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	subq	$56, %rsp
	.cfi_def_cfa_offset 96
	.cfi_offset %rbx, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rdi, %rbx
	movb	$0, 15(%rsp)
.Ltmp84:
.Ltmp125:
	.loc	2 134 1 prologue_end
	movl	$type...1command_line_arguments.Session, %edi
	callq	runtime.newobject
.Ltmp85:
.Ltmp126:
	.loc	2 0 1 is_stmt 0
	movq	%rax, %r15
	movq	%rbx, 32(%rsp)
.Ltmp86:
.Ltmp127:
	leaq	32(%rsp), %rdx
	.loc	2 134 1
	movl	$type...1command_line_arguments.Session, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
.Ltmp87:
.Ltmp128:
	.loc	2 135 2 is_stmt 1
	movq	(%r15), %rbx
.Ltmp129:
	.loc	2 135 4 is_stmt 0
	testq	%rbx, %rbx
	jne	.LBB2_6
.Ltmp130:
.Ltmp88:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp89:
.Ltmp131:
.LBB2_6:
	movq	240(%rbx), %rdi
.Ltmp90:
	.loc	2 135 10
	callq	sync.Mutex.Lock
.Ltmp91:
.Ltmp132:
	.loc	2 136 8 is_stmt 1
	movq	(%r15), %rbx
	.loc	2 136 10 is_stmt 0
	testq	%rbx, %rbx
	jne	.LBB2_9
.Ltmp133:
.Ltmp92:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp93:
.Ltmp134:
.LBB2_9:
	movq	240(%rbx), %rax
	.loc	2 136 2
	movq	%rax, 24(%rsp)
.Ltmp94:
	leaq	15(%rsp), %rdi
	leaq	24(%rsp), %rdx
	movl	$command_line_arguments.command_line_arguments..thunk1, %esi
	callq	runtime.deferproc
.Ltmp95:
.Ltmp135:
	.loc	2 137 6 is_stmt 1
	movq	(%r15), %rbx
	.loc	2 137 8 is_stmt 0
	testq	%rbx, %rbx
	jne	.LBB2_12
.Ltmp136:
.Ltmp96:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp97:
.Ltmp137:
.LBB2_12:
	.loc	2 0 8
	movb	$1, %bpl
	.loc	2 137 5
	cmpb	$0, 208(%rbx)
	je	.LBB2_16
.Ltmp138:
	.loc	2 0 5
	leaq	15(%rsp), %rbx
	jmp	.LBB2_35
.Ltmp139:
.LBB2_16:
	.loc	2 138 3 is_stmt 1
	movq	(%r15), %rbx
	.loc	2 138 5 is_stmt 0
	testq	%rbx, %rbx
	jne	.LBB2_18
.Ltmp140:
.Ltmp98:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp99:
.Ltmp141:
.LBB2_18:
	.loc	2 138 15
	movb	$1, 208(%rbx)
	.loc	2 139 3 is_stmt 1
	movq	(%r15), %rax
	.loc	2 139 5 is_stmt 0
	testq	%rax, %rax
	je	.LBB2_20
.Ltmp142:
	movq	232(%rax), %rcx
	movq	(%rcx), %rbx
	jmp	.LBB2_24
.Ltmp143:
.LBB2_20:
.Ltmp100:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp101:
.Ltmp144:
	.loc	2 139 3
	movq	(%r15), %rax
	.loc	2 139 5
	movq	232, %rcx
	movq	(%rcx), %rbx
	testq	%rax, %rax
	jne	.LBB2_24
.Ltmp145:
.Ltmp102:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp103:
.Ltmp146:
	.loc	2 0 5
	xorl	%eax, %eax
.Ltmp147:
.LBB2_24:
	.loc	2 139 5
	movq	232(%rax), %r10
.Ltmp104:
	callq	*%rbx
.Ltmp105:
.Ltmp148:
.Ltmp106:
	.loc	2 140 6 is_stmt 1
	movl	$type..struct.4.4x.5.f.f.0.1.4void.5.2.command_line_arguments.ss1.0.1.1command_line_arguments.Session.5, %edi
	callq	runtime.newobject
.Ltmp107:
.Ltmp149:
	movq	%rax, %r14
	movq	$command_line_arguments..1command_line_arguments.Session.TearDown..func1, 40(%rsp)
	movq	%r15, 48(%rsp)
.Ltmp108:
	leaq	40(%rsp), %rdx
	movl	$type..struct.4.4x.5.f.f.0.1.4void.5.2.command_line_arguments.ss1.0.1.1command_line_arguments.Session.5, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
.Ltmp109:
.Ltmp150:
	.loc	2 140 3 is_stmt 0
	testq	%r14, %r14
	jne	.LBB2_29
.Ltmp151:
.Ltmp110:
	movl	$11, %edi
	callq	__go_runtime_error
.Ltmp111:
.Ltmp152:
.LBB2_29:
.Ltmp112:
	movl	$type..struct.4.4x.5fn.0func.8.9.8.9.5, %edi
	callq	runtime.newobject
.Ltmp113:
.Ltmp153:
	movq	%rax, %rbx
	movq	%r14, 16(%rsp)
.Ltmp114:
	leaq	16(%rsp), %rdx
	movl	$type..struct.4.4x.5fn.0func.8.9.8.9.5, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
.Ltmp115:
.Ltmp154:
.Ltmp116:
	movl	$command_line_arguments.command_line_arguments..thunk2, %edi
	movq	%rbx, %rsi
	callq	__go_go
.Ltmp117:
.Ltmp155:
	.loc	2 0 3
	leaq	15(%rsp), %rbx
	jmp	.LBB2_35
.Ltmp156:
.LBB2_14:
.Ltmp118:
.Ltmp119:
	leaq	15(%rsp), %rdi
	.loc	2 148 1 is_stmt 1
	callq	runtime.checkdefer
.Ltmp120:
	.loc	2 0 1 is_stmt 0
	movb	$1, %bpl
	leaq	15(%rsp), %rbx
	jmp	.LBB2_35
.LBB2_33:
.Ltmp121:
	movq	%rax, %r14
	xorl	%ebp, %ebp
	leaq	15(%rsp), %rbx
	jmp	.LBB2_35
.LBB2_34:
.Ltmp124:
	.loc	2 148 1
	movq	%rbx, %rdi
	callq	runtime.checkdefer
	.p2align	4, 0x90
.LBB2_35:
.Ltmp122:
	movq	%rbx, %rdi
	callq	runtime.deferreturn
.Ltmp123:
.Ltmp157:
	.loc	2 0 1
	testb	%bpl, %bpl
	je	.LBB2_38
	addq	$56, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB2_38:
	.cfi_def_cfa_offset 96
	movq	%r14, %rdi
	callq	_Unwind_Resume
.Lfunc_end2:
	.size	command_line_arguments.Session.TearDown, .Lfunc_end2-command_line_arguments.Session.TearDown
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table2:
.Lexception1:
	.byte	255
	.byte	3
	.uleb128 .Lttbase1-.Lttbaseref1
.Lttbaseref1:
	.byte	1
	.uleb128 .Lcst_end1-.Lcst_begin1
.Lcst_begin1:
	.uleb128 .Lfunc_begin2-.Lfunc_begin2
	.uleb128 .Ltmp84-.Lfunc_begin2
	.byte	0
	.byte	0
	.uleb128 .Ltmp84-.Lfunc_begin2
	.uleb128 .Ltmp117-.Ltmp84
	.uleb128 .Ltmp118-.Lfunc_begin2
	.byte	1
	.uleb128 .Ltmp119-.Lfunc_begin2
	.uleb128 .Ltmp120-.Ltmp119
	.uleb128 .Ltmp121-.Lfunc_begin2
	.byte	0
	.uleb128 .Ltmp120-.Lfunc_begin2
	.uleb128 .Ltmp122-.Ltmp120
	.byte	0
	.byte	0
	.uleb128 .Ltmp122-.Lfunc_begin2
	.uleb128 .Ltmp123-.Ltmp122
	.uleb128 .Ltmp124-.Lfunc_begin2
	.byte	1
	.uleb128 .Ltmp123-.Lfunc_begin2
	.uleb128 .Lfunc_end2-.Ltmp123
	.byte	0
	.byte	0
.Lcst_end1:
	.byte	1
	.byte	0
	.p2align	2
	.long	0
.Lttbase1:
	.p2align	2

	.section	.text.command_line_arguments.Session.ToString,"ax",@progbits
	.globl	command_line_arguments.Session.ToString
	.p2align	4, 0x90
	.type	command_line_arguments.Session.ToString,@function
command_line_arguments.Session.ToString:
.Lfunc_begin3:
	.loc	2 127 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB3_2
	movq	%r10, %rax
	movabsq	$216, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB3_2:
.Ltmp158:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	subq	$192, %rsp
	.cfi_def_cfa_offset 224
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	.loc	2 129 17 prologue_end
	testq	%rdi, %rdi
	je	.LBB3_4
.Ltmp159:
	.loc	2 0 17 is_stmt 0
	movups	48(%rdi), %xmm0
	movaps	%xmm0, 176(%rsp)
	movups	16(%rdi), %xmm0
	movaps	%xmm0, 160(%rsp)
	movups	(%rdi), %xmm0
	movaps	%xmm0, 144(%rsp)
	.loc	2 128 13 is_stmt 1
	movl	$string..d, %edi
.Ltmp160:
	callq	runtime.newobject
	movq	%rax, %r14
	movaps	176(%rsp), %xmm0
	movaps	%xmm0, 128(%rsp)
	leaq	128(%rsp), %rdx
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %r15
	movaps	160(%rsp), %xmm0
	movaps	%xmm0, 112(%rsp)
	leaq	112(%rsp), %rdx
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
	movaps	144(%rsp), %xmm0
	movaps	%xmm0, 96(%rsp)
	leaq	96(%rsp), %rdx
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movq	$string..d, 48(%rsp)
	movq	%r14, 56(%rsp)
	movq	$string..d, 64(%rsp)
	movq	%r15, 72(%rsp)
	movq	$string..d, 80(%rsp)
	movq	%rbx, 88(%rsp)
	leaq	48(%rsp), %rax
	movq	%rax, 24(%rsp)
	movq	$3, 32(%rsp)
	movq	$3, 40(%rsp)
	movq	40(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	24(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.59, %edi
	movl	$8, %esi
	callq	fmt.Sprintf
	.loc	2 128 2 is_stmt 0
	addq	$192, %rsp
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB3_4:
	.cfi_def_cfa_offset 224
.Ltmp161:
	.loc	2 129 17 is_stmt 1
	movl	$6, %edi
.Ltmp162:
	callq	__go_runtime_error
.Ltmp163:
.Lfunc_end3:
	.size	command_line_arguments.Session.ToString, .Lfunc_end3-command_line_arguments.Session.ToString
	.cfi_endproc

	.section	.text.command_line_arguments.NewSession,"ax",@progbits
	.globl	command_line_arguments.NewSession
	.p2align	4, 0x90
	.type	command_line_arguments.NewSession,@function
command_line_arguments.NewSession:
.Lfunc_begin4:
	.loc	2 46 0
	.cfi_startproc
	leaq	-1064(%rsp), %r11
	cmpq	%fs:112, %r11
	ja	.LBB4_2
	movq	%r10, %rax
	movabsq	$1064, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB4_2:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$1016, %rsp
	.cfi_def_cfa_offset 1072
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%r9, %r15
	movq	%r8, %r12
	movq	%rcx, %r13
	movq	%rdx, %rbx
	movq	%rsi, %r14
	movq	%rdi, %rbp
.Ltmp164:
	.loc	2 51 27 prologue_end
	testq	%r8, %r8
	je	.LBB4_3
.Ltmp165:
	movq	(%r12), %rsi
	jmp	.LBB4_4
.Ltmp166:
.LBB4_3:
	.loc	2 0 27 is_stmt 0
	xorl	%esi, %esi
.Ltmp167:
.LBB4_4:
	.loc	2 51 27
	movl	$io.ReadWriteCloser..d, %edi
	callq	runtime.requireitab
	leaq	456(%rsp), %rdi
	.loc	2 51 20
	xorl	%ecx, %ecx
	movq	%rax, %rsi
	movq	%r15, %rdx
	callq	github_com_spolu_warp_vendor_github_com_hashicorp_yamux.Server
	movq	464(%rsp), %rax
.Ltmp168:
	.loc	2 52 9 is_stmt 1
	testq	%rax, %rax
	je	.LBB4_5
.Ltmp169:
	.loc	2 51 20
	movq	472(%rsp), %rcx
	.loc	2 54 33
	movq	(%rax), %rax
.Ltmp170:
	.loc	2 54 11 is_stmt 0
	movq	%rax, 440(%rsp)
	movq	%rcx, 448(%rsp)
	leaq	440(%rsp), %rax
	movq	%rax, 88(%rsp)
	movq	$1, 96(%rsp)
	movq	$1, 104(%rsp)
	movq	104(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	88(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.39, %edi
	movl	$13, %esi
	callq	github_com_spolu_warp_lib_errors.Newf
	.loc	2 53 22 is_stmt 1
	movq	%rax, %rdi
	movq	%rdx, %rsi
	callq	github_com_spolu_warp_lib_errors.Trace
.Ltmp171:
	.loc	2 53 3 is_stmt 0
	movq	$0, (%rbp)
	movq	%rax, 8(%rbp)
	movq	%rdx, 16(%rbp)
	movq	%rbp, %rax
.Ltmp172:
	.loc	2 0 3
	jmp	.LBB4_59
.Ltmp173:
.LBB4_5:
	movq	%rbp, 24(%rsp)
	movq	%r14, %rbp
.Ltmp174:
	movq	456(%rsp), %r14
.Ltmp175:
	.loc	2 64 13 is_stmt 1
	movl	$sync.Mutex..d, %edi
	callq	runtime.newobject
.Ltmp176:
	.loc	2 0 13 is_stmt 0
	movq	%r13, 80(%rsp)
.Ltmp177:
	.loc	2 64 13
	movq	%rax, %r13
	movq	$0, (%rax)
	.loc	2 58 8 is_stmt 1
	movl	$command_line_arguments.Session..d, %edi
	callq	runtime.newobject
.Ltmp178:
	.loc	2 58 9 is_stmt 0
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 848(%rsp)
	movaps	%xmm0, 832(%rsp)
	movaps	%xmm0, 816(%rsp)
	movaps	%xmm0, 800(%rsp)
	movaps	%xmm0, 784(%rsp)
	movaps	%xmm0, 768(%rsp)
	movq	%r12, 864(%rsp)
	movq	%r15, 872(%rsp)
	movq	%r14, %r15
.Ltmp179:
	.loc	2 0 9
	movq	%rbp, %r14
	.loc	2 58 9
	movq	%r15, 880(%rsp)
	movups	%xmm0, 961(%rsp)
	movups	%xmm0, 952(%rsp)
	movups	%xmm0, 936(%rsp)
	movups	%xmm0, 920(%rsp)
	movups	%xmm0, 904(%rsp)
	movups	%xmm0, 888(%rsp)
	movq	%rbp, 984(%rsp)
	movq	%rbx, 72(%rsp)
	movq	%rbx, 992(%rsp)
	movq	80(%rsp), %rcx
	movq	%rcx, 1000(%rsp)
	movq	%r13, 1008(%rsp)
	movq	%rax, %r13
.Ltmp180:
	.loc	2 0 9
	leaq	768(%rsp), %rdx
	.loc	2 58 8
	movl	$command_line_arguments.Session..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	leaq	736(%rsp), %rdi
.Ltmp181:
	.loc	2 68 22 is_stmt 1
	movq	%r15, %rsi
	callq	github_com_spolu_warp_vendor_github_com_hashicorp_yamux.Session.Accept
.Ltmp182:
	movq	752(%rsp), %rbx
.Ltmp183:
	movq	760(%rsp), %rbp
.Ltmp184:
	.loc	2 0 22 is_stmt 0
	movups	736(%rsp), %xmm0
	movaps	%xmm0, 320(%rsp)
	.loc	2 68 4
	testq	%r13, %r13
	je	.LBB4_62
.Ltmp185:
	leaq	120(%r13), %rsi
	.loc	2 68 17
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB4_63
.Ltmp186:
	.loc	2 0 17
	leaq	320(%rsp), %rdx
	.loc	2 68 17
	movl	$net.Conn..d, %edi
	callq	runtime.typedmemmove
	.loc	2 69 9 is_stmt 1
	testq	%rbx, %rbx
	je	.LBB4_12
.Ltmp187:
.LBB4_9:
	.loc	2 70 5
	movq	%r13, %rdi
	callq	command_line_arguments.Session.TearDown
	.loc	2 72 48
	movq	(%rbx), %rax
	.loc	2 72 11 is_stmt 0
	movq	%rax, 424(%rsp)
	movq	%rbp, 432(%rsp)
	leaq	424(%rsp), %rax
	movq	%rax, 112(%rsp)
	movq	$1, 120(%rsp)
	movq	$1, 128(%rsp)
	movq	128(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	112(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.46, %edi
.Ltmp188:
.LBB4_10:
	.loc	2 0 11
	movl	$28, %esi
	jmp	.LBB4_11
.Ltmp189:
.LBB4_63:
	.loc	2 68 17 is_stmt 1
	movaps	320(%rsp), %xmm0
	movups	%xmm0, (%rsi)
	.loc	2 69 9
	testq	%rbx, %rbx
	jne	.LBB4_9
.Ltmp190:
.LBB4_12:
	.loc	2 0 9 is_stmt 0
	movq	120(%r13), %rax
	movq	128(%r13), %rbp
	.loc	2 75 31 is_stmt 1
	testq	%rax, %rax
	je	.LBB4_13
.Ltmp191:
	movq	(%rax), %rsi
	jmp	.LBB4_14
.Ltmp192:
.LBB4_13:
	.loc	2 0 31 is_stmt 0
	xorl	%esi, %esi
.Ltmp193:
.LBB4_14:
	.loc	2 75 31
	movl	$io.Writer..d, %edi
	callq	runtime.requireitab
	.loc	2 75 18
	movq	%rax, %rdi
	movq	%rbp, %rsi
	callq	encoding_gob.NewEncoder
	.loc	2 75 4
	leaq	136(%r13), %rdi
	.loc	2 75 12
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB4_21
.Ltmp194:
	movq	%rax, %rsi
	callq	runtime.writebarrierptr
	jmp	.LBB4_16
.Ltmp195:
.LBB4_21:
	movq	%rax, (%rdi)
.Ltmp196:
.LBB4_16:
	.loc	2 0 12
	leaq	704(%rsp), %rdi
.Ltmp197:
	.loc	2 78 23 is_stmt 1
	movq	%r15, %rsi
	callq	github_com_spolu_warp_vendor_github_com_hashicorp_yamux.Session.Accept
.Ltmp198:
	movq	720(%rsp), %rbp
.Ltmp199:
	movq	728(%rsp), %rbx
	movups	704(%rsp), %xmm0
	movaps	%xmm0, 304(%rsp)
	.loc	2 78 4 is_stmt 0
	leaq	144(%r13), %rsi
	.loc	2 78 18
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB4_22
.Ltmp200:
	.loc	2 0 18
	leaq	304(%rsp), %rdx
	.loc	2 78 18
	movl	$net.Conn..d, %edi
	callq	runtime.typedmemmove
	.loc	2 79 9 is_stmt 1
	testq	%rbp, %rbp
	je	.LBB4_23
.Ltmp201:
.LBB4_19:
	.loc	2 80 5
	movq	%r13, %rdi
	callq	command_line_arguments.Session.TearDown
	.loc	2 82 49
	movq	(%rbp), %rax
	.loc	2 82 11 is_stmt 0
	movq	%rax, 408(%rsp)
	movq	%rbx, 416(%rsp)
	leaq	408(%rsp), %rax
	movq	%rax, 136(%rsp)
	movq	$1, 144(%rsp)
	movq	$1, 152(%rsp)
	movq	152(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	136(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.48, %edi
	movl	$29, %esi
	jmp	.LBB4_11
.Ltmp202:
.LBB4_22:
	.loc	2 78 18 is_stmt 1
	movaps	304(%rsp), %xmm0
	movups	%xmm0, (%rsi)
	.loc	2 79 9
	testq	%rbp, %rbp
	jne	.LBB4_19
.Ltmp203:
.LBB4_23:
	.loc	2 0 9 is_stmt 0
	movq	144(%r13), %rax
	movq	152(%r13), %rbp
.Ltmp204:
	.loc	2 85 32 is_stmt 1
	testq	%rax, %rax
	je	.LBB4_24
.Ltmp205:
	movq	(%rax), %rsi
	jmp	.LBB4_25
.Ltmp206:
.LBB4_24:
	.loc	2 0 32 is_stmt 0
	xorl	%esi, %esi
.Ltmp207:
.LBB4_25:
	.loc	2 85 32
	movl	$io.Reader..d, %edi
	callq	runtime.requireitab
	.loc	2 85 19
	movq	%rax, %rdi
	movq	%rbp, %rsi
	callq	encoding_gob.NewDecoder
	.loc	2 85 4
	leaq	160(%r13), %rbp
	.loc	2 85 13
	cmpl	$0, runtime.writeBarrier(%rip)
	movq	%r15, 64(%rsp)
.Ltmp208:
	.loc	2 0 13
	je	.LBB4_30
.Ltmp209:
	.loc	2 85 13
	movq	%rbp, %rdi
	movq	%rax, %rsi
	callq	runtime.writebarrierptr
	jmp	.LBB4_27
.Ltmp210:
.LBB4_30:
	movq	%rax, (%rbp)
.Ltmp211:
.LBB4_27:
	.loc	2 87 6 is_stmt 1
	movl	$github_com_spolu_warp.SessionHello..d, %edi
	callq	runtime.newobject
	movq	%rax, %r15
.Ltmp212:
	.loc	2 88 14
	movq	(%rbp), %rdi
	.loc	2 88 22 is_stmt 0
	movl	$type...1github_com_spolu_warp.SessionHello, %esi
	movq	%rax, %rdx
	callq	encoding_gob.Decoder.Decode
	.loc	2 88 43
	testq	%rax, %rax
	je	.LBB4_31
.Ltmp213:
	.loc	2 0 43
	movq	%rax, %rbp
.Ltmp214:
	movq	%rdx, %r12
.Ltmp215:
	.loc	2 89 5 is_stmt 1
	movq	%r13, %rdi
	callq	command_line_arguments.Session.TearDown
	.loc	2 91 51
	movq	(%rbp), %rax
	.loc	2 91 11 is_stmt 0
	movq	%rax, 392(%rsp)
	movq	%r12, 400(%rsp)
	leaq	392(%rsp), %rax
	movq	%rax, 160(%rsp)
	movq	$1, 168(%rsp)
	movq	$1, 176(%rsp)
	movq	176(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	160(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.50, %edi
	movl	$31, %esi
.Ltmp216:
.LBB4_11:
	.loc	2 0 11
	callq	github_com_spolu_warp_lib_errors.Newf
	movq	%rax, %rdi
	movq	%rdx, %rsi
	callq	github_com_spolu_warp_lib_errors.Trace
.Ltmp217:
	movq	24(%rsp), %rcx
	movq	$0, (%rcx)
	movq	%rax, 8(%rcx)
	movq	%rdx, 16(%rcx)
	movq	%rcx, %rax
.Ltmp218:
.LBB4_59:
	addq	$1016, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB4_31:
	.cfi_def_cfa_offset 1072
.Ltmp219:
	movups	16(%r15), %xmm0
	movups	32(%r15), %xmm1
	movups	48(%r15), %xmm2
	movaps	%xmm2, 512(%rsp)
	movaps	%xmm1, 496(%rsp)
	movaps	%xmm0, 480(%rsp)
	.loc	2 94 13 is_stmt 1
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB4_33
.Ltmp220:
	.loc	2 0 13 is_stmt 0
	leaq	480(%rsp), %rdx
	.loc	2 94 13
	movl	$github_com_spolu_warp.Session..d, %edi
	movq	%r13, %rsi
	callq	runtime.typedmemmove
	jmp	.LBB4_34
.Ltmp221:
.LBB4_33:
	movaps	480(%rsp), %xmm0
	movaps	496(%rsp), %xmm1
	movaps	512(%rsp), %xmm2
	movups	%xmm2, 32(%r13)
	movups	%xmm1, 16(%r13)
	movups	%xmm0, (%r13)
.Ltmp222:
.LBB4_34:
	.loc	2 95 4 is_stmt 1
	leaq	48(%r13), %rsi
	movups	(%r15), %xmm0
	movaps	%xmm0, 288(%rsp)
	.loc	2 95 10 is_stmt 0
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB4_35
.Ltmp223:
	.loc	2 0 10
	leaq	288(%rsp), %rdx
	.loc	2 95 10
	movl	$string..d, %edi
	callq	runtime.typedmemmove
	.loc	2 96 4 is_stmt 1
	leaq	64(%r13), %rsi
	.loc	2 96 24 is_stmt 0
	leaq	80(%r15), %rbp
	movups	80(%r15), %xmm0
	movaps	%xmm0, 48(%rsp)
	.loc	2 96 17
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB4_37
.Ltmp224:
	.loc	2 0 17
	leaq	48(%rsp), %rdx
	.loc	2 96 17
	movl	$github_com_spolu_warp.SessionType..d, %edi
	callq	runtime.typedmemmove
	movq	%r13, %rbx
	.loc	2 97 4 is_stmt 1
	leaq	80(%r13), %rsi
	.loc	2 97 21 is_stmt 0
	movq	%r15, %r13
.Ltmp225:
	addq	$96, %r13
	cmpl	$0, runtime.writeBarrier(%rip)
	movups	96(%r15), %xmm0
	movaps	%xmm0, 32(%rsp)
	je	.LBB4_41
.Ltmp226:
	.loc	2 0 21
	leaq	32(%rsp), %rdx
	.loc	2 97 14
	movl	$string..d, %edi
	callq	runtime.typedmemmove
	movq	%rbp, %r15
.Ltmp227:
	.loc	2 0 14
	jmp	.LBB4_43
.Ltmp228:
.LBB4_35:
	.loc	2 95 10 is_stmt 1
	movaps	288(%rsp), %xmm0
	movups	%xmm0, (%rsi)
	.loc	2 96 4
	leaq	64(%r13), %rsi
	.loc	2 96 24 is_stmt 0
	leaq	80(%r15), %rbp
	leaq	48(%rsp), %rax
	movups	80(%r15), %xmm0
	movaps	%xmm0, 48(%rsp)
	jmp	.LBB4_38
.Ltmp229:
.LBB4_37:
	.loc	2 0 24
	leaq	48(%rsp), %rax
.Ltmp230:
.LBB4_38:
	.loc	2 96 17
	movups	(%rax), %xmm0
	movups	%xmm0, (%rsi)
	movq	%r13, %rbx
	.loc	2 97 4 is_stmt 1
	leaq	80(%r13), %rsi
	.loc	2 97 21 is_stmt 0
	movq	%r15, %r13
.Ltmp231:
	addq	$96, %r13
	leaq	32(%rsp), %rax
	movups	96(%r15), %xmm0
	movaps	%xmm0, 32(%rsp)
.Ltmp232:
.LBB4_39:
	.loc	2 0 21
	movq	%rbp, %r15
.Ltmp233:
	.loc	2 97 14
	movups	(%rax), %xmm0
	movups	%xmm0, (%rsi)
.Ltmp234:
.LBB4_43:
	.loc	2 101 5 is_stmt 1
	movq	%rbx, %rdi
	callq	command_line_arguments.Session.ToString
	movq	%rax, %rbp
	movq	%rdx, %r12
.Ltmp235:
	.loc	2 0 5 is_stmt 0
	movups	(%r15), %xmm0
	movaps	%xmm0, 624(%rsp)
	movups	(%r13), %xmm0
	movq	%rbx, %r13
	movaps	%xmm0, 608(%rsp)
	.loc	2 99 10 is_stmt 1
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %r15
	movq	%rbp, 376(%rsp)
	movq	%r12, 384(%rsp)
	leaq	376(%rsp), %rdx
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movl	$github_com_spolu_warp.SessionType..d, %edi
	callq	runtime.newobject
	movq	%rax, %r12
	movaps	624(%rsp), %xmm0
	movaps	%xmm0, 592(%rsp)
	leaq	592(%rsp), %rdx
	movl	$github_com_spolu_warp.SessionType..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbp
	movaps	608(%rsp), %xmm0
	movaps	%xmm0, 576(%rsp)
	leaq	576(%rsp), %rdx
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movq	$string..d, 528(%rsp)
	movq	%r15, 536(%rsp)
	movq	$github_com_spolu_warp.SessionType..d, 544(%rsp)
	movq	%r12, 552(%rsp)
	movq	$string..d, 560(%rsp)
	movq	%rbp, 568(%rsp)
	leaq	528(%rsp), %rax
	movq	%rax, 184(%rsp)
	movq	$3, 192(%rsp)
	movq	$3, 200(%rsp)
	movq	200(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	184(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.52, %edx
	movl	$54, %ecx
	movq	%r14, %rdi
	movq	72(%rsp), %rsi
	callq	github_com_spolu_warp_lib_logging.Logf
	leaq	672(%rsp), %rdi
.Ltmp236:
	.loc	2 0 10 is_stmt 0
	movq	64(%rsp), %r15
	.loc	2 105 22 is_stmt 1
	movq	%r15, %rsi
	callq	github_com_spolu_warp_vendor_github_com_hashicorp_yamux.Session.Accept
.Ltmp237:
	movq	688(%rsp), %rbp
.Ltmp238:
	movq	696(%rsp), %rbx
	movups	672(%rsp), %xmm0
	movaps	%xmm0, 272(%rsp)
	.loc	2 105 4 is_stmt 0
	leaq	168(%r13), %rsi
	.loc	2 105 17
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB4_64
.Ltmp239:
	.loc	2 0 17
	leaq	272(%rsp), %rdx
	.loc	2 105 17
	movl	$net.Conn..d, %edi
	callq	runtime.typedmemmove
	.loc	2 106 9 is_stmt 1
	testq	%rbp, %rbp
	jne	.LBB4_46
	jmp	.LBB4_47
.Ltmp240:
.LBB4_64:
	.loc	2 105 17
	movaps	272(%rsp), %xmm0
	movups	%xmm0, (%rsi)
	.loc	2 106 9
	testq	%rbp, %rbp
	je	.LBB4_47
.Ltmp241:
.LBB4_46:
	.loc	2 107 5
	movq	%r13, %rdi
	callq	command_line_arguments.Session.TearDown
	.loc	2 109 48
	movq	(%rbp), %rax
	.loc	2 109 11 is_stmt 0
	movq	%rax, 360(%rsp)
	movq	%rbx, 368(%rsp)
	leaq	360(%rsp), %rax
	movq	%rax, 208(%rsp)
	movq	$1, 216(%rsp)
	movq	$1, 224(%rsp)
	movq	224(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	208(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.54, %edi
	jmp	.LBB4_10
.Ltmp242:
.LBB4_47:
	.loc	2 0 11
	movq	168(%r13), %rax
	movq	176(%r13), %rbp
.Ltmp243:
	.loc	2 112 31 is_stmt 1
	testq	%rax, %rax
	je	.LBB4_48
.Ltmp244:
	movq	(%rax), %rsi
	jmp	.LBB4_49
.Ltmp245:
.LBB4_41:
	.loc	2 0 31 is_stmt 0
	leaq	32(%rsp), %rax
	jmp	.LBB4_39
.Ltmp246:
.LBB4_48:
	xorl	%esi, %esi
.Ltmp247:
.LBB4_49:
	.loc	2 112 31
	movl	$io.Writer..d, %edi
	callq	runtime.requireitab
	.loc	2 112 18
	movq	%rax, %rdi
	movq	%rbp, %rsi
	callq	encoding_gob.NewEncoder
	.loc	2 112 4
	leaq	184(%r13), %rdi
	.loc	2 112 12
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB4_56
.Ltmp248:
	movq	%rax, %rsi
	callq	runtime.writebarrierptr
	jmp	.LBB4_51
.Ltmp249:
.LBB4_56:
	movq	%rax, (%rdi)
.Ltmp250:
.LBB4_51:
	.loc	2 0 12
	leaq	640(%rsp), %rdi
.Ltmp251:
	.loc	2 115 21 is_stmt 1
	movq	%r15, %rsi
	callq	github_com_spolu_warp_vendor_github_com_hashicorp_yamux.Session.Accept
.Ltmp252:
	movq	656(%rsp), %rbp
.Ltmp253:
	movq	664(%rsp), %rbx
	movups	640(%rsp), %xmm0
	movaps	%xmm0, 256(%rsp)
	.loc	2 115 4 is_stmt 0
	movq	%r13, %rsi
	addq	$192, %rsi
	.loc	2 115 16
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB4_57
.Ltmp254:
	.loc	2 0 16
	leaq	256(%rsp), %rdx
	.loc	2 115 16
	movl	$net.Conn..d, %edi
	callq	runtime.typedmemmove
	.loc	2 116 9 is_stmt 1
	testq	%rbp, %rbp
	jne	.LBB4_54
	jmp	.LBB4_58
.Ltmp255:
.LBB4_57:
	.loc	2 115 16
	movaps	256(%rsp), %xmm0
	movups	%xmm0, (%rsi)
	.loc	2 116 9
	testq	%rbp, %rbp
	je	.LBB4_58
.Ltmp256:
.LBB4_54:
	.loc	2 117 5
	movq	%r13, %rdi
	callq	command_line_arguments.Session.TearDown
	.loc	2 119 47
	movq	(%rbp), %rax
	.loc	2 119 11 is_stmt 0
	movq	%rax, 344(%rsp)
	movq	%rbx, 352(%rsp)
	leaq	344(%rsp), %rax
	movq	%rax, 232(%rsp)
	movq	$1, 240(%rsp)
	movq	$1, 248(%rsp)
	movq	248(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	232(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.56, %edi
	movl	$27, %esi
	jmp	.LBB4_11
.Ltmp257:
.LBB4_58:
	.loc	2 0 11
	movq	24(%rsp), %rax
	.loc	2 123 2 is_stmt 1
	movq	%r13, (%rax)
	xorps	%xmm0, %xmm0
	movups	%xmm0, 8(%rax)
	jmp	.LBB4_59
.Ltmp258:
.LBB4_62:
	.loc	2 68 4
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp259:
.Lfunc_end4:
	.size	command_line_arguments.NewSession, .Lfunc_end4-command_line_arguments.NewSession
	.cfi_endproc

	.section	.text.command_line_arguments.command_line_arguments..thunk1,"ax",@progbits
	.p2align	4, 0x90
	.type	command_line_arguments.command_line_arguments..thunk1,@function
command_line_arguments.command_line_arguments..thunk1:
.Lfunc_begin5:
	.loc	2 136 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB5_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB5_2:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
.Ltmp260:
	.loc	2 136 2 prologue_end
	movl	$.Ltmp261, %edi
	callq	runtime.setdeferretaddr
	testb	$1, %al
	jne	.LBB5_4
.Ltmp262:
	movq	(%rbx), %rdi
	callq	sync.Mutex.Unlock
.Ltmp263:
.Ltmp261:
.LBB5_4:
	xorl	%eax, %eax
	popq	%rbx
.Ltmp264:
	.cfi_def_cfa_offset 8
	retq
.Ltmp265:
.Lfunc_end5:
	.size	command_line_arguments.command_line_arguments..thunk1, .Lfunc_end5-command_line_arguments.command_line_arguments..thunk1
	.cfi_endproc

	.section	.text.command_line_arguments..1command_line_arguments.Session.TearDown..func1,"ax",@progbits
	.p2align	4, 0x90
	.type	command_line_arguments..1command_line_arguments.Session.TearDown..func1,@function
command_line_arguments..1command_line_arguments.Session.TearDown..func1:
.Lfunc_begin6:
	.loc	2 140 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB6_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB6_2:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%r10, %rbx
.Ltmp266:
	.loc	2 143 9 prologue_end
	movl	$500000000, %edi
	callq	time.Sleep
	.loc	2 145 4
	movq	8(%rbx), %rax
	movq	(%rax), %rax
	.loc	2 145 6 is_stmt 0
	testq	%rax, %rax
	je	.LBB6_4
	movq	112(%rax), %rdi
	.loc	2 145 10
	callq	github_com_spolu_warp_vendor_github_com_hashicorp_yamux.Session.Close
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.LBB6_4:
	.cfi_def_cfa_offset 16
	.loc	2 145 6
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp267:
.Lfunc_end6:
	.size	command_line_arguments..1command_line_arguments.Session.TearDown..func1, .Lfunc_end6-command_line_arguments..1command_line_arguments.Session.TearDown..func1
	.cfi_endproc

	.section	.text.command_line_arguments.command_line_arguments..thunk2,"ax",@progbits
	.p2align	4, 0x90
	.type	command_line_arguments.command_line_arguments..thunk2,@function
command_line_arguments.command_line_arguments..thunk2:
.Lfunc_begin7:
	.loc	2 140 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB7_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB7_2:
	pushq	%rax
	.cfi_def_cfa_offset 16
.Ltmp268:
	.loc	2 140 3 prologue_end
	movq	(%rdi), %r10
	callq	*(%r10)
.Ltmp269:
	.loc	2 0 3 is_stmt 0
	popq	%rax
	.cfi_def_cfa_offset 8
	retq
.Ltmp270:
.Lfunc_end7:
	.size	command_line_arguments.command_line_arguments..thunk2, .Lfunc_end7-command_line_arguments.command_line_arguments..thunk2
	.cfi_endproc

	.section	.text.command_line_arguments.command_line_arguments..thunk3,"ax",@progbits
	.p2align	4, 0x90
	.type	command_line_arguments.command_line_arguments..thunk3,@function
command_line_arguments.command_line_arguments..thunk3:
.Lfunc_begin8:
	.loc	2 158 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB8_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB8_2:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
.Ltmp271:
	.loc	2 158 2 prologue_end
	movl	$.Ltmp272, %edi
	callq	runtime.setdeferretaddr
	testb	$1, %al
	jne	.LBB8_4
.Ltmp273:
	movq	(%rbx), %rdi
	callq	sync.Mutex.Unlock
.Ltmp274:
.Ltmp272:
.LBB8_4:
	xorl	%eax, %eax
	popq	%rbx
.Ltmp275:
	.cfi_def_cfa_offset 8
	retq
.Ltmp276:
.Lfunc_end8:
	.size	command_line_arguments.command_line_arguments..thunk3, .Lfunc_end8-command_line_arguments.command_line_arguments..thunk3
	.cfi_endproc

	.section	.text.command_line_arguments.Srv.Run,"ax",@progbits
	.globl	command_line_arguments.Srv.Run
	.p2align	4, 0x90
	.type	command_line_arguments.Srv.Run,@function
command_line_arguments.Srv.Run:
.Lfunc_begin9:
	.file	3 "./srv.go"
	.loc	3 42 0
	.cfi_startproc
	.cfi_personality 3, __gccgo_personality_v0
	.cfi_lsda 3, .Lexception2
	leaq	-1304(%rsp), %r11
	cmpq	%fs:112, %r11
	ja	.LBB9_2
	movq	%r10, %rax
	movabsq	$1304, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB9_2:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$1256, %rsp
	.cfi_def_cfa_offset 1312
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rdx, %r14
	movq	%rsi, %rbp
	movq	%rdi, %rbx
	movb	$0, 31(%rsp)
.Ltmp277:
.Ltmp393:
	.loc	3 42 1 prologue_end
	movl	$type...1command_line_arguments.Srv, %edi
	callq	runtime.newobject
	movq	%rax, 32(%rsp)
.Ltmp278:
.Ltmp394:
	.loc	3 0 1 is_stmt 0
	movq	%rbx, 112(%rsp)
.Ltmp279:
.Ltmp395:
	leaq	112(%rsp), %rdx
	.loc	3 42 1
	movl	$type...1command_line_arguments.Srv, %edi
	movq	32(%rsp), %rsi
	callq	runtime.typedmemmove
.Ltmp280:
.Ltmp396:
.Ltmp281:
	.loc	3 43 2 is_stmt 1
	movl	$context.Context..d, %edi
	callq	runtime.newobject
	movq	%rax, 40(%rsp)
.Ltmp282:
.Ltmp397:
	.loc	3 0 2 is_stmt 0
	movq	%rbp, 256(%rsp)
	movq	%r14, 264(%rsp)
.Ltmp283:
	leaq	256(%rsp), %rdx
	.loc	3 43 2
	movl	$context.Context..d, %edi
	movq	40(%rsp), %rsi
	callq	runtime.typedmemmove
.Ltmp284:
.Ltmp398:
	.loc	3 47 5 is_stmt 1
	movq	32(%rsp), %rax
	movq	(%rax), %rbx
.Ltmp399:
	.loc	3 47 6 is_stmt 0
	testq	%rbx, %rbx
	jne	.LBB9_8
.Ltmp400:
.Ltmp285:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp286:
.Ltmp401:
.LBB9_8:
	.loc	3 47 16
	movq	16(%rbx), %rdi
	movq	24(%rbx), %rsi
.Ltmp287:
	xorl	%edx, %edx
	xorl	%ecx, %ecx
	callq	runtime.eqstring
.Ltmp288:
.Ltmp402:
	cmpb	$1, %al
	je	.LBB9_67
.Ltmp403:
	.loc	3 47 25
	movq	32(%rsp), %rax
	movq	(%rax), %rbx
	.loc	3 47 26
	testq	%rbx, %rbx
	jne	.LBB9_12
.Ltmp404:
.Ltmp289:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp290:
.Ltmp405:
.LBB9_12:
	.loc	3 47 35
	movq	32(%rbx), %rdi
	movq	40(%rbx), %rsi
.Ltmp291:
	xorl	%edx, %edx
	xorl	%ecx, %ecx
	callq	runtime.eqstring
.Ltmp292:
.Ltmp406:
	cmpb	$1, %al
	jne	.LBB9_14
.Ltmp407:
.LBB9_67:
	.loc	3 77 31 is_stmt 1
	movq	32(%rsp), %rax
	movq	(%rax), %rbx
	.loc	3 77 32 is_stmt 0
	testq	%rbx, %rbx
	jne	.LBB9_69
.Ltmp408:
.Ltmp339:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp340:
.Ltmp409:
.LBB9_69:
	.loc	3 77 17
	movq	(%rbx), %rcx
	movq	8(%rbx), %r8
.Ltmp341:
	leaq	336(%rsp), %rdi
	movl	$.Lconst.199, %esi
	movl	$3, %edx
	callq	net.Listen
.Ltmp342:
.Ltmp410:
	movq	352(%rsp), %rdi
.Ltmp411:
	.loc	3 78 10 is_stmt 1
	testq	%rdi, %rdi
	je	.LBB9_72
.Ltmp412:
	.loc	3 77 17
	movq	360(%rsp), %rsi
.Ltmp413:
.Ltmp343:
	.loc	3 79 18
	callq	github_com_spolu_warp_lib_errors.Trace
.Ltmp414:
.Ltmp344:
	.loc	3 0 18 is_stmt 0
	jmp	.LBB9_36
.Ltmp415:
.LBB9_72:
	movq	336(%rsp), %rax
.Ltmp416:
	movq	%rax, 56(%rsp)
	movq	344(%rsp), %rax
.Ltmp417:
	.loc	3 81 56 is_stmt 1
	movq	%rax, 48(%rsp)
	movq	32(%rsp), %rax
	movq	(%rax), %rbx
	.loc	3 81 57 is_stmt 0
	testq	%rbx, %rbx
	jne	.LBB9_74
.Ltmp418:
.Ltmp345:
	movl	$6, %edi
.Ltmp419:
	callq	__go_runtime_error
.Ltmp346:
.Ltmp420:
.LBB9_74:
	.loc	3 0 57
	movups	(%rbx), %xmm0
	movaps	%xmm0, 464(%rsp)
.Ltmp347:
	.loc	3 81 11
	movl	$string..d, %edi
	callq	runtime.newobject
.Ltmp348:
.Ltmp421:
	.loc	3 0 11
	movq	%rax, %rbx
	movaps	464(%rsp), %xmm0
	movaps	%xmm0, 448(%rsp)
.Ltmp349:
	leaq	448(%rsp), %rdx
	.loc	3 81 11
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
.Ltmp350:
.Ltmp422:
	movq	$string..d, 240(%rsp)
	movq	%rbx, 248(%rsp)
	leaq	240(%rsp), %rax
	movq	%rax, 144(%rsp)
	movq	$1, 152(%rsp)
	movq	$1, 160(%rsp)
	movq	40(%rsp), %rax
	movq	(%rax), %rdi
	movq	8(%rax), %rsi
.Ltmp351:
	movq	160(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	144(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.203, %edx
	movl	$31, %ecx
	callq	github_com_spolu_warp_lib_logging.Logf
.Ltmp352:
.Ltmp423:
.LBB9_20:
	.loc	3 83 2 is_stmt 1
	movq	56(%rsp), %rax
	movq	%rax, 224(%rsp)
	movq	48(%rsp), %rax
	movq	%rax, 232(%rsp)
.Ltmp353:
	leaq	31(%rsp), %rdi
	leaq	224(%rsp), %rdx
	movl	$command_line_arguments.command_line_arguments..thunk4, %esi
	callq	runtime.deferproc
.Ltmp354:
.Ltmp424:
	.p2align	4, 0x90
.LBB9_22:
.Ltmp356:
	.loc	3 86 18
	leaq	640(%rsp), %rdi
	movq	48(%rsp), %rsi
	movq	56(%rsp), %rax
	callq	*8(%rax)
.Ltmp357:
.Ltmp425:
	movq	656(%rsp), %r13
.Ltmp426:
	movq	664(%rsp), %r12
	movups	640(%rsp), %xmm0
	movaps	%xmm0, 192(%rsp)
.Ltmp358:
	.loc	3 86 3 is_stmt 0
	movl	$net.Conn..d, %edi
	callq	runtime.newobject
.Ltmp359:
.Ltmp427:
	.loc	3 0 3
	movq	%rax, %rbp
	.loc	3 86 18
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB9_25
.Ltmp428:
.Ltmp360:
	movl	$net.Conn..d, %edi
	movq	%rbp, %rsi
	leaq	192(%rsp), %rdx
	callq	runtime.typedmemmove
.Ltmp361:
.Ltmp429:
	.loc	3 87 10 is_stmt 1
	testq	%r13, %r13
	je	.LBB9_84
.Ltmp430:
.LBB9_79:
	.loc	3 90 9
	movq	(%rbp), %rax
	movq	8(%rbp), %rdi
.Ltmp364:
	callq	*32(%rax)
.Ltmp365:
.Ltmp431:
.Ltmp366:
	.loc	3 90 22 is_stmt 0
	movq	%rdx, %rdi
	callq	*16(%rax)
.Ltmp367:
.Ltmp432:
	.loc	3 0 22
	movq	%rax, %rbx
	movq	%rdx, %r14
.Ltmp368:
	.loc	3 88 12 is_stmt 1
	movl	$string..d, %edi
	callq	runtime.newobject
.Ltmp369:
.Ltmp433:
	.loc	3 0 12 is_stmt 0
	movq	%rax, %rbp
	movq	%rbx, 208(%rsp)
	movq	%r14, 216(%rsp)
.Ltmp370:
	.loc	3 88 12
	movl	$string..d, %edi
	movq	%rax, %rsi
	leaq	208(%rsp), %rdx
	callq	runtime.typedmemmove
.Ltmp371:
.Ltmp434:
	.loc	3 90 33 is_stmt 1
	movq	(%r13), %rax
	.loc	3 88 12
	movq	$string..d, 304(%rsp)
	movq	%rbp, 312(%rsp)
	movq	%rax, 320(%rsp)
	movq	%r12, 328(%rsp)
	leaq	304(%rsp), %rax
	movq	%rax, 168(%rsp)
	movq	$2, 176(%rsp)
	movq	$2, 184(%rsp)
	movq	40(%rsp), %rax
	movq	(%rax), %rdi
	movq	8(%rax), %rsi
.Ltmp372:
	movq	184(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	168(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.206, %edx
	movl	$46, %ecx
	callq	github_com_spolu_warp_lib_logging.Logf
.Ltmp373:
	jmp	.LBB9_22
.Ltmp435:
	.p2align	4, 0x90
.LBB9_25:
	.loc	3 0 12 is_stmt 0
	movq	%rbp, %rax
	.loc	3 86 18 is_stmt 1
	testq	%rbp, %rbp
	jne	.LBB9_27
.Ltmp436:
.Ltmp362:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp363:
	movq	%r15, %rax
.Ltmp437:
.LBB9_27:
	movaps	192(%rsp), %xmm0
	movups	%xmm0, (%rax)
	movq	%rax, %r15
	.loc	3 87 10
	testq	%r13, %r13
	jne	.LBB9_79
.Ltmp438:
.LBB9_84:
.Ltmp374:
	.loc	3 94 6
	movl	$type..struct.4.4x.5.f.f.0.1.4void.5.2.command_line_arguments.s1.0.1.1command_line_arguments.Srv.2.command_line_arguments.ctx2.0.1context.Context.2.command_line_arguments.conn3.0.1net.Conn.5, %edi
	callq	runtime.newobject
.Ltmp375:
.Ltmp439:
	movq	%rax, %r14
	movq	$command_line_arguments..1command_line_arguments.Srv.Run..func1, 272(%rsp)
	movq	32(%rsp), %rax
	movq	%rax, 280(%rsp)
	movq	40(%rsp), %rax
	movq	%rax, 288(%rsp)
	movq	%rbp, 296(%rsp)
.Ltmp376:
	movl	$type..struct.4.4x.5.f.f.0.1.4void.5.2.command_line_arguments.s1.0.1.1command_line_arguments.Srv.2.command_line_arguments.ctx2.0.1context.Context.2.command_line_arguments.conn3.0.1net.Conn.5, %edi
	movq	%r14, %rsi
	leaq	272(%rsp), %rdx
	callq	runtime.typedmemmove
.Ltmp377:
.Ltmp440:
	.loc	3 94 3 is_stmt 0
	testq	%r14, %r14
	jne	.LBB9_88
.Ltmp441:
.Ltmp378:
	movl	$11, %edi
	callq	__go_runtime_error
.Ltmp379:
.Ltmp442:
.LBB9_88:
.Ltmp380:
	movl	$type..struct.4.4x.5fn.0func.8.9.8.9.5, %edi
	callq	runtime.newobject
.Ltmp381:
.Ltmp443:
	movq	%rax, %rbp
	movq	%r14, 104(%rsp)
.Ltmp382:
	movl	$type..struct.4.4x.5fn.0func.8.9.8.9.5, %edi
	movq	%rax, %rsi
	leaq	104(%rsp), %rdx
	callq	runtime.typedmemmove
.Ltmp383:
.Ltmp444:
.Ltmp384:
	movl	$command_line_arguments.command_line_arguments..thunk5, %edi
	movq	%rbp, %rsi
	callq	__go_go
.Ltmp385:
	jmp	.LBB9_22
.Ltmp445:
.LBB9_14:
	.loc	3 48 35 is_stmt 1
	movq	32(%rsp), %rax
	movq	(%rax), %rbx
	.loc	3 48 36 is_stmt 0
	testq	%rbx, %rbx
	je	.LBB9_28
.Ltmp446:
	leaq	16(%rbx), %rcx
	movq	%rbx, %rax
	jmp	.LBB9_33
.Ltmp447:
.LBB9_28:
.Ltmp293:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp294:
.Ltmp448:
	.loc	3 48 47
	movq	32(%rsp), %rax
	movq	(%rax), %rax
	.loc	3 48 48
	testq	%rax, %rax
	jne	.LBB9_32
.Ltmp449:
.Ltmp295:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp296:
.Ltmp450:
	.loc	3 0 48
	xorl	%eax, %eax
.Ltmp451:
.LBB9_32:
	movl	$16, %ecx
.Ltmp452:
.LBB9_33:
	.loc	3 48 19
	movq	(%rcx), %rsi
	movq	24(%rbx), %rdx
	movq	32(%rax), %rcx
	movq	40(%rax), %r8
.Ltmp297:
	leaq	1040(%rsp), %rdi
	callq	crypto_tls.LoadX509KeyPair
.Ltmp298:
.Ltmp453:
	movq	1136(%rsp), %rdi
.Ltmp454:
	movq	1144(%rsp), %rsi
.Ltmp455:
	.loc	3 0 19
	movups	1040(%rsp), %xmm0
	movups	1056(%rsp), %xmm1
	movups	1072(%rsp), %xmm2
	movups	1088(%rsp), %xmm3
	movaps	%xmm0, 544(%rsp)
	movaps	%xmm1, 560(%rsp)
	movaps	%xmm2, 576(%rsp)
	movaps	%xmm3, 592(%rsp)
	movups	1104(%rsp), %xmm0
	movaps	%xmm0, 608(%rsp)
	movups	1120(%rsp), %xmm0
	movaps	%xmm0, 624(%rsp)
	.loc	3 49 10 is_stmt 1
	testq	%rdi, %rdi
	je	.LBB9_39
.Ltmp456:
.Ltmp299:
	.loc	3 50 18
	callq	github_com_spolu_warp_lib_errors.Trace
.Ltmp457:
.Ltmp300:
	.loc	3 0 18 is_stmt 0
	jmp	.LBB9_36
.Ltmp458:
.LBB9_39:
.Ltmp301:
	.loc	3 54 18 is_stmt 1
	movl	$type...61x.7crypto_tls.Certificate, %edi
	callq	runtime.newobject
.Ltmp459:
.Ltmp302:
	movq	%rax, %r12
	movaps	624(%rsp), %xmm0
	movaps	%xmm0, 1232(%rsp)
	movaps	608(%rsp), %xmm0
	movaps	%xmm0, 1216(%rsp)
	movaps	544(%rsp), %xmm0
	movaps	560(%rsp), %xmm1
	movaps	576(%rsp), %xmm2
	movaps	592(%rsp), %xmm3
	movaps	%xmm3, 1200(%rsp)
	movaps	%xmm2, 1184(%rsp)
	movaps	%xmm1, 1168(%rsp)
	movaps	%xmm0, 1152(%rsp)
.Ltmp303:
	leaq	1152(%rsp), %rdx
	movl	$type...61x.7crypto_tls.Certificate, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
.Ltmp304:
.Ltmp460:
.Ltmp305:
	.loc	3 60 18
	movl	$type...64x.7uint16, %edi
	callq	runtime.newobject
.Ltmp306:
.Ltmp461:
	.loc	3 0 18 is_stmt 0
	movq	%rax, %rbx
	movabsq	$14918851298115632, %rax
	.loc	3 60 18
	movq	%rax, (%rbx)
.Ltmp307:
	.loc	3 56 22 is_stmt 1
	movl	$type...63x.7crypto_tls.CurveID, %edi
	callq	runtime.newobject
.Ltmp308:
.Ltmp462:
	movq	%rax, %rbp
.Ltmp463:
	movzwl	.Lconst.189+4(%rip), %eax
	movw	%ax, 4(%rbp)
	movl	.Lconst.189(%rip), %eax
	movl	%eax, (%rbp)
.Ltmp309:
	.loc	3 53 16
	movl	$crypto_tls.Config..d, %edi
	callq	runtime.newobject
.Ltmp310:
.Ltmp464:
	.loc	3 0 16 is_stmt 0
	movq	%rax, %r14
	.loc	3 53 21
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 672(%rsp)
	movq	$0, 688(%rsp)
	movq	%r12, 696(%rsp)
	movq	$1, 704(%rsp)
	movq	$1, 712(%rsp)
	movups	%xmm0, 809(%rsp)
	movaps	%xmm0, 800(%rsp)
	movaps	%xmm0, 784(%rsp)
	movaps	%xmm0, 768(%rsp)
	movaps	%xmm0, 752(%rsp)
	movaps	%xmm0, 736(%rsp)
	movaps	%xmm0, 720(%rsp)
	movq	%rbx, 832(%rsp)
	movq	$4, 840(%rsp)
	movq	$4, 848(%rsp)
	movb	$1, 856(%rsp)
	movaps	%xmm0, 896(%rsp)
	movups	%xmm0, 873(%rsp)
	movups	%xmm0, 857(%rsp)
	movb	$0, 889(%rsp)
	movw	$771, 912(%rsp)
	movw	$0, 914(%rsp)
	movq	%rbp, 920(%rsp)
	movq	$3, 928(%rsp)
	movq	$3, 936(%rsp)
	movb	$0, 944(%rsp)
	movups	%xmm0, 1016(%rsp)
	movq	$0, 1032(%rsp)
	movups	%xmm0, 996(%rsp)
	movups	%xmm0, 984(%rsp)
	movups	%xmm0, 968(%rsp)
	movups	%xmm0, 952(%rsp)
.Ltmp311:
.Ltmp465:
	.loc	3 0 21
	leaq	672(%rsp), %rdx
	.loc	3 53 16
	movl	$crypto_tls.Config..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
.Ltmp312:
.Ltmp466:
	.loc	3 68 31 is_stmt 1
	movq	32(%rsp), %rax
	movq	(%rax), %rbx
	.loc	3 68 32 is_stmt 0
	testq	%rbx, %rbx
	jne	.LBB9_47
.Ltmp467:
.Ltmp313:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp314:
.Ltmp468:
.LBB9_47:
	.loc	3 68 17
	movq	(%rbx), %rcx
	movq	8(%rbx), %r8
.Ltmp315:
	leaq	368(%rsp), %rdi
	movl	$.Lconst.199, %esi
	movl	$3, %edx
	movq	%r14, %r9
	callq	crypto_tls.Listen
.Ltmp316:
.Ltmp469:
	movq	384(%rsp), %rdi
.Ltmp470:
	.loc	3 69 10 is_stmt 1
	testq	%rdi, %rdi
	je	.LBB9_50
.Ltmp471:
	.loc	3 68 17
	movq	392(%rsp), %rsi
.Ltmp472:
.Ltmp317:
	.loc	3 70 18
	callq	github_com_spolu_warp_lib_errors.Trace
.Ltmp473:
.Ltmp318:
.LBB9_36:
	.loc	3 0 18 is_stmt 0
	movq	%rax, %r15
	movq	%rdx, %r12
.Ltmp474:
	movb	$1, %bpl
.Ltmp475:
	leaq	31(%rsp), %rbx
	jmp	.LBB9_93
.Ltmp476:
.LBB9_50:
	movq	368(%rsp), %rax
.Ltmp477:
	movq	%rax, 56(%rsp)
	movq	376(%rsp), %rax
.Ltmp478:
	.loc	3 74 4 is_stmt 1
	movq	%rax, 48(%rsp)
	movq	32(%rsp), %rax
	movq	(%rax), %rax
	.loc	3 74 5 is_stmt 0
	testq	%rax, %rax
	je	.LBB9_52
.Ltmp479:
	.loc	3 0 5
	leaq	80(%rsp), %rbp
	movups	(%rax), %xmm0
	movaps	%xmm0, 80(%rsp)
	jmp	.LBB9_55
.Ltmp480:
.LBB9_52:
.Ltmp319:
	.loc	3 74 5
	movl	$6, %edi
.Ltmp481:
	callq	__go_runtime_error
.Ltmp320:
.Ltmp482:
	.loc	3 74 15
	movq	32(%rsp), %rax
	movq	(%rax), %rax
	movups	0, %xmm0
	movaps	%xmm0, 80(%rsp)
	.loc	3 74 16
	testq	%rax, %rax
	je	.LBB9_56
.Ltmp483:
	.loc	3 0 16
	leaq	80(%rsp), %rbp
.Ltmp484:
.LBB9_55:
	leaq	64(%rsp), %rbx
	movups	16(%rax), %xmm0
	movaps	%xmm0, 64(%rsp)
.Ltmp485:
.LBB9_60:
	movups	32(%rax), %xmm0
	movaps	%xmm0, 528(%rsp)
.Ltmp325:
	.loc	3 72 11 is_stmt 1
	movl	$string..d, %edi
	callq	runtime.newobject
.Ltmp326:
.Ltmp486:
	.loc	3 0 11 is_stmt 0
	movq	%rax, %r14
	movups	(%rbp), %xmm0
	movaps	%xmm0, 512(%rsp)
.Ltmp327:
	leaq	512(%rsp), %rdx
	.loc	3 72 11
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
.Ltmp328:
.Ltmp487:
.Ltmp329:
	movl	$string..d, %edi
	callq	runtime.newobject
.Ltmp330:
.Ltmp488:
	.loc	3 0 11
	movq	%rax, %rbp
	movups	(%rbx), %xmm0
	movaps	%xmm0, 496(%rsp)
.Ltmp331:
	leaq	496(%rsp), %rdx
	.loc	3 72 11
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
.Ltmp332:
.Ltmp489:
.Ltmp333:
	movl	$string..d, %edi
	callq	runtime.newobject
.Ltmp334:
.Ltmp490:
	.loc	3 0 11
	movq	%rax, %rbx
	movaps	528(%rsp), %xmm0
	movaps	%xmm0, 480(%rsp)
.Ltmp335:
	leaq	480(%rsp), %rdx
	.loc	3 72 11
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
.Ltmp336:
.Ltmp491:
	movq	$string..d, 400(%rsp)
	movq	%r14, 408(%rsp)
	movq	$string..d, 416(%rsp)
	movq	%rbp, 424(%rsp)
	movq	$string..d, 432(%rsp)
	movq	%rbx, 440(%rsp)
	leaq	400(%rsp), %rax
	movq	%rax, 120(%rsp)
	movq	$3, 128(%rsp)
	movq	$3, 136(%rsp)
.Ltmp492:
	.loc	3 0 11
	movq	40(%rsp), %rax
	.loc	3 72 11
	movq	(%rax), %rdi
	movq	8(%rax), %rsi
.Ltmp337:
	movq	136(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	120(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.201, %edx
	movl	$55, %ecx
	callq	github_com_spolu_warp_lib_logging.Logf
.Ltmp338:
	jmp	.LBB9_20
.Ltmp493:
.LBB9_56:
.Ltmp321:
	.loc	3 74 16 is_stmt 1
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp322:
.Ltmp494:
	.loc	3 0 16 is_stmt 0
	leaq	80(%rsp), %rbp
	.loc	3 74 27
	movq	32(%rsp), %rax
	movq	(%rax), %rax
	leaq	64(%rsp), %rbx
	movups	16, %xmm0
	movaps	%xmm0, 64(%rsp)
	.loc	3 74 28
	testq	%rax, %rax
	jne	.LBB9_60
.Ltmp495:
.Ltmp323:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp324:
.Ltmp496:
	.loc	3 0 28
	xorl	%eax, %eax
	jmp	.LBB9_60
.Ltmp497:
.LBB9_17:
.Ltmp355:
	jmp	.LBB9_18
.LBB9_16:
.Ltmp498:
.Ltmp386:
.LBB9_18:
.Ltmp387:
	leaq	31(%rsp), %rdi
	.loc	3 109 1 is_stmt 1
	callq	runtime.checkdefer
.Ltmp388:
	.loc	3 0 1 is_stmt 0
	movb	$1, %bpl
	xorl	%r15d, %r15d
	xorl	%r12d, %r12d
.Ltmp499:
	leaq	31(%rsp), %rbx
	jmp	.LBB9_93
.Ltmp500:
.LBB9_91:
.Ltmp389:
	movq	%rax, %r14
	xorl	%r15d, %r15d
	xorl	%r12d, %r12d
	xorl	%ebp, %ebp
.Ltmp501:
	leaq	31(%rsp), %rbx
	jmp	.LBB9_93
.Ltmp502:
.LBB9_92:
.Ltmp392:
	.loc	3 109 1
	movq	%rbx, %rdi
	callq	runtime.checkdefer
.Ltmp503:
	.p2align	4, 0x90
.LBB9_93:
.Ltmp390:
	movq	%rbx, %rdi
	callq	runtime.deferreturn
.Ltmp391:
.Ltmp504:
	.loc	3 0 1
	testb	%bpl, %bpl
	je	.LBB9_96
.Ltmp505:
	.loc	3 50 4 is_stmt 1
	movq	%r15, %rax
	movq	%r12, %rdx
	addq	$1256, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
.Ltmp506:
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp507:
.LBB9_96:
	.cfi_def_cfa_offset 1312
	.loc	3 0 4 is_stmt 0
	movq	%r14, %rdi
	callq	_Unwind_Resume
.Lfunc_end9:
	.size	command_line_arguments.Srv.Run, .Lfunc_end9-command_line_arguments.Srv.Run
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table9:
.Lexception2:
	.byte	255
	.byte	3
	.uleb128 .Lttbase2-.Lttbaseref2
.Lttbaseref2:
	.byte	1
	.uleb128 .Lcst_end2-.Lcst_begin2
.Lcst_begin2:
	.uleb128 .Lfunc_begin9-.Lfunc_begin9
	.uleb128 .Ltmp277-.Lfunc_begin9
	.byte	0
	.byte	0
	.uleb128 .Ltmp277-.Lfunc_begin9
	.uleb128 .Ltmp354-.Ltmp277
	.uleb128 .Ltmp355-.Lfunc_begin9
	.byte	1
	.uleb128 .Ltmp356-.Lfunc_begin9
	.uleb128 .Ltmp385-.Ltmp356
	.uleb128 .Ltmp386-.Lfunc_begin9
	.byte	1
	.uleb128 .Ltmp293-.Lfunc_begin9
	.uleb128 .Ltmp324-.Ltmp293
	.uleb128 .Ltmp355-.Lfunc_begin9
	.byte	1
	.uleb128 .Ltmp387-.Lfunc_begin9
	.uleb128 .Ltmp388-.Ltmp387
	.uleb128 .Ltmp389-.Lfunc_begin9
	.byte	0
	.uleb128 .Ltmp388-.Lfunc_begin9
	.uleb128 .Ltmp390-.Ltmp388
	.byte	0
	.byte	0
	.uleb128 .Ltmp390-.Lfunc_begin9
	.uleb128 .Ltmp391-.Ltmp390
	.uleb128 .Ltmp392-.Lfunc_begin9
	.byte	1
	.uleb128 .Ltmp391-.Lfunc_begin9
	.uleb128 .Lfunc_end9-.Ltmp391
	.byte	0
	.byte	0
.Lcst_end2:
	.byte	1
	.byte	0
	.p2align	2
	.long	0
.Lttbase2:
	.p2align	2

	.section	.text.command_line_arguments.Srv.handle,"ax",@progbits
	.globl	command_line_arguments.Srv.handle
	.p2align	4, 0x90
	.type	command_line_arguments.Srv.handle,@function
command_line_arguments.Srv.handle:
.Lfunc_begin10:
	.loc	3 112 0 is_stmt 1
	.cfi_startproc
	.cfi_personality 3, __gccgo_personality_v0
	.cfi_lsda 3, .Lexception3
	cmpq	%fs:112, %rsp
	ja	.LBB10_2
	movq	%r10, %rax
	movabsq	$216, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB10_2:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$168, %rsp
	.cfi_def_cfa_offset 224
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rcx, %r14
	movq	%rdx, %r12
	movq	%rsi, %r13
	movq	%rdi, 40(%rsp)
	movb	$0, 39(%rsp)
.Ltmp508:
.Ltmp545:
	movq	%r8, 48(%rsp)
.Ltmp546:
	.loc	3 118 7 prologue_end
	movq	%r8, %rdi
	callq	*32(%rcx)
.Ltmp509:
.Ltmp547:
.Ltmp510:
	.loc	3 118 20 is_stmt 0
	movq	%rdx, %rdi
	callq	*16(%rax)
.Ltmp511:
.Ltmp548:
	.loc	3 0 20
	movq	%rax, %rbp
	movq	%rdx, %r15
.Ltmp512:
	.loc	3 116 10 is_stmt 1
	movl	$string..d, %edi
	callq	runtime.newobject
.Ltmp513:
.Ltmp549:
	.loc	3 0 10 is_stmt 0
	movq	%rax, %rbx
	movq	%rbp, 104(%rsp)
	movq	%r15, 112(%rsp)
.Ltmp514:
	leaq	104(%rsp), %rdx
	.loc	3 116 10
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
.Ltmp515:
.Ltmp550:
	movq	$string..d, 88(%rsp)
	movq	%rbx, 96(%rsp)
	leaq	88(%rsp), %rax
	movq	%rax, 64(%rsp)
	movq	$1, 72(%rsp)
	movq	$1, 80(%rsp)
.Ltmp516:
	movq	80(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	64(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.216, %edx
	movl	$34, %ecx
	movq	%r13, %rdi
	movq	%r12, %rsi
	callq	github_com_spolu_warp_lib_logging.Logf
.Ltmp517:
.Ltmp551:
.Ltmp518:
	.loc	3 0 10
	leaq	144(%rsp), %rdi
	.loc	3 122 25 is_stmt 1
	movq	%r13, %rsi
	movq	%r12, %rdx
	callq	context.WithCancel
.Ltmp519:
.Ltmp552:
	movq	144(%rsp), %r13
.Ltmp553:
	movq	152(%rsp), %r12
.Ltmp554:
	movq	160(%rsp), %rcx
.Ltmp520:
	leaq	120(%rsp), %rdi
	.loc	3 124 13
	movq	%r13, %rsi
	movq	%r12, %rdx
	movq	%r14, %r8
	movq	48(%rsp), %r9
	callq	command_line_arguments.NewSession
.Ltmp521:
.Ltmp555:
	movq	128(%rsp), %rdi
.Ltmp556:
	.loc	3 125 9
	testq	%rdi, %rdi
	je	.LBB10_16
.Ltmp557:
	.loc	3 124 13
	movq	136(%rsp), %rsi
.Ltmp558:
.Ltmp522:
	.loc	3 126 17
	callq	github_com_spolu_warp_lib_errors.Trace
.Ltmp559:
.Ltmp523:
	.loc	3 0 17 is_stmt 0
	movq	%rax, %r15
	movq	%rdx, %rbp
.Ltmp560:
	movb	$1, %r12b
.Ltmp561:
	leaq	39(%rsp), %rbx
	jmp	.LBB10_31
.Ltmp562:
.LBB10_16:
	movq	120(%rsp), %rbx
.Ltmp563:
	.loc	3 129 2 is_stmt 1
	movq	%rbx, 56(%rsp)
.Ltmp524:
	leaq	39(%rsp), %rdi
.Ltmp564:
	.loc	3 0 2 is_stmt 0
	leaq	56(%rsp), %rdx
	.loc	3 129 2
	movl	$command_line_arguments.command_line_arguments..thunk6, %esi
	callq	runtime.deferproc
.Ltmp525:
.Ltmp565:
	.loc	3 131 11 is_stmt 1
	testq	%rbx, %rbx
	jne	.LBB10_19
.Ltmp566:
.Ltmp526:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp527:
.Ltmp567:
.LBB10_19:
	.loc	3 0 11 is_stmt 0
	movq	64(%rbx), %r14
	movq	72(%rbx), %rbp
.Ltmp528:
	.loc	3 132 2 is_stmt 1
	movl	$.Lconst.122, %edx
	movl	$4, %ecx
	movq	%r14, %rdi
	movq	%rbp, %rsi
	callq	runtime.eqstring
.Ltmp529:
.Ltmp568:
	cmpb	$1, %al
	jne	.LBB10_24
.Ltmp569:
.Ltmp534:
	.loc	3 133 10
	movq	40(%rsp), %rdi
	movq	%r13, %rsi
	movq	%r12, %rdx
	movq	%rbx, %rcx
	callq	command_line_arguments.Srv.handleHost
.Ltmp535:
	jmp	.LBB10_22
.Ltmp570:
.LBB10_24:
.Ltmp530:
	.loc	3 134 2
	movl	$.Lconst.222, %edx
	movl	$5, %ecx
	movq	%r14, %rdi
	movq	%rbp, %rsi
	callq	runtime.eqstring
.Ltmp531:
.Ltmp571:
	cmpb	$1, %al
	jne	.LBB10_15
.Ltmp572:
.Ltmp532:
	.loc	3 135 10
	movq	40(%rsp), %rdi
	movq	%r13, %rsi
	movq	%r12, %rdx
	movq	%rbx, %rcx
	callq	command_line_arguments.Srv.handleShellClient
.Ltmp533:
.Ltmp573:
.LBB10_22:
	.loc	3 0 10 is_stmt 0
	movb	$1, %r12b
.Ltmp574:
	.loc	3 137 9 is_stmt 1
	testq	%rax, %rax
	je	.LBB10_23
.Ltmp575:
.Ltmp536:
	.loc	3 138 17
	movq	%rax, %rdi
	movq	%rdx, %rsi
	callq	github_com_spolu_warp_lib_errors.Trace
.Ltmp576:
.Ltmp537:
	.loc	3 0 17 is_stmt 0
	movq	%rax, %r15
	movq	%rdx, %rbp
.Ltmp577:
	leaq	39(%rsp), %rbx
.Ltmp578:
	jmp	.LBB10_31
.Ltmp579:
.LBB10_14:
.Ltmp538:
.Ltmp539:
	leaq	39(%rsp), %rdi
	.loc	3 141 1 is_stmt 1
	callq	runtime.checkdefer
.Ltmp540:
.Ltmp580:
.LBB10_15:
	.loc	3 0 1 is_stmt 0
	movb	$1, %r12b
.Ltmp581:
.LBB10_23:
	xorl	%r15d, %r15d
	xorl	%ebp, %ebp
.Ltmp582:
	leaq	39(%rsp), %rbx
	jmp	.LBB10_31
.Ltmp583:
.LBB10_29:
.Ltmp541:
	movq	%rax, %r14
	xorl	%r15d, %r15d
	xorl	%ebp, %ebp
	xorl	%r12d, %r12d
.Ltmp584:
	leaq	39(%rsp), %rbx
	jmp	.LBB10_31
.Ltmp585:
.LBB10_30:
.Ltmp544:
	.loc	3 141 1
	movq	%rbx, %rdi
	callq	runtime.checkdefer
.Ltmp586:
	.p2align	4, 0x90
.LBB10_31:
.Ltmp542:
	movq	%rbx, %rdi
	callq	runtime.deferreturn
.Ltmp543:
.Ltmp587:
	.loc	3 0 1
	testb	%r12b, %r12b
	je	.LBB10_34
.Ltmp588:
	.loc	3 126 3 is_stmt 1
	movq	%r15, %rax
	movq	%rbp, %rdx
	addq	$168, %rsp
.Ltmp589:
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
.Ltmp590:
	.cfi_def_cfa_offset 8
	retq
.Ltmp591:
.LBB10_34:
	.cfi_def_cfa_offset 224
	.loc	3 0 3 is_stmt 0
	movq	%r14, %rdi
	callq	_Unwind_Resume
.Lfunc_end10:
	.size	command_line_arguments.Srv.handle, .Lfunc_end10-command_line_arguments.Srv.handle
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table10:
.Lexception3:
	.byte	255
	.byte	3
	.uleb128 .Lttbase3-.Lttbaseref3
.Lttbaseref3:
	.byte	1
	.uleb128 .Lcst_end3-.Lcst_begin3
.Lcst_begin3:
	.uleb128 .Lfunc_begin10-.Lfunc_begin10
	.uleb128 .Ltmp508-.Lfunc_begin10
	.byte	0
	.byte	0
	.uleb128 .Ltmp508-.Lfunc_begin10
	.uleb128 .Ltmp537-.Ltmp508
	.uleb128 .Ltmp538-.Lfunc_begin10
	.byte	1
	.uleb128 .Ltmp539-.Lfunc_begin10
	.uleb128 .Ltmp540-.Ltmp539
	.uleb128 .Ltmp541-.Lfunc_begin10
	.byte	0
	.uleb128 .Ltmp540-.Lfunc_begin10
	.uleb128 .Ltmp542-.Ltmp540
	.byte	0
	.byte	0
	.uleb128 .Ltmp542-.Lfunc_begin10
	.uleb128 .Ltmp543-.Ltmp542
	.uleb128 .Ltmp544-.Lfunc_begin10
	.byte	1
	.uleb128 .Ltmp543-.Lfunc_begin10
	.uleb128 .Lfunc_end10-.Ltmp543
	.byte	0
	.byte	0
.Lcst_end3:
	.byte	1
	.byte	0
	.p2align	2
	.long	0
.Lttbase3:
	.p2align	2

	.section	.text.command_line_arguments.Srv.handleHost,"ax",@progbits
	.globl	command_line_arguments.Srv.handleHost
	.p2align	4, 0x90
	.type	command_line_arguments.Srv.handleHost,@function
command_line_arguments.Srv.handleHost:
.Lfunc_begin11:
	.loc	3 145 0 is_stmt 1
	.cfi_startproc
	leaq	-584(%rsp), %r11
	cmpq	%fs:112, %r11
	ja	.LBB11_2
	movq	%r10, %rax
	movabsq	$584, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB11_2:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$536, %rsp
	.cfi_def_cfa_offset 592
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rcx, %r13
	movq	%rdx, %rbx
	movq	%rsi, 32(%rsp)
	movq	%rdi, %r12
.Ltmp592:
	.loc	3 149 6 prologue_end
	movl	$github_com_spolu_warp.HostUpdate..d, %edi
	callq	runtime.newobject
.Ltmp593:
	.loc	3 150 14
	testq	%r13, %r13
	je	.LBB11_14
.Ltmp594:
	.loc	3 0 14 is_stmt 0
	movq	%rax, %r15
.Ltmp595:
	.loc	3 150 14
	movq	160(%r13), %rdi
	.loc	3 150 22
	movl	$type...1github_com_spolu_warp.HostUpdate, %esi
	movq	%rax, %rdx
	callq	encoding_gob.Decoder.Decode
	.loc	3 150 45
	testq	%rax, %rax
	je	.LBB11_7
.Ltmp596:
	.loc	3 0 45
	movq	%rax, %r14
.Ltmp597:
	movq	%rdx, %rbp
.Ltmp598:
	.loc	3 151 5 is_stmt 1
	movq	%r13, %rdi
	movq	32(%rsp), %rsi
	movq	%rbx, %rdx
	callq	command_line_arguments.Session.SendInternalError
	.loc	3 153 49
	movq	(%r14), %rax
	.loc	3 153 11 is_stmt 0
	movq	%rax, 288(%rsp)
	movq	%rbp, 296(%rsp)
	leaq	288(%rsp), %rax
	movq	%rax, 56(%rsp)
	movq	$1, 64(%rsp)
	movq	$1, 72(%rsp)
	movq	72(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	56(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.224, %edi
	movl	$29, %esi
	jmp	.LBB11_5
.Ltmp599:
.LBB11_7:
	.loc	3 158 5 is_stmt 1
	movq	%r13, %rdi
	callq	command_line_arguments.Session.ToString
	movq	%rax, %rbp
	movq	%rdx, %r14
	.loc	3 156 10
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rbx, 40(%rsp)
	movq	%rax, %rbx
	movq	%rbp, 272(%rsp)
	movq	%r14, 280(%rsp)
	leaq	272(%rsp), %rdx
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movq	$string..d, 256(%rsp)
	movq	%rbx, 264(%rsp)
	leaq	256(%rsp), %rax
	movq	%rax, 80(%rsp)
	movq	$1, 88(%rsp)
	movq	$1, 96(%rsp)
	movq	96(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	80(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.226, %edx
	movl	$41, %ecx
	movq	32(%rsp), %rdi
	movq	40(%rsp), %rsi
	callq	github_com_spolu_warp_lib_logging.Logf
	.loc	3 161 3
	testq	%r12, %r12
	je	.LBB11_14
.Ltmp600:
	movq	56(%r12), %rdi
	.loc	3 161 9 is_stmt 0
	callq	sync.Mutex.Lock
.Ltmp601:
	.loc	3 162 21 is_stmt 1
	leaq	48(%r13), %rbp
	movups	48(%r13), %xmm0
	movaps	%xmm0, 448(%rsp)
	.loc	3 162 12 is_stmt 0
	movq	48(%r12), %rsi
	leaq	448(%rsp), %rdx
	.loc	3 162 2
	movl	$type..map.6string.7.1command_line_arguments.Warp, %edi
	callq	runtime.mapaccess2
.Ltmp602:
	.loc	3 164 2 is_stmt 1
	testb	$1, %dl
	jne	.LBB11_9
.Ltmp603:
	.loc	3 0 2 is_stmt 0
	movups	(%rbp), %xmm0
	movaps	%xmm0, 368(%rsp)
	movq	%rbp, 48(%rsp)
	movups	(%rbp), %xmm0
	movaps	%xmm0, 352(%rsp)
	movups	64(%r15), %xmm0
	movaps	%xmm0, 336(%rsp)
	.loc	3 182 15 is_stmt 1
	movl	$type..map.6string.7.1command_line_arguments.UserState, %edi
	xorl	%esi, %esi
	movl	$24, %edx
.Ltmp604:
	movl	$16, %ecx
	xorl	%r8d, %r8d
	callq	__go_construct_map
	movq	%rax, %r14
	.loc	3 183 15
	movl	$type..chan.0.6.7uint8, %edi
	xorl	%esi, %esi
	callq	runtime.makechan
	movq	%rax, %r15
.Ltmp605:
	.loc	3 184 15
	movl	$sync.Mutex..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbp
	movq	$0, (%rax)
	.loc	3 178 21
	movl	$command_line_arguments.Warp..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
	.loc	3 178 22 is_stmt 0
	movaps	352(%rsp), %xmm0
	movaps	%xmm0, 464(%rsp)
	movaps	336(%rsp), %xmm0
	movaps	%xmm0, 480(%rsp)
	movq	$0, 496(%rsp)
	movq	%r14, 504(%rsp)
	movq	%r15, 512(%rsp)
	movq	%rbp, 520(%rsp)
	leaq	464(%rsp), %rdx
	.loc	3 178 21
	movl	$command_line_arguments.Warp..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	.loc	3 178 3
	movq	48(%r12), %rsi
	leaq	368(%rsp), %rdx
	.loc	3 178 19
	movl	$type..map.6string.7.1command_line_arguments.Warp, %edi
	callq	runtime.mapassign
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB11_11
.Ltmp606:
	movq	%rax, %rdi
	movq	%rbx, %rsi
	callq	runtime.writebarrierptr
	jmp	.LBB11_13
.Ltmp607:
.LBB11_9:
	.loc	3 165 4 is_stmt 1
	movq	56(%r12), %rdi
	.loc	3 165 10 is_stmt 0
	callq	sync.Mutex.Unlock
.Ltmp608:
	.loc	3 0 10
	movups	(%rbp), %xmm0
	movaps	%xmm0, 432(%rsp)
	.loc	3 168 8 is_stmt 1
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
	movaps	432(%rsp), %xmm0
	movaps	%xmm0, 416(%rsp)
	leaq	416(%rsp), %rdx
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movq	$string..d, 240(%rsp)
	movq	%rbx, 248(%rsp)
	leaq	240(%rsp), %rax
	movq	%rax, 104(%rsp)
	movq	$1, 112(%rsp)
	movq	$1, 120(%rsp)
	movq	120(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	104(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.229, %edi
	movl	$53, %esi
	callq	fmt.Sprintf
	movq	%rax, 224(%rsp)
	movq	%rdx, 232(%rsp)
	.loc	3 166 5
	movups	224(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.231, %ecx
	movl	$11, %r8d
	movq	%r13, %rdi
	movq	32(%rsp), %rsi
	movq	40(%rsp), %rdx
	callq	command_line_arguments.Session.SendError
	movups	(%rbp), %xmm0
	movaps	%xmm0, 400(%rsp)
	.loc	3 174 11
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
	movaps	400(%rsp), %xmm0
	movaps	%xmm0, 384(%rsp)
	leaq	384(%rsp), %rdx
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movq	$string..d, 208(%rsp)
	movq	%rbx, 216(%rsp)
	leaq	208(%rsp), %rax
	movq	%rax, 128(%rsp)
	movq	$1, 136(%rsp)
	movq	$1, 144(%rsp)
	movq	144(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	128(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.233, %edi
	movl	$35, %esi
.Ltmp609:
.LBB11_5:
	.loc	3 0 11 is_stmt 0
	callq	github_com_spolu_warp_lib_errors.Newf
	movq	%rax, %rdi
	movq	%rdx, %rsi
	callq	github_com_spolu_warp_lib_errors.Trace
.Ltmp610:
.LBB11_6:
	addq	$536, %rsp
.Ltmp611:
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
.Ltmp612:
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB11_11:
	.cfi_def_cfa_offset 592
.Ltmp613:
	.loc	3 178 19 is_stmt 1
	testq	%rax, %rax
	je	.LBB11_14
.Ltmp614:
	movq	%rbx, (%rax)
.Ltmp615:
.LBB11_13:
	.loc	3 0 19 is_stmt 0
	movq	48(%rsp), %rbx
	.loc	3 187 3 is_stmt 1
	movq	56(%r12), %rdi
	.loc	3 187 9 is_stmt 0
	callq	sync.Mutex.Unlock
	movups	(%rbx), %xmm0
	movaps	%xmm0, 320(%rsp)
	.loc	3 189 3 is_stmt 1
	movq	48(%r12), %rsi
	leaq	320(%rsp), %rdx
	.loc	3 189 9 is_stmt 0
	movl	$type..map.6string.7.1command_line_arguments.Warp, %edi
	callq	runtime.mapaccess1
	movq	(%rax), %rdi
	.loc	3 189 18
	movq	32(%rsp), %rsi
	movq	40(%rsp), %r15
	movq	%r15, %rdx
	movq	%r13, %rcx
	callq	command_line_arguments.Warp.handleHost
	.loc	3 194 5 is_stmt 1
	movq	%r13, %rdi
	callq	command_line_arguments.Session.ToString
	movq	%rbx, %r13
.Ltmp616:
	movq	%rax, %r14
	movq	%rdx, %rbp
	.loc	3 192 10
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
	movq	%r14, 192(%rsp)
	movq	%rbp, 200(%rsp)
	leaq	192(%rsp), %rdx
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movq	$string..d, 176(%rsp)
	movq	%rbx, 184(%rsp)
	leaq	176(%rsp), %rax
	movq	%rax, 152(%rsp)
	movq	$1, 160(%rsp)
	movq	$1, 168(%rsp)
	movq	168(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	152(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.235, %edx
	movl	$28, %ecx
	movq	32(%rsp), %rdi
	movq	%r15, %rsi
	callq	github_com_spolu_warp_lib_logging.Logf
	.loc	3 196 3
	movq	56(%r12), %rdi
	.loc	3 196 9 is_stmt 0
	callq	sync.Mutex.Lock
	.loc	3 197 10 is_stmt 1
	movq	48(%r12), %rsi
	movups	(%r13), %xmm0
	movaps	%xmm0, 304(%rsp)
	leaq	304(%rsp), %rdx
	.loc	3 197 2 is_stmt 0
	movl	$type..map.6string.7.1command_line_arguments.Warp, %edi
	callq	runtime.mapdelete
	.loc	3 198 3 is_stmt 1
	movq	56(%r12), %rdi
	.loc	3 198 9 is_stmt 0
	callq	sync.Mutex.Unlock
.Ltmp617:
	.loc	3 200 2 is_stmt 1
	xorl	%eax, %eax
	xorl	%edx, %edx
	jmp	.LBB11_6
.Ltmp618:
.LBB11_14:
	.loc	3 0 2 is_stmt 0
	movl	$6, %edi
	callq	__go_runtime_error
.Lfunc_end11:
	.size	command_line_arguments.Srv.handleHost, .Lfunc_end11-command_line_arguments.Srv.handleHost
	.cfi_endproc

	.section	.text.command_line_arguments.Srv.handleShellClient,"ax",@progbits
	.globl	command_line_arguments.Srv.handleShellClient
	.p2align	4, 0x90
	.type	command_line_arguments.Srv.handleShellClient,@function
command_line_arguments.Srv.handleShellClient:
.Lfunc_begin12:
	.loc	3 205 0 is_stmt 1
	.cfi_startproc
	leaq	-280(%rsp), %r11
	cmpq	%fs:112, %r11
	ja	.LBB12_2
	movq	%r10, %rax
	movabsq	$280, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB12_2:
.Ltmp619:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$232, %rsp
	.cfi_def_cfa_offset 288
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	.loc	3 209 3 prologue_end
	testq	%rdi, %rdi
	je	.LBB12_8
.Ltmp620:
	.loc	3 0 3 is_stmt 0
	movq	%rcx, %r12
.Ltmp621:
	movq	%rdx, %r14
.Ltmp622:
	movq	%rsi, %r15
.Ltmp623:
	movq	%rdi, %rbx
.Ltmp624:
	.loc	3 209 3
	movq	56(%rdi), %rdi
	.loc	3 209 9
	callq	sync.Mutex.Lock
.Ltmp625:
	.loc	3 210 21 is_stmt 1
	testq	%r12, %r12
	je	.LBB12_8
.Ltmp626:
	leaq	48(%r12), %r13
	movups	48(%r12), %xmm0
	movaps	%xmm0, 208(%rsp)
	.loc	3 210 12 is_stmt 0
	movq	48(%rbx), %rsi
	leaq	208(%rsp), %rdx
	.loc	3 210 2
	movl	$type..map.6string.7.1command_line_arguments.Warp, %edi
	callq	runtime.mapaccess2
	movl	%edx, %ebp
.Ltmp627:
	.loc	3 211 3 is_stmt 1
	movq	56(%rbx), %rdi
	.loc	3 211 9 is_stmt 0
	callq	sync.Mutex.Unlock
	.loc	3 213 5 is_stmt 1
	testb	%bpl, %bpl
	je	.LBB12_5
.Ltmp628:
	.loc	3 0 5 is_stmt 0
	movups	(%r13), %xmm0
	movaps	%xmm0, 128(%rsp)
	.loc	3 227 3 is_stmt 1
	movq	48(%rbx), %rsi
	leaq	128(%rsp), %rdx
	.loc	3 227 9 is_stmt 0
	movl	$type..map.6string.7.1command_line_arguments.Warp, %edi
	callq	runtime.mapaccess1
	movq	(%rax), %rdi
	.loc	3 227 18
	movq	%r15, %rsi
	movq	%r14, %rdx
	movq	%r12, %rcx
	callq	command_line_arguments.Warp.handleShellClient
.Ltmp629:
	.loc	3 229 2 is_stmt 1
	xorl	%eax, %eax
	xorl	%edx, %edx
	jmp	.LBB12_7
.Ltmp630:
.LBB12_5:
	.loc	3 0 2 is_stmt 0
	movups	(%r13), %xmm0
	movaps	%xmm0, 192(%rsp)
	.loc	3 217 8 is_stmt 1
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
.Ltmp631:
	.loc	3 0 8 is_stmt 0
	movaps	192(%rsp), %xmm0
	movaps	%xmm0, 176(%rsp)
	leaq	176(%rsp), %rdx
	.loc	3 217 8
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movq	$string..d, 112(%rsp)
	movq	%rbx, 120(%rsp)
	leaq	112(%rsp), %rax
	movq	%rax, 32(%rsp)
	movq	$1, 40(%rsp)
	movq	$1, 48(%rsp)
	movq	48(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	32(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.237, %edi
	movl	$53, %esi
	callq	fmt.Sprintf
	movq	%rax, 96(%rsp)
	movq	%rdx, 104(%rsp)
	.loc	3 215 5 is_stmt 1
	movups	96(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.239, %ecx
	movl	$12, %r8d
	movq	%r12, %rdi
	movq	%r15, %rsi
	movq	%r14, %rdx
	callq	command_line_arguments.Session.SendError
	movups	(%r13), %xmm0
	movaps	%xmm0, 160(%rsp)
	.loc	3 223 11
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
	movaps	160(%rsp), %xmm0
	movaps	%xmm0, 144(%rsp)
	leaq	144(%rsp), %rdx
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movq	$string..d, 80(%rsp)
	movq	%rbx, 88(%rsp)
	leaq	80(%rsp), %rax
	movq	%rax, 56(%rsp)
	movq	$1, 64(%rsp)
	movq	$1, 72(%rsp)
	movq	72(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	56(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.241, %edi
	movl	$29, %esi
	callq	github_com_spolu_warp_lib_errors.Newf
	.loc	3 222 17
	movq	%rax, %rdi
	movq	%rdx, %rsi
	callq	github_com_spolu_warp_lib_errors.Trace
.Ltmp632:
.LBB12_7:
	.loc	3 0 17 is_stmt 0
	addq	$232, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
.Ltmp633:
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
.Ltmp634:
	.cfi_def_cfa_offset 16
	popq	%rbp
.Ltmp635:
	.cfi_def_cfa_offset 8
	retq
.LBB12_8:
	.cfi_def_cfa_offset 288
	movl	$6, %edi
	callq	__go_runtime_error
.Lfunc_end12:
	.size	command_line_arguments.Srv.handleShellClient, .Lfunc_end12-command_line_arguments.Srv.handleShellClient
	.cfi_endproc

	.section	.text.command_line_arguments.Warp.CientSessions,"ax",@progbits
	.globl	command_line_arguments.Warp.CientSessions
	.p2align	4, 0x90
	.type	command_line_arguments.Warp.CientSessions,@function
command_line_arguments.Warp.CientSessions:
.Lfunc_begin13:
	.file	4 "./warp.go"
	.loc	4 89 0 is_stmt 1
	.cfi_startproc
	leaq	-488(%rsp), %r11
	cmpq	%fs:112, %r11
	ja	.LBB13_2
	movq	%r10, %rax
	movabsq	$488, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB13_2:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$440, %rsp
	.cfi_def_cfa_offset 496
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rsi, %rbp
	movq	%rdi, %r14
.Ltmp636:
	.loc	4 92 14 prologue_end
	movl	$type...60x.7.1command_line_arguments.Session, %edi
	callq	runtime.newobject
.Ltmp637:
	.loc	4 93 3
	testq	%rbp, %rbp
	je	.LBB13_38
.Ltmp638:
	.loc	4 0 3 is_stmt 0
	movq	%rax, %rbx
.Ltmp639:
	movq	%r14, 88(%rsp)
	.loc	4 93 3
	movq	56(%rbp), %rdi
	.loc	4 93 9
	callq	sync.Mutex.Lock
	movq	%rbp, 80(%rsp)
.Ltmp640:
	.loc	4 94 24 is_stmt 1
	movq	40(%rbp), %rsi
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 320(%rsp)
	movaps	%xmm0, 304(%rsp)
	movaps	%xmm0, 288(%rsp)
	movaps	%xmm0, 272(%rsp)
	movaps	%xmm0, 256(%rsp)
	movaps	%xmm0, 240(%rsp)
	leaq	240(%rsp), %rdx
	.loc	4 94 2 is_stmt 0
	movl	$type..map.6string.7.1command_line_arguments.UserState, %edi
	callq	runtime.mapiterinit
.Ltmp641:
	cmpq	$0, 240(%rsp)
	je	.LBB13_4
.Ltmp642:
	.loc	4 0 2
	xorl	%r13d, %r13d
	leaq	336(%rsp), %r12
	leaq	120(%rsp), %rbp
	xorl	%r15d, %r15d
.Ltmp643:
	.p2align	4, 0x90
.LBB13_24:
	.loc	4 94 2
	movq	248(%rsp), %rax
	movq	(%rax), %rax
.Ltmp644:
	.loc	4 95 25 is_stmt 1
	testq	%rax, %rax
	je	.LBB13_38
.Ltmp645:
	movq	40(%rax), %rsi
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 416(%rsp)
	movaps	%xmm0, 400(%rsp)
	movaps	%xmm0, 384(%rsp)
	movaps	%xmm0, 368(%rsp)
	movaps	%xmm0, 352(%rsp)
	movaps	%xmm0, 336(%rsp)
	.loc	4 95 3 is_stmt 0
	movl	$type..map.6string.7.1command_line_arguments.Session, %edi
	movq	%r12, %rdx
	callq	runtime.mapiterinit
.Ltmp646:
	cmpq	$0, 336(%rsp)
	jne	.LBB13_22
	jmp	.LBB13_23
.Ltmp647:
	.p2align	4, 0x90
.LBB13_20:
	.loc	4 96 13 is_stmt 1
	movq	56(%rsp), %rbx
.Ltmp648:
	movq	64(%rsp), %r15
.Ltmp649:
	movq	72(%rsp), %r13
.Ltmp650:
	.loc	4 95 3
	movq	%r12, %rdi
	callq	runtime.mapiternext
	cmpq	$0, 336(%rsp)
	je	.LBB13_23
.Ltmp651:
.LBB13_22:
	movq	344(%rsp), %rax
	movq	(%rax), %r14
.Ltmp652:
	.loc	4 0 3 is_stmt 0
	movq	%rbx, 56(%rsp)
	movq	%r15, 64(%rsp)
	movq	%r13, 72(%rsp)
	.loc	4 96 15 is_stmt 1
	leaq	1(%r15), %rdx
	cmpq	%r13, %rdx
	jbe	.LBB13_13
.Ltmp653:
	movq	72(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	56(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$type...1command_line_arguments.Session, %esi
	movq	%rbp, %rdi
	callq	runtime.growslice
	movq	120(%rsp), %rbx
.Ltmp654:
	.loc	4 0 15 is_stmt 0
	movq	128(%rsp), %rdx
	movq	136(%rsp), %r13
	jmp	.LBB13_10
.Ltmp655:
	.p2align	4, 0x90
.LBB13_13:
	.loc	4 96 15
	cmpq	%r13, %rdx
	jg	.LBB13_15
.Ltmp656:
	.loc	4 0 15
	movq	%rdx, %rax
	orq	%r13, %rax
	js	.LBB13_15
.Ltmp657:
.LBB13_10:
	.loc	4 96 15
	movq	%rbx, 56(%rsp)
	movq	%rdx, 64(%rsp)
	movq	%r13, 72(%rsp)
	testq	%r15, %r15
	js	.LBB13_12
.Ltmp658:
	.loc	4 0 15
	cmpq	%rdx, %r15
	jge	.LBB13_12
.Ltmp659:
	.loc	4 96 15
	leaq	(%rbx,%r15,8), %rdi
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB13_17
.Ltmp660:
	movq	%r14, %rsi
	callq	runtime.writebarrierptr
	jmp	.LBB13_20
.Ltmp661:
	.p2align	4, 0x90
.LBB13_17:
	testq	%rdi, %rdi
	je	.LBB13_38
.Ltmp662:
	movq	%r14, (%rdi)
	jmp	.LBB13_20
.Ltmp663:
	.p2align	4, 0x90
.LBB13_23:
	.loc	4 94 2 is_stmt 1
	leaq	240(%rsp), %rdi
	callq	runtime.mapiternext
	cmpq	$0, 240(%rsp)
	jne	.LBB13_24
	jmp	.LBB13_5
.Ltmp664:
.LBB13_4:
	.loc	4 0 2 is_stmt 0
	xorl	%r15d, %r15d
	.loc	4 92 14 is_stmt 1
	xorl	%r13d, %r13d
.Ltmp665:
.LBB13_5:
	.loc	4 100 21
	movq	80(%rsp), %rax
	movq	32(%rax), %rax
	.loc	4 100 26 is_stmt 0
	testq	%rax, %rax
	je	.LBB13_38
.Ltmp666:
	.loc	4 100 36
	movq	40(%rax), %rsi
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 224(%rsp)
	movaps	%xmm0, 208(%rsp)
	movaps	%xmm0, 192(%rsp)
	movaps	%xmm0, 176(%rsp)
	movaps	%xmm0, 160(%rsp)
	movaps	%xmm0, 144(%rsp)
	leaq	144(%rsp), %rdx
	.loc	4 100 2
	movl	$type..map.6string.7.1command_line_arguments.Session, %edi
	callq	runtime.mapiterinit
	cmpq	$0, 144(%rsp)
	je	.LBB13_37
.Ltmp667:
	.loc	4 0 2
	leaq	96(%rsp), %r12
	leaq	144(%rsp), %r14
.Ltmp668:
	.p2align	4, 0x90
.LBB13_36:
	.loc	4 100 2
	movq	152(%rsp), %rax
	movq	(%rax), %rbp
.Ltmp669:
	.loc	4 0 2
	movq	%rbx, 32(%rsp)
	movq	%r15, 40(%rsp)
	movq	%r13, 48(%rsp)
	.loc	4 101 14 is_stmt 1
	leaq	1(%r15), %rdx
	cmpq	%r13, %rdx
	jbe	.LBB13_32
.Ltmp670:
	movq	48(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	32(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$type...1command_line_arguments.Session, %esi
	movq	%r12, %rdi
	callq	runtime.growslice
	movq	96(%rsp), %rbx
.Ltmp671:
	.loc	4 0 14 is_stmt 0
	movq	104(%rsp), %rdx
	movq	112(%rsp), %r13
	jmp	.LBB13_27
.Ltmp672:
	.p2align	4, 0x90
.LBB13_32:
	.loc	4 101 14
	cmpq	%r13, %rdx
	jg	.LBB13_15
.Ltmp673:
	.loc	4 0 14
	movq	%rdx, %rax
	orq	%r13, %rax
	js	.LBB13_15
.Ltmp674:
.LBB13_27:
	.loc	4 101 14
	movq	%rbx, 32(%rsp)
	movq	%rdx, 40(%rsp)
	movq	%r13, 48(%rsp)
	testq	%r15, %r15
	js	.LBB13_12
.Ltmp675:
	.loc	4 0 14
	cmpq	%rdx, %r15
	jge	.LBB13_12
.Ltmp676:
	.loc	4 101 14
	leaq	(%rbx,%r15,8), %rdi
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB13_30
.Ltmp677:
	movq	%rbp, %rsi
	callq	runtime.writebarrierptr
	jmp	.LBB13_35
.Ltmp678:
	.p2align	4, 0x90
.LBB13_30:
	testq	%rdi, %rdi
	je	.LBB13_38
.Ltmp679:
	movq	%rbp, (%rdi)
.Ltmp680:
.LBB13_35:
	.loc	4 101 12
	movq	32(%rsp), %rbx
.Ltmp681:
	movq	40(%rsp), %r15
.Ltmp682:
	movq	48(%rsp), %r13
.Ltmp683:
	.loc	4 100 2 is_stmt 1
	movq	%r14, %rdi
	callq	runtime.mapiternext
	cmpq	$0, 144(%rsp)
	jne	.LBB13_36
.Ltmp684:
.LBB13_37:
	.loc	4 103 3
	movq	80(%rsp), %rax
	movq	56(%rax), %rdi
	.loc	4 103 9 is_stmt 0
	callq	sync.Mutex.Unlock
.Ltmp685:
	.loc	4 0 9
	movq	88(%rsp), %rax
	.loc	4 104 2 is_stmt 1
	movq	%rbx, (%rax)
	movq	%r15, 8(%rax)
	movq	%r13, 16(%rax)
	addq	$440, %rsp
.Ltmp686:
	.cfi_def_cfa_offset 56
	popq	%rbx
.Ltmp687:
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp688:
.LBB13_12:
	.cfi_def_cfa_offset 496
	.loc	4 0 2 is_stmt 0
	xorl	%edi, %edi
	callq	__go_runtime_error
.Ltmp689:
.LBB13_15:
	movl	$3, %edi
	callq	__go_runtime_error
.Ltmp690:
.LBB13_38:
	movl	$6, %edi
	callq	__go_runtime_error
.Lfunc_end13:
	.size	command_line_arguments.Warp.CientSessions, .Lfunc_end13-command_line_arguments.Warp.CientSessions
	.cfi_endproc

	.section	.text.command_line_arguments.Warp.State,"ax",@progbits
	.globl	command_line_arguments.Warp.State
	.p2align	4, 0x90
	.type	command_line_arguments.Warp.State,@function
command_line_arguments.Warp.State:
.Lfunc_begin14:
	.loc	4 68 0 is_stmt 1
	.cfi_startproc
	.cfi_personality 3, __gccgo_personality_v0
	.cfi_lsda 3, .Lexception4
	leaq	-520(%rsp), %r11
	cmpq	%fs:112, %r11
	ja	.LBB14_2
	movq	%r10, %rax
	movabsq	$520, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB14_2:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$472, %rsp
	.cfi_def_cfa_offset 528
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rsi, %r15
	movq	%rdi, %rbp
	movb	$0, 15(%rsp)
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 48(%rsp)
	movaps	%xmm0, 32(%rsp)
.Ltmp731:
	.loc	4 71 3 prologue_end
	testq	%rsi, %rsi
	movq	%rdi, 16(%rsp)
	jne	.LBB14_4
.Ltmp732:
.Ltmp691:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp733:
.Ltmp692:
.LBB14_4:
	movq	56(%r15), %rdi
.Ltmp693:
	.loc	4 71 9 is_stmt 0
	callq	sync.Mutex.Lock
.Ltmp694:
.Ltmp734:
	.loc	4 72 9 is_stmt 1
	movq	56(%r15), %rax
	.loc	4 72 2 is_stmt 0
	movq	%rax, 24(%rsp)
.Ltmp695:
	leaq	15(%rsp), %rdi
	leaq	24(%rsp), %rdx
	movl	$command_line_arguments.command_line_arguments..thunk7, %esi
	callq	runtime.deferproc
.Ltmp696:
.Ltmp735:
	.loc	4 0 2
	movups	(%r15), %xmm0
	movaps	%xmm0, 224(%rsp)
	movups	16(%r15), %xmm0
	movaps	%xmm0, 208(%rsp)
.Ltmp697:
	.loc	4 76 15 is_stmt 1
	movl	$type..map.6string.7github_com_spolu_warp.User, %edi
	xorl	%esi, %esi
	movl	$64, %edx
	movl	$16, %ecx
	xorl	%r8d, %r8d
	callq	__go_construct_map
.Ltmp698:
.Ltmp736:
	.loc	4 0 15 is_stmt 0
	movq	%rax, %r12
	.loc	4 73 16 is_stmt 1
	movaps	224(%rsp), %xmm0
	movaps	%xmm0, 240(%rsp)
	movaps	208(%rsp), %xmm0
	movaps	%xmm0, 256(%rsp)
	.loc	4 79 15
	movq	32(%r15), %rbx
	.loc	4 79 20 is_stmt 0
	testq	%rbx, %rbx
	jne	.LBB14_9
.Ltmp737:
.Ltmp699:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp700:
.Ltmp738:
.LBB14_9:
	movq	48(%rbx), %rbx
	.loc	4 79 28
	testq	%rbx, %rbx
	jne	.LBB14_11
.Ltmp739:
.Ltmp701:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp702:
.Ltmp740:
.LBB14_11:
	.loc	4 0 28
	movups	16(%rbx), %xmm0
	movaps	%xmm0, 192(%rsp)
	.loc	4 79 46
	movq	32(%r15), %rsi
.Ltmp703:
	leaq	424(%rsp), %rdi
	.loc	4 79 51
	callq	command_line_arguments.HostState.User
.Ltmp704:
.Ltmp741:
	.loc	4 0 51
	movups	424(%rsp), %xmm0
	movups	440(%rsp), %xmm1
	movups	456(%rsp), %xmm2
	movaps	%xmm2, 144(%rsp)
	movaps	%xmm1, 128(%rsp)
	movaps	%xmm0, 112(%rsp)
.Ltmp705:
.Ltmp742:
	leaq	192(%rsp), %rdx
	.loc	4 79 43
	movl	$type..map.6string.7github_com_spolu_warp.User, %edi
	movq	%r12, %rsi
	callq	runtime.mapassign
.Ltmp706:
.Ltmp743:
	movq	%rax, %rbx
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB14_14
.Ltmp744:
.Ltmp707:
	.loc	4 0 43
	leaq	112(%rsp), %rdx
	.loc	4 79 43
	movl	$github_com_spolu_warp.User..d, %edi
	movq	%rbx, %rsi
	callq	runtime.typedmemmove
.Ltmp708:
	jmp	.LBB14_22
.Ltmp745:
.LBB14_14:
	testq	%rbx, %rbx
	jne	.LBB14_16
.Ltmp746:
.Ltmp709:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp710:
.Ltmp747:
.LBB14_16:
	movaps	112(%rsp), %xmm0
	movaps	128(%rsp), %xmm1
	movaps	144(%rsp), %xmm2
	movups	%xmm2, 32(%rbx)
	movups	%xmm1, 16(%rbx)
	movups	%xmm0, (%rbx)
.Ltmp748:
.LBB14_22:
	.loc	4 81 28 is_stmt 1
	movq	40(%r15), %rsi
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 176(%rsp)
	movaps	%xmm0, 352(%rsp)
	movaps	%xmm0, 336(%rsp)
	movaps	%xmm0, 320(%rsp)
	movaps	%xmm0, 304(%rsp)
	movaps	%xmm0, 288(%rsp)
	movaps	%xmm0, 272(%rsp)
.Ltmp711:
	leaq	272(%rsp), %rdx
	.loc	4 81 2 is_stmt 0
	movl	$type..map.6string.7.1command_line_arguments.UserState, %edi
	callq	runtime.mapiterinit
.Ltmp712:
.Ltmp749:
	.loc	4 0 2
	leaq	376(%rsp), %r15
.Ltmp750:
	leaq	160(%rsp), %r13
	leaq	272(%rsp), %rbx
	leaq	64(%rsp), %rbp
.Ltmp751:
	.p2align	4, 0x90
.LBB14_24:
	.loc	4 81 2
	movq	272(%rsp), %rax
	testq	%rax, %rax
	je	.LBB14_33
.Ltmp752:
	movups	(%rax), %xmm0
	movaps	%xmm0, 176(%rsp)
	movq	280(%rsp), %rax
	movq	(%rax), %rsi
.Ltmp753:
	.loc	4 0 2
	movaps	%xmm0, 160(%rsp)
.Ltmp714:
	.loc	4 82 28 is_stmt 1
	movq	%r15, %rdi
	callq	command_line_arguments.UserState.User
.Ltmp754:
.Ltmp715:
	.loc	4 0 28 is_stmt 0
	movups	376(%rsp), %xmm0
	movups	392(%rsp), %xmm1
	movups	408(%rsp), %xmm2
	movaps	%xmm2, 96(%rsp)
	movaps	%xmm1, 80(%rsp)
	movaps	%xmm0, 64(%rsp)
.Ltmp716:
	.loc	4 82 22
	movl	$type..map.6string.7github_com_spolu_warp.User, %edi
	movq	%r12, %rsi
	movq	%r13, %rdx
	callq	runtime.mapassign
.Ltmp717:
.Ltmp755:
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB14_28
.Ltmp756:
.Ltmp718:
	movl	$github_com_spolu_warp.User..d, %edi
	movq	%rax, %rsi
	movq	%rbp, %rdx
	callq	runtime.typedmemmove
.Ltmp719:
	jmp	.LBB14_32
.Ltmp757:
	.p2align	4, 0x90
.LBB14_28:
	testq	%rax, %rax
	jne	.LBB14_30
.Ltmp758:
.Ltmp720:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp721:
	movq	%r14, %rax
.Ltmp759:
.LBB14_30:
	movaps	64(%rsp), %xmm0
	movaps	80(%rsp), %xmm1
	movaps	96(%rsp), %xmm2
	movups	%xmm2, 32(%rax)
	movups	%xmm1, 16(%rax)
	movups	%xmm0, (%rax)
	movq	%rax, %r14
.Ltmp760:
.LBB14_32:
.Ltmp722:
	.loc	4 81 2 is_stmt 1
	movq	%rbx, %rdi
	callq	runtime.mapiternext
.Ltmp723:
	jmp	.LBB14_24
.Ltmp761:
.LBB14_33:
	.loc	4 85 2
	movaps	240(%rsp), %xmm0
	movaps	256(%rsp), %xmm1
	movaps	%xmm1, 48(%rsp)
	movaps	%xmm0, 32(%rsp)
	movb	$1, %bl
.Ltmp762:
	.loc	4 0 2 is_stmt 0
	leaq	15(%rsp), %rbp
	jmp	.LBB14_37
.Ltmp763:
.LBB14_18:
.Ltmp713:
	jmp	.LBB14_19
.Ltmp764:
.LBB14_17:
.Ltmp724:
.LBB14_19:
.Ltmp725:
	leaq	15(%rsp), %rdi
	.loc	4 86 1 is_stmt 1
	callq	runtime.checkdefer
.Ltmp726:
	.loc	4 0 1 is_stmt 0
	movb	$1, %bl
	xorl	%r12d, %r12d
.Ltmp765:
	leaq	15(%rsp), %rbp
	jmp	.LBB14_37
.Ltmp766:
.LBB14_34:
.Ltmp727:
	movq	%rax, %r14
	xorl	%r12d, %r12d
	xorl	%ebx, %ebx
.Ltmp767:
	leaq	15(%rsp), %rbp
	jmp	.LBB14_37
.Ltmp768:
.LBB14_36:
.Ltmp730:
	.loc	4 86 1
	movq	%rbp, %rdi
	callq	runtime.checkdefer
.Ltmp769:
	.p2align	4, 0x90
.LBB14_37:
.Ltmp728:
	movq	%rbp, %rdi
	callq	runtime.deferreturn
.Ltmp729:
.Ltmp770:
	.loc	4 0 1
	testb	%bl, %bl
	je	.LBB14_40
.Ltmp771:
	.loc	4 85 2 is_stmt 1
	movaps	32(%rsp), %xmm0
	movaps	48(%rsp), %xmm1
	movq	16(%rsp), %rax
	movups	%xmm1, 16(%rax)
	movups	%xmm0, (%rax)
	movq	%r12, 32(%rax)
	addq	$472, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
.Ltmp772:
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp773:
.LBB14_40:
	.cfi_def_cfa_offset 528
	.loc	4 0 2 is_stmt 0
	movq	%r14, %rdi
	callq	_Unwind_Resume
.Lfunc_end14:
	.size	command_line_arguments.Warp.State, .Lfunc_end14-command_line_arguments.Warp.State
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table14:
.Lexception4:
	.byte	255
	.byte	3
	.uleb128 .Lttbase4-.Lttbaseref4
.Lttbaseref4:
	.byte	1
	.uleb128 .Lcst_end4-.Lcst_begin4
.Lcst_begin4:
	.uleb128 .Lfunc_begin14-.Lfunc_begin14
	.uleb128 .Ltmp691-.Lfunc_begin14
	.byte	0
	.byte	0
	.uleb128 .Ltmp691-.Lfunc_begin14
	.uleb128 .Ltmp712-.Ltmp691
	.uleb128 .Ltmp713-.Lfunc_begin14
	.byte	1
	.uleb128 .Ltmp714-.Lfunc_begin14
	.uleb128 .Ltmp723-.Ltmp714
	.uleb128 .Ltmp724-.Lfunc_begin14
	.byte	1
	.uleb128 .Ltmp725-.Lfunc_begin14
	.uleb128 .Ltmp726-.Ltmp725
	.uleb128 .Ltmp727-.Lfunc_begin14
	.byte	0
	.uleb128 .Ltmp726-.Lfunc_begin14
	.uleb128 .Ltmp728-.Ltmp726
	.byte	0
	.byte	0
	.uleb128 .Ltmp728-.Lfunc_begin14
	.uleb128 .Ltmp729-.Ltmp728
	.uleb128 .Ltmp730-.Lfunc_begin14
	.byte	1
	.uleb128 .Ltmp729-.Lfunc_begin14
	.uleb128 .Lfunc_end14-.Ltmp729
	.byte	0
	.byte	0
.Lcst_end4:
	.byte	1
	.byte	0
	.p2align	2
	.long	0
.Lttbase4:
	.p2align	2

	.section	.text.command_line_arguments.Warp.handleHost,"ax",@progbits
	.globl	command_line_arguments.Warp.handleHost
	.p2align	4, 0x90
	.type	command_line_arguments.Warp.handleHost,@function
command_line_arguments.Warp.handleHost:
.Lfunc_begin15:
	.loc	4 187 0 is_stmt 1
	.cfi_startproc
	leaq	-488(%rsp), %r11
	cmpq	%fs:112, %r11
	ja	.LBB15_2
	movq	%r10, %rax
	movabsq	$488, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB15_2:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$440, %rsp
	.cfi_def_cfa_offset 496
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rcx, %r12
	movq	%rdx, %r15
	movq	%rsi, %r13
	movq	%rdi, %rbx
.Ltmp774:
	.loc	4 187 1 prologue_end
	movl	$type...1command_line_arguments.Warp, %edi
	callq	runtime.newobject
.Ltmp775:
	.loc	4 0 1 is_stmt 0
	movq	%rbx, 72(%rsp)
	movq	%rax, %rbx
.Ltmp776:
	leaq	72(%rsp), %rdx
	.loc	4 187 1
	movl	$type...1command_line_arguments.Warp, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	.loc	4 188 2 is_stmt 1
	movl	$context.Context..d, %edi
	callq	runtime.newobject
	movq	%rax, %r14
.Ltmp777:
	.loc	4 0 2 is_stmt 0
	movq	%r13, 192(%rsp)
	movq	%r15, 200(%rsp)
	leaq	192(%rsp), %rdx
	.loc	4 188 2
	movl	$context.Context..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	.loc	4 189 2 is_stmt 1
	movl	$type...1command_line_arguments.Session, %edi
	callq	runtime.newobject
	movq	%rax, %r15
.Ltmp778:
	.loc	4 0 2 is_stmt 0
	movq	%r12, 64(%rsp)
	leaq	64(%rsp), %rdx
	.loc	4 189 2
	movl	$type...1command_line_arguments.Session, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
.Ltmp779:
	.loc	4 192 2 is_stmt 1
	movq	(%rbx), %rax
	.loc	4 192 3 is_stmt 0
	testq	%rax, %rax
	je	.LBB15_17
.Ltmp780:
	movq	56(%rax), %rdi
	.loc	4 192 9
	callq	sync.Mutex.Lock
	.loc	4 193 2 is_stmt 1
	movq	(%rbx), %r12
.Ltmp781:
	.loc	4 193 3 is_stmt 0
	testq	%r12, %r12
	je	.LBB15_17
.Ltmp782:
	.loc	4 195 14 is_stmt 1
	movq	(%r15), %rax
	.loc	4 195 16 is_stmt 0
	testq	%rax, %rax
	je	.LBB15_17
.Ltmp783:
	.loc	4 0 16
	addq	$32, %r12
	movups	16(%rax), %xmm0
	movaps	%xmm0, 304(%rsp)
	movups	80(%rax), %xmm0
	movaps	%xmm0, 336(%rsp)
	.loc	4 202 14 is_stmt 1
	movl	$type..map.6string.7.1command_line_arguments.Session, %edi
	xorl	%esi, %esi
	movl	$24, %edx
	movl	$16, %ecx
	xorl	%r8d, %r8d
	callq	__go_construct_map
	movq	%rax, %rbp
	.loc	4 194 14
	movaps	336(%rsp), %xmm0
	movaps	%xmm0, 320(%rsp)
	.loc	4 193 11
	movl	$command_line_arguments.HostState..d, %edi
	callq	runtime.newobject
	movq	%rax, %r13
.Ltmp784:
	.loc	4 204 12
	movq	(%r15), %rax
	.loc	4 193 12
	movaps	304(%rsp), %xmm0
	movaps	320(%rsp), %xmm1
	movaps	%xmm1, 400(%rsp)
	movaps	%xmm0, 384(%rsp)
	movq	$3, 416(%rsp)
	movq	%rbp, 424(%rsp)
	movq	%rax, 432(%rsp)
	leaq	384(%rsp), %rdx
	.loc	4 193 11 is_stmt 0
	movl	$command_line_arguments.HostState..d, %edi
	movq	%r13, %rsi
	callq	runtime.typedmemmove
	.loc	4 193 9
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB15_18
.Ltmp785:
	movq	%r12, %rdi
	movq	%r13, %rsi
	callq	runtime.writebarrierptr
	jmp	.LBB15_7
.Ltmp786:
.LBB15_18:
	movq	%r13, (%r12)
.Ltmp787:
.LBB15_7:
	.loc	4 206 2 is_stmt 1
	movq	(%rbx), %rax
	.loc	4 206 3 is_stmt 0
	testq	%rax, %rax
	je	.LBB15_17
.Ltmp788:
	movq	56(%rax), %rdi
	.loc	4 206 9
	callq	sync.Mutex.Unlock
	.loc	4 209 5 is_stmt 1
	movl	$type..struct.4.4x.5.f.f.0.1.4void.5.2.command_line_arguments.w1.0.1.1command_line_arguments.Warp.2.command_line_arguments.ctx2.0.1context.Context.2.command_line_arguments.ss3.0.1.1command_line_arguments.Session.5, %edi
	callq	runtime.newobject
	movq	%rax, %r12
	movq	$command_line_arguments..1command_line_arguments.Warp.handleHost..func1, 272(%rsp)
	movq	%rbx, 280(%rsp)
	movq	%r14, 288(%rsp)
	movq	%r15, 296(%rsp)
	leaq	272(%rsp), %rdx
	movl	$type..struct.4.4x.5.f.f.0.1.4void.5.2.command_line_arguments.w1.0.1.1command_line_arguments.Warp.2.command_line_arguments.ctx2.0.1context.Context.2.command_line_arguments.ss3.0.1.1command_line_arguments.Session.5, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	.loc	4 209 2 is_stmt 0
	testq	%r12, %r12
	je	.LBB15_19
.Ltmp789:
	movl	$type..struct.4.4x.5fn.0func.8.9.8.9.5, %edi
	callq	runtime.newobject
	movq	%rax, %rbp
	movq	%r12, 56(%rsp)
	leaq	56(%rsp), %rdx
	movl	$type..struct.4.4x.5fn.0func.8.9.8.9.5, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movl	$command_line_arguments.command_line_arguments..thunk8, %edi
	movq	%rbp, %rsi
	callq	__go_go
	.loc	4 270 5 is_stmt 1
	movl	$type..struct.4.4x.5.f.f.0.1.4void.5.2.command_line_arguments.ctx1.0.1context.Context.2.command_line_arguments.w2.0.1.1command_line_arguments.Warp.2.command_line_arguments.ss3.0.1.1command_line_arguments.Session.5, %edi
	callq	runtime.newobject
	movq	%rax, %r12
	movq	$command_line_arguments..1command_line_arguments.Warp.handleHost..func2, 240(%rsp)
	movq	%r14, 248(%rsp)
	movq	%rbx, 256(%rsp)
	movq	%r15, 264(%rsp)
	leaq	240(%rsp), %rdx
	movl	$type..struct.4.4x.5.f.f.0.1.4void.5.2.command_line_arguments.ctx1.0.1context.Context.2.command_line_arguments.w2.0.1.1command_line_arguments.Warp.2.command_line_arguments.ss3.0.1.1command_line_arguments.Session.5, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	.loc	4 270 2 is_stmt 0
	testq	%r12, %r12
	je	.LBB15_19
.Ltmp790:
	movl	$type..struct.4.4x.5fn.0func.8.9.8.9.5, %edi
	callq	runtime.newobject
	movq	%rax, %rbp
	movq	%r12, 48(%rsp)
	leaq	48(%rsp), %rdx
	movl	$type..struct.4.4x.5fn.0func.8.9.8.9.5, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movl	$command_line_arguments.command_line_arguments..thunk9, %edi
	movq	%rbp, %rsi
	callq	__go_go
	.loc	4 283 5 is_stmt 1
	movl	$type..struct.4.4x.5.f.f.0.1.4void.5.2.command_line_arguments.w1.0.1.1command_line_arguments.Warp.2.command_line_arguments.ss2.0.1.1command_line_arguments.Session.2.command_line_arguments.ctx3.0.1context.Context.5, %edi
	callq	runtime.newobject
	movq	%rax, %r12
	movq	$command_line_arguments..1command_line_arguments.Warp.handleHost..func4, 208(%rsp)
	movq	%rbx, 216(%rsp)
	movq	%r15, 224(%rsp)
	movq	%r14, 232(%rsp)
	leaq	208(%rsp), %rdx
	movl	$type..struct.4.4x.5.f.f.0.1.4void.5.2.command_line_arguments.w1.0.1.1command_line_arguments.Warp.2.command_line_arguments.ss2.0.1.1command_line_arguments.Session.2.command_line_arguments.ctx3.0.1context.Context.5, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	.loc	4 283 2 is_stmt 0
	testq	%r12, %r12
	je	.LBB15_19
.Ltmp791:
	movl	$type..struct.4.4x.5fn.0func.8.9.8.9.5, %edi
	callq	runtime.newobject
	movq	%rax, %rbp
	movq	%r12, 40(%rsp)
	leaq	40(%rsp), %rdx
	movl	$type..struct.4.4x.5fn.0func.8.9.8.9.5, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movl	$command_line_arguments.command_line_arguments..thunk10, %edi
	movq	%rbp, %rsi
	callq	__go_go
	.loc	4 304 2 is_stmt 1
	movq	(%rbx), %rdi
	.loc	4 304 3 is_stmt 0
	movq	(%r14), %rsi
	movq	8(%r14), %rdx
	callq	command_line_arguments.Warp.updateHost
	.loc	4 305 2 is_stmt 1
	movq	(%rbx), %rdi
	.loc	4 305 3 is_stmt 0
	movq	(%r14), %rsi
	movq	8(%r14), %rdx
	callq	command_line_arguments.Warp.updateClientSessions
	.loc	4 309 3 is_stmt 1
	movq	(%r15), %rdi
	.loc	4 309 5 is_stmt 0
	callq	command_line_arguments.Session.ToString
	movq	%rax, %r13
	movq	%rdx, %r12
	.loc	4 307 10 is_stmt 1
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbp
	movq	%r13, 176(%rsp)
	movq	%r12, 184(%rsp)
	leaq	176(%rsp), %rdx
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movq	$string..d, 160(%rsp)
	movq	%rbp, 168(%rsp)
	leaq	160(%rsp), %rax
	movq	%rax, 80(%rsp)
	movq	$1, 88(%rsp)
	movq	$1, 96(%rsp)
	movq	(%r14), %rdi
	movq	8(%r14), %rsi
	movq	96(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	80(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.269, %edx
	movl	$32, %ecx
	callq	github_com_spolu_warp_lib_logging.Logf
	.loc	4 312 4
	movq	(%r15), %rax
	.loc	4 312 6 is_stmt 0
	testq	%rax, %rax
	je	.LBB15_17
.Ltmp792:
	.loc	4 0 6
	movq	216(%rax), %rcx
	movq	224(%rax), %rdi
	.loc	4 312 10
	callq	*16(%rcx)
	leaq	32(%rsp), %rsi
	.loc	4 312 2
	movq	%rax, %rdi
	callq	runtime.chanrecv1
	.loc	4 314 8 is_stmt 1
	movq	(%rbx), %rax
	.loc	4 314 9 is_stmt 0
	testq	%rax, %rax
	je	.LBB15_17
.Ltmp793:
	movq	48(%rax), %rdi
	.loc	4 314 2
	callq	runtime.closechan
	.loc	4 319 3 is_stmt 1
	movq	(%r15), %rdi
	.loc	4 319 5 is_stmt 0
	callq	command_line_arguments.Session.ToString
	movq	%rax, %r12
	movq	%rdx, %r15
.Ltmp794:
	.loc	4 317 10 is_stmt 1
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbp
	movq	%r12, 144(%rsp)
	movq	%r15, 152(%rsp)
	leaq	144(%rsp), %rdx
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movq	$string..d, 128(%rsp)
	movq	%rbp, 136(%rsp)
	leaq	128(%rsp), %rax
	movq	%rax, 104(%rsp)
	movq	$1, 112(%rsp)
	movq	$1, 120(%rsp)
	movq	(%r14), %rdi
	movq	8(%r14), %rsi
	movq	120(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	104(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.271, %edx
	movl	$34, %ecx
	callq	github_com_spolu_warp_lib_logging.Logf
	.loc	4 321 14
	movq	(%rbx), %rsi
	leaq	360(%rsp), %rdi
.Ltmp795:
	.loc	4 321 15 is_stmt 0
	callq	command_line_arguments.Warp.CientSessions
	movq	368(%rsp), %r15
.Ltmp796:
	.loc	4 322 2 is_stmt 1
	testq	%r15, %r15
	jle	.LBB15_16
.Ltmp797:
	.loc	4 0 2 is_stmt 0
	movq	360(%rsp), %r12
.Ltmp798:
	xorl	%ebx, %ebx
.Ltmp799:
	.p2align	4, 0x90
.LBB15_15:
	.loc	4 322 2
	movq	(%r12,%rbx,8), %rbp
.Ltmp800:
	.loc	4 323 4 is_stmt 1
	movq	(%r14), %rsi
	movq	8(%r14), %rdx
	movups	.Lconst.276(%rip), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.273, %ecx
	movl	$17, %r8d
	movq	%rbp, %rdi
	callq	command_line_arguments.Session.SendError
	.loc	4 327 4
	movq	%rbp, %rdi
	callq	command_line_arguments.Session.TearDown
	.loc	4 322 2
	addq	$1, %rbx
	cmpq	%rbx, %r15
	jne	.LBB15_15
.Ltmp801:
.LBB15_16:
	.loc	4 0 2 is_stmt 0
	addq	$440, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
.Ltmp802:
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB15_17:
	.cfi_def_cfa_offset 496
.Ltmp803:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp804:
.LBB15_19:
	movl	$11, %edi
	callq	__go_runtime_error
.Lfunc_end15:
	.size	command_line_arguments.Warp.handleHost, .Lfunc_end15-command_line_arguments.Warp.handleHost
	.cfi_endproc

	.section	.text.command_line_arguments.Warp.handleShellClient,"ax",@progbits
	.globl	command_line_arguments.Warp.handleShellClient
	.p2align	4, 0x90
	.type	command_line_arguments.Warp.handleShellClient,@function
command_line_arguments.Warp.handleShellClient:
.Lfunc_begin16:
	.loc	4 334 0 is_stmt 1
	.cfi_startproc
	leaq	-600(%rsp), %r11
	cmpq	%fs:112, %r11
	ja	.LBB16_2
	movq	%r10, %rax
	movabsq	$600, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB16_2:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$552, %rsp
	.cfi_def_cfa_offset 608
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rcx, %r12
	movq	%rdx, %r13
	movq	%rsi, %rbp
	movq	%rdi, %rbx
.Ltmp805:
	.loc	4 334 1 prologue_end
	movl	$type...1command_line_arguments.Warp, %edi
	callq	runtime.newobject
	movq	%rax, %r15
.Ltmp806:
	.loc	4 0 1 is_stmt 0
	movq	%rbx, 72(%rsp)
	leaq	72(%rsp), %rdx
	.loc	4 334 1
	movl	$type...1command_line_arguments.Warp, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	.loc	4 335 2 is_stmt 1
	movl	$context.Context..d, %edi
	callq	runtime.newobject
	movq	%rax, %r14
.Ltmp807:
	.loc	4 0 2 is_stmt 0
	movq	%rbp, 208(%rsp)
	movq	%r13, 216(%rsp)
	leaq	208(%rsp), %rdx
	.loc	4 335 2
	movl	$context.Context..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	.loc	4 336 2 is_stmt 1
	movl	$type...1command_line_arguments.Session, %edi
	callq	runtime.newobject
	movq	%rax, %r13
.Ltmp808:
	.loc	4 0 2 is_stmt 0
	movq	%r12, 64(%rsp)
	leaq	64(%rsp), %rdx
	.loc	4 336 2
	movl	$type...1command_line_arguments.Session, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movq	$0, 40(%rsp)
.Ltmp809:
	.loc	4 339 2 is_stmt 1
	movq	(%r15), %rax
	.loc	4 339 3 is_stmt 0
	testq	%rax, %rax
	je	.LBB16_53
.Ltmp810:
	movq	56(%rax), %rdi
	.loc	4 339 9
	callq	sync.Mutex.Lock
.Ltmp811:
	.loc	4 341 24 is_stmt 1
	movq	(%r15), %rcx
	.loc	4 341 25 is_stmt 0
	testq	%rcx, %rcx
	je	.LBB16_53
.Ltmp812:
	.loc	4 341 5
	movq	(%r13), %rax
	.loc	4 341 7
	testq	%rax, %rax
	je	.LBB16_53
.Ltmp813:
	.loc	4 0 7
	movq	32(%rcx), %rcx
	.loc	4 341 30
	testq	%rcx, %rcx
	je	.LBB16_53
.Ltmp814:
	.loc	4 341 21
	movq	16(%rax), %rdi
	movq	24(%rax), %rsi
	movq	(%rcx), %rdx
	movq	8(%rcx), %rcx
	callq	runtime.eqstring
	cmpb	$1, %al
	jne	.LBB16_26
.Ltmp815:
	.loc	4 343 27 is_stmt 1
	movq	(%r15), %rax
	.loc	4 343 28 is_stmt 0
	testq	%rax, %rax
	je	.LBB16_53
.Ltmp816:
	movq	32(%rax), %rcx
	.loc	4 343 33
	testq	%rcx, %rcx
	je	.LBB16_53
.Ltmp817:
	.loc	4 343 6
	movq	(%r13), %rax
	.loc	4 343 8
	testq	%rax, %rax
	je	.LBB16_53
.Ltmp818:
	.loc	4 0 8
	movq	48(%rcx), %rcx
	.loc	4 343 41
	testq	%rcx, %rcx
	je	.LBB16_53
.Ltmp819:
	.loc	4 343 24
	movq	32(%rax), %rdi
	movq	40(%rax), %rsi
	movq	32(%rcx), %rdx
	movq	40(%rcx), %rcx
	callq	runtime.eqstring
	.loc	4 0 0
	movq	(%r13), %rdi
	.loc	4 343 24
	cmpb	$1, %al
	jne	.LBB16_12
.Ltmp820:
	.loc	4 353 43 is_stmt 1
	testq	%rdi, %rdi
	je	.LBB16_53
.Ltmp821:
	.loc	4 0 43 is_stmt 0
	movups	(%rdi), %xmm0
	movaps	%xmm0, 480(%rsp)
	.loc	4 353 15
	movq	(%r15), %rax
	.loc	4 353 16
	testq	%rax, %rax
	je	.LBB16_53
.Ltmp822:
	movq	32(%rax), %rax
	.loc	4 353 21
	testq	%rax, %rax
	je	.LBB16_53
.Ltmp823:
	.loc	4 353 31
	movq	40(%rax), %rsi
	leaq	480(%rsp), %rdx
	.loc	4 353 6
	movl	$type..map.6string.7.1command_line_arguments.Session, %edi
	callq	runtime.mapaccess2
.Ltmp824:
	.loc	4 353 3
	testb	$1, %dl
	je	.LBB16_20
.Ltmp825:
	.loc	4 353 6
	movq	(%rax), %rdi
.Ltmp826:
	.loc	4 354 5 is_stmt 1
	callq	command_line_arguments.Session.TearDown
.Ltmp827:
.LBB16_20:
	.loc	4 356 3
	movq	(%r15), %rax
	.loc	4 356 4 is_stmt 0
	testq	%rax, %rax
	je	.LBB16_53
.Ltmp828:
	.loc	4 356 29
	movq	(%r13), %rcx
	.loc	4 356 31
	testq	%rcx, %rcx
	je	.LBB16_53
.Ltmp829:
	.loc	4 0 31
	movq	32(%rax), %rax
	movups	(%rcx), %xmm0
	movaps	%xmm0, 464(%rsp)
	.loc	4 356 9
	testq	%rax, %rax
	je	.LBB16_53
.Ltmp830:
	.loc	4 0 9
	movq	(%r13), %rbx
.Ltmp831:
	.loc	4 356 19
	movq	40(%rax), %rsi
	leaq	464(%rsp), %rdx
	.loc	4 356 47
	movl	$type..map.6string.7.1command_line_arguments.Session, %edi
	callq	runtime.mapassign
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB16_24
.Ltmp832:
	movq	%rax, %rdi
	movq	%rbx, %rsi
	callq	runtime.writebarrierptr
	movb	$1, %cl
	jmp	.LBB16_56
.Ltmp833:
.LBB16_26:
	.loc	4 0 47
	movq	$0, 40(%rsp)
.Ltmp834:
	.loc	4 358 25 is_stmt 1
	movq	(%r13), %rax
	.loc	4 358 27 is_stmt 0
	testq	%rax, %rax
	je	.LBB16_53
.Ltmp835:
	.loc	4 0 27
	movups	16(%rax), %xmm0
	movaps	%xmm0, 448(%rsp)
	.loc	4 358 15
	movq	(%r15), %rax
	.loc	4 358 16
	testq	%rax, %rax
	je	.LBB16_53
.Ltmp836:
	movq	40(%rax), %rsi
	leaq	448(%rsp), %rdx
	.loc	4 358 6
	movl	$type..map.6string.7.1command_line_arguments.UserState, %edi
	callq	runtime.mapaccess2
.Ltmp837:
	movq	(%rax), %rax
.Ltmp838:
	movq	%rax, 40(%rsp)
	.loc	4 358 43
	testb	%dl, %dl
	je	.LBB16_29
.Ltmp839:
	.loc	4 366 11 is_stmt 1
	movq	$command_line_arguments..1command_line_arguments.Warp.handleShellClient..func1, 192(%rsp)
	leaq	40(%rsp), %rax
	movq	%rax, 200(%rsp)
	leaq	192(%rsp), %r10
.Ltmp840:
	.loc	4 373 28
	callq	command_line_arguments..1command_line_arguments.Warp.handleShellClient..func1
.Ltmp841:
	.loc	4 373 7 is_stmt 0
	movq	(%r13), %rcx
	.loc	4 373 9
	testq	%rcx, %rcx
	je	.LBB16_53
.Ltmp842:
	.loc	4 373 33
	testq	%rax, %rax
	je	.LBB16_53
.Ltmp843:
	.loc	4 373 25
	movq	32(%rcx), %rdi
	movq	40(%rcx), %rsi
	movq	32(%rax), %rdx
	movq	40(%rax), %rcx
	callq	runtime.eqstring
	cmpb	$1, %al
	je	.LBB16_36
.Ltmp844:
	.loc	4 374 5 is_stmt 1
	movq	(%r13), %rdi
.Ltmp845:
.LBB16_12:
	.loc	4 0 5 is_stmt 0
	movq	(%r14), %rsi
	movq	8(%r14), %rdx
	movups	.Lconst.301(%rip), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.298, %ecx
	movl	$20, %r8d
	callq	command_line_arguments.Session.SendError
	movq	(%r15), %rax
	testq	%rax, %rax
	je	.LBB16_53
.Ltmp846:
	movq	56(%rax), %rdi
	callq	sync.Mutex.Unlock
	jmp	.LBB16_14
.Ltmp847:
.LBB16_29:
	.loc	4 359 14 is_stmt 1
	movq	(%r13), %rax
	.loc	4 359 16 is_stmt 0
	testq	%rax, %rax
	je	.LBB16_53
.Ltmp848:
	.loc	4 0 16
	movq	(%r15), %rbp
.Ltmp849:
	movups	16(%rax), %xmm0
	movaps	%xmm0, 432(%rsp)
	.loc	4 360 15 is_stmt 1
	movq	(%r13), %rax
	.loc	4 360 17 is_stmt 0
	testq	%rax, %rax
	je	.LBB16_53
.Ltmp850:
	.loc	4 0 17
	movups	16(%rax), %xmm0
	movaps	%xmm0, 416(%rsp)
	movups	80(%rax), %xmm0
	movaps	%xmm0, 400(%rsp)
	.loc	4 363 15 is_stmt 1
	movl	$type..map.6string.7.1command_line_arguments.Session, %edi
	xorl	%esi, %esi
	movl	$24, %edx
.Ltmp851:
	movl	$16, %ecx
	xorl	%r8d, %r8d
	callq	__go_construct_map
	movq	%rax, %rbx
.Ltmp852:
	.loc	4 359 33
	movl	$command_line_arguments.UserState..d, %edi
	callq	runtime.newobject
	movq	%rax, %r12
.Ltmp853:
	.loc	4 359 34 is_stmt 0
	movaps	416(%rsp), %xmm0
	movaps	%xmm0, 496(%rsp)
	movaps	400(%rsp), %xmm0
	movaps	%xmm0, 512(%rsp)
	movq	$1, 528(%rsp)
	movq	%rbx, 536(%rsp)
	leaq	496(%rsp), %rdx
	.loc	4 359 33
	movl	$command_line_arguments.UserState..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	.loc	4 359 5
	testq	%rbp, %rbp
	je	.LBB16_53
.Ltmp854:
	movq	40(%rbp), %rsi
	leaq	432(%rsp), %rdx
	.loc	4 359 31
	movl	$type..map.6string.7.1command_line_arguments.UserState, %edi
	callq	runtime.mapassign
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB16_33
.Ltmp855:
	movq	%rax, %rdi
	movq	%r12, %rsi
	callq	runtime.writebarrierptr
	jmp	.LBB16_36
.Ltmp856:
.LBB16_24:
	.loc	4 356 47 is_stmt 1
	testq	%rax, %rax
	je	.LBB16_53
.Ltmp857:
	movq	%rbx, (%rax)
	movb	$1, %cl
	jmp	.LBB16_56
.Ltmp858:
.LBB16_33:
	.loc	4 359 31
	testq	%rax, %rax
	je	.LBB16_53
.Ltmp859:
	movq	%r12, (%rax)
.Ltmp860:
.LBB16_36:
	.loc	4 383 51
	movq	(%r13), %rax
	.loc	4 383 53 is_stmt 0
	testq	%rax, %rax
	je	.LBB16_53
.Ltmp861:
	.loc	4 0 53
	movups	(%rax), %xmm0
	movaps	%xmm0, 384(%rsp)
	.loc	4 383 25
	movq	(%r13), %rax
	.loc	4 383 27
	testq	%rax, %rax
	je	.LBB16_53
.Ltmp862:
	.loc	4 0 27
	movups	16(%rax), %xmm0
	movaps	%xmm0, 368(%rsp)
	.loc	4 383 15
	movq	(%r15), %rax
	.loc	4 383 16
	testq	%rax, %rax
	je	.LBB16_53
.Ltmp863:
	movq	40(%rax), %rsi
	leaq	368(%rsp), %rdx
	.loc	4 383 24
	movl	$type..map.6string.7.1command_line_arguments.UserState, %edi
	callq	runtime.mapaccess1
	movq	(%rax), %rax
	.loc	4 383 41
	testq	%rax, %rax
	je	.LBB16_53
.Ltmp864:
	movq	40(%rax), %rsi
	leaq	384(%rsp), %rdx
	.loc	4 383 6
	movl	$type..map.6string.7.1command_line_arguments.Session, %edi
	callq	runtime.mapaccess2
.Ltmp865:
	.loc	4 383 3
	testb	$1, %dl
	je	.LBB16_42
.Ltmp866:
	.loc	4 383 6
	movq	(%rax), %rdi
.Ltmp867:
	.loc	4 384 5 is_stmt 1
	callq	command_line_arguments.Session.TearDown
.Ltmp868:
.LBB16_42:
	.loc	4 386 3
	movq	(%r15), %rax
	.loc	4 386 4 is_stmt 0
	testq	%rax, %rax
	je	.LBB16_53
.Ltmp869:
	.loc	4 0 4
	movq	(%r13), %rcx
	.loc	4 386 15
	testq	%rcx, %rcx
	je	.LBB16_53
.Ltmp870:
	.loc	4 386 4
	movq	40(%rax), %rsi
	movups	16(%rcx), %xmm0
	movaps	%xmm0, 352(%rsp)
	leaq	352(%rsp), %rdx
	.loc	4 386 12
	movl	$type..map.6string.7.1command_line_arguments.UserState, %edi
	callq	runtime.mapaccess1
	.loc	4 386 39
	movq	(%r13), %rcx
	.loc	4 386 41
	testq	%rcx, %rcx
	je	.LBB16_53
.Ltmp871:
	.loc	4 0 41
	movq	(%rax), %rax
	movups	(%rcx), %xmm0
	movaps	%xmm0, 336(%rsp)
	.loc	4 386 29
	testq	%rax, %rax
	je	.LBB16_53
.Ltmp872:
	.loc	4 0 29
	movq	(%r13), %rbx
	.loc	4 386 29
	movq	40(%rax), %rsi
	leaq	336(%rsp), %rdx
	.loc	4 386 57
	movl	$type..map.6string.7.1command_line_arguments.Session, %edi
	callq	runtime.mapassign
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB16_47
.Ltmp873:
	movq	%rax, %rdi
	movq	%rbx, %rsi
	callq	runtime.writebarrierptr
	jmp	.LBB16_55
.Ltmp874:
.LBB16_47:
	testq	%rax, %rax
	je	.LBB16_53
.Ltmp875:
	movq	%rbx, (%rax)
.Ltmp876:
.LBB16_55:
	.loc	4 0 57
	xorl	%ecx, %ecx
.Ltmp877:
.LBB16_56:
	.loc	4 388 2 is_stmt 1
	movq	(%r15), %rax
	.loc	4 388 3 is_stmt 0
	testq	%rax, %rax
	je	.LBB16_53
.Ltmp878:
	.loc	4 0 3
	movl	%ecx, 52(%rsp)
	.loc	4 388 3
	movq	56(%rax), %rdi
	.loc	4 388 9
	callq	sync.Mutex.Unlock
	.loc	4 391 5 is_stmt 1
	movl	$type..struct.4.4x.5.f.f.0.1.4void.5.2.command_line_arguments.ctx1.0.1context.Context.2.command_line_arguments.w2.0.1.1command_line_arguments.Warp.2.command_line_arguments.ss3.0.1.1command_line_arguments.Session.5, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
	movq	$command_line_arguments..1command_line_arguments.Warp.handleShellClient..func2, 224(%rsp)
	movq	%r14, 232(%rsp)
	movq	%r15, 240(%rsp)
	movq	%r13, 248(%rsp)
	leaq	224(%rsp), %rdx
	movl	$type..struct.4.4x.5.f.f.0.1.4void.5.2.command_line_arguments.ctx1.0.1context.Context.2.command_line_arguments.w2.0.1.1command_line_arguments.Warp.2.command_line_arguments.ss3.0.1.1command_line_arguments.Session.5, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	.loc	4 391 2 is_stmt 0
	testq	%rbx, %rbx
	je	.LBB16_81
.Ltmp879:
	movl	$type..struct.4.4x.5fn.0func.8.9.8.9.5, %edi
	callq	runtime.newobject
	movq	%rax, %rbp
	movq	%rbx, 56(%rsp)
	leaq	56(%rsp), %rdx
	movl	$type..struct.4.4x.5fn.0func.8.9.8.9.5, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movl	$command_line_arguments.command_line_arguments..thunk11, %edi
	movq	%rbp, %rsi
	callq	__go_go
	.loc	4 404 2 is_stmt 1
	movq	(%r15), %rdi
	.loc	4 404 3 is_stmt 0
	movq	(%r14), %rsi
	movq	8(%r14), %rdx
	callq	command_line_arguments.Warp.updateHost
	.loc	4 405 2 is_stmt 1
	movq	(%r15), %rdi
	.loc	4 405 3 is_stmt 0
	movq	(%r14), %rsi
	movq	8(%r14), %rdx
	callq	command_line_arguments.Warp.updateClientSessions
	.loc	4 409 3 is_stmt 1
	movq	(%r13), %rdi
	.loc	4 409 5 is_stmt 0
	callq	command_line_arguments.Session.ToString
	movq	%rax, %r12
	movq	%rdx, %rbp
	.loc	4 407 10 is_stmt 1
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
	movq	%r12, 176(%rsp)
	movq	%rbp, 184(%rsp)
	leaq	176(%rsp), %rdx
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movq	$string..d, 160(%rsp)
	movq	%rbx, 168(%rsp)
	leaq	160(%rsp), %rax
	movq	%rax, 80(%rsp)
	movq	$1, 88(%rsp)
	movq	$1, 96(%rsp)
	movq	(%r14), %rdi
	movq	8(%r14), %rsi
	movq	96(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	80(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.303, %edx
	movl	$34, %ecx
	callq	github_com_spolu_warp_lib_logging.Logf
	.loc	4 412 4
	movq	(%r13), %rax
	.loc	4 412 6 is_stmt 0
	testq	%rax, %rax
	je	.LBB16_53
.Ltmp880:
	.loc	4 0 6
	movq	216(%rax), %rcx
	movq	224(%rax), %rdi
	.loc	4 412 10
	callq	*16(%rcx)
	leaq	32(%rsp), %rsi
	.loc	4 412 2
	movq	%rax, %rdi
	callq	runtime.chanrecv1
	.loc	4 417 3 is_stmt 1
	movq	(%r13), %rdi
	.loc	4 417 5 is_stmt 0
	callq	command_line_arguments.Session.ToString
	movq	%rax, %r12
	movq	%rdx, %rbp
	.loc	4 415 10 is_stmt 1
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
	movq	%r12, 144(%rsp)
	movq	%rbp, 152(%rsp)
	leaq	144(%rsp), %rdx
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movq	$string..d, 128(%rsp)
	movq	%rbx, 136(%rsp)
	leaq	128(%rsp), %rax
	movq	%rax, 104(%rsp)
	movq	$1, 112(%rsp)
	movq	$1, 120(%rsp)
	movq	(%r14), %rdi
	movq	8(%r14), %rsi
	movq	120(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	104(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.305, %edx
	movl	$30, %ecx
	callq	github_com_spolu_warp_lib_logging.Logf
	.loc	4 420 2
	movq	(%r15), %rax
	.loc	4 420 3 is_stmt 0
	testq	%rax, %rax
	je	.LBB16_53
.Ltmp881:
	movq	56(%rax), %rdi
	.loc	4 420 9
	callq	sync.Mutex.Lock
	cmpb	$0, 52(%rsp)
	je	.LBB16_65
.Ltmp882:
	.loc	4 422 10 is_stmt 1
	movq	(%r15), %rax
	.loc	4 422 11 is_stmt 0
	testq	%rax, %rax
	je	.LBB16_53
.Ltmp883:
	movq	32(%rax), %rax
	.loc	4 422 16
	testq	%rax, %rax
	je	.LBB16_53
.Ltmp884:
	.loc	4 422 27
	movq	(%r13), %rcx
	.loc	4 422 29
	testq	%rcx, %rcx
	je	.LBB16_53
.Ltmp885:
	.loc	4 422 16
	movq	40(%rax), %rsi
	movups	(%rcx), %xmm0
	movaps	%xmm0, 320(%rsp)
	leaq	320(%rsp), %rdx
	.loc	4 422 3
	movl	$type..map.6string.7.1command_line_arguments.Session, %edi
	jmp	.LBB16_77
.Ltmp886:
.LBB16_65:
	.loc	4 424 20 is_stmt 1
	movq	(%r13), %rax
	.loc	4 424 22 is_stmt 0
	testq	%rax, %rax
	je	.LBB16_53
.Ltmp887:
	.loc	4 0 22
	movups	16(%rax), %xmm0
	movaps	%xmm0, 304(%rsp)
	.loc	4 424 10
	movq	(%r15), %rax
	.loc	4 424 11
	testq	%rax, %rax
	je	.LBB16_53
.Ltmp888:
	movq	40(%rax), %rsi
	leaq	304(%rsp), %rdx
	.loc	4 424 19
	movl	$type..map.6string.7.1command_line_arguments.UserState, %edi
	callq	runtime.mapaccess1
	movq	(%rax), %rax
	.loc	4 424 36
	testq	%rax, %rax
	je	.LBB16_53
.Ltmp889:
	.loc	4 424 47
	movq	(%r13), %rcx
	.loc	4 424 49
	testq	%rcx, %rcx
	je	.LBB16_53
.Ltmp890:
	.loc	4 424 36
	movq	40(%rax), %rsi
	movups	(%rcx), %xmm0
	movaps	%xmm0, 288(%rsp)
	leaq	288(%rsp), %rdx
	.loc	4 424 3
	movl	$type..map.6string.7.1command_line_arguments.Session, %edi
	callq	runtime.mapdelete
	.loc	4 425 20 is_stmt 1
	movq	(%r13), %rax
	.loc	4 425 22 is_stmt 0
	testq	%rax, %rax
	je	.LBB16_53
.Ltmp891:
	.loc	4 0 22
	movups	16(%rax), %xmm0
	movaps	%xmm0, 272(%rsp)
	.loc	4 425 10
	movq	(%r15), %rax
	.loc	4 425 11
	testq	%rax, %rax
	je	.LBB16_53
.Ltmp892:
	movq	40(%rax), %rsi
	leaq	272(%rsp), %rdx
	.loc	4 425 19
	movl	$type..map.6string.7.1command_line_arguments.UserState, %edi
	callq	runtime.mapaccess1
	movq	(%rax), %rax
	.loc	4 425 36
	testq	%rax, %rax
	je	.LBB16_53
.Ltmp893:
	movq	40(%rax), %rax
	.loc	4 425 6
	testq	%rax, %rax
	je	.LBB16_74
.Ltmp894:
	.loc	4 0 6
	cmpq	$0, (%rax)
	jne	.LBB16_78
.Ltmp895:
.LBB16_74:
	.loc	4 426 11 is_stmt 1
	movq	(%r15), %rax
	.loc	4 426 12 is_stmt 0
	testq	%rax, %rax
	je	.LBB16_53
.Ltmp896:
	.loc	4 426 22
	movq	(%r13), %rcx
	.loc	4 426 24
	testq	%rcx, %rcx
	je	.LBB16_53
.Ltmp897:
	.loc	4 426 12
	movq	40(%rax), %rsi
	movups	16(%rcx), %xmm0
	movaps	%xmm0, 256(%rsp)
	leaq	256(%rsp), %rdx
	.loc	4 426 4
	movl	$type..map.6string.7.1command_line_arguments.UserState, %edi
.Ltmp898:
.LBB16_77:
	.loc	4 0 4
	callq	runtime.mapdelete
.Ltmp899:
.LBB16_78:
	.loc	4 429 2 is_stmt 1
	movq	(%r15), %rax
	.loc	4 429 3 is_stmt 0
	testq	%rax, %rax
	je	.LBB16_53
.Ltmp900:
	movq	56(%rax), %rdi
	.loc	4 429 9
	callq	sync.Mutex.Unlock
	.loc	4 432 2 is_stmt 1
	movq	(%r15), %rdi
	.loc	4 432 3 is_stmt 0
	movq	(%r14), %rsi
	movq	8(%r14), %rdx
	callq	command_line_arguments.Warp.updateHost
	.loc	4 433 2 is_stmt 1
	movq	(%r15), %rdi
	.loc	4 433 3 is_stmt 0
	movq	(%r14), %rsi
	movq	8(%r14), %rdx
	callq	command_line_arguments.Warp.updateClientSessions
.Ltmp901:
.LBB16_14:
	.loc	4 0 3
	addq	$552, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
.Ltmp902:
	.cfi_def_cfa_offset 32
	popq	%r14
.Ltmp903:
	.cfi_def_cfa_offset 24
	popq	%r15
.Ltmp904:
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB16_53:
	.cfi_def_cfa_offset 608
.Ltmp905:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp906:
.LBB16_81:
	.loc	4 391 2 is_stmt 1
	movl	$11, %edi
	callq	__go_runtime_error
.Ltmp907:
.Lfunc_end16:
	.size	command_line_arguments.Warp.handleShellClient, .Lfunc_end16-command_line_arguments.Warp.handleShellClient
	.cfi_endproc

	.section	.text.command_line_arguments.Warp.rcvHostData,"ax",@progbits
	.globl	command_line_arguments.Warp.rcvHostData
	.p2align	4, 0x90
	.type	command_line_arguments.Warp.rcvHostData,@function
command_line_arguments.Warp.rcvHostData:
.Lfunc_begin17:
	.loc	4 162 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB17_2
	movq	%r10, %rax
	movabsq	$136, %r10
	movabsq	$24, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB17_2:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$88, %rsp
	.cfi_def_cfa_offset 144
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rdx, 32(%rsp)
	movq	%rsi, %r12
	movq	%rdi, %rax
.Ltmp908:
	leaq	40(%rsp), %rdi
.Ltmp909:
	.loc	4 167 15 prologue_end
	movq	%rax, %rsi
.Ltmp910:
	callq	command_line_arguments.Warp.CientSessions
.Ltmp911:
	.loc	4 0 15 is_stmt 0
	movq	48(%rsp), %r13
.Ltmp912:
	.loc	4 168 2 is_stmt 1
	testq	%r13, %r13
	jle	.LBB17_8
.Ltmp913:
	.loc	4 0 2 is_stmt 0
	leaq	144(%rsp), %rbp
	movq	40(%rsp), %r15
.Ltmp914:
	xorl	%r14d, %r14d
.Ltmp915:
	.p2align	4, 0x90
.LBB17_4:
	.loc	4 168 2
	movq	(%r15,%r14,8), %rbx
.Ltmp916:
	.loc	4 173 14 is_stmt 1
	testq	%rbx, %rbx
	je	.LBB17_9
.Ltmp917:
	.loc	4 0 14 is_stmt 0
	movq	192(%rbx), %rax
	movq	200(%rbx), %rsi
	.loc	4 173 20
	movq	16(%rbp), %rcx
	movq	%rcx, 16(%rsp)
	movups	(%rbp), %xmm0
	movups	%xmm0, (%rsp)
.Ltmp918:
	leaq	64(%rsp), %rdi
	callq	*64(%rax)
	.loc	4 174 10 is_stmt 1
	cmpq	$0, 72(%rsp)
	je	.LBB17_7
.Ltmp919:
	.loc	4 177 5
	movq	%rbx, %rdi
	movq	%r12, %rsi
	movq	32(%rsp), %rdx
	callq	command_line_arguments.Session.SendInternalError
	.loc	4 178 5
	movq	%rbx, %rdi
	callq	command_line_arguments.Session.TearDown
.Ltmp920:
.LBB17_7:
	.loc	4 168 2
	addq	$1, %r14
	cmpq	%r13, %r14
	jl	.LBB17_4
.Ltmp921:
.LBB17_8:
	.loc	4 0 2 is_stmt 0
	addq	$88, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
.Ltmp922:
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB17_9:
	.cfi_def_cfa_offset 144
.Ltmp923:
	.loc	4 173 14 is_stmt 1
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp924:
.Lfunc_end17:
	.size	command_line_arguments.Warp.rcvHostData, .Lfunc_end17-command_line_arguments.Warp.rcvHostData
	.cfi_endproc

	.section	.text.command_line_arguments.Warp.rcvShellClientData,"ax",@progbits
	.globl	command_line_arguments.Warp.rcvShellClientData
	.p2align	4, 0x90
	.type	command_line_arguments.Warp.rcvShellClientData,@function
command_line_arguments.Warp.rcvShellClientData:
.Lfunc_begin18:
	.loc	4 141 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB18_2
	movq	%r10, %rax
	movabsq	$88, %r10
	movabsq	$24, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB18_2:
.Ltmp925:
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	subq	$72, %rsp
	.cfi_def_cfa_offset 96
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
.Ltmp926:
	.loc	4 147 3 prologue_end
	testq	%rdi, %rdi
	je	.LBB18_8
.Ltmp927:
	.loc	4 0 3 is_stmt 0
	movq	%rcx, %rbx
.Ltmp928:
	movq	%rdi, %r14
.Ltmp929:
	.loc	4 147 3
	movq	56(%rdi), %rdi
	.loc	4 147 9
	callq	sync.Mutex.Lock
.Ltmp930:
	.loc	4 148 7 is_stmt 1
	testq	%rbx, %rbx
	je	.LBB18_8
.Ltmp931:
	.loc	4 0 7 is_stmt 0
	movq	32(%r14), %rax
	.loc	4 148 30
	testq	%rax, %rax
	je	.LBB18_8
.Ltmp932:
	.loc	4 148 21
	movq	16(%rbx), %rdi
	movq	24(%rbx), %rsi
	movq	(%rax), %rdx
	movq	8(%rax), %rcx
	callq	runtime.eqstring
	cmpb	$1, %al
	jne	.LBB18_9
.Ltmp933:
	.loc	4 149 11 is_stmt 1
	movq	32(%r14), %rax
	testq	%rax, %rax
	je	.LBB18_8
.Ltmp934:
.LBB18_11:
	.loc	4 0 11 is_stmt 0
	addq	$32, %rax
	movq	(%rax), %rbx
.Ltmp935:
	.loc	4 155 3 is_stmt 1
	movq	56(%r14), %rdi
	.loc	4 155 9 is_stmt 0
	callq	sync.Mutex.Unlock
	.loc	4 155 3
	testb	$2, %bl
	je	.LBB18_14
.Ltmp936:
	.loc	4 0 3
	leaq	96(%rsp), %rax
	movq	16(%rax), %rcx
	movq	%rcx, 16(%rsp)
	movups	(%rax), %xmm0
	movaps	%xmm0, (%rsp)
	.loc	4 158 4 is_stmt 1
	movq	48(%r14), %rdi
	movq	%rsp, %rsi
	.loc	4 158 10 is_stmt 0
	callq	runtime.chansend1
	jmp	.LBB18_14
.Ltmp937:
.LBB18_9:
	.loc	4 0 10
	addq	$16, %rbx
.Ltmp938:
	movups	(%rbx), %xmm0
	movaps	%xmm0, 48(%rsp)
.Ltmp939:
	.loc	4 151 16 is_stmt 1
	movq	40(%r14), %rsi
	leaq	48(%rsp), %rdx
	.loc	4 151 6 is_stmt 0
	movl	$type..map.6string.7.1command_line_arguments.UserState, %edi
	callq	runtime.mapaccess2
.Ltmp940:
	.loc	4 151 3
	testb	$1, %dl
	jne	.LBB18_10
.Ltmp941:
	.loc	4 155 3 is_stmt 1
	movq	56(%r14), %rdi
	.loc	4 155 9 is_stmt 0
	callq	sync.Mutex.Unlock
.Ltmp942:
.LBB18_14:
	.loc	4 0 9
	addq	$72, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
.Ltmp943:
	.cfi_def_cfa_offset 8
	retq
.LBB18_10:
	.cfi_def_cfa_offset 96
.Ltmp944:
	movups	(%rbx), %xmm0
	movaps	%xmm0, 32(%rsp)
.Ltmp945:
	.loc	4 152 12 is_stmt 1
	movq	40(%r14), %rsi
	leaq	32(%rsp), %rdx
.Ltmp946:
	.loc	4 152 20 is_stmt 0
	movl	$type..map.6string.7.1command_line_arguments.UserState, %edi
	callq	runtime.mapaccess1
	movq	(%rax), %rax
	testq	%rax, %rax
	jne	.LBB18_11
.Ltmp947:
.LBB18_8:
	.loc	4 0 20
	movl	$6, %edi
	callq	__go_runtime_error
.Lfunc_end18:
	.size	command_line_arguments.Warp.rcvShellClientData, .Lfunc_end18-command_line_arguments.Warp.rcvShellClientData
	.cfi_endproc

	.section	.text.command_line_arguments.Warp.updateClientSessions,"ax",@progbits
	.globl	command_line_arguments.Warp.updateClientSessions
	.p2align	4, 0x90
	.type	command_line_arguments.Warp.updateClientSessions,@function
command_line_arguments.Warp.updateClientSessions:
.Lfunc_begin19:
	.loc	4 108 0 is_stmt 1
	.cfi_startproc
	leaq	-344(%rsp), %r11
	cmpq	%fs:112, %r11
	ja	.LBB19_2
	movq	%r10, %rax
	movabsq	$344, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB19_2:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$296, %rsp
	.cfi_def_cfa_offset 352
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rdx, %rax
	movq	%rsi, %rcx
	movq	%rdi, %rbx
.Ltmp948:
	leaq	256(%rsp), %rdi
.Ltmp949:
	.loc	4 111 9 prologue_end
	movq	%rbx, %rsi
	movq	%rcx, 56(%rsp)
.Ltmp950:
	movq	%rcx, %rdx
	movq	%rax, 64(%rsp)
.Ltmp951:
	movq	%rax, %rcx
	callq	command_line_arguments.Warp.State
.Ltmp952:
	.loc	4 0 9 is_stmt 0
	movups	256(%rsp), %xmm0
	movaps	%xmm0, 208(%rsp)
	movq	272(%rsp), %r15
.Ltmp953:
	movq	280(%rsp), %r13
.Ltmp954:
	movq	288(%rsp), %rax
	.loc	4 112 15 is_stmt 1
	movq	%rax, 48(%rsp)
	leaq	232(%rsp), %rdi
.Ltmp955:
	movq	%rbx, %rsi
	callq	command_line_arguments.Warp.CientSessions
	movq	240(%rsp), %rax
.Ltmp956:
	.loc	4 0 15 is_stmt 0
	movq	%rax, 40(%rsp)
.Ltmp957:
	.loc	4 113 2 is_stmt 1
	testq	%rax, %rax
	jle	.LBB19_6
.Ltmp958:
	.loc	4 0 2 is_stmt 0
	movq	232(%rsp), %rax
.Ltmp959:
	movq	%rax, 24(%rsp)
	xorl	%r14d, %r14d
	movq	%r13, 32(%rsp)
.Ltmp960:
	.p2align	4, 0x90
.LBB19_4:
	.loc	4 113 2
	movq	24(%rsp), %rax
	movq	(%rax,%r14,8), %rbx
.Ltmp961:
	.loc	4 116 6 is_stmt 1
	movq	%rbx, %rdi
	callq	command_line_arguments.Session.ToString
	movq	%rax, %rbp
	movq	%r15, %r13
	movq	%rdx, %r15
	.loc	4 114 11
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %r12
	movq	%rbp, 96(%rsp)
	movq	%r15, 104(%rsp)
	movq	%r13, %r15
	movq	32(%rsp), %r13
	movl	$string..d, %edi
	movq	%rax, %rsi
	leaq	96(%rsp), %rdx
	callq	runtime.typedmemmove
	movl	$int..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbp
	movq	%r15, (%rax)
	movl	$int..d, %edi
	callq	runtime.newobject
	movq	%r13, (%rax)
	movq	$string..d, 112(%rsp)
	movq	%r12, 120(%rsp)
	movq	$int..d, 128(%rsp)
	movq	%rbp, 136(%rsp)
	movq	$int..d, 144(%rsp)
	movq	%rax, 152(%rsp)
	leaq	112(%rsp), %rax
	movq	%rax, 72(%rsp)
	movq	$3, 80(%rsp)
	movq	$3, 88(%rsp)
	movq	88(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	72(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.255, %edx
	movl	$50, %ecx
	movq	56(%rsp), %rdi
	movq	64(%rsp), %rsi
	callq	github_com_spolu_warp_lib_logging.Logf
	.loc	4 119 5
	testq	%rbx, %rbx
	je	.LBB19_7
.Ltmp962:
	movq	136(%rbx), %rbx
.Ltmp963:
	.loc	4 119 20 is_stmt 0
	movl	$github_com_spolu_warp.State..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbp
	movaps	208(%rsp), %xmm0
	movaps	%xmm0, 160(%rsp)
	movq	%r15, 176(%rsp)
	movq	%r13, 184(%rsp)
	movq	48(%rsp), %rax
	movq	%rax, 192(%rsp)
	movl	$github_com_spolu_warp.State..d, %edi
	movq	%rbp, %rsi
	leaq	160(%rsp), %rdx
	callq	runtime.typedmemmove
	.loc	4 119 12
	movl	$github_com_spolu_warp.State..d, %esi
	movq	%rbx, %rdi
	movq	%rbp, %rdx
	callq	encoding_gob.Encoder.Encode
	.loc	4 113 2 is_stmt 1
	addq	$1, %r14
	cmpq	40(%rsp), %r14
	jl	.LBB19_4
.Ltmp964:
.LBB19_6:
	.loc	4 0 2 is_stmt 0
	addq	$296, %rsp
.Ltmp965:
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB19_7:
	.cfi_def_cfa_offset 352
.Ltmp966:
	.loc	4 119 5 is_stmt 1
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp967:
.Lfunc_end19:
	.size	command_line_arguments.Warp.updateClientSessions, .Lfunc_end19-command_line_arguments.Warp.updateClientSessions
	.cfi_endproc

	.section	.text.command_line_arguments.Warp.updateHost,"ax",@progbits
	.globl	command_line_arguments.Warp.updateHost
	.p2align	4, 0x90
	.type	command_line_arguments.Warp.updateHost,@function
command_line_arguments.Warp.updateHost:
.Lfunc_begin20:
	.loc	4 124 0
	.cfi_startproc
	leaq	-296(%rsp), %r11
	cmpq	%fs:112, %r11
	ja	.LBB20_2
	movq	%r10, %rax
	movabsq	$296, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB20_2:
.Ltmp968:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$248, %rsp
	.cfi_def_cfa_offset 304
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	.loc	4 127 7 prologue_end
	testq	%rdi, %rdi
	je	.LBB20_11
.Ltmp969:
	.loc	4 0 7 is_stmt 0
	movq	%rdi, %rbx
.Ltmp970:
	.loc	4 127 7
	movq	32(%rdi), %rax
	.loc	4 127 12
	testq	%rax, %rax
	je	.LBB20_11
.Ltmp971:
	movq	48(%rax), %rax
	.loc	4 127 20
	testq	%rax, %rax
	je	.LBB20_11
.Ltmp972:
	.loc	4 127 5
	cmpb	$0, 208(%rax)
	jne	.LBB20_10
.Ltmp973:
	.loc	4 0 5
	movq	%rdx, %rcx
.Ltmp974:
	movq	%rsi, %rdx
.Ltmp975:
	leaq	208(%rsp), %rdi
.Ltmp976:
	.loc	4 128 10 is_stmt 1
	movq	%rbx, %rsi
	movq	%rdx, 40(%rsp)
	movq	%rcx, 32(%rsp)
	callq	command_line_arguments.Warp.State
.Ltmp977:
	.loc	4 0 10 is_stmt 0
	movups	208(%rsp), %xmm0
	movaps	%xmm0, 192(%rsp)
	.loc	4 132 5 is_stmt 1
	movq	32(%rbx), %rax
	.loc	4 132 10 is_stmt 0
	testq	%rax, %rax
	je	.LBB20_11
.Ltmp978:
	.loc	4 0 10
	movq	224(%rsp), %rbp
.Ltmp979:
	movq	232(%rsp), %r15
.Ltmp980:
	movq	240(%rsp), %rcx
	.loc	4 132 10
	movq	%rcx, 48(%rsp)
	movq	48(%rax), %rdi
	.loc	4 132 18
	callq	command_line_arguments.Session.ToString
	movq	%rax, %r12
	movq	%rdx, %r13
	.loc	4 130 11 is_stmt 1
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %r14
	movq	%r12, 80(%rsp)
	movq	%rbp, %r12
.Ltmp981:
	.loc	4 0 11 is_stmt 0
	movq	%r13, 88(%rsp)
.Ltmp982:
	leaq	80(%rsp), %rdx
	.loc	4 130 11
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movl	$int..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbp
	movq	%r12, (%rax)
	movl	$int..d, %edi
	callq	runtime.newobject
	movq	%r15, (%rax)
	movq	$string..d, 96(%rsp)
	movq	%r14, 104(%rsp)
	movq	$int..d, 112(%rsp)
	movq	%rbp, 120(%rsp)
	movq	$int..d, 128(%rsp)
	movq	%rax, 136(%rsp)
	leaq	96(%rsp), %rax
	movq	%rax, 56(%rsp)
	movq	$3, 64(%rsp)
	movq	$3, 72(%rsp)
	movq	72(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	56(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.257, %edx
	movl	$48, %ecx
	movq	40(%rsp), %rdi
	movq	32(%rsp), %rsi
	callq	github_com_spolu_warp_lib_logging.Logf
	.loc	4 135 4 is_stmt 1
	movq	32(%rbx), %rax
	.loc	4 135 9 is_stmt 0
	testq	%rax, %rax
	je	.LBB20_11
.Ltmp983:
	movq	48(%rax), %rax
	.loc	4 135 17
	testq	%rax, %rax
	je	.LBB20_11
.Ltmp984:
	movq	136(%rax), %rbx
.Ltmp985:
	.loc	4 135 32
	movl	$github_com_spolu_warp.State..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbp
	movaps	192(%rsp), %xmm0
	movaps	%xmm0, 144(%rsp)
	movq	%r12, 160(%rsp)
	movq	%r15, 168(%rsp)
	movq	48(%rsp), %rax
	movq	%rax, 176(%rsp)
	leaq	144(%rsp), %rdx
	movl	$github_com_spolu_warp.State..d, %edi
	movq	%rbp, %rsi
	callq	runtime.typedmemmove
	.loc	4 135 24
	movl	$github_com_spolu_warp.State..d, %esi
	movq	%rbx, %rdi
	movq	%rbp, %rdx
	callq	encoding_gob.Encoder.Encode
.Ltmp986:
.LBB20_10:
	.loc	4 0 24
	addq	$248, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB20_11:
	.cfi_def_cfa_offset 304
	movl	$6, %edi
	callq	__go_runtime_error
.Lfunc_end20:
	.size	command_line_arguments.Warp.updateHost, .Lfunc_end20-command_line_arguments.Warp.updateHost
	.cfi_endproc

	.section	.text.command_line_arguments.HostState.User,"ax",@progbits
	.globl	command_line_arguments.HostState.User
	.p2align	4, 0x90
	.type	command_line_arguments.HostState.User,@function
command_line_arguments.HostState.User:
.Lfunc_begin21:
	.loc	4 55 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB21_2
	movq	%r10, %rax
	movabsq	$40, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB21_2:
	subq	$40, %rsp
	.cfi_def_cfa_offset 48
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 16(%rsp)
	movaps	%xmm0, (%rsp)
.Ltmp987:
	.loc	4 59 14 prologue_end
	testq	%rsi, %rsi
	je	.LBB21_4
.Ltmp988:
	.loc	4 0 14 is_stmt 0
	movups	(%rsi), %xmm0
	movaps	%xmm0, (%rsp)
	.loc	4 61 24 is_stmt 1
	movq	32(%rsi), %rax
.Ltmp989:
	.loc	4 58 14
	movups	16(%rsi), %xmm1
.Ltmp990:
	movaps	%xmm1, 16(%rsp)
	.loc	4 58 2 is_stmt 0
	movups	%xmm1, 16(%rdi)
	movups	%xmm0, (%rdi)
	movq	%rax, 32(%rdi)
	movb	$1, 40(%rdi)
	movw	$0, 45(%rdi)
	movl	$0, 41(%rdi)
	movb	$0, 47(%rdi)
	movq	%rdi, %rax
	addq	$40, %rsp
	.cfi_def_cfa_offset 8
	retq
.Ltmp991:
.LBB21_4:
	.cfi_def_cfa_offset 48
	.loc	4 59 14 is_stmt 1
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp992:
.Lfunc_end21:
	.size	command_line_arguments.HostState.User, .Lfunc_end21-command_line_arguments.HostState.User
	.cfi_endproc

	.section	.text.command_line_arguments.UserState.User,"ax",@progbits
	.globl	command_line_arguments.UserState.User
	.p2align	4, 0x90
	.type	command_line_arguments.UserState.User,@function
command_line_arguments.UserState.User:
.Lfunc_begin22:
	.loc	4 36 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB22_2
	movq	%r10, %rax
	movabsq	$40, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB22_2:
	subq	$40, %rsp
	.cfi_def_cfa_offset 48
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 16(%rsp)
	movaps	%xmm0, (%rsp)
.Ltmp993:
	.loc	4 40 14 prologue_end
	testq	%rsi, %rsi
	je	.LBB22_4
.Ltmp994:
	.loc	4 0 14 is_stmt 0
	movups	(%rsi), %xmm0
	movaps	%xmm0, (%rsp)
	.loc	4 42 14 is_stmt 1
	movq	32(%rsi), %rax
.Ltmp995:
	.loc	4 39 14
	movups	16(%rsi), %xmm1
.Ltmp996:
	movaps	%xmm1, 16(%rsp)
	.loc	4 39 2 is_stmt 0
	movups	%xmm1, 16(%rdi)
	movups	%xmm0, (%rdi)
	movq	%rax, 32(%rdi)
	movb	$0, 40(%rdi)
	movw	$0, 45(%rdi)
	movl	$0, 41(%rdi)
	movb	$0, 47(%rdi)
	movq	%rdi, %rax
	addq	$40, %rsp
	.cfi_def_cfa_offset 8
	retq
.Ltmp997:
.LBB22_4:
	.cfi_def_cfa_offset 48
	.loc	4 40 14 is_stmt 1
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp998:
.Lfunc_end22:
	.size	command_line_arguments.UserState.User, .Lfunc_end22-command_line_arguments.UserState.User
	.cfi_endproc

	.section	.text.command_line_arguments.NewSrv,"ax",@progbits
	.globl	command_line_arguments.NewSrv
	.p2align	4, 0x90
	.type	command_line_arguments.NewSrv,@function
command_line_arguments.NewSrv:
.Lfunc_begin23:
	.loc	3 26 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB23_2
	movq	%r10, %rax
	movabsq	$120, %r10
	movabsq	$16, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB23_2:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$72, %rsp
	.cfi_def_cfa_offset 128
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%r9, (%rsp)
	movq	%r8, %r15
	movq	%rcx, %r12
	movq	%rdx, %r13
.Ltmp999:
	.loc	3 36 13 prologue_end
	movl	$type..map.6string.7.1command_line_arguments.Warp, %edi
	xorl	%esi, %esi
.Ltmp1000:
	movl	$24, %edx
	movl	$16, %ecx
	xorl	%r8d, %r8d
	callq	__go_construct_map
	movq	%rax, %rbx
	.loc	3 37 13
	movl	$sync.Mutex..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbp
	movq	$0, (%rax)
	.loc	3 32 9
	movl	$command_line_arguments.Srv..d, %edi
	callq	runtime.newobject
	movq	%rax, %r14
.Ltmp1001:
	.loc	3 32 10 is_stmt 0
	movq	%r13, 8(%rsp)
	movq	%r12, 16(%rsp)
	movq	%r15, 24(%rsp)
	movq	(%rsp), %rax
	movq	%rax, 32(%rsp)
	movaps	128(%rsp), %xmm0
	movups	%xmm0, 40(%rsp)
	movq	%rbx, 56(%rsp)
	movq	%rbp, 64(%rsp)
	leaq	8(%rsp), %rdx
	.loc	3 32 9
	movl	$command_line_arguments.Srv..d, %edi
	movq	%r14, %rsi
	callq	runtime.typedmemmove
	.loc	3 32 2
	movq	%r14, %rax
	addq	$72, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
.Ltmp1002:
	.cfi_def_cfa_offset 32
	popq	%r14
.Ltmp1003:
	.cfi_def_cfa_offset 24
	popq	%r15
.Ltmp1004:
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp1005:
.Lfunc_end23:
	.size	command_line_arguments.NewSrv, .Lfunc_end23-command_line_arguments.NewSrv
	.cfi_endproc

	.section	.text.command_line_arguments.command_line_arguments..thunk4,"ax",@progbits
	.p2align	4, 0x90
	.type	command_line_arguments.command_line_arguments..thunk4,@function
command_line_arguments.command_line_arguments..thunk4:
.Lfunc_begin24:
	.loc	3 83 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB24_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB24_2:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
.Ltmp1006:
	.loc	3 83 2 prologue_end
	movl	$.Ltmp1007, %edi
	callq	runtime.setdeferretaddr
	testb	$1, %al
	jne	.LBB24_4
.Ltmp1008:
	.loc	3 0 2 is_stmt 0
	movq	(%rbx), %rax
	movq	8(%rbx), %rdi
	.loc	3 83 2
	callq	*24(%rax)
.Ltmp1009:
.Ltmp1007:
.LBB24_4:
	xorl	%eax, %eax
	popq	%rbx
.Ltmp1010:
	.cfi_def_cfa_offset 8
	retq
.Ltmp1011:
.Lfunc_end24:
	.size	command_line_arguments.command_line_arguments..thunk4, .Lfunc_end24-command_line_arguments.command_line_arguments..thunk4
	.cfi_endproc

	.section	.text.command_line_arguments..1command_line_arguments.Srv.Run..func1,"ax",@progbits
	.p2align	4, 0x90
	.type	command_line_arguments..1command_line_arguments.Srv.Run..func1,@function
command_line_arguments..1command_line_arguments.Srv.Run..func1:
.Lfunc_begin25:
	.loc	3 94 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB25_2
	movq	%r10, %rax
	movabsq	$200, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB25_2:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$152, %rsp
	.cfi_def_cfa_offset 208
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%r10, %rbx
.Ltmp1012:
	.loc	3 95 11 prologue_end
	movq	8(%r10), %rax
	.loc	3 95 20 is_stmt 0
	movq	16(%r10), %rcx
	.loc	3 95 11
	movq	(%rax), %rdi
	.loc	3 95 25
	movq	24(%r10), %rax
	.loc	3 95 12
	movq	(%rcx), %rsi
	movq	8(%rcx), %rdx
	movq	(%rax), %rcx
	movq	8(%rax), %r8
	callq	command_line_arguments.Srv.handle
	movq	%rax, %r15
.Ltmp1013:
	movq	%rdx, %r14
	.loc	3 0 0
	movq	24(%rbx), %rax
	movq	(%rax), %rcx
	movq	8(%rax), %rdi
	callq	*32(%rcx)
	movq	%rdx, %rdi
	callq	*16(%rax)
	movq	%rax, %rbp
	movq	%rdx, %r13
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %r12
	.loc	3 96 11 is_stmt 1
	testq	%r15, %r15
	je	.LBB25_5
.Ltmp1014:
	.loc	3 0 11 is_stmt 0
	movq	%rbp, 104(%rsp)
	movq	%r13, 112(%rsp)
	leaq	104(%rsp), %rdx
	.loc	3 97 13 is_stmt 1
	movl	$string..d, %edi
	movq	%r12, %rsi
	callq	runtime.typedmemmove
	.loc	3 99 34
	movq	(%r15), %rax
	.loc	3 97 13
	movq	$string..d, 120(%rsp)
	movq	%r12, 128(%rsp)
	movq	%rax, 136(%rsp)
	movq	%r14, 144(%rsp)
	.loc	3 97 18 is_stmt 0
	movq	16(%rbx), %rax
	leaq	120(%rsp), %rcx
	.loc	3 97 13
	movq	%rcx, 24(%rsp)
	movq	$2, 32(%rsp)
	movq	$2, 40(%rsp)
	movq	(%rax), %rdi
	movq	8(%rax), %rsi
	movq	40(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	24(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.212, %edx
	movl	$45, %ecx
	jmp	.LBB25_4
.Ltmp1015:
.LBB25_5:
	.loc	3 0 13
	movq	%rbp, 88(%rsp)
	movq	%r13, 96(%rsp)
	leaq	88(%rsp), %rdx
	.loc	3 102 13 is_stmt 1
	movl	$string..d, %edi
	movq	%r12, %rsi
	callq	runtime.typedmemmove
	movq	$string..d, 72(%rsp)
	movq	%r12, 80(%rsp)
	.loc	3 102 18 is_stmt 0
	movq	16(%rbx), %rax
	leaq	72(%rsp), %rcx
	.loc	3 102 13
	movq	%rcx, 48(%rsp)
	movq	$1, 56(%rsp)
	movq	$1, 64(%rsp)
	movq	(%rax), %rdi
	movq	8(%rax), %rsi
	movq	64(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	48(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.214, %edx
	movl	$35, %ecx
.Ltmp1016:
.LBB25_4:
	.loc	3 0 13
	callq	github_com_spolu_warp_lib_logging.Logf
	addq	$152, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end25:
	.size	command_line_arguments..1command_line_arguments.Srv.Run..func1, .Lfunc_end25-command_line_arguments..1command_line_arguments.Srv.Run..func1
	.cfi_endproc

	.section	.text.command_line_arguments.command_line_arguments..thunk5,"ax",@progbits
	.p2align	4, 0x90
	.type	command_line_arguments.command_line_arguments..thunk5,@function
command_line_arguments.command_line_arguments..thunk5:
.Lfunc_begin26:
	.loc	3 94 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB26_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB26_2:
	pushq	%rax
	.cfi_def_cfa_offset 16
.Ltmp1017:
	.loc	3 94 3 prologue_end
	movq	(%rdi), %r10
	callq	*(%r10)
.Ltmp1018:
	.loc	3 0 3 is_stmt 0
	popq	%rax
	.cfi_def_cfa_offset 8
	retq
.Ltmp1019:
.Lfunc_end26:
	.size	command_line_arguments.command_line_arguments..thunk5, .Lfunc_end26-command_line_arguments.command_line_arguments..thunk5
	.cfi_endproc

	.section	.text.command_line_arguments.command_line_arguments..thunk6,"ax",@progbits
	.p2align	4, 0x90
	.type	command_line_arguments.command_line_arguments..thunk6,@function
command_line_arguments.command_line_arguments..thunk6:
.Lfunc_begin27:
	.loc	3 129 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB27_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB27_2:
	pushq	%rax
	.cfi_def_cfa_offset 16
.Ltmp1020:
	.loc	3 129 2 prologue_end
	movq	(%rdi), %rdi
.Ltmp1021:
	callq	command_line_arguments.Session.TearDown
	popq	%rax
	.cfi_def_cfa_offset 8
	retq
.Ltmp1022:
.Lfunc_end27:
	.size	command_line_arguments.command_line_arguments..thunk6, .Lfunc_end27-command_line_arguments.command_line_arguments..thunk6
	.cfi_endproc

	.section	.text.command_line_arguments.command_line_arguments..thunk7,"ax",@progbits
	.p2align	4, 0x90
	.type	command_line_arguments.command_line_arguments..thunk7,@function
command_line_arguments.command_line_arguments..thunk7:
.Lfunc_begin28:
	.loc	4 72 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB28_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB28_2:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
.Ltmp1023:
	.loc	4 72 2 prologue_end
	movl	$.Ltmp1024, %edi
	callq	runtime.setdeferretaddr
	testb	$1, %al
	jne	.LBB28_4
.Ltmp1025:
	movq	(%rbx), %rdi
	callq	sync.Mutex.Unlock
.Ltmp1026:
.Ltmp1024:
.LBB28_4:
	xorl	%eax, %eax
	popq	%rbx
.Ltmp1027:
	.cfi_def_cfa_offset 8
	retq
.Ltmp1028:
.Lfunc_end28:
	.size	command_line_arguments.command_line_arguments..thunk7, .Lfunc_end28-command_line_arguments.command_line_arguments..thunk7
	.cfi_endproc

	.section	.text.command_line_arguments..1command_line_arguments.Warp.handleHost..func1,"ax",@progbits
	.p2align	4, 0x90
	.type	command_line_arguments..1command_line_arguments.Warp.handleHost..func1,@function
command_line_arguments..1command_line_arguments.Warp.handleHost..func1:
.Lfunc_begin29:
	.loc	4 209 0
	.cfi_startproc
	leaq	-712(%rsp), %r11
	cmpq	%fs:112, %r11
	ja	.LBB29_2
	movq	%r10, %rax
	movabsq	$712, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB29_2:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$664, %rsp
	.cfi_def_cfa_offset 720
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%r10, %r14
.Ltmp1029:
	.loc	4 212 8 prologue_end
	movl	$github_com_spolu_warp.HostUpdate..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbp
.Ltmp1030:
	.loc	4 213 14
	movq	8(%r14), %rax
	movq	(%rax), %rax
	.loc	4 213 15 is_stmt 0
	testq	%rax, %rax
	je	.LBB29_31
.Ltmp1031:
	.loc	4 0 15
	leaq	560(%rsp), %r12
.Ltmp1032:
.LBB29_4:
	.loc	4 213 15
	movq	32(%rax), %rax
	.loc	4 213 20
	testq	%rax, %rax
	je	.LBB29_31
.Ltmp1033:
	movq	48(%rax), %rax
	.loc	4 213 28
	testq	%rax, %rax
	je	.LBB29_31
.Ltmp1034:
	movq	160(%rax), %rdi
	.loc	4 213 36
	movl	$type...1github_com_spolu_warp.HostUpdate, %esi
	movq	%rbp, %rdx
	callq	encoding_gob.Decoder.Decode
	.loc	4 213 54
	testq	%rax, %rax
	jne	.LBB29_7
.Ltmp1035:
	.loc	4 222 18 is_stmt 1
	movq	8(%r14), %rax
	movq	(%rax), %rax
	.loc	4 222 19 is_stmt 0
	testq	%rax, %rax
	je	.LBB29_31
.Ltmp1036:
	.loc	4 222 15
	movq	(%rbp), %rdi
	movq	8(%rbp), %rsi
	movq	(%rax), %rdx
	movq	8(%rax), %rcx
	callq	runtime.eqstring
	cmpb	$1, %al
	leaq	464(%rsp), %rbx
	leaq	32(%rsp), %r15
	jne	.LBB29_11
.Ltmp1037:
	.loc	4 233 24 is_stmt 1
	movq	24(%r14), %rax
	movq	(%rax), %rax
	.loc	4 233 26 is_stmt 0
	testq	%rax, %rax
	je	.LBB29_31
.Ltmp1038:
	.loc	4 233 21
	movq	16(%rbp), %rdi
	movq	24(%rbp), %rsi
	movq	(%rax), %rdx
	movq	8(%rax), %rcx
	callq	runtime.eqstring
	cmpb	$1, %al
	jne	.LBB29_19
.Ltmp1039:
	.loc	4 234 21 is_stmt 1
	movq	24(%r14), %rax
	movq	(%rax), %rax
	.loc	4 234 23 is_stmt 0
	testq	%rax, %rax
	je	.LBB29_31
.Ltmp1040:
	.loc	4 234 18
	movq	32(%rbp), %rdi
	movq	40(%rbp), %rsi
	movq	16(%rax), %rdx
	movq	24(%rax), %rcx
	callq	runtime.eqstring
	cmpb	$1, %al
	jne	.LBB29_19
.Ltmp1041:
	.loc	4 235 23 is_stmt 1
	movq	24(%r14), %rax
	movq	(%rax), %rax
	.loc	4 235 25 is_stmt 0
	testq	%rax, %rax
	je	.LBB29_31
.Ltmp1042:
	.loc	4 235 20
	movq	48(%rbp), %rdi
	movq	56(%rbp), %rsi
	movq	32(%rax), %rdx
	movq	40(%rax), %rcx
	callq	runtime.eqstring
	cmpb	$1, %al
	jne	.LBB29_19
.Ltmp1043:
	.loc	4 243 4 is_stmt 1
	movq	8(%r14), %rax
	movq	(%rax), %rax
	.loc	4 243 5 is_stmt 0
	testq	%rax, %rax
	je	.LBB29_31
.Ltmp1044:
	movq	56(%rax), %rdi
	.loc	4 243 11
	callq	sync.Mutex.Lock
	.loc	4 244 4 is_stmt 1
	movq	8(%r14), %rax
	movq	(%rax), %rax
	.loc	4 244 5 is_stmt 0
	testq	%rax, %rax
	je	.LBB29_31
.Ltmp1045:
	.loc	4 244 17
	movups	64(%rbp), %xmm0
	movups	%xmm0, 16(%rax)
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 32(%rsp)
.Ltmp1046:
	.loc	4 0 17
	movq	%rbp, 24(%rsp)
.Ltmp1047:
	.loc	4 245 30 is_stmt 1
	movq	80(%rbp), %rsi
	movaps	%xmm0, 480(%rsp)
	movaps	%xmm0, 640(%rsp)
	movaps	%xmm0, 624(%rsp)
	movaps	%xmm0, 608(%rsp)
	movaps	%xmm0, 592(%rsp)
	movaps	%xmm0, 576(%rsp)
	movaps	%xmm0, 560(%rsp)
	.loc	4 245 4 is_stmt 0
	movl	$type..map.6string.7github_com_spolu_warp.Mode, %edi
	movq	%r12, %rdx
	callq	runtime.mapiterinit
	jmp	.LBB29_27
.Ltmp1048:
	.p2align	4, 0x90
.LBB29_26:
	.loc	4 247 27 is_stmt 1
	movq	%rbp, 32(%rax)
.Ltmp1049:
	.loc	4 245 4
	movq	%r12, %rdi
	callq	runtime.mapiternext
.Ltmp1050:
.LBB29_27:
	movq	560(%rsp), %rax
	testq	%rax, %rax
	je	.LBB29_29
.Ltmp1051:
	movups	(%rax), %xmm0
	movaps	%xmm0, 480(%rsp)
	movq	568(%rsp), %rax
	movq	(%rax), %rbp
.Ltmp1052:
	.loc	4 0 4 is_stmt 0
	movaps	%xmm0, 32(%rsp)
.Ltmp1053:
	movaps	%xmm0, 464(%rsp)
.Ltmp1054:
	.loc	4 246 17 is_stmt 1
	movq	8(%r14), %rax
	movq	(%rax), %rax
	.loc	4 246 18 is_stmt 0
	testq	%rax, %rax
	je	.LBB29_31
.Ltmp1055:
	movq	40(%rax), %rsi
	.loc	4 246 8
	movl	$type..map.6string.7.1command_line_arguments.UserState, %edi
	movq	%rbx, %rdx
	callq	runtime.mapaccess2
.Ltmp1056:
	.loc	4 246 5
	testb	$1, %dl
	je	.LBB29_32
.Ltmp1057:
	.loc	4 247 6 is_stmt 1
	movq	8(%r14), %rax
	movq	(%rax), %rax
	.loc	4 247 7 is_stmt 0
	testq	%rax, %rax
	je	.LBB29_31
.Ltmp1058:
	movq	40(%rax), %rsi
	.loc	4 247 15
	movl	$type..map.6string.7.1command_line_arguments.UserState, %edi
	movq	%r15, %rdx
.Ltmp1059:
	callq	runtime.mapaccess1
	movq	(%rax), %rax
	.loc	4 247 21
	testq	%rax, %rax
	jne	.LBB29_26
	jmp	.LBB29_31
.Ltmp1060:
	.p2align	4, 0x90
.LBB29_29:
	.loc	4 256 4 is_stmt 1
	movq	8(%r14), %rax
	movq	(%rax), %rax
	.loc	4 256 5 is_stmt 0
	testq	%rax, %rax
	je	.LBB29_31
.Ltmp1061:
	movq	56(%rax), %rdi
	.loc	4 256 11
	callq	sync.Mutex.Unlock
	.loc	4 260 5 is_stmt 1
	movq	24(%r14), %rax
	movq	(%rax), %rdi
	.loc	4 260 7 is_stmt 0
	callq	command_line_arguments.Session.ToString
	movq	%rax, %r15
	movq	%rdx, %r13
	movq	24(%rsp), %rax
	.loc	4 260 33
	movq	64(%rax), %rbx
	.loc	4 260 53
	movq	72(%rax), %rax
	.loc	4 258 12 is_stmt 1
	movq	%rax, 24(%rsp)
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %r12
	movq	%r15, 192(%rsp)
	movq	%r13, 200(%rsp)
	movl	$string..d, %edi
	movq	%rax, %rsi
	leaq	192(%rsp), %rdx
	callq	runtime.typedmemmove
	movl	$int..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbp
	movq	%rbx, (%rax)
	movl	$int..d, %edi
	callq	runtime.newobject
	movq	24(%rsp), %rcx
	movq	%rcx, (%rax)
	movq	$string..d, 352(%rsp)
	movq	%r12, 360(%rsp)
	movq	$int..d, 368(%rsp)
	movq	%rbp, 376(%rsp)
	movq	$int..d, 384(%rsp)
	movq	%rax, 392(%rsp)
	.loc	4 258 17 is_stmt 0
	movq	16(%r14), %rax
	.loc	4 258 12
	leaq	352(%rsp), %rcx
	movq	%rcx, 168(%rsp)
	movq	$3, 176(%rsp)
	movq	$3, 184(%rsp)
	movq	(%rax), %rdi
	movq	8(%rax), %rsi
	movq	184(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	168(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.294, %edx
	movl	$48, %ecx
	callq	github_com_spolu_warp_lib_logging.Logf
	.loc	4 263 4 is_stmt 1
	movq	8(%r14), %rax
	.loc	4 263 27 is_stmt 0
	movq	16(%r14), %rcx
	.loc	4 263 4
	movq	(%rax), %rdi
	.loc	4 263 5
	movq	(%rcx), %rsi
	movq	8(%rcx), %rdx
	callq	command_line_arguments.Warp.updateClientSessions
	.loc	4 212 8 is_stmt 1
	movl	$github_com_spolu_warp.HostUpdate..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbp
.Ltmp1062:
	.loc	4 213 14
	movq	8(%r14), %rax
	movq	(%rax), %rax
	.loc	4 213 15 is_stmt 0
	testq	%rax, %rax
	leaq	560(%rsp), %r12
	jne	.LBB29_4
	jmp	.LBB29_31
.Ltmp1063:
.LBB29_32:
	.loc	4 251 7 is_stmt 1
	movq	24(%r14), %rax
	movq	(%rax), %rdi
	.loc	4 251 9 is_stmt 0
	callq	command_line_arguments.Session.ToString
.Ltmp1064:
	movq	%rax, %r15
	movq	%rdx, %rbx
	.loc	4 249 14 is_stmt 1
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %r12
	movq	%r15, 208(%rsp)
	movq	%rbx, 216(%rsp)
	leaq	208(%rsp), %rdx
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbp
.Ltmp1065:
	.loc	4 0 14 is_stmt 0
	movaps	32(%rsp), %xmm0
	movaps	%xmm0, 448(%rsp)
	leaq	448(%rsp), %rdx
	.loc	4 249 14
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movq	$string..d, 288(%rsp)
	movq	%r12, 296(%rsp)
	movq	$string..d, 304(%rsp)
	movq	%rbp, 312(%rsp)
	.loc	4 249 19
	movq	16(%r14), %rax
	leaq	288(%rsp), %rcx
	.loc	4 249 14
	movq	%rcx, 144(%rsp)
	movq	$2, 152(%rsp)
	movq	$2, 160(%rsp)
	movq	(%rax), %rdi
	movq	8(%rax), %rsi
	movq	160(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	144(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.292, %edx
	movl	$49, %ecx
	jmp	.LBB29_8
.Ltmp1066:
.LBB29_19:
	.loc	4 238 8 is_stmt 1
	movl	$type..struct.4.4x.5fn.0func.8.9.8string.9.2val.0.1command_line_arguments.Session.5, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
	.loc	4 238 6 is_stmt 0
	movq	24(%r14), %rax
	movq	(%rax), %rax
	.loc	4 238 8
	movq	$command_line_arguments.command_line_arguments..thunk0, 240(%rsp)
	movq	%rax, 248(%rsp)
	leaq	240(%rsp), %rdx
	movl	$type..struct.4.4x.5fn.0func.8.9.8string.9.2val.0.1command_line_arguments.Session.5, %edi
	movq	%rbx, %rsi
	callq	runtime.typedmemmove
	.loc	4 236 13 is_stmt 1
	movl	$type..func.8.9.8string.9, %edi
	callq	runtime.newobject
	movq	%rax, %rbp
.Ltmp1067:
	.loc	4 0 13 is_stmt 0
	movq	%rbx, 56(%rsp)
	leaq	56(%rsp), %rdx
	.loc	4 236 13
	movl	$type..func.8.9.8string.9, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movq	$type..func.8.9.8string.9, 224(%rsp)
	movq	%rbp, 232(%rsp)
	.loc	4 236 18
	movq	16(%r14), %rax
	leaq	224(%rsp), %rcx
	.loc	4 236 13
	movq	%rcx, 120(%rsp)
	movq	$1, 128(%rsp)
	movq	$1, 136(%rsp)
	movq	(%rax), %rdi
	movq	8(%rax), %rsi
	movq	136(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	120(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.283, %edx
	movl	$37, %ecx
	jmp	.LBB29_8
.LBB29_7:
.Ltmp1068:
	.loc	4 0 13
	movq	%rax, %r13
.Ltmp1069:
	movq	%rdx, %r15
.Ltmp1070:
	.loc	4 216 6 is_stmt 1
	movq	24(%r14), %rax
	movq	(%rax), %rdi
	.loc	4 216 8 is_stmt 0
	callq	command_line_arguments.Session.ToString
	movq	%rax, %r12
	movq	%rdx, %rbx
	.loc	4 214 13 is_stmt 1
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbp
.Ltmp1071:
	.loc	4 0 13 is_stmt 0
	movq	%r12, 272(%rsp)
	movq	%rbx, 280(%rsp)
	leaq	272(%rsp), %rdx
	.loc	4 214 13
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	.loc	4 216 21 is_stmt 1
	movq	(%r13), %rax
	.loc	4 214 13
	movq	$string..d, 320(%rsp)
	movq	%rbp, 328(%rsp)
	movq	%rax, 336(%rsp)
	movq	%r15, 344(%rsp)
	.loc	4 214 18 is_stmt 0
	movq	16(%r14), %rax
	leaq	320(%rsp), %rcx
	.loc	4 214 13
	movq	%rcx, 72(%rsp)
	movq	$2, 80(%rsp)
	movq	$2, 88(%rsp)
	movq	(%rax), %rdi
	movq	8(%rax), %rsi
	movq	88(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	72(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.277, %edx
	movl	$48, %ecx
	jmp	.LBB29_8
.Ltmp1072:
.LBB29_11:
	.loc	4 226 8 is_stmt 1
	movl	$type..struct.4.4x.5fn.0func.8.9.8string.9.2val.0.1command_line_arguments.Session.5, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
	.loc	4 226 6 is_stmt 0
	movq	24(%r14), %rax
	movq	(%rax), %rax
	.loc	4 226 8
	movq	$command_line_arguments.command_line_arguments..thunk0, 256(%rsp)
	movq	%rax, 264(%rsp)
	leaq	256(%rsp), %rdx
	movl	$type..struct.4.4x.5fn.0func.8.9.8string.9.2val.0.1command_line_arguments.Session.5, %edi
	movq	%rbx, %rsi
	callq	runtime.typedmemmove
	.loc	4 226 19
	movq	8(%r14), %rax
	movq	(%rax), %rax
	.loc	4 226 20
	testq	%rax, %rax
	je	.LBB29_31
.Ltmp1073:
	.loc	4 0 20
	movups	(%rax), %xmm0
	movaps	%xmm0, 544(%rsp)
	movups	(%rbp), %xmm0
	movaps	%xmm0, 528(%rsp)
	.loc	4 223 13 is_stmt 1
	movl	$type..func.8.9.8string.9, %edi
	callq	runtime.newobject
	movq	%rax, %r15
	movq	%rbx, 64(%rsp)
	leaq	64(%rsp), %rdx
	movl	$type..func.8.9.8string.9, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
	movaps	544(%rsp), %xmm0
	movaps	%xmm0, 512(%rsp)
	leaq	512(%rsp), %rdx
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbp
.Ltmp1074:
	.loc	4 0 13 is_stmt 0
	movaps	528(%rsp), %xmm0
	movaps	%xmm0, 496(%rsp)
	leaq	496(%rsp), %rdx
	.loc	4 223 13
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movq	$type..func.8.9.8string.9, 400(%rsp)
	movq	%r15, 408(%rsp)
	movq	$string..d, 416(%rsp)
	movq	%rbx, 424(%rsp)
	movq	$string..d, 432(%rsp)
	movq	%rbp, 440(%rsp)
	.loc	4 223 18
	movq	16(%r14), %rax
	leaq	400(%rsp), %rcx
	.loc	4 223 13
	movq	%rcx, 96(%rsp)
	movq	$3, 104(%rsp)
	movq	$3, 112(%rsp)
	movq	(%rax), %rdi
	movq	8(%rax), %rsi
	movq	112(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	96(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.281, %edx
	movl	$60, %ecx
.Ltmp1075:
.LBB29_8:
	.loc	4 0 13
	callq	github_com_spolu_warp_lib_logging.Logf
	.loc	4 265 24 is_stmt 1
	movq	16(%r14), %rax
	.loc	4 265 3 is_stmt 0
	movq	24(%r14), %rcx
	movq	(%rcx), %rdi
	.loc	4 265 5
	movq	(%rax), %rsi
	movq	8(%rax), %rdx
	callq	command_line_arguments.Session.SendInternalError
	.loc	4 266 3 is_stmt 1
	movq	24(%r14), %rax
	movq	(%rax), %rdi
	.loc	4 266 5 is_stmt 0
	callq	command_line_arguments.Session.TearDown
	addq	$664, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp1076:
.LBB29_31:
	.cfi_def_cfa_offset 720
	.loc	4 0 5
	movl	$6, %edi
	callq	__go_runtime_error
.Lfunc_end29:
	.size	command_line_arguments..1command_line_arguments.Warp.handleHost..func1, .Lfunc_end29-command_line_arguments..1command_line_arguments.Warp.handleHost..func1
	.cfi_endproc

	.section	.text.command_line_arguments.command_line_arguments..thunk8,"ax",@progbits
	.p2align	4, 0x90
	.type	command_line_arguments.command_line_arguments..thunk8,@function
command_line_arguments.command_line_arguments..thunk8:
.Lfunc_begin30:
	.loc	4 209 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB30_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB30_2:
	pushq	%rax
	.cfi_def_cfa_offset 16
.Ltmp1077:
	.loc	4 209 2 prologue_end
	movq	(%rdi), %r10
	callq	*(%r10)
.Ltmp1078:
	.loc	4 0 2 is_stmt 0
	popq	%rax
	.cfi_def_cfa_offset 8
	retq
.Ltmp1079:
.Lfunc_end30:
	.size	command_line_arguments.command_line_arguments..thunk8, .Lfunc_end30-command_line_arguments.command_line_arguments..thunk8
	.cfi_endproc

	.section	.text.command_line_arguments..1command_line_arguments.Warp.handleHost..func2,"ax",@progbits
	.p2align	4, 0x90
	.type	command_line_arguments..1command_line_arguments.Warp.handleHost..func2,@function
command_line_arguments..1command_line_arguments.Warp.handleHost..func2:
.Lfunc_begin31:
	.loc	4 270 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB31_2
	movq	%r10, %rax
	movabsq	$56, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB31_2:
.Ltmp1080:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	subq	$32, %rsp
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	.loc	4 271 17 prologue_end
	movq	24(%r10), %rax
	.loc	4 277 6
	movq	(%rax), %rdx
	.loc	4 277 8 is_stmt 0
	testq	%rdx, %rdx
	je	.LBB31_7
	.loc	4 0 8
	movq	%r10, %rbx
	.loc	4 271 17 is_stmt 1
	movq	8(%r10), %r15
	movq	16(%r10), %rsi
	movq	192(%rdx), %rcx
	movq	200(%rdx), %r14
	movq	$command_line_arguments..1command_line_arguments.Warp.handleHost..func3, (%rsp)
	movq	%rsi, 8(%rsp)
	movq	%r15, 16(%rsp)
	movq	%rax, 24(%rsp)
	.loc	4 277 8
	testq	%rcx, %rcx
	je	.LBB31_4
	movq	(%rcx), %rsi
	jmp	.LBB31_5
.LBB31_4:
	.loc	4 0 8 is_stmt 0
	xorl	%esi, %esi
.LBB31_5:
	.loc	4 277 8
	movl	$io.Reader..d, %edi
	callq	runtime.requireitab
	.loc	4 271 8 is_stmt 1
	movq	(%r15), %rdi
	movq	8(%r15), %rsi
	movq	%rsp, %rdx
	movq	%rax, %rcx
	movq	%r14, %r8
	callq	github_com_spolu_warp_lib_plex.Run
	.loc	4 278 24
	movq	8(%rbx), %rax
	.loc	4 278 3 is_stmt 0
	movq	24(%rbx), %rcx
	movq	(%rcx), %rdi
	.loc	4 278 5
	movq	(%rax), %rsi
	movq	8(%rax), %rdx
	callq	command_line_arguments.Session.SendInternalError
	.loc	4 279 3 is_stmt 1
	movq	24(%rbx), %rax
	movq	(%rax), %rdi
	.loc	4 279 5 is_stmt 0
	callq	command_line_arguments.Session.TearDown
	addq	$32, %rsp
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB31_7:
	.cfi_def_cfa_offset 64
	.loc	4 277 8 is_stmt 1
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp1081:
.Lfunc_end31:
	.size	command_line_arguments..1command_line_arguments.Warp.handleHost..func2, .Lfunc_end31-command_line_arguments..1command_line_arguments.Warp.handleHost..func2
	.cfi_endproc

	.section	.text.command_line_arguments.command_line_arguments..thunk9,"ax",@progbits
	.p2align	4, 0x90
	.type	command_line_arguments.command_line_arguments..thunk9,@function
command_line_arguments.command_line_arguments..thunk9:
.Lfunc_begin32:
	.loc	4 270 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB32_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB32_2:
	pushq	%rax
	.cfi_def_cfa_offset 16
.Ltmp1082:
	.loc	4 270 2 prologue_end
	movq	(%rdi), %r10
	callq	*(%r10)
.Ltmp1083:
	.loc	4 0 2 is_stmt 0
	popq	%rax
	.cfi_def_cfa_offset 8
	retq
.Ltmp1084:
.Lfunc_end32:
	.size	command_line_arguments.command_line_arguments..thunk9, .Lfunc_end32-command_line_arguments.command_line_arguments..thunk9
	.cfi_endproc

	.section	.text.command_line_arguments..1command_line_arguments.Warp.handleHost..func4,"ax",@progbits
	.p2align	4, 0x90
	.type	command_line_arguments..1command_line_arguments.Warp.handleHost..func4,@function
command_line_arguments..1command_line_arguments.Warp.handleHost..func4:
.Lfunc_begin33:
	.loc	4 283 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB33_2
	movq	%r10, %rax
	movabsq	$152, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB33_2:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r12
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	subq	$120, %rsp
	.cfi_def_cfa_offset 160
	.cfi_offset %rbx, -40
	.cfi_offset %r12, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 32(%rsp)
	movq	$0, 48(%rsp)
	movaps	%xmm0, 64(%rsp)
	movq	$0, 80(%rsp)
.Ltmp1085:
	.loc	4 286 17 prologue_end
	movq	8(%r10), %rax
	movq	(%rax), %rax
	.loc	4 286 18 is_stmt 0
	testq	%rax, %rax
	je	.LBB33_8
	.loc	4 0 18
	movq	%r10, %r12
	leaq	64(%rsp), %r14
	leaq	96(%rsp), %r15
	.p2align	4, 0x90
.LBB33_4:
	.loc	4 286 18
	movq	48(%rax), %rdi
	.loc	4 286 4
	movq	%r14, %rsi
	callq	runtime.chanrecv2
	movl	%eax, %ebx
.Ltmp1086:
	movq	80(%rsp), %rax
	movq	%rax, 48(%rsp)
	movaps	64(%rsp), %xmm0
	movaps	%xmm0, 32(%rsp)
	.loc	4 291 14 is_stmt 1
	movq	16(%r12), %rax
	movq	(%rax), %rax
	.loc	4 291 16 is_stmt 0
	testq	%rax, %rax
	je	.LBB33_8
.Ltmp1087:
	.loc	4 0 16
	movq	192(%rax), %rcx
	movq	200(%rax), %rsi
	.loc	4 291 22
	movq	48(%rsp), %rax
	movq	%rax, 16(%rsp)
	movaps	32(%rsp), %xmm0
	movups	%xmm0, (%rsp)
.Ltmp1088:
	movq	%r15, %rdi
	callq	*64(%rcx)
	.loc	4 295 7 is_stmt 1
	testb	%bl, %bl
	je	.LBB33_9
.Ltmp1089:
	.loc	4 0 7 is_stmt 0
	movq	104(%rsp), %rax
.Ltmp1090:
	testq	%rax, %rax
	jne	.LBB33_9
.Ltmp1091:
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 32(%rsp)
	movq	$0, 48(%rsp)
.Ltmp1092:
	movaps	%xmm0, 64(%rsp)
	movq	$0, 80(%rsp)
	.loc	4 286 17 is_stmt 1
	movq	8(%r12), %rax
.Ltmp1093:
	movq	(%rax), %rax
	.loc	4 286 18 is_stmt 0
	testq	%rax, %rax
	jne	.LBB33_4
.Ltmp1094:
.LBB33_8:
	.loc	4 0 18
	movl	$6, %edi
	callq	__go_runtime_error
.LBB33_9:
.Ltmp1095:
	.loc	4 299 3 is_stmt 1
	movq	16(%r12), %rax
	.loc	4 299 24 is_stmt 0
	movq	24(%r12), %rcx
	.loc	4 299 3
	movq	(%rax), %rdi
	.loc	4 299 5
	movq	(%rcx), %rsi
	movq	8(%rcx), %rdx
	callq	command_line_arguments.Session.SendInternalError
	.loc	4 300 3 is_stmt 1
	movq	16(%r12), %rax
	movq	(%rax), %rdi
	.loc	4 300 5 is_stmt 0
	callq	command_line_arguments.Session.TearDown
	addq	$120, %rsp
.Ltmp1096:
	.cfi_def_cfa_offset 40
	.loc	4 0 5
	popq	%rbx
.Ltmp1097:
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.Ltmp1098:
.Lfunc_end33:
	.size	command_line_arguments..1command_line_arguments.Warp.handleHost..func4, .Lfunc_end33-command_line_arguments..1command_line_arguments.Warp.handleHost..func4
	.cfi_endproc

	.section	.text.command_line_arguments.command_line_arguments..thunk10,"ax",@progbits
	.p2align	4, 0x90
	.type	command_line_arguments.command_line_arguments..thunk10,@function
command_line_arguments.command_line_arguments..thunk10:
.Lfunc_begin34:
	.loc	4 283 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB34_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB34_2:
	pushq	%rax
	.cfi_def_cfa_offset 16
.Ltmp1099:
	.loc	4 283 2 prologue_end
	movq	(%rdi), %r10
	callq	*(%r10)
.Ltmp1100:
	.loc	4 0 2 is_stmt 0
	popq	%rax
	.cfi_def_cfa_offset 8
	retq
.Ltmp1101:
.Lfunc_end34:
	.size	command_line_arguments.command_line_arguments..thunk10, .Lfunc_end34-command_line_arguments.command_line_arguments..thunk10
	.cfi_endproc

	.section	.text.command_line_arguments.command_line_arguments..thunk0,"ax",@progbits
	.p2align	4, 0x90
	.type	command_line_arguments.command_line_arguments..thunk0,@function
command_line_arguments.command_line_arguments..thunk0:
.Lfunc_begin35:
	.loc	2 127 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB35_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB35_2:
	pushq	%rax
	.cfi_def_cfa_offset 16
.Ltmp1102:
	.loc	2 127 1 prologue_end
	movq	8(%r10), %rdi
	callq	command_line_arguments.Session.ToString
	popq	%rcx
	.cfi_def_cfa_offset 8
	retq
.Ltmp1103:
.Lfunc_end35:
	.size	command_line_arguments.command_line_arguments..thunk0, .Lfunc_end35-command_line_arguments.command_line_arguments..thunk0
	.cfi_endproc

	.section	.text.command_line_arguments..1command_line_arguments.Warp.handleHost..func3,"ax",@progbits
	.p2align	4, 0x90
	.type	command_line_arguments..1command_line_arguments.Warp.handleHost..func3,@function
command_line_arguments..1command_line_arguments.Warp.handleHost..func3:
.Lfunc_begin36:
	.loc	4 271 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB36_2
	movq	%r10, %rax
	movabsq	$24, %r10
	movabsq	$24, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB36_2:
	subq	$24, %rsp
	.cfi_def_cfa_offset 32
.Ltmp1104:
	.loc	4 276 4 prologue_end
	movq	8(%r10), %rax
	.loc	4 276 18 is_stmt 0
	movq	16(%r10), %rcx
	.loc	4 276 4
	movq	(%rax), %rdi
	.loc	4 276 5
	movq	(%rcx), %rsi
	movq	8(%rcx), %rdx
	movq	48(%rsp), %rax
	movq	%rax, 16(%rsp)
	movaps	32(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	callq	command_line_arguments.Warp.rcvHostData
	addq	$24, %rsp
	.cfi_def_cfa_offset 8
	retq
.Ltmp1105:
.Lfunc_end36:
	.size	command_line_arguments..1command_line_arguments.Warp.handleHost..func3, .Lfunc_end36-command_line_arguments..1command_line_arguments.Warp.handleHost..func3
	.cfi_endproc

	.section	.text.command_line_arguments..1command_line_arguments.Warp.handleShellClient..func1,"ax",@progbits
	.p2align	4, 0x90
	.type	command_line_arguments..1command_line_arguments.Warp.handleShellClient..func1,@function
command_line_arguments..1command_line_arguments.Warp.handleShellClient..func1:
.Lfunc_begin37:
	.loc	4 366 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB37_2
	movq	%r10, %rax
	movabsq	$104, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB37_2:
	subq	$104, %rsp
	.cfi_def_cfa_offset 112
.Ltmp1106:
	.loc	4 367 23 prologue_end
	movq	8(%r10), %rax
	movq	(%rax), %rax
	.loc	4 367 24 is_stmt 0
	testq	%rax, %rax
	je	.LBB37_5
	movq	40(%rax), %rsi
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 80(%rsp)
	movaps	%xmm0, 64(%rsp)
	movaps	%xmm0, 48(%rsp)
	movaps	%xmm0, 32(%rsp)
	movaps	%xmm0, 16(%rsp)
	movaps	%xmm0, (%rsp)
	movq	%rsp, %rdx
	.loc	4 367 5
	movl	$type..map.6string.7.1command_line_arguments.Session, %edi
	callq	runtime.mapiterinit
	cmpq	$0, (%rsp)
	je	.LBB37_4
	movq	8(%rsp), %rax
	movq	(%rax), %rax
.Ltmp1107:
	.loc	4 368 6 is_stmt 1
	addq	$104, %rsp
	.cfi_def_cfa_offset 8
	retq
.Ltmp1108:
.LBB37_4:
	.cfi_def_cfa_offset 112
	.loc	4 370 5
	xorl	%eax, %eax
.Ltmp1109:
	addq	$104, %rsp
	.cfi_def_cfa_offset 8
	retq
.Ltmp1110:
.LBB37_5:
	.cfi_def_cfa_offset 112
	.loc	4 367 24
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp1111:
.Lfunc_end37:
	.size	command_line_arguments..1command_line_arguments.Warp.handleShellClient..func1, .Lfunc_end37-command_line_arguments..1command_line_arguments.Warp.handleShellClient..func1
	.cfi_endproc

	.section	.text.command_line_arguments..1command_line_arguments.Warp.handleShellClient..func2,"ax",@progbits
	.p2align	4, 0x90
	.type	command_line_arguments..1command_line_arguments.Warp.handleShellClient..func2,@function
command_line_arguments..1command_line_arguments.Warp.handleShellClient..func2:
.Lfunc_begin38:
	.loc	4 391 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB38_2
	movq	%r10, %rax
	movabsq	$56, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB38_2:
.Ltmp1112:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	subq	$32, %rsp
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	.loc	4 392 17 prologue_end
	movq	24(%r10), %rax
	.loc	4 398 6
	movq	(%rax), %rdx
	.loc	4 398 8 is_stmt 0
	testq	%rdx, %rdx
	je	.LBB38_7
	.loc	4 0 8
	movq	%r10, %rbx
	.loc	4 392 17 is_stmt 1
	movq	8(%r10), %r15
	movq	16(%r10), %rsi
	movq	192(%rdx), %rcx
	movq	200(%rdx), %r14
	movq	$command_line_arguments..1command_line_arguments.Warp.handleShellClient..func3, (%rsp)
	movq	%rsi, 8(%rsp)
	movq	%r15, 16(%rsp)
	movq	%rax, 24(%rsp)
	.loc	4 398 8
	testq	%rcx, %rcx
	je	.LBB38_4
	movq	(%rcx), %rsi
	jmp	.LBB38_5
.LBB38_4:
	.loc	4 0 8 is_stmt 0
	xorl	%esi, %esi
.LBB38_5:
	.loc	4 398 8
	movl	$io.Reader..d, %edi
	callq	runtime.requireitab
	.loc	4 392 8 is_stmt 1
	movq	(%r15), %rdi
	movq	8(%r15), %rsi
	movq	%rsp, %rdx
	movq	%rax, %rcx
	movq	%r14, %r8
	callq	github_com_spolu_warp_lib_plex.Run
	.loc	4 399 24
	movq	8(%rbx), %rax
	.loc	4 399 3 is_stmt 0
	movq	24(%rbx), %rcx
	movq	(%rcx), %rdi
	.loc	4 399 5
	movq	(%rax), %rsi
	movq	8(%rax), %rdx
	callq	command_line_arguments.Session.SendInternalError
	.loc	4 400 3 is_stmt 1
	movq	24(%rbx), %rax
	movq	(%rax), %rdi
	.loc	4 400 5 is_stmt 0
	callq	command_line_arguments.Session.TearDown
	addq	$32, %rsp
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB38_7:
	.cfi_def_cfa_offset 64
	.loc	4 398 8 is_stmt 1
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp1113:
.Lfunc_end38:
	.size	command_line_arguments..1command_line_arguments.Warp.handleShellClient..func2, .Lfunc_end38-command_line_arguments..1command_line_arguments.Warp.handleShellClient..func2
	.cfi_endproc

	.section	.text.command_line_arguments.command_line_arguments..thunk11,"ax",@progbits
	.p2align	4, 0x90
	.type	command_line_arguments.command_line_arguments..thunk11,@function
command_line_arguments.command_line_arguments..thunk11:
.Lfunc_begin39:
	.loc	4 391 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB39_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB39_2:
	pushq	%rax
	.cfi_def_cfa_offset 16
.Ltmp1114:
	.loc	4 391 2 prologue_end
	movq	(%rdi), %r10
	callq	*(%r10)
.Ltmp1115:
	.loc	4 0 2 is_stmt 0
	popq	%rax
	.cfi_def_cfa_offset 8
	retq
.Ltmp1116:
.Lfunc_end39:
	.size	command_line_arguments.command_line_arguments..thunk11, .Lfunc_end39-command_line_arguments.command_line_arguments..thunk11
	.cfi_endproc

	.section	.text.command_line_arguments..1command_line_arguments.Warp.handleShellClient..func3,"ax",@progbits
	.p2align	4, 0x90
	.type	command_line_arguments..1command_line_arguments.Warp.handleShellClient..func3,@function
command_line_arguments..1command_line_arguments.Warp.handleShellClient..func3:
.Lfunc_begin40:
	.loc	4 392 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB40_2
	movq	%r10, %rax
	movabsq	$24, %r10
	movabsq	$24, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB40_2:
	subq	$24, %rsp
	.cfi_def_cfa_offset 32
.Ltmp1117:
	.loc	4 397 4 prologue_end
	movq	8(%r10), %rax
	.loc	4 397 30 is_stmt 0
	movq	24(%r10), %rcx
	.loc	4 397 4
	movq	(%rax), %rdi
	.loc	4 397 30
	movq	(%rcx), %rcx
	.loc	4 397 5
	movq	48(%rsp), %rax
	movq	%rax, 16(%rsp)
	movaps	32(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	callq	command_line_arguments.Warp.rcvShellClientData
	addq	$24, %rsp
	.cfi_def_cfa_offset 8
	retq
.Ltmp1118:
.Lfunc_end40:
	.size	command_line_arguments..1command_line_arguments.Warp.handleShellClient..func3, .Lfunc_end40-command_line_arguments..1command_line_arguments.Warp.handleShellClient..func3
	.cfi_endproc

	.section	.text.command_line_arguments..import,"ax",@progbits
	.globl	command_line_arguments..import
	.p2align	4, 0x90
	.type	command_line_arguments..import,@function
command_line_arguments..import:
.Lfunc_begin41:
	.loc	2 1 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB41_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB41_2:
	pushq	%rax
	.cfi_def_cfa_offset 16
.Ltmp1119:
	.loc	1 1 1 prologue_end
	movl	$go..C0, %edi
	callq	runtime.registerGCRoots
	popq	%rax
	.cfi_def_cfa_offset 8
	retq
.Ltmp1120:
.Lfunc_end41:
	.size	command_line_arguments..import, .Lfunc_end41-command_line_arguments..import
	.cfi_endproc

	.type	imt..interface.4Align.0func.8.9.8int.9.2AssignableTo.0func.8reflect.Type.9.8bool.9.2Bits.0func.8.9.8int.9.2ChanDir.0func.8.9.8reflect.ChanDir.9.2Comparable.0func.8.9.8bool.9.2ConvertibleTo.0func.8reflect.Type.9.8bool.9.2Elem.0func.8.9.8reflect.Type.9.2Field.0func.8int.9.8reflect.StructField.9.2FieldAlign.0func.8.9.8int.9.2FieldByIndex.0func.8.6.7int.9.8reflect.StructField.9.2FieldByName.0func.8string.9.8reflect.StructField.3bool.9.2FieldByNameFunc.0func.8func.8string.9.8bool.9.9.8reflect.StructField.3bool.9.2Implements.0func.8reflect.Type.9.8bool.9.2In.0func.8int.9.8reflect.Type.9.2IsVariadic.0func.8.9.8bool.9.2Key.0func.8.9.8reflect.Type.9.2Kind.0func.8.9.8reflect.Kind.9.2Len.0func.8.9.8int.9.2Method.0func.8int.9.8reflect.Method.9.2MethodByName.0func.8string.9.8reflect.Method.3bool.9.2Name.0func.8.9.8string.9.2NumField.0func.8.9.8int.9.2NumIn.0func.8.9.8int.9.2NumMethod.0func.8.9.8int.9.2NumOut.0func.8.9.8int.9.2Out.0func.8int.9.8reflect.Type.9.2PkgPath.0func.8.9.8string.9.2Size.0func.8.9.8uintptr.9.2String.0func.8.9.8string.9.2.reflect.common.0func.8.9.8.1reflect.rtype.9.2.reflect.rawString.0func.8.9.8string.9.2.reflect.uncommon.0func.8.9.8.1reflect.uncommonType.9.5..reflect.rtype,@object
	.section	.rodata.imt..interface.4Align.0func.8.9.8int.9.2AssignableTo.0func.8reflect.Type.9.8bool.9.2Bits.0func.8.9.8int.9.2ChanDir.0func.8.9.8reflect.ChanDir.9.2Comparable.0func.8.9.8bool.9.2ConvertibleTo.0func.8reflect.Type.9.8bool.9.2Elem.0func.8.9.8reflect.Type.9.2Field.0func.8int.9.8reflect.StructField.9.2FieldAlign.0func.8.9.8int.9.2FieldByIndex.0func.8.6.7int.9.8reflect.StructField.9.2FieldByName.0func.8string.9.8reflect.StructField.3bool.9.2FieldByNameFunc.0func.8func.8string.9.8bool.9.9.8reflect.StructField.3bool.9.2Implements.0func.8reflect.Type.9.8bool.9.2In.0func.8int.9.8reflect.Type.9.2IsVariadic.0func.8.9.8bool.9.2Key.0func.8.9.8reflect.Type.9.2Kind.0func.8.9.8reflect.Kind.9.2Len.0func.8.9.8int.9.2Method.0func.8int.9.8reflect.Method.9.2MethodByName.0func.8string.9.8reflect.Method.3bool.9.2Name.0func.8.9.8string.9.2NumField.0func.8.9.8int.9.2NumIn.0func.8.9.8int.9.2NumMethod.0func.8.9.8int.9.2NumOut.0func.8.9.8int.9.2Out.0func.8int.9.8reflect.Type.9.2PkgPath.0func.8.9.8string.9.2Size.0func.8.9.8uintptr.9.2String.0func.8.9.8string.9.2.reflect.common.0func.8.9.8.1reflect.rtype.9.2.reflect.rawString.0func.8.9.8string.9.2.reflect.uncommon.0func.8.9.8.1reflect.uncommonType.9.5..reflect.rtype,"aG",@progbits,imt..interface.4Align.0func.8.9.8int.9.2AssignableTo.0func.8reflect.Type.9.8bool.9.2Bits.0func.8.9.8int.9.2ChanDir.0func.8.9.8reflect.ChanDir.9.2Comparable.0func.8.9.8bool.9.2ConvertibleTo.0func.8reflect.Type.9.8bool.9.2Elem.0func.8.9.8reflect.Type.9.2Field.0func.8int.9.8reflect.StructField.9.2FieldAlign.0func.8.9.8int.9.2FieldByIndex.0func.8.6.7int.9.8reflect.StructField.9.2FieldByName.0func.8string.9.8reflect.StructField.3bool.9.2FieldByNameFunc.0func.8func.8string.9.8bool.9.9.8reflect.StructField.3bool.9.2Implements.0func.8reflect.Type.9.8bool.9.2In.0func.8int.9.8reflect.Type.9.2IsVariadic.0func.8.9.8bool.9.2Key.0func.8.9.8reflect.Type.9.2Kind.0func.8.9.8reflect.Kind.9.2Len.0func.8.9.8int.9.2Method.0func.8int.9.8reflect.Method.9.2MethodByName.0func.8string.9.8reflect.Method.3bool.9.2Name.0func.8.9.8string.9.2NumField.0func.8.9.8int.9.2NumIn.0func.8.9.8int.9.2NumMethod.0func.8.9.8int.9.2NumOut.0func.8.9.8int.9.2Out.0func.8int.9.8reflect.Type.9.2PkgPath.0func.8.9.8string.9.2Size.0func.8.9.8uintptr.9.2String.0func.8.9.8string.9.2.reflect.common.0func.8.9.8.1reflect.rtype.9.2.reflect.rawString.0func.8.9.8string.9.2.reflect.uncommon.0func.8.9.8.1reflect.uncommonType.9.5..reflect.rtype,comdat
	.weak	imt..interface.4Align.0func.8.9.8int.9.2AssignableTo.0func.8reflect.Type.9.8bool.9.2Bits.0func.8.9.8int.9.2ChanDir.0func.8.9.8reflect.ChanDir.9.2Comparable.0func.8.9.8bool.9.2ConvertibleTo.0func.8reflect.Type.9.8bool.9.2Elem.0func.8.9.8reflect.Type.9.2Field.0func.8int.9.8reflect.StructField.9.2FieldAlign.0func.8.9.8int.9.2FieldByIndex.0func.8.6.7int.9.8reflect.StructField.9.2FieldByName.0func.8string.9.8reflect.StructField.3bool.9.2FieldByNameFunc.0func.8func.8string.9.8bool.9.9.8reflect.StructField.3bool.9.2Implements.0func.8reflect.Type.9.8bool.9.2In.0func.8int.9.8reflect.Type.9.2IsVariadic.0func.8.9.8bool.9.2Key.0func.8.9.8reflect.Type.9.2Kind.0func.8.9.8reflect.Kind.9.2Len.0func.8.9.8int.9.2Method.0func.8int.9.8reflect.Method.9.2MethodByName.0func.8string.9.8reflect.Method.3bool.9.2Name.0func.8.9.8string.9.2NumField.0func.8.9.8int.9.2NumIn.0func.8.9.8int.9.2NumMethod.0func.8.9.8int.9.2NumOut.0func.8.9.8int.9.2Out.0func.8int.9.8reflect.Type.9.2PkgPath.0func.8.9.8string.9.2Size.0func.8.9.8uintptr.9.2String.0func.8.9.8string.9.2.reflect.common.0func.8.9.8.1reflect.rtype.9.2.reflect.rawString.0func.8.9.8string.9.2.reflect.uncommon.0func.8.9.8.1reflect.uncommonType.9.5..reflect.rtype
	.p2align	4
imt..interface.4Align.0func.8.9.8int.9.2AssignableTo.0func.8reflect.Type.9.8bool.9.2Bits.0func.8.9.8int.9.2ChanDir.0func.8.9.8reflect.ChanDir.9.2Comparable.0func.8.9.8bool.9.2ConvertibleTo.0func.8reflect.Type.9.8bool.9.2Elem.0func.8.9.8reflect.Type.9.2Field.0func.8int.9.8reflect.StructField.9.2FieldAlign.0func.8.9.8int.9.2FieldByIndex.0func.8.6.7int.9.8reflect.StructField.9.2FieldByName.0func.8string.9.8reflect.StructField.3bool.9.2FieldByNameFunc.0func.8func.8string.9.8bool.9.9.8reflect.StructField.3bool.9.2Implements.0func.8reflect.Type.9.8bool.9.2In.0func.8int.9.8reflect.Type.9.2IsVariadic.0func.8.9.8bool.9.2Key.0func.8.9.8reflect.Type.9.2Kind.0func.8.9.8reflect.Kind.9.2Len.0func.8.9.8int.9.2Method.0func.8int.9.8reflect.Method.9.2MethodByName.0func.8string.9.8reflect.Method.3bool.9.2Name.0func.8.9.8string.9.2NumField.0func.8.9.8int.9.2NumIn.0func.8.9.8int.9.2NumMethod.0func.8.9.8int.9.2NumOut.0func.8.9.8int.9.2Out.0func.8int.9.8reflect.Type.9.2PkgPath.0func.8.9.8string.9.2Size.0func.8.9.8uintptr.9.2String.0func.8.9.8string.9.2.reflect.common.0func.8.9.8.1reflect.rtype.9.2.reflect.rawString.0func.8.9.8string.9.2.reflect.uncommon.0func.8.9.8.1reflect.uncommonType.9.5..reflect.rtype:
	.quad	reflect..reflect.rtype..d
	.quad	reflect.rtype.Align
	.quad	reflect.rtype.AssignableTo
	.quad	reflect.rtype.Bits
	.quad	reflect.rtype.ChanDir
	.quad	reflect.rtype.Comparable
	.quad	reflect.rtype.ConvertibleTo
	.quad	reflect.rtype.Elem
	.quad	reflect.rtype.Field
	.quad	reflect.rtype.FieldAlign
	.quad	reflect.rtype.FieldByIndex
	.quad	reflect.rtype.FieldByName
	.quad	reflect.rtype.FieldByNameFunc
	.quad	reflect.rtype.Implements
	.quad	reflect.rtype.In
	.quad	reflect.rtype.IsVariadic
	.quad	reflect.rtype.Key
	.quad	reflect.rtype.Kind
	.quad	reflect.rtype.Len
	.quad	reflect.rtype.Method
	.quad	reflect.rtype.MethodByName
	.quad	reflect.rtype.Name
	.quad	reflect.rtype.NumField
	.quad	reflect.rtype.NumIn
	.quad	reflect.rtype.NumMethod
	.quad	reflect.rtype.NumOut
	.quad	reflect.rtype.Out
	.quad	reflect.rtype.PkgPath
	.quad	reflect.rtype.Size
	.quad	reflect.rtype.String
	.quad	reflect.rtype.common
	.quad	reflect.rtype.rawString
	.quad	reflect.rtype.uncommon..stub
	.size	imt..interface.4Align.0func.8.9.8int.9.2AssignableTo.0func.8reflect.Type.9.8bool.9.2Bits.0func.8.9.8int.9.2ChanDir.0func.8.9.8reflect.ChanDir.9.2Comparable.0func.8.9.8bool.9.2ConvertibleTo.0func.8reflect.Type.9.8bool.9.2Elem.0func.8.9.8reflect.Type.9.2Field.0func.8int.9.8reflect.StructField.9.2FieldAlign.0func.8.9.8int.9.2FieldByIndex.0func.8.6.7int.9.8reflect.StructField.9.2FieldByName.0func.8string.9.8reflect.StructField.3bool.9.2FieldByNameFunc.0func.8func.8string.9.8bool.9.9.8reflect.StructField.3bool.9.2Implements.0func.8reflect.Type.9.8bool.9.2In.0func.8int.9.8reflect.Type.9.2IsVariadic.0func.8.9.8bool.9.2Key.0func.8.9.8reflect.Type.9.2Kind.0func.8.9.8reflect.Kind.9.2Len.0func.8.9.8int.9.2Method.0func.8int.9.8reflect.Method.9.2MethodByName.0func.8string.9.8reflect.Method.3bool.9.2Name.0func.8.9.8string.9.2NumField.0func.8.9.8int.9.2NumIn.0func.8.9.8int.9.2NumMethod.0func.8.9.8int.9.2NumOut.0func.8.9.8int.9.2Out.0func.8int.9.8reflect.Type.9.2PkgPath.0func.8.9.8string.9.2Size.0func.8.9.8uintptr.9.2String.0func.8.9.8string.9.2.reflect.common.0func.8.9.8.1reflect.rtype.9.2.reflect.rawString.0func.8.9.8string.9.2.reflect.uncommon.0func.8.9.8.1reflect.uncommonType.9.5..reflect.rtype, 264

	.type	pimt..interface.4Align.0func.8.9.8int.9.2AssignableTo.0func.8reflect.Type.9.8bool.9.2Bits.0func.8.9.8int.9.2ChanDir.0func.8.9.8reflect.ChanDir.9.2Comparable.0func.8.9.8bool.9.2ConvertibleTo.0func.8reflect.Type.9.8bool.9.2Elem.0func.8.9.8reflect.Type.9.2Field.0func.8int.9.8reflect.StructField.9.2FieldAlign.0func.8.9.8int.9.2FieldByIndex.0func.8.6.7int.9.8reflect.StructField.9.2FieldByName.0func.8string.9.8reflect.StructField.3bool.9.2FieldByNameFunc.0func.8func.8string.9.8bool.9.9.8reflect.StructField.3bool.9.2Implements.0func.8reflect.Type.9.8bool.9.2In.0func.8int.9.8reflect.Type.9.2IsVariadic.0func.8.9.8bool.9.2Key.0func.8.9.8reflect.Type.9.2Kind.0func.8.9.8reflect.Kind.9.2Len.0func.8.9.8int.9.2Method.0func.8int.9.8reflect.Method.9.2MethodByName.0func.8string.9.8reflect.Method.3bool.9.2Name.0func.8.9.8string.9.2NumField.0func.8.9.8int.9.2NumIn.0func.8.9.8int.9.2NumMethod.0func.8.9.8int.9.2NumOut.0func.8.9.8int.9.2Out.0func.8int.9.8reflect.Type.9.2PkgPath.0func.8.9.8string.9.2Size.0func.8.9.8uintptr.9.2String.0func.8.9.8string.9.2.reflect.common.0func.8.9.8.1reflect.rtype.9.2.reflect.rawString.0func.8.9.8string.9.2.reflect.uncommon.0func.8.9.8.1reflect.uncommonType.9.5..reflect.rtype,@object
	.section	.rodata.pimt..interface.4Align.0func.8.9.8int.9.2AssignableTo.0func.8reflect.Type.9.8bool.9.2Bits.0func.8.9.8int.9.2ChanDir.0func.8.9.8reflect.ChanDir.9.2Comparable.0func.8.9.8bool.9.2ConvertibleTo.0func.8reflect.Type.9.8bool.9.2Elem.0func.8.9.8reflect.Type.9.2Field.0func.8int.9.8reflect.StructField.9.2FieldAlign.0func.8.9.8int.9.2FieldByIndex.0func.8.6.7int.9.8reflect.StructField.9.2FieldByName.0func.8string.9.8reflect.StructField.3bool.9.2FieldByNameFunc.0func.8func.8string.9.8bool.9.9.8reflect.StructField.3bool.9.2Implements.0func.8reflect.Type.9.8bool.9.2In.0func.8int.9.8reflect.Type.9.2IsVariadic.0func.8.9.8bool.9.2Key.0func.8.9.8reflect.Type.9.2Kind.0func.8.9.8reflect.Kind.9.2Len.0func.8.9.8int.9.2Method.0func.8int.9.8reflect.Method.9.2MethodByName.0func.8string.9.8reflect.Method.3bool.9.2Name.0func.8.9.8string.9.2NumField.0func.8.9.8int.9.2NumIn.0func.8.9.8int.9.2NumMethod.0func.8.9.8int.9.2NumOut.0func.8.9.8int.9.2Out.0func.8int.9.8reflect.Type.9.2PkgPath.0func.8.9.8string.9.2Size.0func.8.9.8uintptr.9.2String.0func.8.9.8string.9.2.reflect.common.0func.8.9.8.1reflect.rtype.9.2.reflect.rawString.0func.8.9.8string.9.2.reflect.uncommon.0func.8.9.8.1reflect.uncommonType.9.5..reflect.rtype,"aG",@progbits,pimt..interface.4Align.0func.8.9.8int.9.2AssignableTo.0func.8reflect.Type.9.8bool.9.2Bits.0func.8.9.8int.9.2ChanDir.0func.8.9.8reflect.ChanDir.9.2Comparable.0func.8.9.8bool.9.2ConvertibleTo.0func.8reflect.Type.9.8bool.9.2Elem.0func.8.9.8reflect.Type.9.2Field.0func.8int.9.8reflect.StructField.9.2FieldAlign.0func.8.9.8int.9.2FieldByIndex.0func.8.6.7int.9.8reflect.StructField.9.2FieldByName.0func.8string.9.8reflect.StructField.3bool.9.2FieldByNameFunc.0func.8func.8string.9.8bool.9.9.8reflect.StructField.3bool.9.2Implements.0func.8reflect.Type.9.8bool.9.2In.0func.8int.9.8reflect.Type.9.2IsVariadic.0func.8.9.8bool.9.2Key.0func.8.9.8reflect.Type.9.2Kind.0func.8.9.8reflect.Kind.9.2Len.0func.8.9.8int.9.2Method.0func.8int.9.8reflect.Method.9.2MethodByName.0func.8string.9.8reflect.Method.3bool.9.2Name.0func.8.9.8string.9.2NumField.0func.8.9.8int.9.2NumIn.0func.8.9.8int.9.2NumMethod.0func.8.9.8int.9.2NumOut.0func.8.9.8int.9.2Out.0func.8int.9.8reflect.Type.9.2PkgPath.0func.8.9.8string.9.2Size.0func.8.9.8uintptr.9.2String.0func.8.9.8string.9.2.reflect.common.0func.8.9.8.1reflect.rtype.9.2.reflect.rawString.0func.8.9.8string.9.2.reflect.uncommon.0func.8.9.8.1reflect.uncommonType.9.5..reflect.rtype,comdat
	.weak	pimt..interface.4Align.0func.8.9.8int.9.2AssignableTo.0func.8reflect.Type.9.8bool.9.2Bits.0func.8.9.8int.9.2ChanDir.0func.8.9.8reflect.ChanDir.9.2Comparable.0func.8.9.8bool.9.2ConvertibleTo.0func.8reflect.Type.9.8bool.9.2Elem.0func.8.9.8reflect.Type.9.2Field.0func.8int.9.8reflect.StructField.9.2FieldAlign.0func.8.9.8int.9.2FieldByIndex.0func.8.6.7int.9.8reflect.StructField.9.2FieldByName.0func.8string.9.8reflect.StructField.3bool.9.2FieldByNameFunc.0func.8func.8string.9.8bool.9.9.8reflect.StructField.3bool.9.2Implements.0func.8reflect.Type.9.8bool.9.2In.0func.8int.9.8reflect.Type.9.2IsVariadic.0func.8.9.8bool.9.2Key.0func.8.9.8reflect.Type.9.2Kind.0func.8.9.8reflect.Kind.9.2Len.0func.8.9.8int.9.2Method.0func.8int.9.8reflect.Method.9.2MethodByName.0func.8string.9.8reflect.Method.3bool.9.2Name.0func.8.9.8string.9.2NumField.0func.8.9.8int.9.2NumIn.0func.8.9.8int.9.2NumMethod.0func.8.9.8int.9.2NumOut.0func.8.9.8int.9.2Out.0func.8int.9.8reflect.Type.9.2PkgPath.0func.8.9.8string.9.2Size.0func.8.9.8uintptr.9.2String.0func.8.9.8string.9.2.reflect.common.0func.8.9.8.1reflect.rtype.9.2.reflect.rawString.0func.8.9.8string.9.2.reflect.uncommon.0func.8.9.8.1reflect.uncommonType.9.5..reflect.rtype
	.p2align	4
pimt..interface.4Align.0func.8.9.8int.9.2AssignableTo.0func.8reflect.Type.9.8bool.9.2Bits.0func.8.9.8int.9.2ChanDir.0func.8.9.8reflect.ChanDir.9.2Comparable.0func.8.9.8bool.9.2ConvertibleTo.0func.8reflect.Type.9.8bool.9.2Elem.0func.8.9.8reflect.Type.9.2Field.0func.8int.9.8reflect.StructField.9.2FieldAlign.0func.8.9.8int.9.2FieldByIndex.0func.8.6.7int.9.8reflect.StructField.9.2FieldByName.0func.8string.9.8reflect.StructField.3bool.9.2FieldByNameFunc.0func.8func.8string.9.8bool.9.9.8reflect.StructField.3bool.9.2Implements.0func.8reflect.Type.9.8bool.9.2In.0func.8int.9.8reflect.Type.9.2IsVariadic.0func.8.9.8bool.9.2Key.0func.8.9.8reflect.Type.9.2Kind.0func.8.9.8reflect.Kind.9.2Len.0func.8.9.8int.9.2Method.0func.8int.9.8reflect.Method.9.2MethodByName.0func.8string.9.8reflect.Method.3bool.9.2Name.0func.8.9.8string.9.2NumField.0func.8.9.8int.9.2NumIn.0func.8.9.8int.9.2NumMethod.0func.8.9.8int.9.2NumOut.0func.8.9.8int.9.2Out.0func.8int.9.8reflect.Type.9.2PkgPath.0func.8.9.8string.9.2Size.0func.8.9.8uintptr.9.2String.0func.8.9.8string.9.2.reflect.common.0func.8.9.8.1reflect.rtype.9.2.reflect.rawString.0func.8.9.8string.9.2.reflect.uncommon.0func.8.9.8.1reflect.uncommonType.9.5..reflect.rtype:
	.quad	type...1reflect.rtype
	.quad	reflect.rtype.Align
	.quad	reflect.rtype.AssignableTo
	.quad	reflect.rtype.Bits
	.quad	reflect.rtype.ChanDir
	.quad	reflect.rtype.Comparable
	.quad	reflect.rtype.ConvertibleTo
	.quad	reflect.rtype.Elem
	.quad	reflect.rtype.Field
	.quad	reflect.rtype.FieldAlign
	.quad	reflect.rtype.FieldByIndex
	.quad	reflect.rtype.FieldByName
	.quad	reflect.rtype.FieldByNameFunc
	.quad	reflect.rtype.Implements
	.quad	reflect.rtype.In
	.quad	reflect.rtype.IsVariadic
	.quad	reflect.rtype.Key
	.quad	reflect.rtype.Kind
	.quad	reflect.rtype.Len
	.quad	reflect.rtype.Method
	.quad	reflect.rtype.MethodByName
	.quad	reflect.rtype.Name
	.quad	reflect.rtype.NumField
	.quad	reflect.rtype.NumIn
	.quad	reflect.rtype.NumMethod
	.quad	reflect.rtype.NumOut
	.quad	reflect.rtype.Out
	.quad	reflect.rtype.PkgPath
	.quad	reflect.rtype.Size
	.quad	reflect.rtype.String
	.quad	reflect.rtype.common
	.quad	reflect.rtype.rawString
	.quad	reflect.rtype.uncommon..stub
	.size	pimt..interface.4Align.0func.8.9.8int.9.2AssignableTo.0func.8reflect.Type.9.8bool.9.2Bits.0func.8.9.8int.9.2ChanDir.0func.8.9.8reflect.ChanDir.9.2Comparable.0func.8.9.8bool.9.2ConvertibleTo.0func.8reflect.Type.9.8bool.9.2Elem.0func.8.9.8reflect.Type.9.2Field.0func.8int.9.8reflect.StructField.9.2FieldAlign.0func.8.9.8int.9.2FieldByIndex.0func.8.6.7int.9.8reflect.StructField.9.2FieldByName.0func.8string.9.8reflect.StructField.3bool.9.2FieldByNameFunc.0func.8func.8string.9.8bool.9.9.8reflect.StructField.3bool.9.2Implements.0func.8reflect.Type.9.8bool.9.2In.0func.8int.9.8reflect.Type.9.2IsVariadic.0func.8.9.8bool.9.2Key.0func.8.9.8reflect.Type.9.2Kind.0func.8.9.8reflect.Kind.9.2Len.0func.8.9.8int.9.2Method.0func.8int.9.8reflect.Method.9.2MethodByName.0func.8string.9.8reflect.Method.3bool.9.2Name.0func.8.9.8string.9.2NumField.0func.8.9.8int.9.2NumIn.0func.8.9.8int.9.2NumMethod.0func.8.9.8int.9.2NumOut.0func.8.9.8int.9.2Out.0func.8int.9.8reflect.Type.9.2PkgPath.0func.8.9.8string.9.2Size.0func.8.9.8uintptr.9.2String.0func.8.9.8string.9.2.reflect.common.0func.8.9.8.1reflect.rtype.9.2.reflect.rawString.0func.8.9.8string.9.2.reflect.uncommon.0func.8.9.8.1reflect.uncommonType.9.5..reflect.rtype, 264

	.type	imt..interface.4.regexp.canCheckPrefix.0func.8.9.8bool.9.2.regexp.context.0func.8int.9.8regexp_syntax.EmptyOp.9.2.regexp.hasPrefix.0func.8.1regexp.Regexp.9.8bool.9.2.regexp.index.0func.8.1regexp.Regexp.3int.9.8int.9.2.regexp.step.0func.8int.9.8int32.3int.9.5..regexp.inputBytes,@object
	.section	.rodata.imt..interface.4.regexp.canCheckPrefix.0func.8.9.8bool.9.2.regexp.context.0func.8int.9.8regexp_syntax.EmptyOp.9.2.regexp.hasPrefix.0func.8.1regexp.Regexp.9.8bool.9.2.regexp.index.0func.8.1regexp.Regexp.3int.9.8int.9.2.regexp.step.0func.8int.9.8int32.3int.9.5..regexp.inputBytes,"aG",@progbits,imt..interface.4.regexp.canCheckPrefix.0func.8.9.8bool.9.2.regexp.context.0func.8int.9.8regexp_syntax.EmptyOp.9.2.regexp.hasPrefix.0func.8.1regexp.Regexp.9.8bool.9.2.regexp.index.0func.8.1regexp.Regexp.3int.9.8int.9.2.regexp.step.0func.8int.9.8int32.3int.9.5..regexp.inputBytes,comdat
	.weak	imt..interface.4.regexp.canCheckPrefix.0func.8.9.8bool.9.2.regexp.context.0func.8int.9.8regexp_syntax.EmptyOp.9.2.regexp.hasPrefix.0func.8.1regexp.Regexp.9.8bool.9.2.regexp.index.0func.8.1regexp.Regexp.3int.9.8int.9.2.regexp.step.0func.8int.9.8int32.3int.9.5..regexp.inputBytes
	.p2align	4
imt..interface.4.regexp.canCheckPrefix.0func.8.9.8bool.9.2.regexp.context.0func.8int.9.8regexp_syntax.EmptyOp.9.2.regexp.hasPrefix.0func.8.1regexp.Regexp.9.8bool.9.2.regexp.index.0func.8.1regexp.Regexp.3int.9.8int.9.2.regexp.step.0func.8int.9.8int32.3int.9.5..regexp.inputBytes:
	.quad	regexp..regexp.inputBytes..d
	.quad	regexp.inputBytes.canCheckPrefix
	.quad	regexp.inputBytes.context
	.quad	regexp.inputBytes.hasPrefix
	.quad	regexp.inputBytes.index
	.quad	regexp.inputBytes.step
	.size	imt..interface.4.regexp.canCheckPrefix.0func.8.9.8bool.9.2.regexp.context.0func.8int.9.8regexp_syntax.EmptyOp.9.2.regexp.hasPrefix.0func.8.1regexp.Regexp.9.8bool.9.2.regexp.index.0func.8.1regexp.Regexp.3int.9.8int.9.2.regexp.step.0func.8int.9.8int32.3int.9.5..regexp.inputBytes, 48

	.type	pimt..interface.4.regexp.canCheckPrefix.0func.8.9.8bool.9.2.regexp.context.0func.8int.9.8regexp_syntax.EmptyOp.9.2.regexp.hasPrefix.0func.8.1regexp.Regexp.9.8bool.9.2.regexp.index.0func.8.1regexp.Regexp.3int.9.8int.9.2.regexp.step.0func.8int.9.8int32.3int.9.5..regexp.inputBytes,@object
	.section	.rodata.pimt..interface.4.regexp.canCheckPrefix.0func.8.9.8bool.9.2.regexp.context.0func.8int.9.8regexp_syntax.EmptyOp.9.2.regexp.hasPrefix.0func.8.1regexp.Regexp.9.8bool.9.2.regexp.index.0func.8.1regexp.Regexp.3int.9.8int.9.2.regexp.step.0func.8int.9.8int32.3int.9.5..regexp.inputBytes,"aG",@progbits,pimt..interface.4.regexp.canCheckPrefix.0func.8.9.8bool.9.2.regexp.context.0func.8int.9.8regexp_syntax.EmptyOp.9.2.regexp.hasPrefix.0func.8.1regexp.Regexp.9.8bool.9.2.regexp.index.0func.8.1regexp.Regexp.3int.9.8int.9.2.regexp.step.0func.8int.9.8int32.3int.9.5..regexp.inputBytes,comdat
	.weak	pimt..interface.4.regexp.canCheckPrefix.0func.8.9.8bool.9.2.regexp.context.0func.8int.9.8regexp_syntax.EmptyOp.9.2.regexp.hasPrefix.0func.8.1regexp.Regexp.9.8bool.9.2.regexp.index.0func.8.1regexp.Regexp.3int.9.8int.9.2.regexp.step.0func.8int.9.8int32.3int.9.5..regexp.inputBytes
	.p2align	4
pimt..interface.4.regexp.canCheckPrefix.0func.8.9.8bool.9.2.regexp.context.0func.8int.9.8regexp_syntax.EmptyOp.9.2.regexp.hasPrefix.0func.8.1regexp.Regexp.9.8bool.9.2.regexp.index.0func.8.1regexp.Regexp.3int.9.8int.9.2.regexp.step.0func.8int.9.8int32.3int.9.5..regexp.inputBytes:
	.quad	type...1regexp.inputBytes
	.quad	regexp.inputBytes.canCheckPrefix
	.quad	regexp.inputBytes.context
	.quad	regexp.inputBytes.hasPrefix
	.quad	regexp.inputBytes.index
	.quad	regexp.inputBytes.step
	.size	pimt..interface.4.regexp.canCheckPrefix.0func.8.9.8bool.9.2.regexp.context.0func.8int.9.8regexp_syntax.EmptyOp.9.2.regexp.hasPrefix.0func.8.1regexp.Regexp.9.8bool.9.2.regexp.index.0func.8.1regexp.Regexp.3int.9.8int.9.2.regexp.step.0func.8int.9.8int32.3int.9.5..regexp.inputBytes, 48

	.type	imt..interface.4.regexp.canCheckPrefix.0func.8.9.8bool.9.2.regexp.context.0func.8int.9.8regexp_syntax.EmptyOp.9.2.regexp.hasPrefix.0func.8.1regexp.Regexp.9.8bool.9.2.regexp.index.0func.8.1regexp.Regexp.3int.9.8int.9.2.regexp.step.0func.8int.9.8int32.3int.9.5..regexp.inputString,@object
	.section	.rodata.imt..interface.4.regexp.canCheckPrefix.0func.8.9.8bool.9.2.regexp.context.0func.8int.9.8regexp_syntax.EmptyOp.9.2.regexp.hasPrefix.0func.8.1regexp.Regexp.9.8bool.9.2.regexp.index.0func.8.1regexp.Regexp.3int.9.8int.9.2.regexp.step.0func.8int.9.8int32.3int.9.5..regexp.inputString,"aG",@progbits,imt..interface.4.regexp.canCheckPrefix.0func.8.9.8bool.9.2.regexp.context.0func.8int.9.8regexp_syntax.EmptyOp.9.2.regexp.hasPrefix.0func.8.1regexp.Regexp.9.8bool.9.2.regexp.index.0func.8.1regexp.Regexp.3int.9.8int.9.2.regexp.step.0func.8int.9.8int32.3int.9.5..regexp.inputString,comdat
	.weak	imt..interface.4.regexp.canCheckPrefix.0func.8.9.8bool.9.2.regexp.context.0func.8int.9.8regexp_syntax.EmptyOp.9.2.regexp.hasPrefix.0func.8.1regexp.Regexp.9.8bool.9.2.regexp.index.0func.8.1regexp.Regexp.3int.9.8int.9.2.regexp.step.0func.8int.9.8int32.3int.9.5..regexp.inputString
	.p2align	4
imt..interface.4.regexp.canCheckPrefix.0func.8.9.8bool.9.2.regexp.context.0func.8int.9.8regexp_syntax.EmptyOp.9.2.regexp.hasPrefix.0func.8.1regexp.Regexp.9.8bool.9.2.regexp.index.0func.8.1regexp.Regexp.3int.9.8int.9.2.regexp.step.0func.8int.9.8int32.3int.9.5..regexp.inputString:
	.quad	regexp..regexp.inputString..d
	.quad	regexp.inputString.canCheckPrefix
	.quad	regexp.inputString.context
	.quad	regexp.inputString.hasPrefix
	.quad	regexp.inputString.index
	.quad	regexp.inputString.step
	.size	imt..interface.4.regexp.canCheckPrefix.0func.8.9.8bool.9.2.regexp.context.0func.8int.9.8regexp_syntax.EmptyOp.9.2.regexp.hasPrefix.0func.8.1regexp.Regexp.9.8bool.9.2.regexp.index.0func.8.1regexp.Regexp.3int.9.8int.9.2.regexp.step.0func.8int.9.8int32.3int.9.5..regexp.inputString, 48

	.type	pimt..interface.4.regexp.canCheckPrefix.0func.8.9.8bool.9.2.regexp.context.0func.8int.9.8regexp_syntax.EmptyOp.9.2.regexp.hasPrefix.0func.8.1regexp.Regexp.9.8bool.9.2.regexp.index.0func.8.1regexp.Regexp.3int.9.8int.9.2.regexp.step.0func.8int.9.8int32.3int.9.5..regexp.inputString,@object
	.section	.rodata.pimt..interface.4.regexp.canCheckPrefix.0func.8.9.8bool.9.2.regexp.context.0func.8int.9.8regexp_syntax.EmptyOp.9.2.regexp.hasPrefix.0func.8.1regexp.Regexp.9.8bool.9.2.regexp.index.0func.8.1regexp.Regexp.3int.9.8int.9.2.regexp.step.0func.8int.9.8int32.3int.9.5..regexp.inputString,"aG",@progbits,pimt..interface.4.regexp.canCheckPrefix.0func.8.9.8bool.9.2.regexp.context.0func.8int.9.8regexp_syntax.EmptyOp.9.2.regexp.hasPrefix.0func.8.1regexp.Regexp.9.8bool.9.2.regexp.index.0func.8.1regexp.Regexp.3int.9.8int.9.2.regexp.step.0func.8int.9.8int32.3int.9.5..regexp.inputString,comdat
	.weak	pimt..interface.4.regexp.canCheckPrefix.0func.8.9.8bool.9.2.regexp.context.0func.8int.9.8regexp_syntax.EmptyOp.9.2.regexp.hasPrefix.0func.8.1regexp.Regexp.9.8bool.9.2.regexp.index.0func.8.1regexp.Regexp.3int.9.8int.9.2.regexp.step.0func.8int.9.8int32.3int.9.5..regexp.inputString
	.p2align	4
pimt..interface.4.regexp.canCheckPrefix.0func.8.9.8bool.9.2.regexp.context.0func.8int.9.8regexp_syntax.EmptyOp.9.2.regexp.hasPrefix.0func.8.1regexp.Regexp.9.8bool.9.2.regexp.index.0func.8.1regexp.Regexp.3int.9.8int.9.2.regexp.step.0func.8int.9.8int32.3int.9.5..regexp.inputString:
	.quad	type...1regexp.inputString
	.quad	regexp.inputString.canCheckPrefix
	.quad	regexp.inputString.context
	.quad	regexp.inputString.hasPrefix
	.quad	regexp.inputString.index
	.quad	regexp.inputString.step
	.size	pimt..interface.4.regexp.canCheckPrefix.0func.8.9.8bool.9.2.regexp.context.0func.8int.9.8regexp_syntax.EmptyOp.9.2.regexp.hasPrefix.0func.8.1regexp.Regexp.9.8bool.9.2.regexp.index.0func.8.1regexp.Regexp.3int.9.8int.9.2.regexp.step.0func.8int.9.8int32.3int.9.5..regexp.inputString, 48

	.type	imt..interface.4.regexp.canCheckPrefix.0func.8.9.8bool.9.2.regexp.context.0func.8int.9.8regexp_syntax.EmptyOp.9.2.regexp.hasPrefix.0func.8.1regexp.Regexp.9.8bool.9.2.regexp.index.0func.8.1regexp.Regexp.3int.9.8int.9.2.regexp.step.0func.8int.9.8int32.3int.9.5..regexp.inputReader,@object
	.section	.rodata.imt..interface.4.regexp.canCheckPrefix.0func.8.9.8bool.9.2.regexp.context.0func.8int.9.8regexp_syntax.EmptyOp.9.2.regexp.hasPrefix.0func.8.1regexp.Regexp.9.8bool.9.2.regexp.index.0func.8.1regexp.Regexp.3int.9.8int.9.2.regexp.step.0func.8int.9.8int32.3int.9.5..regexp.inputReader,"aG",@progbits,imt..interface.4.regexp.canCheckPrefix.0func.8.9.8bool.9.2.regexp.context.0func.8int.9.8regexp_syntax.EmptyOp.9.2.regexp.hasPrefix.0func.8.1regexp.Regexp.9.8bool.9.2.regexp.index.0func.8.1regexp.Regexp.3int.9.8int.9.2.regexp.step.0func.8int.9.8int32.3int.9.5..regexp.inputReader,comdat
	.weak	imt..interface.4.regexp.canCheckPrefix.0func.8.9.8bool.9.2.regexp.context.0func.8int.9.8regexp_syntax.EmptyOp.9.2.regexp.hasPrefix.0func.8.1regexp.Regexp.9.8bool.9.2.regexp.index.0func.8.1regexp.Regexp.3int.9.8int.9.2.regexp.step.0func.8int.9.8int32.3int.9.5..regexp.inputReader
	.p2align	4
imt..interface.4.regexp.canCheckPrefix.0func.8.9.8bool.9.2.regexp.context.0func.8int.9.8regexp_syntax.EmptyOp.9.2.regexp.hasPrefix.0func.8.1regexp.Regexp.9.8bool.9.2.regexp.index.0func.8.1regexp.Regexp.3int.9.8int.9.2.regexp.step.0func.8int.9.8int32.3int.9.5..regexp.inputReader:
	.quad	regexp..regexp.inputReader..d
	.quad	regexp.inputReader.canCheckPrefix
	.quad	regexp.inputReader.context
	.quad	regexp.inputReader.hasPrefix
	.quad	regexp.inputReader.index
	.quad	regexp.inputReader.step
	.size	imt..interface.4.regexp.canCheckPrefix.0func.8.9.8bool.9.2.regexp.context.0func.8int.9.8regexp_syntax.EmptyOp.9.2.regexp.hasPrefix.0func.8.1regexp.Regexp.9.8bool.9.2.regexp.index.0func.8.1regexp.Regexp.3int.9.8int.9.2.regexp.step.0func.8int.9.8int32.3int.9.5..regexp.inputReader, 48

	.type	pimt..interface.4.regexp.canCheckPrefix.0func.8.9.8bool.9.2.regexp.context.0func.8int.9.8regexp_syntax.EmptyOp.9.2.regexp.hasPrefix.0func.8.1regexp.Regexp.9.8bool.9.2.regexp.index.0func.8.1regexp.Regexp.3int.9.8int.9.2.regexp.step.0func.8int.9.8int32.3int.9.5..regexp.inputReader,@object
	.section	.rodata.pimt..interface.4.regexp.canCheckPrefix.0func.8.9.8bool.9.2.regexp.context.0func.8int.9.8regexp_syntax.EmptyOp.9.2.regexp.hasPrefix.0func.8.1regexp.Regexp.9.8bool.9.2.regexp.index.0func.8.1regexp.Regexp.3int.9.8int.9.2.regexp.step.0func.8int.9.8int32.3int.9.5..regexp.inputReader,"aG",@progbits,pimt..interface.4.regexp.canCheckPrefix.0func.8.9.8bool.9.2.regexp.context.0func.8int.9.8regexp_syntax.EmptyOp.9.2.regexp.hasPrefix.0func.8.1regexp.Regexp.9.8bool.9.2.regexp.index.0func.8.1regexp.Regexp.3int.9.8int.9.2.regexp.step.0func.8int.9.8int32.3int.9.5..regexp.inputReader,comdat
	.weak	pimt..interface.4.regexp.canCheckPrefix.0func.8.9.8bool.9.2.regexp.context.0func.8int.9.8regexp_syntax.EmptyOp.9.2.regexp.hasPrefix.0func.8.1regexp.Regexp.9.8bool.9.2.regexp.index.0func.8.1regexp.Regexp.3int.9.8int.9.2.regexp.step.0func.8int.9.8int32.3int.9.5..regexp.inputReader
	.p2align	4
pimt..interface.4.regexp.canCheckPrefix.0func.8.9.8bool.9.2.regexp.context.0func.8int.9.8regexp_syntax.EmptyOp.9.2.regexp.hasPrefix.0func.8.1regexp.Regexp.9.8bool.9.2.regexp.index.0func.8.1regexp.Regexp.3int.9.8int.9.2.regexp.step.0func.8int.9.8int32.3int.9.5..regexp.inputReader:
	.quad	type...1regexp.inputReader
	.quad	regexp.inputReader.canCheckPrefix
	.quad	regexp.inputReader.context
	.quad	regexp.inputReader.hasPrefix
	.quad	regexp.inputReader.index
	.quad	regexp.inputReader.step
	.size	pimt..interface.4.regexp.canCheckPrefix.0func.8.9.8bool.9.2.regexp.context.0func.8int.9.8regexp_syntax.EmptyOp.9.2.regexp.hasPrefix.0func.8.1regexp.Regexp.9.8bool.9.2.regexp.index.0func.8.1regexp.Regexp.3int.9.8int.9.2.regexp.step.0func.8int.9.8int32.3int.9.5..regexp.inputReader, 48

	.type	command_line_arguments.Session..d,@object
	.section	.rodata.command_line_arguments.Session..d,"a",@progbits
	.globl	command_line_arguments.Session..d
	.p2align	4
command_line_arguments.Session..d:
	.quad	248
	.quad	248
	.long	1808299448
	.byte	25
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..wkEGGEb
	.quad	go..C1
	.quad	go..C5
	.quad	type...1command_line_arguments.Session
	.quad	go..C82
	.quad	17
	.quad	17
	.size	command_line_arguments.Session..d, 96

	.type	gcbits..wkEGGEb,@object
	.section	.rodata.gcbits..wkEGGEb,"aG",@progbits,gcbits..wkEGGEb,comdat
	.weak	gcbits..wkEGGEb
gcbits..wkEGGEb:
	.ascii	"U\365\377{"
	.size	gcbits..wkEGGEb, 4

	.type	.Lconst.0,@object
	.section	.rodata..Lconst.0,"a",@progbits
.Lconst.0:
	.asciz	"\tcommand_line_arguments\tdaemon.Session"
	.size	.Lconst.0, 39

	.type	go..C1,@object
	.section	.rodata.go..C1,"a",@progbits
	.p2align	3
go..C1:
	.quad	.Lconst.0
	.quad	38
	.size	go..C1, 16

	.type	.Lconst.1,@object
	.section	.rodata..Lconst.1,"a",@progbits
.Lconst.1:
	.asciz	"Session"
	.size	.Lconst.1, 8

	.type	go..C2,@object
	.section	.rodata.go..C2,"a",@progbits
	.p2align	3
go..C2:
	.quad	.Lconst.1
	.quad	7
	.size	go..C2, 16

	.type	.Lconst.2,@object
	.section	.rodata..Lconst.2,"a",@progbits
.Lconst.2:
	.asciz	"command-line-arguments"
	.size	.Lconst.2, 23

	.type	go..C3,@object
	.section	.rodata.go..C3,"a",@progbits
	.p2align	3
go..C3:
	.quad	.Lconst.2
	.quad	22
	.size	go..C3, 16

	.type	go..C4,@object
	.section	.bss.go..C4,"aw",@nobits
	.p2align	4
go..C4:
	.zero	40
	.size	go..C4, 40

	.type	go..C5,@object
	.section	.rodata.go..C5,"a",@progbits
	.p2align	4
go..C5:
	.quad	go..C2
	.quad	go..C3
	.quad	go..C4
	.quad	0
	.quad	0
	.size	go..C5, 40

	.type	type...1command_line_arguments.Session,@object
	.section	.rodata.type...1command_line_arguments.Session,"aG",@progbits,type...1command_line_arguments.Session,comdat
	.weak	type...1command_line_arguments.Session
	.p2align	4
type...1command_line_arguments.Session:
	.quad	8
	.quad	8
	.long	3162987401
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C6
	.quad	go..C41
	.quad	type...1.1command_line_arguments.Session
	.quad	command_line_arguments.Session..d
	.size	type...1command_line_arguments.Session, 80

	.type	gcbits..ba,@object
	.section	.rodata.gcbits..ba,"aG",@progbits,gcbits..ba,comdat
	.weak	gcbits..ba
gcbits..ba:
	.byte	1
	.size	gcbits..ba, 1

	.type	.Lconst.3,@object
	.section	.rodata..Lconst.3,"a",@progbits
.Lconst.3:
	.asciz	"*\tcommand_line_arguments\tdaemon.Session"
	.size	.Lconst.3, 40

	.type	go..C6,@object
	.section	.rodata.go..C6,"a",@progbits
	.p2align	3
go..C6:
	.quad	.Lconst.3
	.quad	39
	.size	go..C6, 16

	.type	.Lconst.4,@object
	.section	.rodata..Lconst.4,"a",@progbits
.Lconst.4:
	.asciz	"SendError"
	.size	.Lconst.4, 10

	.type	go..C7,@object
	.section	.rodata.go..C7,"a",@progbits
	.p2align	3
go..C7:
	.quad	.Lconst.4
	.quad	9
	.size	go..C7, 16

	.type	type..func.8context.Context.3string.3string.9.8.9,@object
	.section	.rodata.type..func.8context.Context.3string.3string.9.8.9,"aG",@progbits,type..func.8context.Context.3string.3string.9.8.9,comdat
	.weak	type..func.8context.Context.3string.3string.9.8.9
	.p2align	4
type..func.8context.Context.3string.3string.9.8.9:
	.quad	8
	.quad	8
	.long	4064000232
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C8
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C14
	.quad	3
	.quad	3
	.quad	go..C15
	.quad	0
	.quad	0
	.size	type..func.8context.Context.3string.3string.9.8.9, 128

	.type	.Lconst.5,@object
	.section	.rodata..Lconst.5,"a",@progbits
.Lconst.5:
	.asciz	"func(\tcontext\tcontext.Context, string, string)"
	.size	.Lconst.5, 47

	.type	go..C8,@object
	.section	.rodata.go..C8,"a",@progbits
	.p2align	3
go..C8:
	.quad	.Lconst.5
	.quad	46
	.size	go..C8, 16

	.type	string..d,@object
	.section	.rodata.string..d,"aG",@progbits,string..d,comdat
	.weak	string..d
	.p2align	4
string..d:
	.quad	16
	.quad	8
	.long	2296014490
	.byte	24
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.strhash..f
	.quad	runtime.strequal..f
	.quad	gcbits..ba
	.quad	go..C9
	.quad	go..C12
	.quad	type...1string
	.size	string..d, 72

	.type	.Lconst.6,@object
	.section	.rodata..Lconst.6,"a",@progbits
.Lconst.6:
	.asciz	"string"
	.size	.Lconst.6, 7

	.type	go..C9,@object
	.section	.rodata.go..C9,"a",@progbits
	.p2align	3
go..C9:
	.quad	.Lconst.6
	.quad	6
	.size	go..C9, 16

	.type	go..C10,@object
	.section	.rodata.go..C10,"a",@progbits
	.p2align	3
go..C10:
	.quad	.Lconst.6
	.quad	6
	.size	go..C10, 16

	.type	go..C11,@object
	.section	.bss.go..C11,"aw",@nobits
	.p2align	4
go..C11:
	.zero	40
	.size	go..C11, 40

	.type	go..C12,@object
	.section	.rodata.go..C12,"a",@progbits
	.p2align	4
go..C12:
	.quad	go..C10
	.quad	0
	.quad	go..C11
	.quad	0
	.quad	0
	.size	go..C12, 40

	.type	type...1string,@object
	.section	.rodata.type...1string,"aG",@progbits,type...1string,comdat
	.weak	type...1string
	.p2align	4
type...1string:
	.quad	8
	.quad	8
	.long	2376493481
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C13
	.quad	0
	.quad	0
	.quad	string..d
	.size	type...1string, 80

	.type	.Lconst.7,@object
	.section	.rodata..Lconst.7,"a",@progbits
.Lconst.7:
	.asciz	"*string"
	.size	.Lconst.7, 8

	.type	go..C13,@object
	.section	.rodata.go..C13,"a",@progbits
	.p2align	3
go..C13:
	.quad	.Lconst.7
	.quad	7
	.size	go..C13, 16

	.type	go..C14,@object
	.section	.data.go..C14,"aw",@progbits
	.p2align	4
go..C14:
	.quad	context.Context..d
	.quad	string..d
	.quad	string..d
	.size	go..C14, 24

	.type	go..C15,@object
	.section	.bss.go..C15,"aw",@nobits
	.p2align	3
go..C15:
	.zero	8
	.size	go..C15, 8

	.type	type..func.8.1command_line_arguments.Session.3context.Context.3string.3string.9.8.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.Session.3context.Context.3string.3string.9.8.9,"aG",@progbits,type..func.8.1command_line_arguments.Session.3context.Context.3string.3string.9.8.9,comdat
	.weak	type..func.8.1command_line_arguments.Session.3context.Context.3string.3string.9.8.9
	.p2align	4
type..func.8.1command_line_arguments.Session.3context.Context.3string.3string.9.8.9:
	.quad	8
	.quad	8
	.long	1969414888
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C16
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C17
	.quad	4
	.quad	4
	.quad	go..C18
	.quad	0
	.quad	0
	.size	type..func.8.1command_line_arguments.Session.3context.Context.3string.3string.9.8.9, 128

	.type	.Lconst.8,@object
	.section	.rodata..Lconst.8,"a",@progbits
.Lconst.8:
	.asciz	"func(*\tcommand_line_arguments\tdaemon.Session, \tcontext\tcontext.Context, string, string)"
	.size	.Lconst.8, 88

	.type	go..C16,@object
	.section	.rodata.go..C16,"a",@progbits
	.p2align	3
go..C16:
	.quad	.Lconst.8
	.quad	87
	.size	go..C16, 16

	.type	go..C17,@object
	.section	.data.go..C17,"aw",@progbits
	.p2align	4
go..C17:
	.quad	type...1command_line_arguments.Session
	.quad	context.Context..d
	.quad	string..d
	.quad	string..d
	.size	go..C17, 32

	.type	go..C18,@object
	.section	.bss.go..C18,"aw",@nobits
	.p2align	3
go..C18:
	.zero	8
	.size	go..C18, 8

	.type	.Lconst.9,@object
	.section	.rodata..Lconst.9,"a",@progbits
.Lconst.9:
	.asciz	"SendInternalError"
	.size	.Lconst.9, 18

	.type	go..C19,@object
	.section	.rodata.go..C19,"a",@progbits
	.p2align	3
go..C19:
	.quad	.Lconst.9
	.quad	17
	.size	go..C19, 16

	.type	type..func.8context.Context.9.8.9,@object
	.section	.rodata.type..func.8context.Context.9.8.9,"aG",@progbits,type..func.8context.Context.9.8.9,comdat
	.weak	type..func.8context.Context.9.8.9
	.p2align	4
type..func.8context.Context.9.8.9:
	.quad	8
	.quad	8
	.long	1315882344
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C20
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C21
	.quad	1
	.quad	1
	.quad	go..C22
	.quad	0
	.quad	0
	.size	type..func.8context.Context.9.8.9, 128

	.type	.Lconst.10,@object
	.section	.rodata..Lconst.10,"a",@progbits
.Lconst.10:
	.asciz	"func(\tcontext\tcontext.Context)"
	.size	.Lconst.10, 31

	.type	go..C20,@object
	.section	.rodata.go..C20,"a",@progbits
	.p2align	3
go..C20:
	.quad	.Lconst.10
	.quad	30
	.size	go..C20, 16

	.type	go..C21,@object
	.section	.data.go..C21,"aw",@progbits
	.p2align	3
go..C21:
	.quad	context.Context..d
	.size	go..C21, 8

	.type	go..C22,@object
	.section	.bss.go..C22,"aw",@nobits
	.p2align	3
go..C22:
	.zero	8
	.size	go..C22, 8

	.type	type..func.8.1command_line_arguments.Session.3context.Context.9.8.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.Session.3context.Context.9.8.9,"aG",@progbits,type..func.8.1command_line_arguments.Session.3context.Context.9.8.9,comdat
	.weak	type..func.8.1command_line_arguments.Session.3context.Context.9.8.9
	.p2align	4
type..func.8.1command_line_arguments.Session.3context.Context.9.8.9:
	.quad	8
	.quad	8
	.long	768146408
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C23
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C24
	.quad	2
	.quad	2
	.quad	go..C25
	.quad	0
	.quad	0
	.size	type..func.8.1command_line_arguments.Session.3context.Context.9.8.9, 128

	.type	.Lconst.11,@object
	.section	.rodata..Lconst.11,"a",@progbits
.Lconst.11:
	.asciz	"func(*\tcommand_line_arguments\tdaemon.Session, \tcontext\tcontext.Context)"
	.size	.Lconst.11, 72

	.type	go..C23,@object
	.section	.rodata.go..C23,"a",@progbits
	.p2align	3
go..C23:
	.quad	.Lconst.11
	.quad	71
	.size	go..C23, 16

	.type	go..C24,@object
	.section	.data.go..C24,"aw",@progbits
	.p2align	3
go..C24:
	.quad	type...1command_line_arguments.Session
	.quad	context.Context..d
	.size	go..C24, 16

	.type	go..C25,@object
	.section	.bss.go..C25,"aw",@nobits
	.p2align	3
go..C25:
	.zero	8
	.size	go..C25, 8

	.type	.Lconst.12,@object
	.section	.rodata..Lconst.12,"a",@progbits
.Lconst.12:
	.asciz	"TearDown"
	.size	.Lconst.12, 9

	.type	go..C26,@object
	.section	.rodata.go..C26,"a",@progbits
	.p2align	3
go..C26:
	.quad	.Lconst.12
	.quad	8
	.size	go..C26, 16

	.type	type..func.8.9.8.9,@object
	.section	.rodata.type..func.8.9.8.9,"aG",@progbits,type..func.8.9.8.9,comdat
	.weak	type..func.8.9.8.9
	.p2align	4
type..func.8.9.8.9:
	.quad	8
	.quad	8
	.long	8
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C27
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C28
	.quad	0
	.quad	0
	.quad	go..C29
	.quad	0
	.quad	0
	.size	type..func.8.9.8.9, 128

	.type	.Lconst.13,@object
	.section	.rodata..Lconst.13,"a",@progbits
.Lconst.13:
	.asciz	"func()"
	.size	.Lconst.13, 7

	.type	go..C27,@object
	.section	.rodata.go..C27,"a",@progbits
	.p2align	3
go..C27:
	.quad	.Lconst.13
	.quad	6
	.size	go..C27, 16

	.type	go..C28,@object
	.section	.bss.go..C28,"aw",@nobits
	.p2align	3
go..C28:
	.zero	8
	.size	go..C28, 8

	.type	go..C29,@object
	.section	.bss.go..C29,"aw",@nobits
	.p2align	3
go..C29:
	.zero	8
	.size	go..C29, 8

	.type	type..func.8.1command_line_arguments.Session.9.8.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.Session.9.8.9,"aG",@progbits,type..func.8.1command_line_arguments.Session.9.8.9,comdat
	.weak	type..func.8.1command_line_arguments.Session.9.8.9
	.p2align	4
type..func.8.1command_line_arguments.Session.9.8.9:
	.quad	8
	.quad	8
	.long	2431349032
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C30
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C31
	.quad	1
	.quad	1
	.quad	go..C32
	.quad	0
	.quad	0
	.size	type..func.8.1command_line_arguments.Session.9.8.9, 128

	.type	.Lconst.14,@object
	.section	.rodata..Lconst.14,"a",@progbits
.Lconst.14:
	.asciz	"func(*\tcommand_line_arguments\tdaemon.Session)"
	.size	.Lconst.14, 46

	.type	go..C30,@object
	.section	.rodata.go..C30,"a",@progbits
	.p2align	3
go..C30:
	.quad	.Lconst.14
	.quad	45
	.size	go..C30, 16

	.type	go..C31,@object
	.section	.data.go..C31,"aw",@progbits
	.p2align	3
go..C31:
	.quad	type...1command_line_arguments.Session
	.size	go..C31, 8

	.type	go..C32,@object
	.section	.bss.go..C32,"aw",@nobits
	.p2align	3
go..C32:
	.zero	8
	.size	go..C32, 8

	.type	.Lconst.15,@object
	.section	.rodata..Lconst.15,"a",@progbits
.Lconst.15:
	.asciz	"ToString"
	.size	.Lconst.15, 9

	.type	go..C33,@object
	.section	.rodata.go..C33,"a",@progbits
	.p2align	3
go..C33:
	.quad	.Lconst.15
	.quad	8
	.size	go..C33, 16

	.type	type..func.8.9.8string.9,@object
	.section	.rodata.type..func.8.9.8string.9,"aG",@progbits,type..func.8.9.8string.9,comdat
	.weak	type..func.8.9.8string.9
	.p2align	4
type..func.8.9.8string.9:
	.quad	8
	.quad	8
	.long	916039304
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C34
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C35
	.quad	0
	.quad	0
	.quad	go..C36
	.quad	1
	.quad	1
	.size	type..func.8.9.8string.9, 128

	.type	.Lconst.16,@object
	.section	.rodata..Lconst.16,"a",@progbits
.Lconst.16:
	.asciz	"func() string"
	.size	.Lconst.16, 14

	.type	go..C34,@object
	.section	.rodata.go..C34,"a",@progbits
	.p2align	3
go..C34:
	.quad	.Lconst.16
	.quad	13
	.size	go..C34, 16

	.type	go..C35,@object
	.section	.bss.go..C35,"aw",@nobits
	.p2align	3
go..C35:
	.zero	8
	.size	go..C35, 8

	.type	go..C36,@object
	.section	.data.go..C36,"aw",@progbits
	.p2align	3
go..C36:
	.quad	string..d
	.size	go..C36, 8

	.type	type..func.8.1command_line_arguments.Session.9.8string.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.Session.9.8string.9,"aG",@progbits,type..func.8.1command_line_arguments.Session.9.8string.9,comdat
	.weak	type..func.8.1command_line_arguments.Session.9.8string.9
	.p2align	4
type..func.8.1command_line_arguments.Session.9.8string.9:
	.quad	8
	.quad	8
	.long	3347388328
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C37
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C38
	.quad	1
	.quad	1
	.quad	go..C39
	.quad	1
	.quad	1
	.size	type..func.8.1command_line_arguments.Session.9.8string.9, 128

	.type	.Lconst.17,@object
	.section	.rodata..Lconst.17,"a",@progbits
.Lconst.17:
	.asciz	"func(*\tcommand_line_arguments\tdaemon.Session) string"
	.size	.Lconst.17, 53

	.type	go..C37,@object
	.section	.rodata.go..C37,"a",@progbits
	.p2align	3
go..C37:
	.quad	.Lconst.17
	.quad	52
	.size	go..C37, 16

	.type	go..C38,@object
	.section	.data.go..C38,"aw",@progbits
	.p2align	3
go..C38:
	.quad	type...1command_line_arguments.Session
	.size	go..C38, 8

	.type	go..C39,@object
	.section	.data.go..C39,"aw",@progbits
	.p2align	3
go..C39:
	.quad	string..d
	.size	go..C39, 8

	.type	go..C40,@object
	.section	.data.go..C40,"aw",@progbits
	.p2align	4
go..C40:
	.quad	go..C7
	.quad	0
	.quad	type..func.8context.Context.3string.3string.9.8.9
	.quad	type..func.8.1command_line_arguments.Session.3context.Context.3string.3string.9.8.9
	.quad	command_line_arguments.Session.SendError
	.quad	go..C19
	.quad	0
	.quad	type..func.8context.Context.9.8.9
	.quad	type..func.8.1command_line_arguments.Session.3context.Context.9.8.9
	.quad	command_line_arguments.Session.SendInternalError
	.quad	go..C26
	.quad	0
	.quad	type..func.8.9.8.9
	.quad	type..func.8.1command_line_arguments.Session.9.8.9
	.quad	command_line_arguments.Session.TearDown
	.quad	go..C33
	.quad	0
	.quad	type..func.8.9.8string.9
	.quad	type..func.8.1command_line_arguments.Session.9.8string.9
	.quad	command_line_arguments.Session.ToString
	.size	go..C40, 160

	.type	go..C41,@object
	.section	.rodata.go..C41,"a",@progbits
	.p2align	4
go..C41:
	.quad	0
	.quad	0
	.quad	go..C40
	.quad	4
	.quad	4
	.size	go..C41, 40

	.type	type...1.1command_line_arguments.Session,@object
	.section	.rodata.type...1.1command_line_arguments.Session,"aG",@progbits,type...1.1command_line_arguments.Session,comdat
	.weak	type...1.1command_line_arguments.Session
	.p2align	4
type...1.1command_line_arguments.Session:
	.quad	8
	.quad	8
	.long	3363158169
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C42
	.quad	0
	.quad	0
	.quad	type...1command_line_arguments.Session
	.size	type...1.1command_line_arguments.Session, 80

	.type	.Lconst.18,@object
	.section	.rodata..Lconst.18,"a",@progbits
.Lconst.18:
	.asciz	"**\tcommand_line_arguments\tdaemon.Session"
	.size	.Lconst.18, 41

	.type	go..C42,@object
	.section	.rodata.go..C42,"a",@progbits
	.p2align	3
go..C42:
	.quad	.Lconst.18
	.quad	40
	.size	go..C42, 16

	.type	.Lconst.19,@object
	.section	.rodata..Lconst.19,"a",@progbits
.Lconst.19:
	.asciz	"session"
	.size	.Lconst.19, 8

	.type	go..C43,@object
	.section	.rodata.go..C43,"a",@progbits
	.p2align	3
go..C43:
	.quad	.Lconst.19
	.quad	7
	.size	go..C43, 16

	.type	go..C44,@object
	.section	.rodata.go..C44,"a",@progbits
	.p2align	3
go..C44:
	.quad	.Lconst.2
	.quad	22
	.size	go..C44, 16

	.type	.Lconst.20,@object
	.section	.rodata..Lconst.20,"a",@progbits
.Lconst.20:
	.asciz	"warp"
	.size	.Lconst.20, 5

	.type	go..C45,@object
	.section	.rodata.go..C45,"a",@progbits
	.p2align	3
go..C45:
	.quad	.Lconst.20
	.quad	4
	.size	go..C45, 16

	.type	go..C46,@object
	.section	.rodata.go..C46,"a",@progbits
	.p2align	3
go..C46:
	.quad	.Lconst.2
	.quad	22
	.size	go..C46, 16

	.type	.Lconst.21,@object
	.section	.rodata..Lconst.21,"a",@progbits
.Lconst.21:
	.asciz	"sessionType"
	.size	.Lconst.21, 12

	.type	go..C47,@object
	.section	.rodata.go..C47,"a",@progbits
	.p2align	3
go..C47:
	.quad	.Lconst.21
	.quad	11
	.size	go..C47, 16

	.type	go..C48,@object
	.section	.rodata.go..C48,"a",@progbits
	.p2align	3
go..C48:
	.quad	.Lconst.2
	.quad	22
	.size	go..C48, 16

	.type	.Lconst.22,@object
	.section	.rodata..Lconst.22,"a",@progbits
.Lconst.22:
	.asciz	"username"
	.size	.Lconst.22, 9

	.type	go..C49,@object
	.section	.rodata.go..C49,"a",@progbits
	.p2align	3
go..C49:
	.quad	.Lconst.22
	.quad	8
	.size	go..C49, 16

	.type	go..C50,@object
	.section	.rodata.go..C50,"a",@progbits
	.p2align	3
go..C50:
	.quad	.Lconst.2
	.quad	22
	.size	go..C50, 16

	.type	.Lconst.23,@object
	.section	.rodata..Lconst.23,"a",@progbits
.Lconst.23:
	.asciz	"conn"
	.size	.Lconst.23, 5

	.type	go..C51,@object
	.section	.rodata.go..C51,"a",@progbits
	.p2align	3
go..C51:
	.quad	.Lconst.23
	.quad	4
	.size	go..C51, 16

	.type	go..C52,@object
	.section	.rodata.go..C52,"a",@progbits
	.p2align	3
go..C52:
	.quad	.Lconst.2
	.quad	22
	.size	go..C52, 16

	.type	.Lconst.24,@object
	.section	.rodata..Lconst.24,"a",@progbits
.Lconst.24:
	.asciz	"mux"
	.size	.Lconst.24, 4

	.type	go..C53,@object
	.section	.rodata.go..C53,"a",@progbits
	.p2align	3
go..C53:
	.quad	.Lconst.24
	.quad	3
	.size	go..C53, 16

	.type	go..C54,@object
	.section	.rodata.go..C54,"a",@progbits
	.p2align	3
go..C54:
	.quad	.Lconst.2
	.quad	22
	.size	go..C54, 16

	.type	.Lconst.25,@object
	.section	.rodata..Lconst.25,"a",@progbits
.Lconst.25:
	.asciz	"stateC"
	.size	.Lconst.25, 7

	.type	go..C55,@object
	.section	.rodata.go..C55,"a",@progbits
	.p2align	3
go..C55:
	.quad	.Lconst.25
	.quad	6
	.size	go..C55, 16

	.type	go..C56,@object
	.section	.rodata.go..C56,"a",@progbits
	.p2align	3
go..C56:
	.quad	.Lconst.2
	.quad	22
	.size	go..C56, 16

	.type	.Lconst.26,@object
	.section	.rodata..Lconst.26,"a",@progbits
.Lconst.26:
	.asciz	"stateW"
	.size	.Lconst.26, 7

	.type	go..C57,@object
	.section	.rodata.go..C57,"a",@progbits
	.p2align	3
go..C57:
	.quad	.Lconst.26
	.quad	6
	.size	go..C57, 16

	.type	go..C58,@object
	.section	.rodata.go..C58,"a",@progbits
	.p2align	3
go..C58:
	.quad	.Lconst.2
	.quad	22
	.size	go..C58, 16

	.type	.Lconst.27,@object
	.section	.rodata..Lconst.27,"a",@progbits
.Lconst.27:
	.asciz	"updateC"
	.size	.Lconst.27, 8

	.type	go..C59,@object
	.section	.rodata.go..C59,"a",@progbits
	.p2align	3
go..C59:
	.quad	.Lconst.27
	.quad	7
	.size	go..C59, 16

	.type	go..C60,@object
	.section	.rodata.go..C60,"a",@progbits
	.p2align	3
go..C60:
	.quad	.Lconst.2
	.quad	22
	.size	go..C60, 16

	.type	.Lconst.28,@object
	.section	.rodata..Lconst.28,"a",@progbits
.Lconst.28:
	.asciz	"updateR"
	.size	.Lconst.28, 8

	.type	go..C61,@object
	.section	.rodata.go..C61,"a",@progbits
	.p2align	3
go..C61:
	.quad	.Lconst.28
	.quad	7
	.size	go..C61, 16

	.type	go..C62,@object
	.section	.rodata.go..C62,"a",@progbits
	.p2align	3
go..C62:
	.quad	.Lconst.2
	.quad	22
	.size	go..C62, 16

	.type	.Lconst.29,@object
	.section	.rodata..Lconst.29,"a",@progbits
.Lconst.29:
	.asciz	"errorC"
	.size	.Lconst.29, 7

	.type	go..C63,@object
	.section	.rodata.go..C63,"a",@progbits
	.p2align	3
go..C63:
	.quad	.Lconst.29
	.quad	6
	.size	go..C63, 16

	.type	go..C64,@object
	.section	.rodata.go..C64,"a",@progbits
	.p2align	3
go..C64:
	.quad	.Lconst.2
	.quad	22
	.size	go..C64, 16

	.type	.Lconst.30,@object
	.section	.rodata..Lconst.30,"a",@progbits
.Lconst.30:
	.asciz	"errorW"
	.size	.Lconst.30, 7

	.type	go..C65,@object
	.section	.rodata.go..C65,"a",@progbits
	.p2align	3
go..C65:
	.quad	.Lconst.30
	.quad	6
	.size	go..C65, 16

	.type	go..C66,@object
	.section	.rodata.go..C66,"a",@progbits
	.p2align	3
go..C66:
	.quad	.Lconst.2
	.quad	22
	.size	go..C66, 16

	.type	.Lconst.31,@object
	.section	.rodata..Lconst.31,"a",@progbits
.Lconst.31:
	.asciz	"dataC"
	.size	.Lconst.31, 6

	.type	go..C67,@object
	.section	.rodata.go..C67,"a",@progbits
	.p2align	3
go..C67:
	.quad	.Lconst.31
	.quad	5
	.size	go..C67, 16

	.type	go..C68,@object
	.section	.rodata.go..C68,"a",@progbits
	.p2align	3
go..C68:
	.quad	.Lconst.2
	.quad	22
	.size	go..C68, 16

	.type	.Lconst.32,@object
	.section	.rodata..Lconst.32,"a",@progbits
.Lconst.32:
	.asciz	"tornDown"
	.size	.Lconst.32, 9

	.type	go..C69,@object
	.section	.rodata.go..C69,"a",@progbits
	.p2align	3
go..C69:
	.quad	.Lconst.32
	.quad	8
	.size	go..C69, 16

	.type	go..C70,@object
	.section	.rodata.go..C70,"a",@progbits
	.p2align	3
go..C70:
	.quad	.Lconst.2
	.quad	22
	.size	go..C70, 16

	.type	bool..d,@object
	.section	.rodata.bool..d,"aG",@progbits,bool..d,comdat
	.weak	bool..d
	.p2align	4
bool..d:
	.quad	1
	.quad	0
	.long	1537849745
	.byte	129
	.byte	1
	.byte	1
	.zero	1
	.quad	runtime.memhash8..f
	.quad	runtime.memequal8..f
	.quad	0
	.quad	go..C71
	.quad	go..C74
	.quad	type...1bool
	.size	bool..d, 72

	.type	.Lconst.33,@object
	.section	.rodata..Lconst.33,"a",@progbits
.Lconst.33:
	.asciz	"bool"
	.size	.Lconst.33, 5

	.type	go..C71,@object
	.section	.rodata.go..C71,"a",@progbits
	.p2align	3
go..C71:
	.quad	.Lconst.33
	.quad	4
	.size	go..C71, 16

	.type	go..C72,@object
	.section	.rodata.go..C72,"a",@progbits
	.p2align	3
go..C72:
	.quad	.Lconst.33
	.quad	4
	.size	go..C72, 16

	.type	go..C73,@object
	.section	.bss.go..C73,"aw",@nobits
	.p2align	4
go..C73:
	.zero	40
	.size	go..C73, 40

	.type	go..C74,@object
	.section	.rodata.go..C74,"a",@progbits
	.p2align	4
go..C74:
	.quad	go..C72
	.quad	0
	.quad	go..C73
	.quad	0
	.quad	0
	.size	go..C74, 40

	.type	type...1bool,@object
	.section	.rodata.type...1bool,"aG",@progbits,type...1bool,comdat
	.weak	type...1bool
	.p2align	4
type...1bool:
	.quad	8
	.quad	8
	.long	3130759449
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C75
	.quad	0
	.quad	0
	.quad	bool..d
	.size	type...1bool, 80

	.type	.Lconst.34,@object
	.section	.rodata..Lconst.34,"a",@progbits
.Lconst.34:
	.asciz	"*bool"
	.size	.Lconst.34, 6

	.type	go..C75,@object
	.section	.rodata.go..C75,"a",@progbits
	.p2align	3
go..C75:
	.quad	.Lconst.34
	.quad	5
	.size	go..C75, 16

	.type	.Lconst.35,@object
	.section	.rodata..Lconst.35,"a",@progbits
.Lconst.35:
	.asciz	"ctx"
	.size	.Lconst.35, 4

	.type	go..C76,@object
	.section	.rodata.go..C76,"a",@progbits
	.p2align	3
go..C76:
	.quad	.Lconst.35
	.quad	3
	.size	go..C76, 16

	.type	go..C77,@object
	.section	.rodata.go..C77,"a",@progbits
	.p2align	3
go..C77:
	.quad	.Lconst.2
	.quad	22
	.size	go..C77, 16

	.type	.Lconst.36,@object
	.section	.rodata..Lconst.36,"a",@progbits
.Lconst.36:
	.asciz	"cancel"
	.size	.Lconst.36, 7

	.type	go..C78,@object
	.section	.rodata.go..C78,"a",@progbits
	.p2align	3
go..C78:
	.quad	.Lconst.36
	.quad	6
	.size	go..C78, 16

	.type	go..C79,@object
	.section	.rodata.go..C79,"a",@progbits
	.p2align	3
go..C79:
	.quad	.Lconst.2
	.quad	22
	.size	go..C79, 16

	.type	.Lconst.37,@object
	.section	.rodata..Lconst.37,"a",@progbits
.Lconst.37:
	.asciz	"mutex"
	.size	.Lconst.37, 6

	.type	go..C80,@object
	.section	.rodata.go..C80,"a",@progbits
	.p2align	3
go..C80:
	.quad	.Lconst.37
	.quad	5
	.size	go..C80, 16

	.type	go..C81,@object
	.section	.rodata.go..C81,"a",@progbits
	.p2align	3
go..C81:
	.quad	.Lconst.2
	.quad	22
	.size	go..C81, 16

	.type	go..C82,@object
	.section	.data.go..C82,"aw",@progbits
	.p2align	4
go..C82:
	.quad	go..C43
	.quad	go..C44
	.quad	github_com_spolu_warp.Session..d
	.quad	0
	.quad	0
	.quad	go..C45
	.quad	go..C46
	.quad	string..d
	.quad	0
	.quad	96
	.quad	go..C47
	.quad	go..C48
	.quad	github_com_spolu_warp.SessionType..d
	.quad	0
	.quad	128
	.quad	go..C49
	.quad	go..C50
	.quad	string..d
	.quad	0
	.quad	160
	.quad	go..C51
	.quad	go..C52
	.quad	net.Conn..d
	.quad	0
	.quad	192
	.quad	go..C53
	.quad	go..C54
	.quad	type...1github_com_spolu_warp_vendor_github_com_hashicorp_yamux.Session
	.quad	0
	.quad	224
	.quad	go..C55
	.quad	go..C56
	.quad	net.Conn..d
	.quad	0
	.quad	240
	.quad	go..C57
	.quad	go..C58
	.quad	type...1encoding_gob.Encoder
	.quad	0
	.quad	272
	.quad	go..C59
	.quad	go..C60
	.quad	net.Conn..d
	.quad	0
	.quad	288
	.quad	go..C61
	.quad	go..C62
	.quad	type...1encoding_gob.Decoder
	.quad	0
	.quad	320
	.quad	go..C63
	.quad	go..C64
	.quad	net.Conn..d
	.quad	0
	.quad	336
	.quad	go..C65
	.quad	go..C66
	.quad	type...1encoding_gob.Encoder
	.quad	0
	.quad	368
	.quad	go..C67
	.quad	go..C68
	.quad	net.Conn..d
	.quad	0
	.quad	384
	.quad	go..C69
	.quad	go..C70
	.quad	bool..d
	.quad	0
	.quad	416
	.quad	go..C76
	.quad	go..C77
	.quad	context.Context..d
	.quad	0
	.quad	432
	.quad	go..C78
	.quad	go..C79
	.quad	type..func.8.9.8.9
	.quad	0
	.quad	464
	.quad	go..C80
	.quad	go..C81
	.quad	type...1sync.Mutex
	.quad	0
	.quad	480
	.size	go..C82, 680

	.type	.Lconst.39,@object
	.section	.rodata..Lconst.39,"a",@progbits
.Lconst.39:
	.asciz	"Mux error: %v"
	.size	.Lconst.39, 14

	.type	.Lconst.46,@object
	.section	.rodata..Lconst.46,"a",@progbits
.Lconst.46:
	.asciz	"State channel open error: %v"
	.size	.Lconst.46, 29

	.type	.Lconst.48,@object
	.section	.rodata..Lconst.48,"a",@progbits
.Lconst.48:
	.asciz	"Update channel open error: %v"
	.size	.Lconst.48, 30

	.type	.Lconst.50,@object
	.section	.rodata..Lconst.50,"a",@progbits
.Lconst.50:
	.asciz	"Initial client update error: %v"
	.size	.Lconst.50, 32

	.type	.Lconst.52,@object
	.section	.rodata..Lconst.52,"a",@progbits
.Lconst.52:
	.asciz	"Session hello received: session=%s type=%s username=%s"
	.size	.Lconst.52, 55

	.type	.Lconst.54,@object
	.section	.rodata..Lconst.54,"a",@progbits
.Lconst.54:
	.asciz	"Error channel open error: %v"
	.size	.Lconst.54, 29

	.type	.Lconst.56,@object
	.section	.rodata..Lconst.56,"a",@progbits
.Lconst.56:
	.asciz	"Data channel open error: %v"
	.size	.Lconst.56, 28

	.type	command_line_arguments.NewSession..f,@object
	.section	.rodata.command_line_arguments.NewSession..f,"a",@progbits
	.globl	command_line_arguments.NewSession..f
	.p2align	3
command_line_arguments.NewSession..f:
	.quad	command_line_arguments.NewSession
	.size	command_line_arguments.NewSession..f, 8

	.type	.Lconst.59,@object
	.section	.rodata..Lconst.59,"a",@progbits
.Lconst.59:
	.asciz	"%s/%s:%s"
	.size	.Lconst.59, 9

	.type	type..struct.4.4x.5.f.f.0.1.4void.5.2.command_line_arguments.ss1.0.1.1command_line_arguments.Session.5,@object
	.section	.rodata.type..struct.4.4x.5.f.f.0.1.4void.5.2.command_line_arguments.ss1.0.1.1command_line_arguments.Session.5,"aG",@progbits,type..struct.4.4x.5.f.f.0.1.4void.5.2.command_line_arguments.ss1.0.1.1command_line_arguments.Session.5,comdat
	.weak	type..struct.4.4x.5.f.f.0.1.4void.5.2.command_line_arguments.ss1.0.1.1command_line_arguments.Session.5
	.p2align	4
type..struct.4.4x.5.f.f.0.1.4void.5.2.command_line_arguments.ss1.0.1.1command_line_arguments.Session.5:
	.quad	16
	.quad	16
	.long	1135461988
	.byte	25
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..da
	.quad	go..C83
	.quad	0
	.quad	0
	.quad	go..C88
	.quad	2
	.quad	2
	.size	type..struct.4.4x.5.f.f.0.1.4void.5.2.command_line_arguments.ss1.0.1.1command_line_arguments.Session.5, 96

	.type	gcbits..da,@object
	.section	.rodata.gcbits..da,"aG",@progbits,gcbits..da,comdat
	.weak	gcbits..da
gcbits..da:
	.byte	3
	.size	gcbits..da, 1

	.type	.Lconst.62,@object
	.section	.rodata..Lconst.62,"a",@progbits
.Lconst.62:
	.asciz	"struct { f *; ss1 **\tcommand_line_arguments\tdaemon.Session }"
	.size	.Lconst.62, 61

	.type	go..C83,@object
	.section	.rodata.go..C83,"a",@progbits
	.p2align	3
go..C83:
	.quad	.Lconst.62
	.quad	60
	.size	go..C83, 16

	.type	.Lconst.63,@object
	.section	.rodata..Lconst.63,"a",@progbits
.Lconst.63:
	.asciz	"f"
	.size	.Lconst.63, 2

	.type	go..C84,@object
	.section	.rodata.go..C84,"a",@progbits
	.p2align	3
go..C84:
	.quad	.Lconst.63
	.quad	1
	.size	go..C84, 16

	.type	go..C85,@object
	.section	.rodata.go..C85,"a",@progbits
	.p2align	3
go..C85:
	.quad	.Lconst.63
	.quad	1
	.size	go..C85, 16

	.type	.Lconst.64,@object
	.section	.rodata..Lconst.64,"a",@progbits
.Lconst.64:
	.asciz	"ss1"
	.size	.Lconst.64, 4

	.type	go..C86,@object
	.section	.rodata.go..C86,"a",@progbits
	.p2align	3
go..C86:
	.quad	.Lconst.64
	.quad	3
	.size	go..C86, 16

	.type	go..C87,@object
	.section	.rodata.go..C87,"a",@progbits
	.p2align	3
go..C87:
	.quad	.Lconst.2
	.quad	22
	.size	go..C87, 16

	.type	go..C88,@object
	.section	.data.go..C88,"aw",@progbits
	.p2align	4
go..C88:
	.quad	go..C84
	.quad	go..C85
	.quad	unsafe.Pointer..d
	.quad	0
	.quad	0
	.quad	go..C86
	.quad	go..C87
	.quad	type...1.1command_line_arguments.Session
	.quad	0
	.quad	16
	.size	go..C88, 80

	.type	type..struct.4.4x.5fn.0func.8.9.8.9.5,@object
	.section	.rodata.type..struct.4.4x.5fn.0func.8.9.8.9.5,"aG",@progbits,type..struct.4.4x.5fn.0func.8.9.8.9.5,comdat
	.weak	type..struct.4.4x.5fn.0func.8.9.8.9.5
	.p2align	4
type..struct.4.4x.5fn.0func.8.9.8.9.5:
	.quad	8
	.quad	8
	.long	76
	.byte	25
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C89
	.quad	0
	.quad	0
	.quad	go..C91
	.quad	1
	.quad	1
	.size	type..struct.4.4x.5fn.0func.8.9.8.9.5, 96

	.type	.Lconst.65,@object
	.section	.rodata..Lconst.65,"a",@progbits
.Lconst.65:
	.asciz	"struct { fn func() }"
	.size	.Lconst.65, 21

	.type	go..C89,@object
	.section	.rodata.go..C89,"a",@progbits
	.p2align	3
go..C89:
	.quad	.Lconst.65
	.quad	20
	.size	go..C89, 16

	.type	.Lconst.66,@object
	.section	.rodata..Lconst.66,"a",@progbits
.Lconst.66:
	.asciz	"fn"
	.size	.Lconst.66, 3

	.type	go..C90,@object
	.section	.rodata.go..C90,"a",@progbits
	.p2align	3
go..C90:
	.quad	.Lconst.66
	.quad	2
	.size	go..C90, 16

	.type	go..C91,@object
	.section	.data.go..C91,"aw",@progbits
	.p2align	4
go..C91:
	.quad	go..C90
	.quad	0
	.quad	type..func.8.9.8.9
	.quad	0
	.quad	0
	.size	go..C91, 40

	.type	.Lconst.67,@object
	.section	.rodata..Lconst.67,"a",@progbits
.Lconst.67:
	.asciz	"Sending session error: session=%s code=%s message=%s"
	.size	.Lconst.67, 53

	.type	.Lconst.69,@object
	.section	.rodata..Lconst.69,"a",@progbits
.Lconst.69:
	.asciz	"Error sending session error: session=%s error=%v"
	.size	.Lconst.69, 49

	.type	.Lconst.71,@object
	.section	.rodata..Lconst.71,"a",@progbits
.Lconst.71:
	.asciz	"The warp experienced an internal error (session: %s)."
	.size	.Lconst.71, 54

	.type	.Lconst.73,@object
	.section	.rodata..Lconst.73,"a",@progbits
.Lconst.73:
	.asciz	"internal_error"
	.size	.Lconst.73, 15

	.type	command_line_arguments.Srv..d,@object
	.section	.rodata.command_line_arguments.Srv..d,"a",@progbits
	.globl	command_line_arguments.Srv..d
	.p2align	4
command_line_arguments.Srv..d:
	.quad	64
	.quad	64
	.long	1386503207
	.byte	25
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..wg
	.quad	go..C92
	.quad	go..C96
	.quad	type...1command_line_arguments.Srv
	.quad	go..C341
	.quad	5
	.quad	5
	.size	command_line_arguments.Srv..d, 96

	.type	gcbits..wg,@object
	.section	.rodata.gcbits..wg,"aG",@progbits,gcbits..wg,comdat
	.weak	gcbits..wg
gcbits..wg:
	.byte	213
	.size	gcbits..wg, 1

	.type	.Lconst.75,@object
	.section	.rodata..Lconst.75,"a",@progbits
.Lconst.75:
	.asciz	"\tcommand_line_arguments\tdaemon.Srv"
	.size	.Lconst.75, 35

	.type	go..C92,@object
	.section	.rodata.go..C92,"a",@progbits
	.p2align	3
go..C92:
	.quad	.Lconst.75
	.quad	34
	.size	go..C92, 16

	.type	.Lconst.76,@object
	.section	.rodata..Lconst.76,"a",@progbits
.Lconst.76:
	.asciz	"Srv"
	.size	.Lconst.76, 4

	.type	go..C93,@object
	.section	.rodata.go..C93,"a",@progbits
	.p2align	3
go..C93:
	.quad	.Lconst.76
	.quad	3
	.size	go..C93, 16

	.type	go..C94,@object
	.section	.rodata.go..C94,"a",@progbits
	.p2align	3
go..C94:
	.quad	.Lconst.2
	.quad	22
	.size	go..C94, 16

	.type	go..C95,@object
	.section	.bss.go..C95,"aw",@nobits
	.p2align	4
go..C95:
	.zero	40
	.size	go..C95, 40

	.type	go..C96,@object
	.section	.rodata.go..C96,"a",@progbits
	.p2align	4
go..C96:
	.quad	go..C93
	.quad	go..C94
	.quad	go..C95
	.quad	0
	.quad	0
	.size	go..C96, 40

	.type	type...1command_line_arguments.Srv,@object
	.section	.rodata.type...1command_line_arguments.Srv,"aG",@progbits,type...1command_line_arguments.Srv,comdat
	.weak	type...1command_line_arguments.Srv
	.p2align	4
type...1command_line_arguments.Srv:
	.quad	8
	.quad	8
	.long	709214841
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C97
	.quad	go..C131
	.quad	type...1.1command_line_arguments.Srv
	.quad	command_line_arguments.Srv..d
	.size	type...1command_line_arguments.Srv, 80

	.type	.Lconst.77,@object
	.section	.rodata..Lconst.77,"a",@progbits
.Lconst.77:
	.asciz	"*\tcommand_line_arguments\tdaemon.Srv"
	.size	.Lconst.77, 36

	.type	go..C97,@object
	.section	.rodata.go..C97,"a",@progbits
	.p2align	3
go..C97:
	.quad	.Lconst.77
	.quad	35
	.size	go..C97, 16

	.type	.Lconst.78,@object
	.section	.rodata..Lconst.78,"a",@progbits
.Lconst.78:
	.asciz	"Run"
	.size	.Lconst.78, 4

	.type	go..C98,@object
	.section	.rodata.go..C98,"a",@progbits
	.p2align	3
go..C98:
	.quad	.Lconst.78
	.quad	3
	.size	go..C98, 16

	.type	type..func.8context.Context.9.8error.9,@object
	.section	.rodata.type..func.8context.Context.9.8error.9,"aG",@progbits,type..func.8context.Context.9.8error.9,comdat
	.weak	type..func.8context.Context.9.8error.9
	.p2align	4
type..func.8context.Context.9.8error.9:
	.quad	8
	.quad	8
	.long	2504620840
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C99
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C100
	.quad	1
	.quad	1
	.quad	go..C108
	.quad	1
	.quad	1
	.size	type..func.8context.Context.9.8error.9, 128

	.type	.Lconst.79,@object
	.section	.rodata..Lconst.79,"a",@progbits
.Lconst.79:
	.asciz	"func(\tcontext\tcontext.Context) error"
	.size	.Lconst.79, 37

	.type	go..C99,@object
	.section	.rodata.go..C99,"a",@progbits
	.p2align	3
go..C99:
	.quad	.Lconst.79
	.quad	36
	.size	go..C99, 16

	.type	go..C100,@object
	.section	.data.go..C100,"aw",@progbits
	.p2align	3
go..C100:
	.quad	context.Context..d
	.size	go..C100, 8

	.type	error..d,@object
	.section	.rodata.error..d,"aG",@progbits,error..d,comdat
	.weak	error..d
	.p2align	4
error..d:
	.quad	16
	.quad	16
	.long	2166057687
	.byte	20
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.interhash..f
	.quad	runtime.interequal..f
	.quad	gcbits..da
	.quad	go..C101
	.quad	go..C104
	.quad	type...1error
	.quad	go..C107
	.quad	1
	.quad	1
	.size	error..d, 96

	.type	.Lconst.80,@object
	.section	.rodata..Lconst.80,"a",@progbits
.Lconst.80:
	.asciz	"error"
	.size	.Lconst.80, 6

	.type	go..C101,@object
	.section	.rodata.go..C101,"a",@progbits
	.p2align	3
go..C101:
	.quad	.Lconst.80
	.quad	5
	.size	go..C101, 16

	.type	go..C102,@object
	.section	.rodata.go..C102,"a",@progbits
	.p2align	3
go..C102:
	.quad	.Lconst.80
	.quad	5
	.size	go..C102, 16

	.type	go..C103,@object
	.section	.bss.go..C103,"aw",@nobits
	.p2align	4
go..C103:
	.zero	40
	.size	go..C103, 40

	.type	go..C104,@object
	.section	.rodata.go..C104,"a",@progbits
	.p2align	4
go..C104:
	.quad	go..C102
	.quad	0
	.quad	go..C103
	.quad	0
	.quad	0
	.size	go..C104, 40

	.type	type...1error,@object
	.section	.rodata.type...1error,"aG",@progbits,type...1error,comdat
	.weak	type...1error
	.p2align	4
type...1error:
	.quad	8
	.quad	8
	.long	297184633
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C105
	.quad	0
	.quad	0
	.quad	error..d
	.size	type...1error, 80

	.type	.Lconst.81,@object
	.section	.rodata..Lconst.81,"a",@progbits
.Lconst.81:
	.asciz	"*error"
	.size	.Lconst.81, 7

	.type	go..C105,@object
	.section	.rodata.go..C105,"a",@progbits
	.p2align	3
go..C105:
	.quad	.Lconst.81
	.quad	6
	.size	go..C105, 16

	.type	.Lconst.82,@object
	.section	.rodata..Lconst.82,"a",@progbits
.Lconst.82:
	.asciz	"Error"
	.size	.Lconst.82, 6

	.type	go..C106,@object
	.section	.rodata.go..C106,"a",@progbits
	.p2align	3
go..C106:
	.quad	.Lconst.82
	.quad	5
	.size	go..C106, 16

	.type	go..C107,@object
	.section	.data.go..C107,"aw",@progbits
	.p2align	4
go..C107:
	.quad	go..C106
	.quad	0
	.quad	type..func.8.9.8string.9
	.size	go..C107, 24

	.type	go..C108,@object
	.section	.data.go..C108,"aw",@progbits
	.p2align	3
go..C108:
	.quad	error..d
	.size	go..C108, 8

	.type	type..func.8.1command_line_arguments.Srv.3context.Context.9.8error.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.Srv.3context.Context.9.8error.9,"aG",@progbits,type..func.8.1command_line_arguments.Srv.3context.Context.9.8error.9,comdat
	.weak	type..func.8.1command_line_arguments.Srv.3context.Context.9.8error.9
	.p2align	4
type..func.8.1command_line_arguments.Srv.3context.Context.9.8error.9:
	.quad	8
	.quad	8
	.long	745574312
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C109
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C110
	.quad	2
	.quad	2
	.quad	go..C111
	.quad	1
	.quad	1
	.size	type..func.8.1command_line_arguments.Srv.3context.Context.9.8error.9, 128

	.type	.Lconst.83,@object
	.section	.rodata..Lconst.83,"a",@progbits
.Lconst.83:
	.asciz	"func(*\tcommand_line_arguments\tdaemon.Srv, \tcontext\tcontext.Context) error"
	.size	.Lconst.83, 74

	.type	go..C109,@object
	.section	.rodata.go..C109,"a",@progbits
	.p2align	3
go..C109:
	.quad	.Lconst.83
	.quad	73
	.size	go..C109, 16

	.type	go..C110,@object
	.section	.data.go..C110,"aw",@progbits
	.p2align	3
go..C110:
	.quad	type...1command_line_arguments.Srv
	.quad	context.Context..d
	.size	go..C110, 16

	.type	go..C111,@object
	.section	.data.go..C111,"aw",@progbits
	.p2align	3
go..C111:
	.quad	error..d
	.size	go..C111, 8

	.type	.Lconst.84,@object
	.section	.rodata..Lconst.84,"a",@progbits
.Lconst.84:
	.asciz	"handle"
	.size	.Lconst.84, 7

	.type	go..C112,@object
	.section	.rodata.go..C112,"a",@progbits
	.p2align	3
go..C112:
	.quad	.Lconst.84
	.quad	6
	.size	go..C112, 16

	.type	go..C113,@object
	.section	.rodata.go..C113,"a",@progbits
	.p2align	3
go..C113:
	.quad	.Lconst.2
	.quad	22
	.size	go..C113, 16

	.type	type..func.8context.Context.3net.Conn.9.8error.9,@object
	.section	.rodata.type..func.8context.Context.3net.Conn.9.8error.9,"aG",@progbits,type..func.8context.Context.3net.Conn.9.8error.9,comdat
	.weak	type..func.8context.Context.3net.Conn.9.8error.9
	.p2align	4
type..func.8context.Context.3net.Conn.9.8error.9:
	.quad	8
	.quad	8
	.long	718280616
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C114
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C115
	.quad	2
	.quad	2
	.quad	go..C116
	.quad	1
	.quad	1
	.size	type..func.8context.Context.3net.Conn.9.8error.9, 128

	.type	.Lconst.85,@object
	.section	.rodata..Lconst.85,"a",@progbits
.Lconst.85:
	.asciz	"func(\tcontext\tcontext.Context, \tnet\tnet.Conn) error"
	.size	.Lconst.85, 52

	.type	go..C114,@object
	.section	.rodata.go..C114,"a",@progbits
	.p2align	3
go..C114:
	.quad	.Lconst.85
	.quad	51
	.size	go..C114, 16

	.type	go..C115,@object
	.section	.data.go..C115,"aw",@progbits
	.p2align	3
go..C115:
	.quad	context.Context..d
	.quad	net.Conn..d
	.size	go..C115, 16

	.type	go..C116,@object
	.section	.data.go..C116,"aw",@progbits
	.p2align	3
go..C116:
	.quad	error..d
	.size	go..C116, 8

	.type	type..func.8.1command_line_arguments.Srv.3context.Context.3net.Conn.9.8error.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.Srv.3context.Context.3net.Conn.9.8error.9,"aG",@progbits,type..func.8.1command_line_arguments.Srv.3context.Context.3net.Conn.9.8error.9,comdat
	.weak	type..func.8.1command_line_arguments.Srv.3context.Context.3net.Conn.9.8error.9
	.p2align	4
type..func.8.1command_line_arguments.Srv.3context.Context.3net.Conn.9.8error.9:
	.quad	8
	.quad	8
	.long	1467861160
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C117
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C118
	.quad	3
	.quad	3
	.quad	go..C119
	.quad	1
	.quad	1
	.size	type..func.8.1command_line_arguments.Srv.3context.Context.3net.Conn.9.8error.9, 128

	.type	.Lconst.86,@object
	.section	.rodata..Lconst.86,"a",@progbits
.Lconst.86:
	.asciz	"func(*\tcommand_line_arguments\tdaemon.Srv, \tcontext\tcontext.Context, \tnet\tnet.Conn) error"
	.size	.Lconst.86, 89

	.type	go..C117,@object
	.section	.rodata.go..C117,"a",@progbits
	.p2align	3
go..C117:
	.quad	.Lconst.86
	.quad	88
	.size	go..C117, 16

	.type	go..C118,@object
	.section	.data.go..C118,"aw",@progbits
	.p2align	4
go..C118:
	.quad	type...1command_line_arguments.Srv
	.quad	context.Context..d
	.quad	net.Conn..d
	.size	go..C118, 24

	.type	go..C119,@object
	.section	.data.go..C119,"aw",@progbits
	.p2align	3
go..C119:
	.quad	error..d
	.size	go..C119, 8

	.type	.Lconst.87,@object
	.section	.rodata..Lconst.87,"a",@progbits
.Lconst.87:
	.asciz	"handleHost"
	.size	.Lconst.87, 11

	.type	go..C120,@object
	.section	.rodata.go..C120,"a",@progbits
	.p2align	3
go..C120:
	.quad	.Lconst.87
	.quad	10
	.size	go..C120, 16

	.type	go..C121,@object
	.section	.rodata.go..C121,"a",@progbits
	.p2align	3
go..C121:
	.quad	.Lconst.2
	.quad	22
	.size	go..C121, 16

	.type	type..func.8context.Context.3.1command_line_arguments.Session.9.8error.9,@object
	.section	.rodata.type..func.8context.Context.3.1command_line_arguments.Session.9.8error.9,"aG",@progbits,type..func.8context.Context.3.1command_line_arguments.Session.9.8error.9,comdat
	.weak	type..func.8context.Context.3.1command_line_arguments.Session.9.8error.9
	.p2align	4
type..func.8context.Context.3.1command_line_arguments.Session.9.8error.9:
	.quad	8
	.quad	8
	.long	3072351592
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C122
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C123
	.quad	2
	.quad	2
	.quad	go..C124
	.quad	1
	.quad	1
	.size	type..func.8context.Context.3.1command_line_arguments.Session.9.8error.9, 128

	.type	.Lconst.88,@object
	.section	.rodata..Lconst.88,"a",@progbits
.Lconst.88:
	.asciz	"func(\tcontext\tcontext.Context, *\tcommand_line_arguments\tdaemon.Session) error"
	.size	.Lconst.88, 78

	.type	go..C122,@object
	.section	.rodata.go..C122,"a",@progbits
	.p2align	3
go..C122:
	.quad	.Lconst.88
	.quad	77
	.size	go..C122, 16

	.type	go..C123,@object
	.section	.data.go..C123,"aw",@progbits
	.p2align	3
go..C123:
	.quad	context.Context..d
	.quad	type...1command_line_arguments.Session
	.size	go..C123, 16

	.type	go..C124,@object
	.section	.data.go..C124,"aw",@progbits
	.p2align	3
go..C124:
	.quad	error..d
	.size	go..C124, 8

	.type	type..func.8.1command_line_arguments.Srv.3context.Context.3.1command_line_arguments.Session.9.8error.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.Srv.3context.Context.3.1command_line_arguments.Session.9.8error.9,"aG",@progbits,type..func.8.1command_line_arguments.Srv.3context.Context.3.1command_line_arguments.Session.9.8error.9,comdat
	.weak	type..func.8.1command_line_arguments.Srv.3context.Context.3.1command_line_arguments.Session.9.8error.9
	.p2align	4
type..func.8.1command_line_arguments.Srv.3context.Context.3.1command_line_arguments.Session.9.8error.9:
	.quad	8
	.quad	8
	.long	1881035816
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C125
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C126
	.quad	3
	.quad	3
	.quad	go..C127
	.quad	1
	.quad	1
	.size	type..func.8.1command_line_arguments.Srv.3context.Context.3.1command_line_arguments.Session.9.8error.9, 128

	.type	.Lconst.89,@object
	.section	.rodata..Lconst.89,"a",@progbits
.Lconst.89:
	.asciz	"func(*\tcommand_line_arguments\tdaemon.Srv, \tcontext\tcontext.Context, *\tcommand_line_arguments\tdaemon.Session) error"
	.size	.Lconst.89, 115

	.type	go..C125,@object
	.section	.rodata.go..C125,"a",@progbits
	.p2align	3
go..C125:
	.quad	.Lconst.89
	.quad	114
	.size	go..C125, 16

	.type	go..C126,@object
	.section	.data.go..C126,"aw",@progbits
	.p2align	4
go..C126:
	.quad	type...1command_line_arguments.Srv
	.quad	context.Context..d
	.quad	type...1command_line_arguments.Session
	.size	go..C126, 24

	.type	go..C127,@object
	.section	.data.go..C127,"aw",@progbits
	.p2align	3
go..C127:
	.quad	error..d
	.size	go..C127, 8

	.type	.Lconst.90,@object
	.section	.rodata..Lconst.90,"a",@progbits
.Lconst.90:
	.asciz	"handleShellClient"
	.size	.Lconst.90, 18

	.type	go..C128,@object
	.section	.rodata.go..C128,"a",@progbits
	.p2align	3
go..C128:
	.quad	.Lconst.90
	.quad	17
	.size	go..C128, 16

	.type	go..C129,@object
	.section	.rodata.go..C129,"a",@progbits
	.p2align	3
go..C129:
	.quad	.Lconst.2
	.quad	22
	.size	go..C129, 16

	.type	go..C130,@object
	.section	.data.go..C130,"aw",@progbits
	.p2align	4
go..C130:
	.quad	go..C98
	.quad	0
	.quad	type..func.8context.Context.9.8error.9
	.quad	type..func.8.1command_line_arguments.Srv.3context.Context.9.8error.9
	.quad	command_line_arguments.Srv.Run
	.quad	go..C112
	.quad	go..C113
	.quad	type..func.8context.Context.3net.Conn.9.8error.9
	.quad	type..func.8.1command_line_arguments.Srv.3context.Context.3net.Conn.9.8error.9
	.quad	command_line_arguments.Srv.handle
	.quad	go..C120
	.quad	go..C121
	.quad	type..func.8context.Context.3.1command_line_arguments.Session.9.8error.9
	.quad	type..func.8.1command_line_arguments.Srv.3context.Context.3.1command_line_arguments.Session.9.8error.9
	.quad	command_line_arguments.Srv.handleHost
	.quad	go..C128
	.quad	go..C129
	.quad	type..func.8context.Context.3.1command_line_arguments.Session.9.8error.9
	.quad	type..func.8.1command_line_arguments.Srv.3context.Context.3.1command_line_arguments.Session.9.8error.9
	.quad	command_line_arguments.Srv.handleShellClient
	.size	go..C130, 160

	.type	go..C131,@object
	.section	.rodata.go..C131,"a",@progbits
	.p2align	4
go..C131:
	.quad	0
	.quad	0
	.quad	go..C130
	.quad	4
	.quad	4
	.size	go..C131, 40

	.type	type...1.1command_line_arguments.Srv,@object
	.section	.rodata.type...1.1command_line_arguments.Srv,"aG",@progbits,type...1.1command_line_arguments.Srv,comdat
	.weak	type...1.1command_line_arguments.Srv
	.p2align	4
type...1.1command_line_arguments.Srv:
	.quad	8
	.quad	8
	.long	2757502873
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C132
	.quad	0
	.quad	0
	.quad	type...1command_line_arguments.Srv
	.size	type...1.1command_line_arguments.Srv, 80

	.type	.Lconst.91,@object
	.section	.rodata..Lconst.91,"a",@progbits
.Lconst.91:
	.asciz	"**\tcommand_line_arguments\tdaemon.Srv"
	.size	.Lconst.91, 37

	.type	go..C132,@object
	.section	.rodata.go..C132,"a",@progbits
	.p2align	3
go..C132:
	.quad	.Lconst.91
	.quad	36
	.size	go..C132, 16

	.type	.Lconst.92,@object
	.section	.rodata..Lconst.92,"a",@progbits
.Lconst.92:
	.asciz	"address"
	.size	.Lconst.92, 8

	.type	go..C133,@object
	.section	.rodata.go..C133,"a",@progbits
	.p2align	3
go..C133:
	.quad	.Lconst.92
	.quad	7
	.size	go..C133, 16

	.type	go..C134,@object
	.section	.rodata.go..C134,"a",@progbits
	.p2align	3
go..C134:
	.quad	.Lconst.2
	.quad	22
	.size	go..C134, 16

	.type	.Lconst.93,@object
	.section	.rodata..Lconst.93,"a",@progbits
.Lconst.93:
	.asciz	"certFile"
	.size	.Lconst.93, 9

	.type	go..C135,@object
	.section	.rodata.go..C135,"a",@progbits
	.p2align	3
go..C135:
	.quad	.Lconst.93
	.quad	8
	.size	go..C135, 16

	.type	go..C136,@object
	.section	.rodata.go..C136,"a",@progbits
	.p2align	3
go..C136:
	.quad	.Lconst.2
	.quad	22
	.size	go..C136, 16

	.type	.Lconst.94,@object
	.section	.rodata..Lconst.94,"a",@progbits
.Lconst.94:
	.asciz	"keyFile"
	.size	.Lconst.94, 8

	.type	go..C137,@object
	.section	.rodata.go..C137,"a",@progbits
	.p2align	3
go..C137:
	.quad	.Lconst.94
	.quad	7
	.size	go..C137, 16

	.type	go..C138,@object
	.section	.rodata.go..C138,"a",@progbits
	.p2align	3
go..C138:
	.quad	.Lconst.2
	.quad	22
	.size	go..C138, 16

	.type	.Lconst.95,@object
	.section	.rodata..Lconst.95,"a",@progbits
.Lconst.95:
	.asciz	"warps"
	.size	.Lconst.95, 6

	.type	go..C139,@object
	.section	.rodata.go..C139,"a",@progbits
	.p2align	3
go..C139:
	.quad	.Lconst.95
	.quad	5
	.size	go..C139, 16

	.type	go..C140,@object
	.section	.rodata.go..C140,"a",@progbits
	.p2align	3
go..C140:
	.quad	.Lconst.2
	.quad	22
	.size	go..C140, 16

	.type	type..map.6string.7.1command_line_arguments.Warp,@object
	.section	.rodata.type..map.6string.7.1command_line_arguments.Warp,"aG",@progbits,type..map.6string.7.1command_line_arguments.Warp,comdat
	.weak	type..map.6string.7.1command_line_arguments.Warp
	.p2align	4
type..map.6string.7.1command_line_arguments.Warp:
	.quad	8
	.quad	8
	.long	1003805267
	.byte	21
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C141
	.quad	0
	.quad	0
	.quad	string..d
	.quad	type...1command_line_arguments.Warp
	.quad	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Warp.2overflow.0.1.4void.5.5
	.quad	type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Warp.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Warp.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5
	.byte	16
	.byte	0
	.byte	8
	.byte	0
	.short	208
	.byte	1
	.byte	1
	.size	type..map.6string.7.1command_line_arguments.Warp, 112

	.type	.Lconst.96,@object
	.section	.rodata..Lconst.96,"a",@progbits
.Lconst.96:
	.asciz	"map[string]*\tcommand_line_arguments\tdaemon.Warp"
	.size	.Lconst.96, 48

	.type	go..C141,@object
	.section	.rodata.go..C141,"a",@progbits
	.p2align	3
go..C141:
	.quad	.Lconst.96
	.quad	47
	.size	go..C141, 16

	.type	type...1command_line_arguments.Warp,@object
	.section	.rodata.type...1command_line_arguments.Warp,"aG",@progbits,type...1command_line_arguments.Warp,comdat
	.weak	type...1command_line_arguments.Warp
	.p2align	4
type...1command_line_arguments.Warp:
	.quad	8
	.quad	8
	.long	3002758057
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C142
	.quad	go..C192
	.quad	type...1.1command_line_arguments.Warp
	.quad	command_line_arguments.Warp..d
	.size	type...1command_line_arguments.Warp, 80

	.type	.Lconst.97,@object
	.section	.rodata..Lconst.97,"a",@progbits
.Lconst.97:
	.asciz	"*\tcommand_line_arguments\tdaemon.Warp"
	.size	.Lconst.97, 37

	.type	go..C142,@object
	.section	.rodata.go..C142,"a",@progbits
	.p2align	3
go..C142:
	.quad	.Lconst.97
	.quad	36
	.size	go..C142, 16

	.type	.Lconst.98,@object
	.section	.rodata..Lconst.98,"a",@progbits
.Lconst.98:
	.asciz	"CientSessions"
	.size	.Lconst.98, 14

	.type	go..C143,@object
	.section	.rodata.go..C143,"a",@progbits
	.p2align	3
go..C143:
	.quad	.Lconst.98
	.quad	13
	.size	go..C143, 16

	.type	type..func.8context.Context.9.8.6.7.1command_line_arguments.Session.9,@object
	.section	.rodata.type..func.8context.Context.9.8.6.7.1command_line_arguments.Session.9,"aG",@progbits,type..func.8context.Context.9.8.6.7.1command_line_arguments.Session.9,comdat
	.weak	type..func.8context.Context.9.8.6.7.1command_line_arguments.Session.9
	.p2align	4
type..func.8context.Context.9.8.6.7.1command_line_arguments.Session.9:
	.quad	8
	.quad	8
	.long	1883613992
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C144
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C145
	.quad	1
	.quad	1
	.quad	go..C147
	.quad	1
	.quad	1
	.size	type..func.8context.Context.9.8.6.7.1command_line_arguments.Session.9, 128

	.type	.Lconst.99,@object
	.section	.rodata..Lconst.99,"a",@progbits
.Lconst.99:
	.asciz	"func(\tcontext\tcontext.Context) []*\tcommand_line_arguments\tdaemon.Session"
	.size	.Lconst.99, 73

	.type	go..C144,@object
	.section	.rodata.go..C144,"a",@progbits
	.p2align	3
go..C144:
	.quad	.Lconst.99
	.quad	72
	.size	go..C144, 16

	.type	go..C145,@object
	.section	.data.go..C145,"aw",@progbits
	.p2align	3
go..C145:
	.quad	context.Context..d
	.size	go..C145, 8

	.type	type...6.7.1command_line_arguments.Session,@object
	.section	.rodata.type...6.7.1command_line_arguments.Session,"aG",@progbits,type...6.7.1command_line_arguments.Session,comdat
	.weak	type...6.7.1command_line_arguments.Session
	.p2align	4
type...6.7.1command_line_arguments.Session:
	.quad	24
	.quad	8
	.long	3162987415
	.byte	23
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C146
	.quad	0
	.quad	0
	.quad	type...1command_line_arguments.Session
	.size	type...6.7.1command_line_arguments.Session, 80

	.type	.Lconst.100,@object
	.section	.rodata..Lconst.100,"a",@progbits
.Lconst.100:
	.asciz	"[]*\tcommand_line_arguments\tdaemon.Session"
	.size	.Lconst.100, 42

	.type	go..C146,@object
	.section	.rodata.go..C146,"a",@progbits
	.p2align	3
go..C146:
	.quad	.Lconst.100
	.quad	41
	.size	go..C146, 16

	.type	go..C147,@object
	.section	.data.go..C147,"aw",@progbits
	.p2align	3
go..C147:
	.quad	type...6.7.1command_line_arguments.Session
	.size	go..C147, 8

	.type	type..func.8.1command_line_arguments.Warp.3context.Context.9.8.6.7.1command_line_arguments.Session.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.Warp.3context.Context.9.8.6.7.1command_line_arguments.Session.9,"aG",@progbits,type..func.8.1command_line_arguments.Warp.3context.Context.9.8.6.7.1command_line_arguments.Session.9,comdat
	.weak	type..func.8.1command_line_arguments.Warp.3context.Context.9.8.6.7.1command_line_arguments.Session.9
	.p2align	4
type..func.8.1command_line_arguments.Warp.3context.Context.9.8.6.7.1command_line_arguments.Session.9:
	.quad	8
	.quad	8
	.long	503506344
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C148
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C149
	.quad	2
	.quad	2
	.quad	go..C150
	.quad	1
	.quad	1
	.size	type..func.8.1command_line_arguments.Warp.3context.Context.9.8.6.7.1command_line_arguments.Session.9, 128

	.type	.Lconst.101,@object
	.section	.rodata..Lconst.101,"a",@progbits
.Lconst.101:
	.asciz	"func(*\tcommand_line_arguments\tdaemon.Warp, \tcontext\tcontext.Context) []*\tcommand_line_arguments\tdaemon.Session"
	.size	.Lconst.101, 111

	.type	go..C148,@object
	.section	.rodata.go..C148,"a",@progbits
	.p2align	3
go..C148:
	.quad	.Lconst.101
	.quad	110
	.size	go..C148, 16

	.type	go..C149,@object
	.section	.data.go..C149,"aw",@progbits
	.p2align	3
go..C149:
	.quad	type...1command_line_arguments.Warp
	.quad	context.Context..d
	.size	go..C149, 16

	.type	go..C150,@object
	.section	.data.go..C150,"aw",@progbits
	.p2align	3
go..C150:
	.quad	type...6.7.1command_line_arguments.Session
	.size	go..C150, 8

	.type	.Lconst.102,@object
	.section	.rodata..Lconst.102,"a",@progbits
.Lconst.102:
	.asciz	"State"
	.size	.Lconst.102, 6

	.type	go..C151,@object
	.section	.rodata.go..C151,"a",@progbits
	.p2align	3
go..C151:
	.quad	.Lconst.102
	.quad	5
	.size	go..C151, 16

	.type	type..func.8context.Context.9.8github_com_spolu_warp.State.9,@object
	.section	.rodata.type..func.8context.Context.9.8github_com_spolu_warp.State.9,"aG",@progbits,type..func.8context.Context.9.8github_com_spolu_warp.State.9,comdat
	.weak	type..func.8context.Context.9.8github_com_spolu_warp.State.9
	.p2align	4
type..func.8context.Context.9.8github_com_spolu_warp.State.9:
	.quad	8
	.quad	8
	.long	3778968232
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C152
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C153
	.quad	1
	.quad	1
	.quad	go..C154
	.quad	1
	.quad	1
	.size	type..func.8context.Context.9.8github_com_spolu_warp.State.9, 128

	.type	.Lconst.103,@object
	.section	.rodata..Lconst.103,"a",@progbits
.Lconst.103:
	.asciz	"func(\tcontext\tcontext.Context) \tgithub_com_spolu_warp\twarp.State"
	.size	.Lconst.103, 65

	.type	go..C152,@object
	.section	.rodata.go..C152,"a",@progbits
	.p2align	3
go..C152:
	.quad	.Lconst.103
	.quad	64
	.size	go..C152, 16

	.type	go..C153,@object
	.section	.data.go..C153,"aw",@progbits
	.p2align	3
go..C153:
	.quad	context.Context..d
	.size	go..C153, 8

	.type	go..C154,@object
	.section	.data.go..C154,"aw",@progbits
	.p2align	3
go..C154:
	.quad	github_com_spolu_warp.State..d
	.size	go..C154, 8

	.type	type..func.8.1command_line_arguments.Warp.3context.Context.9.8github_com_spolu_warp.State.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.Warp.3context.Context.9.8github_com_spolu_warp.State.9,"aG",@progbits,type..func.8.1command_line_arguments.Warp.3context.Context.9.8github_com_spolu_warp.State.9,comdat
	.weak	type..func.8.1command_line_arguments.Warp.3context.Context.9.8github_com_spolu_warp.State.9
	.p2align	4
type..func.8.1command_line_arguments.Warp.3context.Context.9.8github_com_spolu_warp.State.9:
	.quad	8
	.quad	8
	.long	2398860584
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C155
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C156
	.quad	2
	.quad	2
	.quad	go..C157
	.quad	1
	.quad	1
	.size	type..func.8.1command_line_arguments.Warp.3context.Context.9.8github_com_spolu_warp.State.9, 128

	.type	.Lconst.104,@object
	.section	.rodata..Lconst.104,"a",@progbits
.Lconst.104:
	.asciz	"func(*\tcommand_line_arguments\tdaemon.Warp, \tcontext\tcontext.Context) \tgithub_com_spolu_warp\twarp.State"
	.size	.Lconst.104, 103

	.type	go..C155,@object
	.section	.rodata.go..C155,"a",@progbits
	.p2align	3
go..C155:
	.quad	.Lconst.104
	.quad	102
	.size	go..C155, 16

	.type	go..C156,@object
	.section	.data.go..C156,"aw",@progbits
	.p2align	3
go..C156:
	.quad	type...1command_line_arguments.Warp
	.quad	context.Context..d
	.size	go..C156, 16

	.type	go..C157,@object
	.section	.data.go..C157,"aw",@progbits
	.p2align	3
go..C157:
	.quad	github_com_spolu_warp.State..d
	.size	go..C157, 8

	.type	go..C158,@object
	.section	.rodata.go..C158,"a",@progbits
	.p2align	3
go..C158:
	.quad	.Lconst.87
	.quad	10
	.size	go..C158, 16

	.type	go..C159,@object
	.section	.rodata.go..C159,"a",@progbits
	.p2align	3
go..C159:
	.quad	.Lconst.2
	.quad	22
	.size	go..C159, 16

	.type	type..func.8context.Context.3.1command_line_arguments.Session.9.8.9,@object
	.section	.rodata.type..func.8context.Context.3.1command_line_arguments.Session.9.8.9,"aG",@progbits,type..func.8context.Context.3.1command_line_arguments.Session.9.8.9,comdat
	.weak	type..func.8context.Context.3.1command_line_arguments.Session.9.8.9
	.p2align	4
type..func.8context.Context.3.1command_line_arguments.Session.9.8.9:
	.quad	8
	.quad	8
	.long	1883613096
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C160
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C161
	.quad	2
	.quad	2
	.quad	go..C162
	.quad	0
	.quad	0
	.size	type..func.8context.Context.3.1command_line_arguments.Session.9.8.9, 128

	.type	.Lconst.105,@object
	.section	.rodata..Lconst.105,"a",@progbits
.Lconst.105:
	.asciz	"func(\tcontext\tcontext.Context, *\tcommand_line_arguments\tdaemon.Session)"
	.size	.Lconst.105, 72

	.type	go..C160,@object
	.section	.rodata.go..C160,"a",@progbits
	.p2align	3
go..C160:
	.quad	.Lconst.105
	.quad	71
	.size	go..C160, 16

	.type	go..C161,@object
	.section	.data.go..C161,"aw",@progbits
	.p2align	3
go..C161:
	.quad	context.Context..d
	.quad	type...1command_line_arguments.Session
	.size	go..C161, 16

	.type	go..C162,@object
	.section	.bss.go..C162,"aw",@nobits
	.p2align	3
go..C162:
	.zero	8
	.size	go..C162, 8

	.type	type..func.8.1command_line_arguments.Warp.3context.Context.3.1command_line_arguments.Session.9.8.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.Warp.3context.Context.3.1command_line_arguments.Session.9.8.9,"aG",@progbits,type..func.8.1command_line_arguments.Warp.3context.Context.3.1command_line_arguments.Session.9.8.9,comdat
	.weak	type..func.8.1command_line_arguments.Warp.3context.Context.3.1command_line_arguments.Session.9.8.9
	.p2align	4
type..func.8.1command_line_arguments.Warp.3context.Context.3.1command_line_arguments.Session.9.8.9:
	.quad	8
	.quad	8
	.long	1071236200
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C163
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C164
	.quad	3
	.quad	3
	.quad	go..C165
	.quad	0
	.quad	0
	.size	type..func.8.1command_line_arguments.Warp.3context.Context.3.1command_line_arguments.Session.9.8.9, 128

	.type	.Lconst.106,@object
	.section	.rodata..Lconst.106,"a",@progbits
.Lconst.106:
	.asciz	"func(*\tcommand_line_arguments\tdaemon.Warp, \tcontext\tcontext.Context, *\tcommand_line_arguments\tdaemon.Session)"
	.size	.Lconst.106, 110

	.type	go..C163,@object
	.section	.rodata.go..C163,"a",@progbits
	.p2align	3
go..C163:
	.quad	.Lconst.106
	.quad	109
	.size	go..C163, 16

	.type	go..C164,@object
	.section	.data.go..C164,"aw",@progbits
	.p2align	4
go..C164:
	.quad	type...1command_line_arguments.Warp
	.quad	context.Context..d
	.quad	type...1command_line_arguments.Session
	.size	go..C164, 24

	.type	go..C165,@object
	.section	.bss.go..C165,"aw",@nobits
	.p2align	3
go..C165:
	.zero	8
	.size	go..C165, 8

	.type	go..C166,@object
	.section	.rodata.go..C166,"a",@progbits
	.p2align	3
go..C166:
	.quad	.Lconst.90
	.quad	17
	.size	go..C166, 16

	.type	go..C167,@object
	.section	.rodata.go..C167,"a",@progbits
	.p2align	3
go..C167:
	.quad	.Lconst.2
	.quad	22
	.size	go..C167, 16

	.type	.Lconst.107,@object
	.section	.rodata..Lconst.107,"a",@progbits
.Lconst.107:
	.asciz	"rcvHostData"
	.size	.Lconst.107, 12

	.type	go..C168,@object
	.section	.rodata.go..C168,"a",@progbits
	.p2align	3
go..C168:
	.quad	.Lconst.107
	.quad	11
	.size	go..C168, 16

	.type	go..C169,@object
	.section	.rodata.go..C169,"a",@progbits
	.p2align	3
go..C169:
	.quad	.Lconst.2
	.quad	22
	.size	go..C169, 16

	.type	type..func.8context.Context.3.1command_line_arguments.Session.3.6.7uint8.9.8.9,@object
	.section	.rodata.type..func.8context.Context.3.1command_line_arguments.Session.3.6.7uint8.9.8.9,"aG",@progbits,type..func.8context.Context.3.1command_line_arguments.Session.3.6.7uint8.9.8.9,comdat
	.weak	type..func.8context.Context.3.1command_line_arguments.Session.3.6.7uint8.9.8.9
	.p2align	4
type..func.8context.Context.3.1command_line_arguments.Session.3.6.7uint8.9.8.9:
	.quad	8
	.quad	8
	.long	1396783912
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C170
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C177
	.quad	3
	.quad	3
	.quad	go..C178
	.quad	0
	.quad	0
	.size	type..func.8context.Context.3.1command_line_arguments.Session.3.6.7uint8.9.8.9, 128

	.type	.Lconst.108,@object
	.section	.rodata..Lconst.108,"a",@progbits
.Lconst.108:
	.asciz	"func(\tcontext\tcontext.Context, *\tcommand_line_arguments\tdaemon.Session, []uint8)"
	.size	.Lconst.108, 81

	.type	go..C170,@object
	.section	.rodata.go..C170,"a",@progbits
	.p2align	3
go..C170:
	.quad	.Lconst.108
	.quad	80
	.size	go..C170, 16

	.type	type...6.7uint8,@object
	.section	.rodata.type...6.7uint8,"aG",@progbits,type...6.7uint8,comdat
	.weak	type...6.7uint8
	.p2align	4
type...6.7uint8:
	.quad	24
	.quad	8
	.long	264632103
	.byte	23
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C171
	.quad	0
	.quad	0
	.quad	uint8..d
	.size	type...6.7uint8, 80

	.type	.Lconst.109,@object
	.section	.rodata..Lconst.109,"a",@progbits
.Lconst.109:
	.asciz	"[]uint8"
	.size	.Lconst.109, 8

	.type	go..C171,@object
	.section	.rodata.go..C171,"a",@progbits
	.p2align	3
go..C171:
	.quad	.Lconst.109
	.quad	7
	.size	go..C171, 16

	.type	uint8..d,@object
	.section	.rodata.uint8..d,"aG",@progbits,uint8..d,comdat
	.weak	uint8..d
	.p2align	4
uint8..d:
	.quad	1
	.quad	0
	.long	264632089
	.byte	136
	.byte	1
	.byte	1
	.zero	1
	.quad	runtime.memhash8..f
	.quad	runtime.memequal8..f
	.quad	0
	.quad	go..C172
	.quad	go..C175
	.quad	type...1uint8
	.size	uint8..d, 72

	.type	.Lconst.110,@object
	.section	.rodata..Lconst.110,"a",@progbits
.Lconst.110:
	.asciz	"uint8"
	.size	.Lconst.110, 6

	.type	go..C172,@object
	.section	.rodata.go..C172,"a",@progbits
	.p2align	3
go..C172:
	.quad	.Lconst.110
	.quad	5
	.size	go..C172, 16

	.type	go..C173,@object
	.section	.rodata.go..C173,"a",@progbits
	.p2align	3
go..C173:
	.quad	.Lconst.110
	.quad	5
	.size	go..C173, 16

	.type	go..C174,@object
	.section	.bss.go..C174,"aw",@nobits
	.p2align	4
go..C174:
	.zero	40
	.size	go..C174, 40

	.type	go..C175,@object
	.section	.rodata.go..C175,"a",@progbits
	.p2align	4
go..C175:
	.quad	go..C173
	.quad	0
	.quad	go..C174
	.quad	0
	.quad	0
	.size	go..C175, 40

	.type	type...1uint8,@object
	.section	.rodata.type...1uint8,"aG",@progbits,type...1uint8,comdat
	.weak	type...1uint8
	.p2align	4
type...1uint8:
	.quad	8
	.quad	8
	.long	4234113433
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C176
	.quad	0
	.quad	0
	.quad	uint8..d
	.size	type...1uint8, 80

	.type	.Lconst.111,@object
	.section	.rodata..Lconst.111,"a",@progbits
.Lconst.111:
	.asciz	"*uint8"
	.size	.Lconst.111, 7

	.type	go..C176,@object
	.section	.rodata.go..C176,"a",@progbits
	.p2align	3
go..C176:
	.quad	.Lconst.111
	.quad	6
	.size	go..C176, 16

	.type	go..C177,@object
	.section	.data.go..C177,"aw",@progbits
	.p2align	4
go..C177:
	.quad	context.Context..d
	.quad	type...1command_line_arguments.Session
	.quad	type...6.7uint8
	.size	go..C177, 24

	.type	go..C178,@object
	.section	.bss.go..C178,"aw",@nobits
	.p2align	3
go..C178:
	.zero	8
	.size	go..C178, 8

	.type	type..func.8.1command_line_arguments.Warp.3context.Context.3.1command_line_arguments.Session.3.6.7uint8.9.8.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.Warp.3context.Context.3.1command_line_arguments.Session.3.6.7uint8.9.8.9,"aG",@progbits,type..func.8.1command_line_arguments.Warp.3context.Context.3.1command_line_arguments.Session.3.6.7uint8.9.8.9,comdat
	.weak	type..func.8.1command_line_arguments.Warp.3context.Context.3.1command_line_arguments.Session.3.6.7uint8.9.8.9
	.p2align	4
type..func.8.1command_line_arguments.Warp.3context.Context.3.1command_line_arguments.Session.3.6.7uint8.9.8.9:
	.quad	8
	.quad	8
	.long	97577832
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C179
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C180
	.quad	4
	.quad	4
	.quad	go..C181
	.quad	0
	.quad	0
	.size	type..func.8.1command_line_arguments.Warp.3context.Context.3.1command_line_arguments.Session.3.6.7uint8.9.8.9, 128

	.type	.Lconst.112,@object
	.section	.rodata..Lconst.112,"a",@progbits
.Lconst.112:
	.asciz	"func(*\tcommand_line_arguments\tdaemon.Warp, \tcontext\tcontext.Context, *\tcommand_line_arguments\tdaemon.Session, []uint8)"
	.size	.Lconst.112, 119

	.type	go..C179,@object
	.section	.rodata.go..C179,"a",@progbits
	.p2align	3
go..C179:
	.quad	.Lconst.112
	.quad	118
	.size	go..C179, 16

	.type	go..C180,@object
	.section	.data.go..C180,"aw",@progbits
	.p2align	4
go..C180:
	.quad	type...1command_line_arguments.Warp
	.quad	context.Context..d
	.quad	type...1command_line_arguments.Session
	.quad	type...6.7uint8
	.size	go..C180, 32

	.type	go..C181,@object
	.section	.bss.go..C181,"aw",@nobits
	.p2align	3
go..C181:
	.zero	8
	.size	go..C181, 8

	.type	.Lconst.113,@object
	.section	.rodata..Lconst.113,"a",@progbits
.Lconst.113:
	.asciz	"rcvShellClientData"
	.size	.Lconst.113, 19

	.type	go..C182,@object
	.section	.rodata.go..C182,"a",@progbits
	.p2align	3
go..C182:
	.quad	.Lconst.113
	.quad	18
	.size	go..C182, 16

	.type	go..C183,@object
	.section	.rodata.go..C183,"a",@progbits
	.p2align	3
go..C183:
	.quad	.Lconst.2
	.quad	22
	.size	go..C183, 16

	.type	.Lconst.114,@object
	.section	.rodata..Lconst.114,"a",@progbits
.Lconst.114:
	.asciz	"updateClientSessions"
	.size	.Lconst.114, 21

	.type	go..C184,@object
	.section	.rodata.go..C184,"a",@progbits
	.p2align	3
go..C184:
	.quad	.Lconst.114
	.quad	20
	.size	go..C184, 16

	.type	go..C185,@object
	.section	.rodata.go..C185,"a",@progbits
	.p2align	3
go..C185:
	.quad	.Lconst.2
	.quad	22
	.size	go..C185, 16

	.type	type..func.8.1command_line_arguments.Warp.3context.Context.9.8.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.Warp.3context.Context.9.8.9,"aG",@progbits,type..func.8.1command_line_arguments.Warp.3context.Context.9.8.9,comdat
	.weak	type..func.8.1command_line_arguments.Warp.3context.Context.9.8.9
	.p2align	4
type..func.8.1command_line_arguments.Warp.3context.Context.9.8.9:
	.quad	8
	.quad	8
	.long	4230741992
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C186
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C187
	.quad	2
	.quad	2
	.quad	go..C188
	.quad	0
	.quad	0
	.size	type..func.8.1command_line_arguments.Warp.3context.Context.9.8.9, 128

	.type	.Lconst.115,@object
	.section	.rodata..Lconst.115,"a",@progbits
.Lconst.115:
	.asciz	"func(*\tcommand_line_arguments\tdaemon.Warp, \tcontext\tcontext.Context)"
	.size	.Lconst.115, 69

	.type	go..C186,@object
	.section	.rodata.go..C186,"a",@progbits
	.p2align	3
go..C186:
	.quad	.Lconst.115
	.quad	68
	.size	go..C186, 16

	.type	go..C187,@object
	.section	.data.go..C187,"aw",@progbits
	.p2align	3
go..C187:
	.quad	type...1command_line_arguments.Warp
	.quad	context.Context..d
	.size	go..C187, 16

	.type	go..C188,@object
	.section	.bss.go..C188,"aw",@nobits
	.p2align	3
go..C188:
	.zero	8
	.size	go..C188, 8

	.type	.Lconst.116,@object
	.section	.rodata..Lconst.116,"a",@progbits
.Lconst.116:
	.asciz	"updateHost"
	.size	.Lconst.116, 11

	.type	go..C189,@object
	.section	.rodata.go..C189,"a",@progbits
	.p2align	3
go..C189:
	.quad	.Lconst.116
	.quad	10
	.size	go..C189, 16

	.type	go..C190,@object
	.section	.rodata.go..C190,"a",@progbits
	.p2align	3
go..C190:
	.quad	.Lconst.2
	.quad	22
	.size	go..C190, 16

	.type	go..C191,@object
	.section	.data.go..C191,"aw",@progbits
	.p2align	4
go..C191:
	.quad	go..C143
	.quad	0
	.quad	type..func.8context.Context.9.8.6.7.1command_line_arguments.Session.9
	.quad	type..func.8.1command_line_arguments.Warp.3context.Context.9.8.6.7.1command_line_arguments.Session.9
	.quad	command_line_arguments.Warp.CientSessions
	.quad	go..C151
	.quad	0
	.quad	type..func.8context.Context.9.8github_com_spolu_warp.State.9
	.quad	type..func.8.1command_line_arguments.Warp.3context.Context.9.8github_com_spolu_warp.State.9
	.quad	command_line_arguments.Warp.State
	.quad	go..C158
	.quad	go..C159
	.quad	type..func.8context.Context.3.1command_line_arguments.Session.9.8.9
	.quad	type..func.8.1command_line_arguments.Warp.3context.Context.3.1command_line_arguments.Session.9.8.9
	.quad	command_line_arguments.Warp.handleHost
	.quad	go..C166
	.quad	go..C167
	.quad	type..func.8context.Context.3.1command_line_arguments.Session.9.8.9
	.quad	type..func.8.1command_line_arguments.Warp.3context.Context.3.1command_line_arguments.Session.9.8.9
	.quad	command_line_arguments.Warp.handleShellClient
	.quad	go..C168
	.quad	go..C169
	.quad	type..func.8context.Context.3.1command_line_arguments.Session.3.6.7uint8.9.8.9
	.quad	type..func.8.1command_line_arguments.Warp.3context.Context.3.1command_line_arguments.Session.3.6.7uint8.9.8.9
	.quad	command_line_arguments.Warp.rcvHostData
	.quad	go..C182
	.quad	go..C183
	.quad	type..func.8context.Context.3.1command_line_arguments.Session.3.6.7uint8.9.8.9
	.quad	type..func.8.1command_line_arguments.Warp.3context.Context.3.1command_line_arguments.Session.3.6.7uint8.9.8.9
	.quad	command_line_arguments.Warp.rcvShellClientData
	.quad	go..C184
	.quad	go..C185
	.quad	type..func.8context.Context.9.8.9
	.quad	type..func.8.1command_line_arguments.Warp.3context.Context.9.8.9
	.quad	command_line_arguments.Warp.updateClientSessions
	.quad	go..C189
	.quad	go..C190
	.quad	type..func.8context.Context.9.8.9
	.quad	type..func.8.1command_line_arguments.Warp.3context.Context.9.8.9
	.quad	command_line_arguments.Warp.updateHost
	.size	go..C191, 320

	.type	go..C192,@object
	.section	.rodata.go..C192,"a",@progbits
	.p2align	4
go..C192:
	.quad	0
	.quad	0
	.quad	go..C191
	.quad	8
	.quad	8
	.size	go..C192, 40

	.type	type...1.1command_line_arguments.Warp,@object
	.section	.rodata.type...1.1command_line_arguments.Warp,"aG",@progbits,type...1.1command_line_arguments.Warp,comdat
	.weak	type...1.1command_line_arguments.Warp
	.p2align	4
type...1.1command_line_arguments.Warp:
	.quad	8
	.quad	8
	.long	799488665
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C193
	.quad	0
	.quad	0
	.quad	type...1command_line_arguments.Warp
	.size	type...1.1command_line_arguments.Warp, 80

	.type	.Lconst.117,@object
	.section	.rodata..Lconst.117,"a",@progbits
.Lconst.117:
	.asciz	"**\tcommand_line_arguments\tdaemon.Warp"
	.size	.Lconst.117, 38

	.type	go..C193,@object
	.section	.rodata.go..C193,"a",@progbits
	.p2align	3
go..C193:
	.quad	.Lconst.117
	.quad	37
	.size	go..C193, 16

	.type	command_line_arguments.Warp..d,@object
	.section	.rodata.command_line_arguments.Warp..d,"a",@progbits
	.globl	command_line_arguments.Warp..d
	.p2align	4
command_line_arguments.Warp..d:
	.quad	64
	.quad	64
	.long	3408897850
	.byte	25
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..rh
	.quad	go..C194
	.quad	go..C198
	.quad	type...1command_line_arguments.Warp
	.quad	go..C318
	.quad	6
	.quad	6
	.size	command_line_arguments.Warp..d, 96

	.type	gcbits..rh,@object
	.section	.rodata.gcbits..rh,"aG",@progbits,gcbits..rh,comdat
	.weak	gcbits..rh
gcbits..rh:
	.byte	241
	.size	gcbits..rh, 1

	.type	.Lconst.118,@object
	.section	.rodata..Lconst.118,"a",@progbits
.Lconst.118:
	.asciz	"\tcommand_line_arguments\tdaemon.Warp"
	.size	.Lconst.118, 36

	.type	go..C194,@object
	.section	.rodata.go..C194,"a",@progbits
	.p2align	3
go..C194:
	.quad	.Lconst.118
	.quad	35
	.size	go..C194, 16

	.type	.Lconst.119,@object
	.section	.rodata..Lconst.119,"a",@progbits
.Lconst.119:
	.asciz	"Warp"
	.size	.Lconst.119, 5

	.type	go..C195,@object
	.section	.rodata.go..C195,"a",@progbits
	.p2align	3
go..C195:
	.quad	.Lconst.119
	.quad	4
	.size	go..C195, 16

	.type	go..C196,@object
	.section	.rodata.go..C196,"a",@progbits
	.p2align	3
go..C196:
	.quad	.Lconst.2
	.quad	22
	.size	go..C196, 16

	.type	go..C197,@object
	.section	.bss.go..C197,"aw",@nobits
	.p2align	4
go..C197:
	.zero	40
	.size	go..C197, 40

	.type	go..C198,@object
	.section	.rodata.go..C198,"a",@progbits
	.p2align	4
go..C198:
	.quad	go..C195
	.quad	go..C196
	.quad	go..C197
	.quad	0
	.quad	0
	.size	go..C198, 40

	.type	.Lconst.120,@object
	.section	.rodata..Lconst.120,"a",@progbits
.Lconst.120:
	.asciz	"token"
	.size	.Lconst.120, 6

	.type	go..C199,@object
	.section	.rodata.go..C199,"a",@progbits
	.p2align	3
go..C199:
	.quad	.Lconst.120
	.quad	5
	.size	go..C199, 16

	.type	go..C200,@object
	.section	.rodata.go..C200,"a",@progbits
	.p2align	3
go..C200:
	.quad	.Lconst.2
	.quad	22
	.size	go..C200, 16

	.type	.Lconst.121,@object
	.section	.rodata..Lconst.121,"a",@progbits
.Lconst.121:
	.asciz	"windowSize"
	.size	.Lconst.121, 11

	.type	go..C201,@object
	.section	.rodata.go..C201,"a",@progbits
	.p2align	3
go..C201:
	.quad	.Lconst.121
	.quad	10
	.size	go..C201, 16

	.type	go..C202,@object
	.section	.rodata.go..C202,"a",@progbits
	.p2align	3
go..C202:
	.quad	.Lconst.2
	.quad	22
	.size	go..C202, 16

	.type	.Lconst.122,@object
	.section	.rodata..Lconst.122,"a",@progbits
.Lconst.122:
	.asciz	"host"
	.size	.Lconst.122, 5

	.type	go..C203,@object
	.section	.rodata.go..C203,"a",@progbits
	.p2align	3
go..C203:
	.quad	.Lconst.122
	.quad	4
	.size	go..C203, 16

	.type	go..C204,@object
	.section	.rodata.go..C204,"a",@progbits
	.p2align	3
go..C204:
	.quad	.Lconst.2
	.quad	22
	.size	go..C204, 16

	.type	type...1command_line_arguments.HostState,@object
	.section	.rodata.type...1command_line_arguments.HostState,"aG",@progbits,type...1command_line_arguments.HostState,comdat
	.weak	type...1command_line_arguments.HostState
	.p2align	4
type...1command_line_arguments.HostState:
	.quad	8
	.quad	8
	.long	3239409177
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C205
	.quad	go..C214
	.quad	type...1.1command_line_arguments.HostState
	.quad	command_line_arguments.HostState..d
	.size	type...1command_line_arguments.HostState, 80

	.type	.Lconst.123,@object
	.section	.rodata..Lconst.123,"a",@progbits
.Lconst.123:
	.asciz	"*\tcommand_line_arguments\tdaemon.HostState"
	.size	.Lconst.123, 42

	.type	go..C205,@object
	.section	.rodata.go..C205,"a",@progbits
	.p2align	3
go..C205:
	.quad	.Lconst.123
	.quad	41
	.size	go..C205, 16

	.type	.Lconst.124,@object
	.section	.rodata..Lconst.124,"a",@progbits
.Lconst.124:
	.asciz	"User"
	.size	.Lconst.124, 5

	.type	go..C206,@object
	.section	.rodata.go..C206,"a",@progbits
	.p2align	3
go..C206:
	.quad	.Lconst.124
	.quad	4
	.size	go..C206, 16

	.type	type..func.8context.Context.9.8github_com_spolu_warp.User.9,@object
	.section	.rodata.type..func.8context.Context.9.8github_com_spolu_warp.User.9,"aG",@progbits,type..func.8context.Context.9.8github_com_spolu_warp.User.9,comdat
	.weak	type..func.8context.Context.9.8github_com_spolu_warp.User.9
	.p2align	4
type..func.8context.Context.9.8github_com_spolu_warp.User.9:
	.quad	8
	.quad	8
	.long	1035887144
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C207
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C208
	.quad	1
	.quad	1
	.quad	go..C209
	.quad	1
	.quad	1
	.size	type..func.8context.Context.9.8github_com_spolu_warp.User.9, 128

	.type	.Lconst.125,@object
	.section	.rodata..Lconst.125,"a",@progbits
.Lconst.125:
	.asciz	"func(\tcontext\tcontext.Context) \tgithub_com_spolu_warp\twarp.User"
	.size	.Lconst.125, 64

	.type	go..C207,@object
	.section	.rodata.go..C207,"a",@progbits
	.p2align	3
go..C207:
	.quad	.Lconst.125
	.quad	63
	.size	go..C207, 16

	.type	go..C208,@object
	.section	.data.go..C208,"aw",@progbits
	.p2align	3
go..C208:
	.quad	context.Context..d
	.size	go..C208, 8

	.type	go..C209,@object
	.section	.data.go..C209,"aw",@progbits
	.p2align	3
go..C209:
	.quad	github_com_spolu_warp.User..d
	.size	go..C209, 8

	.type	type..func.8.1command_line_arguments.HostState.3context.Context.9.8github_com_spolu_warp.User.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.HostState.3context.Context.9.8github_com_spolu_warp.User.9,"aG",@progbits,type..func.8.1command_line_arguments.HostState.3context.Context.9.8github_com_spolu_warp.User.9,comdat
	.weak	type..func.8.1command_line_arguments.HostState.3context.Context.9.8github_com_spolu_warp.User.9
	.p2align	4
type..func.8.1command_line_arguments.HostState.3context.Context.9.8github_com_spolu_warp.User.9:
	.quad	8
	.quad	8
	.long	2933648040
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C210
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C211
	.quad	2
	.quad	2
	.quad	go..C212
	.quad	1
	.quad	1
	.size	type..func.8.1command_line_arguments.HostState.3context.Context.9.8github_com_spolu_warp.User.9, 128

	.type	.Lconst.126,@object
	.section	.rodata..Lconst.126,"a",@progbits
.Lconst.126:
	.asciz	"func(*\tcommand_line_arguments\tdaemon.HostState, \tcontext\tcontext.Context) \tgithub_com_spolu_warp\twarp.User"
	.size	.Lconst.126, 107

	.type	go..C210,@object
	.section	.rodata.go..C210,"a",@progbits
	.p2align	3
go..C210:
	.quad	.Lconst.126
	.quad	106
	.size	go..C210, 16

	.type	go..C211,@object
	.section	.data.go..C211,"aw",@progbits
	.p2align	3
go..C211:
	.quad	type...1command_line_arguments.HostState
	.quad	context.Context..d
	.size	go..C211, 16

	.type	go..C212,@object
	.section	.data.go..C212,"aw",@progbits
	.p2align	3
go..C212:
	.quad	github_com_spolu_warp.User..d
	.size	go..C212, 8

	.type	go..C213,@object
	.section	.data.go..C213,"aw",@progbits
	.p2align	4
go..C213:
	.quad	go..C206
	.quad	0
	.quad	type..func.8context.Context.9.8github_com_spolu_warp.User.9
	.quad	type..func.8.1command_line_arguments.HostState.3context.Context.9.8github_com_spolu_warp.User.9
	.quad	command_line_arguments.HostState.User
	.size	go..C213, 40

	.type	go..C214,@object
	.section	.rodata.go..C214,"a",@progbits
	.p2align	4
go..C214:
	.quad	0
	.quad	0
	.quad	go..C213
	.quad	1
	.quad	1
	.size	go..C214, 40

	.type	type...1.1command_line_arguments.HostState,@object
	.section	.rodata.type...1.1command_line_arguments.HostState,"aG",@progbits,type...1.1command_line_arguments.HostState,comdat
	.weak	type...1.1command_line_arguments.HostState
	.p2align	4
type...1.1command_line_arguments.HostState:
	.quad	8
	.quad	8
	.long	290939289
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C215
	.quad	0
	.quad	0
	.quad	type...1command_line_arguments.HostState
	.size	type...1.1command_line_arguments.HostState, 80

	.type	.Lconst.127,@object
	.section	.rodata..Lconst.127,"a",@progbits
.Lconst.127:
	.asciz	"**\tcommand_line_arguments\tdaemon.HostState"
	.size	.Lconst.127, 43

	.type	go..C215,@object
	.section	.rodata.go..C215,"a",@progbits
	.p2align	3
go..C215:
	.quad	.Lconst.127
	.quad	42
	.size	go..C215, 16

	.type	command_line_arguments.HostState..d,@object
	.section	.rodata.command_line_arguments.HostState..d,"a",@progbits
	.globl	command_line_arguments.HostState..d
	.p2align	4
command_line_arguments.HostState..d:
	.quad	56
	.quad	56
	.long	3423688545
	.byte	25
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..fd
	.quad	go..C216
	.quad	go..C220
	.quad	type...1command_line_arguments.HostState
	.quad	go..C289
	.quad	2
	.quad	2
	.size	command_line_arguments.HostState..d, 96

	.type	gcbits..fd,@object
	.section	.rodata.gcbits..fd,"aG",@progbits,gcbits..fd,comdat
	.weak	gcbits..fd
gcbits..fd:
	.byte	101
	.size	gcbits..fd, 1

	.type	.Lconst.128,@object
	.section	.rodata..Lconst.128,"a",@progbits
.Lconst.128:
	.asciz	"\tcommand_line_arguments\tdaemon.HostState"
	.size	.Lconst.128, 41

	.type	go..C216,@object
	.section	.rodata.go..C216,"a",@progbits
	.p2align	3
go..C216:
	.quad	.Lconst.128
	.quad	40
	.size	go..C216, 16

	.type	.Lconst.129,@object
	.section	.rodata..Lconst.129,"a",@progbits
.Lconst.129:
	.asciz	"HostState"
	.size	.Lconst.129, 10

	.type	go..C217,@object
	.section	.rodata.go..C217,"a",@progbits
	.p2align	3
go..C217:
	.quad	.Lconst.129
	.quad	9
	.size	go..C217, 16

	.type	go..C218,@object
	.section	.rodata.go..C218,"a",@progbits
	.p2align	3
go..C218:
	.quad	.Lconst.2
	.quad	22
	.size	go..C218, 16

	.type	go..C219,@object
	.section	.bss.go..C219,"aw",@nobits
	.p2align	4
go..C219:
	.zero	40
	.size	go..C219, 40

	.type	go..C220,@object
	.section	.rodata.go..C220,"a",@progbits
	.p2align	4
go..C220:
	.quad	go..C217
	.quad	go..C218
	.quad	go..C219
	.quad	0
	.quad	0
	.size	go..C220, 40

	.type	.Lconst.130,@object
	.section	.rodata..Lconst.130,"a",@progbits
.Lconst.130:
	.asciz	"UserState"
	.size	.Lconst.130, 10

	.type	go..C221,@object
	.section	.rodata.go..C221,"a",@progbits
	.p2align	3
go..C221:
	.quad	.Lconst.130
	.quad	9
	.size	go..C221, 16

	.type	command_line_arguments.UserState..d,@object
	.section	.rodata.command_line_arguments.UserState..d,"a",@progbits
	.globl	command_line_arguments.UserState..d
	.p2align	4
command_line_arguments.UserState..d:
	.quad	48
	.quad	48
	.long	2858880944
	.byte	25
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..fb
	.quad	go..C222
	.quad	go..C226
	.quad	type...1command_line_arguments.UserState
	.quad	go..C286
	.quad	4
	.quad	4
	.size	command_line_arguments.UserState..d, 96

	.type	gcbits..fb,@object
	.section	.rodata.gcbits..fb,"aG",@progbits,gcbits..fb,comdat
	.weak	gcbits..fb
gcbits..fb:
	.byte	37
	.size	gcbits..fb, 1

	.type	.Lconst.131,@object
	.section	.rodata..Lconst.131,"a",@progbits
.Lconst.131:
	.asciz	"\tcommand_line_arguments\tdaemon.UserState"
	.size	.Lconst.131, 41

	.type	go..C222,@object
	.section	.rodata.go..C222,"a",@progbits
	.p2align	3
go..C222:
	.quad	.Lconst.131
	.quad	40
	.size	go..C222, 16

	.type	go..C223,@object
	.section	.rodata.go..C223,"a",@progbits
	.p2align	3
go..C223:
	.quad	.Lconst.130
	.quad	9
	.size	go..C223, 16

	.type	go..C224,@object
	.section	.rodata.go..C224,"a",@progbits
	.p2align	3
go..C224:
	.quad	.Lconst.2
	.quad	22
	.size	go..C224, 16

	.type	go..C225,@object
	.section	.bss.go..C225,"aw",@nobits
	.p2align	4
go..C225:
	.zero	40
	.size	go..C225, 40

	.type	go..C226,@object
	.section	.rodata.go..C226,"a",@progbits
	.p2align	4
go..C226:
	.quad	go..C223
	.quad	go..C224
	.quad	go..C225
	.quad	0
	.quad	0
	.size	go..C226, 40

	.type	type...1command_line_arguments.UserState,@object
	.section	.rodata.type...1command_line_arguments.UserState,"aG",@progbits,type...1command_line_arguments.UserState,comdat
	.weak	type...1command_line_arguments.UserState
	.p2align	4
type...1command_line_arguments.UserState:
	.quad	8
	.quad	8
	.long	2792422153
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C227
	.quad	go..C233
	.quad	type...1.1command_line_arguments.UserState
	.quad	command_line_arguments.UserState..d
	.size	type...1command_line_arguments.UserState, 80

	.type	.Lconst.132,@object
	.section	.rodata..Lconst.132,"a",@progbits
.Lconst.132:
	.asciz	"*\tcommand_line_arguments\tdaemon.UserState"
	.size	.Lconst.132, 42

	.type	go..C227,@object
	.section	.rodata.go..C227,"a",@progbits
	.p2align	3
go..C227:
	.quad	.Lconst.132
	.quad	41
	.size	go..C227, 16

	.type	go..C228,@object
	.section	.rodata.go..C228,"a",@progbits
	.p2align	3
go..C228:
	.quad	.Lconst.124
	.quad	4
	.size	go..C228, 16

	.type	type..func.8.1command_line_arguments.UserState.3context.Context.9.8github_com_spolu_warp.User.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.UserState.3context.Context.9.8github_com_spolu_warp.User.9,"aG",@progbits,type..func.8.1command_line_arguments.UserState.3context.Context.9.8github_com_spolu_warp.User.9,comdat
	.weak	type..func.8.1command_line_arguments.UserState.3context.Context.9.8github_com_spolu_warp.User.9
	.p2align	4
type..func.8.1command_line_arguments.UserState.3context.Context.9.8github_com_spolu_warp.User.9:
	.quad	8
	.quad	8
	.long	1514965160
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C229
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C230
	.quad	2
	.quad	2
	.quad	go..C231
	.quad	1
	.quad	1
	.size	type..func.8.1command_line_arguments.UserState.3context.Context.9.8github_com_spolu_warp.User.9, 128

	.type	.Lconst.133,@object
	.section	.rodata..Lconst.133,"a",@progbits
.Lconst.133:
	.asciz	"func(*\tcommand_line_arguments\tdaemon.UserState, \tcontext\tcontext.Context) \tgithub_com_spolu_warp\twarp.User"
	.size	.Lconst.133, 107

	.type	go..C229,@object
	.section	.rodata.go..C229,"a",@progbits
	.p2align	3
go..C229:
	.quad	.Lconst.133
	.quad	106
	.size	go..C229, 16

	.type	go..C230,@object
	.section	.data.go..C230,"aw",@progbits
	.p2align	3
go..C230:
	.quad	type...1command_line_arguments.UserState
	.quad	context.Context..d
	.size	go..C230, 16

	.type	go..C231,@object
	.section	.data.go..C231,"aw",@progbits
	.p2align	3
go..C231:
	.quad	github_com_spolu_warp.User..d
	.size	go..C231, 8

	.type	go..C232,@object
	.section	.data.go..C232,"aw",@progbits
	.p2align	4
go..C232:
	.quad	go..C228
	.quad	0
	.quad	type..func.8context.Context.9.8github_com_spolu_warp.User.9
	.quad	type..func.8.1command_line_arguments.UserState.3context.Context.9.8github_com_spolu_warp.User.9
	.quad	command_line_arguments.UserState.User
	.size	go..C232, 40

	.type	go..C233,@object
	.section	.rodata.go..C233,"a",@progbits
	.p2align	4
go..C233:
	.quad	0
	.quad	0
	.quad	go..C232
	.quad	1
	.quad	1
	.size	go..C233, 40

	.type	type...1.1command_line_arguments.UserState,@object
	.section	.rodata.type...1.1command_line_arguments.UserState,"aG",@progbits,type...1.1command_line_arguments.UserState,comdat
	.weak	type...1.1command_line_arguments.UserState
	.p2align	4
type...1.1command_line_arguments.UserState:
	.quad	8
	.quad	8
	.long	1729081497
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C234
	.quad	0
	.quad	0
	.quad	type...1command_line_arguments.UserState
	.size	type...1.1command_line_arguments.UserState, 80

	.type	.Lconst.134,@object
	.section	.rodata..Lconst.134,"a",@progbits
.Lconst.134:
	.asciz	"**\tcommand_line_arguments\tdaemon.UserState"
	.size	.Lconst.134, 43

	.type	go..C234,@object
	.section	.rodata.go..C234,"a",@progbits
	.p2align	3
go..C234:
	.quad	.Lconst.134
	.quad	42
	.size	go..C234, 16

	.type	go..C235,@object
	.section	.rodata.go..C235,"a",@progbits
	.p2align	3
go..C235:
	.quad	.Lconst.120
	.quad	5
	.size	go..C235, 16

	.type	go..C236,@object
	.section	.rodata.go..C236,"a",@progbits
	.p2align	3
go..C236:
	.quad	.Lconst.2
	.quad	22
	.size	go..C236, 16

	.type	go..C237,@object
	.section	.rodata.go..C237,"a",@progbits
	.p2align	3
go..C237:
	.quad	.Lconst.22
	.quad	8
	.size	go..C237, 16

	.type	go..C238,@object
	.section	.rodata.go..C238,"a",@progbits
	.p2align	3
go..C238:
	.quad	.Lconst.2
	.quad	22
	.size	go..C238, 16

	.type	.Lconst.135,@object
	.section	.rodata..Lconst.135,"a",@progbits
.Lconst.135:
	.asciz	"mode"
	.size	.Lconst.135, 5

	.type	go..C239,@object
	.section	.rodata.go..C239,"a",@progbits
	.p2align	3
go..C239:
	.quad	.Lconst.135
	.quad	4
	.size	go..C239, 16

	.type	go..C240,@object
	.section	.rodata.go..C240,"a",@progbits
	.p2align	3
go..C240:
	.quad	.Lconst.2
	.quad	22
	.size	go..C240, 16

	.type	.Lconst.136,@object
	.section	.rodata..Lconst.136,"a",@progbits
.Lconst.136:
	.asciz	"sessions"
	.size	.Lconst.136, 9

	.type	go..C241,@object
	.section	.rodata.go..C241,"a",@progbits
	.p2align	3
go..C241:
	.quad	.Lconst.136
	.quad	8
	.size	go..C241, 16

	.type	go..C242,@object
	.section	.rodata.go..C242,"a",@progbits
	.p2align	3
go..C242:
	.quad	.Lconst.2
	.quad	22
	.size	go..C242, 16

	.type	type..map.6string.7.1command_line_arguments.Session,@object
	.section	.rodata.type..map.6string.7.1command_line_arguments.Session,"aG",@progbits,type..map.6string.7.1command_line_arguments.Session,comdat
	.weak	type..map.6string.7.1command_line_arguments.Session
	.p2align	4
type..map.6string.7.1command_line_arguments.Session:
	.quad	8
	.quad	8
	.long	1164034611
	.byte	21
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C243
	.quad	0
	.quad	0
	.quad	string..d
	.quad	type...1command_line_arguments.Session
	.quad	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Session.2overflow.0.1.4void.5.5
	.quad	type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Session.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Session.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5
	.byte	16
	.byte	0
	.byte	8
	.byte	0
	.short	208
	.byte	1
	.byte	1
	.size	type..map.6string.7.1command_line_arguments.Session, 112

	.type	.Lconst.137,@object
	.section	.rodata..Lconst.137,"a",@progbits
.Lconst.137:
	.asciz	"map[string]*\tcommand_line_arguments\tdaemon.Session"
	.size	.Lconst.137, 51

	.type	go..C243,@object
	.section	.rodata.go..C243,"a",@progbits
	.p2align	3
go..C243:
	.quad	.Lconst.137
	.quad	50
	.size	go..C243, 16

	.type	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Session.2overflow.0.1.4void.5.5,@object
	.section	.rodata.type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Session.2overflow.0.1.4void.5.5,"aG",@progbits,type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Session.2overflow.0.1.4void.5.5,comdat
	.weak	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Session.2overflow.0.1.4void.5.5
	.p2align	4
type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Session.2overflow.0.1.4void.5.5:
	.quad	208
	.quad	208
	.long	2860559236
	.byte	25
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..kwkEGba
	.quad	go..C244
	.quad	0
	.quad	0
	.quad	go..C253
	.quad	4
	.quad	4
	.size	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Session.2overflow.0.1.4void.5.5, 96

	.type	gcbits..kwkEGba,@object
	.section	.rodata.gcbits..kwkEGba,"aG",@progbits,gcbits..kwkEGba,comdat
	.weak	gcbits..kwkEGba
gcbits..kwkEGba:
	.ascii	"\252\252\376\003"
	.size	gcbits..kwkEGba, 4

	.type	.Lconst.138,@object
	.section	.rodata..Lconst.138,"a",@progbits
.Lconst.138:
	.asciz	"struct { topbits [8]uint8; keys [8]string; values [8]*\tcommand_line_arguments\tdaemon.Session; overflow * }"
	.size	.Lconst.138, 107

	.type	go..C244,@object
	.section	.rodata.go..C244,"a",@progbits
	.p2align	3
go..C244:
	.quad	.Lconst.138
	.quad	106
	.size	go..C244, 16

	.type	.Lconst.139,@object
	.section	.rodata..Lconst.139,"a",@progbits
.Lconst.139:
	.asciz	"topbits"
	.size	.Lconst.139, 8

	.type	go..C245,@object
	.section	.rodata.go..C245,"a",@progbits
	.p2align	3
go..C245:
	.quad	.Lconst.139
	.quad	7
	.size	go..C245, 16

	.type	type...68x.7uint8,@object
	.section	.rodata.type...68x.7uint8,"aG",@progbits,type...68x.7uint8,comdat
	.weak	type...68x.7uint8
	.p2align	4
type...68x.7uint8:
	.quad	8
	.quad	0
	.long	529264193
	.byte	145
	.byte	1
	.byte	1
	.zero	1
	.quad	0
	.quad	0
	.quad	0
	.quad	go..C246
	.quad	0
	.quad	0
	.quad	uint8..d
	.quad	type...6.7uint8
	.quad	8
	.size	type...68x.7uint8, 96

	.type	.Lconst.140,@object
	.section	.rodata..Lconst.140,"a",@progbits
.Lconst.140:
	.asciz	"[8]uint8"
	.size	.Lconst.140, 9

	.type	go..C246,@object
	.section	.rodata.go..C246,"a",@progbits
	.p2align	3
go..C246:
	.quad	.Lconst.140
	.quad	8
	.size	go..C246, 16

	.type	.Lconst.141,@object
	.section	.rodata..Lconst.141,"a",@progbits
.Lconst.141:
	.asciz	"keys"
	.size	.Lconst.141, 5

	.type	go..C247,@object
	.section	.rodata.go..C247,"a",@progbits
	.p2align	3
go..C247:
	.quad	.Lconst.141
	.quad	4
	.size	go..C247, 16

	.type	type...68x.7string,@object
	.section	.rodata.type...68x.7string,"aG",@progbits,type...68x.7string,comdat
	.weak	type...68x.7string
	.p2align	4
type...68x.7string:
	.quad	128
	.quad	120
	.long	297061699
	.byte	17
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..wkwa
	.quad	go..C248
	.quad	0
	.quad	0
	.quad	string..d
	.quad	type...6.7string
	.quad	8
	.size	type...68x.7string, 96

	.type	gcbits..wkwa,@object
	.section	.rodata.gcbits..wkwa,"aG",@progbits,gcbits..wkwa,comdat
	.weak	gcbits..wkwa
gcbits..wkwa:
	.zero	2,85
	.size	gcbits..wkwa, 2

	.type	.Lconst.142,@object
	.section	.rodata..Lconst.142,"a",@progbits
.Lconst.142:
	.asciz	"[8]string"
	.size	.Lconst.142, 10

	.type	go..C248,@object
	.section	.rodata.go..C248,"a",@progbits
	.p2align	3
go..C248:
	.quad	.Lconst.142
	.quad	9
	.size	go..C248, 16

	.type	type...6.7string,@object
	.section	.rodata.type...6.7string,"aG",@progbits,type...6.7string,comdat
	.weak	type...6.7string
	.p2align	4
type...6.7string:
	.quad	24
	.quad	8
	.long	2296014504
	.byte	23
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C249
	.quad	0
	.quad	0
	.quad	string..d
	.size	type...6.7string, 80

	.type	.Lconst.143,@object
	.section	.rodata..Lconst.143,"a",@progbits
.Lconst.143:
	.asciz	"[]string"
	.size	.Lconst.143, 9

	.type	go..C249,@object
	.section	.rodata.go..C249,"a",@progbits
	.p2align	3
go..C249:
	.quad	.Lconst.143
	.quad	8
	.size	go..C249, 16

	.type	.Lconst.144,@object
	.section	.rodata..Lconst.144,"a",@progbits
.Lconst.144:
	.asciz	"values"
	.size	.Lconst.144, 7

	.type	go..C250,@object
	.section	.rodata.go..C250,"a",@progbits
	.p2align	3
go..C250:
	.quad	.Lconst.144
	.quad	6
	.size	go..C250, 16

	.type	type...68x.7.1command_line_arguments.Session,@object
	.section	.rodata.type...68x.7.1command_line_arguments.Session,"aG",@progbits,type...68x.7.1command_line_arguments.Session,comdat
	.weak	type...68x.7.1command_line_arguments.Session
	.p2align	4
type...68x.7.1command_line_arguments.Session:
	.quad	64
	.quad	64
	.long	2031007521
	.byte	17
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..Gh
	.quad	go..C251
	.quad	0
	.quad	0
	.quad	type...1command_line_arguments.Session
	.quad	type...6.7.1command_line_arguments.Session
	.quad	8
	.size	type...68x.7.1command_line_arguments.Session, 96

	.type	gcbits..Gh,@object
	.section	.rodata.gcbits..Gh,"aG",@progbits,gcbits..Gh,comdat
	.weak	gcbits..Gh
gcbits..Gh:
	.byte	255
	.size	gcbits..Gh, 1

	.type	.Lconst.145,@object
	.section	.rodata..Lconst.145,"a",@progbits
.Lconst.145:
	.asciz	"[8]*\tcommand_line_arguments\tdaemon.Session"
	.size	.Lconst.145, 43

	.type	go..C251,@object
	.section	.rodata.go..C251,"a",@progbits
	.p2align	3
go..C251:
	.quad	.Lconst.145
	.quad	42
	.size	go..C251, 16

	.type	.Lconst.146,@object
	.section	.rodata..Lconst.146,"a",@progbits
.Lconst.146:
	.asciz	"overflow"
	.size	.Lconst.146, 9

	.type	go..C252,@object
	.section	.rodata.go..C252,"a",@progbits
	.p2align	3
go..C252:
	.quad	.Lconst.146
	.quad	8
	.size	go..C252, 16

	.type	go..C253,@object
	.section	.data.go..C253,"aw",@progbits
	.p2align	4
go..C253:
	.quad	go..C245
	.quad	0
	.quad	type...68x.7uint8
	.quad	0
	.quad	0
	.quad	go..C247
	.quad	0
	.quad	type...68x.7string
	.quad	0
	.quad	16
	.quad	go..C250
	.quad	0
	.quad	type...68x.7.1command_line_arguments.Session
	.quad	0
	.quad	272
	.quad	go..C252
	.quad	0
	.quad	unsafe.Pointer..d
	.quad	0
	.quad	400
	.size	go..C253, 160

	.type	type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Session.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Session.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5,@object
	.section	.rodata.type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Session.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Session.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5,"aG",@progbits,type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Session.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Session.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5,comdat
	.weak	type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Session.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Session.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5
	.p2align	4
type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Session.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Session.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5:
	.quad	48
	.quad	48
	.long	111385060
	.byte	25
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..mb
	.quad	go..C254
	.quad	0
	.quad	0
	.quad	go..C285
	.quad	9
	.quad	9
	.size	type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Session.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Session.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5, 96

	.type	gcbits..mb,@object
	.section	.rodata.gcbits..mb,"aG",@progbits,gcbits..mb,comdat
	.weak	gcbits..mb
gcbits..mb:
	.byte	44
	.size	gcbits..mb, 1

	.type	.Lconst.147,@object
	.section	.rodata..Lconst.147,"a",@progbits
.Lconst.147:
	.asciz	"struct { count int; flags uint8; B uint8; noverflow uint16; hash0 uint32; buckets *struct { topbits [8]uint8; keys [8]string; values [8]*\tcommand_line_arguments\tdaemon.Session; overflow * }; oldbuckets *struct { topbits [8]uint8; keys [8]string; values [8]*\tcommand_line_arguments\tdaemon.Session; overflow * }; nevacuate uintptr; extra * }"
	.size	.Lconst.147, 340

	.type	go..C254,@object
	.section	.rodata.go..C254,"a",@progbits
	.p2align	3
go..C254:
	.quad	.Lconst.147
	.quad	339
	.size	go..C254, 16

	.type	.Lconst.148,@object
	.section	.rodata..Lconst.148,"a",@progbits
.Lconst.148:
	.asciz	"count"
	.size	.Lconst.148, 6

	.type	go..C255,@object
	.section	.rodata.go..C255,"a",@progbits
	.p2align	3
go..C255:
	.quad	.Lconst.148
	.quad	5
	.size	go..C255, 16

	.type	int..d,@object
	.section	.rodata.int..d,"aG",@progbits,int..d,comdat
	.weak	int..d
	.p2align	4
int..d:
	.quad	8
	.quad	0
	.long	876704034
	.byte	130
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	0
	.quad	go..C256
	.quad	go..C259
	.quad	type...1int
	.size	int..d, 72

	.type	.Lconst.149,@object
	.section	.rodata..Lconst.149,"a",@progbits
.Lconst.149:
	.asciz	"int"
	.size	.Lconst.149, 4

	.type	go..C256,@object
	.section	.rodata.go..C256,"a",@progbits
	.p2align	3
go..C256:
	.quad	.Lconst.149
	.quad	3
	.size	go..C256, 16

	.type	go..C257,@object
	.section	.rodata.go..C257,"a",@progbits
	.p2align	3
go..C257:
	.quad	.Lconst.149
	.quad	3
	.size	go..C257, 16

	.type	go..C258,@object
	.section	.bss.go..C258,"aw",@nobits
	.p2align	4
go..C258:
	.zero	40
	.size	go..C258, 40

	.type	go..C259,@object
	.section	.rodata.go..C259,"a",@progbits
	.p2align	4
go..C259:
	.quad	go..C257
	.quad	0
	.quad	go..C258
	.quad	0
	.quad	0
	.size	go..C259, 40

	.type	type...1int,@object
	.section	.rodata.type...1int,"aG",@progbits,type...1int,comdat
	.weak	type...1int
	.p2align	4
type...1int:
	.quad	8
	.quad	8
	.long	1142362665
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C260
	.quad	0
	.quad	0
	.quad	int..d
	.size	type...1int, 80

	.type	.Lconst.150,@object
	.section	.rodata..Lconst.150,"a",@progbits
.Lconst.150:
	.asciz	"*int"
	.size	.Lconst.150, 5

	.type	go..C260,@object
	.section	.rodata.go..C260,"a",@progbits
	.p2align	3
go..C260:
	.quad	.Lconst.150
	.quad	4
	.size	go..C260, 16

	.type	.Lconst.151,@object
	.section	.rodata..Lconst.151,"a",@progbits
.Lconst.151:
	.asciz	"flags"
	.size	.Lconst.151, 6

	.type	go..C261,@object
	.section	.rodata.go..C261,"a",@progbits
	.p2align	3
go..C261:
	.quad	.Lconst.151
	.quad	5
	.size	go..C261, 16

	.type	.Lconst.152,@object
	.section	.rodata..Lconst.152,"a",@progbits
.Lconst.152:
	.asciz	"B"
	.size	.Lconst.152, 2

	.type	go..C262,@object
	.section	.rodata.go..C262,"a",@progbits
	.p2align	3
go..C262:
	.quad	.Lconst.152
	.quad	1
	.size	go..C262, 16

	.type	.Lconst.153,@object
	.section	.rodata..Lconst.153,"a",@progbits
.Lconst.153:
	.asciz	"noverflow"
	.size	.Lconst.153, 10

	.type	go..C263,@object
	.section	.rodata.go..C263,"a",@progbits
	.p2align	3
go..C263:
	.quad	.Lconst.153
	.quad	9
	.size	go..C263, 16

	.type	uint16..d,@object
	.section	.rodata.uint16..d,"aG",@progbits,uint16..d,comdat
	.weak	uint16..d
	.p2align	4
uint16..d:
	.quad	2
	.quad	0
	.long	76732288
	.byte	137
	.byte	2
	.byte	2
	.zero	1
	.quad	runtime.memhash16..f
	.quad	runtime.memequal16..f
	.quad	0
	.quad	go..C264
	.quad	go..C267
	.quad	type...1uint16
	.size	uint16..d, 72

	.type	.Lconst.154,@object
	.section	.rodata..Lconst.154,"a",@progbits
.Lconst.154:
	.asciz	"uint16"
	.size	.Lconst.154, 7

	.type	go..C264,@object
	.section	.rodata.go..C264,"a",@progbits
	.p2align	3
go..C264:
	.quad	.Lconst.154
	.quad	6
	.size	go..C264, 16

	.type	go..C265,@object
	.section	.rodata.go..C265,"a",@progbits
	.p2align	3
go..C265:
	.quad	.Lconst.154
	.quad	6
	.size	go..C265, 16

	.type	go..C266,@object
	.section	.bss.go..C266,"aw",@nobits
	.p2align	4
go..C266:
	.zero	40
	.size	go..C266, 40

	.type	go..C267,@object
	.section	.rodata.go..C267,"a",@progbits
	.p2align	4
go..C267:
	.quad	go..C265
	.quad	0
	.quad	go..C266
	.quad	0
	.quad	0
	.size	go..C267, 40

	.type	type...1uint16,@object
	.section	.rodata.type...1uint16,"aG",@progbits,type...1uint16,comdat
	.weak	type...1uint16
	.p2align	4
type...1uint16:
	.quad	8
	.quad	8
	.long	1227716617
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C268
	.quad	0
	.quad	0
	.quad	uint16..d
	.size	type...1uint16, 80

	.type	.Lconst.155,@object
	.section	.rodata..Lconst.155,"a",@progbits
.Lconst.155:
	.asciz	"*uint16"
	.size	.Lconst.155, 8

	.type	go..C268,@object
	.section	.rodata.go..C268,"a",@progbits
	.p2align	3
go..C268:
	.quad	.Lconst.155
	.quad	7
	.size	go..C268, 16

	.type	.Lconst.156,@object
	.section	.rodata..Lconst.156,"a",@progbits
.Lconst.156:
	.asciz	"hash0"
	.size	.Lconst.156, 6

	.type	go..C269,@object
	.section	.rodata.go..C269,"a",@progbits
	.p2align	3
go..C269:
	.quad	.Lconst.156
	.quad	5
	.size	go..C269, 16

	.type	uint32..d,@object
	.section	.rodata.uint32..d,"aG",@progbits,uint32..d,comdat
	.weak	uint32..d
	.p2align	4
uint32..d:
	.quad	4
	.quad	0
	.long	278357906
	.byte	138
	.byte	4
	.byte	4
	.zero	1
	.quad	runtime.memhash32..f
	.quad	runtime.memequal32..f
	.quad	0
	.quad	go..C270
	.quad	go..C273
	.quad	type...1uint32
	.size	uint32..d, 72

	.type	.Lconst.157,@object
	.section	.rodata..Lconst.157,"a",@progbits
.Lconst.157:
	.asciz	"uint32"
	.size	.Lconst.157, 7

	.type	go..C270,@object
	.section	.rodata.go..C270,"a",@progbits
	.p2align	3
go..C270:
	.quad	.Lconst.157
	.quad	6
	.size	go..C270, 16

	.type	go..C271,@object
	.section	.rodata.go..C271,"a",@progbits
	.p2align	3
go..C271:
	.quad	.Lconst.157
	.quad	6
	.size	go..C271, 16

	.type	go..C272,@object
	.section	.bss.go..C272,"aw",@nobits
	.p2align	4
go..C272:
	.zero	40
	.size	go..C272, 40

	.type	go..C273,@object
	.section	.rodata.go..C273,"a",@progbits
	.p2align	4
go..C273:
	.quad	go..C271
	.quad	0
	.quad	go..C272
	.quad	0
	.quad	0
	.size	go..C273, 40

	.type	type...1uint32,@object
	.section	.rodata.type...1uint32,"aG",@progbits,type...1uint32,comdat
	.weak	type...1uint32
	.p2align	4
type...1uint32:
	.quad	8
	.quad	8
	.long	158759209
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C274
	.quad	0
	.quad	0
	.quad	uint32..d
	.size	type...1uint32, 80

	.type	.Lconst.158,@object
	.section	.rodata..Lconst.158,"a",@progbits
.Lconst.158:
	.asciz	"*uint32"
	.size	.Lconst.158, 8

	.type	go..C274,@object
	.section	.rodata.go..C274,"a",@progbits
	.p2align	3
go..C274:
	.quad	.Lconst.158
	.quad	7
	.size	go..C274, 16

	.type	.Lconst.159,@object
	.section	.rodata..Lconst.159,"a",@progbits
.Lconst.159:
	.asciz	"buckets"
	.size	.Lconst.159, 8

	.type	go..C275,@object
	.section	.rodata.go..C275,"a",@progbits
	.p2align	3
go..C275:
	.quad	.Lconst.159
	.quad	7
	.size	go..C275, 16

	.type	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Session.2overflow.0.1.4void.5.5,@object
	.section	.rodata.type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Session.2overflow.0.1.4void.5.5,"aG",@progbits,type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Session.2overflow.0.1.4void.5.5,comdat
	.weak	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Session.2overflow.0.1.4void.5.5
	.p2align	4
type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Session.2overflow.0.1.4void.5.5:
	.quad	8
	.quad	8
	.long	2819274825
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C276
	.quad	0
	.quad	0
	.quad	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Session.2overflow.0.1.4void.5.5
	.size	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Session.2overflow.0.1.4void.5.5, 80

	.type	.Lconst.160,@object
	.section	.rodata..Lconst.160,"a",@progbits
.Lconst.160:
	.asciz	"*struct { topbits [8]uint8; keys [8]string; values [8]*\tcommand_line_arguments\tdaemon.Session; overflow * }"
	.size	.Lconst.160, 108

	.type	go..C276,@object
	.section	.rodata.go..C276,"a",@progbits
	.p2align	3
go..C276:
	.quad	.Lconst.160
	.quad	107
	.size	go..C276, 16

	.type	.Lconst.161,@object
	.section	.rodata..Lconst.161,"a",@progbits
.Lconst.161:
	.asciz	"oldbuckets"
	.size	.Lconst.161, 11

	.type	go..C277,@object
	.section	.rodata.go..C277,"a",@progbits
	.p2align	3
go..C277:
	.quad	.Lconst.161
	.quad	10
	.size	go..C277, 16

	.type	.Lconst.162,@object
	.section	.rodata..Lconst.162,"a",@progbits
.Lconst.162:
	.asciz	"nevacuate"
	.size	.Lconst.162, 10

	.type	go..C278,@object
	.section	.rodata.go..C278,"a",@progbits
	.p2align	3
go..C278:
	.quad	.Lconst.162
	.quad	9
	.size	go..C278, 16

	.type	uintptr..d,@object
	.section	.rodata.uintptr..d,"aG",@progbits,uintptr..d,comdat
	.weak	uintptr..d
	.p2align	4
uintptr..d:
	.quad	8
	.quad	0
	.long	2806773995
	.byte	140
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	0
	.quad	go..C279
	.quad	go..C282
	.quad	type...1uintptr
	.size	uintptr..d, 72

	.type	.Lconst.163,@object
	.section	.rodata..Lconst.163,"a",@progbits
.Lconst.163:
	.asciz	"uintptr"
	.size	.Lconst.163, 8

	.type	go..C279,@object
	.section	.rodata.go..C279,"a",@progbits
	.p2align	3
go..C279:
	.quad	.Lconst.163
	.quad	7
	.size	go..C279, 16

	.type	go..C280,@object
	.section	.rodata.go..C280,"a",@progbits
	.p2align	3
go..C280:
	.quad	.Lconst.163
	.quad	7
	.size	go..C280, 16

	.type	go..C281,@object
	.section	.bss.go..C281,"aw",@nobits
	.p2align	4
go..C281:
	.zero	40
	.size	go..C281, 40

	.type	go..C282,@object
	.section	.rodata.go..C282,"a",@progbits
	.p2align	4
go..C282:
	.quad	go..C280
	.quad	0
	.quad	go..C281
	.quad	0
	.quad	0
	.size	go..C282, 40

	.type	type...1uintptr,@object
	.section	.rodata.type...1uintptr,"aG",@progbits,type...1uintptr,comdat
	.weak	type...1uintptr
	.p2align	4
type...1uintptr:
	.quad	8
	.quad	8
	.long	1958710969
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C283
	.quad	0
	.quad	0
	.quad	uintptr..d
	.size	type...1uintptr, 80

	.type	.Lconst.164,@object
	.section	.rodata..Lconst.164,"a",@progbits
.Lconst.164:
	.asciz	"*uintptr"
	.size	.Lconst.164, 9

	.type	go..C283,@object
	.section	.rodata.go..C283,"a",@progbits
	.p2align	3
go..C283:
	.quad	.Lconst.164
	.quad	8
	.size	go..C283, 16

	.type	.Lconst.165,@object
	.section	.rodata..Lconst.165,"a",@progbits
.Lconst.165:
	.asciz	"extra"
	.size	.Lconst.165, 6

	.type	go..C284,@object
	.section	.rodata.go..C284,"a",@progbits
	.p2align	3
go..C284:
	.quad	.Lconst.165
	.quad	5
	.size	go..C284, 16

	.type	go..C285,@object
	.section	.data.go..C285,"aw",@progbits
	.p2align	4
go..C285:
	.quad	go..C255
	.quad	0
	.quad	int..d
	.quad	0
	.quad	0
	.quad	go..C261
	.quad	0
	.quad	uint8..d
	.quad	0
	.quad	16
	.quad	go..C262
	.quad	0
	.quad	uint8..d
	.quad	0
	.quad	18
	.quad	go..C263
	.quad	0
	.quad	uint16..d
	.quad	0
	.quad	20
	.quad	go..C269
	.quad	0
	.quad	uint32..d
	.quad	0
	.quad	24
	.quad	go..C275
	.quad	0
	.quad	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Session.2overflow.0.1.4void.5.5
	.quad	0
	.quad	32
	.quad	go..C277
	.quad	0
	.quad	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Session.2overflow.0.1.4void.5.5
	.quad	0
	.quad	48
	.quad	go..C278
	.quad	0
	.quad	uintptr..d
	.quad	0
	.quad	64
	.quad	go..C284
	.quad	0
	.quad	unsafe.Pointer..d
	.quad	0
	.quad	80
	.size	go..C285, 360

	.type	go..C286,@object
	.section	.data.go..C286,"aw",@progbits
	.p2align	4
go..C286:
	.quad	go..C235
	.quad	go..C236
	.quad	string..d
	.quad	0
	.quad	0
	.quad	go..C237
	.quad	go..C238
	.quad	string..d
	.quad	0
	.quad	32
	.quad	go..C239
	.quad	go..C240
	.quad	github_com_spolu_warp.Mode..d
	.quad	0
	.quad	64
	.quad	go..C241
	.quad	go..C242
	.quad	type..map.6string.7.1command_line_arguments.Session
	.quad	0
	.quad	80
	.size	go..C286, 160

	.type	go..C287,@object
	.section	.rodata.go..C287,"a",@progbits
	.p2align	3
go..C287:
	.quad	.Lconst.19
	.quad	7
	.size	go..C287, 16

	.type	go..C288,@object
	.section	.rodata.go..C288,"a",@progbits
	.p2align	3
go..C288:
	.quad	.Lconst.2
	.quad	22
	.size	go..C288, 16

	.type	go..C289,@object
	.section	.data.go..C289,"aw",@progbits
	.p2align	4
go..C289:
	.quad	go..C221
	.quad	0
	.quad	command_line_arguments.UserState..d
	.quad	0
	.quad	1
	.quad	go..C287
	.quad	go..C288
	.quad	type...1command_line_arguments.Session
	.quad	0
	.quad	96
	.size	go..C289, 80

	.type	.Lconst.166,@object
	.section	.rodata..Lconst.166,"a",@progbits
.Lconst.166:
	.asciz	"clients"
	.size	.Lconst.166, 8

	.type	go..C290,@object
	.section	.rodata.go..C290,"a",@progbits
	.p2align	3
go..C290:
	.quad	.Lconst.166
	.quad	7
	.size	go..C290, 16

	.type	go..C291,@object
	.section	.rodata.go..C291,"a",@progbits
	.p2align	3
go..C291:
	.quad	.Lconst.2
	.quad	22
	.size	go..C291, 16

	.type	type..map.6string.7.1command_line_arguments.UserState,@object
	.section	.rodata.type..map.6string.7.1command_line_arguments.UserState,"aG",@progbits,type..map.6string.7.1command_line_arguments.UserState,comdat
	.weak	type..map.6string.7.1command_line_arguments.UserState
	.p2align	4
type..map.6string.7.1command_line_arguments.UserState:
	.quad	8
	.quad	8
	.long	793469363
	.byte	21
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C292
	.quad	0
	.quad	0
	.quad	string..d
	.quad	type...1command_line_arguments.UserState
	.quad	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.UserState.2overflow.0.1.4void.5.5
	.quad	type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.UserState.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.UserState.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5
	.byte	16
	.byte	0
	.byte	8
	.byte	0
	.short	208
	.byte	1
	.byte	1
	.size	type..map.6string.7.1command_line_arguments.UserState, 112

	.type	.Lconst.167,@object
	.section	.rodata..Lconst.167,"a",@progbits
.Lconst.167:
	.asciz	"map[string]*\tcommand_line_arguments\tdaemon.UserState"
	.size	.Lconst.167, 53

	.type	go..C292,@object
	.section	.rodata.go..C292,"a",@progbits
	.p2align	3
go..C292:
	.quad	.Lconst.167
	.quad	52
	.size	go..C292, 16

	.type	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.UserState.2overflow.0.1.4void.5.5,@object
	.section	.rodata.type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.UserState.2overflow.0.1.4void.5.5,"aG",@progbits,type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.UserState.2overflow.0.1.4void.5.5,comdat
	.weak	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.UserState.2overflow.0.1.4void.5.5
	.p2align	4
type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.UserState.2overflow.0.1.4void.5.5:
	.quad	208
	.quad	208
	.long	3887373188
	.byte	25
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..kwkEGba
	.quad	go..C293
	.quad	0
	.quad	0
	.quad	go..C300
	.quad	4
	.quad	4
	.size	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.UserState.2overflow.0.1.4void.5.5, 96

	.type	.Lconst.168,@object
	.section	.rodata..Lconst.168,"a",@progbits
.Lconst.168:
	.asciz	"struct { topbits [8]uint8; keys [8]string; values [8]*\tcommand_line_arguments\tdaemon.UserState; overflow * }"
	.size	.Lconst.168, 109

	.type	go..C293,@object
	.section	.rodata.go..C293,"a",@progbits
	.p2align	3
go..C293:
	.quad	.Lconst.168
	.quad	108
	.size	go..C293, 16

	.type	go..C294,@object
	.section	.rodata.go..C294,"a",@progbits
	.p2align	3
go..C294:
	.quad	.Lconst.139
	.quad	7
	.size	go..C294, 16

	.type	go..C295,@object
	.section	.rodata.go..C295,"a",@progbits
	.p2align	3
go..C295:
	.quad	.Lconst.141
	.quad	4
	.size	go..C295, 16

	.type	go..C296,@object
	.section	.rodata.go..C296,"a",@progbits
	.p2align	3
go..C296:
	.quad	.Lconst.144
	.quad	6
	.size	go..C296, 16

	.type	type...68x.7.1command_line_arguments.UserState,@object
	.section	.rodata.type...68x.7.1command_line_arguments.UserState,"aG",@progbits,type...68x.7.1command_line_arguments.UserState,comdat
	.weak	type...68x.7.1command_line_arguments.UserState
	.p2align	4
type...68x.7.1command_line_arguments.UserState:
	.quad	64
	.quad	64
	.long	1289877025
	.byte	17
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..Gh
	.quad	go..C297
	.quad	0
	.quad	0
	.quad	type...1command_line_arguments.UserState
	.quad	type...6.7.1command_line_arguments.UserState
	.quad	8
	.size	type...68x.7.1command_line_arguments.UserState, 96

	.type	.Lconst.169,@object
	.section	.rodata..Lconst.169,"a",@progbits
.Lconst.169:
	.asciz	"[8]*\tcommand_line_arguments\tdaemon.UserState"
	.size	.Lconst.169, 45

	.type	go..C297,@object
	.section	.rodata.go..C297,"a",@progbits
	.p2align	3
go..C297:
	.quad	.Lconst.169
	.quad	44
	.size	go..C297, 16

	.type	type...6.7.1command_line_arguments.UserState,@object
	.section	.rodata.type...6.7.1command_line_arguments.UserState,"aG",@progbits,type...6.7.1command_line_arguments.UserState,comdat
	.weak	type...6.7.1command_line_arguments.UserState
	.p2align	4
type...6.7.1command_line_arguments.UserState:
	.quad	24
	.quad	8
	.long	2792422167
	.byte	23
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C298
	.quad	0
	.quad	0
	.quad	type...1command_line_arguments.UserState
	.size	type...6.7.1command_line_arguments.UserState, 80

	.type	.Lconst.170,@object
	.section	.rodata..Lconst.170,"a",@progbits
.Lconst.170:
	.asciz	"[]*\tcommand_line_arguments\tdaemon.UserState"
	.size	.Lconst.170, 44

	.type	go..C298,@object
	.section	.rodata.go..C298,"a",@progbits
	.p2align	3
go..C298:
	.quad	.Lconst.170
	.quad	43
	.size	go..C298, 16

	.type	go..C299,@object
	.section	.rodata.go..C299,"a",@progbits
	.p2align	3
go..C299:
	.quad	.Lconst.146
	.quad	8
	.size	go..C299, 16

	.type	go..C300,@object
	.section	.data.go..C300,"aw",@progbits
	.p2align	4
go..C300:
	.quad	go..C294
	.quad	0
	.quad	type...68x.7uint8
	.quad	0
	.quad	0
	.quad	go..C295
	.quad	0
	.quad	type...68x.7string
	.quad	0
	.quad	16
	.quad	go..C296
	.quad	0
	.quad	type...68x.7.1command_line_arguments.UserState
	.quad	0
	.quad	272
	.quad	go..C299
	.quad	0
	.quad	unsafe.Pointer..d
	.quad	0
	.quad	400
	.size	go..C300, 160

	.type	type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.UserState.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.UserState.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5,@object
	.section	.rodata.type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.UserState.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.UserState.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5,"aG",@progbits,type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.UserState.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.UserState.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5,comdat
	.weak	type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.UserState.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.UserState.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5
	.p2align	4
type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.UserState.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.UserState.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5:
	.quad	48
	.quad	48
	.long	1044617700
	.byte	25
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..mb
	.quad	go..C301
	.quad	0
	.quad	0
	.quad	go..C312
	.quad	9
	.quad	9
	.size	type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.UserState.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.UserState.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5, 96

	.type	.Lconst.171,@object
	.section	.rodata..Lconst.171,"a",@progbits
.Lconst.171:
	.asciz	"struct { count int; flags uint8; B uint8; noverflow uint16; hash0 uint32; buckets *struct { topbits [8]uint8; keys [8]string; values [8]*\tcommand_line_arguments\tdaemon.UserState; overflow * }; oldbuckets *struct { topbits [8]uint8; keys [8]string; values [8]*\tcommand_line_arguments\tdaemon.UserState; overflow * }; nevacuate uintptr; extra * }"
	.size	.Lconst.171, 344

	.type	go..C301,@object
	.section	.rodata.go..C301,"a",@progbits
	.p2align	3
go..C301:
	.quad	.Lconst.171
	.quad	343
	.size	go..C301, 16

	.type	go..C302,@object
	.section	.rodata.go..C302,"a",@progbits
	.p2align	3
go..C302:
	.quad	.Lconst.148
	.quad	5
	.size	go..C302, 16

	.type	go..C303,@object
	.section	.rodata.go..C303,"a",@progbits
	.p2align	3
go..C303:
	.quad	.Lconst.151
	.quad	5
	.size	go..C303, 16

	.type	go..C304,@object
	.section	.rodata.go..C304,"a",@progbits
	.p2align	3
go..C304:
	.quad	.Lconst.152
	.quad	1
	.size	go..C304, 16

	.type	go..C305,@object
	.section	.rodata.go..C305,"a",@progbits
	.p2align	3
go..C305:
	.quad	.Lconst.153
	.quad	9
	.size	go..C305, 16

	.type	go..C306,@object
	.section	.rodata.go..C306,"a",@progbits
	.p2align	3
go..C306:
	.quad	.Lconst.156
	.quad	5
	.size	go..C306, 16

	.type	go..C307,@object
	.section	.rodata.go..C307,"a",@progbits
	.p2align	3
go..C307:
	.quad	.Lconst.159
	.quad	7
	.size	go..C307, 16

	.type	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.UserState.2overflow.0.1.4void.5.5,@object
	.section	.rodata.type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.UserState.2overflow.0.1.4void.5.5,"aG",@progbits,type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.UserState.2overflow.0.1.4void.5.5,comdat
	.weak	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.UserState.2overflow.0.1.4void.5.5
	.p2align	4
type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.UserState.2overflow.0.1.4void.5.5:
	.quad	8
	.quad	8
	.long	2068428873
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C308
	.quad	0
	.quad	0
	.quad	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.UserState.2overflow.0.1.4void.5.5
	.size	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.UserState.2overflow.0.1.4void.5.5, 80

	.type	.Lconst.172,@object
	.section	.rodata..Lconst.172,"a",@progbits
.Lconst.172:
	.asciz	"*struct { topbits [8]uint8; keys [8]string; values [8]*\tcommand_line_arguments\tdaemon.UserState; overflow * }"
	.size	.Lconst.172, 110

	.type	go..C308,@object
	.section	.rodata.go..C308,"a",@progbits
	.p2align	3
go..C308:
	.quad	.Lconst.172
	.quad	109
	.size	go..C308, 16

	.type	go..C309,@object
	.section	.rodata.go..C309,"a",@progbits
	.p2align	3
go..C309:
	.quad	.Lconst.161
	.quad	10
	.size	go..C309, 16

	.type	go..C310,@object
	.section	.rodata.go..C310,"a",@progbits
	.p2align	3
go..C310:
	.quad	.Lconst.162
	.quad	9
	.size	go..C310, 16

	.type	go..C311,@object
	.section	.rodata.go..C311,"a",@progbits
	.p2align	3
go..C311:
	.quad	.Lconst.165
	.quad	5
	.size	go..C311, 16

	.type	go..C312,@object
	.section	.data.go..C312,"aw",@progbits
	.p2align	4
go..C312:
	.quad	go..C302
	.quad	0
	.quad	int..d
	.quad	0
	.quad	0
	.quad	go..C303
	.quad	0
	.quad	uint8..d
	.quad	0
	.quad	16
	.quad	go..C304
	.quad	0
	.quad	uint8..d
	.quad	0
	.quad	18
	.quad	go..C305
	.quad	0
	.quad	uint16..d
	.quad	0
	.quad	20
	.quad	go..C306
	.quad	0
	.quad	uint32..d
	.quad	0
	.quad	24
	.quad	go..C307
	.quad	0
	.quad	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.UserState.2overflow.0.1.4void.5.5
	.quad	0
	.quad	32
	.quad	go..C309
	.quad	0
	.quad	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.UserState.2overflow.0.1.4void.5.5
	.quad	0
	.quad	48
	.quad	go..C310
	.quad	0
	.quad	uintptr..d
	.quad	0
	.quad	64
	.quad	go..C311
	.quad	0
	.quad	unsafe.Pointer..d
	.quad	0
	.quad	80
	.size	go..C312, 360

	.type	.Lconst.173,@object
	.section	.rodata..Lconst.173,"a",@progbits
.Lconst.173:
	.asciz	"data"
	.size	.Lconst.173, 5

	.type	go..C313,@object
	.section	.rodata.go..C313,"a",@progbits
	.p2align	3
go..C313:
	.quad	.Lconst.173
	.quad	4
	.size	go..C313, 16

	.type	go..C314,@object
	.section	.rodata.go..C314,"a",@progbits
	.p2align	3
go..C314:
	.quad	.Lconst.2
	.quad	22
	.size	go..C314, 16

	.type	type..chan.0.6.7uint8,@object
	.section	.rodata.type..chan.0.6.7uint8,"aG",@progbits,type..chan.0.6.7uint8,comdat
	.weak	type..chan.0.6.7uint8
	.p2align	4
type..chan.0.6.7uint8:
	.quad	8
	.quad	8
	.long	4173260039
	.byte	18
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C315
	.quad	0
	.quad	0
	.quad	type...6.7uint8
	.quad	3
	.size	type..chan.0.6.7uint8, 88

	.type	.Lconst.174,@object
	.section	.rodata..Lconst.174,"a",@progbits
.Lconst.174:
	.asciz	"chan []uint8"
	.size	.Lconst.174, 13

	.type	go..C315,@object
	.section	.rodata.go..C315,"a",@progbits
	.p2align	3
go..C315:
	.quad	.Lconst.174
	.quad	12
	.size	go..C315, 16

	.type	go..C316,@object
	.section	.rodata.go..C316,"a",@progbits
	.p2align	3
go..C316:
	.quad	.Lconst.37
	.quad	5
	.size	go..C316, 16

	.type	go..C317,@object
	.section	.rodata.go..C317,"a",@progbits
	.p2align	3
go..C317:
	.quad	.Lconst.2
	.quad	22
	.size	go..C317, 16

	.type	go..C318,@object
	.section	.data.go..C318,"aw",@progbits
	.p2align	4
go..C318:
	.quad	go..C199
	.quad	go..C200
	.quad	string..d
	.quad	0
	.quad	0
	.quad	go..C201
	.quad	go..C202
	.quad	github_com_spolu_warp.Size..d
	.quad	0
	.quad	32
	.quad	go..C203
	.quad	go..C204
	.quad	type...1command_line_arguments.HostState
	.quad	0
	.quad	64
	.quad	go..C290
	.quad	go..C291
	.quad	type..map.6string.7.1command_line_arguments.UserState
	.quad	0
	.quad	80
	.quad	go..C313
	.quad	go..C314
	.quad	type..chan.0.6.7uint8
	.quad	0
	.quad	96
	.quad	go..C316
	.quad	go..C317
	.quad	type...1sync.Mutex
	.quad	0
	.quad	112
	.size	go..C318, 240

	.type	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Warp.2overflow.0.1.4void.5.5,@object
	.section	.rodata.type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Warp.2overflow.0.1.4void.5.5,"aG",@progbits,type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Warp.2overflow.0.1.4void.5.5,comdat
	.weak	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Warp.2overflow.0.1.4void.5.5
	.p2align	4
type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Warp.2overflow.0.1.4void.5.5:
	.quad	208
	.quad	208
	.long	2028187524
	.byte	25
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..kwkEGba
	.quad	go..C319
	.quad	0
	.quad	0
	.quad	go..C326
	.quad	4
	.quad	4
	.size	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Warp.2overflow.0.1.4void.5.5, 96

	.type	.Lconst.175,@object
	.section	.rodata..Lconst.175,"a",@progbits
.Lconst.175:
	.asciz	"struct { topbits [8]uint8; keys [8]string; values [8]*\tcommand_line_arguments\tdaemon.Warp; overflow * }"
	.size	.Lconst.175, 104

	.type	go..C319,@object
	.section	.rodata.go..C319,"a",@progbits
	.p2align	3
go..C319:
	.quad	.Lconst.175
	.quad	103
	.size	go..C319, 16

	.type	go..C320,@object
	.section	.rodata.go..C320,"a",@progbits
	.p2align	3
go..C320:
	.quad	.Lconst.139
	.quad	7
	.size	go..C320, 16

	.type	go..C321,@object
	.section	.rodata.go..C321,"a",@progbits
	.p2align	3
go..C321:
	.quad	.Lconst.141
	.quad	4
	.size	go..C321, 16

	.type	go..C322,@object
	.section	.rodata.go..C322,"a",@progbits
	.p2align	3
go..C322:
	.quad	.Lconst.144
	.quad	6
	.size	go..C322, 16

	.type	type...68x.7.1command_line_arguments.Warp,@object
	.section	.rodata.type...68x.7.1command_line_arguments.Warp,"aG",@progbits,type...68x.7.1command_line_arguments.Warp,comdat
	.weak	type...68x.7.1command_line_arguments.Warp
	.p2align	4
type...68x.7.1command_line_arguments.Warp:
	.quad	64
	.quad	64
	.long	1710548833
	.byte	17
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..Gh
	.quad	go..C323
	.quad	0
	.quad	0
	.quad	type...1command_line_arguments.Warp
	.quad	type...6.7.1command_line_arguments.Warp
	.quad	8
	.size	type...68x.7.1command_line_arguments.Warp, 96

	.type	.Lconst.176,@object
	.section	.rodata..Lconst.176,"a",@progbits
.Lconst.176:
	.asciz	"[8]*\tcommand_line_arguments\tdaemon.Warp"
	.size	.Lconst.176, 40

	.type	go..C323,@object
	.section	.rodata.go..C323,"a",@progbits
	.p2align	3
go..C323:
	.quad	.Lconst.176
	.quad	39
	.size	go..C323, 16

	.type	type...6.7.1command_line_arguments.Warp,@object
	.section	.rodata.type...6.7.1command_line_arguments.Warp,"aG",@progbits,type...6.7.1command_line_arguments.Warp,comdat
	.weak	type...6.7.1command_line_arguments.Warp
	.p2align	4
type...6.7.1command_line_arguments.Warp:
	.quad	24
	.quad	8
	.long	3002758071
	.byte	23
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C324
	.quad	0
	.quad	0
	.quad	type...1command_line_arguments.Warp
	.size	type...6.7.1command_line_arguments.Warp, 80

	.type	.Lconst.177,@object
	.section	.rodata..Lconst.177,"a",@progbits
.Lconst.177:
	.asciz	"[]*\tcommand_line_arguments\tdaemon.Warp"
	.size	.Lconst.177, 39

	.type	go..C324,@object
	.section	.rodata.go..C324,"a",@progbits
	.p2align	3
go..C324:
	.quad	.Lconst.177
	.quad	38
	.size	go..C324, 16

	.type	go..C325,@object
	.section	.rodata.go..C325,"a",@progbits
	.p2align	3
go..C325:
	.quad	.Lconst.146
	.quad	8
	.size	go..C325, 16

	.type	go..C326,@object
	.section	.data.go..C326,"aw",@progbits
	.p2align	4
go..C326:
	.quad	go..C320
	.quad	0
	.quad	type...68x.7uint8
	.quad	0
	.quad	0
	.quad	go..C321
	.quad	0
	.quad	type...68x.7string
	.quad	0
	.quad	16
	.quad	go..C322
	.quad	0
	.quad	type...68x.7.1command_line_arguments.Warp
	.quad	0
	.quad	272
	.quad	go..C325
	.quad	0
	.quad	unsafe.Pointer..d
	.quad	0
	.quad	400
	.size	go..C326, 160

	.type	type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Warp.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Warp.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5,@object
	.section	.rodata.type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Warp.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Warp.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5,"aG",@progbits,type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Warp.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Warp.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5,comdat
	.weak	type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Warp.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Warp.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5
	.p2align	4
type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Warp.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Warp.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5:
	.quad	48
	.quad	48
	.long	1488689636
	.byte	25
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..mb
	.quad	go..C327
	.quad	0
	.quad	0
	.quad	go..C338
	.quad	9
	.quad	9
	.size	type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Warp.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Warp.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5, 96

	.type	.Lconst.178,@object
	.section	.rodata..Lconst.178,"a",@progbits
.Lconst.178:
	.asciz	"struct { count int; flags uint8; B uint8; noverflow uint16; hash0 uint32; buckets *struct { topbits [8]uint8; keys [8]string; values [8]*\tcommand_line_arguments\tdaemon.Warp; overflow * }; oldbuckets *struct { topbits [8]uint8; keys [8]string; values [8]*\tcommand_line_arguments\tdaemon.Warp; overflow * }; nevacuate uintptr; extra * }"
	.size	.Lconst.178, 334

	.type	go..C327,@object
	.section	.rodata.go..C327,"a",@progbits
	.p2align	3
go..C327:
	.quad	.Lconst.178
	.quad	333
	.size	go..C327, 16

	.type	go..C328,@object
	.section	.rodata.go..C328,"a",@progbits
	.p2align	3
go..C328:
	.quad	.Lconst.148
	.quad	5
	.size	go..C328, 16

	.type	go..C329,@object
	.section	.rodata.go..C329,"a",@progbits
	.p2align	3
go..C329:
	.quad	.Lconst.151
	.quad	5
	.size	go..C329, 16

	.type	go..C330,@object
	.section	.rodata.go..C330,"a",@progbits
	.p2align	3
go..C330:
	.quad	.Lconst.152
	.quad	1
	.size	go..C330, 16

	.type	go..C331,@object
	.section	.rodata.go..C331,"a",@progbits
	.p2align	3
go..C331:
	.quad	.Lconst.153
	.quad	9
	.size	go..C331, 16

	.type	go..C332,@object
	.section	.rodata.go..C332,"a",@progbits
	.p2align	3
go..C332:
	.quad	.Lconst.156
	.quad	5
	.size	go..C332, 16

	.type	go..C333,@object
	.section	.rodata.go..C333,"a",@progbits
	.p2align	3
go..C333:
	.quad	.Lconst.159
	.quad	7
	.size	go..C333, 16

	.type	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Warp.2overflow.0.1.4void.5.5,@object
	.section	.rodata.type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Warp.2overflow.0.1.4void.5.5,"aG",@progbits,type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Warp.2overflow.0.1.4void.5.5,comdat
	.weak	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Warp.2overflow.0.1.4void.5.5
	.p2align	4
type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Warp.2overflow.0.1.4void.5.5:
	.quad	8
	.quad	8
	.long	2386229321
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C334
	.quad	0
	.quad	0
	.quad	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Warp.2overflow.0.1.4void.5.5
	.size	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Warp.2overflow.0.1.4void.5.5, 80

	.type	.Lconst.179,@object
	.section	.rodata..Lconst.179,"a",@progbits
.Lconst.179:
	.asciz	"*struct { topbits [8]uint8; keys [8]string; values [8]*\tcommand_line_arguments\tdaemon.Warp; overflow * }"
	.size	.Lconst.179, 105

	.type	go..C334,@object
	.section	.rodata.go..C334,"a",@progbits
	.p2align	3
go..C334:
	.quad	.Lconst.179
	.quad	104
	.size	go..C334, 16

	.type	go..C335,@object
	.section	.rodata.go..C335,"a",@progbits
	.p2align	3
go..C335:
	.quad	.Lconst.161
	.quad	10
	.size	go..C335, 16

	.type	go..C336,@object
	.section	.rodata.go..C336,"a",@progbits
	.p2align	3
go..C336:
	.quad	.Lconst.162
	.quad	9
	.size	go..C336, 16

	.type	go..C337,@object
	.section	.rodata.go..C337,"a",@progbits
	.p2align	3
go..C337:
	.quad	.Lconst.165
	.quad	5
	.size	go..C337, 16

	.type	go..C338,@object
	.section	.data.go..C338,"aw",@progbits
	.p2align	4
go..C338:
	.quad	go..C328
	.quad	0
	.quad	int..d
	.quad	0
	.quad	0
	.quad	go..C329
	.quad	0
	.quad	uint8..d
	.quad	0
	.quad	16
	.quad	go..C330
	.quad	0
	.quad	uint8..d
	.quad	0
	.quad	18
	.quad	go..C331
	.quad	0
	.quad	uint16..d
	.quad	0
	.quad	20
	.quad	go..C332
	.quad	0
	.quad	uint32..d
	.quad	0
	.quad	24
	.quad	go..C333
	.quad	0
	.quad	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Warp.2overflow.0.1.4void.5.5
	.quad	0
	.quad	32
	.quad	go..C335
	.quad	0
	.quad	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Warp.2overflow.0.1.4void.5.5
	.quad	0
	.quad	48
	.quad	go..C336
	.quad	0
	.quad	uintptr..d
	.quad	0
	.quad	64
	.quad	go..C337
	.quad	0
	.quad	unsafe.Pointer..d
	.quad	0
	.quad	80
	.size	go..C338, 360

	.type	go..C339,@object
	.section	.rodata.go..C339,"a",@progbits
	.p2align	3
go..C339:
	.quad	.Lconst.37
	.quad	5
	.size	go..C339, 16

	.type	go..C340,@object
	.section	.rodata.go..C340,"a",@progbits
	.p2align	3
go..C340:
	.quad	.Lconst.2
	.quad	22
	.size	go..C340, 16

	.type	go..C341,@object
	.section	.data.go..C341,"aw",@progbits
	.p2align	4
go..C341:
	.quad	go..C133
	.quad	go..C134
	.quad	string..d
	.quad	0
	.quad	0
	.quad	go..C135
	.quad	go..C136
	.quad	string..d
	.quad	0
	.quad	32
	.quad	go..C137
	.quad	go..C138
	.quad	string..d
	.quad	0
	.quad	64
	.quad	go..C139
	.quad	go..C140
	.quad	type..map.6string.7.1command_line_arguments.Warp
	.quad	0
	.quad	96
	.quad	go..C339
	.quad	go..C340
	.quad	type...1sync.Mutex
	.quad	0
	.quad	112
	.size	go..C341, 200

	.type	command_line_arguments.NewSrv..f,@object
	.section	.rodata.command_line_arguments.NewSrv..f,"a",@progbits
	.globl	command_line_arguments.NewSrv..f
	.p2align	3
command_line_arguments.NewSrv..f:
	.quad	command_line_arguments.NewSrv
	.size	command_line_arguments.NewSrv..f, 8

	.type	type...61x.7crypto_tls.Certificate,@object
	.section	.rodata.type...61x.7crypto_tls.Certificate,"aG",@progbits,type...61x.7crypto_tls.Certificate,comdat
	.weak	type...61x.7crypto_tls.Certificate
	.p2align	4
type...61x.7crypto_tls.Certificate:
	.quad	96
	.quad	96
	.long	2692541521
	.byte	17
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..Ajca
	.quad	go..C342
	.quad	0
	.quad	0
	.quad	crypto_tls.Certificate..d
	.quad	type...6.7crypto_tls.Certificate
	.quad	1
	.size	type...61x.7crypto_tls.Certificate, 96

	.type	gcbits..Ajca,@object
	.section	.rodata.gcbits..Ajca,"aG",@progbits,gcbits..Ajca,comdat
	.weak	gcbits..Ajca
gcbits..Ajca:
	.ascii	"9\t"
	.size	gcbits..Ajca, 2

	.type	.Lconst.182,@object
	.section	.rodata..Lconst.182,"a",@progbits
.Lconst.182:
	.asciz	"[1]\tcrypto_tls\ttls.Certificate"
	.size	.Lconst.182, 31

	.type	go..C342,@object
	.section	.rodata.go..C342,"a",@progbits
	.p2align	3
go..C342:
	.quad	.Lconst.182
	.quad	30
	.size	go..C342, 16

	.type	type...6.7crypto_tls.Certificate,@object
	.section	.rodata.type...6.7crypto_tls.Certificate,"aG",@progbits,type...6.7crypto_tls.Certificate,comdat
	.weak	type...6.7crypto_tls.Certificate
	.p2align	4
type...6.7crypto_tls.Certificate:
	.quad	24
	.quad	8
	.long	3493754415
	.byte	23
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C343
	.quad	0
	.quad	0
	.quad	crypto_tls.Certificate..d
	.size	type...6.7crypto_tls.Certificate, 80

	.type	.Lconst.183,@object
	.section	.rodata..Lconst.183,"a",@progbits
.Lconst.183:
	.asciz	"[]\tcrypto_tls\ttls.Certificate"
	.size	.Lconst.183, 30

	.type	go..C343,@object
	.section	.rodata.go..C343,"a",@progbits
	.p2align	3
go..C343:
	.quad	.Lconst.183
	.quad	29
	.size	go..C343, 16

	.type	type...64x.7uint16,@object
	.section	.rodata.type...64x.7uint16,"aG",@progbits,type...64x.7uint16,comdat
	.weak	type...64x.7uint16
	.p2align	4
type...64x.7uint16:
	.quad	8
	.quad	0
	.long	153464591
	.byte	145
	.byte	2
	.byte	2
	.zero	1
	.quad	0
	.quad	0
	.quad	0
	.quad	go..C344
	.quad	0
	.quad	0
	.quad	uint16..d
	.quad	type...6.7uint16
	.quad	4
	.size	type...64x.7uint16, 96

	.type	.Lconst.184,@object
	.section	.rodata..Lconst.184,"a",@progbits
.Lconst.184:
	.asciz	"[4]uint16"
	.size	.Lconst.184, 10

	.type	go..C344,@object
	.section	.rodata.go..C344,"a",@progbits
	.p2align	3
go..C344:
	.quad	.Lconst.184
	.quad	9
	.size	go..C344, 16

	.type	type...6.7uint16,@object
	.section	.rodata.type...6.7uint16,"aG",@progbits,type...6.7uint16,comdat
	.weak	type...6.7uint16
	.p2align	4
type...6.7uint16:
	.quad	24
	.quad	8
	.long	76732302
	.byte	23
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C345
	.quad	0
	.quad	0
	.quad	uint16..d
	.size	type...6.7uint16, 80

	.type	.Lconst.185,@object
	.section	.rodata..Lconst.185,"a",@progbits
.Lconst.185:
	.asciz	"[]uint16"
	.size	.Lconst.185, 9

	.type	go..C345,@object
	.section	.rodata.go..C345,"a",@progbits
	.p2align	3
go..C345:
	.quad	.Lconst.185
	.quad	8
	.size	go..C345, 16

	.type	type...63x.7crypto_tls.CurveID,@object
	.section	.rodata.type...63x.7crypto_tls.CurveID,"aG",@progbits,type...63x.7crypto_tls.CurveID,comdat
	.weak	type...63x.7crypto_tls.CurveID
	.p2align	4
type...63x.7crypto_tls.CurveID:
	.quad	6
	.quad	0
	.long	501141179
	.byte	145
	.byte	2
	.byte	2
	.zero	1
	.quad	0
	.quad	0
	.quad	0
	.quad	go..C346
	.quad	0
	.quad	0
	.quad	crypto_tls.CurveID..d
	.quad	type...6.7crypto_tls.CurveID
	.quad	3
	.size	type...63x.7crypto_tls.CurveID, 96

	.type	.Lconst.187,@object
	.section	.rodata..Lconst.187,"a",@progbits
.Lconst.187:
	.asciz	"[3]\tcrypto_tls\ttls.CurveID"
	.size	.Lconst.187, 27

	.type	go..C346,@object
	.section	.rodata.go..C346,"a",@progbits
	.p2align	3
go..C346:
	.quad	.Lconst.187
	.quad	26
	.size	go..C346, 16

	.type	type...6.7crypto_tls.CurveID,@object
	.section	.rodata.type...6.7crypto_tls.CurveID,"aG",@progbits,type...6.7crypto_tls.CurveID,comdat
	.weak	type...6.7crypto_tls.CurveID
	.p2align	4
type...6.7crypto_tls.CurveID:
	.quad	24
	.quad	8
	.long	250570596
	.byte	23
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C347
	.quad	0
	.quad	0
	.quad	crypto_tls.CurveID..d
	.size	type...6.7crypto_tls.CurveID, 80

	.type	.Lconst.188,@object
	.section	.rodata..Lconst.188,"a",@progbits
.Lconst.188:
	.asciz	"[]\tcrypto_tls\ttls.CurveID"
	.size	.Lconst.188, 26

	.type	go..C347,@object
	.section	.rodata.go..C347,"a",@progbits
	.p2align	3
go..C347:
	.quad	.Lconst.188
	.quad	25
	.size	go..C347, 16

	.type	.Lconst.189,@object
	.section	.rodata..Lconst.189,"a",@progbits
	.p2align	1
.Lconst.189:
	.short	25
	.short	24
	.short	23
	.size	.Lconst.189, 6

	.type	.Lconst.199,@object
	.section	.rodata..Lconst.199,"a",@progbits
.Lconst.199:
	.asciz	"tcp"
	.size	.Lconst.199, 4

	.type	.Lconst.201,@object
	.section	.rodata..Lconst.201,"a",@progbits
.Lconst.201:
	.asciz	"Listening: address=%s tls=true cert_file=%s key_file=%s"
	.size	.Lconst.201, 56

	.type	.Lconst.203,@object
	.section	.rodata..Lconst.203,"a",@progbits
.Lconst.203:
	.asciz	"Listening: address=%s tls=false"
	.size	.Lconst.203, 32

	.type	.Lconst.206,@object
	.section	.rodata..Lconst.206,"a",@progbits
.Lconst.206:
	.asciz	"Error accepting connection: remote=%s error=%v"
	.size	.Lconst.206, 47

	.type	type..struct.4.4x.5.f.f.0.1.4void.5.2.command_line_arguments.s1.0.1.1command_line_arguments.Srv.2.command_line_arguments.ctx2.0.1context.Context.2.command_line_arguments.conn3.0.1net.Conn.5,@object
	.section	.rodata.type..struct.4.4x.5.f.f.0.1.4void.5.2.command_line_arguments.s1.0.1.1command_line_arguments.Srv.2.command_line_arguments.ctx2.0.1context.Context.2.command_line_arguments.conn3.0.1net.Conn.5,"aG",@progbits,type..struct.4.4x.5.f.f.0.1.4void.5.2.command_line_arguments.s1.0.1.1command_line_arguments.Srv.2.command_line_arguments.ctx2.0.1context.Context.2.command_line_arguments.conn3.0.1net.Conn.5,comdat
	.weak	type..struct.4.4x.5.f.f.0.1.4void.5.2.command_line_arguments.s1.0.1.1command_line_arguments.Srv.2.command_line_arguments.ctx2.0.1context.Context.2.command_line_arguments.conn3.0.1net.Conn.5
	.p2align	4
type..struct.4.4x.5.f.f.0.1.4void.5.2.command_line_arguments.s1.0.1.1command_line_arguments.Srv.2.command_line_arguments.ctx2.0.1context.Context.2.command_line_arguments.conn3.0.1net.Conn.5:
	.quad	32
	.quad	32
	.long	705191492
	.byte	25
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..pa
	.quad	go..C348
	.quad	0
	.quad	0
	.quad	go..C357
	.quad	4
	.quad	4
	.size	type..struct.4.4x.5.f.f.0.1.4void.5.2.command_line_arguments.s1.0.1.1command_line_arguments.Srv.2.command_line_arguments.ctx2.0.1context.Context.2.command_line_arguments.conn3.0.1net.Conn.5, 96

	.type	gcbits..pa,@object
	.section	.rodata.gcbits..pa,"aG",@progbits,gcbits..pa,comdat
	.weak	gcbits..pa
gcbits..pa:
	.byte	15
	.size	gcbits..pa, 1

	.type	.Lconst.208,@object
	.section	.rodata..Lconst.208,"a",@progbits
.Lconst.208:
	.asciz	"struct { f *; s1 **\tcommand_line_arguments\tdaemon.Srv; ctx2 *\tcontext\tcontext.Context; conn3 *\tnet\tnet.Conn }"
	.size	.Lconst.208, 110

	.type	go..C348,@object
	.section	.rodata.go..C348,"a",@progbits
	.p2align	3
go..C348:
	.quad	.Lconst.208
	.quad	109
	.size	go..C348, 16

	.type	go..C349,@object
	.section	.rodata.go..C349,"a",@progbits
	.p2align	3
go..C349:
	.quad	.Lconst.63
	.quad	1
	.size	go..C349, 16

	.type	go..C350,@object
	.section	.rodata.go..C350,"a",@progbits
	.p2align	3
go..C350:
	.quad	.Lconst.63
	.quad	1
	.size	go..C350, 16

	.type	.Lconst.209,@object
	.section	.rodata..Lconst.209,"a",@progbits
.Lconst.209:
	.asciz	"s1"
	.size	.Lconst.209, 3

	.type	go..C351,@object
	.section	.rodata.go..C351,"a",@progbits
	.p2align	3
go..C351:
	.quad	.Lconst.209
	.quad	2
	.size	go..C351, 16

	.type	go..C352,@object
	.section	.rodata.go..C352,"a",@progbits
	.p2align	3
go..C352:
	.quad	.Lconst.2
	.quad	22
	.size	go..C352, 16

	.type	.Lconst.210,@object
	.section	.rodata..Lconst.210,"a",@progbits
.Lconst.210:
	.asciz	"ctx2"
	.size	.Lconst.210, 5

	.type	go..C353,@object
	.section	.rodata.go..C353,"a",@progbits
	.p2align	3
go..C353:
	.quad	.Lconst.210
	.quad	4
	.size	go..C353, 16

	.type	go..C354,@object
	.section	.rodata.go..C354,"a",@progbits
	.p2align	3
go..C354:
	.quad	.Lconst.2
	.quad	22
	.size	go..C354, 16

	.type	.Lconst.211,@object
	.section	.rodata..Lconst.211,"a",@progbits
.Lconst.211:
	.asciz	"conn3"
	.size	.Lconst.211, 6

	.type	go..C355,@object
	.section	.rodata.go..C355,"a",@progbits
	.p2align	3
go..C355:
	.quad	.Lconst.211
	.quad	5
	.size	go..C355, 16

	.type	go..C356,@object
	.section	.rodata.go..C356,"a",@progbits
	.p2align	3
go..C356:
	.quad	.Lconst.2
	.quad	22
	.size	go..C356, 16

	.type	go..C357,@object
	.section	.data.go..C357,"aw",@progbits
	.p2align	4
go..C357:
	.quad	go..C349
	.quad	go..C350
	.quad	unsafe.Pointer..d
	.quad	0
	.quad	0
	.quad	go..C351
	.quad	go..C352
	.quad	type...1.1command_line_arguments.Srv
	.quad	0
	.quad	16
	.quad	go..C353
	.quad	go..C354
	.quad	type...1context.Context
	.quad	0
	.quad	32
	.quad	go..C355
	.quad	go..C356
	.quad	type...1net.Conn
	.quad	0
	.quad	48
	.size	go..C357, 160

	.type	.Lconst.212,@object
	.section	.rodata..Lconst.212,"a",@progbits
.Lconst.212:
	.asciz	"Error handling connection: remote=%s error=%v"
	.size	.Lconst.212, 46

	.type	.Lconst.214,@object
	.section	.rodata..Lconst.214,"a",@progbits
.Lconst.214:
	.asciz	"Done handling connection: remote=%s"
	.size	.Lconst.214, 36

	.type	.Lconst.216,@object
	.section	.rodata..Lconst.216,"a",@progbits
.Lconst.216:
	.asciz	"Handling new connection: remote=%s"
	.size	.Lconst.216, 35

	.type	.Lconst.222,@object
	.section	.rodata..Lconst.222,"a",@progbits
.Lconst.222:
	.asciz	"shell"
	.size	.Lconst.222, 6

	.type	.Lconst.224,@object
	.section	.rodata..Lconst.224,"a",@progbits
.Lconst.224:
	.asciz	"Initial host update error: %v"
	.size	.Lconst.224, 30

	.type	.Lconst.226,@object
	.section	.rodata..Lconst.226,"a",@progbits
.Lconst.226:
	.asciz	"Initial host update received: session=%s\n"
	.size	.Lconst.226, 42

	.type	.Lconst.229,@object
	.section	.rodata..Lconst.229,"a",@progbits
.Lconst.229:
	.asciz	"The warp you attempted to open is already in use: %s."
	.size	.Lconst.229, 54

	.type	.Lconst.231,@object
	.section	.rodata..Lconst.231,"a",@progbits
.Lconst.231:
	.asciz	"warp_in_use"
	.size	.Lconst.231, 12

	.type	.Lconst.233,@object
	.section	.rodata..Lconst.233,"a",@progbits
.Lconst.233:
	.asciz	"Host error: warp already in use: %s"
	.size	.Lconst.233, 36

	.type	.Lconst.235,@object
	.section	.rodata..Lconst.235,"a",@progbits
.Lconst.235:
	.asciz	"Cleaning-up warp: session=%s"
	.size	.Lconst.235, 29

	.type	.Lconst.237,@object
	.section	.rodata..Lconst.237,"a",@progbits
.Lconst.237:
	.asciz	"The warp you attempted to connect does not exist: %s."
	.size	.Lconst.237, 54

	.type	.Lconst.239,@object
	.section	.rodata..Lconst.239,"a",@progbits
.Lconst.239:
	.asciz	"warp_unknown"
	.size	.Lconst.239, 13

	.type	.Lconst.241,@object
	.section	.rodata..Lconst.241,"a",@progbits
.Lconst.241:
	.asciz	"Client error: warp unknown %s"
	.size	.Lconst.241, 30

	.type	.Lconst.243,@object
	.section	.rodata..Lconst.243,"a",@progbits
	.p2align	4
.Lconst.243:
	.zero	48
	.size	.Lconst.243, 48

	.type	type..map.6string.7github_com_spolu_warp.User,@object
	.section	.rodata.type..map.6string.7github_com_spolu_warp.User,"aG",@progbits,type..map.6string.7github_com_spolu_warp.User,comdat
	.weak	type..map.6string.7github_com_spolu_warp.User
	.p2align	4
type..map.6string.7github_com_spolu_warp.User:
	.quad	8
	.quad	8
	.long	479700253
	.byte	21
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C358
	.quad	0
	.quad	0
	.quad	string..d
	.quad	github_com_spolu_warp.User..d
	.quad	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.User.2overflow.0.1.4void.5.5
	.quad	type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.User.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.User.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5
	.byte	16
	.byte	0
	.byte	48
	.byte	0
	.short	528
	.byte	1
	.byte	1
	.size	type..map.6string.7github_com_spolu_warp.User, 112

	.type	.Lconst.244,@object
	.section	.rodata..Lconst.244,"a",@progbits
.Lconst.244:
	.asciz	"map[string]\tgithub_com_spolu_warp\twarp.User"
	.size	.Lconst.244, 44

	.type	go..C358,@object
	.section	.rodata.go..C358,"a",@progbits
	.p2align	3
go..C358:
	.quad	.Lconst.244
	.quad	43
	.size	go..C358, 16

	.type	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.User.2overflow.0.1.4void.5.5,@object
	.section	.rodata.type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.User.2overflow.0.1.4void.5.5,"aG",@progbits,type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.User.2overflow.0.1.4void.5.5,comdat
	.weak	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.User.2overflow.0.1.4void.5.5
	.p2align	4
type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.User.2overflow.0.1.4void.5.5:
	.quad	528
	.quad	528
	.long	2436696260
	.byte	25
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..kwkwircfkvircba
	.quad	go..C359
	.quad	0
	.quad	0
	.quad	go..C366
	.quad	4
	.quad	4
	.size	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.User.2overflow.0.1.4void.5.5, 96

	.type	gcbits..kwkwircfkvircba,@object
	.section	.rodata.gcbits..kwkwircfkvircba,"aG",@progbits,gcbits..kwkwircfkvircba,comdat
	.weak	gcbits..kwkwircfkvircba
gcbits..kwkwircfkvircba:
	.ascii	"\252\252\212\242(\212\242(\002"
	.size	gcbits..kwkwircfkvircba, 9

	.type	.Lconst.245,@object
	.section	.rodata..Lconst.245,"a",@progbits
.Lconst.245:
	.asciz	"struct { topbits [8]uint8; keys [8]string; values [8]\tgithub_com_spolu_warp\twarp.User; overflow * }"
	.size	.Lconst.245, 100

	.type	go..C359,@object
	.section	.rodata.go..C359,"a",@progbits
	.p2align	3
go..C359:
	.quad	.Lconst.245
	.quad	99
	.size	go..C359, 16

	.type	go..C360,@object
	.section	.rodata.go..C360,"a",@progbits
	.p2align	3
go..C360:
	.quad	.Lconst.139
	.quad	7
	.size	go..C360, 16

	.type	go..C361,@object
	.section	.rodata.go..C361,"a",@progbits
	.p2align	3
go..C361:
	.quad	.Lconst.141
	.quad	4
	.size	go..C361, 16

	.type	go..C362,@object
	.section	.rodata.go..C362,"a",@progbits
	.p2align	3
go..C362:
	.quad	.Lconst.144
	.quad	6
	.size	go..C362, 16

	.type	type...68x.7github_com_spolu_warp.User,@object
	.section	.rodata.type...68x.7github_com_spolu_warp.User,"aG",@progbits,type...68x.7github_com_spolu_warp.User,comdat
	.weak	type...68x.7github_com_spolu_warp.User
	.p2align	4
type...68x.7github_com_spolu_warp.User:
	.quad	384
	.quad	360
	.long	662338805
	.byte	17
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..fkvircfkva
	.quad	go..C363
	.quad	0
	.quad	0
	.quad	github_com_spolu_warp.User..d
	.quad	type...6.7github_com_spolu_warp.User
	.quad	8
	.size	type...68x.7github_com_spolu_warp.User, 96

	.type	gcbits..fkvircfkva,@object
	.section	.rodata.gcbits..fkvircfkva,"aG",@progbits,gcbits..fkvircfkva,comdat
	.weak	gcbits..fkvircfkva
gcbits..fkvircfkva:
	.ascii	"EQ\024EQ\024"
	.size	gcbits..fkvircfkva, 6

	.type	.Lconst.246,@object
	.section	.rodata..Lconst.246,"a",@progbits
.Lconst.246:
	.asciz	"[8]\tgithub_com_spolu_warp\twarp.User"
	.size	.Lconst.246, 36

	.type	go..C363,@object
	.section	.rodata.go..C363,"a",@progbits
	.p2align	3
go..C363:
	.quad	.Lconst.246
	.quad	35
	.size	go..C363, 16

	.type	type...6.7github_com_spolu_warp.User,@object
	.section	.rodata.type...6.7github_com_spolu_warp.User,"aG",@progbits,type...6.7github_com_spolu_warp.User,comdat
	.weak	type...6.7github_com_spolu_warp.User
	.p2align	4
type...6.7github_com_spolu_warp.User:
	.quad	24
	.quad	8
	.long	2478653057
	.byte	23
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C364
	.quad	0
	.quad	0
	.quad	github_com_spolu_warp.User..d
	.size	type...6.7github_com_spolu_warp.User, 80

	.type	.Lconst.247,@object
	.section	.rodata..Lconst.247,"a",@progbits
.Lconst.247:
	.asciz	"[]\tgithub_com_spolu_warp\twarp.User"
	.size	.Lconst.247, 35

	.type	go..C364,@object
	.section	.rodata.go..C364,"a",@progbits
	.p2align	3
go..C364:
	.quad	.Lconst.247
	.quad	34
	.size	go..C364, 16

	.type	go..C365,@object
	.section	.rodata.go..C365,"a",@progbits
	.p2align	3
go..C365:
	.quad	.Lconst.146
	.quad	8
	.size	go..C365, 16

	.type	go..C366,@object
	.section	.data.go..C366,"aw",@progbits
	.p2align	4
go..C366:
	.quad	go..C360
	.quad	0
	.quad	type...68x.7uint8
	.quad	0
	.quad	0
	.quad	go..C361
	.quad	0
	.quad	type...68x.7string
	.quad	0
	.quad	16
	.quad	go..C362
	.quad	0
	.quad	type...68x.7github_com_spolu_warp.User
	.quad	0
	.quad	272
	.quad	go..C365
	.quad	0
	.quad	unsafe.Pointer..d
	.quad	0
	.quad	1040
	.size	go..C366, 160

	.type	type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.User.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.User.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5,@object
	.section	.rodata.type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.User.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.User.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5,"aG",@progbits,type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.User.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.User.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5,comdat
	.weak	type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.User.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.User.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5
	.p2align	4
type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.User.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.User.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5:
	.quad	48
	.quad	48
	.long	1892882916
	.byte	25
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..mb
	.quad	go..C367
	.quad	0
	.quad	0
	.quad	go..C378
	.quad	9
	.quad	9
	.size	type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.User.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.User.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5, 96

	.type	.Lconst.248,@object
	.section	.rodata..Lconst.248,"a",@progbits
.Lconst.248:
	.asciz	"struct { count int; flags uint8; B uint8; noverflow uint16; hash0 uint32; buckets *struct { topbits [8]uint8; keys [8]string; values [8]\tgithub_com_spolu_warp\twarp.User; overflow * }; oldbuckets *struct { topbits [8]uint8; keys [8]string; values [8]\tgithub_com_spolu_warp\twarp.User; overflow * }; nevacuate uintptr; extra * }"
	.size	.Lconst.248, 326

	.type	go..C367,@object
	.section	.rodata.go..C367,"a",@progbits
	.p2align	3
go..C367:
	.quad	.Lconst.248
	.quad	325
	.size	go..C367, 16

	.type	go..C368,@object
	.section	.rodata.go..C368,"a",@progbits
	.p2align	3
go..C368:
	.quad	.Lconst.148
	.quad	5
	.size	go..C368, 16

	.type	go..C369,@object
	.section	.rodata.go..C369,"a",@progbits
	.p2align	3
go..C369:
	.quad	.Lconst.151
	.quad	5
	.size	go..C369, 16

	.type	go..C370,@object
	.section	.rodata.go..C370,"a",@progbits
	.p2align	3
go..C370:
	.quad	.Lconst.152
	.quad	1
	.size	go..C370, 16

	.type	go..C371,@object
	.section	.rodata.go..C371,"a",@progbits
	.p2align	3
go..C371:
	.quad	.Lconst.153
	.quad	9
	.size	go..C371, 16

	.type	go..C372,@object
	.section	.rodata.go..C372,"a",@progbits
	.p2align	3
go..C372:
	.quad	.Lconst.156
	.quad	5
	.size	go..C372, 16

	.type	go..C373,@object
	.section	.rodata.go..C373,"a",@progbits
	.p2align	3
go..C373:
	.quad	.Lconst.159
	.quad	7
	.size	go..C373, 16

	.type	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.User.2overflow.0.1.4void.5.5,@object
	.section	.rodata.type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.User.2overflow.0.1.4void.5.5,"aG",@progbits,type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.User.2overflow.0.1.4void.5.5,comdat
	.weak	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.User.2overflow.0.1.4void.5.5
	.p2align	4
type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.User.2overflow.0.1.4void.5.5:
	.quad	8
	.quad	8
	.long	332434505
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C374
	.quad	0
	.quad	0
	.quad	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.User.2overflow.0.1.4void.5.5
	.size	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.User.2overflow.0.1.4void.5.5, 80

	.type	.Lconst.249,@object
	.section	.rodata..Lconst.249,"a",@progbits
.Lconst.249:
	.asciz	"*struct { topbits [8]uint8; keys [8]string; values [8]\tgithub_com_spolu_warp\twarp.User; overflow * }"
	.size	.Lconst.249, 101

	.type	go..C374,@object
	.section	.rodata.go..C374,"a",@progbits
	.p2align	3
go..C374:
	.quad	.Lconst.249
	.quad	100
	.size	go..C374, 16

	.type	go..C375,@object
	.section	.rodata.go..C375,"a",@progbits
	.p2align	3
go..C375:
	.quad	.Lconst.161
	.quad	10
	.size	go..C375, 16

	.type	go..C376,@object
	.section	.rodata.go..C376,"a",@progbits
	.p2align	3
go..C376:
	.quad	.Lconst.162
	.quad	9
	.size	go..C376, 16

	.type	go..C377,@object
	.section	.rodata.go..C377,"a",@progbits
	.p2align	3
go..C377:
	.quad	.Lconst.165
	.quad	5
	.size	go..C377, 16

	.type	go..C378,@object
	.section	.data.go..C378,"aw",@progbits
	.p2align	4
go..C378:
	.quad	go..C368
	.quad	0
	.quad	int..d
	.quad	0
	.quad	0
	.quad	go..C369
	.quad	0
	.quad	uint8..d
	.quad	0
	.quad	16
	.quad	go..C370
	.quad	0
	.quad	uint8..d
	.quad	0
	.quad	18
	.quad	go..C371
	.quad	0
	.quad	uint16..d
	.quad	0
	.quad	20
	.quad	go..C372
	.quad	0
	.quad	uint32..d
	.quad	0
	.quad	24
	.quad	go..C373
	.quad	0
	.quad	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.User.2overflow.0.1.4void.5.5
	.quad	0
	.quad	32
	.quad	go..C375
	.quad	0
	.quad	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.User.2overflow.0.1.4void.5.5
	.quad	0
	.quad	48
	.quad	go..C376
	.quad	0
	.quad	uintptr..d
	.quad	0
	.quad	64
	.quad	go..C377
	.quad	0
	.quad	unsafe.Pointer..d
	.quad	0
	.quad	80
	.size	go..C378, 360

	.type	type...60x.7.1command_line_arguments.Session,@object
	.section	.rodata.type...60x.7.1command_line_arguments.Session,"aG",@progbits,type...60x.7.1command_line_arguments.Session,comdat
	.weak	type...60x.7.1command_line_arguments.Session
	.p2align	4
type...60x.7.1command_line_arguments.Session:
	.quad	0
	.quad	0
	.long	2031007521
	.byte	145
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	0
	.quad	go..C379
	.quad	0
	.quad	0
	.quad	type...1command_line_arguments.Session
	.quad	type...6.7.1command_line_arguments.Session
	.quad	0
	.size	type...60x.7.1command_line_arguments.Session, 96

	.type	.Lconst.252,@object
	.section	.rodata..Lconst.252,"a",@progbits
.Lconst.252:
	.asciz	"[0]*\tcommand_line_arguments\tdaemon.Session"
	.size	.Lconst.252, 43

	.type	go..C379,@object
	.section	.rodata.go..C379,"a",@progbits
	.p2align	3
go..C379:
	.quad	.Lconst.252
	.quad	42
	.size	go..C379, 16

	.type	.Lconst.255,@object
	.section	.rodata..Lconst.255,"a",@progbits
.Lconst.255:
	.asciz	"Sending (client) state: session=%s cols=%d rows=%d"
	.size	.Lconst.255, 51

	.type	.Lconst.257,@object
	.section	.rodata..Lconst.257,"a",@progbits
.Lconst.257:
	.asciz	"Sending (host) state: session=%s cols=%d rows=%d"
	.size	.Lconst.257, 49

	.type	type..struct.4.4x.5.f.f.0.1.4void.5.2.command_line_arguments.w1.0.1.1command_line_arguments.Warp.2.command_line_arguments.ctx2.0.1context.Context.2.command_line_arguments.ss3.0.1.1command_line_arguments.Session.5,@object
	.section	.rodata.type..struct.4.4x.5.f.f.0.1.4void.5.2.command_line_arguments.w1.0.1.1command_line_arguments.Warp.2.command_line_arguments.ctx2.0.1context.Context.2.command_line_arguments.ss3.0.1.1command_line_arguments.Session.5,"aG",@progbits,type..struct.4.4x.5.f.f.0.1.4void.5.2.command_line_arguments.w1.0.1.1command_line_arguments.Warp.2.command_line_arguments.ctx2.0.1context.Context.2.command_line_arguments.ss3.0.1.1command_line_arguments.Session.5,comdat
	.weak	type..struct.4.4x.5.f.f.0.1.4void.5.2.command_line_arguments.w1.0.1.1command_line_arguments.Warp.2.command_line_arguments.ctx2.0.1context.Context.2.command_line_arguments.ss3.0.1.1command_line_arguments.Session.5
	.p2align	4
type..struct.4.4x.5.f.f.0.1.4void.5.2.command_line_arguments.w1.0.1.1command_line_arguments.Warp.2.command_line_arguments.ctx2.0.1context.Context.2.command_line_arguments.ss3.0.1.1command_line_arguments.Session.5:
	.quad	32
	.quad	32
	.long	2886420932
	.byte	25
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..pa
	.quad	go..C380
	.quad	0
	.quad	0
	.quad	go..C389
	.quad	4
	.quad	4
	.size	type..struct.4.4x.5.f.f.0.1.4void.5.2.command_line_arguments.w1.0.1.1command_line_arguments.Warp.2.command_line_arguments.ctx2.0.1context.Context.2.command_line_arguments.ss3.0.1.1command_line_arguments.Session.5, 96

	.type	.Lconst.260,@object
	.section	.rodata..Lconst.260,"a",@progbits
.Lconst.260:
	.asciz	"struct { f *; w1 **\tcommand_line_arguments\tdaemon.Warp; ctx2 *\tcontext\tcontext.Context; ss3 **\tcommand_line_arguments\tdaemon.Session }"
	.size	.Lconst.260, 135

	.type	go..C380,@object
	.section	.rodata.go..C380,"a",@progbits
	.p2align	3
go..C380:
	.quad	.Lconst.260
	.quad	134
	.size	go..C380, 16

	.type	go..C381,@object
	.section	.rodata.go..C381,"a",@progbits
	.p2align	3
go..C381:
	.quad	.Lconst.63
	.quad	1
	.size	go..C381, 16

	.type	go..C382,@object
	.section	.rodata.go..C382,"a",@progbits
	.p2align	3
go..C382:
	.quad	.Lconst.63
	.quad	1
	.size	go..C382, 16

	.type	.Lconst.261,@object
	.section	.rodata..Lconst.261,"a",@progbits
.Lconst.261:
	.asciz	"w1"
	.size	.Lconst.261, 3

	.type	go..C383,@object
	.section	.rodata.go..C383,"a",@progbits
	.p2align	3
go..C383:
	.quad	.Lconst.261
	.quad	2
	.size	go..C383, 16

	.type	go..C384,@object
	.section	.rodata.go..C384,"a",@progbits
	.p2align	3
go..C384:
	.quad	.Lconst.2
	.quad	22
	.size	go..C384, 16

	.type	go..C385,@object
	.section	.rodata.go..C385,"a",@progbits
	.p2align	3
go..C385:
	.quad	.Lconst.210
	.quad	4
	.size	go..C385, 16

	.type	go..C386,@object
	.section	.rodata.go..C386,"a",@progbits
	.p2align	3
go..C386:
	.quad	.Lconst.2
	.quad	22
	.size	go..C386, 16

	.type	.Lconst.262,@object
	.section	.rodata..Lconst.262,"a",@progbits
.Lconst.262:
	.asciz	"ss3"
	.size	.Lconst.262, 4

	.type	go..C387,@object
	.section	.rodata.go..C387,"a",@progbits
	.p2align	3
go..C387:
	.quad	.Lconst.262
	.quad	3
	.size	go..C387, 16

	.type	go..C388,@object
	.section	.rodata.go..C388,"a",@progbits
	.p2align	3
go..C388:
	.quad	.Lconst.2
	.quad	22
	.size	go..C388, 16

	.type	go..C389,@object
	.section	.data.go..C389,"aw",@progbits
	.p2align	4
go..C389:
	.quad	go..C381
	.quad	go..C382
	.quad	unsafe.Pointer..d
	.quad	0
	.quad	0
	.quad	go..C383
	.quad	go..C384
	.quad	type...1.1command_line_arguments.Warp
	.quad	0
	.quad	16
	.quad	go..C385
	.quad	go..C386
	.quad	type...1context.Context
	.quad	0
	.quad	32
	.quad	go..C387
	.quad	go..C388
	.quad	type...1.1command_line_arguments.Session
	.quad	0
	.quad	48
	.size	go..C389, 160

	.type	type..struct.4.4x.5.f.f.0.1.4void.5.2.command_line_arguments.ctx1.0.1context.Context.2.command_line_arguments.w2.0.1.1command_line_arguments.Warp.2.command_line_arguments.ss3.0.1.1command_line_arguments.Session.5,@object
	.section	.rodata.type..struct.4.4x.5.f.f.0.1.4void.5.2.command_line_arguments.ctx1.0.1context.Context.2.command_line_arguments.w2.0.1.1command_line_arguments.Warp.2.command_line_arguments.ss3.0.1.1command_line_arguments.Session.5,"aG",@progbits,type..struct.4.4x.5.f.f.0.1.4void.5.2.command_line_arguments.ctx1.0.1context.Context.2.command_line_arguments.w2.0.1.1command_line_arguments.Warp.2.command_line_arguments.ss3.0.1.1command_line_arguments.Session.5,comdat
	.weak	type..struct.4.4x.5.f.f.0.1.4void.5.2.command_line_arguments.ctx1.0.1context.Context.2.command_line_arguments.w2.0.1.1command_line_arguments.Warp.2.command_line_arguments.ss3.0.1.1command_line_arguments.Session.5
	.p2align	4
type..struct.4.4x.5.f.f.0.1.4void.5.2.command_line_arguments.ctx1.0.1context.Context.2.command_line_arguments.w2.0.1.1command_line_arguments.Warp.2.command_line_arguments.ss3.0.1.1command_line_arguments.Session.5:
	.quad	32
	.quad	32
	.long	621661124
	.byte	25
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..pa
	.quad	go..C390
	.quad	0
	.quad	0
	.quad	go..C399
	.quad	4
	.quad	4
	.size	type..struct.4.4x.5.f.f.0.1.4void.5.2.command_line_arguments.ctx1.0.1context.Context.2.command_line_arguments.w2.0.1.1command_line_arguments.Warp.2.command_line_arguments.ss3.0.1.1command_line_arguments.Session.5, 96

	.type	.Lconst.263,@object
	.section	.rodata..Lconst.263,"a",@progbits
.Lconst.263:
	.asciz	"struct { f *; ctx1 *\tcontext\tcontext.Context; w2 **\tcommand_line_arguments\tdaemon.Warp; ss3 **\tcommand_line_arguments\tdaemon.Session }"
	.size	.Lconst.263, 135

	.type	go..C390,@object
	.section	.rodata.go..C390,"a",@progbits
	.p2align	3
go..C390:
	.quad	.Lconst.263
	.quad	134
	.size	go..C390, 16

	.type	go..C391,@object
	.section	.rodata.go..C391,"a",@progbits
	.p2align	3
go..C391:
	.quad	.Lconst.63
	.quad	1
	.size	go..C391, 16

	.type	go..C392,@object
	.section	.rodata.go..C392,"a",@progbits
	.p2align	3
go..C392:
	.quad	.Lconst.63
	.quad	1
	.size	go..C392, 16

	.type	.Lconst.264,@object
	.section	.rodata..Lconst.264,"a",@progbits
.Lconst.264:
	.asciz	"ctx1"
	.size	.Lconst.264, 5

	.type	go..C393,@object
	.section	.rodata.go..C393,"a",@progbits
	.p2align	3
go..C393:
	.quad	.Lconst.264
	.quad	4
	.size	go..C393, 16

	.type	go..C394,@object
	.section	.rodata.go..C394,"a",@progbits
	.p2align	3
go..C394:
	.quad	.Lconst.2
	.quad	22
	.size	go..C394, 16

	.type	.Lconst.265,@object
	.section	.rodata..Lconst.265,"a",@progbits
.Lconst.265:
	.asciz	"w2"
	.size	.Lconst.265, 3

	.type	go..C395,@object
	.section	.rodata.go..C395,"a",@progbits
	.p2align	3
go..C395:
	.quad	.Lconst.265
	.quad	2
	.size	go..C395, 16

	.type	go..C396,@object
	.section	.rodata.go..C396,"a",@progbits
	.p2align	3
go..C396:
	.quad	.Lconst.2
	.quad	22
	.size	go..C396, 16

	.type	go..C397,@object
	.section	.rodata.go..C397,"a",@progbits
	.p2align	3
go..C397:
	.quad	.Lconst.262
	.quad	3
	.size	go..C397, 16

	.type	go..C398,@object
	.section	.rodata.go..C398,"a",@progbits
	.p2align	3
go..C398:
	.quad	.Lconst.2
	.quad	22
	.size	go..C398, 16

	.type	go..C399,@object
	.section	.data.go..C399,"aw",@progbits
	.p2align	4
go..C399:
	.quad	go..C391
	.quad	go..C392
	.quad	unsafe.Pointer..d
	.quad	0
	.quad	0
	.quad	go..C393
	.quad	go..C394
	.quad	type...1context.Context
	.quad	0
	.quad	16
	.quad	go..C395
	.quad	go..C396
	.quad	type...1.1command_line_arguments.Warp
	.quad	0
	.quad	32
	.quad	go..C397
	.quad	go..C398
	.quad	type...1.1command_line_arguments.Session
	.quad	0
	.quad	48
	.size	go..C399, 160

	.type	type..struct.4.4x.5.f.f.0.1.4void.5.2.command_line_arguments.w1.0.1.1command_line_arguments.Warp.2.command_line_arguments.ss2.0.1.1command_line_arguments.Session.2.command_line_arguments.ctx3.0.1context.Context.5,@object
	.section	.rodata.type..struct.4.4x.5.f.f.0.1.4void.5.2.command_line_arguments.w1.0.1.1command_line_arguments.Warp.2.command_line_arguments.ss2.0.1.1command_line_arguments.Session.2.command_line_arguments.ctx3.0.1context.Context.5,"aG",@progbits,type..struct.4.4x.5.f.f.0.1.4void.5.2.command_line_arguments.w1.0.1.1command_line_arguments.Warp.2.command_line_arguments.ss2.0.1.1command_line_arguments.Session.2.command_line_arguments.ctx3.0.1context.Context.5,comdat
	.weak	type..struct.4.4x.5.f.f.0.1.4void.5.2.command_line_arguments.w1.0.1.1command_line_arguments.Warp.2.command_line_arguments.ss2.0.1.1command_line_arguments.Session.2.command_line_arguments.ctx3.0.1context.Context.5
	.p2align	4
type..struct.4.4x.5.f.f.0.1.4void.5.2.command_line_arguments.w1.0.1.1command_line_arguments.Warp.2.command_line_arguments.ss2.0.1.1command_line_arguments.Session.2.command_line_arguments.ctx3.0.1context.Context.5:
	.quad	32
	.quad	32
	.long	3053320388
	.byte	25
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..pa
	.quad	go..C400
	.quad	0
	.quad	0
	.quad	go..C409
	.quad	4
	.quad	4
	.size	type..struct.4.4x.5.f.f.0.1.4void.5.2.command_line_arguments.w1.0.1.1command_line_arguments.Warp.2.command_line_arguments.ss2.0.1.1command_line_arguments.Session.2.command_line_arguments.ctx3.0.1context.Context.5, 96

	.type	.Lconst.266,@object
	.section	.rodata..Lconst.266,"a",@progbits
.Lconst.266:
	.asciz	"struct { f *; w1 **\tcommand_line_arguments\tdaemon.Warp; ss2 **\tcommand_line_arguments\tdaemon.Session; ctx3 *\tcontext\tcontext.Context }"
	.size	.Lconst.266, 135

	.type	go..C400,@object
	.section	.rodata.go..C400,"a",@progbits
	.p2align	3
go..C400:
	.quad	.Lconst.266
	.quad	134
	.size	go..C400, 16

	.type	go..C401,@object
	.section	.rodata.go..C401,"a",@progbits
	.p2align	3
go..C401:
	.quad	.Lconst.63
	.quad	1
	.size	go..C401, 16

	.type	go..C402,@object
	.section	.rodata.go..C402,"a",@progbits
	.p2align	3
go..C402:
	.quad	.Lconst.63
	.quad	1
	.size	go..C402, 16

	.type	go..C403,@object
	.section	.rodata.go..C403,"a",@progbits
	.p2align	3
go..C403:
	.quad	.Lconst.261
	.quad	2
	.size	go..C403, 16

	.type	go..C404,@object
	.section	.rodata.go..C404,"a",@progbits
	.p2align	3
go..C404:
	.quad	.Lconst.2
	.quad	22
	.size	go..C404, 16

	.type	.Lconst.267,@object
	.section	.rodata..Lconst.267,"a",@progbits
.Lconst.267:
	.asciz	"ss2"
	.size	.Lconst.267, 4

	.type	go..C405,@object
	.section	.rodata.go..C405,"a",@progbits
	.p2align	3
go..C405:
	.quad	.Lconst.267
	.quad	3
	.size	go..C405, 16

	.type	go..C406,@object
	.section	.rodata.go..C406,"a",@progbits
	.p2align	3
go..C406:
	.quad	.Lconst.2
	.quad	22
	.size	go..C406, 16

	.type	.Lconst.268,@object
	.section	.rodata..Lconst.268,"a",@progbits
.Lconst.268:
	.asciz	"ctx3"
	.size	.Lconst.268, 5

	.type	go..C407,@object
	.section	.rodata.go..C407,"a",@progbits
	.p2align	3
go..C407:
	.quad	.Lconst.268
	.quad	4
	.size	go..C407, 16

	.type	go..C408,@object
	.section	.rodata.go..C408,"a",@progbits
	.p2align	3
go..C408:
	.quad	.Lconst.2
	.quad	22
	.size	go..C408, 16

	.type	go..C409,@object
	.section	.data.go..C409,"aw",@progbits
	.p2align	4
go..C409:
	.quad	go..C401
	.quad	go..C402
	.quad	unsafe.Pointer..d
	.quad	0
	.quad	0
	.quad	go..C403
	.quad	go..C404
	.quad	type...1.1command_line_arguments.Warp
	.quad	0
	.quad	16
	.quad	go..C405
	.quad	go..C406
	.quad	type...1.1command_line_arguments.Session
	.quad	0
	.quad	32
	.quad	go..C407
	.quad	go..C408
	.quad	type...1context.Context
	.quad	0
	.quad	48
	.size	go..C409, 160

	.type	.Lconst.269,@object
	.section	.rodata..Lconst.269,"a",@progbits
.Lconst.269:
	.asciz	"Host session running: session=%s"
	.size	.Lconst.269, 33

	.type	.Lconst.271,@object
	.section	.rodata..Lconst.271,"a",@progbits
.Lconst.271:
	.asciz	"Cancelling all clients: session=%s"
	.size	.Lconst.271, 35

	.type	.Lconst.273,@object
	.section	.rodata..Lconst.273,"a",@progbits
.Lconst.273:
	.asciz	"host_disconnected"
	.size	.Lconst.273, 18

	.type	.Lconst.274,@object
	.section	.rodata..Lconst.274,"a",@progbits
.Lconst.274:
	.asciz	"The warp host disconnected."
	.size	.Lconst.274, 28

	.type	.Lconst.276,@object
	.section	.rodata..Lconst.276,"a",@progbits
	.p2align	3
.Lconst.276:
	.quad	.Lconst.274
	.quad	27
	.size	.Lconst.276, 16

	.type	.Lconst.277,@object
	.section	.rodata..Lconst.277,"a",@progbits
.Lconst.277:
	.asciz	"Error receiving host update: session=%s error=%v"
	.size	.Lconst.277, 49

	.type	type..struct.4.4x.5fn.0func.8.9.8string.9.2val.0.1command_line_arguments.Session.5,@object
	.section	.rodata.type..struct.4.4x.5fn.0func.8.9.8string.9.2val.0.1command_line_arguments.Session.5,"aG",@progbits,type..struct.4.4x.5fn.0func.8.9.8string.9.2val.0.1command_line_arguments.Session.5,comdat
	.weak	type..struct.4.4x.5fn.0func.8.9.8string.9.2val.0.1command_line_arguments.Session.5
	.p2align	4
type..struct.4.4x.5fn.0func.8.9.8string.9.2val.0.1command_line_arguments.Session.5:
	.quad	16
	.quad	16
	.long	1305822420
	.byte	25
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..da
	.quad	go..C410
	.quad	0
	.quad	0
	.quad	go..C413
	.quad	2
	.quad	2
	.size	type..struct.4.4x.5fn.0func.8.9.8string.9.2val.0.1command_line_arguments.Session.5, 96

	.type	.Lconst.279,@object
	.section	.rodata..Lconst.279,"a",@progbits
.Lconst.279:
	.asciz	"struct { fn func() string; val *\tcommand_line_arguments\tdaemon.Session }"
	.size	.Lconst.279, 73

	.type	go..C410,@object
	.section	.rodata.go..C410,"a",@progbits
	.p2align	3
go..C410:
	.quad	.Lconst.279
	.quad	72
	.size	go..C410, 16

	.type	go..C411,@object
	.section	.rodata.go..C411,"a",@progbits
	.p2align	3
go..C411:
	.quad	.Lconst.66
	.quad	2
	.size	go..C411, 16

	.type	.Lconst.280,@object
	.section	.rodata..Lconst.280,"a",@progbits
.Lconst.280:
	.asciz	"val"
	.size	.Lconst.280, 4

	.type	go..C412,@object
	.section	.rodata.go..C412,"a",@progbits
	.p2align	3
go..C412:
	.quad	.Lconst.280
	.quad	3
	.size	go..C412, 16

	.type	go..C413,@object
	.section	.data.go..C413,"aw",@progbits
	.p2align	4
go..C413:
	.quad	go..C411
	.quad	0
	.quad	type..func.8.9.8string.9
	.quad	0
	.quad	0
	.quad	go..C412
	.quad	0
	.quad	type...1command_line_arguments.Session
	.quad	0
	.quad	16
	.size	go..C413, 80

	.type	.Lconst.281,@object
	.section	.rodata..Lconst.281,"a",@progbits
.Lconst.281:
	.asciz	"Host update warp mismatch: session=%s expected=% received=%s"
	.size	.Lconst.281, 61

	.type	.Lconst.283,@object
	.section	.rodata..Lconst.283,"a",@progbits
.Lconst.283:
	.asciz	"Host credentials mismatch: session=%s"
	.size	.Lconst.283, 38

	.type	type..map.6string.7github_com_spolu_warp.Mode,@object
	.section	.rodata.type..map.6string.7github_com_spolu_warp.Mode,"aG",@progbits,type..map.6string.7github_com_spolu_warp.Mode,comdat
	.weak	type..map.6string.7github_com_spolu_warp.Mode
	.p2align	4
type..map.6string.7github_com_spolu_warp.Mode:
	.quad	8
	.quad	8
	.long	1260617293
	.byte	21
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C414
	.quad	0
	.quad	0
	.quad	string..d
	.quad	github_com_spolu_warp.Mode..d
	.quad	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.Mode.2overflow.0.1.4void.5.5
	.quad	type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.Mode.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.Mode.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5
	.byte	16
	.byte	0
	.byte	8
	.byte	0
	.short	208
	.byte	1
	.byte	1
	.size	type..map.6string.7github_com_spolu_warp.Mode, 112

	.type	.Lconst.286,@object
	.section	.rodata..Lconst.286,"a",@progbits
.Lconst.286:
	.asciz	"map[string]\tgithub_com_spolu_warp\twarp.Mode"
	.size	.Lconst.286, 44

	.type	go..C414,@object
	.section	.rodata.go..C414,"a",@progbits
	.p2align	3
go..C414:
	.quad	.Lconst.286
	.quad	43
	.size	go..C414, 16

	.type	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.Mode.2overflow.0.1.4void.5.5,@object
	.section	.rodata.type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.Mode.2overflow.0.1.4void.5.5,"aG",@progbits,type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.Mode.2overflow.0.1.4void.5.5,comdat
	.weak	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.Mode.2overflow.0.1.4void.5.5
	.p2align	4
type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.Mode.2overflow.0.1.4void.5.5:
	.quad	208
	.quad	208
	.long	1656237764
	.byte	25
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..kwkbaba
	.quad	go..C415
	.quad	0
	.quad	0
	.quad	go..C422
	.quad	4
	.quad	4
	.size	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.Mode.2overflow.0.1.4void.5.5, 96

	.type	gcbits..kwkbaba,@object
	.section	.rodata.gcbits..kwkbaba,"aG",@progbits,gcbits..kwkbaba,comdat
	.weak	gcbits..kwkbaba
gcbits..kwkbaba:
	.ascii	"\252\252\000\002"
	.size	gcbits..kwkbaba, 4

	.type	.Lconst.287,@object
	.section	.rodata..Lconst.287,"a",@progbits
.Lconst.287:
	.asciz	"struct { topbits [8]uint8; keys [8]string; values [8]\tgithub_com_spolu_warp\twarp.Mode; overflow * }"
	.size	.Lconst.287, 100

	.type	go..C415,@object
	.section	.rodata.go..C415,"a",@progbits
	.p2align	3
go..C415:
	.quad	.Lconst.287
	.quad	99
	.size	go..C415, 16

	.type	go..C416,@object
	.section	.rodata.go..C416,"a",@progbits
	.p2align	3
go..C416:
	.quad	.Lconst.139
	.quad	7
	.size	go..C416, 16

	.type	go..C417,@object
	.section	.rodata.go..C417,"a",@progbits
	.p2align	3
go..C417:
	.quad	.Lconst.141
	.quad	4
	.size	go..C417, 16

	.type	go..C418,@object
	.section	.rodata.go..C418,"a",@progbits
	.p2align	3
go..C418:
	.quad	.Lconst.144
	.quad	6
	.size	go..C418, 16

	.type	type...68x.7github_com_spolu_warp.Mode,@object
	.section	.rodata.type...68x.7github_com_spolu_warp.Mode,"aG",@progbits,type...68x.7github_com_spolu_warp.Mode,comdat
	.weak	type...68x.7github_com_spolu_warp.Mode
	.p2align	4
type...68x.7github_com_spolu_warp.Mode:
	.quad	64
	.quad	0
	.long	2224172885
	.byte	145
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	0
	.quad	go..C419
	.quad	0
	.quad	0
	.quad	github_com_spolu_warp.Mode..d
	.quad	type...6.7github_com_spolu_warp.Mode
	.quad	8
	.size	type...68x.7github_com_spolu_warp.Mode, 96

	.type	.Lconst.288,@object
	.section	.rodata..Lconst.288,"a",@progbits
.Lconst.288:
	.asciz	"[8]\tgithub_com_spolu_warp\twarp.Mode"
	.size	.Lconst.288, 36

	.type	go..C419,@object
	.section	.rodata.go..C419,"a",@progbits
	.p2align	3
go..C419:
	.quad	.Lconst.288
	.quad	35
	.size	go..C419, 16

	.type	type...6.7github_com_spolu_warp.Mode,@object
	.section	.rodata.type...6.7github_com_spolu_warp.Mode,"aG",@progbits,type...6.7github_com_spolu_warp.Mode,comdat
	.weak	type...6.7github_com_spolu_warp.Mode
	.p2align	4
type...6.7github_com_spolu_warp.Mode:
	.quad	24
	.quad	8
	.long	3259570097
	.byte	23
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C420
	.quad	0
	.quad	0
	.quad	github_com_spolu_warp.Mode..d
	.size	type...6.7github_com_spolu_warp.Mode, 80

	.type	.Lconst.289,@object
	.section	.rodata..Lconst.289,"a",@progbits
.Lconst.289:
	.asciz	"[]\tgithub_com_spolu_warp\twarp.Mode"
	.size	.Lconst.289, 35

	.type	go..C420,@object
	.section	.rodata.go..C420,"a",@progbits
	.p2align	3
go..C420:
	.quad	.Lconst.289
	.quad	34
	.size	go..C420, 16

	.type	go..C421,@object
	.section	.rodata.go..C421,"a",@progbits
	.p2align	3
go..C421:
	.quad	.Lconst.146
	.quad	8
	.size	go..C421, 16

	.type	go..C422,@object
	.section	.data.go..C422,"aw",@progbits
	.p2align	4
go..C422:
	.quad	go..C416
	.quad	0
	.quad	type...68x.7uint8
	.quad	0
	.quad	0
	.quad	go..C417
	.quad	0
	.quad	type...68x.7string
	.quad	0
	.quad	16
	.quad	go..C418
	.quad	0
	.quad	type...68x.7github_com_spolu_warp.Mode
	.quad	0
	.quad	272
	.quad	go..C421
	.quad	0
	.quad	unsafe.Pointer..d
	.quad	0
	.quad	400
	.size	go..C422, 160

	.type	type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.Mode.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.Mode.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5,@object
	.section	.rodata.type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.Mode.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.Mode.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5,"aG",@progbits,type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.Mode.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.Mode.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5,comdat
	.weak	type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.Mode.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.Mode.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5
	.p2align	4
type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.Mode.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.Mode.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5:
	.quad	48
	.quad	48
	.long	1404508644
	.byte	25
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..mb
	.quad	go..C423
	.quad	0
	.quad	0
	.quad	go..C434
	.quad	9
	.quad	9
	.size	type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.Mode.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.Mode.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5, 96

	.type	.Lconst.290,@object
	.section	.rodata..Lconst.290,"a",@progbits
.Lconst.290:
	.asciz	"struct { count int; flags uint8; B uint8; noverflow uint16; hash0 uint32; buckets *struct { topbits [8]uint8; keys [8]string; values [8]\tgithub_com_spolu_warp\twarp.Mode; overflow * }; oldbuckets *struct { topbits [8]uint8; keys [8]string; values [8]\tgithub_com_spolu_warp\twarp.Mode; overflow * }; nevacuate uintptr; extra * }"
	.size	.Lconst.290, 326

	.type	go..C423,@object
	.section	.rodata.go..C423,"a",@progbits
	.p2align	3
go..C423:
	.quad	.Lconst.290
	.quad	325
	.size	go..C423, 16

	.type	go..C424,@object
	.section	.rodata.go..C424,"a",@progbits
	.p2align	3
go..C424:
	.quad	.Lconst.148
	.quad	5
	.size	go..C424, 16

	.type	go..C425,@object
	.section	.rodata.go..C425,"a",@progbits
	.p2align	3
go..C425:
	.quad	.Lconst.151
	.quad	5
	.size	go..C425, 16

	.type	go..C426,@object
	.section	.rodata.go..C426,"a",@progbits
	.p2align	3
go..C426:
	.quad	.Lconst.152
	.quad	1
	.size	go..C426, 16

	.type	go..C427,@object
	.section	.rodata.go..C427,"a",@progbits
	.p2align	3
go..C427:
	.quad	.Lconst.153
	.quad	9
	.size	go..C427, 16

	.type	go..C428,@object
	.section	.rodata.go..C428,"a",@progbits
	.p2align	3
go..C428:
	.quad	.Lconst.156
	.quad	5
	.size	go..C428, 16

	.type	go..C429,@object
	.section	.rodata.go..C429,"a",@progbits
	.p2align	3
go..C429:
	.quad	.Lconst.159
	.quad	7
	.size	go..C429, 16

	.type	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.Mode.2overflow.0.1.4void.5.5,@object
	.section	.rodata.type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.Mode.2overflow.0.1.4void.5.5,"aG",@progbits,type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.Mode.2overflow.0.1.4void.5.5,comdat
	.weak	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.Mode.2overflow.0.1.4void.5.5
	.p2align	4
type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.Mode.2overflow.0.1.4void.5.5:
	.quad	8
	.quad	8
	.long	730000457
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C430
	.quad	0
	.quad	0
	.quad	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.Mode.2overflow.0.1.4void.5.5
	.size	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.Mode.2overflow.0.1.4void.5.5, 80

	.type	.Lconst.291,@object
	.section	.rodata..Lconst.291,"a",@progbits
.Lconst.291:
	.asciz	"*struct { topbits [8]uint8; keys [8]string; values [8]\tgithub_com_spolu_warp\twarp.Mode; overflow * }"
	.size	.Lconst.291, 101

	.type	go..C430,@object
	.section	.rodata.go..C430,"a",@progbits
	.p2align	3
go..C430:
	.quad	.Lconst.291
	.quad	100
	.size	go..C430, 16

	.type	go..C431,@object
	.section	.rodata.go..C431,"a",@progbits
	.p2align	3
go..C431:
	.quad	.Lconst.161
	.quad	10
	.size	go..C431, 16

	.type	go..C432,@object
	.section	.rodata.go..C432,"a",@progbits
	.p2align	3
go..C432:
	.quad	.Lconst.162
	.quad	9
	.size	go..C432, 16

	.type	go..C433,@object
	.section	.rodata.go..C433,"a",@progbits
	.p2align	3
go..C433:
	.quad	.Lconst.165
	.quad	5
	.size	go..C433, 16

	.type	go..C434,@object
	.section	.data.go..C434,"aw",@progbits
	.p2align	4
go..C434:
	.quad	go..C424
	.quad	0
	.quad	int..d
	.quad	0
	.quad	0
	.quad	go..C425
	.quad	0
	.quad	uint8..d
	.quad	0
	.quad	16
	.quad	go..C426
	.quad	0
	.quad	uint8..d
	.quad	0
	.quad	18
	.quad	go..C427
	.quad	0
	.quad	uint16..d
	.quad	0
	.quad	20
	.quad	go..C428
	.quad	0
	.quad	uint32..d
	.quad	0
	.quad	24
	.quad	go..C429
	.quad	0
	.quad	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.Mode.2overflow.0.1.4void.5.5
	.quad	0
	.quad	32
	.quad	go..C431
	.quad	0
	.quad	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.Mode.2overflow.0.1.4void.5.5
	.quad	0
	.quad	48
	.quad	go..C432
	.quad	0
	.quad	uintptr..d
	.quad	0
	.quad	64
	.quad	go..C433
	.quad	0
	.quad	unsafe.Pointer..d
	.quad	0
	.quad	80
	.size	go..C434, 360

	.type	.Lconst.292,@object
	.section	.rodata..Lconst.292,"a",@progbits
.Lconst.292:
	.asciz	"Unknown user from host update: session=%s user=%s"
	.size	.Lconst.292, 50

	.type	.Lconst.294,@object
	.section	.rodata..Lconst.294,"a",@progbits
.Lconst.294:
	.asciz	"Received host update: session=%s cols=%d rows=%d"
	.size	.Lconst.294, 49

	.type	.Lconst.298,@object
	.section	.rodata..Lconst.298,"a",@progbits
.Lconst.298:
	.asciz	"authorization_failed"
	.size	.Lconst.298, 21

	.type	.Lconst.299,@object
	.section	.rodata..Lconst.299,"a",@progbits
.Lconst.299:
	.asciz	"Session secret mismatch."
	.size	.Lconst.299, 25

	.type	.Lconst.301,@object
	.section	.rodata..Lconst.301,"a",@progbits
	.p2align	3
.Lconst.301:
	.quad	.Lconst.299
	.quad	24
	.size	.Lconst.301, 16

	.type	.Lconst.303,@object
	.section	.rodata..Lconst.303,"a",@progbits
.Lconst.303:
	.asciz	"Client session running: session=%s"
	.size	.Lconst.303, 35

	.type	.Lconst.305,@object
	.section	.rodata..Lconst.305,"a",@progbits
.Lconst.305:
	.asciz	"Cleaning-up client: session=%s"
	.size	.Lconst.305, 31

	.type	gcbits..ha,@object
	.section	.rodata.gcbits..ha,"aG",@progbits,gcbits..ha,comdat
	.weak	gcbits..ha
gcbits..ha:
	.byte	7
	.size	gcbits..ha, 1

	.type	gcbits..GGGGa,@object
	.section	.rodata.gcbits..GGGGa,"aG",@progbits,gcbits..GGGGa,comdat
	.weak	gcbits..GGGGa
gcbits..GGGGa:
	.ascii	"\377\377\017"
	.size	gcbits..GGGGa, 3

	.type	gcbits..pppppppppppppppppa,@object
	.section	.rodata.gcbits..pppppppppppppppppa,"aG",@progbits,gcbits..pppppppppppppppppa,comdat
	.weak	gcbits..pppppppppppppppppa
gcbits..pppppppppppppppppa:
	.ascii	"\357\275\367\336{\357\275\367\336{\017"
	.size	gcbits..pppppppppppppppppa, 11

	.type	gcbits..ppaa,@object
	.section	.rodata.gcbits..ppaa,"aG",@progbits,gcbits..ppaa,comdat
	.weak	gcbits..ppaa
gcbits..ppaa:
	.ascii	"\357\001"
	.size	gcbits..ppaa, 2

	.type	gcbits..GGGGGGGG,@object
	.section	.rodata.gcbits..GGGGGGGG,"aG",@progbits,gcbits..GGGGGGGG,comdat
	.weak	gcbits..GGGGGGGG
gcbits..GGGGGGGG:
	.zero	5,255
	.size	gcbits..GGGGGGGG, 5

	.type	gcbits..Ga,@object
	.section	.rodata.gcbits..Ga,"aG",@progbits,gcbits..Ga,comdat
	.weak	gcbits..Ga
gcbits..Ga:
	.byte	31
	.size	gcbits..Ga, 1

	.type	gcbits..ppppa,@object
	.section	.rodata.gcbits..ppppa,"aG",@progbits,gcbits..ppppa,comdat
	.weak	gcbits..ppppa
gcbits..ppppa:
	.ascii	"\357\275\007"
	.size	gcbits..ppppa, 3

	.type	gcbits..pppppppppa,@object
	.section	.rodata.gcbits..pppppppppa,"aG",@progbits,gcbits..pppppppppa,comdat
	.weak	gcbits..pppppppppa
gcbits..pppppppppa:
	.ascii	"\357\275\367\336{\017"
	.size	gcbits..pppppppppa, 6

	.type	gcbits..ppppppa,@object
	.section	.rodata.gcbits..ppppppa,"aG",@progbits,gcbits..ppppppa,comdat
	.weak	gcbits..ppppppa
gcbits..ppppppa:
	.ascii	"\357\275\367\036"
	.size	gcbits..ppppppa, 4

	.type	gcbits..ppppp,@object
	.section	.rodata.gcbits..ppppp,"aG",@progbits,gcbits..ppppp,comdat
	.weak	gcbits..ppppp
gcbits..ppppp:
	.ascii	"\357\275\367"
	.size	gcbits..ppppp, 3

	.type	go..C0,@object
	.section	.data.go..C0,"aw",@progbits
	.p2align	4
go..C0:
	.quad	0
	.quad	67
	.quad	go..C14
	.quad	24
	.quad	24
	.quad	gcbits..ha
	.quad	go..C17
	.quad	32
	.quad	32
	.quad	gcbits..pa
	.quad	go..C21
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C24
	.quad	16
	.quad	16
	.quad	gcbits..da
	.quad	go..C31
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C36
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C38
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C39
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C40
	.quad	160
	.quad	160
	.quad	gcbits..GGGGa
	.quad	go..C82
	.quad	680
	.quad	672
	.quad	gcbits..pppppppppppppppppa
	.quad	go..C88
	.quad	80
	.quad	72
	.quad	gcbits..ppaa
	.quad	go..C91
	.quad	40
	.quad	32
	.quad	gcbits..pa
	.quad	go..C100
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C107
	.quad	24
	.quad	24
	.quad	gcbits..ha
	.quad	go..C108
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C110
	.quad	16
	.quad	16
	.quad	gcbits..da
	.quad	go..C111
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C115
	.quad	16
	.quad	16
	.quad	gcbits..da
	.quad	go..C116
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C118
	.quad	24
	.quad	24
	.quad	gcbits..ha
	.quad	go..C119
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C123
	.quad	16
	.quad	16
	.quad	gcbits..da
	.quad	go..C124
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C126
	.quad	24
	.quad	24
	.quad	gcbits..ha
	.quad	go..C127
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C130
	.quad	160
	.quad	160
	.quad	gcbits..GGGGa
	.quad	go..C145
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C147
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C149
	.quad	16
	.quad	16
	.quad	gcbits..da
	.quad	go..C150
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C153
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C154
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C156
	.quad	16
	.quad	16
	.quad	gcbits..da
	.quad	go..C157
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C161
	.quad	16
	.quad	16
	.quad	gcbits..da
	.quad	go..C164
	.quad	24
	.quad	24
	.quad	gcbits..ha
	.quad	go..C177
	.quad	24
	.quad	24
	.quad	gcbits..ha
	.quad	go..C180
	.quad	32
	.quad	32
	.quad	gcbits..pa
	.quad	go..C187
	.quad	16
	.quad	16
	.quad	gcbits..da
	.quad	go..C191
	.quad	320
	.quad	320
	.quad	gcbits..GGGGGGGG
	.quad	go..C208
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C209
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C211
	.quad	16
	.quad	16
	.quad	gcbits..da
	.quad	go..C212
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C213
	.quad	40
	.quad	40
	.quad	gcbits..Ga
	.quad	go..C230
	.quad	16
	.quad	16
	.quad	gcbits..da
	.quad	go..C231
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C232
	.quad	40
	.quad	40
	.quad	gcbits..Ga
	.quad	go..C253
	.quad	160
	.quad	152
	.quad	gcbits..ppppa
	.quad	go..C285
	.quad	360
	.quad	352
	.quad	gcbits..pppppppppa
	.quad	go..C286
	.quad	160
	.quad	152
	.quad	gcbits..ppppa
	.quad	go..C289
	.quad	80
	.quad	72
	.quad	gcbits..ppaa
	.quad	go..C300
	.quad	160
	.quad	152
	.quad	gcbits..ppppa
	.quad	go..C312
	.quad	360
	.quad	352
	.quad	gcbits..pppppppppa
	.quad	go..C318
	.quad	240
	.quad	232
	.quad	gcbits..ppppppa
	.quad	go..C326
	.quad	160
	.quad	152
	.quad	gcbits..ppppa
	.quad	go..C338
	.quad	360
	.quad	352
	.quad	gcbits..pppppppppa
	.quad	go..C341
	.quad	200
	.quad	192
	.quad	gcbits..ppppp
	.quad	go..C357
	.quad	160
	.quad	152
	.quad	gcbits..ppppa
	.quad	go..C366
	.quad	160
	.quad	152
	.quad	gcbits..ppppa
	.quad	go..C378
	.quad	360
	.quad	352
	.quad	gcbits..pppppppppa
	.quad	go..C389
	.quad	160
	.quad	152
	.quad	gcbits..ppppa
	.quad	go..C399
	.quad	160
	.quad	152
	.quad	gcbits..ppppa
	.quad	go..C409
	.quad	160
	.quad	152
	.quad	gcbits..ppppa
	.quad	go..C413
	.quad	80
	.quad	72
	.quad	gcbits..ppaa
	.quad	go..C422
	.quad	160
	.quad	152
	.quad	gcbits..ppppa
	.quad	go..C434
	.quad	360
	.quad	352
	.quad	gcbits..pppppppppa
	.size	go..C0, 2160

	.file	5 "<stdin>"
	.section	.debug_str,"MS",@progbits,1
.Linfo_string0:
	.asciz	"llvm-goc"
.Linfo_string1:
	.asciz	"./session.go"
.Linfo_string2:
	.asciz	"/home/wangcong/go_path/src/github.com/spolu/warp/daemon"
.Linfo_string3:
	.asciz	"runtime.writeBarrier"
.Linfo_string4:
	.asciz	"uint32"
.Linfo_string5:
	.asciz	"command_line_arguments.Session.SendError"
.Linfo_string6:
	.asciz	"daemon.SendError..1command_line_arguments.Session"
.Linfo_string7:
	.asciz	"void"
.Linfo_string8:
	.asciz	"command_line_arguments.Session.SendInternalError"
.Linfo_string9:
	.asciz	"daemon.SendInternalError..1command_line_arguments.Session"
.Linfo_string10:
	.asciz	"command_line_arguments.Session.TearDown"
.Linfo_string11:
	.asciz	"daemon.TearDown..1command_line_arguments.Session"
.Linfo_string12:
	.asciz	"command_line_arguments.Session.ToString"
.Linfo_string13:
	.asciz	"daemon.ToString..1command_line_arguments.Session"
.Linfo_string14:
	.asciz	"__data"
.Linfo_string15:
	.asciz	"uint8"
.Linfo_string16:
	.asciz	"__length"
.Linfo_string17:
	.asciz	"int"
.Linfo_string18:
	.asciz	"string"
.Linfo_string19:
	.asciz	"command_line_arguments.NewSession"
.Linfo_string20:
	.asciz	"daemon.NewSession"
.Linfo_string21:
	.asciz	"UNNAMED"
.Linfo_string22:
	.asciz	"session"
.Linfo_string23:
	.asciz	"Token"
.Linfo_string24:
	.asciz	"User"
.Linfo_string25:
	.asciz	"Secret"
.Linfo_string26:
	.asciz	"Session"
.Linfo_string27:
	.asciz	"warp"
.Linfo_string28:
	.asciz	"sessionType"
.Linfo_string29:
	.asciz	"SessionType"
.Linfo_string30:
	.asciz	"username"
.Linfo_string31:
	.asciz	"conn"
.Linfo_string32:
	.asciz	"__methods"
.Linfo_string33:
	.asciz	"__type_descriptor"
.Linfo_string34:
	.asciz	"size"
.Linfo_string35:
	.asciz	"uintptr"
.Linfo_string36:
	.asciz	"ptrdata"
.Linfo_string37:
	.asciz	"hash"
.Linfo_string38:
	.asciz	"kind"
.Linfo_string39:
	.asciz	"align"
.Linfo_string40:
	.asciz	"fieldAlign"
.Linfo_string41:
	.asciz	"hashfn"
.Linfo_string42:
	.asciz	"code"
.Linfo_string43:
	.asciz	"__go_descriptor"
.Linfo_string44:
	.asciz	"equalfn"
.Linfo_string45:
	.asciz	"bool"
.Linfo_string46:
	.asciz	"gcdata"
.Linfo_string47:
	.asciz	"uncommonType"
.Linfo_string48:
	.asciz	"name"
.Linfo_string49:
	.asciz	"pkgPath"
.Linfo_string50:
	.asciz	"methods"
.Linfo_string51:
	.asciz	"__values"
.Linfo_string52:
	.asciz	"mtyp"
.Linfo_string53:
	.asciz	"typ"
.Linfo_string54:
	.asciz	"tfn"
.Linfo_string55:
	.asciz	"method"
.Linfo_string56:
	.asciz	"__count"
.Linfo_string57:
	.asciz	"__capacity"
.Linfo_string58:
	.asciz	"struct{*method,int,int}"
.Linfo_string59:
	.asciz	"ptrToThis"
.Linfo_string60:
	.asciz	"_type"
.Linfo_string61:
	.asciz	"Close"
.Linfo_string62:
	.asciz	"Error"
.Linfo_string63:
	.asciz	"struct{*_type,*func(*void)string}"
.Linfo_string64:
	.asciz	"__object"
.Linfo_string65:
	.asciz	"error"
.Linfo_string66:
	.asciz	"LocalAddr"
.Linfo_string67:
	.asciz	"Network"
.Linfo_string68:
	.asciz	"String"
.Linfo_string69:
	.asciz	"struct{*_type,*func(*void)string,*func(*void)string}"
.Linfo_string70:
	.asciz	"Addr"
.Linfo_string71:
	.asciz	"Read"
.Linfo_string72:
	.asciz	"n"
.Linfo_string73:
	.asciz	"err"
.Linfo_string74:
	.asciz	"struct{int,error}"
.Linfo_string75:
	.asciz	"struct{*uint8,int,int}"
.Linfo_string76:
	.asciz	"RemoteAddr"
.Linfo_string77:
	.asciz	"SetDeadline"
.Linfo_string78:
	.asciz	"wall"
.Linfo_string79:
	.asciz	"uint64"
.Linfo_string80:
	.asciz	"ext"
.Linfo_string81:
	.asciz	"int64"
.Linfo_string82:
	.asciz	"loc"
.Linfo_string83:
	.asciz	"zone"
.Linfo_string84:
	.asciz	"offset"
.Linfo_string85:
	.asciz	"isDST"
.Linfo_string86:
	.asciz	".time.zone"
.Linfo_string87:
	.asciz	"struct{*.time.zone,int,int}"
.Linfo_string88:
	.asciz	"tx"
.Linfo_string89:
	.asciz	"when"
.Linfo_string90:
	.asciz	"index"
.Linfo_string91:
	.asciz	"isstd"
.Linfo_string92:
	.asciz	"isutc"
.Linfo_string93:
	.asciz	".time.zoneTrans"
.Linfo_string94:
	.asciz	"struct{*.time.zoneTrans,int,int}"
.Linfo_string95:
	.asciz	"cacheStart"
.Linfo_string96:
	.asciz	"cacheEnd"
.Linfo_string97:
	.asciz	"cacheZone"
.Linfo_string98:
	.asciz	"Location"
.Linfo_string99:
	.asciz	"Time"
.Linfo_string100:
	.asciz	"SetReadDeadline"
.Linfo_string101:
	.asciz	"SetWriteDeadline"
.Linfo_string102:
	.asciz	"Write"
.Linfo_string103:
	.asciz	"struct{*_type,*func(*void)error,*func(*void)Addr,*func(*void,struct{*uint8,int,int})struct{int,error},*func(*void)Addr,*func(*void,Time)error,*func(*void,Time)error,*func(*void,Time)error,*func(*void,struct{*uint8,int,int})struct{int,error}}"
.Linfo_string104:
	.asciz	"Conn"
.Linfo_string105:
	.asciz	"mux"
.Linfo_string106:
	.asciz	"remoteGoAway"
.Linfo_string107:
	.asciz	"int32"
.Linfo_string108:
	.asciz	"localGoAway"
.Linfo_string109:
	.asciz	"nextStreamID"
.Linfo_string110:
	.asciz	"config"
.Linfo_string111:
	.asciz	"AcceptBacklog"
.Linfo_string112:
	.asciz	"EnableKeepAlive"
.Linfo_string113:
	.asciz	"KeepAliveInterval"
.Linfo_string114:
	.asciz	"Duration"
.Linfo_string115:
	.asciz	"ConnectionWriteTimeout"
.Linfo_string116:
	.asciz	"MaxStreamWindowSize"
.Linfo_string117:
	.asciz	"LogOutput"
.Linfo_string118:
	.asciz	"struct{*_type,*func(*void,struct{*uint8,int,int})struct{int,error}}"
.Linfo_string119:
	.asciz	"Writer"
.Linfo_string120:
	.asciz	"Config"
.Linfo_string121:
	.asciz	"logger"
.Linfo_string122:
	.asciz	"mu"
.Linfo_string123:
	.asciz	"state"
.Linfo_string124:
	.asciz	"sema"
.Linfo_string125:
	.asciz	"Mutex"
.Linfo_string126:
	.asciz	"prefix"
.Linfo_string127:
	.asciz	"flag"
.Linfo_string128:
	.asciz	"out"
.Linfo_string129:
	.asciz	"buf"
.Linfo_string130:
	.asciz	"Logger"
.Linfo_string131:
	.asciz	"struct{*_type,*func(*void)error,*func(*void,struct{*uint8,int,int})struct{int,error},*func(*void,struct{*uint8,int,int})struct{int,error}}"
.Linfo_string132:
	.asciz	"ReadWriteCloser"
.Linfo_string133:
	.asciz	"bufRead"
.Linfo_string134:
	.asciz	"rd"
.Linfo_string135:
	.asciz	"Reader"
.Linfo_string136:
	.asciz	"r"
.Linfo_string137:
	.asciz	"w"
.Linfo_string138:
	.asciz	"lastByte"
.Linfo_string139:
	.asciz	"lastRuneSize"
.Linfo_string140:
	.asciz	"pings"
.Linfo_string141:
	.asciz	"count"
.Linfo_string142:
	.asciz	"flags"
.Linfo_string143:
	.asciz	"B"
.Linfo_string144:
	.asciz	"noverflow"
.Linfo_string145:
	.asciz	"uint16"
.Linfo_string146:
	.asciz	"hash0"
.Linfo_string147:
	.asciz	"buckets"
.Linfo_string148:
	.asciz	"oldbuckets"
.Linfo_string149:
	.asciz	"nevacuate"
.Linfo_string150:
	.asciz	"extra"
.Linfo_string151:
	.asciz	"runtime.hmap"
.Linfo_string152:
	.asciz	"pingID"
.Linfo_string153:
	.asciz	"pingLock"
.Linfo_string154:
	.asciz	"streams"
.Linfo_string155:
	.asciz	"inflight"
.Linfo_string156:
	.asciz	"streamLock"
.Linfo_string157:
	.asciz	"synCh"
.Linfo_string158:
	.asciz	"__go_channel"
.Linfo_string159:
	.asciz	"acceptCh"
.Linfo_string160:
	.asciz	"sendCh"
.Linfo_string161:
	.asciz	"recvDoneCh"
.Linfo_string162:
	.asciz	"shutdown"
.Linfo_string163:
	.asciz	"shutdownErr"
.Linfo_string164:
	.asciz	"shutdownCh"
.Linfo_string165:
	.asciz	"shutdownLock"
.Linfo_string166:
	.asciz	"stateC"
.Linfo_string167:
	.asciz	"stateW"
.Linfo_string168:
	.asciz	"mutex"
.Linfo_string169:
	.asciz	"struct{*Writer,int,int}"
.Linfo_string170:
	.asciz	"sent"
.Linfo_string171:
	.asciz	"countState"
.Linfo_string172:
	.asciz	"enc"
.Linfo_string173:
	.asciz	"b"
.Linfo_string174:
	.asciz	"data"
.Linfo_string175:
	.asciz	"scratch"
.Linfo_string176:
	.asciz	"__ARRAY_SIZE_TYPE__"
.Linfo_string177:
	.asciz	".encoding/gob.encBuffer"
.Linfo_string178:
	.asciz	"sendZero"
.Linfo_string179:
	.asciz	"fieldnum"
.Linfo_string180:
	.asciz	"next"
.Linfo_string181:
	.asciz	".encoding/gob.encoderState"
.Linfo_string182:
	.asciz	"freeList"
.Linfo_string183:
	.asciz	"byteBuf"
.Linfo_string184:
	.asciz	"Encoder"
.Linfo_string185:
	.asciz	"updateC"
.Linfo_string186:
	.asciz	"updateR"
.Linfo_string187:
	.asciz	".encoding/gob.decBuffer"
.Linfo_string188:
	.asciz	"wireType"
.Linfo_string189:
	.asciz	"decoderCache"
.Linfo_string190:
	.asciz	"ignorerCache"
.Linfo_string191:
	.asciz	"dec"
.Linfo_string192:
	.asciz	".encoding/gob.decoderState"
.Linfo_string193:
	.asciz	"countBuf"
.Linfo_string194:
	.asciz	"Decoder"
.Linfo_string195:
	.asciz	"errorC"
.Linfo_string196:
	.asciz	"errorW"
.Linfo_string197:
	.asciz	"dataC"
.Linfo_string198:
	.asciz	"tornDown"
.Linfo_string199:
	.asciz	"ctx"
.Linfo_string200:
	.asciz	"Deadline"
.Linfo_string201:
	.asciz	"deadline"
.Linfo_string202:
	.asciz	"ok"
.Linfo_string203:
	.asciz	"struct{Time,bool}"
.Linfo_string204:
	.asciz	"Done"
.Linfo_string205:
	.asciz	"Err"
.Linfo_string206:
	.asciz	"Value"
.Linfo_string207:
	.asciz	"PrivateKey"
.Linfo_string208:
	.asciz	"struct{*_type,*func(*void)struct{Time,bool},*func(*void)*__go_channel,*func(*void)error,*func(*void,PrivateKey)PrivateKey}"
.Linfo_string209:
	.asciz	"Context"
.Linfo_string210:
	.asciz	"cancel"
.Linfo_string211:
	.asciz	"struct{*Session,error}"
.Linfo_string212:
	.asciz	"daemon.command_line_arguments..thunk1"
.Linfo_string213:
	.asciz	"daemon.func1"
.Linfo_string214:
	.asciz	"daemon.command_line_arguments..thunk2"
.Linfo_string215:
	.asciz	"daemon.command_line_arguments..thunk3"
.Linfo_string216:
	.asciz	"command_line_arguments.Srv.Run"
.Linfo_string217:
	.asciz	"daemon.Run..1command_line_arguments.Srv"
.Linfo_string218:
	.asciz	"command_line_arguments.Srv.handle"
.Linfo_string219:
	.asciz	"daemon.handle..1command_line_arguments.Srv"
.Linfo_string220:
	.asciz	"command_line_arguments.Srv.handleHost"
.Linfo_string221:
	.asciz	"daemon.handleHost..1command_line_arguments.Srv"
.Linfo_string222:
	.asciz	"command_line_arguments.Srv.handleShellClient"
.Linfo_string223:
	.asciz	"daemon.handleShellClient..1command_line_arguments.Srv"
.Linfo_string224:
	.asciz	"command_line_arguments.Warp.CientSessions"
.Linfo_string225:
	.asciz	"daemon.CientSessions..1command_line_arguments.Warp"
.Linfo_string226:
	.asciz	"struct{**Session,int,int}"
.Linfo_string227:
	.asciz	"command_line_arguments.Warp.State"
.Linfo_string228:
	.asciz	"daemon.State..1command_line_arguments.Warp"
.Linfo_string229:
	.asciz	"Warp"
.Linfo_string230:
	.asciz	"WindowSize"
.Linfo_string231:
	.asciz	"Rows"
.Linfo_string232:
	.asciz	"Cols"
.Linfo_string233:
	.asciz	"Size"
.Linfo_string234:
	.asciz	"Users"
.Linfo_string235:
	.asciz	"State"
.Linfo_string236:
	.asciz	"command_line_arguments.Warp.handleHost"
.Linfo_string237:
	.asciz	"daemon.handleHost..1command_line_arguments.Warp"
.Linfo_string238:
	.asciz	"command_line_arguments.Warp.handleShellClient"
.Linfo_string239:
	.asciz	"daemon.handleShellClient..1command_line_arguments.Warp"
.Linfo_string240:
	.asciz	"command_line_arguments.Warp.rcvHostData"
.Linfo_string241:
	.asciz	"daemon.rcvHostData..1command_line_arguments.Warp"
.Linfo_string242:
	.asciz	"command_line_arguments.Warp.rcvShellClientData"
.Linfo_string243:
	.asciz	"daemon.rcvShellClientData..1command_line_arguments.Warp"
.Linfo_string244:
	.asciz	"command_line_arguments.Warp.updateClientSessions"
.Linfo_string245:
	.asciz	"daemon.updateClientSessions..1command_line_arguments.Warp"
.Linfo_string246:
	.asciz	"command_line_arguments.Warp.updateHost"
.Linfo_string247:
	.asciz	"daemon.updateHost..1command_line_arguments.Warp"
.Linfo_string248:
	.asciz	"command_line_arguments.HostState.User"
.Linfo_string249:
	.asciz	"daemon.User..1command_line_arguments.HostState"
.Linfo_string250:
	.asciz	"Username"
.Linfo_string251:
	.asciz	"Mode"
.Linfo_string252:
	.asciz	"Hosting"
.Linfo_string253:
	.asciz	"command_line_arguments.UserState.User"
.Linfo_string254:
	.asciz	"daemon.User..1command_line_arguments.UserState"
.Linfo_string255:
	.asciz	"command_line_arguments.NewSrv"
.Linfo_string256:
	.asciz	"daemon.NewSrv"
.Linfo_string257:
	.asciz	"address"
.Linfo_string258:
	.asciz	"certFile"
.Linfo_string259:
	.asciz	"keyFile"
.Linfo_string260:
	.asciz	"warps"
.Linfo_string261:
	.asciz	"Srv"
.Linfo_string262:
	.asciz	"daemon.command_line_arguments..thunk4"
.Linfo_string263:
	.asciz	"daemon.command_line_arguments..thunk5"
.Linfo_string264:
	.asciz	"daemon.command_line_arguments..thunk6"
.Linfo_string265:
	.asciz	"daemon.command_line_arguments..thunk7"
.Linfo_string266:
	.asciz	"daemon.command_line_arguments..thunk8"
.Linfo_string267:
	.asciz	"daemon.func2"
.Linfo_string268:
	.asciz	"daemon.command_line_arguments..thunk9"
.Linfo_string269:
	.asciz	"daemon.func4"
.Linfo_string270:
	.asciz	"daemon.command_line_arguments..thunk10"
.Linfo_string271:
	.asciz	"daemon.command_line_arguments..thunk0"
.Linfo_string272:
	.asciz	"daemon.func3"
.Linfo_string273:
	.asciz	"daemon.command_line_arguments..thunk11"
.Linfo_string274:
	.asciz	"command_line_arguments..import"
.Linfo_string275:
	.asciz	"daemon.command_line_arguments..import"
.Linfo_string276:
	.asciz	"message"
.Linfo_string277:
	.asciz	"ss"
.Linfo_string278:
	.asciz	"param"
.Linfo_string279:
	.asciz	"$ret1"
.Linfo_string280:
	.asciz	"$ret0"
.Linfo_string281:
	.asciz	"hello"
.Linfo_string282:
	.asciz	"From"
.Linfo_string283:
	.asciz	"Version"
.Linfo_string284:
	.asciz	"Type"
.Linfo_string285:
	.asciz	"SessionHello"
.Linfo_string286:
	.asciz	"__go_thunk_parameter"
.Linfo_string287:
	.asciz	"a0"
.Linfo_string288:
	.asciz	"struct{*Mutex}"
.Linfo_string289:
	.asciz	"$ret14"
.Linfo_string290:
	.asciz	"fn"
.Linfo_string291:
	.asciz	"struct{*__go_descriptor}"
.Linfo_string292:
	.asciz	"$ret15"
.Linfo_string293:
	.asciz	"s"
.Linfo_string294:
	.asciz	"$ret4"
.Linfo_string295:
	.asciz	"ln"
.Linfo_string296:
	.asciz	"Accept"
.Linfo_string297:
	.asciz	"struct{Conn,error}"
.Linfo_string298:
	.asciz	"struct{*_type,*func(*void)struct{Conn,error},*func(*void)Addr,*func(*void)error}"
.Linfo_string299:
	.asciz	"Listener"
.Linfo_string300:
	.asciz	"tlsConfig"
.Linfo_string301:
	.asciz	"Rand"
.Linfo_string302:
	.asciz	"Certificates"
.Linfo_string303:
	.asciz	"Certificate"
.Linfo_string304:
	.asciz	"struct{*struct{*uint8,int,int},int,int}"
.Linfo_string305:
	.asciz	"OCSPStaple"
.Linfo_string306:
	.asciz	"SignedCertificateTimestamps"
.Linfo_string307:
	.asciz	"Leaf"
.Linfo_string308:
	.asciz	"Raw"
.Linfo_string309:
	.asciz	"RawTBSCertificate"
.Linfo_string310:
	.asciz	"RawSubjectPublicKeyInfo"
.Linfo_string311:
	.asciz	"RawSubject"
.Linfo_string312:
	.asciz	"RawIssuer"
.Linfo_string313:
	.asciz	"Signature"
.Linfo_string314:
	.asciz	"SignatureAlgorithm"
.Linfo_string315:
	.asciz	"PublicKeyAlgorithm"
.Linfo_string316:
	.asciz	"PublicKey"
.Linfo_string317:
	.asciz	"SerialNumber"
.Linfo_string318:
	.asciz	"neg"
.Linfo_string319:
	.asciz	"abs"
.Linfo_string320:
	.asciz	"Word"
.Linfo_string321:
	.asciz	".math/big.nat"
.Linfo_string322:
	.asciz	"Int"
.Linfo_string323:
	.asciz	"Issuer"
.Linfo_string324:
	.asciz	"Country"
.Linfo_string325:
	.asciz	"struct{*string,int,int}"
.Linfo_string326:
	.asciz	"Organization"
.Linfo_string327:
	.asciz	"OrganizationalUnit"
.Linfo_string328:
	.asciz	"Locality"
.Linfo_string329:
	.asciz	"Province"
.Linfo_string330:
	.asciz	"StreetAddress"
.Linfo_string331:
	.asciz	"PostalCode"
.Linfo_string332:
	.asciz	"CommonName"
.Linfo_string333:
	.asciz	"Names"
.Linfo_string334:
	.asciz	"ObjectIdentifier"
.Linfo_string335:
	.asciz	"AttributeTypeAndValue"
.Linfo_string336:
	.asciz	"struct{*AttributeTypeAndValue,int,int}"
.Linfo_string337:
	.asciz	"ExtraNames"
.Linfo_string338:
	.asciz	"Name"
.Linfo_string339:
	.asciz	"Subject"
.Linfo_string340:
	.asciz	"NotBefore"
.Linfo_string341:
	.asciz	"NotAfter"
.Linfo_string342:
	.asciz	"KeyUsage"
.Linfo_string343:
	.asciz	"Extensions"
.Linfo_string344:
	.asciz	"Id"
.Linfo_string345:
	.asciz	"Critical"
.Linfo_string346:
	.asciz	"Extension"
.Linfo_string347:
	.asciz	"struct{*Extension,int,int}"
.Linfo_string348:
	.asciz	"ExtraExtensions"
.Linfo_string349:
	.asciz	"UnhandledCriticalExtensions"
.Linfo_string350:
	.asciz	"struct{*ObjectIdentifier,int,int}"
.Linfo_string351:
	.asciz	"ExtKeyUsage"
.Linfo_string352:
	.asciz	"struct{*ExtKeyUsage,int,int}"
.Linfo_string353:
	.asciz	"UnknownExtKeyUsage"
.Linfo_string354:
	.asciz	"BasicConstraintsValid"
.Linfo_string355:
	.asciz	"IsCA"
.Linfo_string356:
	.asciz	"MaxPathLen"
.Linfo_string357:
	.asciz	"MaxPathLenZero"
.Linfo_string358:
	.asciz	"SubjectKeyId"
.Linfo_string359:
	.asciz	"AuthorityKeyId"
.Linfo_string360:
	.asciz	"OCSPServer"
.Linfo_string361:
	.asciz	"IssuingCertificateURL"
.Linfo_string362:
	.asciz	"DNSNames"
.Linfo_string363:
	.asciz	"EmailAddresses"
.Linfo_string364:
	.asciz	"IPAddresses"
.Linfo_string365:
	.asciz	"IP"
.Linfo_string366:
	.asciz	"struct{*IP,int,int}"
.Linfo_string367:
	.asciz	"URIs"
.Linfo_string368:
	.asciz	"Scheme"
.Linfo_string369:
	.asciz	"Opaque"
.Linfo_string370:
	.asciz	"password"
.Linfo_string371:
	.asciz	"passwordSet"
.Linfo_string372:
	.asciz	"Userinfo"
.Linfo_string373:
	.asciz	"Host"
.Linfo_string374:
	.asciz	"Path"
.Linfo_string375:
	.asciz	"RawPath"
.Linfo_string376:
	.asciz	"ForceQuery"
.Linfo_string377:
	.asciz	"RawQuery"
.Linfo_string378:
	.asciz	"Fragment"
.Linfo_string379:
	.asciz	"URL"
.Linfo_string380:
	.asciz	"struct{**URL,int,int}"
.Linfo_string381:
	.asciz	"PermittedDNSDomainsCritical"
.Linfo_string382:
	.asciz	"PermittedDNSDomains"
.Linfo_string383:
	.asciz	"ExcludedDNSDomains"
.Linfo_string384:
	.asciz	"PermittedIPRanges"
.Linfo_string385:
	.asciz	"Mask"
.Linfo_string386:
	.asciz	"IPMask"
.Linfo_string387:
	.asciz	"IPNet"
.Linfo_string388:
	.asciz	"struct{**IPNet,int,int}"
.Linfo_string389:
	.asciz	"ExcludedIPRanges"
.Linfo_string390:
	.asciz	"PermittedEmailAddresses"
.Linfo_string391:
	.asciz	"ExcludedEmailAddresses"
.Linfo_string392:
	.asciz	"PermittedURIDomains"
.Linfo_string393:
	.asciz	"ExcludedURIDomains"
.Linfo_string394:
	.asciz	"CRLDistributionPoints"
.Linfo_string395:
	.asciz	"PolicyIdentifiers"
.Linfo_string396:
	.asciz	"struct{*Certificate,int,int}"
.Linfo_string397:
	.asciz	"NameToCertificate"
.Linfo_string398:
	.asciz	"GetCertificate"
.Linfo_string399:
	.asciz	"struct{*Certificate,error}"
.Linfo_string400:
	.asciz	"CipherSuites"
.Linfo_string401:
	.asciz	"struct{*uint16,int,int}"
.Linfo_string402:
	.asciz	"ServerName"
.Linfo_string403:
	.asciz	"SupportedCurves"
.Linfo_string404:
	.asciz	"CurveID"
.Linfo_string405:
	.asciz	"struct{*CurveID,int,int}"
.Linfo_string406:
	.asciz	"SupportedPoints"
.Linfo_string407:
	.asciz	"SignatureSchemes"
.Linfo_string408:
	.asciz	"SignatureScheme"
.Linfo_string409:
	.asciz	"struct{*SignatureScheme,int,int}"
.Linfo_string410:
	.asciz	"SupportedProtos"
.Linfo_string411:
	.asciz	"SupportedVersions"
.Linfo_string412:
	.asciz	"ClientHelloInfo"
.Linfo_string413:
	.asciz	"GetClientCertificate"
.Linfo_string414:
	.asciz	"AcceptableCAs"
.Linfo_string415:
	.asciz	"CertificateRequestInfo"
.Linfo_string416:
	.asciz	"GetConfigForClient"
.Linfo_string417:
	.asciz	"struct{*Config,error}"
.Linfo_string418:
	.asciz	"VerifyPeerCertificate"
.Linfo_string419:
	.asciz	"struct{**Certificate,int,int}"
.Linfo_string420:
	.asciz	"struct{*struct{**Certificate,int,int},int,int}"
.Linfo_string421:
	.asciz	"RootCAs"
.Linfo_string422:
	.asciz	"bySubjectKeyId"
.Linfo_string423:
	.asciz	"byName"
.Linfo_string424:
	.asciz	"certs"
.Linfo_string425:
	.asciz	"CertPool"
.Linfo_string426:
	.asciz	"NextProtos"
.Linfo_string427:
	.asciz	"ClientAuth"
.Linfo_string428:
	.asciz	"ClientAuthType"
.Linfo_string429:
	.asciz	"ClientCAs"
.Linfo_string430:
	.asciz	"InsecureSkipVerify"
.Linfo_string431:
	.asciz	"PreferServerCipherSuites"
.Linfo_string432:
	.asciz	"SessionTicketsDisabled"
.Linfo_string433:
	.asciz	"SessionTicketKey"
.Linfo_string434:
	.asciz	"ClientSessionCache"
.Linfo_string435:
	.asciz	"Get"
.Linfo_string436:
	.asciz	"sessionTicket"
.Linfo_string437:
	.asciz	"vers"
.Linfo_string438:
	.asciz	"cipherSuite"
.Linfo_string439:
	.asciz	"masterSecret"
.Linfo_string440:
	.asciz	"serverCertificates"
.Linfo_string441:
	.asciz	"verifiedChains"
.Linfo_string442:
	.asciz	"ClientSessionState"
.Linfo_string443:
	.asciz	"struct{*ClientSessionState,bool}"
.Linfo_string444:
	.asciz	"Put"
.Linfo_string445:
	.asciz	"struct{*_type,*func(*void,string)struct{*ClientSessionState,bool},*func(*void,string,*ClientSessionState)void}"
.Linfo_string446:
	.asciz	"MinVersion"
.Linfo_string447:
	.asciz	"MaxVersion"
.Linfo_string448:
	.asciz	"CurvePreferences"
.Linfo_string449:
	.asciz	"DynamicRecordSizingDisabled"
.Linfo_string450:
	.asciz	"Renegotiation"
.Linfo_string451:
	.asciz	"RenegotiationSupport"
.Linfo_string452:
	.asciz	"KeyLogWriter"
.Linfo_string453:
	.asciz	"serverInitOnce"
.Linfo_string454:
	.asciz	"m"
.Linfo_string455:
	.asciz	"done"
.Linfo_string456:
	.asciz	"Once"
.Linfo_string457:
	.asciz	"writerSem"
.Linfo_string458:
	.asciz	"readerSem"
.Linfo_string459:
	.asciz	"readerCount"
.Linfo_string460:
	.asciz	"readerWait"
.Linfo_string461:
	.asciz	"RWMutex"
.Linfo_string462:
	.asciz	"sessionTicketKeys"
.Linfo_string463:
	.asciz	"keyName"
.Linfo_string464:
	.asciz	"aesKey"
.Linfo_string465:
	.asciz	"hmacKey"
.Linfo_string466:
	.asciz	".crypto/tls.ticketKey"
.Linfo_string467:
	.asciz	"struct{*.crypto/tls.ticketKey,int,int}"
.Linfo_string468:
	.asciz	"$ret5"
.Linfo_string469:
	.asciz	"initial"
.Linfo_string470:
	.asciz	"Modes"
.Linfo_string471:
	.asciz	"HostUpdate"
.Linfo_string472:
	.asciz	"$ret6"
.Linfo_string473:
	.asciz	"$ret7"
.Linfo_string474:
	.asciz	"token"
.Linfo_string475:
	.asciz	"windowSize"
.Linfo_string476:
	.asciz	"host"
.Linfo_string477:
	.asciz	"UserState"
.Linfo_string478:
	.asciz	"mode"
.Linfo_string479:
	.asciz	"sessions"
.Linfo_string480:
	.asciz	"HostState"
.Linfo_string481:
	.asciz	"clients"
.Linfo_string482:
	.asciz	"user"
.Linfo_string483:
	.asciz	"c"
.Linfo_string484:
	.asciz	"$ret11"
.Linfo_string485:
	.asciz	"$ret10"
.Linfo_string486:
	.asciz	"isHostSession"
.Linfo_string487:
	.asciz	"any"
.Linfo_string488:
	.asciz	"sink$0"
.Linfo_string489:
	.asciz	"st"
.Linfo_string490:
	.asciz	"h"
.Linfo_string491:
	.asciz	"$ret9"
.Linfo_string492:
	.asciz	"u"
.Linfo_string493:
	.asciz	"$ret8"
.Linfo_string494:
	.asciz	"$ret3"
.Linfo_string495:
	.asciz	"object"
.Linfo_string496:
	.asciz	"struct{Listener}"
.Linfo_string497:
	.asciz	"$ret16"
.Linfo_string498:
	.asciz	"struct{*Session}"
.Linfo_string499:
	.asciz	"$ret17"
.Linfo_string500:
	.asciz	"sink$1"
.Linfo_string501:
	.asciz	"$ret12"
	.section	.debug_loc,"",@progbits
.Ldebug_loc0:
	.quad	.Lfunc_begin0
	.quad	.Ltmp43
	.short	1
	.byte	85
	.quad	.Ltmp43
	.quad	.Ltmp63
	.short	1
	.byte	83
	.quad	.Ltmp67
	.quad	.Ltmp67
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc1:
	.quad	.Lfunc_begin0
	.quad	.Ltmp43
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp43
	.quad	.Ltmp43
	.short	7
	.byte	84
	.byte	147
	.byte	8
	.byte	119
	.byte	40
	.byte	147
	.byte	8
	.quad	.Ltmp43
	.quad	.Ltmp75
	.short	8
	.byte	119
	.byte	32
	.byte	147
	.byte	8
	.byte	119
	.byte	40
	.byte	147
	.byte	8
	.quad	.Ltmp77
	.quad	.Lfunc_end0
	.short	8
	.byte	119
	.byte	32
	.byte	147
	.byte	8
	.byte	119
	.byte	40
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc2:
	.quad	.Lfunc_begin0
	.quad	.Ltmp43
	.short	6
	.byte	82
	.byte	147
	.byte	8
	.byte	88
	.byte	147
	.byte	8
	.quad	.Ltmp43
	.quad	.Ltmp43
	.short	7
	.byte	82
	.byte	147
	.byte	8
	.byte	119
	.byte	48
	.byte	147
	.byte	8
	.quad	.Ltmp43
	.quad	.Ltmp76
	.short	7
	.byte	93
	.byte	147
	.byte	8
	.byte	119
	.byte	48
	.byte	147
	.byte	8
	.quad	.Ltmp77
	.quad	.Lfunc_end0
	.short	7
	.byte	93
	.byte	147
	.byte	8
	.byte	119
	.byte	48
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc3:
	.quad	.Ltmp64
	.quad	.Ltmp66
	.short	6
	.byte	86
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc4:
	.quad	.Lfunc_begin1
	.quad	.Ltmp78
	.short	1
	.byte	85
	.quad	.Ltmp78
	.quad	.Ltmp82
	.short	1
	.byte	92
	.quad	0
	.quad	0
.Ldebug_loc5:
	.quad	.Lfunc_begin1
	.quad	.Ltmp78
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp78
	.quad	.Ltmp78
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp78
	.quad	.Ltmp79
	.short	6
	.byte	95
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp79
	.quad	.Ltmp80
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp80
	.quad	.Ltmp81
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc6:
	.quad	.Lfunc_begin2
	.quad	.Ltmp125
	.short	1
	.byte	85
	.quad	.Ltmp125
	.quad	.Ltmp129
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc7:
	.quad	.Ltmp127
	.quad	.Ltmp156
	.short	1
	.byte	95
	.quad	0
	.quad	0
.Ldebug_loc8:
	.quad	.Lfunc_begin3
	.quad	.Ltmp160
	.short	1
	.byte	85
	.quad	.Ltmp161
	.quad	.Ltmp162
	.short	1
	.byte	85
	.quad	0
	.quad	0
.Ldebug_loc9:
	.quad	.Lfunc_begin4
	.quad	.Ltmp164
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp164
	.quad	.Ltmp164
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	83
	.byte	147
	.byte	8
	.quad	.Ltmp164
	.quad	.Ltmp174
	.short	6
	.byte	94
	.byte	147
	.byte	8
	.byte	83
	.byte	147
	.byte	8
	.quad	.Ltmp174
	.quad	.Ltmp184
	.short	6
	.byte	86
	.byte	147
	.byte	8
	.byte	83
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc10:
	.quad	.Lfunc_begin4
	.quad	.Ltmp164
	.short	1
	.byte	82
	.quad	.Ltmp164
	.quad	.Ltmp177
	.short	1
	.byte	93
	.quad	.Ltmp177
	.quad	.Ltmp218
	.short	3
	.byte	119
	.byte	208
	.byte	0
	.quad	.Ltmp219
	.quad	.Lfunc_end4
	.short	3
	.byte	119
	.byte	208
	.byte	0
	.quad	0
	.quad	0
.Ldebug_loc11:
	.quad	.Lfunc_begin4
	.quad	.Ltmp164
	.short	6
	.byte	88
	.byte	147
	.byte	8
	.byte	89
	.byte	147
	.byte	8
	.quad	.Ltmp164
	.quad	.Ltmp164
	.short	6
	.byte	88
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.quad	.Ltmp164
	.quad	.Ltmp188
	.short	6
	.byte	92
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.quad	.Ltmp189
	.quad	.Ltmp215
	.short	6
	.byte	92
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.quad	.Ltmp219
	.quad	.Ltmp235
	.short	6
	.byte	92
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.quad	.Ltmp245
	.quad	.Ltmp246
	.short	6
	.byte	92
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.quad	.Ltmp258
	.quad	.Lfunc_end4
	.short	6
	.byte	92
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc12:
	.quad	.Ltmp168
	.quad	.Ltmp170
	.short	3
	.byte	80
	.byte	147
	.byte	8
	.quad	.Ltmp173
	.quad	.Ltmp176
	.short	3
	.byte	80
	.byte	147
	.byte	8
	.quad	.Ltmp181
	.quad	.Ltmp182
	.short	9
	.byte	80
	.byte	147
	.byte	8
	.byte	117
	.byte	24
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp183
	.quad	.Ltmp188
	.short	9
	.byte	83
	.byte	147
	.byte	8
	.byte	117
	.byte	24
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp189
	.quad	.Ltmp198
	.short	9
	.byte	83
	.byte	147
	.byte	8
	.byte	117
	.byte	24
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp199
	.quad	.Ltmp204
	.short	9
	.byte	86
	.byte	147
	.byte	8
	.byte	117
	.byte	24
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp236
	.quad	.Ltmp237
	.short	9
	.byte	86
	.byte	147
	.byte	8
	.byte	117
	.byte	24
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp238
	.quad	.Ltmp243
	.short	9
	.byte	86
	.byte	147
	.byte	8
	.byte	117
	.byte	24
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp251
	.quad	.Ltmp252
	.short	9
	.byte	86
	.byte	147
	.byte	8
	.byte	117
	.byte	24
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp253
	.quad	.Ltmp258
	.short	9
	.byte	86
	.byte	147
	.byte	8
	.byte	117
	.byte	24
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp258
	.quad	.Lfunc_end4
	.short	9
	.byte	83
	.byte	147
	.byte	8
	.byte	117
	.byte	24
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc13:
	.quad	.Ltmp171
	.quad	.Ltmp172
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp217
	.quad	.Ltmp218
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp257
	.quad	.Ltmp257
	.short	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp257
	.quad	.Lfunc_end4
	.short	10
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc14:
	.quad	.Ltmp175
	.quad	.Ltmp179
	.short	1
	.byte	94
	.quad	.Ltmp179
	.quad	.Ltmp188
	.short	1
	.byte	95
	.quad	.Ltmp189
	.quad	.Ltmp208
	.short	1
	.byte	95
	.quad	.Ltmp208
	.quad	.Ltmp216
	.short	3
	.byte	119
	.byte	192
	.byte	0
	.quad	.Ltmp219
	.quad	.Ltmp258
	.short	3
	.byte	119
	.byte	192
	.byte	0
	.quad	.Ltmp258
	.quad	.Lfunc_end4
	.short	1
	.byte	95
	.quad	0
	.quad	0
.Ldebug_loc15:
	.quad	.Ltmp178
	.quad	.Ltmp180
	.short	1
	.byte	80
	.quad	.Ltmp180
	.quad	.Ltmp188
	.short	1
	.byte	93
	.quad	.Ltmp189
	.quad	.Ltmp216
	.short	1
	.byte	93
	.quad	.Ltmp219
	.quad	.Ltmp225
	.short	1
	.byte	93
	.quad	.Ltmp228
	.quad	.Ltmp231
	.short	1
	.byte	93
	.quad	.Ltmp258
	.quad	.Lfunc_end4
	.short	1
	.byte	93
	.quad	0
	.quad	0
.Ldebug_loc16:
	.quad	.Ltmp178
	.quad	.Ltmp180
	.short	1
	.byte	80
	.quad	.Ltmp180
	.quad	.Ltmp188
	.short	1
	.byte	93
	.quad	.Ltmp189
	.quad	.Ltmp216
	.short	1
	.byte	93
	.quad	.Ltmp219
	.quad	.Ltmp225
	.short	1
	.byte	93
	.quad	.Ltmp228
	.quad	.Ltmp231
	.short	1
	.byte	93
	.quad	.Ltmp258
	.quad	.Lfunc_end4
	.short	1
	.byte	93
	.quad	0
	.quad	0
.Ldebug_loc17:
	.quad	.Ltmp212
	.quad	.Ltmp216
	.short	1
	.byte	95
	.quad	.Ltmp219
	.quad	.Ltmp227
	.short	1
	.byte	95
	.quad	.Ltmp228
	.quad	.Ltmp233
	.short	1
	.byte	95
	.quad	.Ltmp245
	.quad	.Ltmp246
	.short	1
	.byte	95
	.quad	0
	.quad	0
.Ldebug_loc18:
	.quad	.Ltmp214
	.quad	.Ltmp215
	.short	3
	.byte	86
	.byte	147
	.byte	8
	.quad	.Ltmp215
	.quad	.Ltmp216
	.short	6
	.byte	86
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc19:
	.quad	.Lfunc_begin5
	.quad	.Ltmp260
	.short	1
	.byte	85
	.quad	.Ltmp260
	.quad	.Ltmp264
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc20:
	.quad	.Lfunc_begin7
	.quad	.Ltmp269
	.short	1
	.byte	85
	.quad	0
	.quad	0
.Ldebug_loc21:
	.quad	.Lfunc_begin8
	.quad	.Ltmp271
	.short	1
	.byte	85
	.quad	.Ltmp271
	.quad	.Ltmp275
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc22:
	.quad	.Lfunc_begin9
	.quad	.Ltmp393
	.short	1
	.byte	85
	.quad	.Ltmp393
	.quad	.Ltmp399
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc23:
	.quad	.Lfunc_begin9
	.quad	.Ltmp393
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp393
	.quad	.Ltmp393
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp393
	.quad	.Ltmp423
	.short	6
	.byte	86
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp445
	.quad	.Ltmp463
	.short	6
	.byte	86
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc24:
	.quad	.Ltmp395
	.quad	.Ltmp497
	.short	2
	.byte	119
	.byte	32
	.quad	.Ltmp498
	.quad	.Ltmp498
	.short	2
	.byte	119
	.byte	32
	.quad	0
	.quad	0
.Ldebug_loc25:
	.quad	.Ltmp398
	.quad	.Ltmp474
	.short	10
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp474
	.quad	.Ltmp474
	.short	8
	.byte	95
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp474
	.quad	.Ltmp476
	.short	6
	.byte	95
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.quad	.Ltmp498
	.quad	.Ltmp498
	.short	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.quad	.Ltmp498
	.quad	.Ltmp499
	.short	10
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp499
	.quad	.Ltmp499
	.short	8
	.byte	95
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp499
	.quad	.Ltmp500
	.short	6
	.byte	95
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.quad	.Ltmp501
	.quad	.Ltmp506
	.short	6
	.byte	95
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.quad	.Ltmp507
	.quad	.Lfunc_end9
	.short	6
	.byte	95
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc26:
	.quad	.Ltmp411
	.quad	.Ltmp413
	.short	3
	.byte	85
	.byte	147
	.byte	8
	.quad	.Ltmp413
	.quad	.Ltmp414
	.short	6
	.byte	85
	.byte	147
	.byte	8
	.byte	84
	.byte	147
	.byte	8
	.quad	.Ltmp415
	.quad	.Ltmp419
	.short	6
	.byte	85
	.byte	147
	.byte	8
	.byte	84
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc27:
	.quad	.Ltmp416
	.quad	.Ltmp417
	.short	4
	.byte	119
	.byte	56
	.byte	147
	.byte	8
	.quad	.Ltmp417
	.quad	.Ltmp445
	.short	8
	.byte	119
	.byte	56
	.byte	147
	.byte	8
	.byte	119
	.byte	48
	.byte	147
	.byte	8
	.quad	.Ltmp477
	.quad	.Ltmp497
	.short	8
	.byte	119
	.byte	56
	.byte	147
	.byte	8
	.byte	119
	.byte	48
	.byte	147
	.byte	8
	.quad	.Ltmp498
	.quad	.Ltmp498
	.short	8
	.byte	119
	.byte	56
	.byte	147
	.byte	8
	.byte	119
	.byte	48
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc28:
	.quad	.Ltmp424
	.quad	.Ltmp426
	.short	11
	.byte	147
	.byte	8
	.byte	119
	.byte	128
	.byte	5
	.byte	35
	.byte	24
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp426
	.quad	.Ltmp445
	.short	12
	.byte	93
	.byte	147
	.byte	8
	.byte	119
	.byte	128
	.byte	5
	.byte	35
	.byte	24
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc29:
	.quad	.Ltmp435
	.quad	.Ltmp438
	.short	1
	.byte	86
	.quad	0
	.quad	0
.Ldebug_loc30:
	.quad	.Ltmp454
	.quad	.Ltmp455
	.short	3
	.byte	85
	.byte	147
	.byte	8
	.quad	.Ltmp455
	.quad	.Ltmp457
	.short	6
	.byte	85
	.byte	147
	.byte	8
	.byte	84
	.byte	147
	.byte	8
	.quad	.Ltmp458
	.quad	.Ltmp459
	.short	6
	.byte	85
	.byte	147
	.byte	8
	.byte	84
	.byte	147
	.byte	8
	.quad	.Ltmp470
	.quad	.Ltmp473
	.short	6
	.byte	85
	.byte	147
	.byte	8
	.byte	84
	.byte	147
	.byte	8
	.quad	.Ltmp476
	.quad	.Ltmp479
	.short	6
	.byte	85
	.byte	147
	.byte	8
	.byte	84
	.byte	147
	.byte	8
	.quad	.Ltmp480
	.quad	.Ltmp481
	.short	6
	.byte	85
	.byte	147
	.byte	8
	.byte	84
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc31:
	.quad	.Ltmp465
	.quad	.Ltmp473
	.short	1
	.byte	94
	.quad	.Ltmp476
	.quad	.Ltmp479
	.short	1
	.byte	94
	.quad	.Ltmp480
	.quad	.Ltmp483
	.short	1
	.byte	94
	.quad	.Ltmp493
	.quad	.Ltmp496
	.short	1
	.byte	94
	.quad	0
	.quad	0
.Ldebug_loc32:
	.quad	.Ltmp492
	.quad	.Ltmp493
	.short	2
	.byte	119
	.byte	40
	.quad	0
	.quad	0
.Ldebug_loc33:
	.quad	.Lfunc_begin10
	.quad	.Ltmp545
	.short	1
	.byte	85
	.quad	.Ltmp545
	.quad	.Ltmp589
	.short	2
	.byte	119
	.byte	40
	.quad	.Ltmp591
	.quad	.Lfunc_end10
	.short	2
	.byte	119
	.byte	40
	.quad	0
	.quad	0
.Ldebug_loc34:
	.quad	.Lfunc_begin10
	.quad	.Ltmp545
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp545
	.quad	.Ltmp545
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.quad	.Ltmp545
	.quad	.Ltmp561
	.short	6
	.byte	93
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.quad	.Ltmp562
	.quad	.Ltmp574
	.short	6
	.byte	93
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc35:
	.quad	.Lfunc_begin10
	.quad	.Ltmp545
	.short	6
	.byte	82
	.byte	147
	.byte	8
	.byte	88
	.byte	147
	.byte	8
	.quad	.Ltmp545
	.quad	.Ltmp546
	.short	6
	.byte	94
	.byte	147
	.byte	8
	.byte	88
	.byte	147
	.byte	8
	.quad	.Ltmp546
	.quad	.Ltmp589
	.short	7
	.byte	94
	.byte	147
	.byte	8
	.byte	119
	.byte	48
	.byte	147
	.byte	8
	.quad	.Ltmp591
	.quad	.Lfunc_end10
	.short	7
	.byte	94
	.byte	147
	.byte	8
	.byte	119
	.byte	48
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc36:
	.quad	.Ltmp545
	.quad	.Ltmp560
	.short	10
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp560
	.quad	.Ltmp560
	.short	8
	.byte	95
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp560
	.quad	.Ltmp562
	.short	6
	.byte	95
	.byte	147
	.byte	8
	.byte	86
	.byte	147
	.byte	8
	.quad	.Ltmp577
	.quad	.Ltmp579
	.short	6
	.byte	95
	.byte	147
	.byte	8
	.byte	86
	.byte	147
	.byte	8
	.quad	.Ltmp582
	.quad	.Ltmp583
	.short	6
	.byte	95
	.byte	147
	.byte	8
	.byte	86
	.byte	147
	.byte	8
	.quad	.Ltmp584
	.quad	.Ltmp590
	.short	6
	.byte	95
	.byte	147
	.byte	8
	.byte	86
	.byte	147
	.byte	8
	.quad	.Ltmp591
	.quad	.Lfunc_end10
	.short	6
	.byte	95
	.byte	147
	.byte	8
	.byte	86
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc37:
	.quad	.Ltmp556
	.quad	.Ltmp558
	.short	3
	.byte	85
	.byte	147
	.byte	8
	.quad	.Ltmp558
	.quad	.Ltmp559
	.short	6
	.byte	85
	.byte	147
	.byte	8
	.byte	84
	.byte	147
	.byte	8
	.quad	.Ltmp562
	.quad	.Ltmp564
	.short	6
	.byte	85
	.byte	147
	.byte	8
	.byte	84
	.byte	147
	.byte	8
	.quad	.Ltmp573
	.quad	.Ltmp575
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	84
	.byte	147
	.byte	8
	.quad	.Ltmp575
	.quad	.Ltmp576
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc38:
	.quad	.Ltmp563
	.quad	.Ltmp578
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc39:
	.quad	.Lfunc_begin11
	.quad	.Ltmp592
	.short	1
	.byte	85
	.quad	.Ltmp592
	.quad	.Ltmp612
	.short	1
	.byte	92
	.quad	.Ltmp613
	.quad	.Lfunc_end11
	.short	1
	.byte	92
	.quad	0
	.quad	0
.Ldebug_loc40:
	.quad	.Lfunc_begin11
	.quad	.Ltmp592
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp592
	.quad	.Ltmp592
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	83
	.byte	147
	.byte	8
	.quad	.Ltmp592
	.quad	.Ltmp611
	.short	7
	.byte	119
	.byte	32
	.byte	147
	.byte	8
	.byte	83
	.byte	147
	.byte	8
	.quad	.Ltmp613
	.quad	.Lfunc_end11
	.short	7
	.byte	119
	.byte	32
	.byte	147
	.byte	8
	.byte	83
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc41:
	.quad	.Lfunc_begin11
	.quad	.Ltmp592
	.short	1
	.byte	82
	.quad	.Ltmp592
	.quad	.Ltmp610
	.short	1
	.byte	93
	.quad	.Ltmp613
	.quad	.Ltmp616
	.short	1
	.byte	93
	.quad	.Ltmp618
	.quad	.Lfunc_end11
	.short	1
	.byte	93
	.quad	0
	.quad	0
.Ldebug_loc42:
	.quad	.Ltmp595
	.quad	.Ltmp605
	.short	1
	.byte	95
	.quad	.Ltmp607
	.quad	.Ltmp610
	.short	1
	.byte	95
	.quad	0
	.quad	0
.Ldebug_loc43:
	.quad	.Ltmp597
	.quad	.Ltmp598
	.short	3
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp598
	.quad	.Ltmp599
	.short	6
	.byte	94
	.byte	147
	.byte	8
	.byte	86
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc44:
	.quad	.Ltmp601
	.quad	.Ltmp602
	.short	3
	.byte	16
	.byte	0
	.byte	159
	.quad	.Ltmp602
	.quad	.Ltmp604
	.short	1
	.byte	81
	.quad	.Ltmp607
	.quad	.Ltmp608
	.short	1
	.byte	81
	.quad	0
	.quad	0
.Ldebug_loc45:
	.quad	.Ltmp617
	.quad	.Lfunc_end11
	.short	10
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc46:
	.quad	.Lfunc_begin12
	.quad	.Ltmp624
	.short	1
	.byte	85
	.quad	.Ltmp624
	.quad	.Ltmp631
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc47:
	.quad	.Lfunc_begin12
	.quad	.Ltmp622
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp622
	.quad	.Ltmp623
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp623
	.quad	.Ltmp634
	.short	6
	.byte	95
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc48:
	.quad	.Lfunc_begin12
	.quad	.Ltmp621
	.short	1
	.byte	82
	.quad	.Ltmp621
	.quad	.Ltmp633
	.short	1
	.byte	92
	.quad	0
	.quad	0
.Ldebug_loc49:
	.quad	.Ltmp625
	.quad	.Ltmp627
	.short	3
	.byte	16
	.byte	0
	.byte	159
	.quad	.Ltmp627
	.quad	.Ltmp635
	.short	1
	.byte	86
	.quad	0
	.quad	0
.Ldebug_loc50:
	.quad	.Ltmp629
	.quad	.Lfunc_end12
	.short	10
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc51:
	.quad	.Lfunc_begin13
	.quad	.Ltmp636
	.short	1
	.byte	84
	.quad	.Ltmp636
	.quad	.Ltmp640
	.short	1
	.byte	86
	.quad	.Ltmp640
	.quad	.Ltmp686
	.short	3
	.byte	119
	.byte	208
	.byte	0
	.quad	.Ltmp688
	.quad	.Ltmp690
	.short	3
	.byte	119
	.byte	208
	.byte	0
	.quad	0
	.quad	0
.Ldebug_loc52:
	.quad	.Lfunc_begin13
	.quad	.Ltmp637
	.short	6
	.byte	81
	.byte	147
	.byte	8
	.byte	82
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc53:
	.quad	.Ltmp637
	.quad	.Ltmp639
	.short	12
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp639
	.quad	.Ltmp643
	.short	13
	.byte	83
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp643
	.quad	.Ltmp643
	.short	11
	.byte	83
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp643
	.quad	.Ltmp647
	.short	9
	.byte	83
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.byte	93
	.byte	147
	.byte	8
	.quad	.Ltmp648
	.quad	.Ltmp654
	.short	9
	.byte	83
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.byte	93
	.byte	147
	.byte	8
	.quad	.Ltmp655
	.quad	.Ltmp657
	.short	9
	.byte	83
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.byte	93
	.byte	147
	.byte	8
	.quad	.Ltmp663
	.quad	.Ltmp664
	.short	9
	.byte	83
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.byte	93
	.byte	147
	.byte	8
	.quad	.Ltmp665
	.quad	.Ltmp671
	.short	9
	.byte	83
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.byte	93
	.byte	147
	.byte	8
	.quad	.Ltmp672
	.quad	.Ltmp674
	.short	9
	.byte	83
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.byte	93
	.byte	147
	.byte	8
	.quad	.Ltmp681
	.quad	.Ltmp687
	.short	9
	.byte	83
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.byte	93
	.byte	147
	.byte	8
	.quad	.Ltmp689
	.quad	.Ltmp690
	.short	9
	.byte	83
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.byte	93
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc54:
	.quad	.Ltmp644
	.quad	.Ltmp646
	.short	1
	.byte	80
	.quad	0
	.quad	0
.Ldebug_loc55:
	.quad	.Ltmp652
	.quad	.Ltmp656
	.short	1
	.byte	94
	.quad	0
	.quad	0
.Ldebug_loc56:
	.quad	.Ltmp669
	.quad	.Ltmp673
	.short	1
	.byte	86
	.quad	0
	.quad	0
.Ldebug_loc57:
	.quad	.Lfunc_begin14
	.quad	.Ltmp731
	.short	1
	.byte	84
	.quad	.Ltmp731
	.quad	.Ltmp750
	.short	1
	.byte	95
	.quad	.Ltmp763
	.quad	.Ltmp764
	.short	1
	.byte	95
	.quad	0
	.quad	0
.Ldebug_loc58:
	.quad	.Lfunc_begin14
	.quad	.Ltmp733
	.short	6
	.byte	81
	.byte	147
	.byte	8
	.byte	82
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc59:
	.quad	.Ltmp742
	.quad	.Ltmp763
	.short	5
	.byte	147
	.byte	32
	.byte	92
	.byte	147
	.byte	8
	.quad	.Ltmp764
	.quad	.Ltmp764
	.short	5
	.byte	147
	.byte	32
	.byte	92
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc60:
	.quad	.Ltmp753
	.quad	.Ltmp754
	.short	1
	.byte	84
	.quad	0
	.quad	0
.Ldebug_loc61:
	.quad	.Ltmp762
	.quad	.Ltmp763
	.short	5
	.byte	147
	.byte	32
	.byte	92
	.byte	147
	.byte	8
	.quad	.Ltmp765
	.quad	.Ltmp766
	.short	5
	.byte	147
	.byte	32
	.byte	92
	.byte	147
	.byte	8
	.quad	.Ltmp767
	.quad	.Ltmp772
	.short	5
	.byte	147
	.byte	32
	.byte	92
	.byte	147
	.byte	8
	.quad	.Ltmp773
	.quad	.Lfunc_end14
	.short	5
	.byte	147
	.byte	32
	.byte	92
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc62:
	.quad	.Lfunc_begin15
	.quad	.Ltmp774
	.short	1
	.byte	85
	.quad	.Ltmp774
	.quad	.Ltmp776
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc63:
	.quad	.Lfunc_begin15
	.quad	.Ltmp774
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp774
	.quad	.Ltmp774
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.quad	.Ltmp774
	.quad	.Ltmp784
	.short	6
	.byte	93
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc64:
	.quad	.Lfunc_begin15
	.quad	.Ltmp774
	.short	1
	.byte	82
	.quad	.Ltmp774
	.quad	.Ltmp781
	.short	1
	.byte	92
	.quad	0
	.quad	0
.Ldebug_loc65:
	.quad	.Ltmp775
	.quad	.Ltmp776
	.short	1
	.byte	80
	.quad	.Ltmp776
	.quad	.Ltmp799
	.short	1
	.byte	83
	.quad	.Ltmp803
	.quad	.Lfunc_end15
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc66:
	.quad	.Ltmp777
	.quad	.Ltmp802
	.short	1
	.byte	94
	.quad	.Ltmp803
	.quad	.Lfunc_end15
	.short	1
	.byte	94
	.quad	0
	.quad	0
.Ldebug_loc67:
	.quad	.Ltmp778
	.quad	.Ltmp794
	.short	1
	.byte	95
	.quad	.Ltmp803
	.quad	.Lfunc_end15
	.short	1
	.byte	95
	.quad	0
	.quad	0
.Ldebug_loc68:
	.quad	.Ltmp795
	.quad	.Ltmp796
	.short	11
	.byte	147
	.byte	16
	.byte	119
	.byte	232
	.byte	2
	.byte	35
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp796
	.quad	.Ltmp798
	.short	14
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.byte	119
	.byte	232
	.byte	2
	.byte	35
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp798
	.quad	.Ltmp801
	.short	15
	.byte	92
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.byte	119
	.byte	232
	.byte	2
	.byte	35
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc69:
	.quad	.Ltmp800
	.quad	.Ltmp801
	.short	1
	.byte	86
	.quad	0
	.quad	0
.Ldebug_loc70:
	.quad	.Lfunc_begin16
	.quad	.Ltmp805
	.short	1
	.byte	85
	.quad	.Ltmp805
	.quad	.Ltmp831
	.short	1
	.byte	83
	.quad	.Ltmp833
	.quad	.Ltmp852
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc71:
	.quad	.Lfunc_begin16
	.quad	.Ltmp805
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp805
	.quad	.Ltmp805
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	93
	.byte	147
	.byte	8
	.quad	.Ltmp805
	.quad	.Ltmp849
	.short	6
	.byte	86
	.byte	147
	.byte	8
	.byte	93
	.byte	147
	.byte	8
	.quad	.Ltmp856
	.quad	.Ltmp858
	.short	6
	.byte	86
	.byte	147
	.byte	8
	.byte	93
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc72:
	.quad	.Lfunc_begin16
	.quad	.Ltmp805
	.short	1
	.byte	82
	.quad	.Ltmp805
	.quad	.Ltmp853
	.short	1
	.byte	92
	.quad	.Ltmp856
	.quad	.Ltmp858
	.short	1
	.byte	92
	.quad	0
	.quad	0
.Ldebug_loc73:
	.quad	.Ltmp806
	.quad	.Ltmp904
	.short	1
	.byte	95
	.quad	.Ltmp905
	.quad	.Lfunc_end16
	.short	1
	.byte	95
	.quad	0
	.quad	0
.Ldebug_loc74:
	.quad	.Ltmp807
	.quad	.Ltmp903
	.short	1
	.byte	94
	.quad	.Ltmp905
	.quad	.Lfunc_end16
	.short	1
	.byte	94
	.quad	0
	.quad	0
.Ldebug_loc75:
	.quad	.Ltmp808
	.quad	.Ltmp902
	.short	1
	.byte	93
	.quad	.Ltmp905
	.quad	.Lfunc_end16
	.short	1
	.byte	93
	.quad	0
	.quad	0
.Ldebug_loc76:
	.quad	.Ltmp811
	.quad	.Ltmp820
	.short	3
	.byte	16
	.byte	0
	.byte	159
	.quad	.Ltmp820
	.quad	.Lfunc_end16
	.short	3
	.byte	16
	.byte	1
	.byte	159
	.quad	0
	.quad	0
.Ldebug_loc77:
	.quad	.Ltmp820
	.quad	.Ltmp824
	.short	3
	.byte	16
	.byte	0
	.byte	159
	.quad	.Ltmp824
	.quad	.Ltmp827
	.short	1
	.byte	81
	.quad	0
	.quad	0
.Ldebug_loc78:
	.quad	.Ltmp826
	.quad	.Ltmp827
	.short	1
	.byte	85
	.quad	0
	.quad	0
.Ldebug_loc79:
	.quad	.Ltmp834
	.quad	.Ltmp837
	.short	3
	.byte	16
	.byte	0
	.byte	159
	.quad	.Ltmp837
	.quad	.Ltmp841
	.short	1
	.byte	81
	.quad	.Ltmp847
	.quad	.Ltmp851
	.short	1
	.byte	81
	.quad	0
	.quad	0
.Ldebug_loc80:
	.quad	.Ltmp837
	.quad	.Ltmp838
	.short	2
	.byte	112
	.byte	0
	.quad	0
	.quad	0
.Ldebug_loc81:
	.quad	.Ltmp840
	.quad	.Ltmp845
	.short	3
	.byte	119
	.byte	192
	.byte	1
	.quad	0
	.quad	0
.Ldebug_loc82:
	.quad	.Ltmp860
	.quad	.Ltmp865
	.short	3
	.byte	16
	.byte	0
	.byte	159
	.quad	.Ltmp865
	.quad	.Ltmp868
	.short	1
	.byte	81
	.quad	0
	.quad	0
.Ldebug_loc83:
	.quad	.Ltmp867
	.quad	.Ltmp868
	.short	1
	.byte	85
	.quad	0
	.quad	0
.Ldebug_loc84:
	.quad	.Lfunc_begin17
	.quad	.Ltmp908
	.short	1
	.byte	85
	.quad	.Ltmp908
	.quad	.Ltmp910
	.short	1
	.byte	80
	.quad	.Ltmp910
	.quad	.Ltmp911
	.short	1
	.byte	84
	.quad	0
	.quad	0
.Ldebug_loc85:
	.quad	.Lfunc_begin17
	.quad	.Ltmp908
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp908
	.quad	.Ltmp908
	.short	7
	.byte	84
	.byte	147
	.byte	8
	.byte	119
	.byte	32
	.byte	147
	.byte	8
	.quad	.Ltmp908
	.quad	.Ltmp922
	.short	7
	.byte	92
	.byte	147
	.byte	8
	.byte	119
	.byte	32
	.byte	147
	.byte	8
	.quad	.Ltmp923
	.quad	.Lfunc_end17
	.short	7
	.byte	92
	.byte	147
	.byte	8
	.byte	119
	.byte	32
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc86:
	.quad	.Lfunc_begin17
	.quad	.Ltmp911
	.short	1
	.byte	82
	.quad	0
	.quad	0
.Ldebug_loc87:
	.quad	.Ltmp909
	.quad	.Ltmp912
	.short	10
	.byte	147
	.byte	16
	.byte	119
	.byte	40
	.byte	35
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp912
	.quad	.Ltmp914
	.short	13
	.byte	147
	.byte	8
	.byte	93
	.byte	147
	.byte	8
	.byte	119
	.byte	40
	.byte	35
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp914
	.quad	.Ltmp921
	.short	14
	.byte	95
	.byte	147
	.byte	8
	.byte	93
	.byte	147
	.byte	8
	.byte	119
	.byte	40
	.byte	35
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp923
	.quad	.Lfunc_end17
	.short	14
	.byte	95
	.byte	147
	.byte	8
	.byte	93
	.byte	147
	.byte	8
	.byte	119
	.byte	40
	.byte	35
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc88:
	.quad	.Ltmp916
	.quad	.Ltmp921
	.short	1
	.byte	83
	.quad	.Ltmp923
	.quad	.Lfunc_end17
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc89:
	.quad	.Ltmp918
	.quad	.Ltmp921
	.short	11
	.byte	147
	.byte	8
	.byte	119
	.byte	192
	.byte	0
	.byte	35
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc90:
	.quad	.Ltmp918
	.quad	.Ltmp921
	.short	3
	.byte	119
	.byte	192
	.byte	0
	.quad	0
	.quad	0
.Ldebug_loc91:
	.quad	.Lfunc_begin18
	.quad	.Ltmp929
	.short	1
	.byte	85
	.quad	.Ltmp929
	.quad	.Ltmp943
	.short	1
	.byte	94
	.quad	.Ltmp944
	.quad	.Ltmp947
	.short	1
	.byte	94
	.quad	0
	.quad	0
.Ldebug_loc92:
	.quad	.Lfunc_begin18
	.quad	.Ltmp930
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc93:
	.quad	.Lfunc_begin18
	.quad	.Ltmp928
	.short	1
	.byte	82
	.quad	.Ltmp928
	.quad	.Ltmp934
	.short	1
	.byte	83
	.quad	.Ltmp937
	.quad	.Ltmp938
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc94:
	.quad	.Ltmp926
	.quad	.Ltmp935
	.short	3
	.byte	16
	.byte	0
	.byte	159
	.quad	.Ltmp935
	.quad	.Ltmp937
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc95:
	.quad	.Ltmp938
	.quad	.Ltmp940
	.short	3
	.byte	16
	.byte	0
	.byte	159
	.quad	.Ltmp940
	.quad	.Ltmp942
	.short	1
	.byte	81
	.quad	.Ltmp944
	.quad	.Ltmp946
	.short	1
	.byte	81
	.quad	0
	.quad	0
.Ldebug_loc96:
	.quad	.Lfunc_begin19
	.quad	.Ltmp948
	.short	1
	.byte	85
	.quad	.Ltmp948
	.quad	.Ltmp961
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc97:
	.quad	.Lfunc_begin19
	.quad	.Ltmp948
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp948
	.quad	.Ltmp948
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	80
	.byte	147
	.byte	8
	.quad	.Ltmp948
	.quad	.Ltmp950
	.short	6
	.byte	82
	.byte	147
	.byte	8
	.byte	80
	.byte	147
	.byte	8
	.quad	.Ltmp950
	.quad	.Ltmp951
	.short	7
	.byte	119
	.byte	56
	.byte	147
	.byte	8
	.byte	80
	.byte	147
	.byte	8
	.quad	.Ltmp951
	.quad	.Ltmp965
	.short	9
	.byte	119
	.byte	56
	.byte	147
	.byte	8
	.byte	119
	.byte	192
	.byte	0
	.byte	147
	.byte	8
	.quad	.Ltmp966
	.quad	.Lfunc_end19
	.short	9
	.byte	119
	.byte	56
	.byte	147
	.byte	8
	.byte	119
	.byte	192
	.byte	0
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc98:
	.quad	.Ltmp949
	.quad	.Ltmp952
	.short	8
	.byte	147
	.byte	32
	.byte	117
	.byte	32
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp953
	.quad	.Ltmp954
	.short	13
	.byte	147
	.byte	16
	.byte	95
	.byte	147
	.byte	8
	.byte	147
	.byte	8
	.byte	117
	.byte	32
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp954
	.quad	.Ltmp960
	.short	14
	.byte	147
	.byte	16
	.byte	95
	.byte	147
	.byte	8
	.byte	93
	.byte	147
	.byte	8
	.byte	117
	.byte	32
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp960
	.quad	.Ltmp964
	.short	15
	.byte	147
	.byte	16
	.byte	95
	.byte	147
	.byte	8
	.byte	119
	.byte	32
	.byte	147
	.byte	8
	.byte	117
	.byte	32
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp966
	.quad	.Lfunc_end19
	.short	15
	.byte	147
	.byte	16
	.byte	95
	.byte	147
	.byte	8
	.byte	119
	.byte	32
	.byte	147
	.byte	8
	.byte	117
	.byte	32
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc99:
	.quad	.Ltmp955
	.quad	.Ltmp956
	.short	11
	.byte	147
	.byte	16
	.byte	119
	.byte	232
	.byte	1
	.byte	35
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp956
	.quad	.Ltmp957
	.short	14
	.byte	147
	.byte	8
	.byte	80
	.byte	147
	.byte	8
	.byte	119
	.byte	232
	.byte	1
	.byte	35
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp957
	.quad	.Ltmp959
	.short	15
	.byte	147
	.byte	8
	.byte	119
	.byte	40
	.byte	147
	.byte	8
	.byte	119
	.byte	232
	.byte	1
	.byte	35
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp959
	.quad	.Ltmp965
	.short	17
	.byte	119
	.byte	24
	.byte	147
	.byte	8
	.byte	119
	.byte	40
	.byte	147
	.byte	8
	.byte	119
	.byte	232
	.byte	1
	.byte	35
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp966
	.quad	.Lfunc_end19
	.short	17
	.byte	119
	.byte	24
	.byte	147
	.byte	8
	.byte	119
	.byte	40
	.byte	147
	.byte	8
	.byte	119
	.byte	232
	.byte	1
	.byte	35
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc100:
	.quad	.Ltmp961
	.quad	.Ltmp963
	.short	1
	.byte	83
	.quad	.Ltmp966
	.quad	.Lfunc_end19
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc101:
	.quad	.Lfunc_begin20
	.quad	.Ltmp970
	.short	1
	.byte	85
	.quad	.Ltmp970
	.quad	.Ltmp985
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc102:
	.quad	.Lfunc_begin20
	.quad	.Ltmp974
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp974
	.quad	.Ltmp975
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	82
	.byte	147
	.byte	8
	.quad	.Ltmp975
	.quad	.Ltmp977
	.short	6
	.byte	81
	.byte	147
	.byte	8
	.byte	82
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc103:
	.quad	.Ltmp976
	.quad	.Ltmp977
	.short	8
	.byte	147
	.byte	32
	.byte	117
	.byte	32
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp979
	.quad	.Ltmp980
	.short	13
	.byte	147
	.byte	16
	.byte	86
	.byte	147
	.byte	8
	.byte	147
	.byte	8
	.byte	117
	.byte	32
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp980
	.quad	.Ltmp981
	.short	14
	.byte	147
	.byte	16
	.byte	86
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.byte	117
	.byte	32
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp981
	.quad	.Ltmp986
	.short	14
	.byte	147
	.byte	16
	.byte	92
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.byte	117
	.byte	32
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc104:
	.quad	.Lfunc_begin21
	.quad	.Ltmp992
	.short	1
	.byte	84
	.quad	0
	.quad	0
.Ldebug_loc105:
	.quad	.Lfunc_begin21
	.quad	.Ltmp992
	.short	6
	.byte	81
	.byte	147
	.byte	8
	.byte	82
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc106:
	.quad	.Ltmp989
	.quad	.Ltmp990
	.short	5
	.byte	147
	.byte	32
	.byte	80
	.byte	147
	.byte	8
	.quad	.Ltmp990
	.quad	.Lfunc_end21
	.short	10
	.byte	147
	.byte	32
	.byte	80
	.byte	147
	.byte	8
	.byte	16
	.byte	1
	.byte	159
	.byte	147
	.byte	1
	.quad	0
	.quad	0
.Ldebug_loc107:
	.quad	.Lfunc_begin22
	.quad	.Ltmp998
	.short	1
	.byte	84
	.quad	0
	.quad	0
.Ldebug_loc108:
	.quad	.Lfunc_begin22
	.quad	.Ltmp998
	.short	6
	.byte	81
	.byte	147
	.byte	8
	.byte	82
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc109:
	.quad	.Ltmp995
	.quad	.Ltmp996
	.short	5
	.byte	147
	.byte	32
	.byte	80
	.byte	147
	.byte	8
	.quad	.Ltmp996
	.quad	.Lfunc_end22
	.short	10
	.byte	147
	.byte	32
	.byte	80
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	1
	.quad	0
	.quad	0
.Ldebug_loc110:
	.quad	.Lfunc_begin23
	.quad	.Ltmp1000
	.short	6
	.byte	85
	.byte	147
	.byte	8
	.byte	84
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc111:
	.quad	.Lfunc_begin23
	.quad	.Ltmp999
	.short	6
	.byte	81
	.byte	147
	.byte	8
	.byte	82
	.byte	147
	.byte	8
	.quad	.Ltmp999
	.quad	.Ltmp999
	.short	6
	.byte	81
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.quad	.Ltmp999
	.quad	.Ltmp1002
	.short	6
	.byte	93
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc112:
	.quad	.Lfunc_begin23
	.quad	.Ltmp999
	.short	6
	.byte	88
	.byte	147
	.byte	8
	.byte	89
	.byte	147
	.byte	8
	.quad	.Ltmp999
	.quad	.Ltmp999
	.short	7
	.byte	88
	.byte	147
	.byte	8
	.byte	119
	.byte	0
	.byte	147
	.byte	8
	.quad	.Ltmp999
	.quad	.Ltmp1004
	.short	7
	.byte	95
	.byte	147
	.byte	8
	.byte	119
	.byte	0
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc113:
	.quad	.Ltmp1001
	.quad	.Ltmp1003
	.short	1
	.byte	94
	.quad	0
	.quad	0
.Ldebug_loc114:
	.quad	.Lfunc_begin24
	.quad	.Ltmp1006
	.short	1
	.byte	85
	.quad	.Ltmp1006
	.quad	.Ltmp1010
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc115:
	.quad	.Ltmp1013
	.quad	.Ltmp1014
	.short	3
	.byte	95
	.byte	147
	.byte	8
	.quad	.Ltmp1014
	.quad	.Ltmp1016
	.short	6
	.byte	95
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc116:
	.quad	.Lfunc_begin26
	.quad	.Ltmp1018
	.short	1
	.byte	85
	.quad	0
	.quad	0
.Ldebug_loc117:
	.quad	.Lfunc_begin27
	.quad	.Ltmp1021
	.short	1
	.byte	85
	.quad	0
	.quad	0
.Ldebug_loc118:
	.quad	.Lfunc_begin28
	.quad	.Ltmp1023
	.short	1
	.byte	85
	.quad	.Ltmp1023
	.quad	.Ltmp1027
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc119:
	.quad	.Ltmp1030
	.quad	.Ltmp1047
	.short	1
	.byte	86
	.quad	.Ltmp1047
	.quad	.Ltmp1062
	.short	2
	.byte	119
	.byte	24
	.quad	.Ltmp1062
	.quad	.Ltmp1063
	.short	1
	.byte	86
	.quad	.Ltmp1063
	.quad	.Ltmp1066
	.short	2
	.byte	119
	.byte	24
	.quad	.Ltmp1066
	.quad	.Ltmp1067
	.short	1
	.byte	86
	.quad	.Ltmp1068
	.quad	.Ltmp1071
	.short	1
	.byte	86
	.quad	.Ltmp1072
	.quad	.Ltmp1074
	.short	1
	.byte	86
	.quad	0
	.quad	0
.Ldebug_loc120:
	.quad	.Ltmp1046
	.quad	.Ltmp1048
	.short	3
	.byte	16
	.byte	0
	.byte	159
	.quad	.Ltmp1048
	.quad	.Ltmp1050
	.short	1
	.byte	86
	.quad	.Ltmp1052
	.quad	.Ltmp1060
	.short	1
	.byte	86
	.quad	.Ltmp1063
	.quad	.Ltmp1065
	.short	1
	.byte	86
	.quad	0
	.quad	0
.Ldebug_loc121:
	.quad	.Ltmp1053
	.quad	.Ltmp1056
	.short	3
	.byte	16
	.byte	0
	.byte	159
	.quad	.Ltmp1056
	.quad	.Ltmp1059
	.short	1
	.byte	81
	.quad	.Ltmp1063
	.quad	.Ltmp1064
	.short	1
	.byte	81
	.quad	0
	.quad	0
.Ldebug_loc122:
	.quad	.Ltmp1069
	.quad	.Ltmp1070
	.short	3
	.byte	93
	.byte	147
	.byte	8
	.quad	.Ltmp1070
	.quad	.Ltmp1072
	.short	6
	.byte	93
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc123:
	.quad	.Lfunc_begin30
	.quad	.Ltmp1078
	.short	1
	.byte	85
	.quad	0
	.quad	0
.Ldebug_loc124:
	.quad	.Lfunc_begin32
	.quad	.Ltmp1083
	.short	1
	.byte	85
	.quad	0
	.quad	0
.Ldebug_loc125:
	.quad	.Ltmp1085
	.quad	.Ltmp1086
	.short	3
	.byte	16
	.byte	0
	.byte	159
	.quad	.Ltmp1086
	.quad	.Ltmp1092
	.short	1
	.byte	83
	.quad	.Ltmp1092
	.quad	.Ltmp1095
	.short	3
	.byte	16
	.byte	0
	.byte	159
	.quad	.Ltmp1095
	.quad	.Ltmp1097
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc126:
	.quad	.Ltmp1088
	.quad	.Ltmp1090
	.short	11
	.byte	147
	.byte	8
	.byte	119
	.byte	224
	.byte	0
	.byte	35
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp1090
	.quad	.Ltmp1093
	.short	12
	.byte	80
	.byte	147
	.byte	8
	.byte	119
	.byte	224
	.byte	0
	.byte	35
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc127:
	.quad	.Ltmp1088
	.quad	.Ltmp1094
	.short	3
	.byte	119
	.byte	224
	.byte	0
	.quad	.Ltmp1095
	.quad	.Ltmp1096
	.short	3
	.byte	119
	.byte	224
	.byte	0
	.quad	0
	.quad	0
.Ldebug_loc128:
	.quad	.Lfunc_begin34
	.quad	.Ltmp1100
	.short	1
	.byte	85
	.quad	0
	.quad	0
.Ldebug_loc129:
	.quad	.Ltmp1107
	.quad	.Ltmp1108
	.short	1
	.byte	80
	.quad	.Ltmp1109
	.quad	.Ltmp1110
	.short	1
	.byte	80
	.quad	0
	.quad	0
.Ldebug_loc130:
	.quad	.Ltmp1107
	.quad	.Ltmp1108
	.short	1
	.byte	80
	.quad	0
	.quad	0
.Ldebug_loc131:
	.quad	.Lfunc_begin39
	.quad	.Ltmp1115
	.short	1
	.byte	85
	.quad	0
	.quad	0
	.section	.debug_abbrev,"",@progbits
	.byte	1
	.byte	17
	.byte	1
	.byte	37
	.byte	14
	.byte	19
	.byte	5
	.byte	3
	.byte	14
	.byte	16
	.byte	23
	.byte	27
	.byte	14
	.ascii	"\264B"
	.byte	25
	.byte	17
	.byte	1
	.byte	85
	.byte	23
	.byte	0
	.byte	0
	.byte	2
	.byte	52
	.byte	0
	.byte	3
	.byte	14
	.byte	73
	.byte	19
	.byte	63
	.byte	25
	.byte	58
	.byte	11
	.byte	59
	.byte	11
	.byte	110
	.byte	14
	.byte	0
	.byte	0
	.byte	3
	.byte	36
	.byte	0
	.byte	3
	.byte	14
	.byte	62
	.byte	11
	.byte	11
	.byte	11
	.byte	0
	.byte	0
	.byte	4
	.byte	46
	.byte	1
	.byte	17
	.byte	1
	.byte	18
	.byte	6
	.byte	64
	.byte	24
	.byte	110
	.byte	14
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	11
	.byte	73
	.byte	19
	.byte	63
	.byte	25
	.byte	0
	.byte	0
	.byte	5
	.byte	5
	.byte	0
	.byte	2
	.byte	23
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	11
	.byte	73
	.byte	19
	.byte	0
	.byte	0
	.byte	6
	.byte	5
	.byte	0
	.byte	2
	.byte	24
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	11
	.byte	73
	.byte	19
	.byte	0
	.byte	0
	.byte	7
	.byte	11
	.byte	1
	.byte	17
	.byte	1
	.byte	18
	.byte	6
	.byte	0
	.byte	0
	.byte	8
	.byte	52
	.byte	0
	.byte	2
	.byte	23
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	11
	.byte	73
	.byte	19
	.byte	0
	.byte	0
	.byte	9
	.byte	46
	.byte	1
	.byte	17
	.byte	1
	.byte	18
	.byte	6
	.byte	64
	.byte	24
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	11
	.byte	73
	.byte	19
	.byte	0
	.byte	0
	.byte	10
	.byte	52
	.byte	0
	.byte	28
	.byte	15
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	11
	.byte	73
	.byte	19
	.byte	0
	.byte	0
	.byte	11
	.byte	46
	.byte	0
	.byte	17
	.byte	1
	.byte	18
	.byte	6
	.byte	64
	.byte	24
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	11
	.byte	73
	.byte	19
	.byte	0
	.byte	0
	.byte	12
	.byte	52
	.byte	0
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	11
	.byte	73
	.byte	19
	.byte	0
	.byte	0
	.byte	13
	.byte	52
	.byte	0
	.byte	2
	.byte	23
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	5
	.byte	73
	.byte	19
	.byte	0
	.byte	0
	.byte	14
	.byte	46
	.byte	1
	.byte	17
	.byte	1
	.byte	18
	.byte	6
	.byte	64
	.byte	24
	.byte	110
	.byte	14
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	5
	.byte	73
	.byte	19
	.byte	63
	.byte	25
	.byte	0
	.byte	0
	.byte	15
	.byte	5
	.byte	0
	.byte	2
	.byte	23
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	5
	.byte	73
	.byte	19
	.byte	0
	.byte	0
	.byte	16
	.byte	11
	.byte	1
	.byte	85
	.byte	23
	.byte	0
	.byte	0
	.byte	17
	.byte	46
	.byte	0
	.byte	17
	.byte	1
	.byte	18
	.byte	6
	.byte	64
	.byte	24
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	5
	.byte	73
	.byte	19
	.byte	0
	.byte	0
	.byte	18
	.byte	46
	.byte	1
	.byte	17
	.byte	1
	.byte	18
	.byte	6
	.byte	64
	.byte	24
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	5
	.byte	73
	.byte	19
	.byte	0
	.byte	0
	.byte	19
	.byte	5
	.byte	0
	.byte	2
	.byte	24
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	5
	.byte	73
	.byte	19
	.byte	0
	.byte	0
	.byte	20
	.byte	46
	.byte	0
	.byte	17
	.byte	1
	.byte	18
	.byte	6
	.byte	64
	.byte	24
	.byte	110
	.byte	14
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	11
	.byte	73
	.byte	19
	.byte	63
	.byte	25
	.byte	0
	.byte	0
	.byte	21
	.byte	19
	.byte	1
	.byte	3
	.byte	14
	.byte	11
	.byte	11
	.byte	58
	.byte	11
	.byte	59
	.byte	11
	.ascii	"\210\001"
	.byte	15
	.byte	0
	.byte	0
	.byte	22
	.byte	13
	.byte	0
	.byte	3
	.byte	14
	.byte	73
	.byte	19
	.byte	58
	.byte	11
	.byte	59
	.byte	11
	.ascii	"\210\001"
	.byte	15
	.byte	56
	.byte	11
	.byte	0
	.byte	0
	.byte	23
	.byte	15
	.byte	0
	.byte	73
	.byte	19
	.byte	0
	.byte	0
	.byte	24
	.byte	19
	.byte	1
	.byte	3
	.byte	14
	.byte	11
	.byte	11
	.ascii	"\210\001"
	.byte	15
	.byte	0
	.byte	0
	.byte	25
	.byte	21
	.byte	1
	.byte	73
	.byte	19
	.byte	0
	.byte	0
	.byte	26
	.byte	5
	.byte	0
	.byte	73
	.byte	19
	.byte	0
	.byte	0
	.byte	27
	.byte	19
	.byte	0
	.byte	3
	.byte	14
	.byte	11
	.byte	11
	.byte	58
	.byte	11
	.byte	59
	.byte	11
	.ascii	"\210\001"
	.byte	15
	.byte	0
	.byte	0
	.byte	28
	.byte	1
	.byte	1
	.byte	73
	.byte	19
	.byte	0
	.byte	0
	.byte	29
	.byte	33
	.byte	0
	.byte	73
	.byte	19
	.byte	34
	.byte	11
	.byte	55
	.byte	11
	.byte	0
	.byte	0
	.byte	30
	.byte	36
	.byte	0
	.byte	3
	.byte	14
	.byte	11
	.byte	11
	.byte	62
	.byte	11
	.byte	0
	.byte	0
	.byte	31
	.byte	21
	.byte	0
	.byte	73
	.byte	19
	.byte	0
	.byte	0
	.byte	32
	.byte	19
	.byte	1
	.byte	3
	.byte	14
	.byte	11
	.byte	5
	.byte	58
	.byte	11
	.byte	59
	.byte	11
	.ascii	"\210\001"
	.byte	15
	.byte	0
	.byte	0
	.byte	33
	.byte	13
	.byte	0
	.byte	3
	.byte	14
	.byte	73
	.byte	19
	.byte	58
	.byte	11
	.byte	59
	.byte	11
	.ascii	"\210\001"
	.byte	15
	.byte	56
	.byte	5
	.byte	0
	.byte	0
	.byte	34
	.byte	19
	.byte	1
	.byte	3
	.byte	14
	.byte	11
	.byte	11
	.byte	58
	.byte	11
	.byte	59
	.byte	5
	.ascii	"\210\001"
	.byte	15
	.byte	0
	.byte	0
	.byte	35
	.byte	13
	.byte	0
	.byte	3
	.byte	14
	.byte	73
	.byte	19
	.byte	58
	.byte	11
	.byte	59
	.byte	5
	.ascii	"\210\001"
	.byte	15
	.byte	56
	.byte	11
	.byte	0
	.byte	0
	.byte	0
	.section	.debug_info,"",@progbits
.Lcu_begin0:
	.long	12149
	.short	4
	.long	.debug_abbrev
	.byte	8
	.byte	1
	.long	.Linfo_string0
	.short	22
	.long	.Linfo_string1
	.long	.Lline_table_start0
	.long	.Linfo_string2

	.quad	0
	.long	.Ldebug_ranges7
	.byte	2
	.long	.Linfo_string3
	.long	57

	.byte	1
	.byte	1
	.long	.Linfo_string3
	.byte	3
	.long	.Linfo_string4
	.byte	7
	.byte	4
	.byte	4
	.quad	.Lfunc_begin0
	.long	.Lfunc_end0-.Lfunc_begin0
	.byte	1
	.byte	87
	.long	.Linfo_string5
	.long	.Linfo_string6
	.byte	2
	.byte	152
	.long	3888

	.byte	5
	.long	.Ldebug_loc0
	.long	.Linfo_string277
	.byte	2
	.byte	152
	.long	3984
	.byte	5
	.long	.Ldebug_loc1
	.long	.Linfo_string199
	.byte	2
	.byte	153
	.long	7291
	.byte	5
	.long	.Ldebug_loc2
	.long	.Linfo_string42
	.byte	2
	.byte	154
	.long	3895
	.byte	6
	.byte	3
	.byte	145
	.ascii	"\360\002"
	.long	.Linfo_string276
	.byte	2
	.byte	155
	.long	3895
	.byte	7
	.quad	.Ltmp56
	.long	.Ltmp65-.Ltmp56
	.byte	8
	.long	.Ldebug_loc3
	.long	.Linfo_string73
	.byte	2
	.byte	166
	.long	4961
	.byte	0
	.byte	0
	.byte	4
	.quad	.Lfunc_begin1
	.long	.Lfunc_end1-.Lfunc_begin1
	.byte	1
	.byte	87
	.long	.Linfo_string8
	.long	.Linfo_string9
	.byte	2
	.byte	179
	.long	3888

	.byte	5
	.long	.Ldebug_loc4
	.long	.Linfo_string277
	.byte	2
	.byte	179
	.long	3984
	.byte	5
	.long	.Ldebug_loc5
	.long	.Linfo_string199
	.byte	2
	.byte	180
	.long	7291
	.byte	0
	.byte	4
	.quad	.Lfunc_begin2
	.long	.Lfunc_end2-.Lfunc_begin2
	.byte	1
	.byte	87
	.long	.Linfo_string10
	.long	.Linfo_string11
	.byte	2
	.byte	134
	.long	3888

	.byte	5
	.long	.Ldebug_loc6
	.long	.Linfo_string278
	.byte	2
	.byte	134
	.long	3984
	.byte	8
	.long	.Ldebug_loc7
	.long	.Linfo_string277
	.byte	2
	.byte	134
	.long	7618
	.byte	0
	.byte	4
	.quad	.Lfunc_begin3
	.long	.Lfunc_end3-.Lfunc_begin3
	.byte	1
	.byte	87
	.long	.Linfo_string12
	.long	.Linfo_string13
	.byte	2
	.byte	127
	.long	3895

	.byte	5
	.long	.Ldebug_loc8
	.long	.Linfo_string277
	.byte	2
	.byte	127
	.long	3984
	.byte	0
	.byte	4
	.quad	.Lfunc_begin4
	.long	.Lfunc_end4-.Lfunc_begin4
	.byte	1
	.byte	87
	.long	.Linfo_string19
	.long	.Linfo_string20
	.byte	2
	.byte	46
	.long	3950

	.byte	5
	.long	.Ldebug_loc9
	.long	.Linfo_string199
	.byte	2
	.byte	47
	.long	7291
	.byte	5
	.long	.Ldebug_loc10
	.long	.Linfo_string210
	.byte	2
	.byte	48
	.long	7528
	.byte	5
	.long	.Ldebug_loc11
	.long	.Linfo_string31
	.byte	2
	.byte	49
	.long	4305
	.byte	8
	.long	.Ldebug_loc13
	.long	.Linfo_string279
	.byte	2
	.byte	50
	.long	4961
	.byte	8
	.long	.Ldebug_loc16
	.long	.Linfo_string280
	.byte	2
	.byte	50
	.long	3984
	.byte	7
	.quad	.Ltmp164
	.long	.Ltmp259-.Ltmp164
	.byte	8
	.long	.Ldebug_loc12
	.long	.Linfo_string73
	.byte	2
	.byte	51
	.long	4961
	.byte	8
	.long	.Ldebug_loc14
	.long	.Linfo_string105
	.byte	2
	.byte	51
	.long	5650
	.byte	8
	.long	.Ldebug_loc15
	.long	.Linfo_string277
	.byte	2
	.byte	58
	.long	3984
	.byte	8
	.long	.Ldebug_loc17
	.long	.Linfo_string281
	.byte	2
	.byte	87
	.long	7857
	.byte	7
	.quad	.Ltmp212
	.long	.Ltmp216-.Ltmp212
	.byte	8
	.long	.Ldebug_loc18
	.long	.Linfo_string73
	.byte	2
	.byte	88
	.long	4961
	.byte	0
	.byte	0
	.byte	0
	.byte	9
	.quad	.Lfunc_begin5
	.long	.Lfunc_end5-.Lfunc_begin5
	.byte	1
	.byte	87
	.long	.Linfo_string212
	.byte	2
	.byte	136
	.long	4752
	.byte	5
	.long	.Ldebug_loc19
	.long	.Linfo_string286
	.byte	2
	.byte	136
	.long	7937
	.byte	10
	.byte	0
	.long	.Linfo_string289
	.byte	2
	.byte	136
	.long	4752
	.byte	0
	.byte	11
	.quad	.Lfunc_begin6
	.long	.Lfunc_end6-.Lfunc_begin6
	.byte	1
	.byte	87
	.long	.Linfo_string213
	.byte	2
	.byte	140
	.long	3888
	.byte	9
	.quad	.Lfunc_begin7
	.long	.Lfunc_end7-.Lfunc_begin7
	.byte	1
	.byte	87
	.long	.Linfo_string214
	.byte	2
	.byte	140
	.long	3888
	.byte	5
	.long	.Ldebug_loc20
	.long	.Linfo_string286
	.byte	2
	.byte	140
	.long	7963
	.byte	0
	.byte	9
	.quad	.Lfunc_begin8
	.long	.Lfunc_end8-.Lfunc_begin8
	.byte	1
	.byte	87
	.long	.Linfo_string215
	.byte	2
	.byte	158
	.long	4752
	.byte	5
	.long	.Ldebug_loc21
	.long	.Linfo_string286
	.byte	2
	.byte	158
	.long	7937
	.byte	10
	.byte	0
	.long	.Linfo_string292
	.byte	2
	.byte	158
	.long	4752
	.byte	0
	.byte	4
	.quad	.Lfunc_begin9
	.long	.Lfunc_end9-.Lfunc_begin9
	.byte	1
	.byte	87
	.long	.Linfo_string216
	.long	.Linfo_string217
	.byte	3
	.byte	42
	.long	4961

	.byte	5
	.long	.Ldebug_loc22
	.long	.Linfo_string278
	.byte	3
	.byte	42
	.long	7777
	.byte	5
	.long	.Ldebug_loc23
	.long	.Linfo_string278
	.byte	3
	.byte	43
	.long	7291
	.byte	8
	.long	.Ldebug_loc24
	.long	.Linfo_string293
	.byte	3
	.byte	42
	.long	7989
	.byte	8
	.long	.Ldebug_loc25
	.long	.Linfo_string294
	.byte	3
	.byte	44
	.long	4961
	.byte	8
	.long	.Ldebug_loc32
	.long	.Linfo_string199
	.byte	3
	.byte	43
	.long	11782
	.byte	7
	.quad	.Ltmp398
	.long	.Ltmp496-.Ltmp398
	.byte	8
	.long	.Ldebug_loc27
	.long	.Linfo_string295
	.byte	3
	.byte	45
	.long	7994
	.byte	7
	.quad	.Ltmp407
	.long	.Ltmp423-.Ltmp407
	.byte	8
	.long	.Ldebug_loc26
	.long	.Linfo_string73
	.byte	3
	.byte	76
	.long	4961
	.byte	0
	.byte	7
	.quad	.Ltmp424
	.long	.Ltmp445-.Ltmp424
	.byte	8
	.long	.Ldebug_loc28
	.long	.Linfo_string73
	.byte	3
	.byte	86
	.long	4961
	.byte	8
	.long	.Ldebug_loc29
	.long	.Linfo_string31
	.byte	3
	.byte	86
	.long	8145
	.byte	0
	.byte	7
	.quad	.Ltmp445
	.long	.Ltmp496-.Ltmp445
	.byte	8
	.long	.Ldebug_loc30
	.long	.Linfo_string73
	.byte	3
	.byte	48
	.long	4961
	.byte	8
	.long	.Ldebug_loc31
	.long	.Linfo_string300
	.byte	3
	.byte	53
	.long	8150
	.byte	0
	.byte	0
	.byte	0
	.byte	4
	.quad	.Lfunc_begin10
	.long	.Lfunc_end10-.Lfunc_begin10
	.byte	1
	.byte	87
	.long	.Linfo_string218
	.long	.Linfo_string219
	.byte	3
	.byte	112
	.long	4961

	.byte	5
	.long	.Ldebug_loc33
	.long	.Linfo_string293
	.byte	3
	.byte	112
	.long	7777
	.byte	5
	.long	.Ldebug_loc34
	.long	.Linfo_string199
	.byte	3
	.byte	113
	.long	7291
	.byte	5
	.long	.Ldebug_loc35
	.long	.Linfo_string31
	.byte	3
	.byte	114
	.long	4305
	.byte	8
	.long	.Ldebug_loc36
	.long	.Linfo_string468
	.byte	3
	.byte	115
	.long	4961
	.byte	7
	.quad	.Ltmp546
	.long	.Ltmp576-.Ltmp546
	.byte	8
	.long	.Ldebug_loc37
	.long	.Linfo_string73
	.byte	3
	.byte	124
	.long	4961
	.byte	8
	.long	.Ldebug_loc38
	.long	.Linfo_string277
	.byte	3
	.byte	124
	.long	3984
	.byte	0
	.byte	0
	.byte	4
	.quad	.Lfunc_begin11
	.long	.Lfunc_end11-.Lfunc_begin11
	.byte	1
	.byte	87
	.long	.Linfo_string220
	.long	.Linfo_string221
	.byte	3
	.byte	145
	.long	4961

	.byte	5
	.long	.Ldebug_loc39
	.long	.Linfo_string293
	.byte	3
	.byte	145
	.long	7777
	.byte	5
	.long	.Ldebug_loc40
	.long	.Linfo_string199
	.byte	3
	.byte	146
	.long	7291
	.byte	5
	.long	.Ldebug_loc41
	.long	.Linfo_string277
	.byte	3
	.byte	147
	.long	3984
	.byte	8
	.long	.Ldebug_loc45
	.long	.Linfo_string472
	.byte	3
	.byte	148
	.long	4961
	.byte	7
	.quad	.Ltmp592
	.long	.Ltmp618-.Ltmp592
	.byte	8
	.long	.Ldebug_loc42
	.long	.Linfo_string469
	.byte	3
	.byte	149
	.long	11787
	.byte	8
	.long	.Ldebug_loc44
	.long	.Linfo_string202
	.byte	3
	.byte	162
	.long	4752
	.byte	7
	.quad	.Ltmp593
	.long	.Ltmp599-.Ltmp593
	.byte	8
	.long	.Ldebug_loc43
	.long	.Linfo_string73
	.byte	3
	.byte	150
	.long	4961
	.byte	0
	.byte	0
	.byte	0
	.byte	4
	.quad	.Lfunc_begin12
	.long	.Lfunc_end12-.Lfunc_begin12
	.byte	1
	.byte	87
	.long	.Linfo_string222
	.long	.Linfo_string223
	.byte	3
	.byte	205
	.long	4961

	.byte	5
	.long	.Ldebug_loc46
	.long	.Linfo_string293
	.byte	3
	.byte	205
	.long	7777
	.byte	5
	.long	.Ldebug_loc47
	.long	.Linfo_string199
	.byte	3
	.byte	206
	.long	7291
	.byte	5
	.long	.Ldebug_loc48
	.long	.Linfo_string277
	.byte	3
	.byte	207
	.long	3984
	.byte	8
	.long	.Ldebug_loc50
	.long	.Linfo_string473
	.byte	3
	.byte	208
	.long	4961
	.byte	7
	.quad	.Ltmp619
	.long	.Ltmp632-.Ltmp619
	.byte	8
	.long	.Ldebug_loc49
	.long	.Linfo_string202
	.byte	3
	.byte	210
	.long	4752
	.byte	0
	.byte	0
	.byte	4
	.quad	.Lfunc_begin13
	.long	.Lfunc_end13-.Lfunc_begin13
	.byte	1
	.byte	87
	.long	.Linfo_string224
	.long	.Linfo_string225
	.byte	4
	.byte	89
	.long	7571

	.byte	5
	.long	.Ldebug_loc51
	.long	.Linfo_string137
	.byte	4
	.byte	89
	.long	11854
	.byte	5
	.long	.Ldebug_loc52
	.long	.Linfo_string199
	.byte	4
	.byte	90
	.long	7291
	.byte	12
	.long	.Linfo_string484
	.byte	4
	.byte	91
	.long	7571
	.byte	7
	.quad	.Ltmp636
	.long	.Ltmp688-.Ltmp636
	.byte	8
	.long	.Ldebug_loc53
	.long	.Linfo_string479
	.byte	4
	.byte	92
	.long	7571
	.byte	7
	.quad	.Ltmp640
	.long	.Ltmp664-.Ltmp640
	.byte	8
	.long	.Ldebug_loc54
	.long	.Linfo_string482
	.byte	4
	.byte	94
	.long	12050
	.byte	7
	.quad	.Ltmp644
	.long	.Ltmp663-.Ltmp644
	.byte	8
	.long	.Ldebug_loc55
	.long	.Linfo_string483
	.byte	4
	.byte	95
	.long	3984
	.byte	0
	.byte	0
	.byte	7
	.quad	.Ltmp665
	.long	.Ltmp684-.Ltmp665
	.byte	8
	.long	.Ldebug_loc56
	.long	.Linfo_string483
	.byte	4
	.byte	100
	.long	3984
	.byte	0
	.byte	0
	.byte	0
	.byte	4
	.quad	.Lfunc_begin14
	.long	.Lfunc_end14-.Lfunc_begin14
	.byte	1
	.byte	87
	.long	.Linfo_string227
	.long	.Linfo_string228
	.byte	4
	.byte	68
	.long	7623

	.byte	5
	.long	.Ldebug_loc57
	.long	.Linfo_string137
	.byte	4
	.byte	68
	.long	11854
	.byte	5
	.long	.Ldebug_loc58
	.long	.Linfo_string199
	.byte	4
	.byte	69
	.long	7291
	.byte	8
	.long	.Ldebug_loc61
	.long	.Linfo_string485
	.byte	4
	.byte	70
	.long	7623
	.byte	7
	.quad	.Ltmp731
	.long	.Ltmp763-.Ltmp731
	.byte	8
	.long	.Ldebug_loc59
	.long	.Linfo_string123
	.byte	4
	.byte	73
	.long	7623
	.byte	7
	.quad	.Ltmp748
	.long	.Ltmp761-.Ltmp748
	.byte	8
	.long	.Ldebug_loc60
	.long	.Linfo_string482
	.byte	4
	.byte	81
	.long	12050
	.byte	0
	.byte	0
	.byte	0
	.byte	4
	.quad	.Lfunc_begin15
	.long	.Lfunc_end15-.Lfunc_begin15
	.byte	1
	.byte	87
	.long	.Linfo_string236
	.long	.Linfo_string237
	.byte	4
	.byte	187
	.long	3888

	.byte	5
	.long	.Ldebug_loc62
	.long	.Linfo_string278
	.byte	4
	.byte	187
	.long	11854
	.byte	5
	.long	.Ldebug_loc63
	.long	.Linfo_string278
	.byte	4
	.byte	188
	.long	7291
	.byte	5
	.long	.Ldebug_loc64
	.long	.Linfo_string278
	.byte	4
	.byte	189
	.long	3984
	.byte	8
	.long	.Ldebug_loc65
	.long	.Linfo_string137
	.byte	4
	.byte	187
	.long	12055
	.byte	8
	.long	.Ldebug_loc66
	.long	.Linfo_string199
	.byte	4
	.byte	188
	.long	11782
	.byte	8
	.long	.Ldebug_loc67
	.long	.Linfo_string277
	.byte	4
	.byte	189
	.long	7618
	.byte	7
	.quad	.Ltmp779
	.long	.Ltmp801-.Ltmp779
	.byte	13
	.long	.Ldebug_loc68
	.long	.Linfo_string479
	.byte	4
	.short	321
	.long	7571
	.byte	7
	.quad	.Ltmp796
	.long	.Ltmp801-.Ltmp796
	.byte	13
	.long	.Ldebug_loc69
	.long	.Linfo_string293
	.byte	4
	.short	322
	.long	3984
	.byte	0
	.byte	0
	.byte	0
	.byte	14
	.quad	.Lfunc_begin16
	.long	.Lfunc_end16-.Lfunc_begin16
	.byte	1
	.byte	87
	.long	.Linfo_string238
	.long	.Linfo_string239
	.byte	4
	.short	334
	.long	3888

	.byte	15
	.long	.Ldebug_loc70
	.long	.Linfo_string278
	.byte	4
	.short	334
	.long	11854
	.byte	15
	.long	.Ldebug_loc71
	.long	.Linfo_string278
	.byte	4
	.short	335
	.long	7291
	.byte	15
	.long	.Ldebug_loc72
	.long	.Linfo_string278
	.byte	4
	.short	336
	.long	3984
	.byte	13
	.long	.Ldebug_loc73
	.long	.Linfo_string137
	.byte	4
	.short	334
	.long	12055
	.byte	13
	.long	.Ldebug_loc74
	.long	.Linfo_string199
	.byte	4
	.short	335
	.long	11782
	.byte	13
	.long	.Ldebug_loc75
	.long	.Linfo_string277
	.byte	4
	.short	336
	.long	7618
	.byte	7
	.quad	.Ltmp809
	.long	.Ltmp907-.Ltmp809
	.byte	13
	.long	.Ldebug_loc76
	.long	.Linfo_string486
	.byte	4
	.short	340
	.long	4752
	.byte	7
	.quad	.Ltmp820
	.long	.Ltmp827-.Ltmp820
	.byte	13
	.long	.Ldebug_loc77
	.long	.Linfo_string202
	.byte	4
	.short	353
	.long	4752
	.byte	13
	.long	.Ldebug_loc78
	.long	.Linfo_string293
	.byte	4
	.short	353
	.long	3984
	.byte	0
	.byte	16
	.long	.Ldebug_ranges0
	.byte	13
	.long	.Ldebug_loc79
	.long	.Linfo_string202
	.byte	4
	.short	358
	.long	4752
	.byte	13
	.long	.Ldebug_loc80
	.long	.Linfo_string483
	.byte	4
	.short	358
	.long	12050
	.byte	7
	.quad	.Ltmp839
	.long	.Ltmp845-.Ltmp839
	.byte	13
	.long	.Ldebug_loc81
	.long	.Linfo_string487
	.byte	4
	.short	366
	.long	12060
	.byte	0
	.byte	0
	.byte	7
	.quad	.Ltmp860
	.long	.Ltmp868-.Ltmp860
	.byte	13
	.long	.Ldebug_loc82
	.long	.Linfo_string202
	.byte	4
	.short	383
	.long	4752
	.byte	13
	.long	.Ldebug_loc83
	.long	.Linfo_string293
	.byte	4
	.short	383
	.long	3984
	.byte	0
	.byte	0
	.byte	0
	.byte	4
	.quad	.Lfunc_begin17
	.long	.Lfunc_end17-.Lfunc_begin17
	.byte	1
	.byte	87
	.long	.Linfo_string240
	.long	.Linfo_string241
	.byte	4
	.byte	162
	.long	3888

	.byte	5
	.long	.Ldebug_loc84
	.long	.Linfo_string137
	.byte	4
	.byte	162
	.long	11854
	.byte	5
	.long	.Ldebug_loc85
	.long	.Linfo_string199
	.byte	4
	.byte	163
	.long	7291
	.byte	5
	.long	.Ldebug_loc86
	.long	.Linfo_string277
	.byte	4
	.byte	164
	.long	3984
	.byte	6
	.byte	3
	.byte	145
	.ascii	"\220\001"
	.long	.Linfo_string174
	.byte	4
	.byte	165
	.long	5211
	.byte	7
	.quad	.Ltmp909
	.long	.Ltmp924-.Ltmp909
	.byte	8
	.long	.Ldebug_loc87
	.long	.Linfo_string479
	.byte	4
	.byte	167
	.long	7571
	.byte	7
	.quad	.Ltmp912
	.long	.Ltmp924-.Ltmp912
	.byte	8
	.long	.Ldebug_loc88
	.long	.Linfo_string293
	.byte	4
	.byte	168
	.long	3984
	.byte	16
	.long	.Ldebug_ranges1
	.byte	8
	.long	.Ldebug_loc89
	.long	.Linfo_string73
	.byte	4
	.byte	173
	.long	4961
	.byte	8
	.long	.Ldebug_loc90
	.long	.Linfo_string488
	.byte	4
	.byte	173
	.long	3943
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	4
	.quad	.Lfunc_begin18
	.long	.Lfunc_end18-.Lfunc_begin18
	.byte	1
	.byte	87
	.long	.Linfo_string242
	.long	.Linfo_string243
	.byte	4
	.byte	141
	.long	3888

	.byte	5
	.long	.Ldebug_loc91
	.long	.Linfo_string137
	.byte	4
	.byte	141
	.long	11854
	.byte	5
	.long	.Ldebug_loc92
	.long	.Linfo_string199
	.byte	4
	.byte	142
	.long	7291
	.byte	5
	.long	.Ldebug_loc93
	.long	.Linfo_string277
	.byte	4
	.byte	143
	.long	3984
	.byte	6
	.byte	3
	.byte	145
	.asciz	"\340"
	.long	.Linfo_string174
	.byte	4
	.byte	144
	.long	5211
	.byte	7
	.quad	.Ltmp925
	.long	.Ltmp947-.Ltmp925
	.byte	8
	.long	.Ldebug_loc94
	.long	.Linfo_string478
	.byte	4
	.byte	146
	.long	7770
	.byte	16
	.long	.Ldebug_ranges2
	.byte	8
	.long	.Ldebug_loc95
	.long	.Linfo_string202
	.byte	4
	.byte	151
	.long	4752
	.byte	0
	.byte	0
	.byte	0
	.byte	4
	.quad	.Lfunc_begin19
	.long	.Lfunc_end19-.Lfunc_begin19
	.byte	1
	.byte	87
	.long	.Linfo_string244
	.long	.Linfo_string245
	.byte	4
	.byte	108
	.long	3888

	.byte	5
	.long	.Ldebug_loc96
	.long	.Linfo_string137
	.byte	4
	.byte	108
	.long	11854
	.byte	5
	.long	.Ldebug_loc97
	.long	.Linfo_string199
	.byte	4
	.byte	109
	.long	7291
	.byte	7
	.quad	.Ltmp949
	.long	.Ltmp967-.Ltmp949
	.byte	8
	.long	.Ldebug_loc98
	.long	.Linfo_string489
	.byte	4
	.byte	111
	.long	7623
	.byte	8
	.long	.Ldebug_loc99
	.long	.Linfo_string479
	.byte	4
	.byte	112
	.long	7571
	.byte	7
	.quad	.Ltmp957
	.long	.Ltmp967-.Ltmp957
	.byte	8
	.long	.Ldebug_loc100
	.long	.Linfo_string277
	.byte	4
	.byte	113
	.long	3984
	.byte	0
	.byte	0
	.byte	0
	.byte	4
	.quad	.Lfunc_begin20
	.long	.Lfunc_end20-.Lfunc_begin20
	.byte	1
	.byte	87
	.long	.Linfo_string246
	.long	.Linfo_string247
	.byte	4
	.byte	124
	.long	3888

	.byte	5
	.long	.Ldebug_loc101
	.long	.Linfo_string137
	.byte	4
	.byte	124
	.long	11854
	.byte	5
	.long	.Ldebug_loc102
	.long	.Linfo_string199
	.byte	4
	.byte	125
	.long	7291
	.byte	7
	.quad	.Ltmp976
	.long	.Ltmp986-.Ltmp976
	.byte	8
	.long	.Ldebug_loc103
	.long	.Linfo_string489
	.byte	4
	.byte	128
	.long	7623
	.byte	0
	.byte	0
	.byte	4
	.quad	.Lfunc_begin21
	.long	.Lfunc_end21-.Lfunc_begin21
	.byte	1
	.byte	87
	.long	.Linfo_string248
	.long	.Linfo_string249
	.byte	4
	.byte	55
	.long	7708

	.byte	5
	.long	.Ldebug_loc104
	.long	.Linfo_string490
	.byte	4
	.byte	55
	.long	11947
	.byte	5
	.long	.Ldebug_loc105
	.long	.Linfo_string199
	.byte	4
	.byte	56
	.long	7291
	.byte	8
	.long	.Ldebug_loc106
	.long	.Linfo_string491
	.byte	4
	.byte	57
	.long	7708
	.byte	0
	.byte	4
	.quad	.Lfunc_begin22
	.long	.Lfunc_end22-.Lfunc_begin22
	.byte	1
	.byte	87
	.long	.Linfo_string253
	.long	.Linfo_string254
	.byte	4
	.byte	36
	.long	7708

	.byte	5
	.long	.Ldebug_loc107
	.long	.Linfo_string492
	.byte	4
	.byte	36
	.long	12050
	.byte	5
	.long	.Ldebug_loc108
	.long	.Linfo_string199
	.byte	4
	.byte	37
	.long	7291
	.byte	8
	.long	.Ldebug_loc109
	.long	.Linfo_string493
	.byte	4
	.byte	38
	.long	7708
	.byte	0
	.byte	4
	.quad	.Lfunc_begin23
	.long	.Lfunc_end23-.Lfunc_begin23
	.byte	1
	.byte	87
	.long	.Linfo_string255
	.long	.Linfo_string256
	.byte	3
	.byte	26
	.long	7777

	.byte	5
	.long	.Ldebug_loc110
	.long	.Linfo_string199
	.byte	3
	.byte	27
	.long	7291
	.byte	5
	.long	.Ldebug_loc111
	.long	.Linfo_string257
	.byte	3
	.byte	28
	.long	3895
	.byte	5
	.long	.Ldebug_loc112
	.long	.Linfo_string258
	.byte	3
	.byte	29
	.long	3895
	.byte	6
	.byte	3
	.byte	145
	.ascii	"\200\001"
	.long	.Linfo_string259
	.byte	3
	.byte	30
	.long	3895
	.byte	8
	.long	.Ldebug_loc113
	.long	.Linfo_string494
	.byte	3
	.byte	31
	.long	7777
	.byte	0
	.byte	9
	.quad	.Lfunc_begin24
	.long	.Lfunc_end24-.Lfunc_begin24
	.byte	1
	.byte	87
	.long	.Linfo_string262
	.byte	3
	.byte	83
	.long	4752
	.byte	5
	.long	.Ldebug_loc114
	.long	.Linfo_string286
	.byte	3
	.byte	83
	.long	12100
	.byte	10
	.byte	0
	.long	.Linfo_string497
	.byte	3
	.byte	83
	.long	4752
	.byte	0
	.byte	9
	.quad	.Lfunc_begin25
	.long	.Lfunc_end25-.Lfunc_begin25
	.byte	1
	.byte	87
	.long	.Linfo_string213
	.byte	3
	.byte	94
	.long	3888
	.byte	7
	.quad	.Ltmp1012
	.long	.Ltmp1016-.Ltmp1012
	.byte	8
	.long	.Ldebug_loc115
	.long	.Linfo_string73
	.byte	3
	.byte	95
	.long	4961
	.byte	0
	.byte	0
	.byte	9
	.quad	.Lfunc_begin26
	.long	.Lfunc_end26-.Lfunc_begin26
	.byte	1
	.byte	87
	.long	.Linfo_string263
	.byte	3
	.byte	94
	.long	3888
	.byte	5
	.long	.Ldebug_loc116
	.long	.Linfo_string286
	.byte	3
	.byte	94
	.long	7963
	.byte	0
	.byte	9
	.quad	.Lfunc_begin27
	.long	.Lfunc_end27-.Lfunc_begin27
	.byte	1
	.byte	87
	.long	.Linfo_string264
	.byte	3
	.byte	129
	.long	3888
	.byte	5
	.long	.Ldebug_loc117
	.long	.Linfo_string286
	.byte	3
	.byte	129
	.long	12126
	.byte	0
	.byte	9
	.quad	.Lfunc_begin28
	.long	.Lfunc_end28-.Lfunc_begin28
	.byte	1
	.byte	87
	.long	.Linfo_string265
	.byte	4
	.byte	72
	.long	4752
	.byte	5
	.long	.Ldebug_loc118
	.long	.Linfo_string286
	.byte	4
	.byte	72
	.long	7937
	.byte	10
	.byte	0
	.long	.Linfo_string499
	.byte	4
	.byte	72
	.long	4752
	.byte	0
	.byte	9
	.quad	.Lfunc_begin29
	.long	.Lfunc_end29-.Lfunc_begin29
	.byte	1
	.byte	87
	.long	.Linfo_string213
	.byte	4
	.byte	209
	.long	3888
	.byte	7
	.quad	.Ltmp1029
	.long	.Ltmp1075-.Ltmp1029
	.byte	8
	.long	.Ldebug_loc119
	.long	.Linfo_string489
	.byte	4
	.byte	212
	.long	11787
	.byte	16
	.long	.Ldebug_ranges3
	.byte	8
	.long	.Ldebug_loc122
	.long	.Linfo_string73
	.byte	4
	.byte	213
	.long	4961
	.byte	0
	.byte	16
	.long	.Ldebug_ranges5
	.byte	8
	.long	.Ldebug_loc120
	.long	.Linfo_string478
	.byte	4
	.byte	245
	.long	7770
	.byte	16
	.long	.Ldebug_ranges4
	.byte	8
	.long	.Ldebug_loc121
	.long	.Linfo_string202
	.byte	4
	.byte	246
	.long	4752
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	9
	.quad	.Lfunc_begin30
	.long	.Lfunc_end30-.Lfunc_begin30
	.byte	1
	.byte	87
	.long	.Linfo_string266
	.byte	4
	.byte	209
	.long	3888
	.byte	5
	.long	.Ldebug_loc123
	.long	.Linfo_string286
	.byte	4
	.byte	209
	.long	7963
	.byte	0
	.byte	17
	.quad	.Lfunc_begin31
	.long	.Lfunc_end31-.Lfunc_begin31
	.byte	1
	.byte	87
	.long	.Linfo_string267
	.byte	4
	.short	270
	.long	3888
	.byte	18
	.quad	.Lfunc_begin32
	.long	.Lfunc_end32-.Lfunc_begin32
	.byte	1
	.byte	87
	.long	.Linfo_string268
	.byte	4
	.short	270
	.long	3888
	.byte	15
	.long	.Ldebug_loc124
	.long	.Linfo_string286
	.byte	4
	.short	270
	.long	7963
	.byte	0
	.byte	18
	.quad	.Lfunc_begin33
	.long	.Lfunc_end33-.Lfunc_begin33
	.byte	1
	.byte	87
	.long	.Linfo_string269
	.byte	4
	.short	283
	.long	3888
	.byte	7
	.quad	.Ltmp1085
	.long	.Ltmp1094-.Ltmp1085
	.byte	13
	.long	.Ldebug_loc125
	.long	.Linfo_string202
	.byte	4
	.short	286
	.long	4752
	.byte	13
	.long	.Ldebug_loc126
	.long	.Linfo_string73
	.byte	4
	.short	291
	.long	4961
	.byte	13
	.long	.Ldebug_loc127
	.long	.Linfo_string500
	.byte	4
	.short	291
	.long	3943
	.byte	0
	.byte	0
	.byte	18
	.quad	.Lfunc_begin34
	.long	.Lfunc_end34-.Lfunc_begin34
	.byte	1
	.byte	87
	.long	.Linfo_string270
	.byte	4
	.short	283
	.long	3888
	.byte	15
	.long	.Ldebug_loc128
	.long	.Linfo_string286
	.byte	4
	.short	283
	.long	7963
	.byte	0
	.byte	11
	.quad	.Lfunc_begin35
	.long	.Lfunc_end35-.Lfunc_begin35
	.byte	1
	.byte	87
	.long	.Linfo_string271
	.byte	2
	.byte	127
	.long	3895
	.byte	18
	.quad	.Lfunc_begin36
	.long	.Lfunc_end36-.Lfunc_begin36
	.byte	1
	.byte	87
	.long	.Linfo_string272
	.byte	4
	.short	271
	.long	3888
	.byte	19
	.byte	2
	.byte	145
	.byte	32
	.long	.Linfo_string174
	.byte	4
	.short	271
	.long	5211
	.byte	0
	.byte	18
	.quad	.Lfunc_begin37
	.long	.Lfunc_end37-.Lfunc_begin37
	.byte	1
	.byte	87
	.long	.Linfo_string213
	.byte	4
	.short	366
	.long	3984
	.byte	13
	.long	.Ldebug_loc129
	.long	.Linfo_string501
	.byte	4
	.short	366
	.long	3984
	.byte	16
	.long	.Ldebug_ranges6
	.byte	13
	.long	.Ldebug_loc130
	.long	.Linfo_string293
	.byte	4
	.short	367
	.long	3984
	.byte	0
	.byte	0
	.byte	17
	.quad	.Lfunc_begin38
	.long	.Lfunc_end38-.Lfunc_begin38
	.byte	1
	.byte	87
	.long	.Linfo_string267
	.byte	4
	.short	391
	.long	3888
	.byte	18
	.quad	.Lfunc_begin39
	.long	.Lfunc_end39-.Lfunc_begin39
	.byte	1
	.byte	87
	.long	.Linfo_string273
	.byte	4
	.short	391
	.long	3888
	.byte	15
	.long	.Ldebug_loc131
	.long	.Linfo_string286
	.byte	4
	.short	391
	.long	7963
	.byte	0
	.byte	18
	.quad	.Lfunc_begin40
	.long	.Lfunc_end40-.Lfunc_begin40
	.byte	1
	.byte	87
	.long	.Linfo_string272
	.byte	4
	.short	392
	.long	3888
	.byte	19
	.byte	2
	.byte	145
	.byte	32
	.long	.Linfo_string174
	.byte	4
	.short	392
	.long	5211
	.byte	0
	.byte	20
	.quad	.Lfunc_begin41
	.long	.Lfunc_end41-.Lfunc_begin41
	.byte	1
	.byte	87
	.long	.Linfo_string274
	.long	.Linfo_string275
	.byte	2
	.byte	1
	.long	3888

	.byte	3
	.long	.Linfo_string7
	.byte	0
	.byte	0
	.byte	21
	.long	.Linfo_string18
	.byte	16
	.byte	1
	.byte	1
	.byte	1
	.byte	22
	.long	.Linfo_string14
	.long	3931
	.byte	1
	.byte	1
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string16
	.long	3943
	.byte	1
	.byte	1
	.byte	8
	.byte	8
	.byte	0
	.byte	23
	.long	3936
	.byte	3
	.long	.Linfo_string15
	.byte	7
	.byte	1
	.byte	3
	.long	.Linfo_string17
	.byte	5
	.byte	8
	.byte	24
	.long	.Linfo_string211
	.byte	24
	.byte	1
	.byte	22
	.long	.Linfo_string21
	.long	3984
	.byte	5
	.byte	50
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string21
	.long	4961
	.byte	5
	.byte	50
	.byte	8
	.byte	8
	.byte	0
	.byte	23
	.long	3989
	.byte	21
	.long	.Linfo_string26
	.byte	248
	.byte	2
	.byte	18
	.byte	1
	.byte	22
	.long	.Linfo_string22
	.long	4220
	.byte	2
	.byte	19
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string27
	.long	3895
	.byte	2
	.byte	21
	.byte	8
	.byte	48
	.byte	22
	.long	.Linfo_string28
	.long	4269
	.byte	2
	.byte	22
	.byte	8
	.byte	64
	.byte	22
	.long	.Linfo_string30
	.long	3895
	.byte	2
	.byte	24
	.byte	8
	.byte	80
	.byte	22
	.long	.Linfo_string31
	.long	4305
	.byte	2
	.byte	26
	.byte	8
	.byte	96
	.byte	22
	.long	.Linfo_string105
	.long	5650
	.byte	2
	.byte	27
	.byte	8
	.byte	112
	.byte	22
	.long	.Linfo_string166
	.long	4305
	.byte	2
	.byte	29
	.byte	8
	.byte	120
	.byte	22
	.long	.Linfo_string167
	.long	6726
	.byte	2
	.byte	30
	.byte	8
	.byte	136
	.byte	22
	.long	.Linfo_string185
	.long	4305
	.byte	2
	.byte	31
	.byte	8
	.byte	144
	.byte	22
	.long	.Linfo_string186
	.long	7051
	.byte	2
	.byte	32
	.byte	8
	.byte	160
	.byte	22
	.long	.Linfo_string195
	.long	4305
	.byte	2
	.byte	33
	.byte	8
	.byte	168
	.byte	22
	.long	.Linfo_string196
	.long	6726
	.byte	2
	.byte	34
	.byte	8
	.byte	184
	.byte	22
	.long	.Linfo_string197
	.long	4305
	.byte	2
	.byte	35
	.byte	8
	.byte	192
	.byte	22
	.long	.Linfo_string198
	.long	4752
	.byte	2
	.byte	37
	.byte	1
	.byte	208
	.byte	22
	.long	.Linfo_string199
	.long	7291
	.byte	2
	.byte	38
	.byte	8
	.byte	216
	.byte	22
	.long	.Linfo_string210
	.long	7528
	.byte	2
	.byte	39
	.byte	8
	.byte	232
	.byte	22
	.long	.Linfo_string168
	.long	7566
	.byte	2
	.byte	41
	.byte	8
	.byte	240
	.byte	0
	.byte	21
	.long	.Linfo_string26
	.byte	48
	.byte	2
	.byte	12
	.byte	1
	.byte	22
	.long	.Linfo_string23
	.long	3895
	.byte	2
	.byte	12
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string24
	.long	3895
	.byte	2
	.byte	12
	.byte	8
	.byte	16
	.byte	22
	.long	.Linfo_string25
	.long	3895
	.byte	2
	.byte	12
	.byte	8
	.byte	32
	.byte	0
	.byte	21
	.long	.Linfo_string29
	.byte	16
	.byte	2
	.byte	12
	.byte	1
	.byte	22
	.long	.Linfo_string14
	.long	3931
	.byte	2
	.byte	1
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string16
	.long	3943
	.byte	2
	.byte	1
	.byte	8
	.byte	8
	.byte	0
	.byte	21
	.long	.Linfo_string104
	.byte	16
	.byte	2
	.byte	7
	.byte	1
	.byte	22
	.long	.Linfo_string32
	.long	4341
	.byte	2
	.byte	7
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string64
	.long	4698
	.byte	2
	.byte	1
	.byte	8
	.byte	8
	.byte	0
	.byte	23
	.long	4346
	.byte	24
	.long	.Linfo_string103
	.byte	72
	.byte	1
	.byte	22
	.long	.Linfo_string33
	.long	4471
	.byte	5
	.byte	7
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string61
	.long	4945
	.byte	5
	.byte	7
	.byte	8
	.byte	8
	.byte	22
	.long	.Linfo_string66
	.long	5052
	.byte	5
	.byte	7
	.byte	8
	.byte	16
	.byte	22
	.long	.Linfo_string71
	.long	5156
	.byte	5
	.byte	7
	.byte	8
	.byte	24
	.byte	22
	.long	.Linfo_string76
	.long	5052
	.byte	5
	.byte	7
	.byte	8
	.byte	32
	.byte	22
	.long	.Linfo_string77
	.long	5258
	.byte	5
	.byte	7
	.byte	8
	.byte	40
	.byte	22
	.long	.Linfo_string100
	.long	5258
	.byte	5
	.byte	7
	.byte	8
	.byte	48
	.byte	22
	.long	.Linfo_string101
	.long	5258
	.byte	5
	.byte	7
	.byte	8
	.byte	56
	.byte	22
	.long	.Linfo_string102
	.long	5156
	.byte	5
	.byte	7
	.byte	8
	.byte	64
	.byte	0
	.byte	23
	.long	4476
	.byte	21
	.long	.Linfo_string60
	.byte	72
	.byte	1
	.byte	1
	.byte	1
	.byte	22
	.long	.Linfo_string34
	.long	4642
	.byte	1
	.byte	1
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string36
	.long	4642
	.byte	1
	.byte	1
	.byte	8
	.byte	8
	.byte	22
	.long	.Linfo_string37
	.long	57
	.byte	1
	.byte	1
	.byte	4
	.byte	16
	.byte	22
	.long	.Linfo_string38
	.long	3936
	.byte	1
	.byte	1
	.byte	1
	.byte	20
	.byte	22
	.long	.Linfo_string39
	.long	3936
	.byte	1
	.byte	1
	.byte	1
	.byte	21
	.byte	22
	.long	.Linfo_string40
	.long	3936
	.byte	1
	.byte	1
	.byte	1
	.byte	22
	.byte	22
	.long	.Linfo_string41
	.long	4649
	.byte	1
	.byte	1
	.byte	8
	.byte	24
	.byte	22
	.long	.Linfo_string44
	.long	4703
	.byte	1
	.byte	1
	.byte	8
	.byte	32
	.byte	22
	.long	.Linfo_string46
	.long	3931
	.byte	1
	.byte	1
	.byte	8
	.byte	40
	.byte	22
	.long	.Linfo_string18
	.long	4759
	.byte	1
	.byte	1
	.byte	8
	.byte	48
	.byte	22
	.long	.Linfo_string47
	.long	4764
	.byte	1
	.byte	1
	.byte	8
	.byte	56
	.byte	22
	.long	.Linfo_string59
	.long	4698
	.byte	1
	.byte	1
	.byte	8
	.byte	64
	.byte	0
	.byte	3
	.long	.Linfo_string35
	.byte	7
	.byte	8
	.byte	23
	.long	4654
	.byte	21
	.long	.Linfo_string43
	.byte	8
	.byte	1
	.byte	1
	.byte	1
	.byte	22
	.long	.Linfo_string42
	.long	4677
	.byte	1
	.byte	1
	.byte	8
	.byte	0
	.byte	0
	.byte	23
	.long	4682
	.byte	25
	.long	4642
	.byte	26
	.long	4698
	.byte	26
	.long	4642
	.byte	0
	.byte	23
	.long	3888
	.byte	23
	.long	4708
	.byte	21
	.long	.Linfo_string43
	.byte	8
	.byte	1
	.byte	1
	.byte	1
	.byte	22
	.long	.Linfo_string42
	.long	4731
	.byte	1
	.byte	1
	.byte	8
	.byte	0
	.byte	0
	.byte	23
	.long	4736
	.byte	25
	.long	4752
	.byte	26
	.long	4698
	.byte	26
	.long	4698
	.byte	0
	.byte	3
	.long	.Linfo_string45
	.byte	7
	.byte	1
	.byte	23
	.long	3895
	.byte	23
	.long	4769
	.byte	21
	.long	.Linfo_string47
	.byte	40
	.byte	1
	.byte	1
	.byte	1
	.byte	22
	.long	.Linfo_string48
	.long	4759
	.byte	1
	.byte	1
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string49
	.long	4759
	.byte	1
	.byte	1
	.byte	8
	.byte	8
	.byte	22
	.long	.Linfo_string50
	.long	4818
	.byte	1
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	24
	.long	.Linfo_string58
	.byte	24
	.byte	1
	.byte	22
	.long	.Linfo_string51
	.long	4865
	.byte	5
	.byte	1
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string56
	.long	3943
	.byte	5
	.byte	1
	.byte	8
	.byte	8
	.byte	22
	.long	.Linfo_string57
	.long	3943
	.byte	5
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	23
	.long	4870
	.byte	21
	.long	.Linfo_string55
	.byte	40
	.byte	1
	.byte	1
	.byte	1
	.byte	22
	.long	.Linfo_string48
	.long	4759
	.byte	1
	.byte	1
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string49
	.long	4759
	.byte	1
	.byte	1
	.byte	8
	.byte	8
	.byte	22
	.long	.Linfo_string52
	.long	4698
	.byte	1
	.byte	1
	.byte	8
	.byte	16
	.byte	22
	.long	.Linfo_string53
	.long	4698
	.byte	1
	.byte	1
	.byte	8
	.byte	24
	.byte	22
	.long	.Linfo_string54
	.long	4698
	.byte	1
	.byte	1
	.byte	8
	.byte	32
	.byte	0
	.byte	23
	.long	4950
	.byte	25
	.long	4961
	.byte	26
	.long	4698
	.byte	0
	.byte	21
	.long	.Linfo_string65
	.byte	16
	.byte	1
	.byte	1
	.byte	1
	.byte	22
	.long	.Linfo_string32
	.long	4997
	.byte	1
	.byte	1
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string64
	.long	4698
	.byte	1
	.byte	1
	.byte	8
	.byte	8
	.byte	0
	.byte	23
	.long	5002
	.byte	24
	.long	.Linfo_string63
	.byte	16
	.byte	1
	.byte	22
	.long	.Linfo_string33
	.long	4471
	.byte	5
	.byte	1
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string62
	.long	5036
	.byte	5
	.byte	1
	.byte	8
	.byte	8
	.byte	0
	.byte	23
	.long	5041
	.byte	25
	.long	3895
	.byte	26
	.long	4698
	.byte	0
	.byte	23
	.long	5057
	.byte	25
	.long	5068
	.byte	26
	.long	4698
	.byte	0
	.byte	21
	.long	.Linfo_string70
	.byte	16
	.byte	2
	.byte	7
	.byte	1
	.byte	22
	.long	.Linfo_string32
	.long	5104
	.byte	2
	.byte	7
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string64
	.long	4698
	.byte	2
	.byte	1
	.byte	8
	.byte	8
	.byte	0
	.byte	23
	.long	5109
	.byte	24
	.long	.Linfo_string69
	.byte	24
	.byte	1
	.byte	22
	.long	.Linfo_string33
	.long	4471
	.byte	5
	.byte	7
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string67
	.long	5036
	.byte	5
	.byte	7
	.byte	8
	.byte	8
	.byte	22
	.long	.Linfo_string68
	.long	5036
	.byte	5
	.byte	7
	.byte	8
	.byte	16
	.byte	0
	.byte	23
	.long	5161
	.byte	25
	.long	5177
	.byte	26
	.long	4698
	.byte	26
	.long	5211
	.byte	0
	.byte	24
	.long	.Linfo_string74
	.byte	24
	.byte	1
	.byte	22
	.long	.Linfo_string72
	.long	3943
	.byte	5
	.byte	7
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string73
	.long	4961
	.byte	5
	.byte	7
	.byte	8
	.byte	8
	.byte	0
	.byte	24
	.long	.Linfo_string75
	.byte	24
	.byte	1
	.byte	22
	.long	.Linfo_string51
	.long	3931
	.byte	5
	.byte	1
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string56
	.long	3943
	.byte	5
	.byte	1
	.byte	8
	.byte	8
	.byte	22
	.long	.Linfo_string57
	.long	3943
	.byte	5
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	23
	.long	5263
	.byte	25
	.long	4961
	.byte	26
	.long	4698
	.byte	26
	.long	5279
	.byte	0
	.byte	21
	.long	.Linfo_string99
	.byte	24
	.byte	2
	.byte	4
	.byte	1
	.byte	22
	.long	.Linfo_string78
	.long	5328
	.byte	2
	.byte	4
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string80
	.long	5335
	.byte	2
	.byte	4
	.byte	8
	.byte	8
	.byte	22
	.long	.Linfo_string82
	.long	5342
	.byte	2
	.byte	4
	.byte	8
	.byte	16
	.byte	0
	.byte	3
	.long	.Linfo_string79
	.byte	7
	.byte	8
	.byte	3
	.long	.Linfo_string81
	.byte	5
	.byte	8
	.byte	23
	.long	5347
	.byte	21
	.long	.Linfo_string98
	.byte	88
	.byte	2
	.byte	4
	.byte	1
	.byte	22
	.long	.Linfo_string48
	.long	3895
	.byte	2
	.byte	4
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string83
	.long	5435
	.byte	2
	.byte	4
	.byte	8
	.byte	16
	.byte	22
	.long	.Linfo_string88
	.long	5536
	.byte	2
	.byte	4
	.byte	8
	.byte	40
	.byte	22
	.long	.Linfo_string95
	.long	5335
	.byte	2
	.byte	4
	.byte	8
	.byte	64
	.byte	22
	.long	.Linfo_string96
	.long	5335
	.byte	2
	.byte	4
	.byte	8
	.byte	72
	.byte	22
	.long	.Linfo_string97
	.long	5482
	.byte	2
	.byte	4
	.byte	8
	.byte	80
	.byte	0
	.byte	24
	.long	.Linfo_string87
	.byte	24
	.byte	1
	.byte	22
	.long	.Linfo_string51
	.long	5482
	.byte	5
	.byte	1
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string56
	.long	3943
	.byte	5
	.byte	1
	.byte	8
	.byte	8
	.byte	22
	.long	.Linfo_string57
	.long	3943
	.byte	5
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	23
	.long	5487
	.byte	21
	.long	.Linfo_string86
	.byte	32
	.byte	2
	.byte	4
	.byte	1
	.byte	22
	.long	.Linfo_string48
	.long	3895
	.byte	2
	.byte	4
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string84
	.long	3943
	.byte	2
	.byte	4
	.byte	8
	.byte	16
	.byte	22
	.long	.Linfo_string85
	.long	4752
	.byte	2
	.byte	4
	.byte	1
	.byte	24
	.byte	0
	.byte	24
	.long	.Linfo_string94
	.byte	24
	.byte	1
	.byte	22
	.long	.Linfo_string51
	.long	5583
	.byte	5
	.byte	1
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string56
	.long	3943
	.byte	5
	.byte	1
	.byte	8
	.byte	8
	.byte	22
	.long	.Linfo_string57
	.long	3943
	.byte	5
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	23
	.long	5588
	.byte	21
	.long	.Linfo_string93
	.byte	16
	.byte	2
	.byte	4
	.byte	1
	.byte	22
	.long	.Linfo_string89
	.long	5335
	.byte	2
	.byte	4
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string90
	.long	3936
	.byte	2
	.byte	4
	.byte	1
	.byte	8
	.byte	22
	.long	.Linfo_string91
	.long	4752
	.byte	2
	.byte	4
	.byte	1
	.byte	9
	.byte	22
	.long	.Linfo_string92
	.long	4752
	.byte	2
	.byte	4
	.byte	1
	.byte	10
	.byte	0
	.byte	23
	.long	5655
	.byte	21
	.long	.Linfo_string26
	.byte	176
	.byte	2
	.byte	11
	.byte	1
	.byte	22
	.long	.Linfo_string106
	.long	5938
	.byte	2
	.byte	11
	.byte	4
	.byte	0
	.byte	22
	.long	.Linfo_string108
	.long	5938
	.byte	2
	.byte	11
	.byte	4
	.byte	4
	.byte	22
	.long	.Linfo_string109
	.long	57
	.byte	2
	.byte	11
	.byte	4
	.byte	8
	.byte	22
	.long	.Linfo_string110
	.long	5945
	.byte	2
	.byte	11
	.byte	8
	.byte	16
	.byte	22
	.long	.Linfo_string121
	.long	6175
	.byte	2
	.byte	11
	.byte	8
	.byte	24
	.byte	22
	.long	.Linfo_string31
	.long	6291
	.byte	2
	.byte	11
	.byte	8
	.byte	32
	.byte	22
	.long	.Linfo_string133
	.long	6392
	.byte	2
	.byte	11
	.byte	8
	.byte	48
	.byte	22
	.long	.Linfo_string140
	.long	6573
	.byte	2
	.byte	11
	.byte	8
	.byte	56
	.byte	22
	.long	.Linfo_string152
	.long	57
	.byte	2
	.byte	11
	.byte	4
	.byte	64
	.byte	22
	.long	.Linfo_string153
	.long	6255
	.byte	2
	.byte	11
	.byte	4
	.byte	68
	.byte	22
	.long	.Linfo_string154
	.long	6573
	.byte	2
	.byte	11
	.byte	8
	.byte	80
	.byte	22
	.long	.Linfo_string155
	.long	6573
	.byte	2
	.byte	11
	.byte	8
	.byte	88
	.byte	22
	.long	.Linfo_string156
	.long	6255
	.byte	2
	.byte	11
	.byte	4
	.byte	96
	.byte	22
	.long	.Linfo_string157
	.long	6712
	.byte	2
	.byte	11
	.byte	8
	.byte	104
	.byte	22
	.long	.Linfo_string159
	.long	6712
	.byte	2
	.byte	11
	.byte	8
	.byte	112
	.byte	22
	.long	.Linfo_string160
	.long	6712
	.byte	2
	.byte	11
	.byte	8
	.byte	120
	.byte	22
	.long	.Linfo_string161
	.long	6712
	.byte	2
	.byte	11
	.byte	8
	.byte	128
	.byte	22
	.long	.Linfo_string162
	.long	4752
	.byte	2
	.byte	11
	.byte	1
	.byte	136
	.byte	22
	.long	.Linfo_string163
	.long	4961
	.byte	2
	.byte	11
	.byte	8
	.byte	144
	.byte	22
	.long	.Linfo_string164
	.long	6712
	.byte	2
	.byte	11
	.byte	8
	.byte	160
	.byte	22
	.long	.Linfo_string165
	.long	6255
	.byte	2
	.byte	11
	.byte	4
	.byte	168
	.byte	0
	.byte	3
	.long	.Linfo_string107
	.byte	5
	.byte	4
	.byte	23
	.long	5950
	.byte	21
	.long	.Linfo_string120
	.byte	56
	.byte	2
	.byte	11
	.byte	1
	.byte	22
	.long	.Linfo_string111
	.long	3943
	.byte	2
	.byte	11
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string112
	.long	4752
	.byte	2
	.byte	11
	.byte	1
	.byte	8
	.byte	22
	.long	.Linfo_string113
	.long	6038
	.byte	2
	.byte	11
	.byte	8
	.byte	16
	.byte	22
	.long	.Linfo_string115
	.long	6038
	.byte	2
	.byte	11
	.byte	8
	.byte	24
	.byte	22
	.long	.Linfo_string116
	.long	57
	.byte	2
	.byte	11
	.byte	4
	.byte	32
	.byte	22
	.long	.Linfo_string117
	.long	6045
	.byte	2
	.byte	11
	.byte	8
	.byte	40
	.byte	0
	.byte	3
	.long	.Linfo_string114
	.byte	5
	.byte	8
	.byte	21
	.long	.Linfo_string119
	.byte	16
	.byte	2
	.byte	5
	.byte	1
	.byte	22
	.long	.Linfo_string32
	.long	6081
	.byte	2
	.byte	5
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string64
	.long	4698
	.byte	2
	.byte	1
	.byte	8
	.byte	8
	.byte	0
	.byte	23
	.long	6086
	.byte	24
	.long	.Linfo_string118
	.byte	16
	.byte	1
	.byte	22
	.long	.Linfo_string33
	.long	4471
	.byte	5
	.byte	5
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string102
	.long	6120
	.byte	5
	.byte	5
	.byte	8
	.byte	8
	.byte	0
	.byte	23
	.long	6125
	.byte	25
	.long	6141
	.byte	26
	.long	4698
	.byte	26
	.long	5211
	.byte	0
	.byte	24
	.long	.Linfo_string74
	.byte	24
	.byte	1
	.byte	22
	.long	.Linfo_string72
	.long	3943
	.byte	5
	.byte	5
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string73
	.long	4961
	.byte	5
	.byte	5
	.byte	8
	.byte	8
	.byte	0
	.byte	23
	.long	6180
	.byte	21
	.long	.Linfo_string130
	.byte	72
	.byte	2
	.byte	11
	.byte	1
	.byte	22
	.long	.Linfo_string122
	.long	6255
	.byte	2
	.byte	11
	.byte	4
	.byte	0
	.byte	22
	.long	.Linfo_string126
	.long	3895
	.byte	2
	.byte	11
	.byte	8
	.byte	8
	.byte	22
	.long	.Linfo_string127
	.long	3943
	.byte	2
	.byte	11
	.byte	8
	.byte	24
	.byte	22
	.long	.Linfo_string128
	.long	6045
	.byte	2
	.byte	11
	.byte	8
	.byte	32
	.byte	22
	.long	.Linfo_string129
	.long	5211
	.byte	2
	.byte	11
	.byte	8
	.byte	48
	.byte	0
	.byte	21
	.long	.Linfo_string125
	.byte	8
	.byte	2
	.byte	5
	.byte	1
	.byte	22
	.long	.Linfo_string123
	.long	5938
	.byte	2
	.byte	5
	.byte	4
	.byte	0
	.byte	22
	.long	.Linfo_string124
	.long	57
	.byte	2
	.byte	5
	.byte	4
	.byte	4
	.byte	0
	.byte	21
	.long	.Linfo_string132
	.byte	16
	.byte	2
	.byte	11
	.byte	1
	.byte	22
	.long	.Linfo_string32
	.long	6327
	.byte	2
	.byte	11
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string64
	.long	4698
	.byte	2
	.byte	1
	.byte	8
	.byte	8
	.byte	0
	.byte	23
	.long	6332
	.byte	24
	.long	.Linfo_string131
	.byte	32
	.byte	1
	.byte	22
	.long	.Linfo_string33
	.long	4471
	.byte	5
	.byte	11
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string61
	.long	4945
	.byte	5
	.byte	11
	.byte	8
	.byte	8
	.byte	22
	.long	.Linfo_string71
	.long	6120
	.byte	5
	.byte	11
	.byte	8
	.byte	16
	.byte	22
	.long	.Linfo_string102
	.long	6120
	.byte	5
	.byte	11
	.byte	8
	.byte	24
	.byte	0
	.byte	23
	.long	6397
	.byte	21
	.long	.Linfo_string135
	.byte	88
	.byte	2
	.byte	11
	.byte	1
	.byte	22
	.long	.Linfo_string129
	.long	5211
	.byte	2
	.byte	11
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string134
	.long	6498
	.byte	2
	.byte	11
	.byte	8
	.byte	24
	.byte	22
	.long	.Linfo_string136
	.long	3943
	.byte	2
	.byte	11
	.byte	8
	.byte	40
	.byte	22
	.long	.Linfo_string137
	.long	3943
	.byte	2
	.byte	11
	.byte	8
	.byte	48
	.byte	22
	.long	.Linfo_string73
	.long	4961
	.byte	2
	.byte	11
	.byte	8
	.byte	56
	.byte	22
	.long	.Linfo_string138
	.long	3943
	.byte	2
	.byte	11
	.byte	8
	.byte	72
	.byte	22
	.long	.Linfo_string139
	.long	3943
	.byte	2
	.byte	11
	.byte	8
	.byte	80
	.byte	0
	.byte	21
	.long	.Linfo_string135
	.byte	16
	.byte	2
	.byte	5
	.byte	1
	.byte	22
	.long	.Linfo_string32
	.long	6534
	.byte	2
	.byte	5
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string64
	.long	4698
	.byte	2
	.byte	1
	.byte	8
	.byte	8
	.byte	0
	.byte	23
	.long	6539
	.byte	24
	.long	.Linfo_string118
	.byte	16
	.byte	1
	.byte	22
	.long	.Linfo_string33
	.long	4471
	.byte	5
	.byte	5
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string71
	.long	6120
	.byte	5
	.byte	5
	.byte	8
	.byte	8
	.byte	0
	.byte	23
	.long	6578
	.byte	21
	.long	.Linfo_string151
	.byte	48
	.byte	1
	.byte	1
	.byte	1
	.byte	22
	.long	.Linfo_string141
	.long	3943
	.byte	1
	.byte	1
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string142
	.long	3936
	.byte	1
	.byte	1
	.byte	1
	.byte	8
	.byte	22
	.long	.Linfo_string143
	.long	3936
	.byte	1
	.byte	1
	.byte	1
	.byte	9
	.byte	22
	.long	.Linfo_string144
	.long	6705
	.byte	1
	.byte	1
	.byte	2
	.byte	10
	.byte	22
	.long	.Linfo_string146
	.long	57
	.byte	1
	.byte	1
	.byte	4
	.byte	12
	.byte	22
	.long	.Linfo_string147
	.long	4698
	.byte	1
	.byte	1
	.byte	8
	.byte	16
	.byte	22
	.long	.Linfo_string148
	.long	4698
	.byte	1
	.byte	1
	.byte	8
	.byte	24
	.byte	22
	.long	.Linfo_string149
	.long	4642
	.byte	1
	.byte	1
	.byte	8
	.byte	32
	.byte	22
	.long	.Linfo_string150
	.long	4698
	.byte	1
	.byte	1
	.byte	8
	.byte	40
	.byte	0
	.byte	3
	.long	.Linfo_string145
	.byte	7
	.byte	2
	.byte	23
	.long	6717
	.byte	27
	.long	.Linfo_string158
	.byte	0
	.byte	1
	.byte	1
	.byte	1
	.byte	23
	.long	6731
	.byte	21
	.long	.Linfo_string184
	.byte	160
	.byte	2
	.byte	5
	.byte	1
	.byte	22
	.long	.Linfo_string168
	.long	6255
	.byte	2
	.byte	5
	.byte	4
	.byte	0
	.byte	22
	.long	.Linfo_string137
	.long	6832
	.byte	2
	.byte	5
	.byte	8
	.byte	8
	.byte	22
	.long	.Linfo_string170
	.long	6573
	.byte	2
	.byte	5
	.byte	8
	.byte	32
	.byte	22
	.long	.Linfo_string171
	.long	6884
	.byte	2
	.byte	5
	.byte	8
	.byte	40
	.byte	22
	.long	.Linfo_string182
	.long	6884
	.byte	2
	.byte	5
	.byte	8
	.byte	48
	.byte	22
	.long	.Linfo_string183
	.long	6982
	.byte	2
	.byte	5
	.byte	8
	.byte	56
	.byte	22
	.long	.Linfo_string73
	.long	4961
	.byte	2
	.byte	5
	.byte	8
	.byte	144
	.byte	0
	.byte	24
	.long	.Linfo_string169
	.byte	24
	.byte	1
	.byte	22
	.long	.Linfo_string51
	.long	6879
	.byte	5
	.byte	1
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string56
	.long	3943
	.byte	5
	.byte	1
	.byte	8
	.byte	8
	.byte	22
	.long	.Linfo_string57
	.long	3943
	.byte	5
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	23
	.long	6045
	.byte	23
	.long	6889
	.byte	21
	.long	.Linfo_string181
	.byte	56
	.byte	2
	.byte	5
	.byte	1
	.byte	22
	.long	.Linfo_string172
	.long	4698
	.byte	2
	.byte	5
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string173
	.long	6977
	.byte	2
	.byte	5
	.byte	8
	.byte	8
	.byte	22
	.long	.Linfo_string178
	.long	4752
	.byte	2
	.byte	5
	.byte	1
	.byte	16
	.byte	22
	.long	.Linfo_string179
	.long	3943
	.byte	2
	.byte	5
	.byte	8
	.byte	24
	.byte	22
	.long	.Linfo_string129
	.long	7038
	.byte	2
	.byte	5
	.byte	1
	.byte	32
	.byte	22
	.long	.Linfo_string180
	.long	4698
	.byte	2
	.byte	5
	.byte	8
	.byte	48
	.byte	0
	.byte	23
	.long	6982
	.byte	21
	.long	.Linfo_string177
	.byte	88
	.byte	2
	.byte	5
	.byte	1
	.byte	22
	.long	.Linfo_string174
	.long	5211
	.byte	2
	.byte	5
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string175
	.long	7018
	.byte	2
	.byte	5
	.byte	1
	.byte	24
	.byte	0
	.byte	28
	.long	3936
	.byte	29
	.long	7031
	.byte	0
	.byte	64
	.byte	0
	.byte	30
	.long	.Linfo_string176
	.byte	8
	.byte	7
	.byte	28
	.long	3936
	.byte	29
	.long	7031
	.byte	0
	.byte	9
	.byte	0
	.byte	23
	.long	7056
	.byte	21
	.long	.Linfo_string194
	.byte	128
	.byte	2
	.byte	5
	.byte	1
	.byte	22
	.long	.Linfo_string168
	.long	6255
	.byte	2
	.byte	5
	.byte	4
	.byte	0
	.byte	22
	.long	.Linfo_string136
	.long	6498
	.byte	2
	.byte	5
	.byte	8
	.byte	8
	.byte	22
	.long	.Linfo_string129
	.long	7183
	.byte	2
	.byte	5
	.byte	8
	.byte	24
	.byte	22
	.long	.Linfo_string188
	.long	6573
	.byte	2
	.byte	5
	.byte	8
	.byte	56
	.byte	22
	.long	.Linfo_string189
	.long	6573
	.byte	2
	.byte	5
	.byte	8
	.byte	64
	.byte	22
	.long	.Linfo_string190
	.long	6573
	.byte	2
	.byte	5
	.byte	8
	.byte	72
	.byte	22
	.long	.Linfo_string182
	.long	7219
	.byte	2
	.byte	5
	.byte	8
	.byte	80
	.byte	22
	.long	.Linfo_string193
	.long	5211
	.byte	2
	.byte	5
	.byte	8
	.byte	88
	.byte	22
	.long	.Linfo_string73
	.long	4961
	.byte	2
	.byte	5
	.byte	8
	.byte	112
	.byte	0
	.byte	21
	.long	.Linfo_string187
	.byte	32
	.byte	2
	.byte	5
	.byte	1
	.byte	22
	.long	.Linfo_string174
	.long	5211
	.byte	2
	.byte	5
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string84
	.long	3943
	.byte	2
	.byte	5
	.byte	8
	.byte	24
	.byte	0
	.byte	23
	.long	7224
	.byte	21
	.long	.Linfo_string192
	.byte	32
	.byte	2
	.byte	5
	.byte	1
	.byte	22
	.long	.Linfo_string191
	.long	4698
	.byte	2
	.byte	5
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string173
	.long	7286
	.byte	2
	.byte	5
	.byte	8
	.byte	8
	.byte	22
	.long	.Linfo_string179
	.long	3943
	.byte	2
	.byte	5
	.byte	8
	.byte	16
	.byte	22
	.long	.Linfo_string180
	.long	4698
	.byte	2
	.byte	5
	.byte	8
	.byte	24
	.byte	0
	.byte	23
	.long	7183
	.byte	21
	.long	.Linfo_string209
	.byte	16
	.byte	2
	.byte	4
	.byte	1
	.byte	22
	.long	.Linfo_string32
	.long	7327
	.byte	2
	.byte	4
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string64
	.long	4698
	.byte	2
	.byte	1
	.byte	8
	.byte	8
	.byte	0
	.byte	23
	.long	7332
	.byte	24
	.long	.Linfo_string208
	.byte	40
	.byte	1
	.byte	22
	.long	.Linfo_string33
	.long	4471
	.byte	5
	.byte	4
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string200
	.long	7405
	.byte	5
	.byte	4
	.byte	8
	.byte	8
	.byte	22
	.long	.Linfo_string204
	.long	7455
	.byte	5
	.byte	4
	.byte	8
	.byte	16
	.byte	22
	.long	.Linfo_string205
	.long	4945
	.byte	5
	.byte	4
	.byte	8
	.byte	24
	.byte	22
	.long	.Linfo_string206
	.long	7471
	.byte	5
	.byte	4
	.byte	8
	.byte	32
	.byte	0
	.byte	23
	.long	7410
	.byte	25
	.long	7421
	.byte	26
	.long	4698
	.byte	0
	.byte	24
	.long	.Linfo_string203
	.byte	32
	.byte	1
	.byte	22
	.long	.Linfo_string201
	.long	5279
	.byte	5
	.byte	4
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string202
	.long	4752
	.byte	5
	.byte	4
	.byte	1
	.byte	24
	.byte	0
	.byte	23
	.long	7460
	.byte	25
	.long	6712
	.byte	26
	.long	4698
	.byte	0
	.byte	23
	.long	7476
	.byte	25
	.long	7492
	.byte	26
	.long	4698
	.byte	26
	.long	7492
	.byte	0
	.byte	21
	.long	.Linfo_string207
	.byte	16
	.byte	3
	.byte	5
	.byte	1
	.byte	22
	.long	.Linfo_string33
	.long	4471
	.byte	3
	.byte	1
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string64
	.long	4698
	.byte	3
	.byte	1
	.byte	8
	.byte	8
	.byte	0
	.byte	23
	.long	7533
	.byte	21
	.long	.Linfo_string43
	.byte	8
	.byte	2
	.byte	39
	.byte	1
	.byte	22
	.long	.Linfo_string42
	.long	7556
	.byte	2
	.byte	39
	.byte	8
	.byte	0
	.byte	0
	.byte	23
	.long	7561
	.byte	31
	.long	3888
	.byte	23
	.long	6255
	.byte	24
	.long	.Linfo_string226
	.byte	24
	.byte	1
	.byte	22
	.long	.Linfo_string51
	.long	7618
	.byte	5
	.byte	1
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string56
	.long	3943
	.byte	5
	.byte	1
	.byte	8
	.byte	8
	.byte	22
	.long	.Linfo_string57
	.long	3943
	.byte	5
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	23
	.long	3984
	.byte	21
	.long	.Linfo_string235
	.byte	40
	.byte	2
	.byte	12
	.byte	1
	.byte	22
	.long	.Linfo_string229
	.long	3895
	.byte	2
	.byte	12
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string230
	.long	7672
	.byte	2
	.byte	12
	.byte	8
	.byte	16
	.byte	22
	.long	.Linfo_string234
	.long	6573
	.byte	2
	.byte	12
	.byte	8
	.byte	32
	.byte	0
	.byte	21
	.long	.Linfo_string233
	.byte	16
	.byte	2
	.byte	12
	.byte	1
	.byte	22
	.long	.Linfo_string231
	.long	3943
	.byte	2
	.byte	12
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string232
	.long	3943
	.byte	2
	.byte	12
	.byte	8
	.byte	8
	.byte	0
	.byte	21
	.long	.Linfo_string24
	.byte	48
	.byte	2
	.byte	12
	.byte	1
	.byte	22
	.long	.Linfo_string23
	.long	3895
	.byte	2
	.byte	12
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string250
	.long	3895
	.byte	2
	.byte	12
	.byte	8
	.byte	16
	.byte	22
	.long	.Linfo_string251
	.long	7770
	.byte	2
	.byte	12
	.byte	8
	.byte	32
	.byte	22
	.long	.Linfo_string252
	.long	4752
	.byte	2
	.byte	12
	.byte	1
	.byte	40
	.byte	0
	.byte	3
	.long	.Linfo_string251
	.byte	7
	.byte	8
	.byte	23
	.long	7782
	.byte	21
	.long	.Linfo_string261
	.byte	64
	.byte	3
	.byte	16
	.byte	1
	.byte	22
	.long	.Linfo_string257
	.long	3895
	.byte	3
	.byte	17
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string258
	.long	3895
	.byte	3
	.byte	18
	.byte	8
	.byte	16
	.byte	22
	.long	.Linfo_string259
	.long	3895
	.byte	3
	.byte	19
	.byte	8
	.byte	32
	.byte	22
	.long	.Linfo_string260
	.long	6573
	.byte	3
	.byte	21
	.byte	8
	.byte	48
	.byte	22
	.long	.Linfo_string168
	.long	7566
	.byte	3
	.byte	22
	.byte	8
	.byte	56
	.byte	0
	.byte	23
	.long	7862
	.byte	21
	.long	.Linfo_string285
	.byte	112
	.byte	2
	.byte	12
	.byte	1
	.byte	22
	.long	.Linfo_string229
	.long	3895
	.byte	2
	.byte	12
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string282
	.long	4220
	.byte	2
	.byte	12
	.byte	8
	.byte	16
	.byte	22
	.long	.Linfo_string283
	.long	3895
	.byte	2
	.byte	12
	.byte	8
	.byte	64
	.byte	22
	.long	.Linfo_string284
	.long	4269
	.byte	2
	.byte	12
	.byte	8
	.byte	80
	.byte	22
	.long	.Linfo_string250
	.long	3895
	.byte	2
	.byte	12
	.byte	8
	.byte	96
	.byte	0
	.byte	23
	.long	7942
	.byte	24
	.long	.Linfo_string288
	.byte	8
	.byte	1
	.byte	22
	.long	.Linfo_string287
	.long	7566
	.byte	5
	.byte	136
	.byte	8
	.byte	0
	.byte	0
	.byte	23
	.long	7968
	.byte	24
	.long	.Linfo_string291
	.byte	8
	.byte	1
	.byte	22
	.long	.Linfo_string290
	.long	7528
	.byte	5
	.byte	140
	.byte	8
	.byte	0
	.byte	0
	.byte	23
	.long	7777
	.byte	21
	.long	.Linfo_string299
	.byte	16
	.byte	2
	.byte	7
	.byte	1
	.byte	22
	.long	.Linfo_string32
	.long	8030
	.byte	2
	.byte	7
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string64
	.long	4698
	.byte	2
	.byte	1
	.byte	8
	.byte	8
	.byte	0
	.byte	23
	.long	8035
	.byte	24
	.long	.Linfo_string298
	.byte	32
	.byte	1
	.byte	22
	.long	.Linfo_string33
	.long	4471
	.byte	5
	.byte	7
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string296
	.long	8095
	.byte	5
	.byte	7
	.byte	8
	.byte	8
	.byte	22
	.long	.Linfo_string70
	.long	5052
	.byte	5
	.byte	7
	.byte	8
	.byte	16
	.byte	22
	.long	.Linfo_string61
	.long	4945
	.byte	5
	.byte	7
	.byte	8
	.byte	24
	.byte	0
	.byte	23
	.long	8100
	.byte	25
	.long	8111
	.byte	26
	.long	4698
	.byte	0
	.byte	24
	.long	.Linfo_string297
	.byte	32
	.byte	1
	.byte	22
	.long	.Linfo_string21
	.long	4305
	.byte	5
	.byte	7
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string21
	.long	4961
	.byte	5
	.byte	7
	.byte	8
	.byte	16
	.byte	0
	.byte	23
	.long	4305
	.byte	23
	.long	8155
	.byte	32
	.long	.Linfo_string120
	.short	368
	.byte	3
	.byte	5
	.byte	1
	.byte	22
	.long	.Linfo_string301
	.long	6498
	.byte	3
	.byte	5
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string99
	.long	8536
	.byte	3
	.byte	5
	.byte	8
	.byte	16
	.byte	22
	.long	.Linfo_string302
	.long	8574
	.byte	3
	.byte	5
	.byte	8
	.byte	24
	.byte	22
	.long	.Linfo_string397
	.long	6573
	.byte	3
	.byte	5
	.byte	8
	.byte	48
	.byte	22
	.long	.Linfo_string398
	.long	10531
	.byte	3
	.byte	5
	.byte	8
	.byte	56
	.byte	22
	.long	.Linfo_string413
	.long	10898
	.byte	3
	.byte	5
	.byte	8
	.byte	64
	.byte	22
	.long	.Linfo_string416
	.long	10983
	.byte	3
	.byte	5
	.byte	8
	.byte	72
	.byte	22
	.long	.Linfo_string418
	.long	11061
	.byte	3
	.byte	5
	.byte	8
	.byte	80
	.byte	22
	.long	.Linfo_string421
	.long	11214
	.byte	3
	.byte	5
	.byte	8
	.byte	88
	.byte	22
	.long	.Linfo_string426
	.long	9642
	.byte	3
	.byte	5
	.byte	8
	.byte	96
	.byte	22
	.long	.Linfo_string402
	.long	3895
	.byte	3
	.byte	5
	.byte	8
	.byte	120
	.byte	22
	.long	.Linfo_string427
	.long	11268
	.byte	3
	.byte	5
	.byte	8
	.byte	136
	.byte	22
	.long	.Linfo_string429
	.long	11214
	.byte	3
	.byte	5
	.byte	8
	.byte	144
	.byte	22
	.long	.Linfo_string430
	.long	4752
	.byte	3
	.byte	5
	.byte	1
	.byte	152
	.byte	22
	.long	.Linfo_string400
	.long	10728
	.byte	3
	.byte	5
	.byte	8
	.byte	160
	.byte	22
	.long	.Linfo_string431
	.long	4752
	.byte	3
	.byte	5
	.byte	1
	.byte	184
	.byte	22
	.long	.Linfo_string432
	.long	4752
	.byte	3
	.byte	5
	.byte	1
	.byte	185
	.byte	22
	.long	.Linfo_string433
	.long	11275
	.byte	3
	.byte	5
	.byte	1
	.byte	186
	.byte	22
	.long	.Linfo_string434
	.long	11288
	.byte	3
	.byte	5
	.byte	8
	.byte	224
	.byte	22
	.long	.Linfo_string446
	.long	6705
	.byte	3
	.byte	5
	.byte	2
	.byte	240
	.byte	22
	.long	.Linfo_string447
	.long	6705
	.byte	3
	.byte	5
	.byte	2
	.byte	242
	.byte	22
	.long	.Linfo_string448
	.long	10780
	.byte	3
	.byte	5
	.byte	8
	.byte	248
	.byte	33
	.long	.Linfo_string449
	.long	4752
	.byte	3
	.byte	5
	.byte	1
	.short	272
	.byte	33
	.long	.Linfo_string450
	.long	11550
	.byte	3
	.byte	5
	.byte	8
	.short	280
	.byte	33
	.long	.Linfo_string452
	.long	6045
	.byte	3
	.byte	5
	.byte	8
	.short	288
	.byte	33
	.long	.Linfo_string453
	.long	11557
	.byte	3
	.byte	5
	.byte	4
	.short	304
	.byte	33
	.long	.Linfo_string168
	.long	11593
	.byte	3
	.byte	5
	.byte	4
	.short	316
	.byte	33
	.long	.Linfo_string462
	.long	11668
	.byte	3
	.byte	5
	.byte	8
	.short	344
	.byte	0
	.byte	23
	.long	8541
	.byte	21
	.long	.Linfo_string43
	.byte	8
	.byte	3
	.byte	5
	.byte	1
	.byte	22
	.long	.Linfo_string42
	.long	8564
	.byte	3
	.byte	5
	.byte	8
	.byte	0
	.byte	0
	.byte	23
	.long	8569
	.byte	31
	.long	5279
	.byte	24
	.long	.Linfo_string396
	.byte	24
	.byte	1
	.byte	22
	.long	.Linfo_string51
	.long	8621
	.byte	5
	.byte	1
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string56
	.long	3943
	.byte	5
	.byte	1
	.byte	8
	.byte	8
	.byte	22
	.long	.Linfo_string57
	.long	3943
	.byte	5
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	23
	.long	8626
	.byte	21
	.long	.Linfo_string303
	.byte	96
	.byte	3
	.byte	5
	.byte	1
	.byte	22
	.long	.Linfo_string303
	.long	8701
	.byte	3
	.byte	5
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string207
	.long	7492
	.byte	3
	.byte	5
	.byte	8
	.byte	24
	.byte	22
	.long	.Linfo_string305
	.long	5211
	.byte	3
	.byte	5
	.byte	8
	.byte	40
	.byte	22
	.long	.Linfo_string306
	.long	8701
	.byte	3
	.byte	5
	.byte	8
	.byte	64
	.byte	22
	.long	.Linfo_string307
	.long	8753
	.byte	3
	.byte	5
	.byte	8
	.byte	88
	.byte	0
	.byte	24
	.long	.Linfo_string304
	.byte	24
	.byte	1
	.byte	22
	.long	.Linfo_string51
	.long	8748
	.byte	5
	.byte	1
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string56
	.long	3943
	.byte	5
	.byte	1
	.byte	8
	.byte	8
	.byte	22
	.long	.Linfo_string57
	.long	3943
	.byte	5
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	23
	.long	5211
	.byte	23
	.long	8758
	.byte	32
	.long	.Linfo_string303
	.short	1328
	.byte	3
	.byte	5
	.byte	1
	.byte	22
	.long	.Linfo_string308
	.long	5211
	.byte	3
	.byte	5
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string309
	.long	5211
	.byte	3
	.byte	5
	.byte	8
	.byte	24
	.byte	22
	.long	.Linfo_string310
	.long	5211
	.byte	3
	.byte	5
	.byte	8
	.byte	48
	.byte	22
	.long	.Linfo_string311
	.long	5211
	.byte	3
	.byte	5
	.byte	8
	.byte	72
	.byte	22
	.long	.Linfo_string312
	.long	5211
	.byte	3
	.byte	5
	.byte	8
	.byte	96
	.byte	22
	.long	.Linfo_string313
	.long	5211
	.byte	3
	.byte	5
	.byte	8
	.byte	120
	.byte	22
	.long	.Linfo_string314
	.long	9373
	.byte	3
	.byte	5
	.byte	8
	.byte	144
	.byte	22
	.long	.Linfo_string315
	.long	9380
	.byte	3
	.byte	5
	.byte	8
	.byte	152
	.byte	22
	.long	.Linfo_string316
	.long	7492
	.byte	3
	.byte	5
	.byte	8
	.byte	160
	.byte	22
	.long	.Linfo_string283
	.long	3943
	.byte	3
	.byte	5
	.byte	8
	.byte	176
	.byte	22
	.long	.Linfo_string317
	.long	9387
	.byte	3
	.byte	5
	.byte	8
	.byte	184
	.byte	22
	.long	.Linfo_string323
	.long	9489
	.byte	3
	.byte	5
	.byte	8
	.byte	192
	.byte	33
	.long	.Linfo_string339
	.long	9489
	.byte	3
	.byte	5
	.byte	8
	.short	440
	.byte	33
	.long	.Linfo_string340
	.long	5279
	.byte	3
	.byte	5
	.byte	8
	.short	688
	.byte	33
	.long	.Linfo_string341
	.long	5279
	.byte	3
	.byte	5
	.byte	8
	.short	712
	.byte	33
	.long	.Linfo_string342
	.long	9831
	.byte	3
	.byte	5
	.byte	8
	.short	736
	.byte	33
	.long	.Linfo_string343
	.long	9838
	.byte	3
	.byte	5
	.byte	8
	.short	744
	.byte	33
	.long	.Linfo_string348
	.long	9838
	.byte	3
	.byte	5
	.byte	8
	.short	768
	.byte	33
	.long	.Linfo_string349
	.long	9939
	.byte	3
	.byte	5
	.byte	8
	.short	792
	.byte	33
	.long	.Linfo_string351
	.long	9991
	.byte	3
	.byte	5
	.byte	8
	.short	816
	.byte	33
	.long	.Linfo_string353
	.long	9939
	.byte	3
	.byte	5
	.byte	8
	.short	840
	.byte	33
	.long	.Linfo_string354
	.long	4752
	.byte	3
	.byte	5
	.byte	1
	.short	864
	.byte	33
	.long	.Linfo_string355
	.long	4752
	.byte	3
	.byte	5
	.byte	1
	.short	865
	.byte	33
	.long	.Linfo_string356
	.long	3943
	.byte	3
	.byte	5
	.byte	8
	.short	872
	.byte	33
	.long	.Linfo_string357
	.long	4752
	.byte	3
	.byte	5
	.byte	1
	.short	880
	.byte	33
	.long	.Linfo_string358
	.long	5211
	.byte	3
	.byte	5
	.byte	8
	.short	888
	.byte	33
	.long	.Linfo_string359
	.long	5211
	.byte	3
	.byte	5
	.byte	8
	.short	912
	.byte	33
	.long	.Linfo_string360
	.long	9642
	.byte	3
	.byte	5
	.byte	8
	.short	936
	.byte	33
	.long	.Linfo_string361
	.long	9642
	.byte	3
	.byte	5
	.byte	8
	.short	960
	.byte	33
	.long	.Linfo_string362
	.long	9642
	.byte	3
	.byte	5
	.byte	8
	.short	984
	.byte	33
	.long	.Linfo_string363
	.long	9642
	.byte	3
	.byte	5
	.byte	8
	.short	1008
	.byte	33
	.long	.Linfo_string364
	.long	10050
	.byte	3
	.byte	5
	.byte	8
	.short	1032
	.byte	33
	.long	.Linfo_string367
	.long	10151
	.byte	3
	.byte	5
	.byte	8
	.short	1056
	.byte	33
	.long	.Linfo_string381
	.long	4752
	.byte	3
	.byte	5
	.byte	1
	.short	1080
	.byte	33
	.long	.Linfo_string382
	.long	9642
	.byte	3
	.byte	5
	.byte	8
	.short	1088
	.byte	33
	.long	.Linfo_string383
	.long	9642
	.byte	3
	.byte	5
	.byte	8
	.short	1112
	.byte	33
	.long	.Linfo_string384
	.long	10389
	.byte	3
	.byte	5
	.byte	8
	.short	1136
	.byte	33
	.long	.Linfo_string389
	.long	10389
	.byte	3
	.byte	5
	.byte	8
	.short	1160
	.byte	33
	.long	.Linfo_string390
	.long	9642
	.byte	3
	.byte	5
	.byte	8
	.short	1184
	.byte	33
	.long	.Linfo_string391
	.long	9642
	.byte	3
	.byte	5
	.byte	8
	.short	1208
	.byte	33
	.long	.Linfo_string392
	.long	9642
	.byte	3
	.byte	5
	.byte	8
	.short	1232
	.byte	33
	.long	.Linfo_string393
	.long	9642
	.byte	3
	.byte	5
	.byte	8
	.short	1256
	.byte	33
	.long	.Linfo_string394
	.long	9642
	.byte	3
	.byte	5
	.byte	8
	.short	1280
	.byte	33
	.long	.Linfo_string395
	.long	9939
	.byte	3
	.byte	5
	.byte	8
	.short	1304
	.byte	0
	.byte	3
	.long	.Linfo_string314
	.byte	5
	.byte	8
	.byte	3
	.long	.Linfo_string315
	.byte	5
	.byte	8
	.byte	23
	.long	9392
	.byte	21
	.long	.Linfo_string322
	.byte	32
	.byte	3
	.byte	5
	.byte	1
	.byte	22
	.long	.Linfo_string318
	.long	4752
	.byte	3
	.byte	5
	.byte	1
	.byte	0
	.byte	22
	.long	.Linfo_string319
	.long	9428
	.byte	3
	.byte	5
	.byte	8
	.byte	8
	.byte	0
	.byte	21
	.long	.Linfo_string321
	.byte	24
	.byte	3
	.byte	5
	.byte	1
	.byte	22
	.long	.Linfo_string51
	.long	9477
	.byte	3
	.byte	1
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string56
	.long	3943
	.byte	3
	.byte	1
	.byte	8
	.byte	8
	.byte	22
	.long	.Linfo_string57
	.long	3943
	.byte	3
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	23
	.long	9482
	.byte	3
	.long	.Linfo_string320
	.byte	7
	.byte	8
	.byte	21
	.long	.Linfo_string338
	.byte	248
	.byte	3
	.byte	5
	.byte	1
	.byte	22
	.long	.Linfo_string324
	.long	9642
	.byte	3
	.byte	5
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string326
	.long	9642
	.byte	3
	.byte	5
	.byte	8
	.byte	24
	.byte	22
	.long	.Linfo_string327
	.long	9642
	.byte	3
	.byte	5
	.byte	8
	.byte	48
	.byte	22
	.long	.Linfo_string328
	.long	9642
	.byte	3
	.byte	5
	.byte	8
	.byte	72
	.byte	22
	.long	.Linfo_string329
	.long	9642
	.byte	3
	.byte	5
	.byte	8
	.byte	96
	.byte	22
	.long	.Linfo_string330
	.long	9642
	.byte	3
	.byte	5
	.byte	8
	.byte	120
	.byte	22
	.long	.Linfo_string331
	.long	9642
	.byte	3
	.byte	5
	.byte	8
	.byte	144
	.byte	22
	.long	.Linfo_string317
	.long	3895
	.byte	3
	.byte	5
	.byte	8
	.byte	168
	.byte	22
	.long	.Linfo_string332
	.long	3895
	.byte	3
	.byte	5
	.byte	8
	.byte	184
	.byte	22
	.long	.Linfo_string333
	.long	9689
	.byte	3
	.byte	5
	.byte	8
	.byte	200
	.byte	22
	.long	.Linfo_string337
	.long	9689
	.byte	3
	.byte	5
	.byte	8
	.byte	224
	.byte	0
	.byte	24
	.long	.Linfo_string325
	.byte	24
	.byte	1
	.byte	22
	.long	.Linfo_string51
	.long	4759
	.byte	5
	.byte	1
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string56
	.long	3943
	.byte	5
	.byte	1
	.byte	8
	.byte	8
	.byte	22
	.long	.Linfo_string57
	.long	3943
	.byte	5
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	24
	.long	.Linfo_string336
	.byte	24
	.byte	1
	.byte	22
	.long	.Linfo_string51
	.long	9736
	.byte	5
	.byte	1
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string56
	.long	3943
	.byte	5
	.byte	1
	.byte	8
	.byte	8
	.byte	22
	.long	.Linfo_string57
	.long	3943
	.byte	5
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	23
	.long	9741
	.byte	21
	.long	.Linfo_string335
	.byte	40
	.byte	3
	.byte	5
	.byte	1
	.byte	22
	.long	.Linfo_string284
	.long	9777
	.byte	3
	.byte	5
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string206
	.long	7492
	.byte	3
	.byte	5
	.byte	8
	.byte	24
	.byte	0
	.byte	21
	.long	.Linfo_string334
	.byte	24
	.byte	3
	.byte	5
	.byte	1
	.byte	22
	.long	.Linfo_string51
	.long	9826
	.byte	3
	.byte	1
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string56
	.long	3943
	.byte	3
	.byte	1
	.byte	8
	.byte	8
	.byte	22
	.long	.Linfo_string57
	.long	3943
	.byte	3
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	23
	.long	3943
	.byte	3
	.long	.Linfo_string342
	.byte	5
	.byte	8
	.byte	24
	.long	.Linfo_string347
	.byte	24
	.byte	1
	.byte	22
	.long	.Linfo_string51
	.long	9885
	.byte	5
	.byte	1
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string56
	.long	3943
	.byte	5
	.byte	1
	.byte	8
	.byte	8
	.byte	22
	.long	.Linfo_string57
	.long	3943
	.byte	5
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	23
	.long	9890
	.byte	21
	.long	.Linfo_string346
	.byte	56
	.byte	3
	.byte	5
	.byte	1
	.byte	22
	.long	.Linfo_string344
	.long	9777
	.byte	3
	.byte	5
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string345
	.long	4752
	.byte	3
	.byte	5
	.byte	1
	.byte	24
	.byte	22
	.long	.Linfo_string206
	.long	5211
	.byte	3
	.byte	5
	.byte	8
	.byte	32
	.byte	0
	.byte	24
	.long	.Linfo_string350
	.byte	24
	.byte	1
	.byte	22
	.long	.Linfo_string51
	.long	9986
	.byte	5
	.byte	1
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string56
	.long	3943
	.byte	5
	.byte	1
	.byte	8
	.byte	8
	.byte	22
	.long	.Linfo_string57
	.long	3943
	.byte	5
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	23
	.long	9777
	.byte	24
	.long	.Linfo_string352
	.byte	24
	.byte	1
	.byte	22
	.long	.Linfo_string51
	.long	10038
	.byte	5
	.byte	1
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string56
	.long	3943
	.byte	5
	.byte	1
	.byte	8
	.byte	8
	.byte	22
	.long	.Linfo_string57
	.long	3943
	.byte	5
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	23
	.long	10043
	.byte	3
	.long	.Linfo_string351
	.byte	5
	.byte	8
	.byte	24
	.long	.Linfo_string366
	.byte	24
	.byte	1
	.byte	22
	.long	.Linfo_string51
	.long	10097
	.byte	5
	.byte	1
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string56
	.long	3943
	.byte	5
	.byte	1
	.byte	8
	.byte	8
	.byte	22
	.long	.Linfo_string57
	.long	3943
	.byte	5
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	23
	.long	10102
	.byte	21
	.long	.Linfo_string365
	.byte	24
	.byte	2
	.byte	7
	.byte	1
	.byte	22
	.long	.Linfo_string51
	.long	3931
	.byte	2
	.byte	1
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string56
	.long	3943
	.byte	2
	.byte	1
	.byte	8
	.byte	8
	.byte	22
	.long	.Linfo_string57
	.long	3943
	.byte	2
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	24
	.long	.Linfo_string380
	.byte	24
	.byte	1
	.byte	22
	.long	.Linfo_string51
	.long	10198
	.byte	5
	.byte	1
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string56
	.long	3943
	.byte	5
	.byte	1
	.byte	8
	.byte	8
	.byte	22
	.long	.Linfo_string57
	.long	3943
	.byte	5
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	23
	.long	10203
	.byte	23
	.long	10208
	.byte	21
	.long	.Linfo_string379
	.byte	128
	.byte	3
	.byte	5
	.byte	1
	.byte	22
	.long	.Linfo_string368
	.long	3895
	.byte	3
	.byte	5
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string369
	.long	3895
	.byte	3
	.byte	5
	.byte	8
	.byte	16
	.byte	22
	.long	.Linfo_string24
	.long	10335
	.byte	3
	.byte	5
	.byte	8
	.byte	32
	.byte	22
	.long	.Linfo_string373
	.long	3895
	.byte	3
	.byte	5
	.byte	8
	.byte	40
	.byte	22
	.long	.Linfo_string374
	.long	3895
	.byte	3
	.byte	5
	.byte	8
	.byte	56
	.byte	22
	.long	.Linfo_string375
	.long	3895
	.byte	3
	.byte	5
	.byte	8
	.byte	72
	.byte	22
	.long	.Linfo_string376
	.long	4752
	.byte	3
	.byte	5
	.byte	1
	.byte	88
	.byte	22
	.long	.Linfo_string377
	.long	3895
	.byte	3
	.byte	5
	.byte	8
	.byte	96
	.byte	22
	.long	.Linfo_string378
	.long	3895
	.byte	3
	.byte	5
	.byte	8
	.byte	112
	.byte	0
	.byte	23
	.long	10340
	.byte	21
	.long	.Linfo_string372
	.byte	40
	.byte	3
	.byte	5
	.byte	1
	.byte	22
	.long	.Linfo_string30
	.long	3895
	.byte	3
	.byte	5
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string370
	.long	3895
	.byte	3
	.byte	5
	.byte	8
	.byte	16
	.byte	22
	.long	.Linfo_string371
	.long	4752
	.byte	3
	.byte	5
	.byte	1
	.byte	32
	.byte	0
	.byte	24
	.long	.Linfo_string388
	.byte	24
	.byte	1
	.byte	22
	.long	.Linfo_string51
	.long	10436
	.byte	5
	.byte	1
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string56
	.long	3943
	.byte	5
	.byte	1
	.byte	8
	.byte	8
	.byte	22
	.long	.Linfo_string57
	.long	3943
	.byte	5
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	23
	.long	10441
	.byte	23
	.long	10446
	.byte	21
	.long	.Linfo_string387
	.byte	48
	.byte	2
	.byte	7
	.byte	1
	.byte	22
	.long	.Linfo_string365
	.long	10102
	.byte	2
	.byte	7
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string385
	.long	10482
	.byte	2
	.byte	7
	.byte	8
	.byte	24
	.byte	0
	.byte	21
	.long	.Linfo_string386
	.byte	24
	.byte	2
	.byte	7
	.byte	1
	.byte	22
	.long	.Linfo_string51
	.long	3931
	.byte	2
	.byte	1
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string56
	.long	3943
	.byte	2
	.byte	1
	.byte	8
	.byte	8
	.byte	22
	.long	.Linfo_string57
	.long	3943
	.byte	2
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	23
	.long	10536
	.byte	21
	.long	.Linfo_string43
	.byte	8
	.byte	3
	.byte	5
	.byte	1
	.byte	22
	.long	.Linfo_string42
	.long	10559
	.byte	3
	.byte	5
	.byte	8
	.byte	0
	.byte	0
	.byte	23
	.long	10564
	.byte	25
	.long	10575
	.byte	26
	.long	10609
	.byte	0
	.byte	24
	.long	.Linfo_string399
	.byte	24
	.byte	1
	.byte	22
	.long	.Linfo_string21
	.long	8621
	.byte	5
	.byte	5
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string21
	.long	4961
	.byte	5
	.byte	5
	.byte	8
	.byte	8
	.byte	0
	.byte	23
	.long	10614
	.byte	21
	.long	.Linfo_string412
	.byte	176
	.byte	3
	.byte	5
	.byte	1
	.byte	22
	.long	.Linfo_string400
	.long	10728
	.byte	3
	.byte	5
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string402
	.long	3895
	.byte	3
	.byte	5
	.byte	8
	.byte	24
	.byte	22
	.long	.Linfo_string403
	.long	10780
	.byte	3
	.byte	5
	.byte	8
	.byte	40
	.byte	22
	.long	.Linfo_string406
	.long	5211
	.byte	3
	.byte	5
	.byte	8
	.byte	64
	.byte	22
	.long	.Linfo_string407
	.long	10839
	.byte	3
	.byte	5
	.byte	8
	.byte	88
	.byte	22
	.long	.Linfo_string410
	.long	9642
	.byte	3
	.byte	5
	.byte	8
	.byte	112
	.byte	22
	.long	.Linfo_string411
	.long	10728
	.byte	3
	.byte	5
	.byte	8
	.byte	136
	.byte	22
	.long	.Linfo_string104
	.long	4305
	.byte	3
	.byte	5
	.byte	8
	.byte	160
	.byte	0
	.byte	24
	.long	.Linfo_string401
	.byte	24
	.byte	1
	.byte	22
	.long	.Linfo_string51
	.long	10775
	.byte	5
	.byte	1
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string56
	.long	3943
	.byte	5
	.byte	1
	.byte	8
	.byte	8
	.byte	22
	.long	.Linfo_string57
	.long	3943
	.byte	5
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	23
	.long	6705
	.byte	24
	.long	.Linfo_string405
	.byte	24
	.byte	1
	.byte	22
	.long	.Linfo_string51
	.long	10827
	.byte	5
	.byte	1
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string56
	.long	3943
	.byte	5
	.byte	1
	.byte	8
	.byte	8
	.byte	22
	.long	.Linfo_string57
	.long	3943
	.byte	5
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	23
	.long	10832
	.byte	3
	.long	.Linfo_string404
	.byte	7
	.byte	2
	.byte	24
	.long	.Linfo_string409
	.byte	24
	.byte	1
	.byte	22
	.long	.Linfo_string51
	.long	10886
	.byte	5
	.byte	1
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string56
	.long	3943
	.byte	5
	.byte	1
	.byte	8
	.byte	8
	.byte	22
	.long	.Linfo_string57
	.long	3943
	.byte	5
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	23
	.long	10891
	.byte	3
	.long	.Linfo_string408
	.byte	7
	.byte	2
	.byte	23
	.long	10903
	.byte	21
	.long	.Linfo_string43
	.byte	8
	.byte	3
	.byte	5
	.byte	1
	.byte	22
	.long	.Linfo_string42
	.long	10926
	.byte	3
	.byte	5
	.byte	8
	.byte	0
	.byte	0
	.byte	23
	.long	10931
	.byte	25
	.long	10575
	.byte	26
	.long	10942
	.byte	0
	.byte	23
	.long	10947
	.byte	21
	.long	.Linfo_string415
	.byte	48
	.byte	3
	.byte	5
	.byte	1
	.byte	22
	.long	.Linfo_string414
	.long	8701
	.byte	3
	.byte	5
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string407
	.long	10839
	.byte	3
	.byte	5
	.byte	8
	.byte	24
	.byte	0
	.byte	23
	.long	10988
	.byte	21
	.long	.Linfo_string43
	.byte	8
	.byte	3
	.byte	5
	.byte	1
	.byte	22
	.long	.Linfo_string42
	.long	11011
	.byte	3
	.byte	5
	.byte	8
	.byte	0
	.byte	0
	.byte	23
	.long	11016
	.byte	25
	.long	11027
	.byte	26
	.long	10609
	.byte	0
	.byte	24
	.long	.Linfo_string417
	.byte	24
	.byte	1
	.byte	22
	.long	.Linfo_string21
	.long	4698
	.byte	5
	.byte	5
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string21
	.long	4961
	.byte	5
	.byte	5
	.byte	8
	.byte	8
	.byte	0
	.byte	23
	.long	11066
	.byte	21
	.long	.Linfo_string43
	.byte	8
	.byte	3
	.byte	5
	.byte	1
	.byte	22
	.long	.Linfo_string42
	.long	11089
	.byte	3
	.byte	5
	.byte	8
	.byte	0
	.byte	0
	.byte	23
	.long	11094
	.byte	25
	.long	4961
	.byte	26
	.long	8701
	.byte	26
	.long	11110
	.byte	0
	.byte	24
	.long	.Linfo_string420
	.byte	24
	.byte	1
	.byte	22
	.long	.Linfo_string51
	.long	11157
	.byte	5
	.byte	1
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string56
	.long	3943
	.byte	5
	.byte	1
	.byte	8
	.byte	8
	.byte	22
	.long	.Linfo_string57
	.long	3943
	.byte	5
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	23
	.long	11162
	.byte	24
	.long	.Linfo_string419
	.byte	24
	.byte	1
	.byte	22
	.long	.Linfo_string51
	.long	11209
	.byte	5
	.byte	1
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string56
	.long	3943
	.byte	5
	.byte	1
	.byte	8
	.byte	8
	.byte	22
	.long	.Linfo_string57
	.long	3943
	.byte	5
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	23
	.long	8753
	.byte	23
	.long	11219
	.byte	21
	.long	.Linfo_string425
	.byte	40
	.byte	3
	.byte	5
	.byte	1
	.byte	22
	.long	.Linfo_string422
	.long	6573
	.byte	3
	.byte	5
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string423
	.long	6573
	.byte	3
	.byte	5
	.byte	8
	.byte	8
	.byte	22
	.long	.Linfo_string424
	.long	11162
	.byte	3
	.byte	5
	.byte	8
	.byte	16
	.byte	0
	.byte	3
	.long	.Linfo_string428
	.byte	5
	.byte	8
	.byte	28
	.long	3936
	.byte	29
	.long	7031
	.byte	0
	.byte	32
	.byte	0
	.byte	21
	.long	.Linfo_string434
	.byte	16
	.byte	3
	.byte	5
	.byte	1
	.byte	22
	.long	.Linfo_string32
	.long	11324
	.byte	3
	.byte	5
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string64
	.long	4698
	.byte	3
	.byte	1
	.byte	8
	.byte	8
	.byte	0
	.byte	23
	.long	11329
	.byte	24
	.long	.Linfo_string445
	.byte	24
	.byte	1
	.byte	22
	.long	.Linfo_string33
	.long	4471
	.byte	5
	.byte	5
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string435
	.long	11376
	.byte	5
	.byte	5
	.byte	8
	.byte	8
	.byte	22
	.long	.Linfo_string444
	.long	11524
	.byte	5
	.byte	5
	.byte	8
	.byte	16
	.byte	0
	.byte	23
	.long	11381
	.byte	25
	.long	11397
	.byte	26
	.long	4698
	.byte	26
	.long	3895
	.byte	0
	.byte	24
	.long	.Linfo_string443
	.byte	16
	.byte	1
	.byte	22
	.long	.Linfo_string22
	.long	11431
	.byte	5
	.byte	5
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string202
	.long	4752
	.byte	5
	.byte	5
	.byte	1
	.byte	8
	.byte	0
	.byte	23
	.long	11436
	.byte	21
	.long	.Linfo_string442
	.byte	104
	.byte	3
	.byte	5
	.byte	1
	.byte	22
	.long	.Linfo_string436
	.long	5211
	.byte	3
	.byte	5
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string437
	.long	6705
	.byte	3
	.byte	5
	.byte	2
	.byte	24
	.byte	22
	.long	.Linfo_string438
	.long	6705
	.byte	3
	.byte	5
	.byte	2
	.byte	26
	.byte	22
	.long	.Linfo_string439
	.long	5211
	.byte	3
	.byte	5
	.byte	8
	.byte	32
	.byte	22
	.long	.Linfo_string440
	.long	11162
	.byte	3
	.byte	5
	.byte	8
	.byte	56
	.byte	22
	.long	.Linfo_string441
	.long	11110
	.byte	3
	.byte	5
	.byte	8
	.byte	80
	.byte	0
	.byte	23
	.long	11529
	.byte	25
	.long	3888
	.byte	26
	.long	4698
	.byte	26
	.long	3895
	.byte	26
	.long	11431
	.byte	0
	.byte	3
	.long	.Linfo_string451
	.byte	5
	.byte	8
	.byte	21
	.long	.Linfo_string456
	.byte	12
	.byte	2
	.byte	7
	.byte	1
	.byte	22
	.long	.Linfo_string454
	.long	6255
	.byte	2
	.byte	7
	.byte	4
	.byte	0
	.byte	22
	.long	.Linfo_string455
	.long	57
	.byte	2
	.byte	7
	.byte	4
	.byte	8
	.byte	0
	.byte	21
	.long	.Linfo_string461
	.byte	24
	.byte	2
	.byte	8
	.byte	1
	.byte	22
	.long	.Linfo_string137
	.long	6255
	.byte	2
	.byte	8
	.byte	4
	.byte	0
	.byte	22
	.long	.Linfo_string457
	.long	57
	.byte	2
	.byte	8
	.byte	4
	.byte	8
	.byte	22
	.long	.Linfo_string458
	.long	57
	.byte	2
	.byte	8
	.byte	4
	.byte	12
	.byte	22
	.long	.Linfo_string459
	.long	5938
	.byte	2
	.byte	8
	.byte	4
	.byte	16
	.byte	22
	.long	.Linfo_string460
	.long	5938
	.byte	2
	.byte	8
	.byte	4
	.byte	20
	.byte	0
	.byte	24
	.long	.Linfo_string467
	.byte	24
	.byte	1
	.byte	22
	.long	.Linfo_string51
	.long	11715
	.byte	5
	.byte	1
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string56
	.long	3943
	.byte	5
	.byte	1
	.byte	8
	.byte	8
	.byte	22
	.long	.Linfo_string57
	.long	3943
	.byte	5
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	23
	.long	11720
	.byte	21
	.long	.Linfo_string466
	.byte	48
	.byte	3
	.byte	5
	.byte	1
	.byte	22
	.long	.Linfo_string463
	.long	11769
	.byte	3
	.byte	5
	.byte	1
	.byte	0
	.byte	22
	.long	.Linfo_string464
	.long	11769
	.byte	3
	.byte	5
	.byte	1
	.byte	16
	.byte	22
	.long	.Linfo_string465
	.long	11769
	.byte	3
	.byte	5
	.byte	1
	.byte	32
	.byte	0
	.byte	28
	.long	3936
	.byte	29
	.long	7031
	.byte	0
	.byte	16
	.byte	0
	.byte	23
	.long	7291
	.byte	23
	.long	11792
	.byte	21
	.long	.Linfo_string471
	.byte	88
	.byte	2
	.byte	12
	.byte	1
	.byte	22
	.long	.Linfo_string229
	.long	3895
	.byte	2
	.byte	12
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string282
	.long	4220
	.byte	2
	.byte	12
	.byte	8
	.byte	16
	.byte	22
	.long	.Linfo_string230
	.long	7672
	.byte	2
	.byte	12
	.byte	8
	.byte	64
	.byte	22
	.long	.Linfo_string470
	.long	6573
	.byte	2
	.byte	12
	.byte	8
	.byte	80
	.byte	0
	.byte	23
	.long	11859
	.byte	21
	.long	.Linfo_string229
	.byte	64
	.byte	4
	.byte	13
	.byte	1
	.byte	22
	.long	.Linfo_string474
	.long	3895
	.byte	4
	.byte	14
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string475
	.long	7672
	.byte	4
	.byte	16
	.byte	8
	.byte	16
	.byte	22
	.long	.Linfo_string476
	.long	11947
	.byte	4
	.byte	18
	.byte	8
	.byte	32
	.byte	22
	.long	.Linfo_string481
	.long	6573
	.byte	4
	.byte	19
	.byte	8
	.byte	40
	.byte	22
	.long	.Linfo_string174
	.long	6712
	.byte	4
	.byte	21
	.byte	8
	.byte	48
	.byte	22
	.long	.Linfo_string168
	.long	7566
	.byte	4
	.byte	23
	.byte	8
	.byte	56
	.byte	0
	.byte	23
	.long	11952
	.byte	21
	.long	.Linfo_string480
	.byte	56
	.byte	4
	.byte	49
	.byte	1
	.byte	22
	.long	.Linfo_string477
	.long	11988
	.byte	4
	.byte	50
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string22
	.long	3984
	.byte	4
	.byte	51
	.byte	8
	.byte	48
	.byte	0
	.byte	21
	.long	.Linfo_string477
	.byte	48
	.byte	4
	.byte	28
	.byte	1
	.byte	22
	.long	.Linfo_string474
	.long	3895
	.byte	4
	.byte	29
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string30
	.long	3895
	.byte	4
	.byte	30
	.byte	8
	.byte	16
	.byte	22
	.long	.Linfo_string478
	.long	7770
	.byte	4
	.byte	31
	.byte	8
	.byte	32
	.byte	22
	.long	.Linfo_string479
	.long	6573
	.byte	4
	.byte	32
	.byte	8
	.byte	40
	.byte	0
	.byte	23
	.long	11988
	.byte	23
	.long	11854
	.byte	23
	.long	12065
	.byte	34
	.long	.Linfo_string43
	.byte	8
	.byte	4
	.short	366
	.byte	1
	.byte	35
	.long	.Linfo_string42
	.long	12090
	.byte	4
	.short	366
	.byte	8
	.byte	0
	.byte	0
	.byte	23
	.long	12095
	.byte	31
	.long	3984
	.byte	23
	.long	12105
	.byte	24
	.long	.Linfo_string496
	.byte	16
	.byte	1
	.byte	22
	.long	.Linfo_string495
	.long	7994
	.byte	5
	.byte	83
	.byte	8
	.byte	0
	.byte	0
	.byte	23
	.long	12131
	.byte	24
	.long	.Linfo_string498
	.byte	8
	.byte	1
	.byte	22
	.long	.Linfo_string287
	.long	3984
	.byte	5
	.byte	129
	.byte	8
	.byte	0
	.byte	0
	.byte	0
	.section	.debug_ranges,"",@progbits
.Ldebug_ranges0:
	.quad	.Ltmp834
	.quad	.Ltmp856
	.quad	.Ltmp858
	.quad	.Ltmp860
	.quad	0
	.quad	0
.Ldebug_ranges1:
	.quad	.Ltmp916
	.quad	.Ltmp920
	.quad	.Ltmp923
	.quad	.Ltmp924
	.quad	0
	.quad	0
.Ldebug_ranges2:
	.quad	.Ltmp939
	.quad	.Ltmp941
	.quad	.Ltmp945
	.quad	.Ltmp947
	.quad	0
	.quad	0
.Ldebug_ranges3:
	.quad	.Ltmp1030
	.quad	.Ltmp1035
	.quad	.Ltmp1062
	.quad	.Ltmp1063
	.quad	.Ltmp1070
	.quad	.Ltmp1072
	.quad	0
	.quad	0
.Ldebug_ranges4:
	.quad	.Ltmp1048
	.quad	.Ltmp1049
	.quad	.Ltmp1054
	.quad	.Ltmp1060
	.quad	.Ltmp1063
	.quad	.Ltmp1066
	.quad	0
	.quad	0
.Ldebug_ranges5:
	.quad	.Ltmp1047
	.quad	.Ltmp1060
	.quad	.Ltmp1063
	.quad	.Ltmp1066
	.quad	0
	.quad	0
.Ldebug_ranges6:
	.quad	.Ltmp1106
	.quad	.Ltmp1108
	.quad	.Ltmp1110
	.quad	.Ltmp1111
	.quad	0
	.quad	0
.Ldebug_ranges7:
	.quad	.Lfunc_begin0
	.quad	.Lfunc_end0
	.quad	.Lfunc_begin1
	.quad	.Lfunc_end1
	.quad	.Lfunc_begin2
	.quad	.Lfunc_end2
	.quad	.Lfunc_begin3
	.quad	.Lfunc_end3
	.quad	.Lfunc_begin4
	.quad	.Lfunc_end4
	.quad	.Lfunc_begin5
	.quad	.Lfunc_end5
	.quad	.Lfunc_begin6
	.quad	.Lfunc_end6
	.quad	.Lfunc_begin7
	.quad	.Lfunc_end7
	.quad	.Lfunc_begin8
	.quad	.Lfunc_end8
	.quad	.Lfunc_begin9
	.quad	.Lfunc_end9
	.quad	.Lfunc_begin10
	.quad	.Lfunc_end10
	.quad	.Lfunc_begin11
	.quad	.Lfunc_end11
	.quad	.Lfunc_begin12
	.quad	.Lfunc_end12
	.quad	.Lfunc_begin13
	.quad	.Lfunc_end13
	.quad	.Lfunc_begin14
	.quad	.Lfunc_end14
	.quad	.Lfunc_begin15
	.quad	.Lfunc_end15
	.quad	.Lfunc_begin16
	.quad	.Lfunc_end16
	.quad	.Lfunc_begin17
	.quad	.Lfunc_end17
	.quad	.Lfunc_begin18
	.quad	.Lfunc_end18
	.quad	.Lfunc_begin19
	.quad	.Lfunc_end19
	.quad	.Lfunc_begin20
	.quad	.Lfunc_end20
	.quad	.Lfunc_begin21
	.quad	.Lfunc_end21
	.quad	.Lfunc_begin22
	.quad	.Lfunc_end22
	.quad	.Lfunc_begin23
	.quad	.Lfunc_end23
	.quad	.Lfunc_begin24
	.quad	.Lfunc_end24
	.quad	.Lfunc_begin25
	.quad	.Lfunc_end25
	.quad	.Lfunc_begin26
	.quad	.Lfunc_end26
	.quad	.Lfunc_begin27
	.quad	.Lfunc_end27
	.quad	.Lfunc_begin28
	.quad	.Lfunc_end28
	.quad	.Lfunc_begin29
	.quad	.Lfunc_end29
	.quad	.Lfunc_begin30
	.quad	.Lfunc_end30
	.quad	.Lfunc_begin31
	.quad	.Lfunc_end31
	.quad	.Lfunc_begin32
	.quad	.Lfunc_end32
	.quad	.Lfunc_begin33
	.quad	.Lfunc_end33
	.quad	.Lfunc_begin34
	.quad	.Lfunc_end34
	.quad	.Lfunc_begin35
	.quad	.Lfunc_end35
	.quad	.Lfunc_begin36
	.quad	.Lfunc_end36
	.quad	.Lfunc_begin37
	.quad	.Lfunc_end37
	.quad	.Lfunc_begin38
	.quad	.Lfunc_end38
	.quad	.Lfunc_begin39
	.quad	.Lfunc_end39
	.quad	.Lfunc_begin40
	.quad	.Lfunc_end40
	.quad	.Lfunc_begin41
	.quad	.Lfunc_end41
	.quad	0
	.quad	0
	.section	.debug_macinfo,"",@progbits
	.byte	0
	.section	.debug_pubnames,"",@progbits
	.long	.LpubNames_end0-.LpubNames_begin0
.LpubNames_begin0:
	.short	2
	.long	.Lcu_begin0
	.long	12153
	.long	3748
	.asciz	"daemon.func2"
	.long	3817
	.asciz	"daemon.func3"
	.long	3441
	.asciz	"daemon.command_line_arguments..thunk9"
	.long	3162
	.asciz	"daemon.command_line_arguments..thunk6"
	.long	42
	.asciz	"runtime.writeBarrier"
	.long	3484
	.asciz	"daemon.func4"
	.long	3616
	.asciz	"daemon.command_line_arguments..thunk0"
	.long	183
	.asciz	"daemon.SendInternalError..1command_line_arguments.Session"
	.long	2396
	.asciz	"daemon.rcvShellClientData..1command_line_arguments.Warp"
	.long	64
	.asciz	"daemon.SendError..1command_line_arguments.Session"
	.long	2669
	.asciz	"daemon.updateHost..1command_line_arguments.Warp"
	.long	3859
	.asciz	"daemon.command_line_arguments..import"
	.long	2212
	.asciz	"daemon.rcvHostData..1command_line_arguments.Warp"
	.long	303
	.asciz	"daemon.ToString..1command_line_arguments.Session"
	.long	1276
	.asciz	"daemon.handleShellClient..1command_line_arguments.Srv"
	.long	1715
	.asciz	"daemon.handleHost..1command_line_arguments.Warp"
	.long	1113
	.asciz	"daemon.handleHost..1command_line_arguments.Srv"
	.long	979
	.asciz	"daemon.handle..1command_line_arguments.Srv"
	.long	243
	.asciz	"daemon.TearDown..1command_line_arguments.Session"
	.long	3573
	.asciz	"daemon.command_line_arguments..thunk10"
	.long	3774
	.asciz	"daemon.command_line_arguments..thunk11"
	.long	2908
	.asciz	"daemon.NewSrv"
	.long	728
	.asciz	"daemon.Run..1command_line_arguments.Srv"
	.long	2536
	.asciz	"daemon.updateClientSessions..1command_line_arguments.Warp"
	.long	348
	.asciz	"daemon.NewSession"
	.long	1582
	.asciz	"daemon.State..1command_line_arguments.Warp"
	.long	556
	.asciz	"daemon.command_line_arguments..thunk1"
	.long	634
	.asciz	"daemon.command_line_arguments..thunk2"
	.long	2758
	.asciz	"daemon.User..1command_line_arguments.HostState"
	.long	675
	.asciz	"daemon.command_line_arguments..thunk3"
	.long	1895
	.asciz	"daemon.handleShellClient..1command_line_arguments.Warp"
	.long	3121
	.asciz	"daemon.command_line_arguments..thunk5"
	.long	2833
	.asciz	"daemon.User..1command_line_arguments.UserState"
	.long	3203
	.asciz	"daemon.command_line_arguments..thunk7"
	.long	1395
	.asciz	"daemon.CientSessions..1command_line_arguments.Warp"
	.long	3013
	.asciz	"daemon.command_line_arguments..thunk4"
	.long	3374
	.asciz	"daemon.command_line_arguments..thunk8"
	.long	3683
	.asciz	"daemon.func1"
	.long	0
.LpubNames_end0:
	.section	.debug_pubtypes,"",@progbits
	.long	.LpubTypes_end0-.LpubTypes_begin0
.LpubTypes_begin0:
	.short	2
	.long	.Lcu_begin0
	.long	12153
	.long	6731
	.asciz	"Encoder"
	.long	11792
	.asciz	"HostUpdate"
	.long	11988
	.asciz	"UserState"
	.long	5655
	.asciz	"Session"
	.long	9991
	.asciz	"struct{*ExtKeyUsage,int,int}"
	.long	11557
	.asciz	"Once"
	.long	4752
	.asciz	"bool"
	.long	4769
	.asciz	"uncommonType"
	.long	9380
	.asciz	"PublicKeyAlgorithm"
	.long	6832
	.asciz	"struct{*Writer,int,int}"
	.long	6255
	.asciz	"Mutex"
	.long	6498
	.asciz	"Reader"
	.long	9838
	.asciz	"struct{*Extension,int,int}"
	.long	11288
	.asciz	"ClientSessionCache"
	.long	10151
	.asciz	"struct{**URL,int,int}"
	.long	8035
	.asciz	"struct{*_type,*func(*void)struct{Conn,error},*func(*void)Addr,*func(*void)error}"
	.long	4346
	.asciz	"struct{*_type,*func(*void)error,*func(*void)Addr,*func(*void,struct{*uint8,int,int})struct{int,error},*func(*void)Addr,*func(*void,Time)error,*func(*void,Time)error,*func(*void,Time)error,*func(*void,struct{*uint8,int,int})struct{int,error}}"
	.long	9890
	.asciz	"Extension"
	.long	10575
	.asciz	"struct{*Certificate,error}"
	.long	8111
	.asciz	"struct{Conn,error}"
	.long	8758
	.asciz	"Certificate"
	.long	6705
	.asciz	"uint16"
	.long	10891
	.asciz	"SignatureScheme"
	.long	9392
	.asciz	"Int"
	.long	12131
	.asciz	"struct{*Session}"
	.long	5211
	.asciz	"struct{*uint8,int,int}"
	.long	4305
	.asciz	"Conn"
	.long	5109
	.asciz	"struct{*_type,*func(*void)string,*func(*void)string}"
	.long	5335
	.asciz	"int64"
	.long	4818
	.asciz	"struct{*method,int,int}"
	.long	3895
	.asciz	"string"
	.long	7672
	.asciz	"Size"
	.long	7782
	.asciz	"Srv"
	.long	9482
	.asciz	"Word"
	.long	11952
	.asciz	"HostState"
	.long	7224
	.asciz	".encoding/gob.decoderState"
	.long	11668
	.asciz	"struct{*.crypto/tls.ticketKey,int,int}"
	.long	11397
	.asciz	"struct{*ClientSessionState,bool}"
	.long	7492
	.asciz	"PrivateKey"
	.long	7291
	.asciz	"Context"
	.long	10482
	.asciz	"IPMask"
	.long	3943
	.asciz	"int"
	.long	6717
	.asciz	"__go_channel"
	.long	5002
	.asciz	"struct{*_type,*func(*void)string}"
	.long	9939
	.asciz	"struct{*ObjectIdentifier,int,int}"
	.long	10043
	.asciz	"ExtKeyUsage"
	.long	11110
	.asciz	"struct{*struct{**Certificate,int,int},int,int}"
	.long	8574
	.asciz	"struct{*Certificate,int,int}"
	.long	5068
	.asciz	"Addr"
	.long	7332
	.asciz	"struct{*_type,*func(*void)struct{Time,bool},*func(*void)*__go_channel,*func(*void)error,*func(*void,PrivateKey)PrivateKey}"
	.long	6180
	.asciz	"Logger"
	.long	4476
	.asciz	"_type"
	.long	8701
	.asciz	"struct{*struct{*uint8,int,int},int,int}"
	.long	10446
	.asciz	"IPNet"
	.long	5536
	.asciz	"struct{*.time.zoneTrans,int,int}"
	.long	57
	.asciz	"uint32"
	.long	4269
	.asciz	"SessionType"
	.long	7994
	.asciz	"Listener"
	.long	11219
	.asciz	"CertPool"
	.long	11436
	.asciz	"ClientSessionState"
	.long	11720
	.asciz	".crypto/tls.ticketKey"
	.long	10050
	.asciz	"struct{*IP,int,int}"
	.long	10208
	.asciz	"URL"
	.long	4642
	.asciz	"uintptr"
	.long	10947
	.asciz	"CertificateRequestInfo"
	.long	9373
	.asciz	"SignatureAlgorithm"
	.long	6982
	.asciz	".encoding/gob.encBuffer"
	.long	4870
	.asciz	"method"
	.long	5487
	.asciz	".time.zone"
	.long	6332
	.asciz	"struct{*_type,*func(*void)error,*func(*void,struct{*uint8,int,int})struct{int,error},*func(*void,struct{*uint8,int,int})struct{int,error}}"
	.long	7183
	.asciz	".encoding/gob.decBuffer"
	.long	10832
	.asciz	"CurveID"
	.long	11550
	.asciz	"RenegotiationSupport"
	.long	8155
	.asciz	"Config"
	.long	7056
	.asciz	"Decoder"
	.long	7968
	.asciz	"struct{*__go_descriptor}"
	.long	7942
	.asciz	"struct{*Mutex}"
	.long	10728
	.asciz	"struct{*uint16,int,int}"
	.long	11593
	.asciz	"RWMutex"
	.long	6141
	.asciz	"struct{int,error}"
	.long	10389
	.asciz	"struct{**IPNet,int,int}"
	.long	9489
	.asciz	"Name"
	.long	12105
	.asciz	"struct{Listener}"
	.long	7770
	.asciz	"Mode"
	.long	10780
	.asciz	"struct{*CurveID,int,int}"
	.long	10340
	.asciz	"Userinfo"
	.long	9642
	.asciz	"struct{*string,int,int}"
	.long	5588
	.asciz	".time.zoneTrans"
	.long	6291
	.asciz	"ReadWriteCloser"
	.long	12065
	.asciz	"__go_descriptor"
	.long	11268
	.asciz	"ClientAuthType"
	.long	6578
	.asciz	"runtime.hmap"
	.long	10102
	.asciz	"IP"
	.long	11859
	.asciz	"Warp"
	.long	11329
	.asciz	"struct{*_type,*func(*void,string)struct{*ClientSessionState,bool},*func(*void,string,*ClientSessionState)void}"
	.long	7623
	.asciz	"State"
	.long	11162
	.asciz	"struct{**Certificate,int,int}"
	.long	7571
	.asciz	"struct{**Session,int,int}"
	.long	9741
	.asciz	"AttributeTypeAndValue"
	.long	4961
	.asciz	"error"
	.long	5328
	.asciz	"uint64"
	.long	5938
	.asciz	"int32"
	.long	3888
	.asciz	"void"
	.long	3936
	.asciz	"uint8"
	.long	7862
	.asciz	"SessionHello"
	.long	9689
	.asciz	"struct{*AttributeTypeAndValue,int,int}"
	.long	10839
	.asciz	"struct{*SignatureScheme,int,int}"
	.long	6045
	.asciz	"Writer"
	.long	9831
	.asciz	"KeyUsage"
	.long	7708
	.asciz	"User"
	.long	3950
	.asciz	"struct{*Session,error}"
	.long	7421
	.asciz	"struct{Time,bool}"
	.long	6038
	.asciz	"Duration"
	.long	9428
	.asciz	".math/big.nat"
	.long	6889
	.asciz	".encoding/gob.encoderState"
	.long	6539
	.asciz	"struct{*_type,*func(*void,struct{*uint8,int,int})struct{int,error}}"
	.long	5279
	.asciz	"Time"
	.long	11027
	.asciz	"struct{*Config,error}"
	.long	5347
	.asciz	"Location"
	.long	9777
	.asciz	"ObjectIdentifier"
	.long	5435
	.asciz	"struct{*.time.zone,int,int}"
	.long	10614
	.asciz	"ClientHelloInfo"
	.long	0
.LpubTypes_end0:

	.section	".note.GNU-split-stack","",@progbits
	.section	".note.GNU-stack","",@progbits
	.section	.debug_line,"",@progbits
.Lline_table_start0:
