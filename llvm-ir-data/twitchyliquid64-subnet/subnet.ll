; ModuleID = 'gomodule'
source_filename = "gomodule"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm "\09.section \22.go_export\22,\22e\22,@progbits"
module asm "\09.ascii \22v2;\5Cn\22"
module asm "\09.ascii \22package \22"
module asm "\09.ascii \22subnet\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22pkgpath \22"
module asm "\09.ascii \22command-line-arguments\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22import \22"
module asm "\09.ascii \22bufio\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22bufio\22"
module asm "\09.ascii \22 \5C\22\22"
module asm "\09.ascii \22bufio\22"
module asm "\09.ascii \22\5C\22;\5Cn\22"
module asm "\09.ascii \22import \22"
module asm "\09.ascii \22bytes\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22bytes\22"
module asm "\09.ascii \22 \5C\22\22"
module asm "\09.ascii \22bytes\22"
module asm "\09.ascii \22\5C\22;\5Cn\22"
module asm "\09.ascii \22import \22"
module asm "\09.ascii \22tls\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22crypto/tls\22"
module asm "\09.ascii \22 \5C\22\22"
module asm "\09.ascii \22crypto/tls\22"
module asm "\09.ascii \22\5C\22;\5Cn\22"
module asm "\09.ascii \22import \22"
module asm "\09.ascii \22gob\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22encoding/gob\22"
module asm "\09.ascii \22 \5C\22\22"
module asm "\09.ascii \22encoding/gob\22"
module asm "\09.ascii \22\5C\22;\5Cn\22"
module asm "\09.ascii \22import \22"
module asm "\09.ascii \22errors\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22errors\22"
module asm "\09.ascii \22 \5C\22\22"
module asm "\09.ascii \22errors\22"
module asm "\09.ascii \22\5C\22;\5Cn\22"
module asm "\09.ascii \22import \22"
module asm "\09.ascii \22fmt\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22fmt\22"
module asm "\09.ascii \22 \5C\22\22"
module asm "\09.ascii \22fmt\22"
module asm "\09.ascii \22\5C\22;\5Cn\22"
module asm "\09.ascii \22import \22"
module asm "\09.ascii \22water\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22github.com/twitchyliquid64/subnet/vendor/github.com/songgao/water\22"
module asm "\09.ascii \22 \5C\22\22"
module asm "\09.ascii \22github.com/songgao/water\22"
module asm "\09.ascii \22\5C\22;\5Cn\22"
module asm "\09.ascii \22import \22"
module asm "\09.ascii \22waterutil\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22github.com/twitchyliquid64/subnet/vendor/github.com/songgao/water/waterutil\22"
module asm "\09.ascii \22 \5C\22\22"
module asm "\09.ascii \22github.com/songgao/water/waterutil\22"
module asm "\09.ascii \22\5C\22;\5Cn\22"
module asm "\09.ascii \22import \22"
module asm "\09.ascii \22conn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22github.com/twitchyliquid64/subnet/subnet/conn\22"
module asm "\09.ascii \22 \5C\22\22"
module asm "\09.ascii \22github.com/twitchyliquid64/subnet/subnet/conn\22"
module asm "\09.ascii \22\5C\22;\5Cn\22"
module asm "\09.ascii \22import \22"
module asm "\09.ascii \22log\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22log\22"
module asm "\09.ascii \22 \5C\22\22"
module asm "\09.ascii \22log\22"
module asm "\09.ascii \22\5C\22;\5Cn\22"
module asm "\09.ascii \22import \22"
module asm "\09.ascii \22rand\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22math/rand\22"
module asm "\09.ascii \22 \5C\22\22"
module asm "\09.ascii \22math/rand\22"
module asm "\09.ascii \22\5C\22;\5Cn\22"
module asm "\09.ascii \22import \22"
module asm "\09.ascii \22net\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22net\22"
module asm "\09.ascii \22 \5C\22\22"
module asm "\09.ascii \22net\22"
module asm "\09.ascii \22\5C\22;\5Cn\22"
module asm "\09.ascii \22import \22"
module asm "\09.ascii \22os\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22os\22"
module asm "\09.ascii \22 \5C\22\22"
module asm "\09.ascii \22os\22"
module asm "\09.ascii \22\5C\22;\5Cn\22"
module asm "\09.ascii \22import \22"
module asm "\09.ascii \22exec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22os/exec\22"
module asm "\09.ascii \22 \5C\22\22"
module asm "\09.ascii \22os/exec\22"
module asm "\09.ascii \22\5C\22;\5Cn\22"
module asm "\09.ascii \22import \22"
module asm "\09.ascii \22runtime\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22runtime\22"
module asm "\09.ascii \22 \5C\22\22"
module asm "\09.ascii \22runtime\22"
module asm "\09.ascii \22\5C\22;\5Cn\22"
module asm "\09.ascii \22import \22"
module asm "\09.ascii \22strconv\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22strconv\22"
module asm "\09.ascii \22 \5C\22\22"
module asm "\09.ascii \22strconv\22"
module asm "\09.ascii \22\5C\22;\5Cn\22"
module asm "\09.ascii \22import \22"
module asm "\09.ascii \22strings\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22strings\22"
module asm "\09.ascii \22 \5C\22\22"
module asm "\09.ascii \22strings\22"
module asm "\09.ascii \22\5C\22;\5Cn\22"
module asm "\09.ascii \22import \22"
module asm "\09.ascii \22sync\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22sync\22"
module asm "\09.ascii \22 \5C\22\22"
module asm "\09.ascii \22sync\22"
module asm "\09.ascii \22\5C\22;\5Cn\22"
module asm "\09.ascii \22import \22"
module asm "\09.ascii \22time\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22time\22"
module asm "\09.ascii \22 \5C\22\22"
module asm "\09.ascii \22time\22"
module asm "\09.ascii \22\5C\22;\5Cn\22"
module asm "\09.ascii \22init\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22bufio\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22bufio..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22bytes\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22bytes..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22context\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22context..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22crypto\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22crypto..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22cipher\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22crypto_cipher..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22des\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22crypto_des..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22dsa\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22crypto_dsa..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22ecdsa\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22crypto_ecdsa..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22elliptic\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22crypto_elliptic..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22md5\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22crypto_md5..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22rand\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22crypto_rand..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22rsa\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22crypto_rsa..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22sha1\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22crypto_sha1..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22sha256\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22crypto_sha256..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22sha512\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22crypto_sha512..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22tls\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22crypto_tls..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22x509\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22crypto_x509..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22pkix\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22crypto_x509_pkix..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22asn1\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22encoding_asn1..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22base64\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22encoding_base64..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22binary\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22encoding_binary..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22gob\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22encoding_gob..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22hex\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22encoding_hex..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22json\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22encoding_json..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22pem\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22encoding_pem..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22fmt\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22fmt..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22cert\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22github_com_twitchyliquid64_subnet_subnet_cert..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22poll\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22internal_poll..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22testlog\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22internal_testlog..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22io\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22io..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22ioutil\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22io_ioutil..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22log\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22log..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22big\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22math_big..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22rand\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22math_rand..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22net\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22net..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22os\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22os..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22exec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22os_exec..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22filepath\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22path_filepath..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22reflect\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22reflect..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22runtime\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22runtime..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22sys\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22runtime_internal_sys..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22strconv\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22strconv..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22sync\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22sync..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22syscall\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22syscall..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22time\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22time..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22unicode\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22unicode..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22chacha20poly1305\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22vendor_golang_org_x_crypto_chacha20poly1305..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22cryptobyte\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22vendor_golang_org_x_crypto_cryptobyte..import\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22init_graph\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2240\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2245\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2240\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2245\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2240\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2241\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2243\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2244\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2245\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2240\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2241\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2240\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2240\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2241\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2245\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2240\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2241\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2243\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2244\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2245\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2214\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2240\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2241\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2243\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2244\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2245\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2240\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2241\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2243\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2244\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2245\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2240\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2241\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2240\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2241\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2243\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2244\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2245\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2240\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2241\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2243\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2244\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2245\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2212\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2212\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2212\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2212\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2240\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2212\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2241\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2212\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2213\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2213\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2213\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2213\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2240\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2213\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2241\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2213\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2214\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2214\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2214\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2214\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2240\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2214\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2241\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2214\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2212\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2213\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2214\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2237\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2240\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2241\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2243\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2244\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2245\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2246\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2247\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2212\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2213\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2214\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2237\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2240\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2241\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2243\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2244\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2245\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2247\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2240\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2241\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2243\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2244\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2245\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2240\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2241\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2243\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2244\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2245\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2240\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2241\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2245\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2240\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2241\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2245\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2240\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2241\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2243\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2244\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2245\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2240\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2241\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2243\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2244\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2245\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2240\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2241\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2243\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2244\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2245\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2240\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2241\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2245\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2240\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2241\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2243\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2244\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2245\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2212\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2213\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2214\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2237\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2240\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2241\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2243\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2244\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2245\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2247\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2240\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2243\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2244\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2240\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2237\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2240\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2241\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2243\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2244\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2245\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2231\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2231\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2231\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2231\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2231\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2231\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2231\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2231\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2240\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2231\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2241\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2231\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2231\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2243\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2231\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2244\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2231\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2245\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2240\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2241\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2243\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2244\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2245\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2240\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2240\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2241\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2243\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2244\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2245\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2240\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2243\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2244\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2237\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2240\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2241\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2243\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2244\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2245\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2237\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2237\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2237\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2237\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2237\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2237\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2237\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2240\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2237\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2241\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2237\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2237\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2243\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2237\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2244\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2237\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2245\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2240\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2241\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2245\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2240\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2241\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2241\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2240\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2240\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2243\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2243\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2240\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2243\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2244\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2244\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2240\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2244\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2244\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2243\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2246\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2246\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2246\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2246\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2246\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2246\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2240\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2246\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2241\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2246\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2246\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2245\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2247\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2247\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2247\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2247\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2247\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2247\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2247\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2247\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2247\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2247\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2247\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2247\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2247\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2240\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2247\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2241\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2247\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2247\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2243\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2247\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2244\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2247\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2245\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22AddRoute\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22addr\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 1 \22"
module asm "\09.ascii \22\5C\22net.IP\5C\22 \22"
module asm "\09.ascii \22<type 2 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22ip\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 1>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.net.matchAddrFamily\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 1>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22ip\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 1>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22DefaultMask\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 3 \22"
module asm "\09.ascii \22\5C\22net.IPMask\5C\22 \22"
module asm "\09.ascii \22<type 4 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22m\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 3>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22String\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22m\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 3>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Size\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22ones\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22bits\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22ip\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 1>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22IsLinkLocalMulticast\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22ip\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 1>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22IsUnspecified\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22ip\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 1>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22MarshalText\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 5 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22ip\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 1>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22IsLinkLocalUnicast\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22ip\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 1>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22To16\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 1>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22ip\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 1>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22IsMulticast\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22ip\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 1>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Mask\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22mask\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 3>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 1>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22ip\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 1>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22To4\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 1>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22ip\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 1>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22IsGlobalUnicast\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22ip\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 1>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Equal\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 1>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22ip\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 1>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22String\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22ip\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 1>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22IsLoopback\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22ip\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 6 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 1>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22UnmarshalText\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22text\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 7 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22ip\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 1>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22IsInterfaceLocalMulticast\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22viaAddr\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 1>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22iName\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22debug\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22type \22"
module asm "\09.ascii \22<type 8 \22"
module asm "\09.ascii \22\5C\22Client\5C\22 \22"
module asm "\09.ascii \22<type 9 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.command-line-arguments.debugMessages\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.newGateway\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.serverAddr\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.port\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.wg\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 10 \22"
module asm "\09.ascii \22\5C\22sync.WaitGroup\5C\22 \22"
module asm "\09.ascii \22<type 11 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.sync.noCopy\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 12 \22"
module asm "\09.ascii \22\5C\22.sync.noCopy\5C\22 \22"
module asm "\09.ascii \22<type 13 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 14 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 12>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Lock\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.sync.state1\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 15 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \2212\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.sync.sema\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22wg\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 16 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 10>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Wait\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22wg\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 16>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Done\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22wg\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 16>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Add\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22delta\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22wg\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 16>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.sync.state\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 17 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type -8>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.serverIP\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 1>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.localAddr\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 1>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.additionalAddrs\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 18 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 1>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.localNetMask\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 20 \22"
module asm "\09.ascii \22\5C\22net.IPNet\5C\22 \22"
module asm "\09.ascii \22<type 21 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22IP\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 1>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Mask\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 3>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 22 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Network\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22String\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Contains\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22ip\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 1>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.isShuttingDown\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.packetsIn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 23 \22"
module asm "\09.ascii \22chan \22"
module asm "\09.ascii \22<type 24 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 25 \22"
module asm "\09.ascii \22\5C\22IPPacket\5C\22 \22"
module asm "\09.ascii \22<type 26 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22Raw\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 27 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Dest\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 1>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Protocol\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 28 \22"
module asm "\09.ascii \22\5C\22github.com/twitchyliquid64/subnet/vendor/github.com/songgao/water/waterutil.IPProtocol\5C\22 \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.packetsDevOut\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 29 \22"
module asm "\09.ascii \22chan \22"
module asm "\09.ascii \22<type 30 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 25>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.intf\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 31 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 32 \22"
module asm "\09.ascii \22\5C\22github.com/twitchyliquid64/subnet/vendor/github.com/songgao/water.Interface\5C\22 \22"
module asm "\09.ascii \22<type 33 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.github.com/twitchyliquid64/subnet/vendor/github.com/songgao/water.isTAP\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22? \22"
module asm "\09.ascii \22<type 34 \22"
module asm "\09.ascii \22\5C\22io.ReadWriteCloser\5C\22 \22"
module asm "\09.ascii \22\5C\22\22"
module asm "\09.ascii \22io\22"
module asm "\09.ascii \22\5C\22 \22"
module asm "\09.ascii \22<type 35 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22? \22"
module asm "\09.ascii \22<type 36 \22"
module asm "\09.ascii \22\5C\22io.Reader\5C\22 \22"
module asm "\09.ascii \22<type 37 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22Read\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22p\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 38 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22? \22"
module asm "\09.ascii \22<type 39 \22"
module asm "\09.ascii \22\5C\22io.Writer\5C\22 \22"
module asm "\09.ascii \22<type 40 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22Write\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22p\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 41 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22? \22"
module asm "\09.ascii \22<type 42 \22"
module asm "\09.ascii \22\5C\22io.Closer\5C\22 \22"
module asm "\09.ascii \22<type 43 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22Close\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.github.com/twitchyliquid64/subnet/vendor/github.com/songgao/water.name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22ifce\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x22>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 44 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 32>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Name\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22ifce\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 44>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22IsTAP\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22ifce\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 44>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22IsTUN\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.tlsConf\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 45 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 46 \22"
module asm "\09.ascii \22\5C\22crypto/tls.Config\5C\22 \22"
module asm "\09.ascii \22<type 47 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22Rand\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 36>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Time\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 48 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 49 \22"
module asm "\09.ascii \22\5C\22time.Time\5C\22 \22"
module asm "\09.ascii \22<type 50 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.time.wall\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -8>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.time.ext\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.time.loc\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 51 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 52 \22"
module asm "\09.ascii \22\5C\22time.Location\5C\22 \22"
module asm "\09.ascii \22<type 53 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.time.name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.time.zone\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 54 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 55 \22"
module asm "\09.ascii \22\5C\22.time.zone\5C\22 \22"
module asm "\09.ascii \22<type 56 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.time.name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.time.offset\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.time.isDST\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.time.tx\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 57 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 58 \22"
module asm "\09.ascii \22\5C\22.time.zoneTrans\5C\22 \22"
module asm "\09.ascii \22<type 59 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.time.when\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.time.index\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -5>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.time.isstd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.time.isutc\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.time.cacheStart\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.time.cacheEnd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.time.cacheZone\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 60 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 55>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22l\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 61 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 52>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.time.firstZoneUsed\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22l\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 61>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.time.lookupName\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22unix\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22offset\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22ok\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22l\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x32>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 61>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.time.lookup\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22sec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22offset\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22isDST\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22start\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22end\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22l\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 61>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.time.get\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 61>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22l\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 61>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.time.lookupFirstZone\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22l\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x22>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 61>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22String\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 49>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22YearDay\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 49>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22UnixNano\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 49>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22MarshalBinary\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 62 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 49>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Nanosecond\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 49>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Equal\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22u\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 49>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 49>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Minute\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 63 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 49>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22GobDecode\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22data\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 64 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x32>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 49>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.time.locabs\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22offset\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22abs\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -8>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 63>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.time.stripMono\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 49>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.time.abs\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -8>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x32>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 49>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Zone\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22offset\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 49>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22In\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22loc\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 51>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 49>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 63>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.time.setMono\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22m\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 63>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22UnmarshalText\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22data\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 65 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 49>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Weekday\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 66 \22"
module asm "\09.ascii \22\5C\22time.Weekday\5C\22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22d\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 66>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22String\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 49>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Location\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 51>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 63>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22UnmarshalJSON\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22data\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 67 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 63>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.time.sec\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 49>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Sub\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22u\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 49>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 68 \22"
module asm "\09.ascii \22\5C\22time.Duration\5C\22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22d\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 68>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22String\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22d\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 68>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Nanoseconds\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22d\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 68>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Minutes\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -10>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22d\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 68>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Round\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22m\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 68>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 68>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22d\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 68>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Seconds\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -10>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22d\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 68>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Hours\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -10>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22d\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 68>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Truncate\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22m\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 68>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 68>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 49>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Day\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 49>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Add\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22d\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 68>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 49>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 63>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22UnmarshalBinary\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22data\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 69 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 49>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Local\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 49>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 49>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Unix\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 49>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22After\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22u\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 49>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 63>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.time.addSec\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22d\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 63>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.time.setLoc\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22loc\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 51>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 49>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22GobEncode\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 70 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 49>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22String\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 49>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Before\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22u\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 49>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 63>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.time.unixSec\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 49>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Round\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22d\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 68>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 49>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 49>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Date\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22year\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22month\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 71 \22"
module asm "\09.ascii \22\5C\22time.Month\5C\22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22m\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 71>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22String\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22day\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 49>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22MarshalJSON\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 72 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 49>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22MarshalText\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 73 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 49>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22IsZero\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 49>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Format\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22layout\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 49>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Truncate\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22d\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 68>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 49>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 49>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Year\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 49>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22UTC\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 49>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 49>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.time.date\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22full\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22year\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22month\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 71>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22day\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22yday\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 49>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22ISOWeek\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22year\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22week\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 49>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22AppendFormat\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 74 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22layout\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 75 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 63>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.time.nsec\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -3>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 49>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22AddDate\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22years\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22months\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22days\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 49>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 49>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Month\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 71>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 49>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Second\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 63>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.time.mono\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 49>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Clock\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22hour\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22min\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22sec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 49>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Hour\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Certificates\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 76 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 77 \22"
module asm "\09.ascii \22\5C\22crypto/tls.Certificate\5C\22 \22"
module asm "\09.ascii \22<type 78 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22Certificate\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 79 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 80 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22PrivateKey\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 81 \22"
module asm "\09.ascii \22\5C\22crypto.PrivateKey\5C\22 \22"
module asm "\09.ascii \22\5C\22\22"
module asm "\09.ascii \22crypto\22"
module asm "\09.ascii \22\5C\22 \22"
module asm "\09.ascii \22<type 82 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22OCSPStaple\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 83 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22SignedCertificateTimestamps\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 84 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 85 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Leaf\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 86 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 87 \22"
module asm "\09.ascii \22\5C\22crypto/x509.Certificate\5C\22 \22"
module asm "\09.ascii \22\5C\22\22"
module asm "\09.ascii \22x509\22"
module asm "\09.ascii \22\5C\22 \22"
module asm "\09.ascii \22<type 88 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22Raw\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 89 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22RawTBSCertificate\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 90 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22RawSubjectPublicKeyInfo\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 91 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22RawSubject\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 92 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22RawIssuer\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 93 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Signature\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 94 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22SignatureAlgorithm\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 95 \22"
module asm "\09.ascii \22\5C\22crypto/x509.SignatureAlgorithm\5C\22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22algo\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 95>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.crypto/x509.isRSAPSS\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22algo\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 95>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22String\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22PublicKeyAlgorithm\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 96 \22"
module asm "\09.ascii \22\5C\22crypto/x509.PublicKeyAlgorithm\5C\22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22algo\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 96>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22String\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22PublicKey\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 97 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Version\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22SerialNumber\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 98 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 99 \22"
module asm "\09.ascii \22\5C\22math/big.Int\5C\22 \22"
module asm "\09.ascii \22\5C\22\22"
module asm "\09.ascii \22big\22"
module asm "\09.ascii \22\5C\22 \22"
module asm "\09.ascii \22<type 100 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.math/big.neg\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.math/big.abs\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101 \22"
module asm "\09.ascii \22\5C\22.math/big.nat\5C\22 \22"
module asm "\09.ascii \22<type 102 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 103 \22"
module asm "\09.ascii \22\5C\22math/big.Word\5C\22 \22"
module asm "\09.ascii \22<type -12>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.math/big.probablyPrimeLucas\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22z\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.math/big.expNNMontgomery\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22y\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22m\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22z\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.math/big.norm\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.math/big.itoa\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22neg\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22base\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 104 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.math/big.bitLen\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22q\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.math/big.convertWords\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 105 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 103>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22ndigits\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22bb\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 103>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22table\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 106 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 107 \22"
module asm "\09.ascii \22\5C\22.math/big.divisor\5C\22 \22"
module asm "\09.ascii \22<type 108 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.math/big.bbb\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.math/big.nbits\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.math/big.ndigits\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22z\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.math/big.scan\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22r\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 109 \22"
module asm "\09.ascii \22\5C\22io.ByteScanner\5C\22 \22"
module asm "\09.ascii \22<type 110 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22? \22"
module asm "\09.ascii \22<type 111 \22"
module asm "\09.ascii \22\5C\22io.ByteReader\5C\22 \22"
module asm "\09.ascii \22<type 112 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22ReadByte\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22UnreadByte\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22base\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22fracOk\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22res\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22count\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22z\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.math/big.div\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22z2\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x82>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22u\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22q\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22r\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22z\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.math/big.bytes\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22buf\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 113 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22i\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.math/big.sticky\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22i\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -12>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -12>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22z\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.math/big.expNNWindowed\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22y\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22m\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22z\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.math/big.make\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22z\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.math/big.divLarge\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22u\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x82>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22uIn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22q\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22r\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.math/big.trailingZeroBits\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -12>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22z\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.math/big.divW\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22y\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 103>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22q\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22r\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 103>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.math/big.modW\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22d\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 103>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22r\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 103>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22z\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.math/big.setBit\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22i\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -12>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -12>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22z\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.math/big.shl\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -12>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22z\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.math/big.mul\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22y\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22z\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.math/big.random\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22rand\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 114 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 115 \22"
module asm "\09.ascii \22\5C\22math/rand.Rand\5C\22 \22"
module asm "\09.ascii \22<type 116 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.math/rand.src\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 117 \22"
module asm "\09.ascii \22\5C\22math/rand.Source\5C\22 \22"
module asm "\09.ascii \22<type 118 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22Int63\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Seed\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22seed\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.math/rand.s64\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 119 \22"
module asm "\09.ascii \22\5C\22math/rand.Source64\5C\22 \22"
module asm "\09.ascii \22<type 120 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22? \22"
module asm "\09.ascii \22<type 117>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Uint64\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -8>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.math/rand.readVal\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.math/rand.readPos\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -1>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22r\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 121 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 115>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Uint64\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -8>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22r\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 121>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Perm\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 122 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22r\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 121>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22ExpFloat64\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -10>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22r\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 121>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Shuffle\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22swap\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 123 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22i\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22j\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22r\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 121>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Int31n\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -3>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -3>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22r\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 121>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Read\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22p\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 124 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22r\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 121>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Seed\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22seed\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22r\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 121>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Uint32\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22r\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 121>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Int63\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22r\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 121>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Float64\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -10>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22r\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 121>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Intn\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22r\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 121>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Int\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22r\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 121>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Float32\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -9>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22r\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 121>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.math/rand.int31n\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -3>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -3>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22r\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 121>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Int63n\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22r\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 121>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22NormFloat64\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -10>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22r\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 121>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Int31\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -3>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22limit\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22z\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.math/big.mulRange\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22a\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -8>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -8>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22z\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.math/big.expNN\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22y\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22m\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.math/big.cmp\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22y\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22r\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22z\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.math/big.expWW\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 103>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22y\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 103>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.math/big.utoa\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22base\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 125 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22z\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.math/big.clear\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22z\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.math/big.setBytes\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22buf\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 126 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22z\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.math/big.setUint64\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -8>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22z\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.math/big.sub\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22y\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22z\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.math/big.shr\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -12>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22z\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.math/big.add\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22y\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22z\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.math/big.sqr\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22z\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.math/big.set\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22z\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.math/big.and\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22y\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22z\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.math/big.mulAddWW\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22y\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 103>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22r\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 103>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.math/big.bit\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22i\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -12>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -12>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22z\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.math/big.or\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22y\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22z\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.math/big.sqrt\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22z\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.math/big.andNot\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22y\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22z\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.math/big.xor\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22y\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22z\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.math/big.montgomery\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22y\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22m\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22k\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 103>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.math/big.probablyPrimeMillerRabin\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22reps\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22force2\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22z\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.math/big.setWord\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 103>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22z\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 99>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22UnmarshalJSON\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22text\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 128 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Int64\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22z\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22SetBytes\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22buf\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 129 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22z\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Neg\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Bit\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22i\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -12>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22z\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22ModSqrt\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22p\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22z\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Mod\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22y\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22z\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Abs\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22GobEncode\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 130 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22z\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22GobDecode\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22buf\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 131 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22MarshalJSON\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 132 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Text\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22base\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22ProbablyPrime\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22z\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Div\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22y\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Format\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 133 \22"
module asm "\09.ascii \22\5C\22fmt.State\5C\22 \22"
module asm "\09.ascii \22<type 134 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22Write\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 135 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Width\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22wid\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22ok\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Precision\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22prec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22ok\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Flag\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22c\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22ch\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -21>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22String\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22IsUint64\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22z\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Scan\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 136 \22"
module asm "\09.ascii \22\5C\22fmt.ScanState\5C\22 \22"
module asm "\09.ascii \22<type 137 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22ReadRune\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22r\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -21>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22size\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22UnreadRune\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22SkipSpace\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Token\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22skipSpace\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 138 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -21>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22token\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 139 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Width\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22wid\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22ok\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Read\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22buf\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 140 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22ch\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -21>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22z\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Rand\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22rnd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 114>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22IsInt64\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22z\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Set\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Append\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22buf\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 141 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22base\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 142 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22z\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Mul\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22y\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22z\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22ModInverse\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22g\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22z\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22DivMod\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22y\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22m\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x8a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22z\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Rsh\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -12>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22BitLen\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22z\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Rem\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22y\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22z\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.math/big.setFromScanner\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22r\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 109>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22base\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22z\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.math/big.scan\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22r\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 109>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22base\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22z\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Sqrt\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22z\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22MulRange\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22a\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Uint64\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -8>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Cmp\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22y\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22r\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22z\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22SetInt64\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22z\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.math/big.modSqrt3Mod4Prime\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22p\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22z\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Sub\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22y\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22z\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Add\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22y\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22z\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22SetBits\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22abs\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 143 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 103>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22z\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22GCD\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22y\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22a\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22z\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Xor\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22y\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22z\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Quo\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22y\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x22>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Bits\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 144 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 103>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22z\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.math/big.modSqrtTonelliShanks\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22p\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22z\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Binomial\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22k\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22z\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22AndNot\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22y\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Sign\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22z\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22QuoRem\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22y\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22r\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x8a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22z\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Exp\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22y\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22m\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22z\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Or\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22y\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22z\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22SetString\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22base\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22z\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22SetUint64\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -8>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22z\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22SetBit\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22i\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -12>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Bytes\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 145 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22z\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Lsh\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -12>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22MarshalText\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22text\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 146 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22z\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22And\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22y\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22z\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.math/big.lehmerGCD\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22a\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22CmpAbs\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22y\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22z\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Not\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22z\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22UnmarshalText\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22text\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 147 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Issuer\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 148 \22"
module asm "\09.ascii \22\5C\22crypto/x509/pkix.Name\5C\22 \22"
module asm "\09.ascii \22\5C\22\22"
module asm "\09.ascii \22pkix\22"
module asm "\09.ascii \22\5C\22 \22"
module asm "\09.ascii \22<type 149 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22Country\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 150 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Organization\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 150>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22OrganizationalUnit\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 150>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Locality\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Province\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22StreetAddress\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 152 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22PostalCode\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 152>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22SerialNumber\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22CommonName\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Names\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 153 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 154 \22"
module asm "\09.ascii \22\5C\22crypto/x509/pkix.AttributeTypeAndValue\5C\22 \22"
module asm "\09.ascii \22<type 155 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22Type\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 156 \22"
module asm "\09.ascii \22\5C\22encoding/asn1.ObjectIdentifier\5C\22 \22"
module asm "\09.ascii \22\5C\22\22"
module asm "\09.ascii \22asn1\22"
module asm "\09.ascii \22\5C\22 \22"
module asm "\09.ascii \22<type 157 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22oi\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 156>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22String\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22oi\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 156>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Equal\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22other\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 156>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Value\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 158 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22ExtraNames\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 159 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 154>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 148>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22ToRDNSequence\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22ret\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 160 \22"
module asm "\09.ascii \22\5C\22crypto/x509/pkix.RDNSequence\5C\22 \22"
module asm "\09.ascii \22<type 161 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 162 \22"
module asm "\09.ascii \22\5C\22crypto/x509/pkix.RelativeDistinguishedNameSET\5C\22 \22"
module asm "\09.ascii \22<type 163 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 154>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22r\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 160>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22String\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 148>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.crypto/x509/pkix.appendRDNs\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22in\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 160>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22values\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 164 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22oid\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 156>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 160>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 148>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22String\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 165 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 148>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22FillFromRDNSequence\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22rdns\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 166 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 160>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Subject\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 148>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22NotBefore\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 49>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22NotAfter\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 49>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22KeyUsage\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 167 \22"
module asm "\09.ascii \22\5C\22crypto/x509.KeyUsage\5C\22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Extensions\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 168 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 169 \22"
module asm "\09.ascii \22\5C\22crypto/x509/pkix.Extension\5C\22 \22"
module asm "\09.ascii \22<type 170 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22Id\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 156>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Critical\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22\5C\22asn1:\5C\5C\5C\22optional\5C\5C\5C\22\5C\22\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Value\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 171 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22ExtraExtensions\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 172 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 169>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22UnhandledCriticalExtensions\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 173 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 156>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22ExtKeyUsage\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 174 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 175 \22"
module asm "\09.ascii \22\5C\22crypto/x509.ExtKeyUsage\5C\22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22UnknownExtKeyUsage\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 176 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 156>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22BasicConstraintsValid\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22IsCA\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22MaxPathLen\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22MaxPathLenZero\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22SubjectKeyId\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 177 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22AuthorityKeyId\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 178 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22OCSPServer\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 179 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22IssuingCertificateURL\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 180 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22DNSNames\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 181 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22EmailAddresses\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 182 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22IPAddresses\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 183 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 1>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22URIs\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 184 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 185 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 186 \22"
module asm "\09.ascii \22\5C\22net/url.URL\5C\22 \22"
module asm "\09.ascii \22\5C\22\22"
module asm "\09.ascii \22url\22"
module asm "\09.ascii \22\5C\22 \22"
module asm "\09.ascii \22<type 187 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22Scheme\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Opaque\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22User\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 188 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 189 \22"
module asm "\09.ascii \22\5C\22net/url.Userinfo\5C\22 \22"
module asm "\09.ascii \22<type 190 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.net/url.username\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.net/url.password\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.net/url.passwordSet\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22u\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x22>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 191 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 189>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22String\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22u\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x22>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 191>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Password\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22u\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x22>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 191>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Username\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Host\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Path\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22RawPath\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22ForceQuery\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22RawQuery\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Fragment\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22u\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x22>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 192 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 186>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22RequestURI\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22u\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x22>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 192>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22EscapedPath\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22u\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 192>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22String\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22u\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 192>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22IsAbs\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22u\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0xa>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 192>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22ResolveReference\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22ref\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0xa>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 192>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 192>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22u\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 192>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Hostname\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22u\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 192>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Port\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22u\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 192>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22UnmarshalBinary\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22text\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 193 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22u\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 192>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.net/url.setPath\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22p\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22u\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 192>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Parse\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22ref\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 192>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22u\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 192>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22MarshalBinary\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22text\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 194 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22u\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 192>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Query\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 195 \22"
module asm "\09.ascii \22\5C\22net/url.Values\5C\22 \22"
module asm "\09.ascii \22<type 196 \22"
module asm "\09.ascii \22map [\22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 197 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 195>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Add\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22key\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22value\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 195>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Del\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22key\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 195>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Encode\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 195>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Get\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22key\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 195>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Set\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22key\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22value\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22PermittedDNSDomainsCritical\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22PermittedDNSDomains\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 198 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22ExcludedDNSDomains\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 199 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22PermittedIPRanges\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 200 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22ExcludedIPRanges\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 201 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22PermittedEmailAddresses\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 202 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22ExcludedEmailAddresses\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 203 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22PermittedURIDomains\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 204 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22ExcludedURIDomains\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 205 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22CRLDistributionPoints\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 206 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22PolicyIdentifiers\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 207 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 156>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22c\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 208 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 87>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22CheckSignatureFrom\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22parent\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 208>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22c\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 208>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22CheckSignature\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22algo\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 95>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22signed\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 209 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22signature\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 209>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22c\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 208>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Equal\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22other\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 208>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22c\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 208>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22VerifyHostname\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22h\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22c\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 208>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.crypto/x509.isValid\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22certType\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22currentChain\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 210 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 208>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22opts\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 211 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 212 \22"
module asm "\09.ascii \22\5C\22crypto/x509.VerifyOptions\5C\22 \22"
module asm "\09.ascii \22<type 213 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22DNSName\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Intermediates\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 214 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 215 \22"
module asm "\09.ascii \22\5C\22crypto/x509.CertPool\5C\22 \22"
module asm "\09.ascii \22<type 216 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.crypto/x509.bySubjectKeyId\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 217 \22"
module asm "\09.ascii \22map [\22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 218 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.crypto/x509.byName\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219 \22"
module asm "\09.ascii \22map [\22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 220 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.crypto/x509.certs\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 221 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 208>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 222 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 215>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22AddCert\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22cert\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 208>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x18a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 222>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.crypto/x509.findVerifiedParents\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22cert\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 208>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22parents\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 223 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22errCert\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 208>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 222>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Subjects\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 224 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 225 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 222>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.crypto/x509.contains\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22cert\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 208>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 222>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22AppendCertsFromPEM\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22pemCerts\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 226 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22ok\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Roots\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 214>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22CurrentTime\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 49>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22KeyUsages\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 227 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 175>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22MaxConstraintComparisions\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22c\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x32>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 208>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.crypto/x509.getSANExtension\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 228 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22c\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 208>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.crypto/x509.hasSANExtension\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22c\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 208>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22CreateCRL\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22rand\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 36>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22priv\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 229 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22revokedCerts\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 230 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 231 \22"
module asm "\09.ascii \22\5C\22crypto/x509/pkix.RevokedCertificate\5C\22 \22"
module asm "\09.ascii \22<type 232 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22SerialNumber\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 98>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22RevocationTime\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 49>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Extensions\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 233 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 169>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22\5C\22asn1:\5C\5C\5C\22optional\5C\5C\5C\22\5C\22\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22now\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 49>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22expiry\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 49>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22crlBytes\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 234 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22c\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 208>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.crypto/x509.hasNameConstraints\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22c\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 208>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Verify\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22opts\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 212>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22chains\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 235 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 236 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 208>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22c\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 208>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.crypto/x509.checkNameConstraints\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22count\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 237 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22maxConstraintComparisons\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22nameType\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22parsedName\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 238 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22match\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 239 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22parsedName\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 240 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22constraint\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 240>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22match\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22permitted\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 241 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22excluded\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 241>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22c\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 208>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.crypto/x509.systemVerify\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22opts\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 211>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22chains\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 242 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 243 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 208>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22c\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 208>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22CheckCRLSignature\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22crl\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 244 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 245 \22"
module asm "\09.ascii \22\5C\22crypto/x509/pkix.CertificateList\5C\22 \22"
module asm "\09.ascii \22<type 246 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22TBSCertList\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 247 \22"
module asm "\09.ascii \22\5C\22crypto/x509/pkix.TBSCertificateList\5C\22 \22"
module asm "\09.ascii \22<type 248 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22Raw\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 249 \22"
module asm "\09.ascii \22\5C\22encoding/asn1.RawContent\5C\22 \22"
module asm "\09.ascii \22<type 250 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Version\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22\5C\22asn1:\5C\5C\5C\22optional,default:0\5C\5C\5C\22\5C\22\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Signature\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 251 \22"
module asm "\09.ascii \22\5C\22crypto/x509/pkix.AlgorithmIdentifier\5C\22 \22"
module asm "\09.ascii \22<type 252 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22Algorithm\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 156>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Parameters\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 253 \22"
module asm "\09.ascii \22\5C\22encoding/asn1.RawValue\5C\22 \22"
module asm "\09.ascii \22<type 254 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22Class\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Tag\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22IsCompound\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Bytes\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 255 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22FullBytes\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 256 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22\5C\22asn1:\5C\5C\5C\22optional\5C\5C\5C\22\5C\22\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Issuer\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 160>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22ThisUpdate\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 49>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22NextUpdate\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 49>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22\5C\22asn1:\5C\5C\5C\22optional\5C\5C\5C\22\5C\22\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22RevokedCertificates\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 257 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 231>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22\5C\22asn1:\5C\5C\5C\22optional\5C\5C\5C\22\5C\22\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Extensions\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 258 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 169>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22\5C\22asn1:\5C\5C\5C\22tag:0,optional,explicit\5C\5C\5C\22\5C\22\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22SignatureAlgorithm\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 251>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22SignatureValue\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 259 \22"
module asm "\09.ascii \22\5C\22encoding/asn1.BitString\5C\22 \22"
module asm "\09.ascii \22<type 260 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22Bytes\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 261 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22BitLength\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 259>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22RightAlign\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 262 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 259>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22At\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22i\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22certList\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 263 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 245>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22HasExpired\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22now\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 49>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22c\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 208>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.crypto/x509.buildChains\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22cache\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 264 \22"
module asm "\09.ascii \22map [\22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 265 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 266 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 208>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22currentChain\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 267 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 208>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22opts\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x20a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 211>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22chains\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 268 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 269 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 208>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22NameToCertificate\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 270 \22"
module asm "\09.ascii \22map [\22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 271 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 77>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22GetCertificate\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 272 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 273 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 274 \22"
module asm "\09.ascii \22\5C\22crypto/tls.ClientHelloInfo\5C\22 \22"
module asm "\09.ascii \22<type 275 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22CipherSuites\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 276 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -6>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22ServerName\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22SupportedCurves\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 277 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 278 \22"
module asm "\09.ascii \22\5C\22crypto/tls.CurveID\5C\22 \22"
module asm "\09.ascii \22<type -6>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22SupportedPoints\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 279 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -5>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22SignatureSchemes\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 280 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 281 \22"
module asm "\09.ascii \22\5C\22crypto/tls.SignatureScheme\5C\22 \22"
module asm "\09.ascii \22<type -6>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22SupportedProtos\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 282 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22SupportedVersions\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 283 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -6>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Conn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 284 \22"
module asm "\09.ascii \22\5C\22net.Conn\5C\22 \22"
module asm "\09.ascii \22<type 285 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22Read\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 286 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Write\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 287 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Close\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22LocalAddr\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 288 \22"
module asm "\09.ascii \22\5C\22net.Addr\5C\22 \22"
module asm "\09.ascii \22<type 289 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22Network\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22String\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22RemoteAddr\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 288>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22SetDeadline\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 49>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22SetReadDeadline\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 49>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22SetWriteDeadline\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 49>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 271>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22GetClientCertificate\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 290 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 291 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 292 \22"
module asm "\09.ascii \22\5C\22crypto/tls.CertificateRequestInfo\5C\22 \22"
module asm "\09.ascii \22<type 293 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22AcceptableCAs\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 294 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 295 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22SignatureSchemes\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 296 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 281>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 271>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22GetConfigForClient\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 297 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 273>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 298 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 46>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22VerifyPeerCertificate\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 299 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22rawCerts\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 300 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 301 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22verifiedChains\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 302 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 303 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 86>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22RootCAs\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 214>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22NextProtos\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 304 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22ServerName\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22ClientAuth\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 305 \22"
module asm "\09.ascii \22\5C\22crypto/tls.ClientAuthType\5C\22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22ClientCAs\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 214>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22InsecureSkipVerify\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22CipherSuites\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 306 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -6>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22PreferServerCipherSuites\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22SessionTicketsDisabled\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22SessionTicketKey\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 307 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22ClientSessionCache\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 308 \22"
module asm "\09.ascii \22\5C\22crypto/tls.ClientSessionCache\5C\22 \22"
module asm "\09.ascii \22<type 309 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22Get\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22sessionKey\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22session\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 310 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 311 \22"
module asm "\09.ascii \22\5C\22crypto/tls.ClientSessionState\5C\22 \22"
module asm "\09.ascii \22<type 312 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.crypto/tls.sessionTicket\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 313 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -5>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.crypto/tls.vers\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -6>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.crypto/tls.cipherSuite\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -6>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.crypto/tls.masterSecret\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 314 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.crypto/tls.serverCertificates\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 315 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 86>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.crypto/tls.verifiedChains\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 316 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 317 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 86>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22ok\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Put\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22sessionKey\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22cs\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 310>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22MinVersion\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -6>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22MaxVersion\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -6>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22CurvePreferences\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 318 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 278>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22DynamicRecordSizingDisabled\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Renegotiation\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 319 \22"
module asm "\09.ascii \22\5C\22crypto/tls.RenegotiationSupport\5C\22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22KeyLogWriter\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 39>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.crypto/tls.serverInitOnce\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 320 \22"
module asm "\09.ascii \22\5C\22sync.Once\5C\22 \22"
module asm "\09.ascii \22<type 321 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.sync.m\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 322 \22"
module asm "\09.ascii \22\5C\22sync.Mutex\5C\22 \22"
module asm "\09.ascii \22<type 323 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.sync.state\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -3>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.sync.sema\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22m\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 324 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 322>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Unlock\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22m\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 324>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Lock\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.sync.done\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22o\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 325 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 320>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Do\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 326 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.crypto/tls.mutex\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 327 \22"
module asm "\09.ascii \22\5C\22sync.RWMutex\5C\22 \22"
module asm "\09.ascii \22<type 328 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.sync.w\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 322>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.sync.writerSem\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.sync.readerSem\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.sync.readerCount\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -3>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.sync.readerWait\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -3>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22rw\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 329 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 327>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Unlock\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22rw\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 329>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22RLocker\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 330 \22"
module asm "\09.ascii \22\5C\22sync.Locker\5C\22 \22"
module asm "\09.ascii \22<type 331 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22Lock\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Unlock\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22rw\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 329>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22RLock\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22rw\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 329>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22RUnlock\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22rw\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 329>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Lock\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.crypto/tls.sessionTicketKeys\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 332 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 333 \22"
module asm "\09.ascii \22\5C\22.crypto/tls.ticketKey\5C\22 \22"
module asm "\09.ascii \22<type 334 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.crypto/tls.keyName\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 335 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.crypto/tls.aesKey\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 336 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.crypto/tls.hmacKey\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 337 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22c\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 338 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 46>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.crypto/tls.writeKeyLog\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22clientRandom\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 339 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22masterSecret\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 339>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22c\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 338>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22BuildNameToCertificate\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22c\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1a2>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 338>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.crypto/tls.getCertificate\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22clientHello\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 273>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 271>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22c\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 338>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22SetSessionTicketKeys\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22keys\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 340 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 341 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22c\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 338>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.crypto/tls.maxVersion\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -6>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22c\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 338>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.crypto/tls.serverInit\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22originalConfig\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 338>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22c\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 338>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Clone\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 338>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22c\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 338>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.crypto/tls.mutualVersion\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22vers\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -6>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -6>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22c\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x22>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 338>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.crypto/tls.rand\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 36>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22c\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x22>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 338>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.crypto/tls.cipherSuites\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 342 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -6>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22c\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 338>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.crypto/tls.minVersion\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -6>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22c\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 338>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.crypto/tls.ticketKeys\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 343 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 333>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22c\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x22>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 338>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.crypto/tls.curvePreferences\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 344 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 278>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22c\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x32>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 338>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.crypto/tls.time\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 49>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.tlsConn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 345 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 346 \22"
module asm "\09.ascii \22\5C\22crypto/tls.Conn\5C\22 \22"
module asm "\09.ascii \22<type 347 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.crypto/tls.conn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 284>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.crypto/tls.isClient\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.crypto/tls.handshakeMutex\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 322>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.crypto/tls.handshakeCond\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 348 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 349 \22"
module asm "\09.ascii \22\5C\22sync.Cond\5C\22 \22"
module asm "\09.ascii \22<type 350 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.sync.noCopy\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 12>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22L\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 330>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.sync.notify\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 351 \22"
module asm "\09.ascii \22\5C\22.sync.notifyList\5C\22 \22"
module asm "\09.ascii \22<type 352 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.sync.wait\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.sync.notify\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.sync.lock\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -13>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.sync.head\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 353 \22"
module asm "\09.ascii \22\5C\22unsafe.Pointer\5C\22 \22"
module asm "\09.ascii \22\5C\22\22"
module asm "\09.ascii \22unsafe\22"
module asm "\09.ascii \22\5C\22 \22"
module asm "\09.ascii \22<type 354 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22any\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.sync.tail\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 353>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.sync.checker\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 355 \22"
module asm "\09.ascii \22\5C\22.sync.copyChecker\5C\22 \22"
module asm "\09.ascii \22<type -13>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22c\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 356 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 355>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.sync.check\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22c\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 357 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 349>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Wait\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22c\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 357>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Signal\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22c\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 357>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Broadcast\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.crypto/tls.handshakeErr\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.crypto/tls.vers\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -6>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.crypto/tls.haveVers\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.crypto/tls.config\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 45>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.crypto/tls.handshakeComplete\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.crypto/tls.handshakes\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.crypto/tls.didResume\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.crypto/tls.cipherSuite\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -6>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.crypto/tls.ocspResponse\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 358 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.crypto/tls.scts\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 359 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 360 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.crypto/tls.peerCertificates\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 361 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 86>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.crypto/tls.verifiedChains\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 362 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 363 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 86>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.crypto/tls.serverName\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.crypto/tls.secureRenegotiation\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.crypto/tls.clientFinishedIsFirst\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.crypto/tls.closeNotifyErr\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.crypto/tls.closeNotifySent\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.crypto/tls.clientFinished\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 364 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \2212\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.crypto/tls.serverFinished\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 365 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \2212\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.crypto/tls.clientProtocol\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.crypto/tls.clientProtocolFallback\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.crypto/tls.in\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 366 \22"
module asm "\09.ascii \22\5C\22.crypto/tls.halfConn\5C\22 \22"
module asm "\09.ascii \22<type 367 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22? \22"
module asm "\09.ascii \22<type 322>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.crypto/tls.err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.crypto/tls.version\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -6>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.crypto/tls.cipher\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 368 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.crypto/tls.mac\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 369 \22"
module asm "\09.ascii \22\5C\22.crypto/tls.macFunction\5C\22 \22"
module asm "\09.ascii \22<type 370 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22Size\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22MAC\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22digestBuf\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 371 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22seq\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 371>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22header\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 371>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22data\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 371>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22extra\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 371>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 372 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.crypto/tls.seq\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 373 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.crypto/tls.bfree\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 374 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 375 \22"
module asm "\09.ascii \22\5C\22.crypto/tls.block\5C\22 \22"
module asm "\09.ascii \22<type 376 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.crypto/tls.data\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 377 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.crypto/tls.off\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.crypto/tls.link\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 378 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 375>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 379 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 375>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Read\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22p\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 380 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 379>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.crypto/tls.readFromUntil\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22r\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 36>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 379>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.crypto/tls.reserve\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 379>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.crypto/tls.resize\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.crypto/tls.additionalData\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 381 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \2213\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.crypto/tls.nextCipher\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 382 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.crypto/tls.nextMac\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 369>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.crypto/tls.inDigestBuf\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 383 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.crypto/tls.outDigestBuf\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 383>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22hc\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 384 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 366>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.crypto/tls.freeBlock\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 374>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22hc\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 384>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.crypto/tls.encrypt\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 374>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22explicitIVLen\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 385 \22"
module asm "\09.ascii \22\5C\22.crypto/tls.alert\5C\22 \22"
module asm "\09.ascii \22<type -5>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22e\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 385>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Error\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22e\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 385>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22String\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22hc\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x10a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 384>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.crypto/tls.splitBlock\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 374>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 374>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 374>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22hc\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x2a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 384>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.crypto/tls.newBlock\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 374>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22hc\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 384>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.crypto/tls.decrypt\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 374>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22ok\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22prefixLen\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22alertValue\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 385>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22hc\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 384>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.crypto/tls.setErrorLocked\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22hc\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 384>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.crypto/tls.prepareCipherSpec\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22version\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -6>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22cipher\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 386 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22mac\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 369>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22hc\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 384>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.crypto/tls.changeCipherSpec\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22hc\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 384>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.crypto/tls.incSeq\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.crypto/tls.out\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 366>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.crypto/tls.rawInput\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 374>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.crypto/tls.input\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 374>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.crypto/tls.hand\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 387 \22"
module asm "\09.ascii \22\5C\22bytes.Buffer\5C\22 \22"
module asm "\09.ascii \22<type 388 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.bytes.buf\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 389 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.bytes.off\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.bytes.bootstrap\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 390 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \2264\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.bytes.lastRead\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 391 \22"
module asm "\09.ascii \22\5C\22.bytes.readOp\5C\22 \22"
module asm "\09.ascii \22<type -1>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 392 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 387>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22UnreadByte\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 392>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22ReadRune\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22r\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -21>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22size\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 392>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.bytes.empty\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 392>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Len\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 392>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22String\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x22>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 392>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Bytes\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 393 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 392>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22ReadFrom\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22r\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 36>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 392>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.bytes.tryGrowByReslice\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 392>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Cap\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 392>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Reset\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 392>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22ReadBytes\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22delim\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22line\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 394 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 392>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Grow\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 392>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Truncate\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x22>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 392>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Next\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 395 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 392>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Write\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22p\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 396 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 392>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22WriteTo\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22w\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 39>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 392>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22WriteString\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 392>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22WriteByte\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22c\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 392>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22ReadString\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22delim\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22line\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 392>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22WriteRune\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22r\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -21>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 392>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22ReadByte\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x22>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 392>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.bytes.readSlice\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22delim\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22line\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 397 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 392>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22UnreadRune\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 392>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.bytes.grow\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 392>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Read\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22p\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 398 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.crypto/tls.buffering\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.crypto/tls.sendBuf\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 399 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.crypto/tls.bytesSent\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.crypto/tls.packetsSent\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.crypto/tls.warnCount\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.crypto/tls.activeCall\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -3>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.crypto/tls.tmp\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 400 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22c\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 401 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 346>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.crypto/tls.decryptTicket\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22encrypted\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 402 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 403 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 404 \22"
module asm "\09.ascii \22\5C\22.crypto/tls.sessionState\5C\22 \22"
module asm "\09.ascii \22<type 405 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.crypto/tls.vers\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -6>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.crypto/tls.cipherSuite\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -6>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.crypto/tls.masterSecret\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 406 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.crypto/tls.certificates\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 407 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 408 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.crypto/tls.usedOldKey\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 409 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 404>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.crypto/tls.unmarshal\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22data\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 410 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 409>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.crypto/tls.marshal\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 411 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 409>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.crypto/tls.equal\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22i\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 412 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22c\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 401>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.crypto/tls.encryptTicket\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22state\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 403>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 413 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22c\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 401>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.crypto/tls.serverHandshake\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22c\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 401>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.crypto/tls.clientHandshake\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22c\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 401>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22OCSPResponse\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 414 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22c\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 401>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22ConnectionState\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 415 \22"
module asm "\09.ascii \22\5C\22crypto/tls.ConnectionState\5C\22 \22"
module asm "\09.ascii \22<type 416 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22Version\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -6>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22HandshakeComplete\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22DidResume\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22CipherSuite\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -6>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22NegotiatedProtocol\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22NegotiatedProtocolIsMutual\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22ServerName\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22PeerCertificates\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 417 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 86>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22VerifiedChains\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 418 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 419 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 86>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22SignedCertificateTimestamps\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 420 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 421 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22OCSPResponse\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 422 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22TLSUnique\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 423 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22c\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 401>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22SetReadDeadline\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 49>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22c\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 401>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.crypto/tls.sendAlert\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 385>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22c\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 401>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.crypto/tls.newRecordHeaderError\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22msg\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 424 \22"
module asm "\09.ascii \22\5C\22crypto/tls.RecordHeaderError\5C\22 \22"
module asm "\09.ascii \22<type 425 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22Msg\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22RecordHeader\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 426 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22e\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 424>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Error\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22c\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 401>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.crypto/tls.readHandshake\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 427 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22c\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 401>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22VerifyHostname\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22host\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22c\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 401>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.crypto/tls.sendAlertLocked\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 385>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22c\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 401>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.crypto/tls.readRecord\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22want\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 428 \22"
module asm "\09.ascii \22\5C\22.crypto/tls.recordType\5C\22 \22"
module asm "\09.ascii \22<type -5>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22c\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 401>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.crypto/tls.maxPayloadSizeForWrite\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22typ\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 428>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22explicitIVLen\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22c\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 401>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22RemoteAddr\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 288>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22c\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 401>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.crypto/tls.write\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22data\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 429 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22c\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 401>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.crypto/tls.flush\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22c\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 401>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.crypto/tls.writeRecordLocked\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22typ\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 428>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22data\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 430 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22c\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 401>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.crypto/tls.writeRecord\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22typ\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 428>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22data\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 431 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22c\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 401>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Close\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22c\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 401>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22LocalAddr\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 288>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22c\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 401>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Write\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 432 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22c\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 401>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22SetDeadline\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 49>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22c\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 401>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.crypto/tls.handleRenegotiation\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22c\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 401>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22SetWriteDeadline\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 49>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22c\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 401>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Read\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 433 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22c\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 401>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22CloseWrite\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22c\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 401>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.crypto/tls.closeNotify\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22c\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 401>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Handshake\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.tcpConn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 284>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.connectionOk\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.connResetLock\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 322>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.reverser\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 434 \22"
module asm "\09.ascii \22\5C\22Reverser\5C\22 \22"
module asm "\09.ascii \22<type 435 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22RouteDeletions\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 436 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 437 \22"
module asm "\09.ascii \22\5C\22.command-line-arguments.routeEntries\5C\22 \22"
module asm "\09.ascii \22<type 438 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.command-line-arguments.dest\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 1>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.via\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 1>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.dev\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.updateGateway\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.newGW\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.interfaceToClose\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 31>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22r\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 439 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 434>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22AddRouteEntry\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22destination\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 1>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22via\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 1>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22dev\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22r\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 439>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22ResetGatewayOSX\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22intf\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 31>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22gw\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22r\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 439>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Close\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22c\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 440 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 8>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.command-line-arguments.init\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22serverAddr\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22port\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22c\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 440>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Run\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22c\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 440>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.command-line-arguments.netSendRoutine\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22c\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 440>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.command-line-arguments.netRecvRoutine\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22c\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 440>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.command-line-arguments.connectionProblem\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22c\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 440>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.command-line-arguments.sendLocalAddr\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22encoder\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 441 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 442 \22"
module asm "\09.ascii \22\5C\22encoding/gob.Encoder\5C\22 \22"
module asm "\09.ascii \22<type 443 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.encoding/gob.mutex\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 322>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.encoding/gob.w\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 444 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 39>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.encoding/gob.sent\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 445 \22"
module asm "\09.ascii \22map [\22"
module asm "\09.ascii \22<type 446 \22"
module asm "\09.ascii \22\5C\22reflect.Type\5C\22 \22"
module asm "\09.ascii \22\5C\22\22"
module asm "\09.ascii \22reflect\22"
module asm "\09.ascii \22\5C\22 \22"
module asm "\09.ascii \22<type 447 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22Align\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22FieldAlign\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Method\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 448 \22"
module asm "\09.ascii \22\5C\22reflect.Method\5C\22 \22"
module asm "\09.ascii \22<type 449 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22Name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22PkgPath\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Type\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 446>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Func\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 450 \22"
module asm "\09.ascii \22\5C\22reflect.Value\5C\22 \22"
module asm "\09.ascii \22<type 451 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.reflect.typ\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 452 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 453 \22"
module asm "\09.ascii \22\5C\22.reflect.rtype\5C\22 \22"
module asm "\09.ascii \22<type 454 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.reflect.size\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -13>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.reflect.ptrdata\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -13>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.reflect.hash\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.reflect.kind\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -5>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.reflect.align\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -1>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.reflect.fieldAlign\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -5>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.reflect._\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -5>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.reflect.hashfn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 455 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 353>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -13>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -13>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.reflect.equalfn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 456 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 353>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 353>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.reflect.gcdata\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 457 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.reflect.string\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 458 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22? \22"
module asm "\09.ascii \22<type 459 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 460 \22"
module asm "\09.ascii \22\5C\22.reflect.uncommonType\5C\22 \22"
module asm "\09.ascii \22<type 461 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.reflect.name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 458>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.reflect.pkgPath\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 458>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.reflect.methods\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 462 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 463 \22"
module asm "\09.ascii \22\5C\22.reflect.method\5C\22 \22"
module asm "\09.ascii \22<type 464 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.reflect.name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 458>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.reflect.pkgPath\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 458>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.reflect.mtyp\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 465 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 453>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.reflect.typ\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 465>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.reflect.tfn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 353>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 466 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 460>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.reflect.uncommon\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 466>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x32>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 466>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22PkgPath\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x32>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 466>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Name\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.reflect.ptrToThis\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 465>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 465>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22FieldByNameFunc\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22match\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 467 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 468 \22"
module asm "\09.ascii \22\5C\22reflect.StructField\5C\22 \22"
module asm "\09.ascii \22<type 469 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22Name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22PkgPath\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Type\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 446>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Tag\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 470 \22"
module asm "\09.ascii \22\5C\22reflect.StructTag\5C\22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22tag\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 470>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Get\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22key\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22tag\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 470>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Lookup\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22key\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22value\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22ok\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Offset\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -13>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Index\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 471 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Anonymous\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 465>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22In\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22i\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 446>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x4a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 465>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Field\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22i\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 468>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 465>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22NumField\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 465>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Elem\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 446>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 465>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22String\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 465>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.reflect.ptrTo\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 465>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 465>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22IsVariadic\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 465>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22FieldByIndex\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22index\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 472 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 468>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 465>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Size\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -13>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x42>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 465>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Name\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 465>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22MethodByName\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22m\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 448>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22ok\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 465>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.reflect.common\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 465>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 465>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Kind\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 473 \22"
module asm "\09.ascii \22\5C\22reflect.Kind\5C\22 \22"
module asm "\09.ascii \22<type -12>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22k\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 473>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22String\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 465>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Bits\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 465>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.reflect.exportedMethods\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 474 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 463>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 465>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22NumMethod\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 465>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Comparable\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 465>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Implements\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22u\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 446>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 465>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22FieldByName\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 468>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 465>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22AssignableTo\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22u\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 446>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 465>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Len\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x32>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 465>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.reflect.rawString\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 465>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Out\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22i\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 446>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 465>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22ConvertibleTo\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22u\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 446>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x42>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 465>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22PkgPath\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 465>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.reflect.pointers\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 465>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Method\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22i\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22m\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 448>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 465>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Align\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 465>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22NumOut\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 465>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22ChanDir\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 475 \22"
module asm "\09.ascii \22\5C\22reflect.ChanDir\5C\22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22d\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 475>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22String\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 465>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Key\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 446>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 465>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22FieldAlign\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 465>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22NumIn\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.reflect.ptr\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 353>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22? \22"
module asm "\09.ascii \22<type 476 \22"
module asm "\09.ascii \22\5C\22.reflect.flag\5C\22 \22"
module asm "\09.ascii \22<type -13>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 476>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.reflect.mustBeExported\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 476>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.reflect.mustBeAssignable\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 476>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.reflect.kind\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 473>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 476>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.reflect.ro\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 476>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 476>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.reflect.mustBe\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22expected\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 473>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 450>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22SetBytes\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 477 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 450>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22CanAddr\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x2a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 450>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22MapIndex\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22key\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 450>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 450>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 450>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22SetMapIndex\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22key\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 450>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22val\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 450>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 450>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22SetBool\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 450>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22SetFloat\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -10>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 450>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Set\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 450>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 450>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Send\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 450>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 450>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22OverflowInt\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 450>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Method\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22i\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 450>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 450>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22OverflowFloat\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -10>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 450>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Type\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 446>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 450>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22OverflowComplex\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -18>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 450>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22MapKeys\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 478 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 450>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 450>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Len\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 450>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22SetLen\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 450>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22MethodByName\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 450>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 450>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22FieldByIndex\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22index\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 479 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 450>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 450>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22String\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 450>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22NumField\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 450>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Field\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22i\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 450>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 450>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22SetPointer\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 353>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 450>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22OverflowUint\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -8>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 450>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22FieldByName\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 450>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 450>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22CallSlice\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22in\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 480 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 450>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 481 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 450>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 450>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Float\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -10>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 450>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22TrySend\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 450>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 450>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22SetCap\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 450>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Index\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22i\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 450>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 450>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Cap\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 450>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.reflect.setRunes\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 482 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -21>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 450>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22SetComplex\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -18>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x2a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 450>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.reflect.runes\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 483 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -21>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 450>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22InterfaceData\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 484 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -13>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 450>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22TryRecv\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 450>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22ok\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 450>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Uint\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -8>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 450>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Convert\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 446>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 450>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 450>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Bool\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 450>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Slice\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22i\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22j\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 450>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 450>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22SetInt\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 450>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Elem\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 450>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 450>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.reflect.recv\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22nb\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22val\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 450>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22ok\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 450>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.reflect.assignTo\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22context\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22dst\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 452>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22target\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 353>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 450>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 450>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Slice3\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22i\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22j\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22k\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 450>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 450>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22SetString\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 450>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22SetUint\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -8>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 450>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22CanInterface\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 450>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Recv\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 450>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22ok\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 450>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Close\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 450>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Call\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22in\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 485 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 450>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 486 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 450>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x2a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 450>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Bytes\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 487 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 450>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Addr\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 450>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 450>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Interface\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22i\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 488 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 450>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Kind\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 473>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 450>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Int\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 450>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.reflect.send\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 450>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22nb\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22selected\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 450>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.reflect.pointer\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 353>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 450>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22CanSet\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 450>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Pointer\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -13>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 450>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22FieldByNameFunc\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22match\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 489 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 450>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 450>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Complex\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -18>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 450>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22NumMethod\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 450>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22IsValid\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 450>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.reflect.call\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22op\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22in\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 490 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 450>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 491 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 450>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 450>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22UnsafeAddr\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -13>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 450>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22IsNil\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Index\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22MethodByName\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 448>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22NumMethod\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Name\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22PkgPath\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Size\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -13>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22String\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.reflect.rawString\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Kind\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 473>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Implements\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22u\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 446>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22AssignableTo\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22u\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 446>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22ConvertibleTo\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22u\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 446>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Comparable\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Bits\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22ChanDir\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 475>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22IsVariadic\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Elem\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 446>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Field\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22i\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 468>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22FieldByIndex\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22index\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 492 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 468>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22FieldByName\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 468>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22FieldByNameFunc\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22match\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 493 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 468>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22In\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22i\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 446>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Key\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 446>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Len\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22NumField\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22NumIn\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22NumOut\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Out\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22i\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 446>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.reflect.common\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 452>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.reflect.uncommon\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 459>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 494 \22"
module asm "\09.ascii \22\5C\22.encoding/gob.typeId\5C\22 \22"
module asm "\09.ascii \22<type -3>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 494>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.name\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 494>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.string\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 494>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.gobType\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 495 \22"
module asm "\09.ascii \22\5C\22.encoding/gob.gobType\5C\22 \22"
module asm "\09.ascii \22<type 496 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22.encoding/gob.id\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 494>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.encoding/gob.setId\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22id\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 494>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.encoding/gob.name\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.encoding/gob.string\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.encoding/gob.safeString\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22seen\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 497 \22"
module asm "\09.ascii \22map [\22"
module asm "\09.ascii \22<type 494>\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.encoding/gob.countState\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 498 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 499 \22"
module asm "\09.ascii \22\5C\22.encoding/gob.encoderState\5C\22 \22"
module asm "\09.ascii \22<type 500 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.encoding/gob.enc\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 501 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 442>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.encoding/gob.b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 502 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 503 \22"
module asm "\09.ascii \22\5C\22.encoding/gob.encBuffer\5C\22 \22"
module asm "\09.ascii \22<type 504 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.encoding/gob.data\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 505 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.encoding/gob.scratch\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 506 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \2264\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22e\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 507 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 503>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Reset\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22e\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x22>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 507>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Bytes\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 508 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22e\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 507>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22WriteByte\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22c\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22e\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 507>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Write\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22p\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 509 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22e\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 507>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Len\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22e\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 507>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22WriteString\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.encoding/gob.sendZero\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.encoding/gob.fieldnum\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.encoding/gob.buf\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 510 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.encoding/gob.next\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 511 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 499>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22state\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 512 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 499>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.update\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22instr\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 513 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 514 \22"
module asm "\09.ascii \22\5C\22.encoding/gob.encInstr\5C\22 \22"
module asm "\09.ascii \22<type 515 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.encoding/gob.op\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 516 \22"
module asm "\09.ascii \22\5C\22.encoding/gob.encOp\5C\22 \22"
module asm "\09.ascii \22<type 517 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22i\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 518 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 514>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22state\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 512>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 450>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.encoding/gob.field\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.encoding/gob.index\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 519 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.encoding/gob.indir\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22state\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 512>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.encodeInt\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22i\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22state\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 512>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.encodeUint\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -8>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.encoding/gob.freeList\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 498>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.encoding/gob.byteBuf\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 503>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.encoding/gob.err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22enc\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 520 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 442>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22EncodeValue\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22value\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 450>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22enc\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 520>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.sendTypeId\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22state\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 498>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22ut\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 521 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 522 \22"
module asm "\09.ascii \22\5C\22.encoding/gob.userTypeInfo\5C\22 \22"
module asm "\09.ascii \22<type 523 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.encoding/gob.user\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 446>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.encoding/gob.base\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 446>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.encoding/gob.indir\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.encoding/gob.externalEnc\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.encoding/gob.externalDec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.encoding/gob.encIndir\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -1>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.encoding/gob.decIndir\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -1>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22enc\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 520>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.sendTypeDescriptor\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22w\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 39>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22state\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 498>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22ut\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 521>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22enc\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 520>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Encode\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22e\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 524 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22enc\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 520>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.sendActualType\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22w\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 39>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22state\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 498>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22ut\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 521>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22actual\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 446>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22sent\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22enc\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 520>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.pushWriter\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22w\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 39>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22enc\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 520>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.encodeSingle\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 502>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22engine\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 525 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 526 \22"
module asm "\09.ascii \22\5C\22.encoding/gob.encEngine\5C\22 \22"
module asm "\09.ascii \22<type 527 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.encoding/gob.instr\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 528 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 514>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22value\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 450>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22enc\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 520>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.freeEncoderState\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22e\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 498>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22enc\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 520>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.encodeStruct\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 502>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22engine\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 525>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22value\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 450>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22enc\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 520>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.newEncoderState\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 502>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 498>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22enc\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 520>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.encodeMap\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 502>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22mv\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 450>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22keyOp\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 516>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22elemOp\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 516>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22keyIndir\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22elemIndir\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22enc\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 520>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.popWriter\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22enc\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 520>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.encodeArray\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 502>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22value\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 450>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22op\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 516>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22elemIndir\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22length\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22helper\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 529 \22"
module asm "\09.ascii \22\5C\22.encoding/gob.encHelper\5C\22 \22"
module asm "\09.ascii \22<type 530 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22state\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 498>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 450>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22enc\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 520>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.encode\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 502>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22value\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 450>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22ut\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 521>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22enc\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x32>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 520>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.writer\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 39>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22enc\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 520>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.writeMessage\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22w\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 39>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 502>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22enc\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 520>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.encodeInterface\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 502>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22iv\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 450>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22enc\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 520>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.sendType\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22w\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 39>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22state\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 498>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22origt\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 446>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22sent\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22enc\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 520>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.setError\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22enc\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 520>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.encodeGobEncoder\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 502>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22ut\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 521>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 450>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22c\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 440>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Close\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22DelRoute\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22addr\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 1>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22viaAddr\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 1>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22iName\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22debug\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22GetNetGateway\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22gw\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22dev\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22type \22"
module asm "\09.ascii \22<type 25>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22NewClient\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22servAddr\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22port\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22network\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22iName\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22newGateway\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22certPemPath\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22keyPemPath\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22caCertPath\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22additionalAddresses\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 531 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 1>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 440>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22NewServer\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22servHost\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22port\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22network\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22iName\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22certPemPath\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22keyPemPath\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22caCertPath\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 532 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 533 \22"
module asm "\09.ascii \22\5C\22Server\5C\22 \22"
module asm "\09.ascii \22<type 534 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.command-line-arguments.tlsConf\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 45>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.tlsListener\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 535 \22"
module asm "\09.ascii \22\5C\22net.Listener\5C\22 \22"
module asm "\09.ascii \22<type 536 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22Accept\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 284>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Close\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Addr\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 288>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.localAddr\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 1>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.localNetMask\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.isShuttingDown\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.clientIDByAddress\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 537 \22"
module asm "\09.ascii \22map [\22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.clients\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 538 \22"
module asm "\09.ascii \22map [\22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 539 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 540 \22"
module asm "\09.ascii \22\5C\22.command-line-arguments.serverConn\5C\22 \22"
module asm "\09.ascii \22<type 541 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.command-line-arguments.conn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 284>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.id\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.outboundIPPkts\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 542 \22"
module asm "\09.ascii \22chan \22"
module asm "\09.ascii \22<type 543 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 25>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.server\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 544 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 533>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.canSendIP\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.remoteAddrs\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 545 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 1>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.connectionOk\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22c\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 546 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 540>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.command-line-arguments.initClient\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 547 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 533>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22c\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 546>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.command-line-arguments.writeRoutine\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22isShuttingDown\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 548 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22c\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 546>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.command-line-arguments.readRoutine\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22isShuttingDown\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 549 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22ipPacketSink\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 550 \22"
module asm "\09.ascii \22chan \22"
module asm "\09.ascii \22<type 551 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 552 \22"
module asm "\09.ascii \22\5C\22.command-line-arguments.inboundIPPkt\5C\22 \22"
module asm "\09.ascii \22<type 553 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.command-line-arguments.pkt\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 543>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.clientID\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22c\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 546>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.command-line-arguments.queueIP\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22pkt\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 543>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22c\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 546>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.command-line-arguments.remoteAddressStr\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22c\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 546>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.command-line-arguments.hadError\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22errInRead\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.clientsLock\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 322>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.lastClientID\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.inboundIPPkts\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 554 \22"
module asm "\09.ascii \22chan \22"
module asm "\09.ascii \22<type 551>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.inboundDevPkts\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 555 \22"
module asm "\09.ascii \22chan \22"
module asm "\09.ascii \22<type 543>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.outboundDevPkts\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 556 \22"
module asm "\09.ascii \22chan \22"
module asm "\09.ascii \22<type 543>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.intf\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 31>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.reverser\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 434>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.wg\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 10>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 557 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 533>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Init\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22servHost\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 557>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Run\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 557>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.command-line-arguments.acceptRoutine\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 557>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.command-line-arguments.handleClient\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22conn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 284>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 557>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.command-line-arguments.enrollClientConn\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22c\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 539>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 557>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.command-line-arguments.setAddrForClient\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22id\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22addr\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 1>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 557>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.command-line-arguments.removeClientConn\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22id\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 557>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.command-line-arguments.dispatchRoutine\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 557>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.command-line-arguments.route\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22pkt\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 543>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 557>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Close\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22type \22"
module asm "\09.ascii \22<type 434>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22type \22"
module asm "\09.ascii \22<type 533>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22SetDefaultGateway\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22gw\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22iName\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22debug\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22SetDevIP\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22iName\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22localAddr\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 1>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22addr\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22debug\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22SetInterfaceStatus\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22iName\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22up\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22debug\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22checksum 5E0C0958893F19BB8C1A108C168337E710621A90;\5Cn\22"
module asm "\09.text"

%StructType.0 = type { %_type.0, %IPST.45 }
%_type.0 = type { i64, i64, i32, i8, i8, i8, %__go_descriptor.2*, %__go_descriptor.3*, i8*, { i8*, i64 }*, %uncommonType.0*, %_type.0* }
%__go_descriptor.2 = type { i64 (i8*, i8*, i64)* }
%__go_descriptor.3 = type { i8 (i8*, i8*, i8*)* }
%uncommonType.0 = type { { i8*, i64 }*, { i8*, i64 }*, %IPST.43 }
%IPST.43 = type { %method.0*, i64, i64 }
%method.0 = type { { i8*, i64 }*, { i8*, i64 }*, %_type.0*, %_type.0*, i8* }
%IPST.45 = type { %structField.0*, i64, i64 }
%structField.0 = type { { i8*, i64 }*, { i8*, i64 }*, %_type.0*, { i8*, i64 }*, i64 }
%StructField.0 = type { { i8*, i64 }, { i8*, i64 }, %Type.0, { i8*, i64 }, i64, %IPST.28, i8 }
%Type.0 = type { { %_type.0*, i64 (i8*, i8*)*, i8 (i8*, i8*, i64, i64)*, i64 (i8*, i8*)*, i64 (i8*, i8*)*, i8 (i8*, i8*)*, i8 (i8*, i8*, i64, i64)*, { i64, i64 } (i8*, i8*)*, void (%StructField.0*, i8*, i8*, i64)*, i64 (i8*, i8*)*, void (%StructField.0*, i8*, i8*, %IPST.28*)*, void ({ %StructField.0, i8 }*, i8*, i8*, i64, i64)*, void ({ %StructField.0, i8 }*, i8*, i8*, %__go_descriptor.41*)*, i8 (i8*, i8*, i64, i64)*, { i64, i64 } (i8*, i8*, i64)*, i8 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, i64 (i8*, i8*)*, i64 (i8*, i8*)*, void (%Method.0*, i8*, i8*, i64)*, void ({ %Method.0, i8 }*, i8*, i8*, i64, i64)*, { i64, i64 } (i8*, i8*)*, i64 (i8*, i8*)*, i64 (i8*, i8*)*, i64 (i8*, i8*)*, i64 (i8*, i8*)*, { i64, i64 } (i8*, i8*, i64)*, { i64, i64 } (i8*, i8*)*, i64 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, %.reflect.rtype.0* (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, %.reflect.uncommonType.0* (i8*, i8*)* }*, i8* }
%__go_descriptor.41 = type { i8 (i8*, i64, i64)* }
%Method.0 = type { { i8*, i64 }, { i8*, i64 }, %Type.0, %Value.0, i64 }
%Value.0 = type { %.reflect.rtype.0*, i8*, i64 }
%.reflect.uncommonType.0 = type { { i8*, i64 }*, { i8*, i64 }*, %IPST.37 }
%IPST.37 = type { %.reflect.method.0*, i64, i64 }
%.reflect.method.0 = type { { i8*, i64 }*, { i8*, i64 }*, %.reflect.rtype.0*, %.reflect.rtype.0*, i8* }
%IPST.28 = type { i64*, i64, i64 }
%.reflect.rtype.0 = type { i64, i64, i32, i8, i8, i8, i8, %__go_descriptor.23*, %__go_descriptor.24*, i8*, { i8*, i64 }*, %.reflect.uncommonType.0*, %.reflect.rtype.0* }
%__go_descriptor.23 = type { i64 (i8*, i8*, i64)* }
%__go_descriptor.24 = type { i8 (i8*, i8*, i8*)* }
%PtrType.0 = type { %_type.0, %_type.0* }
%IPAddr.0 = type { %IP.0, { i8*, i64 } }
%IP.0 = type { i8*, i64, i64 }
%Sockaddr.0 = type { { %_type.0*, void ({ %RawSockaddrAny.0*, i32, %error.0 }*, i8*, i8*)* }*, i8* }
%RawSockaddrAny.0 = type { %RawSockaddr.0, [96 x i8] }
%RawSockaddr.0 = type { i16, [14 x i8] }
%error.0 = type { { %_type.0*, { i64, i64 } (i8*, i8*)* }*, i8* }
%TCPAddr.0 = type { %IP.0, i64, { i8*, i64 } }
%UDPAddr.0 = type { %IP.0, i64, { i8*, i64 } }
%UnixAddr.0 = type { { i8*, i64 }, { i8*, i64 } }
%functionDescriptor.0 = type { i64 }
%FuncType.0 = type { %_type.0, i8, %IPST.44, %IPST.44 }
%IPST.44 = type { %_type.0**, i64, i64 }
%InterfaceType.0 = type { %_type.0, %IPST.46 }
%IPST.46 = type { %imethod.0*, i64, i64 }
%imethod.0 = type { { i8*, i64 }*, { i8*, i64 }*, %_type.0* }
%SliceType.0 = type { %_type.0, %_type.0* }
%ChanType.0 = type { %_type.0, %_type.0*, i64 }
%Conn.1 = type { %Conn.0, i8, %Mutex.0, %Cond.0*, %error.0, i16, i8, %Config.0*, i8, i64, i8, i16, { i8*, i64, i64 }, %IPST.12, %IPST.16, %IPST.17, { i8*, i64 }, i8, i8, %error.0, i8, [12 x i8], [12 x i8], { i8*, i64 }, i8, %".crypto/tls.halfConn.0", %".crypto/tls.halfConn.0", %".crypto/tls.block.0"*, %".crypto/tls.block.0"*, %Buffer.0, i8, { i8*, i64, i64 }, i64, i64, i64, i32, [16 x i8] }
%Conn.0 = type { { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }*, i8* }
%Time.0 = type { i64, i64, %Location.0* }
%Location.0 = type { { i8*, i64 }, %IPST.41, %IPST.42, i64, i64, %.time.zone.0* }
%IPST.41 = type { %.time.zone.0*, i64, i64 }
%IPST.42 = type { %.time.zoneTrans.0*, i64, i64 }
%.time.zoneTrans.0 = type { i64, i8, i8, i8 }
%.time.zone.0 = type { { i8*, i64 }, i64, i8 }
%Mutex.0 = type { i32, i32 }
%Cond.0 = type { %.sync.noCopy.0, %Locker.0, %.sync.notifyList.0, i64 }
%.sync.noCopy.0 = type {}
%Locker.0 = type { { %_type.0*, void (i8*, i8*)*, void (i8*, i8*)* }*, i8* }
%.sync.notifyList.0 = type { i32, i32, i64, i8*, i8* }
%Config.0 = type { %Reader.1, %__go_descriptor.7*, %IPST.18, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, %__go_descriptor.8*, %__go_descriptor.9*, %__go_descriptor.10*, %__go_descriptor.11*, %CertPool.0*, %IPST.5, { i8*, i64 }, i64, %CertPool.0*, i8, %IPST.14, i8, i8, [32 x i8], %ClientSessionCache.0, i16, i16, %IPST.15, i8, i64, %Writer.1, %Once.0, %RWMutex.0, %IPST.19 }
%Reader.1 = type { { %_type.0*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }*, i8* }
%__go_descriptor.7 = type { void (%Time.0*, i8*)* }
%IPST.18 = type { %Certificate.0*, i64, i64 }
%Certificate.0 = type { %IPST.12, %IPST.11, { i8*, i64, i64 }, %IPST.12, %Certificate.1* }
%IPST.11 = type { %_type.0*, i8* }
%Certificate.1 = type { { i8*, i64, i64 }, { i8*, i64, i64 }, { i8*, i64, i64 }, { i8*, i64, i64 }, { i8*, i64, i64 }, { i8*, i64, i64 }, i64, i64, %IPST.11, i64, %Int.0*, %Name.0, %Name.0, %Time.0, %Time.0, i64, %IPST.21, %IPST.21, %IPST.22, %IPST.23, %IPST.22, i8, i8, i64, i8, { i8*, i64, i64 }, { i8*, i64, i64 }, %IPST.5, %IPST.5, %IPST.5, %IPST.5, %IPST.4, %IPST.24, i8, %IPST.5, %IPST.5, %IPST.25, %IPST.25, %IPST.5, %IPST.5, %IPST.5, %IPST.5, %IPST.5, %IPST.22 }
%Int.0 = type { i8, %".math/big.nat.0" }
%".math/big.nat.0" = type { i64*, i64, i64 }
%Name.0 = type { %IPST.5, %IPST.5, %IPST.5, %IPST.5, %IPST.5, %IPST.5, %IPST.5, { i8*, i64 }, { i8*, i64 }, %IPST.20, %IPST.20 }
%IPST.20 = type { %AttributeTypeAndValue.0*, i64, i64 }
%AttributeTypeAndValue.0 = type { %ObjectIdentifier.0, %IPST.11 }
%ObjectIdentifier.0 = type { i64*, i64, i64 }
%IPST.21 = type { %Extension.0*, i64, i64 }
%Extension.0 = type { %ObjectIdentifier.0, i8, { i8*, i64, i64 } }
%IPST.23 = type { i64*, i64, i64 }
%IPST.4 = type { %IP.0*, i64, i64 }
%IPST.24 = type { %URL.0**, i64, i64 }
%URL.0 = type { { i8*, i64 }, { i8*, i64 }, %Userinfo.0*, { i8*, i64 }, { i8*, i64 }, { i8*, i64 }, i8, { i8*, i64 }, { i8*, i64 } }
%Userinfo.0 = type { { i8*, i64 }, { i8*, i64 }, i8 }
%IPST.25 = type { %IPNet.0**, i64, i64 }
%IPNet.0 = type { %IP.0, %IPMask.0 }
%IPMask.0 = type { i8*, i64, i64 }
%IPST.22 = type { %ObjectIdentifier.0*, i64, i64 }
%__go_descriptor.8 = type { void ({ %Certificate.0*, %error.0 }*, i8*, %ClientHelloInfo.0*)* }
%ClientHelloInfo.0 = type { %IPST.14, { i8*, i64 }, %IPST.15, { i8*, i64, i64 }, %IPST.13, %IPST.5, %IPST.14, %Conn.0 }
%IPST.13 = type { i16*, i64, i64 }
%__go_descriptor.9 = type { void ({ %Certificate.0*, %error.0 }*, i8*, %CertificateRequestInfo.0*)* }
%CertificateRequestInfo.0 = type { %IPST.12, %IPST.13 }
%__go_descriptor.10 = type { void ({ %Config.0*, %error.0 }*, i8*, %ClientHelloInfo.0*)* }
%__go_descriptor.11 = type { { i64, i64 } (i8*, %IPST.12*, %IPST.17*)* }
%IPST.5 = type { { i8*, i64 }*, i64, i64 }
%CertPool.0 = type { { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, %IPST.16 }
%IPST.14 = type { i16*, i64, i64 }
%ClientSessionCache.0 = type { { %_type.0*, { i64, i8 } (i8*, i8*, i64, i64)*, void (i8*, i8*, i64, i64, %ClientSessionState.0*)* }*, i8* }
%ClientSessionState.0 = type { { i8*, i64, i64 }, i16, i16, { i8*, i64, i64 }, %IPST.16, %IPST.17 }
%IPST.15 = type { i16*, i64, i64 }
%Writer.1 = type { { %_type.0*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }*, i8* }
%Once.0 = type { %Mutex.0, i32 }
%RWMutex.0 = type { %Mutex.0, i32, i32, i32, i32 }
%IPST.19 = type { %".crypto/tls.ticketKey.0"*, i64, i64 }
%".crypto/tls.ticketKey.0" = type { [16 x i8], [16 x i8], [16 x i8] }
%IPST.12 = type { { i8*, i64, i64 }*, i64, i64 }
%IPST.16 = type { %Certificate.1**, i64, i64 }
%IPST.17 = type { %IPST.16*, i64, i64 }
%".crypto/tls.halfConn.0" = type { %Mutex.0, %error.0, i16, %IPST.11, %".crypto/tls.macFunction.0", [8 x i8], %".crypto/tls.block.0"*, [13 x i8], %IPST.11, %".crypto/tls.macFunction.0", { i8*, i64, i64 }, { i8*, i64, i64 } }
%".crypto/tls.macFunction.0" = type { { %_type.0*, void ({ i8*, i64, i64 }*, i8*, i8*, { i8*, i64, i64 }*, { i8*, i64, i64 }*, { i8*, i64, i64 }*, { i8*, i64, i64 }*, { i8*, i64, i64 }*)*, i64 (i8*, i8*)* }*, i8* }
%".crypto/tls.block.0" = type { { i8*, i64, i64 }, i64, %".crypto/tls.block.0"* }
%Buffer.0 = type { { i8*, i64, i64 }, i64, [64 x i8], i8 }
%File.0 = type { %.os.file.0* }
%.os.file.0 = type { %FD.0, { i8*, i64 }, %.os.dirInfo.0*, i8, i8 }
%FD.0 = type { %".internal/poll.fdMutex.0", i64, %".internal/poll.pollDesc.0", { %Iovec.0*, i64, i64 }*, i32, i8, i8, i8, i8 }
%".internal/poll.fdMutex.0" = type { i64, i32, i32 }
%".internal/poll.pollDesc.0" = type { i64 }
%Iovec.0 = type { i8*, i64 }
%.os.dirInfo.0 = type { { i8*, i64, i64 }, %DIR.0* }
%DIR.0 = type {}
%ArrayType.0 = type { %_type.0, %_type.0*, %_type.0*, i64 }
%MapType.0 = type { %_type.0, %_type.0*, %_type.0*, %_type.0*, %_type.0*, i8, i8, i8, i8, i16, i8, i8 }
%Client.0 = type { i8, { i8*, i64 }, { i8*, i64 }, { i8*, i64 }, %WaitGroup.0, %IP.0, %IP.0, %IPST.4, %IPNet.0*, i8, {}*, {}*, %Interface.0*, %Config.0*, %Conn.1*, %Conn.0, i8, %Mutex.0, %Reverser.0 }
%WaitGroup.0 = type { %.sync.noCopy.0, [12 x i8], i32 }
%Interface.0 = type { i8, %ReadWriteCloser.0, { i8*, i64 } }
%ReadWriteCloser.0 = type { { %_type.0*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }*, i8* }
%Reverser.0 = type { %IPST.8, i8, { i8*, i64 }, %Interface.0* }
%IPST.8 = type { %.command-line-arguments.routeEntries.0*, i64, i64 }
%.command-line-arguments.routeEntries.0 = type { %IP.0, %IP.0, { i8*, i64 } }
%IPST.6 = type { %IPST.11*, i64, i64 }
%__go_descriptor.63 = type { void (i8*, i8*)* }
%TCPConn.0 = type { %.net.conn.0 }
%.net.conn.0 = type { %.net.netFD.0* }
%.net.netFD.0 = type { %FD.0, i64, i64, i8, { i8*, i64 }, %Addr.0, %Addr.0 }
%Addr.0 = type { { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)* }*, i8* }
%IPPacket.0 = type { { i8*, i64, i64 }, %IP.0, i8 }
%Decoder.0 = type { %Mutex.0, %Reader.1, %".encoding/gob.decBuffer.0", { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, %".encoding/gob.decoderState.0"*, { i8*, i64, i64 }, %error.0 }
%".encoding/gob.decBuffer.0" = type { { i8*, i64, i64 }, i64 }
%".encoding/gob.decoderState.0" = type { %Decoder.0*, %".encoding/gob.decBuffer.0"*, i64, %".encoding/gob.decoderState.0"* }
%IPST.1 = type { i16, i16, i8*, i8*, [2 x %IPST.0], [2 x i16], [2 x i16] }
%IPST.0 = type { i8*, i8*, i64, i16, i16, i8*, i64 }
%Encoder.0 = type { %Mutex.0, %IPST.30, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, %".encoding/gob.encoderState.0"*, %".encoding/gob.encoderState.0"*, %".encoding/gob.encBuffer.0", %error.0 }
%IPST.30 = type { %Writer.1*, i64, i64 }
%".encoding/gob.encoderState.0" = type { %Encoder.0*, %".encoding/gob.encBuffer.0"*, i8, i64, [9 x i8], %".encoding/gob.encoderState.0"* }
%".encoding/gob.encBuffer.0" = type { { i8*, i64, i64 }, [64 x i8] }
%IPST.7 = type { i8**, i64, i64 }
%Reader.0 = type { { i8*, i64, i64 }, %Reader.1, i64, i64, %error.0, i64, i64 }
%Scanner.0 = type { %Reader.1, %__go_descriptor.18*, i64, { i8*, i64, i64 }, { i8*, i64, i64 }, i64, i64, %error.0, i64, i8, i8 }
%__go_descriptor.18 = type { void ({ i64, { i8*, i64, i64 }, %error.0 }*, i8*, { i8*, i64, i64 }*, i8)* }
%Cmd.0 = type { { i8*, i64 }, %IPST.5, %IPST.5, { i8*, i64 }, %Reader.1, %Writer.1, %Writer.1, %IPST.34, %SysProcAttr.0*, %Process.0*, %ProcessState.0*, %Context.0, %error.0, i8, %IPST.34, %IPST.35, %IPST.35, %IPST.36, {}*, {}* }
%SysProcAttr.0 = type { { i8*, i64 }, %Credential.0*, i8, i8, i8, i8, i8, i64, i8, i64, i64, i64, i64, %IPST.40, %IPST.40, i8, %IPST.38 }
%Credential.0 = type { i32, i32, %IPST.39, i8 }
%IPST.39 = type { i32*, i64, i64 }
%IPST.40 = type { %SysProcIDMap.0*, i64, i64 }
%SysProcIDMap.0 = type { i64, i64, i64 }
%IPST.38 = type { i64*, i64, i64 }
%Process.0 = type { i64, i64, i32, %RWMutex.0 }
%ProcessState.0 = type { i64, i32, %Rusage.0* }
%Rusage.0 = type { %Timeval.0, %Timeval.0, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%Timeval.0 = type { i64, i64 }
%Context.0 = type { { %_type.0*, void ({ %Time.0, i8 }*, i8*, i8*)*, {}* (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, i64, i64)* }*, i8* }
%IPST.34 = type { %File.0**, i64, i64 }
%IPST.35 = type { %Closer.0*, i64, i64 }
%Closer.0 = type { { %_type.0*, { i64, i64 } (i8*, i8*)* }*, i8* }
%IPST.36 = type { %__go_descriptor.0**, i64, i64 }
%__go_descriptor.0 = type { { i64, i64 } (i8*)* }
%.command-line-arguments.serverConn.0 = type { %Conn.0, i64, {}*, %Server.0*, i8, %IPST.4, i8 }
%Server.0 = type { %Config.0*, %Listener.0, %IP.0, %IPNet.0*, i8, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, %Mutex.0, i64, {}*, {}*, {}*, %Interface.0*, %Reverser.0, %WaitGroup.0 }
%Listener.0 = type { { %_type.0*, void ({ %Conn.0, %error.0 }*, i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)* }*, i8* }
%TCPListener.0 = type { %.net.netFD.0* }
%.command-line-arguments.inboundIPPkt.0 = type { %IPPacket.0*, i64 }
%IPST.9 = type { { i8*, i64 }*, i64*, i8*, { i64, i8, i8, i16, i32, %IPST.3*, %IPST.3*, i64, i8* }*, %IPST.3*, %IPST.3*, i8*, i8*, i64, i8, i8, i8, i8, i64, i64 }
%IPST.3 = type { [8 x i8], [8 x { i8*, i64 }], [8 x i64], i8* }
%IPST.2 = type { i16, i16, i8*, i8*, [1 x %IPST.0], [1 x i16], [1 x i16] }

$imt..interface.4Align.0func.8.9.8int.9.2AssignableTo.0func.8reflect.Type.9.8bool.9.2Bits.0func.8.9.8int.9.2ChanDir.0func.8.9.8reflect.ChanDir.9.2Comparable.0func.8.9.8bool.9.2ConvertibleTo.0func.8reflect.Type.9.8bool.9.2Elem.0func.8.9.8reflect.Type.9.2Field.0func.8int.9.8reflect.StructField.9.2FieldAlign.0func.8.9.8int.9.2FieldByIndex.0func.8.6.7int.9.8reflect.StructField.9.2FieldByName.0func.8string.9.8reflect.StructField.3bool.9.2FieldByNameFunc.0func.8func.8string.9.8bool.9.9.8reflect.StructField.3bool.9.2Implements.0func.8reflect.Type.9.8bool.9.2In.0func.8int.9.8reflect.Type.9.2IsVariadic.0func.8.9.8bool.9.2Key.0func.8.9.8reflect.Type.9.2Kind.0func.8.9.8reflect.Kind.9.2Len.0func.8.9.8int.9.2Method.0func.8int.9.8reflect.Method.9.2MethodByName.0func.8string.9.8reflect.Method.3bool.9.2Name.0func.8.9.8string.9.2NumField.0func.8.9.8int.9.2NumIn.0func.8.9.8int.9.2NumMethod.0func.8.9.8int.9.2NumOut.0func.8.9.8int.9.2Out.0func.8int.9.8reflect.Type.9.2PkgPath.0func.8.9.8string.9.2Size.0func.8.9.8uintptr.9.2String.0func.8.9.8string.9.2.reflect.common.0func.8.9.8.1reflect.rtype.9.2.reflect.rawString.0func.8.9.8string.9.2.reflect.uncommon.0func.8.9.8.1reflect.uncommonType.9.5..reflect.rtype = comdat any

$pimt..interface.4Align.0func.8.9.8int.9.2AssignableTo.0func.8reflect.Type.9.8bool.9.2Bits.0func.8.9.8int.9.2ChanDir.0func.8.9.8reflect.ChanDir.9.2Comparable.0func.8.9.8bool.9.2ConvertibleTo.0func.8reflect.Type.9.8bool.9.2Elem.0func.8.9.8reflect.Type.9.2Field.0func.8int.9.8reflect.StructField.9.2FieldAlign.0func.8.9.8int.9.2FieldByIndex.0func.8.6.7int.9.8reflect.StructField.9.2FieldByName.0func.8string.9.8reflect.StructField.3bool.9.2FieldByNameFunc.0func.8func.8string.9.8bool.9.9.8reflect.StructField.3bool.9.2Implements.0func.8reflect.Type.9.8bool.9.2In.0func.8int.9.8reflect.Type.9.2IsVariadic.0func.8.9.8bool.9.2Key.0func.8.9.8reflect.Type.9.2Kind.0func.8.9.8reflect.Kind.9.2Len.0func.8.9.8int.9.2Method.0func.8int.9.8reflect.Method.9.2MethodByName.0func.8string.9.8reflect.Method.3bool.9.2Name.0func.8.9.8string.9.2NumField.0func.8.9.8int.9.2NumIn.0func.8.9.8int.9.2NumMethod.0func.8.9.8int.9.2NumOut.0func.8.9.8int.9.2Out.0func.8int.9.8reflect.Type.9.2PkgPath.0func.8.9.8string.9.2Size.0func.8.9.8uintptr.9.2String.0func.8.9.8string.9.2.reflect.common.0func.8.9.8.1reflect.rtype.9.2.reflect.rawString.0func.8.9.8string.9.2.reflect.uncommon.0func.8.9.8.1reflect.uncommonType.9.5..reflect.rtype = comdat any

$imt..interface.4Network.0func.8.9.8string.9.2String.0func.8.9.8string.9.2.net.family.0func.8.9.8int.9.2.net.isWildcard.0func.8.9.8bool.9.2.net.sockaddr.0func.8int.9.8syscall.Sockaddr.3error.9.2.net.toLocal.0func.8string.9.8net.sockaddr.9.5..net.IPAddr = comdat any

$pimt..interface.4Network.0func.8.9.8string.9.2String.0func.8.9.8string.9.2.net.family.0func.8.9.8int.9.2.net.isWildcard.0func.8.9.8bool.9.2.net.sockaddr.0func.8int.9.8syscall.Sockaddr.3error.9.2.net.toLocal.0func.8string.9.8net.sockaddr.9.5..net.IPAddr = comdat any

$imt..interface.4Network.0func.8.9.8string.9.2String.0func.8.9.8string.9.2.net.family.0func.8.9.8int.9.2.net.isWildcard.0func.8.9.8bool.9.2.net.sockaddr.0func.8int.9.8syscall.Sockaddr.3error.9.2.net.toLocal.0func.8string.9.8net.sockaddr.9.5..net.TCPAddr = comdat any

$pimt..interface.4Network.0func.8.9.8string.9.2String.0func.8.9.8string.9.2.net.family.0func.8.9.8int.9.2.net.isWildcard.0func.8.9.8bool.9.2.net.sockaddr.0func.8int.9.8syscall.Sockaddr.3error.9.2.net.toLocal.0func.8string.9.8net.sockaddr.9.5..net.TCPAddr = comdat any

$imt..interface.4Network.0func.8.9.8string.9.2String.0func.8.9.8string.9.2.net.family.0func.8.9.8int.9.2.net.isWildcard.0func.8.9.8bool.9.2.net.sockaddr.0func.8int.9.8syscall.Sockaddr.3error.9.2.net.toLocal.0func.8string.9.8net.sockaddr.9.5..net.UDPAddr = comdat any

$pimt..interface.4Network.0func.8.9.8string.9.2String.0func.8.9.8string.9.2.net.family.0func.8.9.8int.9.2.net.isWildcard.0func.8.9.8bool.9.2.net.sockaddr.0func.8int.9.8syscall.Sockaddr.3error.9.2.net.toLocal.0func.8string.9.8net.sockaddr.9.5..net.UDPAddr = comdat any

$imt..interface.4Network.0func.8.9.8string.9.2String.0func.8.9.8string.9.2.net.family.0func.8.9.8int.9.2.net.isWildcard.0func.8.9.8bool.9.2.net.sockaddr.0func.8int.9.8syscall.Sockaddr.3error.9.2.net.toLocal.0func.8string.9.8net.sockaddr.9.5..net.UnixAddr = comdat any

$pimt..interface.4Network.0func.8.9.8string.9.2String.0func.8.9.8string.9.2.net.family.0func.8.9.8int.9.2.net.isWildcard.0func.8.9.8bool.9.2.net.sockaddr.0func.8int.9.8syscall.Sockaddr.3error.9.2.net.toLocal.0func.8string.9.8net.sockaddr.9.5..net.UnixAddr = comdat any

$gcbits..krejGtib = comdat any

$type...1command_line_arguments.Client = comdat any

$gcbits..ba = comdat any

$type..func.8.9.8error.9 = comdat any

$error..d = comdat any

$gcbits..da = comdat any

$type...1error = comdat any

$type..func.8.9.8string.9 = comdat any

$string..d = comdat any

$type...1string = comdat any

$type..func.8.1command_line_arguments.Client.9.8error.9 = comdat any

$type..func.8.9.8.9 = comdat any

$type..func.8.1command_line_arguments.Client.9.8.9 = comdat any

$type..func.8string.3string.9.8error.9 = comdat any

$type..func.8.1command_line_arguments.Client.3string.3string.9.8error.9 = comdat any

$type..func.8.1encoding_gob.Encoder.9.8error.9 = comdat any

$type..func.8.1command_line_arguments.Client.3.1encoding_gob.Encoder.9.8error.9 = comdat any

$type...1.1command_line_arguments.Client = comdat any

$bool..d = comdat any

$type...1bool = comdat any

$type...6.7net.IP = comdat any

$type..chan.0.1command_line_arguments.IPPacket = comdat any

$type...1command_line_arguments.IPPacket = comdat any

$gcbits..ja = comdat any

$type...6.7uint8 = comdat any

$uint8..d = comdat any

$type...1uint8 = comdat any

$gcbits..rc = comdat any

$type...1command_line_arguments.Reverser = comdat any

$type..func.8net.IP.3net.IP.3string.9.8.9 = comdat any

$type..func.8.1command_line_arguments.Reverser.3net.IP.3net.IP.3string.9.8.9 = comdat any

$type..func.8.1command_line_arguments.Reverser.9.8.9 = comdat any

$type..func.8.1github_com_twitchyliquid64_subnet_vendor_github_com_songgao_water.Interface.3string.9.8.9 = comdat any

$type..func.8.1command_line_arguments.Reverser.3.1github_com_twitchyliquid64_subnet_vendor_github_com_songgao_water.Interface.3string.9.8.9 = comdat any

$type...1.1command_line_arguments.Reverser = comdat any

$type...6.7command_line_arguments.routeEntries = comdat any

$gcbits..jc = comdat any

$type...1command_line_arguments.routeEntries = comdat any

$type..struct.4.4x.5a0.0.1command_line_arguments.Client.5 = comdat any

$type..struct.4.4x.5a0.0.1github_com_twitchyliquid64_subnet_vendor_github_com_songgao_water.Interface.2a1.0chan.0.1command_line_arguments.IPPacket.2a2.0.1sync.WaitGroup.2a3.0.1bool.5 = comdat any

$gcbits..pa = comdat any

$pimt..interface.4Write.0func.8.6.7uint8.9.8int.3error.9.5..crypto_tls.Conn = comdat any

$pimt..interface.4Read.0func.8.6.7uint8.9.8int.3error.9.5..crypto_tls.Conn = comdat any

$int..d = comdat any

$type...1int = comdat any

$type...1command_line_arguments.inboundIPPkt = comdat any

$pimt..interface.4Read.0func.8.6.7uint8.9.8int.3error.9.5..os.File = comdat any

$pimt..interface.4Read.0func.8.6.7uint8.9.8int.3error.9.5..bytes.Buffer = comdat any

$type...63x.7string = comdat any

$gcbits..wa = comdat any

$type...6.7string = comdat any

$gcbits..Cc = comdat any

$type...1command_line_arguments.serverConn = comdat any

$type..func.8bool.9.8.9 = comdat any

$type..func.8.1command_line_arguments.serverConn.3bool.9.8.9 = comdat any

$type..func.8.1command_line_arguments.Server.9.8.9 = comdat any

$type...1command_line_arguments.Server = comdat any

$type..func.8.1command_line_arguments.Server.9.8error.9 = comdat any

$type..func.8string.9.8error.9 = comdat any

$type..func.8.1command_line_arguments.Server.3string.9.8error.9 = comdat any

$type..func.8.1command_line_arguments.serverConn.9.8.9 = comdat any

$type..func.8.1command_line_arguments.Server.3.1command_line_arguments.serverConn.9.8.9 = comdat any

$type..func.8net.Conn.9.8.9 = comdat any

$type..func.8.1command_line_arguments.Server.3net.Conn.9.8.9 = comdat any

$type..func.8int.9.8.9 = comdat any

$type..func.8.1command_line_arguments.Server.3int.9.8.9 = comdat any

$type..func.8.1command_line_arguments.IPPacket.9.8.9 = comdat any

$type..func.8.1command_line_arguments.Server.3.1command_line_arguments.IPPacket.9.8.9 = comdat any

$type..func.8int.3net.IP.9.8.9 = comdat any

$type..func.8.1command_line_arguments.Server.3int.3net.IP.9.8.9 = comdat any

$type...1.1command_line_arguments.Server = comdat any

$gcbits..pBDdf = comdat any

$type..map.6string.7int = comdat any

$type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7int.2overflow.0.1.4void.5.5 = comdat any

$gcbits..kwkbaba = comdat any

$type...68x.7uint8 = comdat any

$type...68x.7string = comdat any

$gcbits..wkwa = comdat any

$type...68x.7int = comdat any

$type...6.7int = comdat any

$type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7int.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7int.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5 = comdat any

$gcbits..mb = comdat any

$uint16..d = comdat any

$type...1uint16 = comdat any

$uint32..d = comdat any

$type...1uint32 = comdat any

$type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7int.2overflow.0.1.4void.5.5 = comdat any

$uintptr..d = comdat any

$type...1uintptr = comdat any

$type..map.6int.7.1command_line_arguments.serverConn = comdat any

$type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7int.2values.0.68x.7.1command_line_arguments.serverConn.2overflow.0.1.4void.5.5 = comdat any

$gcbits..aqGha = comdat any

$type...68x.7.1command_line_arguments.serverConn = comdat any

$gcbits..Gh = comdat any

$type...6.7.1command_line_arguments.serverConn = comdat any

$type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7int.2values.0.68x.7.1command_line_arguments.serverConn.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7int.2values.0.68x.7.1command_line_arguments.serverConn.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5 = comdat any

$type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7int.2values.0.68x.7.1command_line_arguments.serverConn.2overflow.0.1.4void.5.5 = comdat any

$type..chan.0.1command_line_arguments.inboundIPPkt = comdat any

$type..func.8.1command_line_arguments.serverConn.3.1command_line_arguments.Server.9.8.9 = comdat any

$type..func.8.1command_line_arguments.serverConn.3.1command_line_arguments.IPPacket.9.8.9 = comdat any

$type..func.8.1bool.3chan.0.1command_line_arguments.inboundIPPkt.9.8.9 = comdat any

$type..func.8.1command_line_arguments.serverConn.3.1bool.3chan.0.1command_line_arguments.inboundIPPkt.9.8.9 = comdat any

$type..func.8.1command_line_arguments.serverConn.9.8string.9 = comdat any

$type..func.8.1bool.9.8.9 = comdat any

$type..func.8.1command_line_arguments.serverConn.3.1bool.9.8.9 = comdat any

$type...1.1command_line_arguments.serverConn = comdat any

$type..struct.4.4x.5a0.0.1command_line_arguments.serverConn.2a1.0.1bool.2a2.0chan.0.1command_line_arguments.inboundIPPkt.5 = comdat any

$gcbits..ha = comdat any

$type..struct.4.4x.5a0.0.1command_line_arguments.serverConn.2a1.0.1bool.5 = comdat any

$type..struct.4.4x.5a0.0.1command_line_arguments.Server.5 = comdat any

$gcbits..GGGGGGGa = comdat any

$gcbits..pppa = comdat any

$gcbits..GGGa = comdat any

$gcbits..ppppa = comdat any

$gcbits..pppppppppppppppppppa = comdat any

$gcbits..ppaa = comdat any

$gcbits..GGGGGGGGGGaa = comdat any

$gcbits..pppppppppa = comdat any

$gcbits..pppppppppppppppa = comdat any

$gcbits..GGGGGGa = comdat any

$gcbits..pppppppa = comdat any

@reflect..reflect.rtype..d = external constant %StructType.0
@imt..interface.4Align.0func.8.9.8int.9.2AssignableTo.0func.8reflect.Type.9.8bool.9.2Bits.0func.8.9.8int.9.2ChanDir.0func.8.9.8reflect.ChanDir.9.2Comparable.0func.8.9.8bool.9.2ConvertibleTo.0func.8reflect.Type.9.8bool.9.2Elem.0func.8.9.8reflect.Type.9.2Field.0func.8int.9.8reflect.StructField.9.2FieldAlign.0func.8.9.8int.9.2FieldByIndex.0func.8.6.7int.9.8reflect.StructField.9.2FieldByName.0func.8string.9.8reflect.StructField.3bool.9.2FieldByNameFunc.0func.8func.8string.9.8bool.9.9.8reflect.StructField.3bool.9.2Implements.0func.8reflect.Type.9.8bool.9.2In.0func.8int.9.8reflect.Type.9.2IsVariadic.0func.8.9.8bool.9.2Key.0func.8.9.8reflect.Type.9.2Kind.0func.8.9.8reflect.Kind.9.2Len.0func.8.9.8int.9.2Method.0func.8int.9.8reflect.Method.9.2MethodByName.0func.8string.9.8reflect.Method.3bool.9.2Name.0func.8.9.8string.9.2NumField.0func.8.9.8int.9.2NumIn.0func.8.9.8int.9.2NumMethod.0func.8.9.8int.9.2NumOut.0func.8.9.8int.9.2Out.0func.8int.9.8reflect.Type.9.2PkgPath.0func.8.9.8string.9.2Size.0func.8.9.8uintptr.9.2String.0func.8.9.8string.9.2.reflect.common.0func.8.9.8.1reflect.rtype.9.2.reflect.rawString.0func.8.9.8string.9.2.reflect.uncommon.0func.8.9.8.1reflect.uncommonType.9.5..reflect.rtype = weak local_unnamed_addr constant { %_type.0*, i64 (i8*, %.reflect.rtype.0*)*, i8 (i8*, %.reflect.rtype.0*, i64, i64)*, i64 (i8*, %.reflect.rtype.0*)*, i64 (i8*, %.reflect.rtype.0*)*, i8 (i8*, %.reflect.rtype.0*)*, i8 (i8*, %.reflect.rtype.0*, i64, i64)*, { i64, i64 } (i8*, %.reflect.rtype.0*)*, void (%StructField.0*, i8*, %.reflect.rtype.0*, i64)*, i64 (i8*, %.reflect.rtype.0*)*, void (%StructField.0*, i8*, %.reflect.rtype.0*, %IPST.28*)*, void ({ %StructField.0, i8 }*, i8*, %.reflect.rtype.0*, i64, i64)*, void ({ %StructField.0, i8 }*, i8*, %.reflect.rtype.0*, %__go_descriptor.41*)*, i8 (i8*, %.reflect.rtype.0*, i64, i64)*, { i64, i64 } (i8*, %.reflect.rtype.0*, i64)*, i8 (i8*, %.reflect.rtype.0*)*, { i64, i64 } (i8*, %.reflect.rtype.0*)*, i64 (i8*, %.reflect.rtype.0*)*, i64 (i8*, %.reflect.rtype.0*)*, void (%Method.0*, i8*, %.reflect.rtype.0*, i64)*, void ({ %Method.0, i8 }*, i8*, %.reflect.rtype.0*, i64, i64)*, { i64, i64 } (i8*, %.reflect.rtype.0*)*, i64 (i8*, %.reflect.rtype.0*)*, i64 (i8*, %.reflect.rtype.0*)*, i64 (i8*, %.reflect.rtype.0*)*, i64 (i8*, %.reflect.rtype.0*)*, { i64, i64 } (i8*, %.reflect.rtype.0*, i64)*, { i64, i64 } (i8*, %.reflect.rtype.0*)*, i64 (i8*, %.reflect.rtype.0*)*, { i64, i64 } (i8*, %.reflect.rtype.0*)*, %.reflect.rtype.0* (i8*, %.reflect.rtype.0*)*, { i64, i64 } (i8*, %.reflect.rtype.0*)*, %.reflect.uncommonType.0* (i8*, %.reflect.uncommonType.0*)* } { %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @reflect..reflect.rtype..d, i32 0, i32 0), i64 (i8*, %.reflect.rtype.0*)* @reflect.rtype.Align, i8 (i8*, %.reflect.rtype.0*, i64, i64)* @reflect.rtype.AssignableTo, i64 (i8*, %.reflect.rtype.0*)* @reflect.rtype.Bits, i64 (i8*, %.reflect.rtype.0*)* @reflect.rtype.ChanDir, i8 (i8*, %.reflect.rtype.0*)* @reflect.rtype.Comparable, i8 (i8*, %.reflect.rtype.0*, i64, i64)* @reflect.rtype.ConvertibleTo, { i64, i64 } (i8*, %.reflect.rtype.0*)* @reflect.rtype.Elem, void (%StructField.0*, i8*, %.reflect.rtype.0*, i64)* @reflect.rtype.Field, i64 (i8*, %.reflect.rtype.0*)* @reflect.rtype.FieldAlign, void (%StructField.0*, i8*, %.reflect.rtype.0*, %IPST.28*)* @reflect.rtype.FieldByIndex, void ({ %StructField.0, i8 }*, i8*, %.reflect.rtype.0*, i64, i64)* @reflect.rtype.FieldByName, void ({ %StructField.0, i8 }*, i8*, %.reflect.rtype.0*, %__go_descriptor.41*)* @reflect.rtype.FieldByNameFunc, i8 (i8*, %.reflect.rtype.0*, i64, i64)* @reflect.rtype.Implements, { i64, i64 } (i8*, %.reflect.rtype.0*, i64)* @reflect.rtype.In, i8 (i8*, %.reflect.rtype.0*)* @reflect.rtype.IsVariadic, { i64, i64 } (i8*, %.reflect.rtype.0*)* @reflect.rtype.Key, i64 (i8*, %.reflect.rtype.0*)* @reflect.rtype.Kind, i64 (i8*, %.reflect.rtype.0*)* @reflect.rtype.Len, void (%Method.0*, i8*, %.reflect.rtype.0*, i64)* @reflect.rtype.Method, void ({ %Method.0, i8 }*, i8*, %.reflect.rtype.0*, i64, i64)* @reflect.rtype.MethodByName, { i64, i64 } (i8*, %.reflect.rtype.0*)* @reflect.rtype.Name, i64 (i8*, %.reflect.rtype.0*)* @reflect.rtype.NumField, i64 (i8*, %.reflect.rtype.0*)* @reflect.rtype.NumIn, i64 (i8*, %.reflect.rtype.0*)* @reflect.rtype.NumMethod, i64 (i8*, %.reflect.rtype.0*)* @reflect.rtype.NumOut, { i64, i64 } (i8*, %.reflect.rtype.0*, i64)* @reflect.rtype.Out, { i64, i64 } (i8*, %.reflect.rtype.0*)* @reflect.rtype.PkgPath, i64 (i8*, %.reflect.rtype.0*)* @reflect.rtype.Size, { i64, i64 } (i8*, %.reflect.rtype.0*)* @reflect.rtype.String, %.reflect.rtype.0* (i8*, %.reflect.rtype.0*)* @reflect.rtype.common, { i64, i64 } (i8*, %.reflect.rtype.0*)* @reflect.rtype.rawString, %.reflect.uncommonType.0* (i8*, %.reflect.uncommonType.0*)* bitcast (%.reflect.uncommonType.0* (i8*, %.reflect.rtype.0*)* @reflect.rtype.uncommon..stub to %.reflect.uncommonType.0* (i8*, %.reflect.uncommonType.0*)*) }, comdat
@type...1reflect.rtype = external constant %PtrType.0
@pimt..interface.4Align.0func.8.9.8int.9.2AssignableTo.0func.8reflect.Type.9.8bool.9.2Bits.0func.8.9.8int.9.2ChanDir.0func.8.9.8reflect.ChanDir.9.2Comparable.0func.8.9.8bool.9.2ConvertibleTo.0func.8reflect.Type.9.8bool.9.2Elem.0func.8.9.8reflect.Type.9.2Field.0func.8int.9.8reflect.StructField.9.2FieldAlign.0func.8.9.8int.9.2FieldByIndex.0func.8.6.7int.9.8reflect.StructField.9.2FieldByName.0func.8string.9.8reflect.StructField.3bool.9.2FieldByNameFunc.0func.8func.8string.9.8bool.9.9.8reflect.StructField.3bool.9.2Implements.0func.8reflect.Type.9.8bool.9.2In.0func.8int.9.8reflect.Type.9.2IsVariadic.0func.8.9.8bool.9.2Key.0func.8.9.8reflect.Type.9.2Kind.0func.8.9.8reflect.Kind.9.2Len.0func.8.9.8int.9.2Method.0func.8int.9.8reflect.Method.9.2MethodByName.0func.8string.9.8reflect.Method.3bool.9.2Name.0func.8.9.8string.9.2NumField.0func.8.9.8int.9.2NumIn.0func.8.9.8int.9.2NumMethod.0func.8.9.8int.9.2NumOut.0func.8.9.8int.9.2Out.0func.8int.9.8reflect.Type.9.2PkgPath.0func.8.9.8string.9.2Size.0func.8.9.8uintptr.9.2String.0func.8.9.8string.9.2.reflect.common.0func.8.9.8.1reflect.rtype.9.2.reflect.rawString.0func.8.9.8string.9.2.reflect.uncommon.0func.8.9.8.1reflect.uncommonType.9.5..reflect.rtype = weak local_unnamed_addr constant { %_type.0*, i64 (i8*, %.reflect.rtype.0*)*, i8 (i8*, %.reflect.rtype.0*, i64, i64)*, i64 (i8*, %.reflect.rtype.0*)*, i64 (i8*, %.reflect.rtype.0*)*, i8 (i8*, %.reflect.rtype.0*)*, i8 (i8*, %.reflect.rtype.0*, i64, i64)*, { i64, i64 } (i8*, %.reflect.rtype.0*)*, void (%StructField.0*, i8*, %.reflect.rtype.0*, i64)*, i64 (i8*, %.reflect.rtype.0*)*, void (%StructField.0*, i8*, %.reflect.rtype.0*, %IPST.28*)*, void ({ %StructField.0, i8 }*, i8*, %.reflect.rtype.0*, i64, i64)*, void ({ %StructField.0, i8 }*, i8*, %.reflect.rtype.0*, %__go_descriptor.41*)*, i8 (i8*, %.reflect.rtype.0*, i64, i64)*, { i64, i64 } (i8*, %.reflect.rtype.0*, i64)*, i8 (i8*, %.reflect.rtype.0*)*, { i64, i64 } (i8*, %.reflect.rtype.0*)*, i64 (i8*, %.reflect.rtype.0*)*, i64 (i8*, %.reflect.rtype.0*)*, void (%Method.0*, i8*, %.reflect.rtype.0*, i64)*, void ({ %Method.0, i8 }*, i8*, %.reflect.rtype.0*, i64, i64)*, { i64, i64 } (i8*, %.reflect.rtype.0*)*, i64 (i8*, %.reflect.rtype.0*)*, i64 (i8*, %.reflect.rtype.0*)*, i64 (i8*, %.reflect.rtype.0*)*, i64 (i8*, %.reflect.rtype.0*)*, { i64, i64 } (i8*, %.reflect.rtype.0*, i64)*, { i64, i64 } (i8*, %.reflect.rtype.0*)*, i64 (i8*, %.reflect.rtype.0*)*, { i64, i64 } (i8*, %.reflect.rtype.0*)*, %.reflect.rtype.0* (i8*, %.reflect.rtype.0*)*, { i64, i64 } (i8*, %.reflect.rtype.0*)*, %.reflect.uncommonType.0* (i8*, %.reflect.uncommonType.0*)* } { %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1reflect.rtype, i32 0, i32 0), i64 (i8*, %.reflect.rtype.0*)* @reflect.rtype.Align, i8 (i8*, %.reflect.rtype.0*, i64, i64)* @reflect.rtype.AssignableTo, i64 (i8*, %.reflect.rtype.0*)* @reflect.rtype.Bits, i64 (i8*, %.reflect.rtype.0*)* @reflect.rtype.ChanDir, i8 (i8*, %.reflect.rtype.0*)* @reflect.rtype.Comparable, i8 (i8*, %.reflect.rtype.0*, i64, i64)* @reflect.rtype.ConvertibleTo, { i64, i64 } (i8*, %.reflect.rtype.0*)* @reflect.rtype.Elem, void (%StructField.0*, i8*, %.reflect.rtype.0*, i64)* @reflect.rtype.Field, i64 (i8*, %.reflect.rtype.0*)* @reflect.rtype.FieldAlign, void (%StructField.0*, i8*, %.reflect.rtype.0*, %IPST.28*)* @reflect.rtype.FieldByIndex, void ({ %StructField.0, i8 }*, i8*, %.reflect.rtype.0*, i64, i64)* @reflect.rtype.FieldByName, void ({ %StructField.0, i8 }*, i8*, %.reflect.rtype.0*, %__go_descriptor.41*)* @reflect.rtype.FieldByNameFunc, i8 (i8*, %.reflect.rtype.0*, i64, i64)* @reflect.rtype.Implements, { i64, i64 } (i8*, %.reflect.rtype.0*, i64)* @reflect.rtype.In, i8 (i8*, %.reflect.rtype.0*)* @reflect.rtype.IsVariadic, { i64, i64 } (i8*, %.reflect.rtype.0*)* @reflect.rtype.Key, i64 (i8*, %.reflect.rtype.0*)* @reflect.rtype.Kind, i64 (i8*, %.reflect.rtype.0*)* @reflect.rtype.Len, void (%Method.0*, i8*, %.reflect.rtype.0*, i64)* @reflect.rtype.Method, void ({ %Method.0, i8 }*, i8*, %.reflect.rtype.0*, i64, i64)* @reflect.rtype.MethodByName, { i64, i64 } (i8*, %.reflect.rtype.0*)* @reflect.rtype.Name, i64 (i8*, %.reflect.rtype.0*)* @reflect.rtype.NumField, i64 (i8*, %.reflect.rtype.0*)* @reflect.rtype.NumIn, i64 (i8*, %.reflect.rtype.0*)* @reflect.rtype.NumMethod, i64 (i8*, %.reflect.rtype.0*)* @reflect.rtype.NumOut, { i64, i64 } (i8*, %.reflect.rtype.0*, i64)* @reflect.rtype.Out, { i64, i64 } (i8*, %.reflect.rtype.0*)* @reflect.rtype.PkgPath, i64 (i8*, %.reflect.rtype.0*)* @reflect.rtype.Size, { i64, i64 } (i8*, %.reflect.rtype.0*)* @reflect.rtype.String, %.reflect.rtype.0* (i8*, %.reflect.rtype.0*)* @reflect.rtype.common, { i64, i64 } (i8*, %.reflect.rtype.0*)* @reflect.rtype.rawString, %.reflect.uncommonType.0* (i8*, %.reflect.uncommonType.0*)* bitcast (%.reflect.uncommonType.0* (i8*, %.reflect.rtype.0*)* @reflect.rtype.uncommon..stub to %.reflect.uncommonType.0* (i8*, %.reflect.uncommonType.0*)*) }, comdat
@net.IPAddr..d = external constant %StructType.0
@imt..interface.4Network.0func.8.9.8string.9.2String.0func.8.9.8string.9.2.net.family.0func.8.9.8int.9.2.net.isWildcard.0func.8.9.8bool.9.2.net.sockaddr.0func.8int.9.8syscall.Sockaddr.3error.9.2.net.toLocal.0func.8string.9.8net.sockaddr.9.5..net.IPAddr = weak local_unnamed_addr constant { %_type.0*, { i64, i64 } (i8*, %IPAddr.0*)*, { i64, i64 } (i8*, %IPAddr.0*)*, i64 (i8*, %IPAddr.0*)*, i8 (i8*, %IPAddr.0*)*, void ({ %Sockaddr.0, %error.0 }*, i8*, %IPAddr.0*, i64)*, { i64, i64 } (i8*, %IPAddr.0*, i64, i64)* } { %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @net.IPAddr..d, i32 0, i32 0), { i64, i64 } (i8*, %IPAddr.0*)* @net.IPAddr.Network, { i64, i64 } (i8*, %IPAddr.0*)* @net.IPAddr.String, i64 (i8*, %IPAddr.0*)* @net.IPAddr.family, i8 (i8*, %IPAddr.0*)* @net.IPAddr.isWildcard, void ({ %Sockaddr.0, %error.0 }*, i8*, %IPAddr.0*, i64)* @net.IPAddr.sockaddr, { i64, i64 } (i8*, %IPAddr.0*, i64, i64)* @net.IPAddr.toLocal }, comdat
@type...1net.IPAddr = external constant %PtrType.0
@pimt..interface.4Network.0func.8.9.8string.9.2String.0func.8.9.8string.9.2.net.family.0func.8.9.8int.9.2.net.isWildcard.0func.8.9.8bool.9.2.net.sockaddr.0func.8int.9.8syscall.Sockaddr.3error.9.2.net.toLocal.0func.8string.9.8net.sockaddr.9.5..net.IPAddr = weak local_unnamed_addr constant { %_type.0*, { i64, i64 } (i8*, %IPAddr.0*)*, { i64, i64 } (i8*, %IPAddr.0*)*, i64 (i8*, %IPAddr.0*)*, i8 (i8*, %IPAddr.0*)*, void ({ %Sockaddr.0, %error.0 }*, i8*, %IPAddr.0*, i64)*, { i64, i64 } (i8*, %IPAddr.0*, i64, i64)* } { %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1net.IPAddr, i32 0, i32 0), { i64, i64 } (i8*, %IPAddr.0*)* @net.IPAddr.Network, { i64, i64 } (i8*, %IPAddr.0*)* @net.IPAddr.String, i64 (i8*, %IPAddr.0*)* @net.IPAddr.family, i8 (i8*, %IPAddr.0*)* @net.IPAddr.isWildcard, void ({ %Sockaddr.0, %error.0 }*, i8*, %IPAddr.0*, i64)* @net.IPAddr.sockaddr, { i64, i64 } (i8*, %IPAddr.0*, i64, i64)* @net.IPAddr.toLocal }, comdat
@net.TCPAddr..d = external constant %StructType.0
@imt..interface.4Network.0func.8.9.8string.9.2String.0func.8.9.8string.9.2.net.family.0func.8.9.8int.9.2.net.isWildcard.0func.8.9.8bool.9.2.net.sockaddr.0func.8int.9.8syscall.Sockaddr.3error.9.2.net.toLocal.0func.8string.9.8net.sockaddr.9.5..net.TCPAddr = weak local_unnamed_addr constant { %_type.0*, { i64, i64 } (i8*, %TCPAddr.0*)*, { i64, i64 } (i8*, %TCPAddr.0*)*, i64 (i8*, %TCPAddr.0*)*, i8 (i8*, %TCPAddr.0*)*, void ({ %Sockaddr.0, %error.0 }*, i8*, %TCPAddr.0*, i64)*, { i64, i64 } (i8*, %TCPAddr.0*, i64, i64)* } { %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @net.TCPAddr..d, i32 0, i32 0), { i64, i64 } (i8*, %TCPAddr.0*)* @net.TCPAddr.Network, { i64, i64 } (i8*, %TCPAddr.0*)* @net.TCPAddr.String, i64 (i8*, %TCPAddr.0*)* @net.TCPAddr.family, i8 (i8*, %TCPAddr.0*)* @net.TCPAddr.isWildcard, void ({ %Sockaddr.0, %error.0 }*, i8*, %TCPAddr.0*, i64)* @net.TCPAddr.sockaddr, { i64, i64 } (i8*, %TCPAddr.0*, i64, i64)* @net.TCPAddr.toLocal }, comdat
@type...1net.TCPAddr = external constant %PtrType.0
@pimt..interface.4Network.0func.8.9.8string.9.2String.0func.8.9.8string.9.2.net.family.0func.8.9.8int.9.2.net.isWildcard.0func.8.9.8bool.9.2.net.sockaddr.0func.8int.9.8syscall.Sockaddr.3error.9.2.net.toLocal.0func.8string.9.8net.sockaddr.9.5..net.TCPAddr = weak local_unnamed_addr constant { %_type.0*, { i64, i64 } (i8*, %TCPAddr.0*)*, { i64, i64 } (i8*, %TCPAddr.0*)*, i64 (i8*, %TCPAddr.0*)*, i8 (i8*, %TCPAddr.0*)*, void ({ %Sockaddr.0, %error.0 }*, i8*, %TCPAddr.0*, i64)*, { i64, i64 } (i8*, %TCPAddr.0*, i64, i64)* } { %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1net.TCPAddr, i32 0, i32 0), { i64, i64 } (i8*, %TCPAddr.0*)* @net.TCPAddr.Network, { i64, i64 } (i8*, %TCPAddr.0*)* @net.TCPAddr.String, i64 (i8*, %TCPAddr.0*)* @net.TCPAddr.family, i8 (i8*, %TCPAddr.0*)* @net.TCPAddr.isWildcard, void ({ %Sockaddr.0, %error.0 }*, i8*, %TCPAddr.0*, i64)* @net.TCPAddr.sockaddr, { i64, i64 } (i8*, %TCPAddr.0*, i64, i64)* @net.TCPAddr.toLocal }, comdat
@net.UDPAddr..d = external constant %StructType.0
@imt..interface.4Network.0func.8.9.8string.9.2String.0func.8.9.8string.9.2.net.family.0func.8.9.8int.9.2.net.isWildcard.0func.8.9.8bool.9.2.net.sockaddr.0func.8int.9.8syscall.Sockaddr.3error.9.2.net.toLocal.0func.8string.9.8net.sockaddr.9.5..net.UDPAddr = weak local_unnamed_addr constant { %_type.0*, { i64, i64 } (i8*, %UDPAddr.0*)*, { i64, i64 } (i8*, %UDPAddr.0*)*, i64 (i8*, %UDPAddr.0*)*, i8 (i8*, %UDPAddr.0*)*, void ({ %Sockaddr.0, %error.0 }*, i8*, %UDPAddr.0*, i64)*, { i64, i64 } (i8*, %UDPAddr.0*, i64, i64)* } { %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @net.UDPAddr..d, i32 0, i32 0), { i64, i64 } (i8*, %UDPAddr.0*)* @net.UDPAddr.Network, { i64, i64 } (i8*, %UDPAddr.0*)* @net.UDPAddr.String, i64 (i8*, %UDPAddr.0*)* @net.UDPAddr.family, i8 (i8*, %UDPAddr.0*)* @net.UDPAddr.isWildcard, void ({ %Sockaddr.0, %error.0 }*, i8*, %UDPAddr.0*, i64)* @net.UDPAddr.sockaddr, { i64, i64 } (i8*, %UDPAddr.0*, i64, i64)* @net.UDPAddr.toLocal }, comdat
@type...1net.UDPAddr = external constant %PtrType.0
@pimt..interface.4Network.0func.8.9.8string.9.2String.0func.8.9.8string.9.2.net.family.0func.8.9.8int.9.2.net.isWildcard.0func.8.9.8bool.9.2.net.sockaddr.0func.8int.9.8syscall.Sockaddr.3error.9.2.net.toLocal.0func.8string.9.8net.sockaddr.9.5..net.UDPAddr = weak local_unnamed_addr constant { %_type.0*, { i64, i64 } (i8*, %UDPAddr.0*)*, { i64, i64 } (i8*, %UDPAddr.0*)*, i64 (i8*, %UDPAddr.0*)*, i8 (i8*, %UDPAddr.0*)*, void ({ %Sockaddr.0, %error.0 }*, i8*, %UDPAddr.0*, i64)*, { i64, i64 } (i8*, %UDPAddr.0*, i64, i64)* } { %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1net.UDPAddr, i32 0, i32 0), { i64, i64 } (i8*, %UDPAddr.0*)* @net.UDPAddr.Network, { i64, i64 } (i8*, %UDPAddr.0*)* @net.UDPAddr.String, i64 (i8*, %UDPAddr.0*)* @net.UDPAddr.family, i8 (i8*, %UDPAddr.0*)* @net.UDPAddr.isWildcard, void ({ %Sockaddr.0, %error.0 }*, i8*, %UDPAddr.0*, i64)* @net.UDPAddr.sockaddr, { i64, i64 } (i8*, %UDPAddr.0*, i64, i64)* @net.UDPAddr.toLocal }, comdat
@net.UnixAddr..d = external constant %StructType.0
@imt..interface.4Network.0func.8.9.8string.9.2String.0func.8.9.8string.9.2.net.family.0func.8.9.8int.9.2.net.isWildcard.0func.8.9.8bool.9.2.net.sockaddr.0func.8int.9.8syscall.Sockaddr.3error.9.2.net.toLocal.0func.8string.9.8net.sockaddr.9.5..net.UnixAddr = weak local_unnamed_addr constant { %_type.0*, { i64, i64 } (i8*, %UnixAddr.0*)*, { i64, i64 } (i8*, %UnixAddr.0*)*, i64 (i8*, %UnixAddr.0*)*, i8 (i8*, %UnixAddr.0*)*, void ({ %Sockaddr.0, %error.0 }*, i8*, %UnixAddr.0*, i64)*, { i64, i64 } (i8*, %UnixAddr.0*, i64, i64)* } { %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @net.UnixAddr..d, i32 0, i32 0), { i64, i64 } (i8*, %UnixAddr.0*)* @net.UnixAddr.Network, { i64, i64 } (i8*, %UnixAddr.0*)* @net.UnixAddr.String, i64 (i8*, %UnixAddr.0*)* @net.UnixAddr.family, i8 (i8*, %UnixAddr.0*)* @net.UnixAddr.isWildcard, void ({ %Sockaddr.0, %error.0 }*, i8*, %UnixAddr.0*, i64)* @net.UnixAddr.sockaddr, { i64, i64 } (i8*, %UnixAddr.0*, i64, i64)* @net.UnixAddr.toLocal }, comdat
@type...1net.UnixAddr = external constant %PtrType.0
@pimt..interface.4Network.0func.8.9.8string.9.2String.0func.8.9.8string.9.2.net.family.0func.8.9.8int.9.2.net.isWildcard.0func.8.9.8bool.9.2.net.sockaddr.0func.8int.9.8syscall.Sockaddr.3error.9.2.net.toLocal.0func.8string.9.8net.sockaddr.9.5..net.UnixAddr = weak local_unnamed_addr constant { %_type.0*, { i64, i64 } (i8*, %UnixAddr.0*)*, { i64, i64 } (i8*, %UnixAddr.0*)*, i64 (i8*, %UnixAddr.0*)*, i8 (i8*, %UnixAddr.0*)*, void ({ %Sockaddr.0, %error.0 }*, i8*, %UnixAddr.0*, i64)*, { i64, i64 } (i8*, %UnixAddr.0*, i64, i64)* } { %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1net.UnixAddr, i32 0, i32 0), { i64, i64 } (i8*, %UnixAddr.0*)* @net.UnixAddr.Network, { i64, i64 } (i8*, %UnixAddr.0*)* @net.UnixAddr.String, i64 (i8*, %UnixAddr.0*)* @net.UnixAddr.family, i8 (i8*, %UnixAddr.0*)* @net.UnixAddr.isWildcard, void ({ %Sockaddr.0, %error.0 }*, i8*, %UnixAddr.0*, i64)* @net.UnixAddr.sockaddr, { i64, i64 } (i8*, %UnixAddr.0*, i64, i64)* @net.UnixAddr.toLocal }, comdat
@command_line_arguments.Client..d = constant %StructType.0 { %_type.0 { i64 288, i64 288, i32 -1901165271, i8 25, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @gcbits..krejGtib, i32 0, i32 0), { i8*, i64 }* @go..C1, %uncommonType.0* @go..C5, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Client, i32 0, i32 0) }, %IPST.45 { %structField.0* getelementptr inbounds ([19 x %structField.0], [19 x %structField.0]* @go..C171, i32 0, i32 0), i64 19, i64 19 } }
@gcbits..krejGtib = weak constant [5 x i8] c"*\92\F4'\0A", comdat
@const.0 = private constant [38 x i8] c"\09command_line_arguments\09subnet.Client\00", align 1
@go..C1 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([38 x i8], [38 x i8]* @const.0, i32 0, i32 0), i64 37 }
@const.1 = private constant [7 x i8] c"Client\00", align 1
@go..C2 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.1, i32 0, i32 0), i64 6 }
@const.2 = private constant [23 x i8] c"command-line-arguments\00", align 1
@go..C3 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@go..C4 = internal global [1 x %method.0] zeroinitializer
@go..C5 = internal constant %uncommonType.0 { { i8*, i64 }* @go..C2, { i8*, i64 }* @go..C3, %IPST.43 { %method.0* getelementptr inbounds ([1 x %method.0], [1 x %method.0]* @go..C4, i32 0, i32 0), i64 0, i64 0 } }
@type...1command_line_arguments.Client = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 -353873255, i8 54, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.3*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C6, %uncommonType.0* @go..C59, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1.1command_line_arguments.Client, i32 0, i32 0) }, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.Client..d, i32 0, i32 0) }, comdat
@runtime.memhash64..f = external constant %functionDescriptor.0
@runtime.memequal64..f = external constant %functionDescriptor.0
@gcbits..ba = weak constant [1 x i8] c"\01", comdat
@const.3 = private constant [39 x i8] c"*\09command_line_arguments\09subnet.Client\00", align 1
@go..C6 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([39 x i8], [39 x i8]* @const.3, i32 0, i32 0), i64 38 }
@const.4 = private constant [6 x i8] c"Close\00", align 1
@go..C7 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.4, i32 0, i32 0), i64 5 }
@type..func.8.9.8error.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 1188738504, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C8, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.44 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C9, i32 0, i32 0), i64 0, i64 0 }, %IPST.44 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C25, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.5 = private constant [13 x i8] c"func() error\00", align 1
@go..C8 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @const.5, i32 0, i32 0), i64 12 }
@go..C9 = internal global [1 x %_type.0*] zeroinitializer
@error..d = weak constant %InterfaceType.0 { %_type.0 { i64 16, i64 16, i32 -2128909609, i8 20, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.interhash..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.interequal..f to %__go_descriptor.3*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..da, i32 0, i32 0), { i8*, i64 }* @go..C10, %uncommonType.0* @go..C13, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1error, i32 0, i32 0) }, %IPST.46 { %imethod.0* getelementptr inbounds ([1 x %imethod.0], [1 x %imethod.0]* @go..C24, i32 0, i32 0), i64 1, i64 1 } }, comdat
@runtime.interhash..f = external constant %functionDescriptor.0
@runtime.interequal..f = external constant %functionDescriptor.0
@gcbits..da = weak constant [1 x i8] c"\03", comdat
@const.6 = private constant [6 x i8] c"error\00", align 1
@go..C10 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.6, i32 0, i32 0), i64 5 }
@go..C11 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.6, i32 0, i32 0), i64 5 }
@go..C12 = internal global [1 x %method.0] zeroinitializer
@go..C13 = internal constant %uncommonType.0 { { i8*, i64 }* @go..C11, { i8*, i64 }* null, %IPST.43 { %method.0* getelementptr inbounds ([1 x %method.0], [1 x %method.0]* @go..C12, i32 0, i32 0), i64 0, i64 0 } }
@type...1error = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 297184633, i8 54, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.3*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C14, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @error..d, i32 0, i32 0) }, comdat
@const.7 = private constant [7 x i8] c"*error\00", align 1
@go..C14 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.7, i32 0, i32 0), i64 6 }
@const.8 = private constant [6 x i8] c"Error\00", align 1
@go..C15 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.8, i32 0, i32 0), i64 5 }
@type..func.8.9.8string.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 916039304, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C16, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.44 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C17, i32 0, i32 0), i64 0, i64 0 }, %IPST.44 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C23, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.9 = private constant [14 x i8] c"func() string\00", align 1
@go..C16 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @const.9, i32 0, i32 0), i64 13 }
@go..C17 = internal global [1 x %_type.0*] zeroinitializer
@string..d = weak constant %_type.0 { i64 16, i64 8, i32 -1998952806, i8 24, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.strhash..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.strequal..f to %__go_descriptor.3*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C18, %uncommonType.0* @go..C21, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1string, i32 0, i32 0) }, comdat
@runtime.strhash..f = external constant %functionDescriptor.0
@runtime.strequal..f = external constant %functionDescriptor.0
@const.10 = private constant [7 x i8] c"string\00", align 1
@go..C18 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.10, i32 0, i32 0), i64 6 }
@go..C19 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.10, i32 0, i32 0), i64 6 }
@go..C20 = internal global [1 x %method.0] zeroinitializer
@go..C21 = internal constant %uncommonType.0 { { i8*, i64 }* @go..C19, { i8*, i64 }* null, %IPST.43 { %method.0* getelementptr inbounds ([1 x %method.0], [1 x %method.0]* @go..C20, i32 0, i32 0), i64 0, i64 0 } }
@type...1string = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 -1918473815, i8 54, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.3*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C22, %uncommonType.0* null, %_type.0* null }, %_type.0* @string..d }, comdat
@const.11 = private constant [8 x i8] c"*string\00", align 1
@go..C22 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.11, i32 0, i32 0), i64 7 }
@go..C23 = internal global [1 x %_type.0*] [%_type.0* @string..d]
@go..C24 = internal global [1 x %imethod.0] [%imethod.0 { { i8*, i64 }* @go..C15, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.9.8string.9, i32 0, i32 0) }]
@go..C25 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @error..d, i32 0, i32 0)]
@type..func.8.1command_line_arguments.Client.9.8error.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 -1545271064, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C26, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.44 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C27, i32 0, i32 0), i64 1, i64 1 }, %IPST.44 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C28, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.12 = private constant [51 x i8] c"func(*\09command_line_arguments\09subnet.Client) error\00", align 1
@go..C26 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([51 x i8], [51 x i8]* @const.12, i32 0, i32 0), i64 50 }
@go..C27 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Client, i32 0, i32 0)]
@go..C28 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @error..d, i32 0, i32 0)]
@const.13 = private constant [4 x i8] c"Run\00", align 1
@go..C29 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @const.13, i32 0, i32 0), i64 3 }
@type..func.8.9.8.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 8, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C30, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.44 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C31, i32 0, i32 0), i64 0, i64 0 }, %IPST.44 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C32, i32 0, i32 0), i64 0, i64 0 } }, comdat
@const.14 = private constant [7 x i8] c"func()\00", align 1
@go..C30 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.14, i32 0, i32 0), i64 6 }
@go..C31 = internal global [1 x %_type.0*] zeroinitializer
@go..C32 = internal global [1 x %_type.0*] zeroinitializer
@type..func.8.1command_line_arguments.Client.9.8.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 1560957736, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C33, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.44 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C34, i32 0, i32 0), i64 1, i64 1 }, %IPST.44 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C35, i32 0, i32 0), i64 0, i64 0 } }, comdat
@const.15 = private constant [45 x i8] c"func(*\09command_line_arguments\09subnet.Client)\00", align 1
@go..C33 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([45 x i8], [45 x i8]* @const.15, i32 0, i32 0), i64 44 }
@go..C34 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Client, i32 0, i32 0)]
@go..C35 = internal global [1 x %_type.0*] zeroinitializer
@const.16 = private constant [18 x i8] c"connectionProblem\00", align 1
@go..C36 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @const.16, i32 0, i32 0), i64 17 }
@go..C37 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@const.17 = private constant [5 x i8] c"init\00", align 1
@go..C38 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.17, i32 0, i32 0), i64 4 }
@go..C39 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@type..func.8string.3string.9.8error.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 -1732169848, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C40, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.44 { %_type.0** getelementptr inbounds ([2 x %_type.0*], [2 x %_type.0*]* @go..C41, i32 0, i32 0), i64 2, i64 2 }, %IPST.44 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C42, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.18 = private constant [27 x i8] c"func(string, string) error\00", align 1
@go..C40 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([27 x i8], [27 x i8]* @const.18, i32 0, i32 0), i64 26 }
@go..C41 = internal global [2 x %_type.0*] [%_type.0* @string..d, %_type.0* @string..d]
@go..C42 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @error..d, i32 0, i32 0)]
@type..func.8.1command_line_arguments.Client.3string.3string.9.8error.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 1202846824, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C43, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.44 { %_type.0** getelementptr inbounds ([3 x %_type.0*], [3 x %_type.0*]* @go..C44, i32 0, i32 0), i64 3, i64 3 }, %IPST.44 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C45, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.19 = private constant [67 x i8] c"func(*\09command_line_arguments\09subnet.Client, string, string) error\00", align 1
@go..C43 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([67 x i8], [67 x i8]* @const.19, i32 0, i32 0), i64 66 }
@go..C44 = internal global [3 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Client, i32 0, i32 0), %_type.0* @string..d, %_type.0* @string..d]
@go..C45 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @error..d, i32 0, i32 0)]
@const.20 = private constant [15 x i8] c"netRecvRoutine\00", align 1
@go..C46 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @const.20, i32 0, i32 0), i64 14 }
@go..C47 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@const.21 = private constant [15 x i8] c"netSendRoutine\00", align 1
@go..C48 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @const.21, i32 0, i32 0), i64 14 }
@go..C49 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@const.22 = private constant [14 x i8] c"sendLocalAddr\00", align 1
@go..C50 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @const.22, i32 0, i32 0), i64 13 }
@go..C51 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@type..func.8.1encoding_gob.Encoder.9.8error.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 -2128892696, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C52, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.44 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C53, i32 0, i32 0), i64 1, i64 1 }, %IPST.44 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C54, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.23 = private constant [39 x i8] c"func(*\09encoding_gob\09gob.Encoder) error\00", align 1
@go..C52 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([39 x i8], [39 x i8]* @const.23, i32 0, i32 0), i64 38 }
@type...1encoding_gob.Encoder = external constant %PtrType.0
@go..C53 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1encoding_gob.Encoder, i32 0, i32 0)]
@go..C54 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @error..d, i32 0, i32 0)]
@type..func.8.1command_line_arguments.Client.3.1encoding_gob.Encoder.9.8error.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 409401128, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C55, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.44 { %_type.0** getelementptr inbounds ([2 x %_type.0*], [2 x %_type.0*]* @go..C56, i32 0, i32 0), i64 2, i64 2 }, %IPST.44 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C57, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.24 = private constant [79 x i8] c"func(*\09command_line_arguments\09subnet.Client, *\09encoding_gob\09gob.Encoder) error\00", align 1
@go..C55 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([79 x i8], [79 x i8]* @const.24, i32 0, i32 0), i64 78 }
@go..C56 = internal global [2 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Client, i32 0, i32 0), %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1encoding_gob.Encoder, i32 0, i32 0)]
@go..C57 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @error..d, i32 0, i32 0)]
@go..C58 = internal global [7 x %method.0] [%method.0 { { i8*, i64 }* @go..C7, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.9.8error.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.Client.9.8error.9, i32 0, i32 0), i8* bitcast ({ i64, i64 } (i8*, %Client.0*)* @command_line_arguments.Client.Close to i8*) }, %method.0 { { i8*, i64 }* @go..C29, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.9.8.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.Client.9.8.9, i32 0, i32 0), i8* bitcast (void (i8*, %Client.0*)* @command_line_arguments.Client.Run to i8*) }, %method.0 { { i8*, i64 }* @go..C36, { i8*, i64 }* @go..C37, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.9.8.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.Client.9.8.9, i32 0, i32 0), i8* bitcast (void (i8*, %Client.0*)* @command_line_arguments.Client.connectionProblem to i8*) }, %method.0 { { i8*, i64 }* @go..C38, { i8*, i64 }* @go..C39, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8string.3string.9.8error.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.Client.3string.3string.9.8error.9, i32 0, i32 0), i8* bitcast ({ i64, i64 } (i8*, %Client.0*, i64, i64, i64, i64)* @command_line_arguments.Client.init to i8*) }, %method.0 { { i8*, i64 }* @go..C46, { i8*, i64 }* @go..C47, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.9.8.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.Client.9.8.9, i32 0, i32 0), i8* bitcast (void (i8*, %Client.0*)* @command_line_arguments.Client.netRecvRoutine to i8*) }, %method.0 { { i8*, i64 }* @go..C48, { i8*, i64 }* @go..C49, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.9.8.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.Client.9.8.9, i32 0, i32 0), i8* bitcast (void (i8*, %Client.0*)* @command_line_arguments.Client.netSendRoutine to i8*) }, %method.0 { { i8*, i64 }* @go..C50, { i8*, i64 }* @go..C51, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1encoding_gob.Encoder.9.8error.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.Client.3.1encoding_gob.Encoder.9.8error.9, i32 0, i32 0), i8* bitcast ({ i64, i64 } (i8*, %Client.0*, %Encoder.0*)* @command_line_arguments.Client.sendLocalAddr to i8*) }]
@go..C59 = internal constant %uncommonType.0 { { i8*, i64 }* null, { i8*, i64 }* null, %IPST.43 { %method.0* getelementptr inbounds ([7 x %method.0], [7 x %method.0]* @go..C58, i32 0, i32 0), i64 7, i64 7 } }
@type...1.1command_line_arguments.Client = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 -1367004775, i8 54, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.3*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C60, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Client, i32 0, i32 0) }, comdat
@const.25 = private constant [40 x i8] c"**\09command_line_arguments\09subnet.Client\00", align 1
@go..C60 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([40 x i8], [40 x i8]* @const.25, i32 0, i32 0), i64 39 }
@const.26 = private constant [14 x i8] c"debugMessages\00", align 1
@go..C61 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @const.26, i32 0, i32 0), i64 13 }
@go..C62 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@bool..d = weak constant %_type.0 { i64 1, i64 0, i32 1537849745, i8 -127, i8 1, i8 1, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash8..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal8..f to %__go_descriptor.3*), i8* null, { i8*, i64 }* @go..C63, %uncommonType.0* @go..C66, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1bool, i32 0, i32 0) }, comdat
@runtime.memhash8..f = external constant %functionDescriptor.0
@runtime.memequal8..f = external constant %functionDescriptor.0
@const.27 = private constant [5 x i8] c"bool\00", align 1
@go..C63 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.27, i32 0, i32 0), i64 4 }
@go..C64 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.27, i32 0, i32 0), i64 4 }
@go..C65 = internal global [1 x %method.0] zeroinitializer
@go..C66 = internal constant %uncommonType.0 { { i8*, i64 }* @go..C64, { i8*, i64 }* null, %IPST.43 { %method.0* getelementptr inbounds ([1 x %method.0], [1 x %method.0]* @go..C65, i32 0, i32 0), i64 0, i64 0 } }
@type...1bool = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 -1164207847, i8 54, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.3*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C67, %uncommonType.0* null, %_type.0* null }, %_type.0* @bool..d }, comdat
@const.28 = private constant [6 x i8] c"*bool\00", align 1
@go..C67 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.28, i32 0, i32 0), i64 5 }
@const.29 = private constant [11 x i8] c"newGateway\00", align 1
@go..C68 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @const.29, i32 0, i32 0), i64 10 }
@go..C69 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@const.30 = private constant [11 x i8] c"serverAddr\00", align 1
@go..C70 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @const.30, i32 0, i32 0), i64 10 }
@go..C71 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@const.31 = private constant [5 x i8] c"port\00", align 1
@go..C72 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.31, i32 0, i32 0), i64 4 }
@go..C73 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@const.32 = private constant [3 x i8] c"wg\00", align 1
@go..C74 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @const.32, i32 0, i32 0), i64 2 }
@go..C75 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@sync.WaitGroup..d = external constant %StructType.0
@const.33 = private constant [9 x i8] c"serverIP\00", align 1
@go..C76 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @const.33, i32 0, i32 0), i64 8 }
@go..C77 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@net.IP..d = external constant %SliceType.0
@const.34 = private constant [10 x i8] c"localAddr\00", align 1
@go..C78 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @const.34, i32 0, i32 0), i64 9 }
@go..C79 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@const.35 = private constant [16 x i8] c"additionalAddrs\00", align 1
@go..C80 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @const.35, i32 0, i32 0), i64 15 }
@go..C81 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@type...6.7net.IP = weak constant %SliceType.0 { %_type.0 { i64 24, i64 8, i32 778256691, i8 23, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C82, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @net.IP..d, i32 0, i32 0) }, comdat
@const.36 = private constant [14 x i8] c"[]\09net\09net.IP\00", align 1
@go..C82 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @const.36, i32 0, i32 0), i64 13 }
@const.37 = private constant [13 x i8] c"localNetMask\00", align 1
@go..C83 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @const.37, i32 0, i32 0), i64 12 }
@go..C84 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@type...1net.IPNet = external constant %PtrType.0
@const.38 = private constant [15 x i8] c"isShuttingDown\00", align 1
@go..C85 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @const.38, i32 0, i32 0), i64 14 }
@go..C86 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@const.39 = private constant [10 x i8] c"packetsIn\00", align 1
@go..C87 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @const.39, i32 0, i32 0), i64 9 }
@go..C88 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@type..chan.0.1command_line_arguments.IPPacket = weak constant %ChanType.0 { %_type.0 { i64 8, i64 8, i32 666730311, i8 18, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.3*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C89, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.IPPacket, i32 0, i32 0), i64 3 }, comdat
@const.40 = private constant [46 x i8] c"chan *\09command_line_arguments\09subnet.IPPacket\00", align 1
@go..C89 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([46 x i8], [46 x i8]* @const.40, i32 0, i32 0), i64 45 }
@type...1command_line_arguments.IPPacket = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 -918688775, i8 54, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.3*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C90, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.IPPacket..d, i32 0, i32 0) }, comdat
@const.41 = private constant [41 x i8] c"*\09command_line_arguments\09subnet.IPPacket\00", align 1
@go..C90 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([41 x i8], [41 x i8]* @const.41, i32 0, i32 0), i64 40 }
@command_line_arguments.IPPacket..d = constant %StructType.0 { %_type.0 { i64 56, i64 32, i32 -1936466241, i8 25, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ja, i32 0, i32 0), { i8*, i64 }* @go..C91, %uncommonType.0* @go..C95, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.IPPacket, i32 0, i32 0) }, %IPST.45 { %structField.0* getelementptr inbounds ([3 x %structField.0], [3 x %structField.0]* @go..C105, i32 0, i32 0), i64 3, i64 3 } }
@gcbits..ja = weak constant [1 x i8] c"\09", comdat
@const.42 = private constant [40 x i8] c"\09command_line_arguments\09subnet.IPPacket\00", align 1
@go..C91 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([40 x i8], [40 x i8]* @const.42, i32 0, i32 0), i64 39 }
@const.43 = private constant [9 x i8] c"IPPacket\00", align 1
@go..C92 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @const.43, i32 0, i32 0), i64 8 }
@go..C93 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@go..C94 = internal global [1 x %method.0] zeroinitializer
@go..C95 = internal constant %uncommonType.0 { { i8*, i64 }* @go..C92, { i8*, i64 }* @go..C93, %IPST.43 { %method.0* getelementptr inbounds ([1 x %method.0], [1 x %method.0]* @go..C94, i32 0, i32 0), i64 0, i64 0 } }
@const.44 = private constant [4 x i8] c"Raw\00", align 1
@go..C96 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @const.44, i32 0, i32 0), i64 3 }
@type...6.7uint8 = weak constant %SliceType.0 { %_type.0 { i64 24, i64 8, i32 264632103, i8 23, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C97, %uncommonType.0* null, %_type.0* null }, %_type.0* @uint8..d }, comdat
@const.45 = private constant [8 x i8] c"[]uint8\00", align 1
@go..C97 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.45, i32 0, i32 0), i64 7 }
@uint8..d = weak constant %_type.0 { i64 1, i64 0, i32 264632089, i8 -120, i8 1, i8 1, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash8..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal8..f to %__go_descriptor.3*), i8* null, { i8*, i64 }* @go..C98, %uncommonType.0* @go..C101, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1uint8, i32 0, i32 0) }, comdat
@const.46 = private constant [6 x i8] c"uint8\00", align 1
@go..C98 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.46, i32 0, i32 0), i64 5 }
@go..C99 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.46, i32 0, i32 0), i64 5 }
@go..C100 = internal global [1 x %method.0] zeroinitializer
@go..C101 = internal constant %uncommonType.0 { { i8*, i64 }* @go..C99, { i8*, i64 }* null, %IPST.43 { %method.0* getelementptr inbounds ([1 x %method.0], [1 x %method.0]* @go..C100, i32 0, i32 0), i64 0, i64 0 } }
@type...1uint8 = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 -60853863, i8 54, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.3*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C102, %uncommonType.0* null, %_type.0* null }, %_type.0* @uint8..d }, comdat
@const.47 = private constant [7 x i8] c"*uint8\00", align 1
@go..C102 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.47, i32 0, i32 0), i64 6 }
@const.48 = private constant [5 x i8] c"Dest\00", align 1
@go..C103 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.48, i32 0, i32 0), i64 4 }
@const.49 = private constant [9 x i8] c"Protocol\00", align 1
@go..C104 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @const.49, i32 0, i32 0), i64 8 }
@github_com_twitchyliquid64_subnet_vendor_github_com_songgao_water_waterutil.IPProtocol..d = external constant %_type.0
@go..C105 = internal global [3 x %structField.0] [%structField.0 { { i8*, i64 }* @go..C96, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7uint8, i32 0, i32 0), { i8*, i64 }* null, i64 0 }, %structField.0 { { i8*, i64 }* @go..C103, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @net.IP..d, i32 0, i32 0), { i8*, i64 }* null, i64 48 }, %structField.0 { { i8*, i64 }* @go..C104, { i8*, i64 }* null, %_type.0* @github_com_twitchyliquid64_subnet_vendor_github_com_songgao_water_waterutil.IPProtocol..d, { i8*, i64 }* null, i64 96 }]
@const.50 = private constant [14 x i8] c"packetsDevOut\00", align 1
@go..C106 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @const.50, i32 0, i32 0), i64 13 }
@go..C107 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@const.51 = private constant [5 x i8] c"intf\00", align 1
@go..C108 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.51, i32 0, i32 0), i64 4 }
@go..C109 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@type...1github_com_twitchyliquid64_subnet_vendor_github_com_songgao_water.Interface = external constant %PtrType.0
@const.52 = private constant [8 x i8] c"tlsConf\00", align 1
@go..C110 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.52, i32 0, i32 0), i64 7 }
@go..C111 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@type...1crypto_tls.Config = external constant %PtrType.0
@const.53 = private constant [8 x i8] c"tlsConn\00", align 1
@go..C112 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.53, i32 0, i32 0), i64 7 }
@go..C113 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@type...1crypto_tls.Conn = external constant %PtrType.0
@const.54 = private constant [8 x i8] c"tcpConn\00", align 1
@go..C114 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.54, i32 0, i32 0), i64 7 }
@go..C115 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@net.Conn..d = external constant %InterfaceType.0
@const.55 = private constant [13 x i8] c"connectionOk\00", align 1
@go..C116 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @const.55, i32 0, i32 0), i64 12 }
@go..C117 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@const.56 = private constant [14 x i8] c"connResetLock\00", align 1
@go..C118 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @const.56, i32 0, i32 0), i64 13 }
@go..C119 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@sync.Mutex..d = external constant %StructType.0
@const.57 = private constant [9 x i8] c"reverser\00", align 1
@go..C120 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @const.57, i32 0, i32 0), i64 8 }
@go..C121 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@command_line_arguments.Reverser..d = constant %StructType.0 { %_type.0 { i64 56, i64 56, i32 176221240, i8 25, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..rc, i32 0, i32 0), { i8*, i64 }* @go..C122, %uncommonType.0* @go..C126, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Reverser, i32 0, i32 0) }, %IPST.45 { %structField.0* getelementptr inbounds ([4 x %structField.0], [4 x %structField.0]* @go..C170, i32 0, i32 0), i64 4, i64 4 } }
@gcbits..rc = weak constant [1 x i8] c"Q", comdat
@const.58 = private constant [40 x i8] c"\09command_line_arguments\09subnet.Reverser\00", align 1
@go..C122 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([40 x i8], [40 x i8]* @const.58, i32 0, i32 0), i64 39 }
@const.59 = private constant [9 x i8] c"Reverser\00", align 1
@go..C123 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @const.59, i32 0, i32 0), i64 8 }
@go..C124 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@go..C125 = internal global [1 x %method.0] zeroinitializer
@go..C126 = internal constant %uncommonType.0 { { i8*, i64 }* @go..C123, { i8*, i64 }* @go..C124, %IPST.43 { %method.0* getelementptr inbounds ([1 x %method.0], [1 x %method.0]* @go..C125, i32 0, i32 0), i64 0, i64 0 } }
@type...1command_line_arguments.Reverser = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 -1475427447, i8 54, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.3*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C127, %uncommonType.0* @go..C147, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1.1command_line_arguments.Reverser, i32 0, i32 0) }, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.Reverser..d, i32 0, i32 0) }, comdat
@const.60 = private constant [41 x i8] c"*\09command_line_arguments\09subnet.Reverser\00", align 1
@go..C127 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([41 x i8], [41 x i8]* @const.60, i32 0, i32 0), i64 40 }
@const.61 = private constant [14 x i8] c"AddRouteEntry\00", align 1
@go..C128 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @const.61, i32 0, i32 0), i64 13 }
@type..func.8net.IP.3net.IP.3string.9.8.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 -764691736, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C129, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.44 { %_type.0** getelementptr inbounds ([3 x %_type.0*], [3 x %_type.0*]* @go..C130, i32 0, i32 0), i64 3, i64 3 }, %IPST.44 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C131, i32 0, i32 0), i64 0, i64 0 } }, comdat
@const.62 = private constant [39 x i8] c"func(\09net\09net.IP, \09net\09net.IP, string)\00", align 1
@go..C129 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([39 x i8], [39 x i8]* @const.62, i32 0, i32 0), i64 38 }
@go..C130 = internal global [3 x %_type.0*] [%_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @net.IP..d, i32 0, i32 0), %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @net.IP..d, i32 0, i32 0), %_type.0* @string..d]
@go..C131 = internal global [1 x %_type.0*] zeroinitializer
@type..func.8.1command_line_arguments.Reverser.3net.IP.3net.IP.3string.9.8.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 -1498421528, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C132, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.44 { %_type.0** getelementptr inbounds ([4 x %_type.0*], [4 x %_type.0*]* @go..C133, i32 0, i32 0), i64 4, i64 4 }, %IPST.44 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C134, i32 0, i32 0), i64 0, i64 0 } }, comdat
@const.63 = private constant [81 x i8] c"func(*\09command_line_arguments\09subnet.Reverser, \09net\09net.IP, \09net\09net.IP, string)\00", align 1
@go..C132 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([81 x i8], [81 x i8]* @const.63, i32 0, i32 0), i64 80 }
@go..C133 = internal global [4 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Reverser, i32 0, i32 0), %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @net.IP..d, i32 0, i32 0), %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @net.IP..d, i32 0, i32 0), %_type.0* @string..d]
@go..C134 = internal global [1 x %_type.0*] zeroinitializer
@go..C135 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.4, i32 0, i32 0), i64 5 }
@type..func.8.1command_line_arguments.Reverser.9.8.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 30961960, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C136, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.44 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C137, i32 0, i32 0), i64 1, i64 1 }, %IPST.44 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C138, i32 0, i32 0), i64 0, i64 0 } }, comdat
@const.64 = private constant [47 x i8] c"func(*\09command_line_arguments\09subnet.Reverser)\00", align 1
@go..C136 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([47 x i8], [47 x i8]* @const.64, i32 0, i32 0), i64 46 }
@go..C137 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Reverser, i32 0, i32 0)]
@go..C138 = internal global [1 x %_type.0*] zeroinitializer
@const.65 = private constant [16 x i8] c"ResetGatewayOSX\00", align 1
@go..C139 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @const.65, i32 0, i32 0), i64 15 }
@type..func.8.1github_com_twitchyliquid64_subnet_vendor_github_com_songgao_water.Interface.3string.9.8.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 814934952, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C140, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.44 { %_type.0** getelementptr inbounds ([2 x %_type.0*], [2 x %_type.0*]* @go..C141, i32 0, i32 0), i64 2, i64 2 }, %IPST.44 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C142, i32 0, i32 0), i64 0, i64 0 } }, comdat
@const.66 = private constant [98 x i8] c"func(*\09github_com_twitchyliquid64_subnet_vendor_github_com_songgao_water\09water.Interface, string)\00", align 1
@go..C140 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([98 x i8], [98 x i8]* @const.66, i32 0, i32 0), i64 97 }
@go..C141 = internal global [2 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1github_com_twitchyliquid64_subnet_vendor_github_com_songgao_water.Interface, i32 0, i32 0), %_type.0* @string..d]
@go..C142 = internal global [1 x %_type.0*] zeroinitializer
@type..func.8.1command_line_arguments.Reverser.3.1github_com_twitchyliquid64_subnet_vendor_github_com_songgao_water.Interface.3string.9.8.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 1660831848, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C143, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.44 { %_type.0** getelementptr inbounds ([3 x %_type.0*], [3 x %_type.0*]* @go..C144, i32 0, i32 0), i64 3, i64 3 }, %IPST.44 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C145, i32 0, i32 0), i64 0, i64 0 } }, comdat
@const.67 = private constant [140 x i8] c"func(*\09command_line_arguments\09subnet.Reverser, *\09github_com_twitchyliquid64_subnet_vendor_github_com_songgao_water\09water.Interface, string)\00", align 1
@go..C143 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([140 x i8], [140 x i8]* @const.67, i32 0, i32 0), i64 139 }
@go..C144 = internal global [3 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Reverser, i32 0, i32 0), %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1github_com_twitchyliquid64_subnet_vendor_github_com_songgao_water.Interface, i32 0, i32 0), %_type.0* @string..d]
@go..C145 = internal global [1 x %_type.0*] zeroinitializer
@go..C146 = internal global [3 x %method.0] [%method.0 { { i8*, i64 }* @go..C128, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8net.IP.3net.IP.3string.9.8.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.Reverser.3net.IP.3net.IP.3string.9.8.9, i32 0, i32 0), i8* bitcast (void (i8*, %Reverser.0*, %IP.0*, %IP.0*, i64, i64)* @command_line_arguments.Reverser.AddRouteEntry to i8*) }, %method.0 { { i8*, i64 }* @go..C135, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.9.8.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.Reverser.9.8.9, i32 0, i32 0), i8* bitcast (void (i8*, %Reverser.0*)* @command_line_arguments.Reverser.Close to i8*) }, %method.0 { { i8*, i64 }* @go..C139, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1github_com_twitchyliquid64_subnet_vendor_github_com_songgao_water.Interface.3string.9.8.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.Reverser.3.1github_com_twitchyliquid64_subnet_vendor_github_com_songgao_water.Interface.3string.9.8.9, i32 0, i32 0), i8* bitcast (void (i8*, %Reverser.0*, %Interface.0*, i64, i64)* @command_line_arguments.Reverser.ResetGatewayOSX to i8*) }]
@go..C147 = internal constant %uncommonType.0 { { i8*, i64 }* null, { i8*, i64 }* null, %IPST.43 { %method.0* getelementptr inbounds ([3 x %method.0], [3 x %method.0]* @go..C146, i32 0, i32 0), i64 3, i64 3 } }
@type...1.1command_line_arguments.Reverser = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 -2132002663, i8 54, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.3*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C148, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Reverser, i32 0, i32 0) }, comdat
@const.68 = private constant [42 x i8] c"**\09command_line_arguments\09subnet.Reverser\00", align 1
@go..C148 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([42 x i8], [42 x i8]* @const.68, i32 0, i32 0), i64 41 }
@const.69 = private constant [15 x i8] c"RouteDeletions\00", align 1
@go..C149 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @const.69, i32 0, i32 0), i64 14 }
@type...6.7command_line_arguments.routeEntries = weak constant %SliceType.0 { %_type.0 { i64 24, i64 8, i32 -1068686391, i8 23, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C150, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments..command_line_arguments.routeEntries..d, i32 0, i32 0) }, comdat
@const.70 = private constant [46 x i8] c"[]\09command_line_arguments\09subnet.routeEntries\00", align 1
@go..C150 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([46 x i8], [46 x i8]* @const.70, i32 0, i32 0), i64 45 }
@command_line_arguments..command_line_arguments.routeEntries..d = constant %StructType.0 { %_type.0 { i64 64, i64 56, i32 -1068686405, i8 25, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..jc, i32 0, i32 0), { i8*, i64 }* @go..C151, %uncommonType.0* @go..C155, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.routeEntries, i32 0, i32 0) }, %IPST.45 { %structField.0* getelementptr inbounds ([3 x %structField.0], [3 x %structField.0]* @go..C163, i32 0, i32 0), i64 3, i64 3 } }
@gcbits..jc = weak constant [1 x i8] c"I", comdat
@const.71 = private constant [44 x i8] c"\09command_line_arguments\09subnet.routeEntries\00", align 1
@go..C151 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([44 x i8], [44 x i8]* @const.71, i32 0, i32 0), i64 43 }
@const.72 = private constant [13 x i8] c"routeEntries\00", align 1
@go..C152 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @const.72, i32 0, i32 0), i64 12 }
@go..C153 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@go..C154 = internal global [1 x %method.0] zeroinitializer
@go..C155 = internal constant %uncommonType.0 { { i8*, i64 }* @go..C152, { i8*, i64 }* @go..C153, %IPST.43 { %method.0* getelementptr inbounds ([1 x %method.0], [1 x %method.0]* @go..C154, i32 0, i32 0), i64 0, i64 0 } }
@type...1command_line_arguments.routeEntries = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 80886713, i8 54, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.3*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C156, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments..command_line_arguments.routeEntries..d, i32 0, i32 0) }, comdat
@const.73 = private constant [45 x i8] c"*\09command_line_arguments\09subnet.routeEntries\00", align 1
@go..C156 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([45 x i8], [45 x i8]* @const.73, i32 0, i32 0), i64 44 }
@const.74 = private constant [5 x i8] c"dest\00", align 1
@go..C157 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.74, i32 0, i32 0), i64 4 }
@go..C158 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@const.75 = private constant [4 x i8] c"via\00", align 1
@go..C159 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @const.75, i32 0, i32 0), i64 3 }
@go..C160 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@const.76 = private constant [4 x i8] c"dev\00", align 1
@go..C161 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @const.76, i32 0, i32 0), i64 3 }
@go..C162 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@go..C163 = internal global [3 x %structField.0] [%structField.0 { { i8*, i64 }* @go..C157, { i8*, i64 }* @go..C158, %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @net.IP..d, i32 0, i32 0), { i8*, i64 }* null, i64 0 }, %structField.0 { { i8*, i64 }* @go..C159, { i8*, i64 }* @go..C160, %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @net.IP..d, i32 0, i32 0), { i8*, i64 }* null, i64 48 }, %structField.0 { { i8*, i64 }* @go..C161, { i8*, i64 }* @go..C162, %_type.0* @string..d, { i8*, i64 }* null, i64 96 }]
@const.77 = private constant [14 x i8] c"updateGateway\00", align 1
@go..C164 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @const.77, i32 0, i32 0), i64 13 }
@go..C165 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@const.78 = private constant [6 x i8] c"newGW\00", align 1
@go..C166 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.78, i32 0, i32 0), i64 5 }
@go..C167 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@const.79 = private constant [17 x i8] c"interfaceToClose\00", align 1
@go..C168 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @const.79, i32 0, i32 0), i64 16 }
@go..C169 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@go..C170 = internal global [4 x %structField.0] [%structField.0 { { i8*, i64 }* @go..C149, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7command_line_arguments.routeEntries, i32 0, i32 0), { i8*, i64 }* null, i64 0 }, %structField.0 { { i8*, i64 }* @go..C164, { i8*, i64 }* @go..C165, %_type.0* @bool..d, { i8*, i64 }* null, i64 48 }, %structField.0 { { i8*, i64 }* @go..C166, { i8*, i64 }* @go..C167, %_type.0* @string..d, { i8*, i64 }* null, i64 64 }, %structField.0 { { i8*, i64 }* @go..C168, { i8*, i64 }* @go..C169, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1github_com_twitchyliquid64_subnet_vendor_github_com_songgao_water.Interface, i32 0, i32 0), { i8*, i64 }* null, i64 96 }]
@go..C171 = internal global [19 x %structField.0] [%structField.0 { { i8*, i64 }* @go..C61, { i8*, i64 }* @go..C62, %_type.0* @bool..d, { i8*, i64 }* null, i64 0 }, %structField.0 { { i8*, i64 }* @go..C68, { i8*, i64 }* @go..C69, %_type.0* @string..d, { i8*, i64 }* null, i64 16 }, %structField.0 { { i8*, i64 }* @go..C70, { i8*, i64 }* @go..C71, %_type.0* @string..d, { i8*, i64 }* null, i64 48 }, %structField.0 { { i8*, i64 }* @go..C72, { i8*, i64 }* @go..C73, %_type.0* @string..d, { i8*, i64 }* null, i64 80 }, %structField.0 { { i8*, i64 }* @go..C74, { i8*, i64 }* @go..C75, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @sync.WaitGroup..d, i32 0, i32 0), { i8*, i64 }* null, i64 112 }, %structField.0 { { i8*, i64 }* @go..C76, { i8*, i64 }* @go..C77, %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @net.IP..d, i32 0, i32 0), { i8*, i64 }* null, i64 144 }, %structField.0 { { i8*, i64 }* @go..C78, { i8*, i64 }* @go..C79, %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @net.IP..d, i32 0, i32 0), { i8*, i64 }* null, i64 192 }, %structField.0 { { i8*, i64 }* @go..C80, { i8*, i64 }* @go..C81, %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7net.IP, i32 0, i32 0), { i8*, i64 }* null, i64 240 }, %structField.0 { { i8*, i64 }* @go..C83, { i8*, i64 }* @go..C84, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1net.IPNet, i32 0, i32 0), { i8*, i64 }* null, i64 288 }, %structField.0 { { i8*, i64 }* @go..C85, { i8*, i64 }* @go..C86, %_type.0* @bool..d, { i8*, i64 }* null, i64 304 }, %structField.0 { { i8*, i64 }* @go..C87, { i8*, i64 }* @go..C88, %_type.0* getelementptr inbounds (%ChanType.0, %ChanType.0* @type..chan.0.1command_line_arguments.IPPacket, i32 0, i32 0), { i8*, i64 }* null, i64 320 }, %structField.0 { { i8*, i64 }* @go..C106, { i8*, i64 }* @go..C107, %_type.0* getelementptr inbounds (%ChanType.0, %ChanType.0* @type..chan.0.1command_line_arguments.IPPacket, i32 0, i32 0), { i8*, i64 }* null, i64 336 }, %structField.0 { { i8*, i64 }* @go..C108, { i8*, i64 }* @go..C109, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1github_com_twitchyliquid64_subnet_vendor_github_com_songgao_water.Interface, i32 0, i32 0), { i8*, i64 }* null, i64 352 }, %structField.0 { { i8*, i64 }* @go..C110, { i8*, i64 }* @go..C111, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1crypto_tls.Config, i32 0, i32 0), { i8*, i64 }* null, i64 368 }, %structField.0 { { i8*, i64 }* @go..C112, { i8*, i64 }* @go..C113, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1crypto_tls.Conn, i32 0, i32 0), { i8*, i64 }* null, i64 384 }, %structField.0 { { i8*, i64 }* @go..C114, { i8*, i64 }* @go..C115, %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @net.Conn..d, i32 0, i32 0), { i8*, i64 }* null, i64 400 }, %structField.0 { { i8*, i64 }* @go..C116, { i8*, i64 }* @go..C117, %_type.0* @bool..d, { i8*, i64 }* null, i64 432 }, %structField.0 { { i8*, i64 }* @go..C118, { i8*, i64 }* @go..C119, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @sync.Mutex..d, i32 0, i32 0), { i8*, i64 }* null, i64 440 }, %structField.0 { { i8*, i64 }* @go..C120, { i8*, i64 }* @go..C121, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.Reverser..d, i32 0, i32 0), { i8*, i64 }* null, i64 464 }]
@const.83 = private constant [32 x i8] c"invalid network address/mask - \00", align 1
@const.84 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([32 x i8], [32 x i8]* @const.83, i32 0, i32 0), i64 31 }
@const.86 = private constant [24 x i8] c"Could not create TUN - \00", align 1
@const.87 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @const.86, i32 0, i32 0), i64 23 }
@const.88 = private constant [18 x i8] c"Created iface %s\0A\00", align 1
@command_line_arguments.NewClient..f = local_unnamed_addr constant %functionDescriptor.0 { i64 ptrtoint (void ({ %Client.0*, %error.0 }*, i8*, i64, i64, i64, i64, { i8*, i64 }*, { i8*, i64 }*, { i8*, i64 }*, { i8*, i64 }*, { i8*, i64 }*, { i8*, i64 }*, %IPST.4*)* @command_line_arguments.NewClient to i64) }
@const.96 = private constant [2 x i8] c":\00", align 1
@const.97 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @const.96, i32 0, i32 0), i64 1 }
@const.98 = private constant [4 x i8] c"tcp\00", align 1
@type...1net.TCPConn = external constant %PtrType.0
@runtime.writeBarrier = external local_unnamed_addr externally_initialized global i32
@const.100 = private constant [37 x i8] c"IP of %s set to %s, localNetMask %s\0A\00", align 1
@const.103 = private constant [29 x i8] c"Default gateway is %s on %s\0A\00", align 1
@const.105 = private constant [40 x i8] c"Traffic to %s now routed via %s on %s.\0A\00", align 1
@const.108 = private constant [23 x i8] c"Could set gateway: %s\0A\00", align 1
@const.110 = private constant [37 x i8] c"Could not bring up interface %s: %s\0A\00", align 1
@type..struct.4.4x.5a0.0.1command_line_arguments.Client.5 = weak constant %StructType.0 { %_type.0 { i64 8, i64 8, i32 1463981268, i8 25, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C172, %uncommonType.0* null, %_type.0* null }, %IPST.45 { %structField.0* getelementptr inbounds ([1 x %structField.0], [1 x %structField.0]* @go..C174, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.112 = private constant [53 x i8] c"struct { a0 *\09command_line_arguments\09subnet.Client }\00", align 1
@go..C172 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([53 x i8], [53 x i8]* @const.112, i32 0, i32 0), i64 52 }
@const.113 = private constant [3 x i8] c"a0\00", align 1
@go..C173 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @const.113, i32 0, i32 0), i64 2 }
@go..C174 = internal global [1 x %structField.0] [%structField.0 { { i8*, i64 }* @go..C173, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Client, i32 0, i32 0), { i8*, i64 }* null, i64 0 }]
@type..struct.4.4x.5a0.0.1github_com_twitchyliquid64_subnet_vendor_github_com_songgao_water.Interface.2a1.0chan.0.1command_line_arguments.IPPacket.2a2.0.1sync.WaitGroup.2a3.0.1bool.5 = weak constant %StructType.0 { %_type.0 { i64 32, i64 32, i32 931446916, i8 25, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..pa, i32 0, i32 0), { i8*, i64 }* @go..C175, %uncommonType.0* null, %_type.0* null }, %IPST.45 { %structField.0* getelementptr inbounds ([4 x %structField.0], [4 x %structField.0]* @go..C180, i32 0, i32 0), i64 4, i64 4 } }, comdat
@gcbits..pa = weak constant [1 x i8] c"\0F", comdat
@const.114 = private constant [184 x i8] c"struct { a0 *\09github_com_twitchyliquid64_subnet_vendor_github_com_songgao_water\09water.Interface; a1 chan *\09command_line_arguments\09subnet.IPPacket; a2 *\09sync\09sync.WaitGroup; a3 *bool }\00", align 1
@go..C175 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([184 x i8], [184 x i8]* @const.114, i32 0, i32 0), i64 183 }
@go..C176 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @const.113, i32 0, i32 0), i64 2 }
@const.115 = private constant [3 x i8] c"a1\00", align 1
@go..C177 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @const.115, i32 0, i32 0), i64 2 }
@const.116 = private constant [3 x i8] c"a2\00", align 1
@go..C178 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @const.116, i32 0, i32 0), i64 2 }
@type...1sync.WaitGroup = external constant %PtrType.0
@const.117 = private constant [3 x i8] c"a3\00", align 1
@go..C179 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @const.117, i32 0, i32 0), i64 2 }
@go..C180 = internal global [4 x %structField.0] [%structField.0 { { i8*, i64 }* @go..C176, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1github_com_twitchyliquid64_subnet_vendor_github_com_songgao_water.Interface, i32 0, i32 0), { i8*, i64 }* null, i64 0 }, %structField.0 { { i8*, i64 }* @go..C177, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%ChanType.0, %ChanType.0* @type..chan.0.1command_line_arguments.IPPacket, i32 0, i32 0), { i8*, i64 }* null, i64 16 }, %structField.0 { { i8*, i64 }* @go..C178, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1sync.WaitGroup, i32 0, i32 0), { i8*, i64 }* null, i64 32 }, %structField.0 { { i8*, i64 }* @go..C179, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1bool, i32 0, i32 0), { i8*, i64 }* null, i64 48 }]
@pimt..interface.4Write.0func.8.6.7uint8.9.8int.3error.9.5..crypto_tls.Conn = weak constant { %_type.0*, void ({ i64, %error.0 }*, i8*, %Conn.1*, { i8*, i64, i64 }*)* } { %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1crypto_tls.Conn, i32 0, i32 0), void ({ i64, %error.0 }*, i8*, %Conn.1*, { i8*, i64, i64 }*)* @crypto_tls.Conn.Write }, comdat
@github_com_twitchyliquid64_subnet_subnet_conn.PktType..d = external constant %_type.0
@const.119 = private constant [15 x i8] c"Encode error: \00", align 1
@const.120 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @const.119, i32 0, i32 0), i64 14 }
@pimt..interface.4Read.0func.8.6.7uint8.9.8int.3error.9.5..crypto_tls.Conn = weak constant { %_type.0*, void ({ i64, %error.0 }*, i8*, %Conn.1*, { i8*, i64, i64 }*)* } { %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1crypto_tls.Conn, i32 0, i32 0), void ({ i64, %error.0 }*, i8*, %Conn.1*, { i8*, i64, i64 }*)* @crypto_tls.Conn.Read }, comdat
@type...1github_com_twitchyliquid64_subnet_subnet_conn.PktType = external constant %PtrType.0
@const.122 = private constant [20 x i8] c"Net read error: %s\0A\00", align 1
@const.124 = private constant [29 x i8] c"Got unexpected packet type: \00", align 1
@const.125 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([29 x i8], [29 x i8]* @const.124, i32 0, i32 0), i64 28 }
@const.126 = private constant [30 x i8] c"Could not decode IPPacket: %s\00", align 1
@const.129 = private constant [44 x i8] c"Connection problem detected. Re-connecting.\00", align 1
@const.130 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([44 x i8], [44 x i8]* @const.129, i32 0, i32 0), i64 43 }
@const.131 = private constant [27 x i8] c"Connection re-established.\00", align 1
@const.132 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([27 x i8], [27 x i8]* @const.131, i32 0, i32 0), i64 26 }
@int..d = weak constant %_type.0 { i64 8, i64 0, i32 876704034, i8 -126, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.3*), i8* null, { i8*, i64 }* @go..C181, %uncommonType.0* @go..C184, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1int, i32 0, i32 0) }, comdat
@const.133 = private constant [4 x i8] c"int\00", align 1
@go..C181 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @const.133, i32 0, i32 0), i64 3 }
@go..C182 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @const.133, i32 0, i32 0), i64 3 }
@go..C183 = internal global [1 x %method.0] zeroinitializer
@go..C184 = internal constant %uncommonType.0 { { i8*, i64 }* @go..C182, { i8*, i64 }* null, %IPST.43 { %method.0* getelementptr inbounds ([1 x %method.0], [1 x %method.0]* @go..C183, i32 0, i32 0), i64 0, i64 0 } }
@type...1int = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 1142362665, i8 54, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.3*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C185, %uncommonType.0* null, %_type.0* null }, %_type.0* @int..d }, comdat
@const.134 = private constant [5 x i8] c"*int\00", align 1
@go..C185 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.134, i32 0, i32 0), i64 4 }
@const.135 = private constant [48 x i8] c"Reconnect failure: %s. Retrying in %d seconds.\0A\00", align 1
@command_line_arguments..command_line_arguments.inboundIPPkt..d = constant %StructType.0 { %_type.0 { i64 16, i64 8, i32 -1625903865, i8 25, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash128..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal128..f to %__go_descriptor.3*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C186, %uncommonType.0* @go..C190, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.inboundIPPkt, i32 0, i32 0) }, %IPST.45 { %structField.0* getelementptr inbounds ([2 x %structField.0], [2 x %structField.0]* @go..C196, i32 0, i32 0), i64 2, i64 2 } }
@runtime.memhash128..f = external constant %functionDescriptor.0
@runtime.memequal128..f = external constant %functionDescriptor.0
@const.138 = private constant [44 x i8] c"\09command_line_arguments\09subnet.inboundIPPkt\00", align 1
@go..C186 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([44 x i8], [44 x i8]* @const.138, i32 0, i32 0), i64 43 }
@const.139 = private constant [13 x i8] c"inboundIPPkt\00", align 1
@go..C187 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @const.139, i32 0, i32 0), i64 12 }
@go..C188 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@go..C189 = internal global [1 x %method.0] zeroinitializer
@go..C190 = internal constant %uncommonType.0 { { i8*, i64 }* @go..C187, { i8*, i64 }* @go..C188, %IPST.43 { %method.0* getelementptr inbounds ([1 x %method.0], [1 x %method.0]* @go..C189, i32 0, i32 0), i64 0, i64 0 } }
@type...1command_line_arguments.inboundIPPkt = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 -244658055, i8 54, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.3*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C191, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments..command_line_arguments.inboundIPPkt..d, i32 0, i32 0) }, comdat
@const.140 = private constant [45 x i8] c"*\09command_line_arguments\09subnet.inboundIPPkt\00", align 1
@go..C191 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([45 x i8], [45 x i8]* @const.140, i32 0, i32 0), i64 44 }
@const.141 = private constant [4 x i8] c"pkt\00", align 1
@go..C192 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @const.141, i32 0, i32 0), i64 3 }
@go..C193 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@const.142 = private constant [9 x i8] c"clientID\00", align 1
@go..C194 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @const.142, i32 0, i32 0), i64 8 }
@go..C195 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@go..C196 = internal global [2 x %structField.0] [%structField.0 { { i8*, i64 }* @go..C192, { i8*, i64 }* @go..C193, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.IPPacket, i32 0, i32 0), { i8*, i64 }* null, i64 0 }, %structField.0 { { i8*, i64 }* @go..C194, { i8*, i64 }* @go..C195, %_type.0* @int..d, { i8*, i64 }* null, i64 16 }]
@const.143 = private constant [5 x i8] c"down\00", align 1
@const.144 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.143, i32 0, i32 0), i64 4 }
@const.145 = private constant [3 x i8] c"up\00", align 1
@const.146 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @const.145, i32 0, i32 0), i64 2 }
@const.147 = private constant [34 x i8] c"link set dev %s %s mtu %d qlen %d\00", align 1
@const.149 = private constant [2 x i8] c" \00", align 1
@const.151 = private constant [3 x i8] c"ip\00", align 1
@command_line_arguments.SetInterfaceStatus..f = local_unnamed_addr constant %functionDescriptor.0 { i64 ptrtoint ({ i64, i64 } (i8*, i64, i64, i8, i8)* @command_line_arguments.SetInterfaceStatus to i64) }
@const.153 = private constant [17 x i8] c"%s %s netmask %s\00", align 1
@const.155 = private constant [9 x i8] c"ifconfig\00", align 1
@command_line_arguments.SetDevIP..f = local_unnamed_addr constant %functionDescriptor.0 { i64 ptrtoint ({ i64, i64 } (i8*, i64, i64, %IP.0*, %IPNet.0*, i8)* @command_line_arguments.SetDevIP to i64) }
@const.157 = private constant [25 x i8] c"add default gw %s dev %s\00", align 1
@const.159 = private constant [6 x i8] c"route\00", align 1
@command_line_arguments.SetDefaultGateway..f = local_unnamed_addr constant %functionDescriptor.0 { i64 ptrtoint ({ i64, i64 } (i8*, i64, i64, i64, i64, i8)* @command_line_arguments.SetDefaultGateway to i64) }
@const.161 = private constant [20 x i8] c"add %s gw %s dev %s\00", align 1
@command_line_arguments.AddRoute..f = local_unnamed_addr constant %functionDescriptor.0 { i64 ptrtoint ({ i64, i64 } (i8*, %IP.0*, %IP.0*, i64, i64, i8)* @command_line_arguments.AddRoute to i64) }
@const.163 = private constant [20 x i8] c"del %s gw %s dev %s\00", align 1
@command_line_arguments.DelRoute..f = local_unnamed_addr constant %functionDescriptor.0 { i64 ptrtoint ({ i64, i64 } (i8*, %IP.0*, %IP.0*, i64, i64, i8)* @command_line_arguments.DelRoute to i64) }
@const.166 = private constant [16 x i8] c"/proc/net/route\00", align 1
@type...1os.File = external constant %PtrType.0
@pimt..interface.4Read.0func.8.6.7uint8.9.8int.3error.9.5..os.File = weak constant { %_type.0*, void ({ i64, %error.0 }*, i8*, %File.0*, { i8*, i64, i64 }*)* } { %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1os.File, i32 0, i32 0), void ({ i64, %error.0 }*, i8*, %File.0*, { i8*, i64, i64 }*)* @os.File.Read }, comdat
@command_line_arguments.GetNetGateway..func1..f = internal constant %functionDescriptor.0 { i64 ptrtoint (i8 (i8*, i64, i64)* @command_line_arguments.GetNetGateway..func1 to i64) }
@const.170 = private constant [27 x i8] c"Parse error: Line too long\00", align 1
@type...1bytes.Buffer = external constant %PtrType.0
@pimt..interface.4Read.0func.8.6.7uint8.9.8int.3error.9.5..bytes.Buffer = weak constant { %_type.0*, void ({ i64, %error.0 }*, i8*, %Buffer.0*, { i8*, i64, i64 }*)* } { %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1bytes.Buffer, i32 0, i32 0), void ({ i64, %error.0 }*, i8*, %Buffer.0*, { i8*, i64, i64 }*)* @bytes.Buffer.Read }, comdat
@bufio.ScanWords..f = external constant %functionDescriptor.0
@command_line_arguments.GetNetGateway..f = local_unnamed_addr constant %functionDescriptor.0 { i64 ptrtoint (void ({ { i8*, i64 }, { i8*, i64 }, %error.0 }*, i8*)* @command_line_arguments.GetNetGateway to i64) }
@const.176 = private constant [34 x i8] c"Deleted route to %s via %s on %s\0A\00", align 1
@const.178 = private constant [40 x i8] c"Error: Route delete %s (%s on %s) - %s\0A\00", align 1
@const.180 = private constant [4 x i8] c"add\00", align 1
@const.181 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @const.180, i32 0, i32 0), i64 3 }
@const.182 = private constant [8 x i8] c"default\00", align 1
@const.183 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.182, i32 0, i32 0), i64 7 }
@type...63x.7string = weak constant %ArrayType.0 { %_type.0 { i64 48, i64 40, i32 297061699, i8 17, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..wa, i32 0, i32 0), { i8*, i64 }* @go..C197, %uncommonType.0* null, %_type.0* null }, %_type.0* @string..d, %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7string, i32 0, i32 0), i64 3 }, comdat
@gcbits..wa = weak constant [1 x i8] c"\15", comdat
@const.184 = private constant [10 x i8] c"[3]string\00", align 1
@go..C197 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @const.184, i32 0, i32 0), i64 9 }
@type...6.7string = weak constant %SliceType.0 { %_type.0 { i64 24, i64 8, i32 -1998952792, i8 23, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C198, %uncommonType.0* null, %_type.0* null }, %_type.0* @string..d }, comdat
@const.185 = private constant [9 x i8] c"[]string\00", align 1
@go..C198 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @const.185, i32 0, i32 0), i64 8 }
@command_line_arguments..command_line_arguments.serverConn..d = constant %StructType.0 { %_type.0 { i64 80, i64 56, i32 -533158323, i8 25, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..Cc, i32 0, i32 0), { i8*, i64 }* @go..C199, %uncommonType.0* @go..C203, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.serverConn, i32 0, i32 0) }, %IPST.45 { %structField.0* getelementptr inbounds ([7 x %structField.0], [7 x %structField.0]* @go..C420, i32 0, i32 0), i64 7, i64 7 } }
@gcbits..Cc = weak constant [1 x i8] c"[", comdat
@const.186 = private constant [42 x i8] c"\09command_line_arguments\09subnet.serverConn\00", align 1
@go..C199 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([42 x i8], [42 x i8]* @const.186, i32 0, i32 0), i64 41 }
@const.187 = private constant [11 x i8] c"serverConn\00", align 1
@go..C200 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @const.187, i32 0, i32 0), i64 10 }
@go..C201 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@go..C202 = internal global [1 x %method.0] zeroinitializer
@go..C203 = internal constant %uncommonType.0 { { i8*, i64 }* @go..C200, { i8*, i64 }* @go..C201, %IPST.43 { %method.0* getelementptr inbounds ([1 x %method.0], [1 x %method.0]* @go..C202, i32 0, i32 0), i64 0, i64 0 } }
@type...1command_line_arguments.serverConn = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 59401433, i8 54, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.3*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C204, %uncommonType.0* @go..C404, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1.1command_line_arguments.serverConn, i32 0, i32 0) }, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments..command_line_arguments.serverConn..d, i32 0, i32 0) }, comdat
@const.188 = private constant [43 x i8] c"*\09command_line_arguments\09subnet.serverConn\00", align 1
@go..C204 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([43 x i8], [43 x i8]* @const.188, i32 0, i32 0), i64 42 }
@const.189 = private constant [9 x i8] c"hadError\00", align 1
@go..C205 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @const.189, i32 0, i32 0), i64 8 }
@go..C206 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@type..func.8bool.9.8.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 1966551592, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C207, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.44 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C208, i32 0, i32 0), i64 1, i64 1 }, %IPST.44 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C209, i32 0, i32 0), i64 0, i64 0 } }, comdat
@const.190 = private constant [11 x i8] c"func(bool)\00", align 1
@go..C207 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @const.190, i32 0, i32 0), i64 10 }
@go..C208 = internal global [1 x %_type.0*] [%_type.0* @bool..d]
@go..C209 = internal global [1 x %_type.0*] zeroinitializer
@type..func.8.1command_line_arguments.serverConn.3bool.9.8.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 1538981736, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C210, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.44 { %_type.0** getelementptr inbounds ([2 x %_type.0*], [2 x %_type.0*]* @go..C211, i32 0, i32 0), i64 2, i64 2 }, %IPST.44 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C212, i32 0, i32 0), i64 0, i64 0 } }, comdat
@const.191 = private constant [55 x i8] c"func(*\09command_line_arguments\09subnet.serverConn, bool)\00", align 1
@go..C210 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([55 x i8], [55 x i8]* @const.191, i32 0, i32 0), i64 54 }
@go..C211 = internal global [2 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.serverConn, i32 0, i32 0), %_type.0* @bool..d]
@go..C212 = internal global [1 x %_type.0*] zeroinitializer
@const.192 = private constant [11 x i8] c"initClient\00", align 1
@go..C213 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @const.192, i32 0, i32 0), i64 10 }
@go..C214 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@type..func.8.1command_line_arguments.Server.9.8.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 1126558504, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C215, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.44 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C372, i32 0, i32 0), i64 1, i64 1 }, %IPST.44 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C373, i32 0, i32 0), i64 0, i64 0 } }, comdat
@const.193 = private constant [45 x i8] c"func(*\09command_line_arguments\09subnet.Server)\00", align 1
@go..C215 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([45 x i8], [45 x i8]* @const.193, i32 0, i32 0), i64 44 }
@type...1command_line_arguments.Server = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 -1843843239, i8 54, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.3*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C216, %uncommonType.0* @go..C274, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1.1command_line_arguments.Server, i32 0, i32 0) }, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.Server..d, i32 0, i32 0) }, comdat
@const.194 = private constant [39 x i8] c"*\09command_line_arguments\09subnet.Server\00", align 1
@go..C216 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([39 x i8], [39 x i8]* @const.194, i32 0, i32 0), i64 38 }
@go..C217 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.4, i32 0, i32 0), i64 5 }
@type..func.8.1command_line_arguments.Server.9.8error.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 -1979670296, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C218, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.44 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C219, i32 0, i32 0), i64 1, i64 1 }, %IPST.44 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C220, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.195 = private constant [51 x i8] c"func(*\09command_line_arguments\09subnet.Server) error\00", align 1
@go..C218 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([51 x i8], [51 x i8]* @const.195, i32 0, i32 0), i64 50 }
@go..C219 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Server, i32 0, i32 0)]
@go..C220 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @error..d, i32 0, i32 0)]
@const.196 = private constant [5 x i8] c"Init\00", align 1
@go..C221 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.196, i32 0, i32 0), i64 4 }
@type..func.8string.9.8error.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 1646758152, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C222, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.44 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C223, i32 0, i32 0), i64 1, i64 1 }, %IPST.44 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C224, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.197 = private constant [19 x i8] c"func(string) error\00", align 1
@go..C222 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @const.197, i32 0, i32 0), i64 18 }
@go..C223 = internal global [1 x %_type.0*] [%_type.0* @string..d]
@go..C224 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @error..d, i32 0, i32 0)]
@type..func.8.1command_line_arguments.Server.3string.9.8error.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 -1063631000, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C225, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.44 { %_type.0** getelementptr inbounds ([2 x %_type.0*], [2 x %_type.0*]* @go..C226, i32 0, i32 0), i64 2, i64 2 }, %IPST.44 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C227, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.198 = private constant [59 x i8] c"func(*\09command_line_arguments\09subnet.Server, string) error\00", align 1
@go..C225 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([59 x i8], [59 x i8]* @const.198, i32 0, i32 0), i64 58 }
@go..C226 = internal global [2 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Server, i32 0, i32 0), %_type.0* @string..d]
@go..C227 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @error..d, i32 0, i32 0)]
@go..C228 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @const.13, i32 0, i32 0), i64 3 }
@const.199 = private constant [14 x i8] c"acceptRoutine\00", align 1
@go..C229 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @const.199, i32 0, i32 0), i64 13 }
@go..C230 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@const.200 = private constant [16 x i8] c"dispatchRoutine\00", align 1
@go..C231 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @const.200, i32 0, i32 0), i64 15 }
@go..C232 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@const.201 = private constant [17 x i8] c"enrollClientConn\00", align 1
@go..C233 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @const.201, i32 0, i32 0), i64 16 }
@go..C234 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@type..func.8.1command_line_arguments.serverConn.9.8.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 1900845864, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C235, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.44 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C236, i32 0, i32 0), i64 1, i64 1 }, %IPST.44 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C237, i32 0, i32 0), i64 0, i64 0 } }, comdat
@const.202 = private constant [49 x i8] c"func(*\09command_line_arguments\09subnet.serverConn)\00", align 1
@go..C235 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([49 x i8], [49 x i8]* @const.202, i32 0, i32 0), i64 48 }
@go..C236 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.serverConn, i32 0, i32 0)]
@go..C237 = internal global [1 x %_type.0*] zeroinitializer
@type..func.8.1command_line_arguments.Server.3.1command_line_arguments.serverConn.9.8.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 633282920, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C238, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.44 { %_type.0** getelementptr inbounds ([2 x %_type.0*], [2 x %_type.0*]* @go..C239, i32 0, i32 0), i64 2, i64 2 }, %IPST.44 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C240, i32 0, i32 0), i64 0, i64 0 } }, comdat
@const.203 = private constant [89 x i8] c"func(*\09command_line_arguments\09subnet.Server, *\09command_line_arguments\09subnet.serverConn)\00", align 1
@go..C238 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([89 x i8], [89 x i8]* @const.203, i32 0, i32 0), i64 88 }
@go..C239 = internal global [2 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Server, i32 0, i32 0), %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.serverConn, i32 0, i32 0)]
@go..C240 = internal global [1 x %_type.0*] zeroinitializer
@const.204 = private constant [13 x i8] c"handleClient\00", align 1
@go..C241 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @const.204, i32 0, i32 0), i64 12 }
@go..C242 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@type..func.8net.Conn.9.8.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 -893170104, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C243, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.44 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C244, i32 0, i32 0), i64 1, i64 1 }, %IPST.44 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C245, i32 0, i32 0), i64 0, i64 0 } }, comdat
@const.205 = private constant [20 x i8] c"func(\09net\09net.Conn)\00", align 1
@go..C243 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @const.205, i32 0, i32 0), i64 19 }
@go..C244 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @net.Conn..d, i32 0, i32 0)]
@go..C245 = internal global [1 x %_type.0*] zeroinitializer
@type..func.8.1command_line_arguments.Server.3net.Conn.9.8.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 -659781720, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C246, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.44 { %_type.0** getelementptr inbounds ([2 x %_type.0*], [2 x %_type.0*]* @go..C247, i32 0, i32 0), i64 2, i64 2 }, %IPST.44 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C248, i32 0, i32 0), i64 0, i64 0 } }, comdat
@const.206 = private constant [60 x i8] c"func(*\09command_line_arguments\09subnet.Server, \09net\09net.Conn)\00", align 1
@go..C246 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([60 x i8], [60 x i8]* @const.206, i32 0, i32 0), i64 59 }
@go..C247 = internal global [2 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Server, i32 0, i32 0), %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @net.Conn..d, i32 0, i32 0)]
@go..C248 = internal global [1 x %_type.0*] zeroinitializer
@const.207 = private constant [17 x i8] c"removeClientConn\00", align 1
@go..C249 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @const.207, i32 0, i32 0), i64 16 }
@go..C250 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@type..func.8int.9.8.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 -2010241976, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C251, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.44 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C252, i32 0, i32 0), i64 1, i64 1 }, %IPST.44 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C253, i32 0, i32 0), i64 0, i64 0 } }, comdat
@const.208 = private constant [10 x i8] c"func(int)\00", align 1
@go..C251 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @const.208, i32 0, i32 0), i64 9 }
@go..C252 = internal global [1 x %_type.0*] [%_type.0* @int..d]
@go..C253 = internal global [1 x %_type.0*] zeroinitializer
@type..func.8.1command_line_arguments.Server.3int.9.8.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 1401041832, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C254, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.44 { %_type.0** getelementptr inbounds ([2 x %_type.0*], [2 x %_type.0*]* @go..C255, i32 0, i32 0), i64 2, i64 2 }, %IPST.44 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C256, i32 0, i32 0), i64 0, i64 0 } }, comdat
@const.209 = private constant [50 x i8] c"func(*\09command_line_arguments\09subnet.Server, int)\00", align 1
@go..C254 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([50 x i8], [50 x i8]* @const.209, i32 0, i32 0), i64 49 }
@go..C255 = internal global [2 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Server, i32 0, i32 0), %_type.0* @int..d]
@go..C256 = internal global [1 x %_type.0*] zeroinitializer
@go..C257 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.159, i32 0, i32 0), i64 5 }
@go..C258 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@type..func.8.1command_line_arguments.IPPacket.9.8.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 666730280, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C259, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.44 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C260, i32 0, i32 0), i64 1, i64 1 }, %IPST.44 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C261, i32 0, i32 0), i64 0, i64 0 } }, comdat
@const.210 = private constant [47 x i8] c"func(*\09command_line_arguments\09subnet.IPPacket)\00", align 1
@go..C259 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([47 x i8], [47 x i8]* @const.210, i32 0, i32 0), i64 46 }
@go..C260 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.IPPacket, i32 0, i32 0)]
@go..C261 = internal global [1 x %_type.0*] zeroinitializer
@type..func.8.1command_line_arguments.Server.3.1command_line_arguments.IPPacket.9.8.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 -1834948248, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C262, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.44 { %_type.0** getelementptr inbounds ([2 x %_type.0*], [2 x %_type.0*]* @go..C263, i32 0, i32 0), i64 2, i64 2 }, %IPST.44 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C264, i32 0, i32 0), i64 0, i64 0 } }, comdat
@const.211 = private constant [87 x i8] c"func(*\09command_line_arguments\09subnet.Server, *\09command_line_arguments\09subnet.IPPacket)\00", align 1
@go..C262 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([87 x i8], [87 x i8]* @const.211, i32 0, i32 0), i64 86 }
@go..C263 = internal global [2 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Server, i32 0, i32 0), %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.IPPacket, i32 0, i32 0)]
@go..C264 = internal global [1 x %_type.0*] zeroinitializer
@const.212 = private constant [17 x i8] c"setAddrForClient\00", align 1
@go..C265 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @const.212, i32 0, i32 0), i64 16 }
@go..C266 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@type..func.8int.3net.IP.9.8.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 553545096, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C267, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.44 { %_type.0** getelementptr inbounds ([2 x %_type.0*], [2 x %_type.0*]* @go..C268, i32 0, i32 0), i64 2, i64 2 }, %IPST.44 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C269, i32 0, i32 0), i64 0, i64 0 } }, comdat
@const.213 = private constant [23 x i8] c"func(int, \09net\09net.IP)\00", align 1
@go..C267 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.213, i32 0, i32 0), i64 22 }
@go..C268 = internal global [2 x %_type.0*] [%_type.0* @int..d, %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @net.IP..d, i32 0, i32 0)]
@go..C269 = internal global [1 x %_type.0*] zeroinitializer
@type..func.8.1command_line_arguments.Server.3int.3net.IP.9.8.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 -2061318616, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C270, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.44 { %_type.0** getelementptr inbounds ([3 x %_type.0*], [3 x %_type.0*]* @go..C271, i32 0, i32 0), i64 3, i64 3 }, %IPST.44 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C272, i32 0, i32 0), i64 0, i64 0 } }, comdat
@const.214 = private constant [63 x i8] c"func(*\09command_line_arguments\09subnet.Server, int, \09net\09net.IP)\00", align 1
@go..C270 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([63 x i8], [63 x i8]* @const.214, i32 0, i32 0), i64 62 }
@go..C271 = internal global [3 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Server, i32 0, i32 0), %_type.0* @int..d, %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @net.IP..d, i32 0, i32 0)]
@go..C272 = internal global [1 x %_type.0*] zeroinitializer
@go..C273 = internal global [10 x %method.0] [%method.0 { { i8*, i64 }* @go..C217, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.9.8error.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.Server.9.8error.9, i32 0, i32 0), i8* bitcast ({ i64, i64 } (i8*, %Server.0*)* @command_line_arguments.Server.Close to i8*) }, %method.0 { { i8*, i64 }* @go..C221, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8string.9.8error.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.Server.3string.9.8error.9, i32 0, i32 0), i8* bitcast ({ i64, i64 } (i8*, %Server.0*, i64, i64)* @command_line_arguments.Server.Init to i8*) }, %method.0 { { i8*, i64 }* @go..C228, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.9.8.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.Server.9.8.9, i32 0, i32 0), i8* bitcast (void (i8*, %Server.0*)* @command_line_arguments.Server.Run to i8*) }, %method.0 { { i8*, i64 }* @go..C229, { i8*, i64 }* @go..C230, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.9.8.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.Server.9.8.9, i32 0, i32 0), i8* bitcast (void (i8*, %Server.0*)* @command_line_arguments.Server.acceptRoutine to i8*) }, %method.0 { { i8*, i64 }* @go..C231, { i8*, i64 }* @go..C232, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.9.8.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.Server.9.8.9, i32 0, i32 0), i8* bitcast (void (i8*, %Server.0*)* @command_line_arguments.Server.dispatchRoutine to i8*) }, %method.0 { { i8*, i64 }* @go..C233, { i8*, i64 }* @go..C234, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.serverConn.9.8.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.Server.3.1command_line_arguments.serverConn.9.8.9, i32 0, i32 0), i8* bitcast (void (i8*, %Server.0*, %.command-line-arguments.serverConn.0*)* @command_line_arguments.Server.enrollClientConn to i8*) }, %method.0 { { i8*, i64 }* @go..C241, { i8*, i64 }* @go..C242, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8net.Conn.9.8.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.Server.3net.Conn.9.8.9, i32 0, i32 0), i8* bitcast (void (i8*, %Server.0*, i64, i64)* @command_line_arguments.Server.handleClient to i8*) }, %method.0 { { i8*, i64 }* @go..C249, { i8*, i64 }* @go..C250, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8int.9.8.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.Server.3int.9.8.9, i32 0, i32 0), i8* bitcast (void (i8*, %Server.0*, i64)* @command_line_arguments.Server.removeClientConn to i8*) }, %method.0 { { i8*, i64 }* @go..C257, { i8*, i64 }* @go..C258, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.IPPacket.9.8.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.Server.3.1command_line_arguments.IPPacket.9.8.9, i32 0, i32 0), i8* bitcast (void (i8*, %Server.0*, %IPPacket.0*)* @command_line_arguments.Server.route to i8*) }, %method.0 { { i8*, i64 }* @go..C265, { i8*, i64 }* @go..C266, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8int.3net.IP.9.8.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.Server.3int.3net.IP.9.8.9, i32 0, i32 0), i8* bitcast (void (i8*, %Server.0*, i64, %IP.0*)* @command_line_arguments.Server.setAddrForClient to i8*) }]
@go..C274 = internal constant %uncommonType.0 { { i8*, i64 }* null, { i8*, i64 }* null, %IPST.43 { %method.0* getelementptr inbounds ([10 x %method.0], [10 x %method.0]* @go..C273, i32 0, i32 0), i64 10, i64 10 } }
@type...1.1command_line_arguments.Server = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 563279257, i8 54, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.3*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C275, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Server, i32 0, i32 0) }, comdat
@const.215 = private constant [40 x i8] c"**\09command_line_arguments\09subnet.Server\00", align 1
@go..C275 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([40 x i8], [40 x i8]* @const.215, i32 0, i32 0), i64 39 }
@command_line_arguments.Server..d = constant %StructType.0 { %_type.0 { i64 200, i64 184, i32 -115240203, i8 25, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @gcbits..pBDdf, i32 0, i32 0), { i8*, i64 }* @go..C276, %uncommonType.0* @go..C280, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Server, i32 0, i32 0) }, %IPST.45 { %structField.0* getelementptr inbounds ([15 x %structField.0], [15 x %structField.0]* @go..C371, i32 0, i32 0), i64 15, i64 15 } }
@gcbits..pBDdf = weak constant [3 x i8] c"O\F3Q", comdat
@const.216 = private constant [38 x i8] c"\09command_line_arguments\09subnet.Server\00", align 1
@go..C276 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([38 x i8], [38 x i8]* @const.216, i32 0, i32 0), i64 37 }
@const.217 = private constant [7 x i8] c"Server\00", align 1
@go..C277 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.217, i32 0, i32 0), i64 6 }
@go..C278 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@go..C279 = internal global [1 x %method.0] zeroinitializer
@go..C280 = internal constant %uncommonType.0 { { i8*, i64 }* @go..C277, { i8*, i64 }* @go..C278, %IPST.43 { %method.0* getelementptr inbounds ([1 x %method.0], [1 x %method.0]* @go..C279, i32 0, i32 0), i64 0, i64 0 } }
@go..C281 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.52, i32 0, i32 0), i64 7 }
@go..C282 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@const.218 = private constant [12 x i8] c"tlsListener\00", align 1
@go..C283 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @const.218, i32 0, i32 0), i64 11 }
@go..C284 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@net.Listener..d = external constant %InterfaceType.0
@go..C285 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @const.34, i32 0, i32 0), i64 9 }
@go..C286 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@go..C287 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @const.37, i32 0, i32 0), i64 12 }
@go..C288 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@go..C289 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @const.38, i32 0, i32 0), i64 14 }
@go..C290 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@const.219 = private constant [18 x i8] c"clientIDByAddress\00", align 1
@go..C291 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @const.219, i32 0, i32 0), i64 17 }
@go..C292 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@type..map.6string.7int = weak constant %MapType.0 { %_type.0 { i64 8, i64 8, i32 -1122248756, i8 21, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C293, %uncommonType.0* null, %_type.0* null }, %_type.0* @string..d, %_type.0* @int..d, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7int.2overflow.0.1.4void.5.5, i32 0, i32 0), %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7int.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7int.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5, i32 0, i32 0), i8 16, i8 0, i8 8, i8 0, i16 208, i8 1, i8 1 }, comdat
@const.220 = private constant [15 x i8] c"map[string]int\00", align 1
@go..C293 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @const.220, i32 0, i32 0), i64 14 }
@type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7int.2overflow.0.1.4void.5.5 = weak constant %StructType.0 { %_type.0 { i64 208, i64 208, i32 -1581031772, i8 25, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @gcbits..kwkbaba, i32 0, i32 0), { i8*, i64 }* @go..C294, %uncommonType.0* null, %_type.0* null }, %IPST.45 { %structField.0* getelementptr inbounds ([4 x %structField.0], [4 x %structField.0]* @go..C303, i32 0, i32 0), i64 4, i64 4 } }, comdat
@gcbits..kwkbaba = weak constant [4 x i8] c"\AA\AA\00\02", comdat
@const.221 = private constant [71 x i8] c"struct { topbits [8]uint8; keys [8]string; values [8]int; overflow * }\00", align 1
@go..C294 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([71 x i8], [71 x i8]* @const.221, i32 0, i32 0), i64 70 }
@const.222 = private constant [8 x i8] c"topbits\00", align 1
@go..C295 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.222, i32 0, i32 0), i64 7 }
@type...68x.7uint8 = weak constant %ArrayType.0 { %_type.0 { i64 8, i64 0, i32 529264193, i8 -111, i8 1, i8 1, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* null, { i8*, i64 }* @go..C296, %uncommonType.0* null, %_type.0* null }, %_type.0* @uint8..d, %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7uint8, i32 0, i32 0), i64 8 }, comdat
@const.223 = private constant [9 x i8] c"[8]uint8\00", align 1
@go..C296 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @const.223, i32 0, i32 0), i64 8 }
@const.224 = private constant [5 x i8] c"keys\00", align 1
@go..C297 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.224, i32 0, i32 0), i64 4 }
@type...68x.7string = weak constant %ArrayType.0 { %_type.0 { i64 128, i64 120, i32 297061699, i8 17, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @gcbits..wkwa, i32 0, i32 0), { i8*, i64 }* @go..C298, %uncommonType.0* null, %_type.0* null }, %_type.0* @string..d, %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7string, i32 0, i32 0), i64 8 }, comdat
@gcbits..wkwa = weak constant [2 x i8] c"UU", comdat
@const.225 = private constant [10 x i8] c"[8]string\00", align 1
@go..C298 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @const.225, i32 0, i32 0), i64 9 }
@const.226 = private constant [7 x i8] c"values\00", align 1
@go..C299 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.226, i32 0, i32 0), i64 6 }
@type...68x.7int = weak constant %ArrayType.0 { %_type.0 { i64 64, i64 0, i32 1753408083, i8 -111, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* null, { i8*, i64 }* @go..C300, %uncommonType.0* null, %_type.0* null }, %_type.0* @int..d, %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7int, i32 0, i32 0), i64 8 }, comdat
@const.227 = private constant [7 x i8] c"[8]int\00", align 1
@go..C300 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.227, i32 0, i32 0), i64 6 }
@type...6.7int = weak constant %SliceType.0 { %_type.0 { i64 24, i64 8, i32 876704048, i8 23, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C301, %uncommonType.0* null, %_type.0* null }, %_type.0* @int..d }, comdat
@const.228 = private constant [6 x i8] c"[]int\00", align 1
@go..C301 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.228, i32 0, i32 0), i64 5 }
@const.229 = private constant [9 x i8] c"overflow\00", align 1
@go..C302 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @const.229, i32 0, i32 0), i64 8 }
@unsafe.Pointer..d = external constant %_type.0
@go..C303 = internal global [4 x %structField.0] [%structField.0 { { i8*, i64 }* @go..C295, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%ArrayType.0, %ArrayType.0* @type...68x.7uint8, i32 0, i32 0), { i8*, i64 }* null, i64 0 }, %structField.0 { { i8*, i64 }* @go..C297, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%ArrayType.0, %ArrayType.0* @type...68x.7string, i32 0, i32 0), { i8*, i64 }* null, i64 16 }, %structField.0 { { i8*, i64 }* @go..C299, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%ArrayType.0, %ArrayType.0* @type...68x.7int, i32 0, i32 0), { i8*, i64 }* null, i64 272 }, %structField.0 { { i8*, i64 }* @go..C302, { i8*, i64 }* null, %_type.0* @unsafe.Pointer..d, { i8*, i64 }* null, i64 400 }]
@type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7int.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7int.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5 = weak constant %StructType.0 { %_type.0 { i64 48, i64 48, i32 -1764337180, i8 25, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..mb, i32 0, i32 0), { i8*, i64 }* @go..C304, %uncommonType.0* null, %_type.0* null }, %IPST.45 { %structField.0* getelementptr inbounds ([9 x %structField.0], [9 x %structField.0]* @go..C330, i32 0, i32 0), i64 9, i64 9 } }, comdat
@gcbits..mb = weak constant [1 x i8] c",", comdat
@const.230 = private constant [268 x i8] c"struct { count int; flags uint8; B uint8; noverflow uint16; hash0 uint32; buckets *struct { topbits [8]uint8; keys [8]string; values [8]int; overflow * }; oldbuckets *struct { topbits [8]uint8; keys [8]string; values [8]int; overflow * }; nevacuate uintptr; extra * }\00", align 1
@go..C304 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([268 x i8], [268 x i8]* @const.230, i32 0, i32 0), i64 267 }
@const.231 = private constant [6 x i8] c"count\00", align 1
@go..C305 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.231, i32 0, i32 0), i64 5 }
@const.232 = private constant [6 x i8] c"flags\00", align 1
@go..C306 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.232, i32 0, i32 0), i64 5 }
@const.233 = private constant [2 x i8] c"B\00", align 1
@go..C307 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @const.233, i32 0, i32 0), i64 1 }
@const.234 = private constant [10 x i8] c"noverflow\00", align 1
@go..C308 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @const.234, i32 0, i32 0), i64 9 }
@uint16..d = weak constant %_type.0 { i64 2, i64 0, i32 76732288, i8 -119, i8 2, i8 2, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash16..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal16..f to %__go_descriptor.3*), i8* null, { i8*, i64 }* @go..C309, %uncommonType.0* @go..C312, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1uint16, i32 0, i32 0) }, comdat
@runtime.memhash16..f = external constant %functionDescriptor.0
@runtime.memequal16..f = external constant %functionDescriptor.0
@const.235 = private constant [7 x i8] c"uint16\00", align 1
@go..C309 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.235, i32 0, i32 0), i64 6 }
@go..C310 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.235, i32 0, i32 0), i64 6 }
@go..C311 = internal global [1 x %method.0] zeroinitializer
@go..C312 = internal constant %uncommonType.0 { { i8*, i64 }* @go..C310, { i8*, i64 }* null, %IPST.43 { %method.0* getelementptr inbounds ([1 x %method.0], [1 x %method.0]* @go..C311, i32 0, i32 0), i64 0, i64 0 } }
@type...1uint16 = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 1227716617, i8 54, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.3*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C313, %uncommonType.0* null, %_type.0* null }, %_type.0* @uint16..d }, comdat
@const.236 = private constant [8 x i8] c"*uint16\00", align 1
@go..C313 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.236, i32 0, i32 0), i64 7 }
@const.237 = private constant [6 x i8] c"hash0\00", align 1
@go..C314 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.237, i32 0, i32 0), i64 5 }
@uint32..d = weak constant %_type.0 { i64 4, i64 0, i32 278357906, i8 -118, i8 4, i8 4, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash32..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal32..f to %__go_descriptor.3*), i8* null, { i8*, i64 }* @go..C315, %uncommonType.0* @go..C318, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1uint32, i32 0, i32 0) }, comdat
@runtime.memhash32..f = external constant %functionDescriptor.0
@runtime.memequal32..f = external constant %functionDescriptor.0
@const.238 = private constant [7 x i8] c"uint32\00", align 1
@go..C315 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.238, i32 0, i32 0), i64 6 }
@go..C316 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.238, i32 0, i32 0), i64 6 }
@go..C317 = internal global [1 x %method.0] zeroinitializer
@go..C318 = internal constant %uncommonType.0 { { i8*, i64 }* @go..C316, { i8*, i64 }* null, %IPST.43 { %method.0* getelementptr inbounds ([1 x %method.0], [1 x %method.0]* @go..C317, i32 0, i32 0), i64 0, i64 0 } }
@type...1uint32 = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 158759209, i8 54, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.3*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C319, %uncommonType.0* null, %_type.0* null }, %_type.0* @uint32..d }, comdat
@const.239 = private constant [8 x i8] c"*uint32\00", align 1
@go..C319 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.239, i32 0, i32 0), i64 7 }
@const.240 = private constant [8 x i8] c"buckets\00", align 1
@go..C320 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.240, i32 0, i32 0), i64 7 }
@type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7int.2overflow.0.1.4void.5.5 = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 473295433, i8 54, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.3*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C321, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7int.2overflow.0.1.4void.5.5, i32 0, i32 0) }, comdat
@const.241 = private constant [72 x i8] c"*struct { topbits [8]uint8; keys [8]string; values [8]int; overflow * }\00", align 1
@go..C321 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([72 x i8], [72 x i8]* @const.241, i32 0, i32 0), i64 71 }
@const.242 = private constant [11 x i8] c"oldbuckets\00", align 1
@go..C322 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @const.242, i32 0, i32 0), i64 10 }
@const.243 = private constant [10 x i8] c"nevacuate\00", align 1
@go..C323 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @const.243, i32 0, i32 0), i64 9 }
@uintptr..d = weak constant %_type.0 { i64 8, i64 0, i32 -1488193301, i8 -116, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.3*), i8* null, { i8*, i64 }* @go..C324, %uncommonType.0* @go..C327, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1uintptr, i32 0, i32 0) }, comdat
@const.244 = private constant [8 x i8] c"uintptr\00", align 1
@go..C324 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.244, i32 0, i32 0), i64 7 }
@go..C325 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.244, i32 0, i32 0), i64 7 }
@go..C326 = internal global [1 x %method.0] zeroinitializer
@go..C327 = internal constant %uncommonType.0 { { i8*, i64 }* @go..C325, { i8*, i64 }* null, %IPST.43 { %method.0* getelementptr inbounds ([1 x %method.0], [1 x %method.0]* @go..C326, i32 0, i32 0), i64 0, i64 0 } }
@type...1uintptr = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 1958710969, i8 54, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.3*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C328, %uncommonType.0* null, %_type.0* null }, %_type.0* @uintptr..d }, comdat
@const.245 = private constant [9 x i8] c"*uintptr\00", align 1
@go..C328 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @const.245, i32 0, i32 0), i64 8 }
@const.246 = private constant [6 x i8] c"extra\00", align 1
@go..C329 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.246, i32 0, i32 0), i64 5 }
@go..C330 = internal global [9 x %structField.0] [%structField.0 { { i8*, i64 }* @go..C305, { i8*, i64 }* null, %_type.0* @int..d, { i8*, i64 }* null, i64 0 }, %structField.0 { { i8*, i64 }* @go..C306, { i8*, i64 }* null, %_type.0* @uint8..d, { i8*, i64 }* null, i64 16 }, %structField.0 { { i8*, i64 }* @go..C307, { i8*, i64 }* null, %_type.0* @uint8..d, { i8*, i64 }* null, i64 18 }, %structField.0 { { i8*, i64 }* @go..C308, { i8*, i64 }* null, %_type.0* @uint16..d, { i8*, i64 }* null, i64 20 }, %structField.0 { { i8*, i64 }* @go..C314, { i8*, i64 }* null, %_type.0* @uint32..d, { i8*, i64 }* null, i64 24 }, %structField.0 { { i8*, i64 }* @go..C320, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7int.2overflow.0.1.4void.5.5, i32 0, i32 0), { i8*, i64 }* null, i64 32 }, %structField.0 { { i8*, i64 }* @go..C322, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7int.2overflow.0.1.4void.5.5, i32 0, i32 0), { i8*, i64 }* null, i64 48 }, %structField.0 { { i8*, i64 }* @go..C323, { i8*, i64 }* null, %_type.0* @uintptr..d, { i8*, i64 }* null, i64 64 }, %structField.0 { { i8*, i64 }* @go..C329, { i8*, i64 }* null, %_type.0* @unsafe.Pointer..d, { i8*, i64 }* null, i64 80 }]
@const.247 = private constant [8 x i8] c"clients\00", align 1
@go..C331 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.247, i32 0, i32 0), i64 7 }
@go..C332 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@type..map.6int.7.1command_line_arguments.serverConn = weak constant %MapType.0 { %_type.0 { i64 8, i64 8, i32 936105483, i8 21, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C333, %uncommonType.0* null, %_type.0* null }, %_type.0* @int..d, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.serverConn, i32 0, i32 0), %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7int.2values.0.68x.7.1command_line_arguments.serverConn.2overflow.0.1.4void.5.5, i32 0, i32 0), %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7int.2values.0.68x.7.1command_line_arguments.serverConn.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7int.2values.0.68x.7.1command_line_arguments.serverConn.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5, i32 0, i32 0), i8 8, i8 0, i8 8, i8 0, i16 144, i8 1, i8 0 }, comdat
@const.248 = private constant [51 x i8] c"map[int]*\09command_line_arguments\09subnet.serverConn\00", align 1
@go..C333 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([51 x i8], [51 x i8]* @const.248, i32 0, i32 0), i64 50 }
@type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7int.2values.0.68x.7.1command_line_arguments.serverConn.2overflow.0.1.4void.5.5 = weak constant %StructType.0 { %_type.0 { i64 144, i64 144, i32 1688500100, i8 25, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @gcbits..aqGha, i32 0, i32 0), { i8*, i64 }* @go..C334, %uncommonType.0* null, %_type.0* null }, %IPST.45 { %structField.0* getelementptr inbounds ([4 x %structField.0], [4 x %structField.0]* @go..C341, i32 0, i32 0), i64 4, i64 4 } }, comdat
@gcbits..aqGha = weak constant [3 x i8] c"\00\FE\03", comdat
@const.249 = private constant [107 x i8] c"struct { topbits [8]uint8; keys [8]int; values [8]*\09command_line_arguments\09subnet.serverConn; overflow * }\00", align 1
@go..C334 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([107 x i8], [107 x i8]* @const.249, i32 0, i32 0), i64 106 }
@go..C335 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.222, i32 0, i32 0), i64 7 }
@go..C336 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.224, i32 0, i32 0), i64 4 }
@go..C337 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.226, i32 0, i32 0), i64 6 }
@type...68x.7.1command_line_arguments.serverConn = weak constant %ArrayType.0 { %_type.0 { i64 64, i64 64, i32 118802881, i8 17, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..Gh, i32 0, i32 0), { i8*, i64 }* @go..C338, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.serverConn, i32 0, i32 0), %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7.1command_line_arguments.serverConn, i32 0, i32 0), i64 8 }, comdat
@gcbits..Gh = weak constant [1 x i8] c"\FF", comdat
@const.250 = private constant [46 x i8] c"[8]*\09command_line_arguments\09subnet.serverConn\00", align 1
@go..C338 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([46 x i8], [46 x i8]* @const.250, i32 0, i32 0), i64 45 }
@type...6.7.1command_line_arguments.serverConn = weak constant %SliceType.0 { %_type.0 { i64 24, i64 8, i32 59401447, i8 23, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C339, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.serverConn, i32 0, i32 0) }, comdat
@const.251 = private constant [45 x i8] c"[]*\09command_line_arguments\09subnet.serverConn\00", align 1
@go..C339 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([45 x i8], [45 x i8]* @const.251, i32 0, i32 0), i64 44 }
@go..C340 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @const.229, i32 0, i32 0), i64 8 }
@go..C341 = internal global [4 x %structField.0] [%structField.0 { { i8*, i64 }* @go..C335, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%ArrayType.0, %ArrayType.0* @type...68x.7uint8, i32 0, i32 0), { i8*, i64 }* null, i64 0 }, %structField.0 { { i8*, i64 }* @go..C336, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%ArrayType.0, %ArrayType.0* @type...68x.7int, i32 0, i32 0), { i8*, i64 }* null, i64 16 }, %structField.0 { { i8*, i64 }* @go..C337, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%ArrayType.0, %ArrayType.0* @type...68x.7.1command_line_arguments.serverConn, i32 0, i32 0), { i8*, i64 }* null, i64 144 }, %structField.0 { { i8*, i64 }* @go..C340, { i8*, i64 }* null, %_type.0* @unsafe.Pointer..d, { i8*, i64 }* null, i64 272 }]
@type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7int.2values.0.68x.7.1command_line_arguments.serverConn.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7int.2values.0.68x.7.1command_line_arguments.serverConn.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5 = weak constant %StructType.0 { %_type.0 { i64 48, i64 48, i32 -580150812, i8 25, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..mb, i32 0, i32 0), { i8*, i64 }* @go..C342, %uncommonType.0* null, %_type.0* null }, %IPST.45 { %structField.0* getelementptr inbounds ([9 x %structField.0], [9 x %structField.0]* @go..C353, i32 0, i32 0), i64 9, i64 9 } }, comdat
@const.252 = private constant [340 x i8] c"struct { count int; flags uint8; B uint8; noverflow uint16; hash0 uint32; buckets *struct { topbits [8]uint8; keys [8]int; values [8]*\09command_line_arguments\09subnet.serverConn; overflow * }; oldbuckets *struct { topbits [8]uint8; keys [8]int; values [8]*\09command_line_arguments\09subnet.serverConn; overflow * }; nevacuate uintptr; extra * }\00", align 1
@go..C342 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([340 x i8], [340 x i8]* @const.252, i32 0, i32 0), i64 339 }
@go..C343 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.231, i32 0, i32 0), i64 5 }
@go..C344 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.232, i32 0, i32 0), i64 5 }
@go..C345 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @const.233, i32 0, i32 0), i64 1 }
@go..C346 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @const.234, i32 0, i32 0), i64 9 }
@go..C347 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.237, i32 0, i32 0), i64 5 }
@go..C348 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.240, i32 0, i32 0), i64 7 }
@type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7int.2values.0.68x.7.1command_line_arguments.serverConn.2overflow.0.1.4void.5.5 = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 1246197833, i8 54, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.3*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C349, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7int.2values.0.68x.7.1command_line_arguments.serverConn.2overflow.0.1.4void.5.5, i32 0, i32 0) }, comdat
@const.253 = private constant [108 x i8] c"*struct { topbits [8]uint8; keys [8]int; values [8]*\09command_line_arguments\09subnet.serverConn; overflow * }\00", align 1
@go..C349 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([108 x i8], [108 x i8]* @const.253, i32 0, i32 0), i64 107 }
@go..C350 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @const.242, i32 0, i32 0), i64 10 }
@go..C351 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @const.243, i32 0, i32 0), i64 9 }
@go..C352 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.246, i32 0, i32 0), i64 5 }
@go..C353 = internal global [9 x %structField.0] [%structField.0 { { i8*, i64 }* @go..C343, { i8*, i64 }* null, %_type.0* @int..d, { i8*, i64 }* null, i64 0 }, %structField.0 { { i8*, i64 }* @go..C344, { i8*, i64 }* null, %_type.0* @uint8..d, { i8*, i64 }* null, i64 16 }, %structField.0 { { i8*, i64 }* @go..C345, { i8*, i64 }* null, %_type.0* @uint8..d, { i8*, i64 }* null, i64 18 }, %structField.0 { { i8*, i64 }* @go..C346, { i8*, i64 }* null, %_type.0* @uint16..d, { i8*, i64 }* null, i64 20 }, %structField.0 { { i8*, i64 }* @go..C347, { i8*, i64 }* null, %_type.0* @uint32..d, { i8*, i64 }* null, i64 24 }, %structField.0 { { i8*, i64 }* @go..C348, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7int.2values.0.68x.7.1command_line_arguments.serverConn.2overflow.0.1.4void.5.5, i32 0, i32 0), { i8*, i64 }* null, i64 32 }, %structField.0 { { i8*, i64 }* @go..C350, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7int.2values.0.68x.7.1command_line_arguments.serverConn.2overflow.0.1.4void.5.5, i32 0, i32 0), { i8*, i64 }* null, i64 48 }, %structField.0 { { i8*, i64 }* @go..C351, { i8*, i64 }* null, %_type.0* @uintptr..d, { i8*, i64 }* null, i64 64 }, %structField.0 { { i8*, i64 }* @go..C352, { i8*, i64 }* null, %_type.0* @unsafe.Pointer..d, { i8*, i64 }* null, i64 80 }]
@const.254 = private constant [12 x i8] c"clientsLock\00", align 1
@go..C354 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @const.254, i32 0, i32 0), i64 11 }
@go..C355 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@const.255 = private constant [13 x i8] c"lastClientID\00", align 1
@go..C356 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @const.255, i32 0, i32 0), i64 12 }
@go..C357 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@const.256 = private constant [14 x i8] c"inboundIPPkts\00", align 1
@go..C358 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @const.256, i32 0, i32 0), i64 13 }
@go..C359 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@type..chan.0.1command_line_arguments.inboundIPPkt = weak constant %ChanType.0 { %_type.0 { i64 8, i64 8, i32 760876871, i8 18, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.3*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C360, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.inboundIPPkt, i32 0, i32 0), i64 3 }, comdat
@const.257 = private constant [50 x i8] c"chan *\09command_line_arguments\09subnet.inboundIPPkt\00", align 1
@go..C360 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([50 x i8], [50 x i8]* @const.257, i32 0, i32 0), i64 49 }
@const.258 = private constant [15 x i8] c"inboundDevPkts\00", align 1
@go..C361 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @const.258, i32 0, i32 0), i64 14 }
@go..C362 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@const.259 = private constant [16 x i8] c"outboundDevPkts\00", align 1
@go..C363 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @const.259, i32 0, i32 0), i64 15 }
@go..C364 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@go..C365 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.51, i32 0, i32 0), i64 4 }
@go..C366 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@go..C367 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @const.57, i32 0, i32 0), i64 8 }
@go..C368 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@go..C369 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @const.32, i32 0, i32 0), i64 2 }
@go..C370 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@go..C371 = internal global [15 x %structField.0] [%structField.0 { { i8*, i64 }* @go..C281, { i8*, i64 }* @go..C282, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1crypto_tls.Config, i32 0, i32 0), { i8*, i64 }* null, i64 0 }, %structField.0 { { i8*, i64 }* @go..C283, { i8*, i64 }* @go..C284, %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @net.Listener..d, i32 0, i32 0), { i8*, i64 }* null, i64 16 }, %structField.0 { { i8*, i64 }* @go..C285, { i8*, i64 }* @go..C286, %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @net.IP..d, i32 0, i32 0), { i8*, i64 }* null, i64 48 }, %structField.0 { { i8*, i64 }* @go..C287, { i8*, i64 }* @go..C288, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1net.IPNet, i32 0, i32 0), { i8*, i64 }* null, i64 96 }, %structField.0 { { i8*, i64 }* @go..C289, { i8*, i64 }* @go..C290, %_type.0* @bool..d, { i8*, i64 }* null, i64 112 }, %structField.0 { { i8*, i64 }* @go..C291, { i8*, i64 }* @go..C292, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7int, i32 0, i32 0), { i8*, i64 }* null, i64 128 }, %structField.0 { { i8*, i64 }* @go..C331, { i8*, i64 }* @go..C332, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6int.7.1command_line_arguments.serverConn, i32 0, i32 0), { i8*, i64 }* null, i64 144 }, %structField.0 { { i8*, i64 }* @go..C354, { i8*, i64 }* @go..C355, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @sync.Mutex..d, i32 0, i32 0), { i8*, i64 }* null, i64 160 }, %structField.0 { { i8*, i64 }* @go..C356, { i8*, i64 }* @go..C357, %_type.0* @int..d, { i8*, i64 }* null, i64 176 }, %structField.0 { { i8*, i64 }* @go..C358, { i8*, i64 }* @go..C359, %_type.0* getelementptr inbounds (%ChanType.0, %ChanType.0* @type..chan.0.1command_line_arguments.inboundIPPkt, i32 0, i32 0), { i8*, i64 }* null, i64 192 }, %structField.0 { { i8*, i64 }* @go..C361, { i8*, i64 }* @go..C362, %_type.0* getelementptr inbounds (%ChanType.0, %ChanType.0* @type..chan.0.1command_line_arguments.IPPacket, i32 0, i32 0), { i8*, i64 }* null, i64 208 }, %structField.0 { { i8*, i64 }* @go..C363, { i8*, i64 }* @go..C364, %_type.0* getelementptr inbounds (%ChanType.0, %ChanType.0* @type..chan.0.1command_line_arguments.IPPacket, i32 0, i32 0), { i8*, i64 }* null, i64 224 }, %structField.0 { { i8*, i64 }* @go..C365, { i8*, i64 }* @go..C366, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1github_com_twitchyliquid64_subnet_vendor_github_com_songgao_water.Interface, i32 0, i32 0), { i8*, i64 }* null, i64 240 }, %structField.0 { { i8*, i64 }* @go..C367, { i8*, i64 }* @go..C368, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.Reverser..d, i32 0, i32 0), { i8*, i64 }* null, i64 256 }, %structField.0 { { i8*, i64 }* @go..C369, { i8*, i64 }* @go..C370, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @sync.WaitGroup..d, i32 0, i32 0), { i8*, i64 }* null, i64 368 }]
@go..C372 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Server, i32 0, i32 0)]
@go..C373 = internal global [1 x %_type.0*] zeroinitializer
@type..func.8.1command_line_arguments.serverConn.3.1command_line_arguments.Server.9.8.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 -141004440, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C374, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.44 { %_type.0** getelementptr inbounds ([2 x %_type.0*], [2 x %_type.0*]* @go..C375, i32 0, i32 0), i64 2, i64 2 }, %IPST.44 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C376, i32 0, i32 0), i64 0, i64 0 } }, comdat
@const.260 = private constant [89 x i8] c"func(*\09command_line_arguments\09subnet.serverConn, *\09command_line_arguments\09subnet.Server)\00", align 1
@go..C374 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([89 x i8], [89 x i8]* @const.260, i32 0, i32 0), i64 88 }
@go..C375 = internal global [2 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.serverConn, i32 0, i32 0), %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Server, i32 0, i32 0)]
@go..C376 = internal global [1 x %_type.0*] zeroinitializer
@const.261 = private constant [8 x i8] c"queueIP\00", align 1
@go..C377 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.261, i32 0, i32 0), i64 7 }
@go..C378 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@type..func.8.1command_line_arguments.serverConn.3.1command_line_arguments.IPPacket.9.8.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 -1060660888, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C379, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.44 { %_type.0** getelementptr inbounds ([2 x %_type.0*], [2 x %_type.0*]* @go..C380, i32 0, i32 0), i64 2, i64 2 }, %IPST.44 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C381, i32 0, i32 0), i64 0, i64 0 } }, comdat
@const.262 = private constant [91 x i8] c"func(*\09command_line_arguments\09subnet.serverConn, *\09command_line_arguments\09subnet.IPPacket)\00", align 1
@go..C379 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([91 x i8], [91 x i8]* @const.262, i32 0, i32 0), i64 90 }
@go..C380 = internal global [2 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.serverConn, i32 0, i32 0), %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.IPPacket, i32 0, i32 0)]
@go..C381 = internal global [1 x %_type.0*] zeroinitializer
@const.263 = private constant [12 x i8] c"readRoutine\00", align 1
@go..C382 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @const.263, i32 0, i32 0), i64 11 }
@go..C383 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@type..func.8.1bool.3chan.0.1command_line_arguments.inboundIPPkt.9.8.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 -1443433240, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C384, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.44 { %_type.0** getelementptr inbounds ([2 x %_type.0*], [2 x %_type.0*]* @go..C385, i32 0, i32 0), i64 2, i64 2 }, %IPST.44 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C386, i32 0, i32 0), i64 0, i64 0 } }, comdat
@const.264 = private constant [63 x i8] c"func(*bool, chan *\09command_line_arguments\09subnet.inboundIPPkt)\00", align 1
@go..C384 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([63 x i8], [63 x i8]* @const.264, i32 0, i32 0), i64 62 }
@go..C385 = internal global [2 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1bool, i32 0, i32 0), %_type.0* getelementptr inbounds (%ChanType.0, %ChanType.0* @type..chan.0.1command_line_arguments.inboundIPPkt, i32 0, i32 0)]
@go..C386 = internal global [1 x %_type.0*] zeroinitializer
@type..func.8.1command_line_arguments.serverConn.3.1bool.3chan.0.1command_line_arguments.inboundIPPkt.9.8.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 -986020632, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C387, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.44 { %_type.0** getelementptr inbounds ([3 x %_type.0*], [3 x %_type.0*]* @go..C388, i32 0, i32 0), i64 3, i64 3 }, %IPST.44 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C389, i32 0, i32 0), i64 0, i64 0 } }, comdat
@const.265 = private constant [107 x i8] c"func(*\09command_line_arguments\09subnet.serverConn, *bool, chan *\09command_line_arguments\09subnet.inboundIPPkt)\00", align 1
@go..C387 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([107 x i8], [107 x i8]* @const.265, i32 0, i32 0), i64 106 }
@go..C388 = internal global [3 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.serverConn, i32 0, i32 0), %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1bool, i32 0, i32 0), %_type.0* getelementptr inbounds (%ChanType.0, %ChanType.0* @type..chan.0.1command_line_arguments.inboundIPPkt, i32 0, i32 0)]
@go..C389 = internal global [1 x %_type.0*] zeroinitializer
@const.266 = private constant [17 x i8] c"remoteAddressStr\00", align 1
@go..C390 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @const.266, i32 0, i32 0), i64 16 }
@go..C391 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@type..func.8.1command_line_arguments.serverConn.9.8string.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 -1478082136, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C392, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.44 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C393, i32 0, i32 0), i64 1, i64 1 }, %IPST.44 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C394, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.267 = private constant [56 x i8] c"func(*\09command_line_arguments\09subnet.serverConn) string\00", align 1
@go..C392 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([56 x i8], [56 x i8]* @const.267, i32 0, i32 0), i64 55 }
@go..C393 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.serverConn, i32 0, i32 0)]
@go..C394 = internal global [1 x %_type.0*] [%_type.0* @string..d]
@const.268 = private constant [13 x i8] c"writeRoutine\00", align 1
@go..C395 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @const.268, i32 0, i32 0), i64 12 }
@go..C396 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@type..func.8.1bool.9.8.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 1400054568, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C397, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.44 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C398, i32 0, i32 0), i64 1, i64 1 }, %IPST.44 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C399, i32 0, i32 0), i64 0, i64 0 } }, comdat
@const.269 = private constant [12 x i8] c"func(*bool)\00", align 1
@go..C397 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @const.269, i32 0, i32 0), i64 11 }
@go..C398 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1bool, i32 0, i32 0)]
@go..C399 = internal global [1 x %_type.0*] zeroinitializer
@type..func.8.1command_line_arguments.serverConn.3.1bool.9.8.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 405987688, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C400, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.44 { %_type.0** getelementptr inbounds ([2 x %_type.0*], [2 x %_type.0*]* @go..C401, i32 0, i32 0), i64 2, i64 2 }, %IPST.44 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C402, i32 0, i32 0), i64 0, i64 0 } }, comdat
@const.270 = private constant [56 x i8] c"func(*\09command_line_arguments\09subnet.serverConn, *bool)\00", align 1
@go..C400 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([56 x i8], [56 x i8]* @const.270, i32 0, i32 0), i64 55 }
@go..C401 = internal global [2 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.serverConn, i32 0, i32 0), %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1bool, i32 0, i32 0)]
@go..C402 = internal global [1 x %_type.0*] zeroinitializer
@go..C403 = internal global [6 x %method.0] [%method.0 { { i8*, i64 }* @go..C205, { i8*, i64 }* @go..C206, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8bool.9.8.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.serverConn.3bool.9.8.9, i32 0, i32 0), i8* bitcast (void (i8*, %.command-line-arguments.serverConn.0*, i8)* @command_line_arguments.serverConn.hadError to i8*) }, %method.0 { { i8*, i64 }* @go..C213, { i8*, i64 }* @go..C214, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.Server.9.8.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.serverConn.3.1command_line_arguments.Server.9.8.9, i32 0, i32 0), i8* bitcast (void (i8*, %.command-line-arguments.serverConn.0*, %Server.0*)* @command_line_arguments.serverConn.initClient to i8*) }, %method.0 { { i8*, i64 }* @go..C377, { i8*, i64 }* @go..C378, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.IPPacket.9.8.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.serverConn.3.1command_line_arguments.IPPacket.9.8.9, i32 0, i32 0), i8* bitcast (void (i8*, %.command-line-arguments.serverConn.0*, %IPPacket.0*)* @command_line_arguments.serverConn.queueIP to i8*) }, %method.0 { { i8*, i64 }* @go..C382, { i8*, i64 }* @go..C383, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1bool.3chan.0.1command_line_arguments.inboundIPPkt.9.8.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.serverConn.3.1bool.3chan.0.1command_line_arguments.inboundIPPkt.9.8.9, i32 0, i32 0), i8* bitcast (void (i8*, %.command-line-arguments.serverConn.0*, i8*, {}*)* @command_line_arguments.serverConn.readRoutine to i8*) }, %method.0 { { i8*, i64 }* @go..C390, { i8*, i64 }* @go..C391, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.9.8string.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.serverConn.9.8string.9, i32 0, i32 0), i8* bitcast ({ i64, i64 } (i8*, %.command-line-arguments.serverConn.0*)* @command_line_arguments.serverConn.remoteAddressStr to i8*) }, %method.0 { { i8*, i64 }* @go..C395, { i8*, i64 }* @go..C396, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1bool.9.8.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.serverConn.3.1bool.9.8.9, i32 0, i32 0), i8* bitcast (void (i8*, %.command-line-arguments.serverConn.0*, i8*)* @command_line_arguments.serverConn.writeRoutine to i8*) }]
@go..C404 = internal constant %uncommonType.0 { { i8*, i64 }* null, { i8*, i64 }* null, %IPST.43 { %method.0* getelementptr inbounds ([6 x %method.0], [6 x %method.0]* @go..C403, i32 0, i32 0), i64 6, i64 6 } }
@type...1.1command_line_arguments.serverConn = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 950422937, i8 54, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.3*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C405, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.serverConn, i32 0, i32 0) }, comdat
@const.271 = private constant [44 x i8] c"**\09command_line_arguments\09subnet.serverConn\00", align 1
@go..C405 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([44 x i8], [44 x i8]* @const.271, i32 0, i32 0), i64 43 }
@const.272 = private constant [5 x i8] c"conn\00", align 1
@go..C406 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.272, i32 0, i32 0), i64 4 }
@go..C407 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@const.273 = private constant [3 x i8] c"id\00", align 1
@go..C408 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @const.273, i32 0, i32 0), i64 2 }
@go..C409 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@const.274 = private constant [15 x i8] c"outboundIPPkts\00", align 1
@go..C410 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @const.274, i32 0, i32 0), i64 14 }
@go..C411 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@const.275 = private constant [7 x i8] c"server\00", align 1
@go..C412 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.275, i32 0, i32 0), i64 6 }
@go..C413 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@const.276 = private constant [10 x i8] c"canSendIP\00", align 1
@go..C414 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @const.276, i32 0, i32 0), i64 9 }
@go..C415 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@const.277 = private constant [12 x i8] c"remoteAddrs\00", align 1
@go..C416 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @const.277, i32 0, i32 0), i64 11 }
@go..C417 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@go..C418 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @const.55, i32 0, i32 0), i64 12 }
@go..C419 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@go..C420 = internal global [7 x %structField.0] [%structField.0 { { i8*, i64 }* @go..C406, { i8*, i64 }* @go..C407, %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @net.Conn..d, i32 0, i32 0), { i8*, i64 }* null, i64 0 }, %structField.0 { { i8*, i64 }* @go..C408, { i8*, i64 }* @go..C409, %_type.0* @int..d, { i8*, i64 }* null, i64 32 }, %structField.0 { { i8*, i64 }* @go..C410, { i8*, i64 }* @go..C411, %_type.0* getelementptr inbounds (%ChanType.0, %ChanType.0* @type..chan.0.1command_line_arguments.IPPacket, i32 0, i32 0), { i8*, i64 }* null, i64 48 }, %structField.0 { { i8*, i64 }* @go..C412, { i8*, i64 }* @go..C413, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Server, i32 0, i32 0), { i8*, i64 }* null, i64 64 }, %structField.0 { { i8*, i64 }* @go..C414, { i8*, i64 }* @go..C415, %_type.0* @bool..d, { i8*, i64 }* null, i64 80 }, %structField.0 { { i8*, i64 }* @go..C416, { i8*, i64 }* @go..C417, %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7net.IP, i32 0, i32 0), { i8*, i64 }* null, i64 96 }, %structField.0 { { i8*, i64 }* @go..C418, { i8*, i64 }* @go..C419, %_type.0* @bool..d, { i8*, i64 }* null, i64 144 }]
@const.278 = private constant [29 x i8] c"New connection from %s (%d)\0A\00", align 1
@type..struct.4.4x.5a0.0.1command_line_arguments.serverConn.2a1.0.1bool.2a2.0chan.0.1command_line_arguments.inboundIPPkt.5 = weak constant %StructType.0 { %_type.0 { i64 24, i64 24, i32 -2049530124, i8 25, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ha, i32 0, i32 0), { i8*, i64 }* @go..C421, %uncommonType.0* null, %_type.0* null }, %IPST.45 { %structField.0* getelementptr inbounds ([3 x %structField.0], [3 x %structField.0]* @go..C425, i32 0, i32 0), i64 3, i64 3 } }, comdat
@gcbits..ha = weak constant [1 x i8] c"\07", comdat
@const.280 = private constant [121 x i8] c"struct { a0 *\09command_line_arguments\09subnet.serverConn; a1 *bool; a2 chan *\09command_line_arguments\09subnet.inboundIPPkt }\00", align 1
@go..C421 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([121 x i8], [121 x i8]* @const.280, i32 0, i32 0), i64 120 }
@go..C422 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @const.113, i32 0, i32 0), i64 2 }
@go..C423 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @const.115, i32 0, i32 0), i64 2 }
@go..C424 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @const.116, i32 0, i32 0), i64 2 }
@go..C425 = internal global [3 x %structField.0] [%structField.0 { { i8*, i64 }* @go..C422, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.serverConn, i32 0, i32 0), { i8*, i64 }* null, i64 0 }, %structField.0 { { i8*, i64 }* @go..C423, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1bool, i32 0, i32 0), { i8*, i64 }* null, i64 16 }, %structField.0 { { i8*, i64 }* @go..C424, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%ChanType.0, %ChanType.0* @type..chan.0.1command_line_arguments.inboundIPPkt, i32 0, i32 0), { i8*, i64 }* null, i64 32 }]
@type..struct.4.4x.5a0.0.1command_line_arguments.serverConn.2a1.0.1bool.5 = weak constant %StructType.0 { %_type.0 { i64 16, i64 16, i32 226694756, i8 25, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..da, i32 0, i32 0), { i8*, i64 }* @go..C426, %uncommonType.0* null, %_type.0* null }, %IPST.45 { %structField.0* getelementptr inbounds ([2 x %structField.0], [2 x %structField.0]* @go..C429, i32 0, i32 0), i64 2, i64 2 } }, comdat
@const.281 = private constant [67 x i8] c"struct { a0 *\09command_line_arguments\09subnet.serverConn; a1 *bool }\00", align 1
@go..C426 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([67 x i8], [67 x i8]* @const.281, i32 0, i32 0), i64 66 }
@go..C427 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @const.113, i32 0, i32 0), i64 2 }
@go..C428 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @const.115, i32 0, i32 0), i64 2 }
@go..C429 = internal global [2 x %structField.0] [%structField.0 { { i8*, i64 }* @go..C427, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.serverConn, i32 0, i32 0), { i8*, i64 }* null, i64 0 }, %structField.0 { { i8*, i64 }* @go..C428, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1bool, i32 0, i32 0), { i8*, i64 }* null, i64 16 }]
@io.Writer..d = external constant %InterfaceType.0
@const.283 = private constant [24 x i8] c"Write error for %s: %s\0A\00", align 1
@io.Reader..d = external constant %InterfaceType.0
@const.285 = private constant [23 x i8] c"Client read error: %s\0A\00", align 1
@type...1net.IP = external constant %PtrType.0
@const.287 = private constant [28 x i8] c"Could not decode net.IP: %s\00", align 1
@const.289 = private constant [65 x i8] c"Warning: Dropping packets for %s as outbound msg queue is full.\0A\00", align 1
@command_line_arguments.NewServer..f = local_unnamed_addr constant %functionDescriptor.0 { i64 ptrtoint (void ({ %Server.0*, %error.0 }*, i8*, i64, i64, i64, i64, { i8*, i64 }*, { i8*, i64 }*, { i8*, i64 }*, { i8*, i64 }*, { i8*, i64 }*)* @command_line_arguments.NewServer to i64) }
@const.293 = private constant [56 x i8] c"Listen for TLS on %s, IP %s set to %s, localNetMask %s\0A\00", align 1
@type..struct.4.4x.5a0.0.1command_line_arguments.Server.5 = weak constant %StructType.0 { %_type.0 { i64 8, i64 8, i32 -1865844012, i8 25, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C430, %uncommonType.0* null, %_type.0* null }, %IPST.45 { %structField.0* getelementptr inbounds ([1 x %structField.0], [1 x %structField.0]* @go..C432, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.295 = private constant [53 x i8] c"struct { a0 *\09command_line_arguments\09subnet.Server }\00", align 1
@go..C430 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([53 x i8], [53 x i8]* @const.295, i32 0, i32 0), i64 52 }
@go..C431 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @const.113, i32 0, i32 0), i64 2 }
@go..C432 = internal global [1 x %structField.0] [%structField.0 { { i8*, i64 }* @go..C431, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Server, i32 0, i32 0), { i8*, i64 }* null, i64 0 }]
@type...1net.TCPListener = external constant %PtrType.0
@const.297 = private constant [18 x i8] c"Listener err: %s\0A\00", align 1
@const.302 = private constant [81 x i8] c"WARN: Attempted to route packet to clientID %d, which does not exist. Dropping.\0A\00", align 1
@const.304 = private constant [17 x i8] c"%s read err: %s\0A\00", align 1
@const.306 = private constant [24 x i8] c"Write to %s failed: %s\0A\00", align 1
@const.308 = private constant [48 x i8] c"WARN: Write to %s has mismatched len: %d != %d\0A\00", align 1
@const.311 = private constant [19 x i8] c"Could not resolve \00", align 1
@const.312 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @const.311, i32 0, i32 0), i64 18 }
@const.313 = private constant [6 x i8] c"exec \00", align 1
@const.314 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.313, i32 0, i32 0), i64 5 }
@const.315 = private constant [3 x i8] c": \00", align 1
@const.316 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @const.315, i32 0, i32 0), i64 2 }
@const.317 = private constant [17 x i8] c"Command failed: \00", align 1
@const.318 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @const.317, i32 0, i32 0), i64 16 }
@command_line_arguments.struct.4Size.0uint32.2Mallocs.0uint64.2Frees.0uint64.5..hash..f = local_unnamed_addr constant %functionDescriptor.0 { i64 ptrtoint (i64 (i8*, i8*, i64)* @command_line_arguments.struct.4Size.0uint32.2Mallocs.0uint64.2Frees.0uint64.5..hash to i64) }
@command_line_arguments.struct.4Size.0uint32.2Mallocs.0uint64.2Frees.0uint64.5..eq..f = local_unnamed_addr constant %functionDescriptor.0 { i64 ptrtoint (i8 (i8*, i8*, i8*)* @command_line_arguments.struct.4Size.0uint32.2Mallocs.0uint64.2Frees.0uint64.5..eq to i64) }
@gcbits..GGGGGGGa = weak constant [5 x i8] c"\FF\FF\FF\FF\07", comdat
@gcbits..pppa = weak constant [2 x i8] c"\EF=", comdat
@gcbits..GGGa = weak constant [2 x i8] c"\FF\7F", comdat
@gcbits..ppppa = weak constant [3 x i8] c"\EF\BD\07", comdat
@gcbits..pppppppppppppppppppa = weak constant [12 x i8] c"\EF\BD\F7\DE{\EF\BD\F7\DE{\EF=", comdat
@gcbits..ppaa = weak constant [2 x i8] c"\EF\01", comdat
@gcbits..GGGGGGGGGGaa = weak constant [7 x i8] c"\FF\FF\FF\FF\FF\FF\03", comdat
@gcbits..pppppppppa = weak constant [6 x i8] c"\EF\BD\F7\DE{\0F", comdat
@gcbits..pppppppppppppppa = weak constant [10 x i8] c"\EF\BD\F7\DE{\EF\BD\F7\DE\03", comdat
@gcbits..GGGGGGa = weak constant [4 x i8] c"\FF\FF\FF?", comdat
@gcbits..pppppppa = weak constant [5 x i8] c"\EF\BD\F7\DE\03", comdat
@go..C0 = internal global { i8*, i64, [66 x { i8*, i64, i64, i8* }] } { i8* null, i64 66, [66 x { i8*, i64, i64, i8* }] [{ i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C23 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %imethod.0]* @go..C24 to i8*), i64 24, i64 24, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ha, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C25 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C27 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C28 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C34 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([2 x %_type.0*]* @go..C41 to i8*), i64 16, i64 16, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..da, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C42 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([3 x %_type.0*]* @go..C44 to i8*), i64 24, i64 24, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ha, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C45 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C53 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C54 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([2 x %_type.0*]* @go..C56 to i8*), i64 16, i64 16, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..da, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C57 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([7 x %method.0]* @go..C58 to i8*), i64 280, i64 280, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @gcbits..GGGGGGGa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([3 x %structField.0]* @go..C105 to i8*), i64 120, i64 112, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @gcbits..pppa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([3 x %_type.0*]* @go..C130 to i8*), i64 24, i64 24, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ha, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([4 x %_type.0*]* @go..C133 to i8*), i64 32, i64 32, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..pa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C137 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([2 x %_type.0*]* @go..C141 to i8*), i64 16, i64 16, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..da, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([3 x %_type.0*]* @go..C144 to i8*), i64 24, i64 24, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ha, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([3 x %method.0]* @go..C146 to i8*), i64 120, i64 120, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @gcbits..GGGa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([3 x %structField.0]* @go..C163 to i8*), i64 120, i64 112, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @gcbits..pppa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([4 x %structField.0]* @go..C170 to i8*), i64 160, i64 152, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @gcbits..ppppa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([19 x %structField.0]* @go..C171 to i8*), i64 760, i64 752, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @gcbits..pppppppppppppppppppa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %structField.0]* @go..C174 to i8*), i64 40, i64 32, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..pa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([4 x %structField.0]* @go..C180 to i8*), i64 160, i64 152, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @gcbits..ppppa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([2 x %structField.0]* @go..C196 to i8*), i64 80, i64 72, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @gcbits..ppaa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C208 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([2 x %_type.0*]* @go..C211 to i8*), i64 16, i64 16, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..da, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C219 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C220 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C223 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C224 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([2 x %_type.0*]* @go..C226 to i8*), i64 16, i64 16, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..da, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C227 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C236 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([2 x %_type.0*]* @go..C239 to i8*), i64 16, i64 16, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..da, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C244 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([2 x %_type.0*]* @go..C247 to i8*), i64 16, i64 16, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..da, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C252 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([2 x %_type.0*]* @go..C255 to i8*), i64 16, i64 16, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..da, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C260 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([2 x %_type.0*]* @go..C263 to i8*), i64 16, i64 16, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..da, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([2 x %_type.0*]* @go..C268 to i8*), i64 16, i64 16, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..da, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([3 x %_type.0*]* @go..C271 to i8*), i64 24, i64 24, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ha, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([10 x %method.0]* @go..C273 to i8*), i64 400, i64 400, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @gcbits..GGGGGGGGGGaa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([4 x %structField.0]* @go..C303 to i8*), i64 160, i64 152, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @gcbits..ppppa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([9 x %structField.0]* @go..C330 to i8*), i64 360, i64 352, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @gcbits..pppppppppa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([4 x %structField.0]* @go..C341 to i8*), i64 160, i64 152, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @gcbits..ppppa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([9 x %structField.0]* @go..C353 to i8*), i64 360, i64 352, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @gcbits..pppppppppa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([15 x %structField.0]* @go..C371 to i8*), i64 600, i64 592, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @gcbits..pppppppppppppppa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C372 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([2 x %_type.0*]* @go..C375 to i8*), i64 16, i64 16, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..da, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([2 x %_type.0*]* @go..C380 to i8*), i64 16, i64 16, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..da, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([2 x %_type.0*]* @go..C385 to i8*), i64 16, i64 16, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..da, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([3 x %_type.0*]* @go..C388 to i8*), i64 24, i64 24, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ha, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C393 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C394 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C398 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([2 x %_type.0*]* @go..C401 to i8*), i64 16, i64 16, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..da, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([6 x %method.0]* @go..C403 to i8*), i64 240, i64 240, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @gcbits..GGGGGGa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([7 x %structField.0]* @go..C420 to i8*), i64 280, i64 272, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @gcbits..pppppppa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([3 x %structField.0]* @go..C425 to i8*), i64 120, i64 112, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @gcbits..pppa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([2 x %structField.0]* @go..C429 to i8*), i64 80, i64 72, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @gcbits..ppaa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %structField.0]* @go..C432 to i8*), i64 40, i64 32, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..pa, i32 0, i32 0) }] }

declare i64 @reflect.rtype.Align(i8*, %.reflect.rtype.0*) #0

declare i8 @reflect.rtype.AssignableTo(i8*, %.reflect.rtype.0*, i64, i64) #0

declare i64 @reflect.rtype.Bits(i8*, %.reflect.rtype.0*) #0

declare i64 @reflect.rtype.ChanDir(i8*, %.reflect.rtype.0*) #0

declare i8 @reflect.rtype.Comparable(i8*, %.reflect.rtype.0*) #0

declare i8 @reflect.rtype.ConvertibleTo(i8*, %.reflect.rtype.0*, i64, i64) #0

declare { i64, i64 } @reflect.rtype.Elem(i8*, %.reflect.rtype.0*) #0

declare void @reflect.rtype.Field(%StructField.0*, i8*, %.reflect.rtype.0*, i64) #0

declare i64 @reflect.rtype.FieldAlign(i8*, %.reflect.rtype.0*) #0

declare void @reflect.rtype.FieldByIndex(%StructField.0*, i8*, %.reflect.rtype.0*, %IPST.28*) #0

declare void @reflect.rtype.FieldByName({ %StructField.0, i8 }*, i8*, %.reflect.rtype.0*, i64, i64) #0

declare void @reflect.rtype.FieldByNameFunc({ %StructField.0, i8 }*, i8*, %.reflect.rtype.0*, %__go_descriptor.41*) #0

declare i8 @reflect.rtype.Implements(i8*, %.reflect.rtype.0*, i64, i64) #0

declare { i64, i64 } @reflect.rtype.In(i8*, %.reflect.rtype.0*, i64) #0

declare i8 @reflect.rtype.IsVariadic(i8*, %.reflect.rtype.0*) #0

declare { i64, i64 } @reflect.rtype.Key(i8*, %.reflect.rtype.0*) #0

declare i64 @reflect.rtype.Kind(i8*, %.reflect.rtype.0*) #0

declare i64 @reflect.rtype.Len(i8*, %.reflect.rtype.0*) #0

declare void @reflect.rtype.Method(%Method.0*, i8*, %.reflect.rtype.0*, i64) #0

declare void @reflect.rtype.MethodByName({ %Method.0, i8 }*, i8*, %.reflect.rtype.0*, i64, i64) #0

declare { i64, i64 } @reflect.rtype.Name(i8*, %.reflect.rtype.0*) #0

declare i64 @reflect.rtype.NumField(i8*, %.reflect.rtype.0*) #0

declare i64 @reflect.rtype.NumIn(i8*, %.reflect.rtype.0*) #0

declare i64 @reflect.rtype.NumMethod(i8*, %.reflect.rtype.0*) #0

declare i64 @reflect.rtype.NumOut(i8*, %.reflect.rtype.0*) #0

declare { i64, i64 } @reflect.rtype.Out(i8*, %.reflect.rtype.0*, i64) #0

declare { i64, i64 } @reflect.rtype.PkgPath(i8*, %.reflect.rtype.0*) #0

declare i64 @reflect.rtype.Size(i8*, %.reflect.rtype.0*) #0

declare { i64, i64 } @reflect.rtype.String(i8*, %.reflect.rtype.0*) #0

declare %.reflect.rtype.0* @reflect.rtype.common(i8*, %.reflect.rtype.0*) #0

declare { i64, i64 } @reflect.rtype.rawString(i8*, %.reflect.rtype.0*) #0

declare %.reflect.uncommonType.0* @reflect.rtype.uncommon..stub(i8*, %.reflect.rtype.0*) #0

declare { i64, i64 } @net.IPAddr.Network(i8*, %IPAddr.0*) #0

declare { i64, i64 } @net.IPAddr.String(i8*, %IPAddr.0*) #0

declare i64 @net.IPAddr.family(i8*, %IPAddr.0*) #0

declare i8 @net.IPAddr.isWildcard(i8*, %IPAddr.0*) #0

declare void @net.IPAddr.sockaddr({ %Sockaddr.0, %error.0 }*, i8*, %IPAddr.0*, i64) #0

declare { i64, i64 } @net.IPAddr.toLocal(i8*, %IPAddr.0*, i64, i64) #0

declare { i64, i64 } @net.TCPAddr.Network(i8*, %TCPAddr.0*) #0

declare { i64, i64 } @net.TCPAddr.String(i8*, %TCPAddr.0*) #0

declare i64 @net.TCPAddr.family(i8*, %TCPAddr.0*) #0

declare i8 @net.TCPAddr.isWildcard(i8*, %TCPAddr.0*) #0

declare void @net.TCPAddr.sockaddr({ %Sockaddr.0, %error.0 }*, i8*, %TCPAddr.0*, i64) #0

declare { i64, i64 } @net.TCPAddr.toLocal(i8*, %TCPAddr.0*, i64, i64) #0

declare { i64, i64 } @net.UDPAddr.Network(i8*, %UDPAddr.0*) #0

declare { i64, i64 } @net.UDPAddr.String(i8*, %UDPAddr.0*) #0

declare i64 @net.UDPAddr.family(i8*, %UDPAddr.0*) #0

declare i8 @net.UDPAddr.isWildcard(i8*, %UDPAddr.0*) #0

declare void @net.UDPAddr.sockaddr({ %Sockaddr.0, %error.0 }*, i8*, %UDPAddr.0*, i64) #0

declare { i64, i64 } @net.UDPAddr.toLocal(i8*, %UDPAddr.0*, i64, i64) #0

declare { i64, i64 } @net.UnixAddr.Network(i8*, %UnixAddr.0*) #0

declare { i64, i64 } @net.UnixAddr.String(i8*, %UnixAddr.0*) #0

declare i64 @net.UnixAddr.family(i8*, %UnixAddr.0*) #0

declare i8 @net.UnixAddr.isWildcard(i8*, %UnixAddr.0*) #0

declare void @net.UnixAddr.sockaddr({ %Sockaddr.0, %error.0 }*, i8*, %UnixAddr.0*, i64) #0

declare { i64, i64 } @net.UnixAddr.toLocal(i8*, %UnixAddr.0*, i64, i64) #0

define { i64, i64 } @command_line_arguments.Client.Close(i8* nest nocapture readnone %nest.8, %Client.0* %c) #0 !dbg !9 {
entry:
  call void @llvm.dbg.value(metadata %Client.0* %c, metadata !710, metadata !DIExpression()), !dbg !711
  %icmp.118 = icmp eq %Client.0* %c, null, !dbg !712
  br i1 %icmp.118, label %then.123, label %else.123

then.123:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !712
  unreachable

else.123:                                         ; preds = %entry
  %field.327 = getelementptr inbounds %Client.0, %Client.0* %c, i64 0, i32 9, !dbg !712
  store i8 1, i8* %field.327, align 1, !dbg !714
  %field.328 = getelementptr inbounds %Client.0, %Client.0* %c, i64 0, i32 18, !dbg !715
  call void @command_line_arguments.Reverser.Close(i8* nest undef, %Reverser.0* nonnull %field.328), !dbg !716
  %field.329 = getelementptr inbounds %Client.0, %Client.0* %c, i64 0, i32 14, !dbg !717
  %.field.ld.50 = load %Conn.1*, %Conn.1** %field.329, align 8, !dbg !717
  %call.90 = call { i64, i64 } @crypto_tls.Conn.Close(i8* nest undef, %Conn.1* %.field.ld.50), !dbg !718
  %field.330 = getelementptr inbounds %Client.0, %Client.0* %c, i64 0, i32 12, !dbg !719
  %.field.ld.51 = load %Interface.0*, %Interface.0** %field.330, align 8, !dbg !719
  %call.91 = call { i64, i64 } @github_com_twitchyliquid64_subnet_vendor_github_com_songgao_water.Interface.Close..stub(i8* nest undef, %Interface.0* %.field.ld.51), !dbg !720
  %call.91.fca.0.extract = extractvalue { i64, i64 } %call.91, 0, !dbg !720
  call void @llvm.dbg.value(metadata i64 %call.91.fca.0.extract, metadata !721, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !722
  %icmp.122 = icmp eq i64 %call.91.fca.0.extract, 0, !dbg !723
  call void @llvm.dbg.value(metadata i64 0, metadata !724, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !725
  call void @llvm.dbg.value(metadata i64 0, metadata !724, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !725
  %merge = select i1 %icmp.122, { i64, i64 } zeroinitializer, { i64, i64 } %call.91
  call void @llvm.dbg.value(metadata i64 %call.91.fca.0.extract, metadata !724, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !725
  ret { i64, i64 } %merge, !dbg !726
}

define void @command_line_arguments.Client.Run(i8* nest nocapture readnone %nest.2, %Client.0* %c) #0 !dbg !727 {
entry:
  %tmp.25 = alloca %IPST.6, align 8
  %tmp.22 = alloca %IPST.6, align 8
  %tmpv.112 = alloca { i8*, i64 }, align 8
  %tmpv.113 = alloca [1 x %IPST.11], align 8
  %tmpv.123 = alloca { i8*, i64 }, align 8
  %tmpv.125 = alloca { i8*, i64 }, align 8
  %tmpv.126 = alloca [2 x %IPST.11], align 8
  %tmpv.128 = alloca { %Client.0* }, align 8
  %tmpv.130 = alloca { %Client.0* }, align 8
  %tmpv.140 = alloca { %Interface.0*, {}*, %WaitGroup.0*, i8* }, align 8
  %tmpv.150 = alloca { %Interface.0*, {}*, %WaitGroup.0*, i8* }, align 8
  call void @llvm.dbg.value(metadata %Client.0* %c, metadata !730, metadata !DIExpression()), !dbg !731
  %icmp.41 = icmp eq %Client.0* %c, null, !dbg !732
  br i1 %icmp.41, label %then.38, label %else.38

then.38:                                          ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !732
  unreachable

else.38:                                          ; preds = %entry
  %field.129 = getelementptr inbounds %Client.0, %Client.0* %c, i64 0, i32 1, !dbg !732
  %field0.30 = bitcast { i8*, i64 }* %field.129 to i64*, !dbg !734
  %ld.58 = load i64, i64* %field0.30, align 8, !dbg !734
  %0 = getelementptr inbounds %Client.0, %Client.0* %c, i64 0, i32 1, i32 1, !dbg !734
  %ld.59 = load i64, i64* %0, align 8, !dbg !734
  %call.37 = call i8 @runtime.eqstring(i8* nest undef, i64 %ld.58, i64 %ld.59, i64 0, i64 0), !dbg !734
  %icmp.42 = icmp eq i8 %call.37, 1, !dbg !734
  %.pre = getelementptr inbounds %Client.0, %Client.0* %c, i64 0, i32 12, !dbg !735
  br i1 %icmp.42, label %else.38.else.44_crit_edge, label %else.40

else.38.else.44_crit_edge:                        ; preds = %else.38
  %.pre31 = getelementptr inbounds %Client.0, %Client.0* %c, i64 0, i32 0, !dbg !737
  br label %else.44

else.40:                                          ; preds = %else.38
  %.field.ld.13 = load %Interface.0*, %Interface.0** %.pre, align 8, !dbg !738
  %call.33 = call { i64, i64 } @github_com_twitchyliquid64_subnet_vendor_github_com_songgao_water.Interface.Name(i8* nest undef, %Interface.0* %.field.ld.13), !dbg !739
  %call.33.fca.0.extract = extractvalue { i64, i64 } %call.33, 0, !dbg !739
  %call.33.fca.1.extract = extractvalue { i64, i64 } %call.33, 1, !dbg !739
  %field.119 = getelementptr inbounds %Client.0, %Client.0* %c, i64 0, i32 0, !dbg !740
  %.field.ld.14 = load i8, i8* %field.119, align 1, !dbg !740
  %ld.52 = load i64, i64* %field0.30, align 8, !dbg !741
  %ld.53 = load i64, i64* %0, align 8, !dbg !741
  %call.34 = call { i64, i64 } @command_line_arguments.SetDefaultGateway(i8* nest undef, i64 %ld.52, i64 %ld.53, i64 %call.33.fca.0.extract, i64 %call.33.fca.1.extract, i8 zeroext %.field.ld.14), !dbg !741
  %call.34.fca.0.extract = extractvalue { i64, i64 } %call.34, 0, !dbg !741
  call void @llvm.dbg.value(metadata i64 %call.34.fca.0.extract, metadata !742, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !743
  %icmp.40 = icmp eq i64 %call.34.fca.0.extract, 0, !dbg !744
  br i1 %icmp.40, label %else.44, label %then.43

then.43:                                          ; preds = %else.40
  %1 = inttoptr i64 %call.34.fca.0.extract to { %_type.0*, { i64, i64 } (i8*, i8*)* }*, !dbg !744
  %call.34.fca.1.extract = extractvalue { i64, i64 } %call.34, 1, !dbg !741
  call void @llvm.dbg.value(metadata i64 %call.34.fca.1.extract, metadata !742, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !743
  %field.121 = getelementptr inbounds { %_type.0*, { i64, i64 } (i8*, i8*)* }, { %_type.0*, { i64, i64 } (i8*, i8*)* }* %1, i64 0, i32 1, !dbg !745
  %.field.ld.15 = load { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)** %field.121, align 8, !dbg !745
  %2 = inttoptr i64 %call.34.fca.1.extract to i8*, !dbg !745
  %call.35 = call { i64, i64 } %.field.ld.15(i8* nest undef, i8* %2), !dbg !745
  %call.35.fca.0.extract = extractvalue { i64, i64 } %call.35, 0, !dbg !745
  %call.35.fca.1.extract = extractvalue { i64, i64 } %call.35, 1, !dbg !745
  %call.36 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !746
  %tmpv.110.sroa.0.0.cast.537.sroa_cast = bitcast { i8*, i64 }* %tmpv.112 to i64*
  store i64 %call.35.fca.0.extract, i64* %tmpv.110.sroa.0.0.cast.537.sroa_cast, align 8
  %tmpv.110.sroa.2.0.cast.537.sroa_idx10 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.112, i64 0, i32 1
  store i64 %call.35.fca.1.extract, i64* %tmpv.110.sroa.2.0.cast.537.sroa_idx10, align 8
  %cast.540 = bitcast { i8*, i64 }* %tmpv.112 to i8*, !dbg !746
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.36, i8* nonnull %cast.540), !dbg !746
  %tmp.21.sroa.0.0.cast.542.sroa_idx = getelementptr inbounds [1 x %IPST.11], [1 x %IPST.11]* %tmpv.113, i64 0, i64 0, i32 0, !dbg !746
  store %_type.0* @string..d, %_type.0** %tmp.21.sroa.0.0.cast.542.sroa_idx, align 8, !dbg !746
  %tmp.21.sroa.2.0.cast.542.sroa_idx24 = getelementptr inbounds [1 x %IPST.11], [1 x %IPST.11]* %tmpv.113, i64 0, i64 0, i32 1, !dbg !746
  store i8* %call.36, i8** %tmp.21.sroa.2.0.cast.542.sroa_idx24, align 8, !dbg !746
  %field.125 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.22, i64 0, i32 0, !dbg !746
  %cast.545 = getelementptr inbounds [1 x %IPST.11], [1 x %IPST.11]* %tmpv.113, i64 0, i64 0, !dbg !746
  store %IPST.11* %cast.545, %IPST.11** %field.125, align 8, !dbg !746
  %field.126 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.22, i64 0, i32 1, !dbg !746
  store i64 1, i64* %field.126, align 8, !dbg !746
  %field.127 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.22, i64 0, i32 2, !dbg !746
  store i64 1, i64* %field.127, align 8, !dbg !746
  call void @log.Printf(i8* nest undef, i64 ptrtoint ([23 x i8]* @const.108 to i64), i64 22, %IPST.6* byval nonnull %tmp.22), !dbg !746
  ret void, !dbg !747

else.44:                                          ; preds = %else.38.else.44_crit_edge, %else.40
  %field.131.pre-phi = phi i8* [ %.pre31, %else.38.else.44_crit_edge ], [ %field.119, %else.40 ], !dbg !737
  %.field.ld.16 = load %Interface.0*, %Interface.0** %.pre, align 8, !dbg !748
  %call.38 = call { i64, i64 } @github_com_twitchyliquid64_subnet_vendor_github_com_songgao_water.Interface.Name(i8* nest undef, %Interface.0* %.field.ld.16), !dbg !749
  %call.38.fca.1.extract = extractvalue { i64, i64 } %call.38, 1, !dbg !749
  %call.38.fca.0.extract = extractvalue { i64, i64 } %call.38, 0, !dbg !749
  %.field.ld.17 = load i8, i8* %field.131.pre-phi, align 1, !dbg !737
  %call.39 = call { i64, i64 } @command_line_arguments.SetInterfaceStatus(i8* nest undef, i64 %call.38.fca.0.extract, i64 %call.38.fca.1.extract, i8 zeroext 1, i8 zeroext %.field.ld.17), !dbg !750
  %call.39.fca.0.extract = extractvalue { i64, i64 } %call.39, 0, !dbg !750
  call void @llvm.dbg.value(metadata i64 %call.39.fca.0.extract, metadata !751, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !752
  %icmp.46 = icmp eq i64 %call.39.fca.0.extract, 0, !dbg !753
  br i1 %icmp.46, label %else.46, label %else.47

else.46:                                          ; preds = %else.44
  %call.44 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.4x.5a0.0.1command_line_arguments.Client.5, i64 0, i32 0)), !dbg !754
  %field.144 = getelementptr inbounds { %Client.0* }, { %Client.0* }* %tmpv.128, i64 0, i32 0, !dbg !754
  store %Client.0* %c, %Client.0** %field.144, align 8, !dbg !754
  %cast.593 = bitcast { %Client.0* }* %tmpv.128 to i8*, !dbg !754
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.4x.5a0.0.1command_line_arguments.Client.5, i64 0, i32 0), i8* %call.44, i8* nonnull %cast.593), !dbg !754
  call void @__go_go(i8* nest undef, %__go_descriptor.63* bitcast (void (i8*, { %Client.0* }*)* @command_line_arguments.command_line_arguments..thunk0 to %__go_descriptor.63*), i8* %call.44), !dbg !754
  %call.45 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.4x.5a0.0.1command_line_arguments.Client.5, i64 0, i32 0)), !dbg !755
  %field.145 = getelementptr inbounds { %Client.0* }, { %Client.0* }* %tmpv.130, i64 0, i32 0, !dbg !755
  store %Client.0* %c, %Client.0** %field.145, align 8, !dbg !755
  %cast.600 = bitcast { %Client.0* }* %tmpv.130 to i8*, !dbg !755
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.4x.5a0.0.1command_line_arguments.Client.5, i64 0, i32 0), i8* %call.45, i8* nonnull %cast.600), !dbg !755
  call void @__go_go(i8* nest undef, %__go_descriptor.63* bitcast (void (i8*, { %Client.0* }*)* @command_line_arguments.command_line_arguments..thunk1 to %__go_descriptor.63*), i8* %call.45), !dbg !755
  %3 = bitcast %Interface.0** %.pre to i64*, !dbg !756
  %.field.ld.2027 = load i64, i64* %3, align 8, !dbg !756
  %field.147 = getelementptr inbounds %Client.0, %Client.0* %c, i64 0, i32 10, !dbg !757
  %4 = bitcast {}** %field.147 to i64*, !dbg !757
  %.field.ld.2128 = load i64, i64* %4, align 8, !dbg !757
  %field.148 = getelementptr inbounds %Client.0, %Client.0* %c, i64 0, i32 4, !dbg !758
  %field.149 = getelementptr inbounds %Client.0, %Client.0* %c, i64 0, i32 9, !dbg !759
  %call.46 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.4x.5a0.0.1github_com_twitchyliquid64_subnet_vendor_github_com_songgao_water.Interface.2a1.0chan.0.1command_line_arguments.IPPacket.2a2.0.1sync.WaitGroup.2a3.0.1bool.5, i64 0, i32 0)), !dbg !760
  %5 = bitcast { %Interface.0*, {}*, %WaitGroup.0*, i8* }* %tmpv.140 to i64*, !dbg !760
  store i64 %.field.ld.2027, i64* %5, align 8, !dbg !760
  %field.151 = getelementptr inbounds { %Interface.0*, {}*, %WaitGroup.0*, i8* }, { %Interface.0*, {}*, %WaitGroup.0*, i8* }* %tmpv.140, i64 0, i32 1, !dbg !760
  %6 = bitcast {}** %field.151 to i64*, !dbg !760
  store i64 %.field.ld.2128, i64* %6, align 8, !dbg !760
  %field.152 = getelementptr inbounds { %Interface.0*, {}*, %WaitGroup.0*, i8* }, { %Interface.0*, {}*, %WaitGroup.0*, i8* }* %tmpv.140, i64 0, i32 2, !dbg !760
  store %WaitGroup.0* %field.148, %WaitGroup.0** %field.152, align 8, !dbg !760
  %field.153 = getelementptr inbounds { %Interface.0*, {}*, %WaitGroup.0*, i8* }, { %Interface.0*, {}*, %WaitGroup.0*, i8* }* %tmpv.140, i64 0, i32 3, !dbg !760
  store i8* %field.149, i8** %field.153, align 8, !dbg !760
  %cast.616 = bitcast { %Interface.0*, {}*, %WaitGroup.0*, i8* }* %tmpv.140 to i8*, !dbg !760
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.4x.5a0.0.1github_com_twitchyliquid64_subnet_vendor_github_com_songgao_water.Interface.2a1.0chan.0.1command_line_arguments.IPPacket.2a2.0.1sync.WaitGroup.2a3.0.1bool.5, i64 0, i32 0), i8* %call.46, i8* nonnull %cast.616), !dbg !760
  call void @__go_go(i8* nest undef, %__go_descriptor.63* bitcast (void (i8*, { %Interface.0*, {}*, %WaitGroup.0*, i8* }*)* @command_line_arguments.command_line_arguments..thunk2 to %__go_descriptor.63*), i8* %call.46), !dbg !760
  %.field.ld.2229 = load i64, i64* %3, align 8, !dbg !761
  %field.155 = getelementptr inbounds %Client.0, %Client.0* %c, i64 0, i32 11, !dbg !762
  %7 = bitcast {}** %field.155 to i64*, !dbg !762
  %.field.ld.2330 = load i64, i64* %7, align 8, !dbg !762
  %call.47 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.4x.5a0.0.1github_com_twitchyliquid64_subnet_vendor_github_com_songgao_water.Interface.2a1.0chan.0.1command_line_arguments.IPPacket.2a2.0.1sync.WaitGroup.2a3.0.1bool.5, i64 0, i32 0)), !dbg !763
  %8 = bitcast { %Interface.0*, {}*, %WaitGroup.0*, i8* }* %tmpv.150 to i64*, !dbg !763
  store i64 %.field.ld.2229, i64* %8, align 8, !dbg !763
  %field.159 = getelementptr inbounds { %Interface.0*, {}*, %WaitGroup.0*, i8* }, { %Interface.0*, {}*, %WaitGroup.0*, i8* }* %tmpv.150, i64 0, i32 1, !dbg !763
  %9 = bitcast {}** %field.159 to i64*, !dbg !763
  store i64 %.field.ld.2330, i64* %9, align 8, !dbg !763
  %field.160 = getelementptr inbounds { %Interface.0*, {}*, %WaitGroup.0*, i8* }, { %Interface.0*, {}*, %WaitGroup.0*, i8* }* %tmpv.150, i64 0, i32 2, !dbg !763
  store %WaitGroup.0* %field.148, %WaitGroup.0** %field.160, align 8, !dbg !763
  %field.161 = getelementptr inbounds { %Interface.0*, {}*, %WaitGroup.0*, i8* }, { %Interface.0*, {}*, %WaitGroup.0*, i8* }* %tmpv.150, i64 0, i32 3, !dbg !763
  store i8* %field.149, i8** %field.161, align 8, !dbg !763
  %cast.627 = bitcast { %Interface.0*, {}*, %WaitGroup.0*, i8* }* %tmpv.150 to i8*, !dbg !763
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.4x.5a0.0.1github_com_twitchyliquid64_subnet_vendor_github_com_songgao_water.Interface.2a1.0chan.0.1command_line_arguments.IPPacket.2a2.0.1sync.WaitGroup.2a3.0.1bool.5, i64 0, i32 0), i8* %call.47, i8* nonnull %cast.627), !dbg !763
  call void @__go_go(i8* nest undef, %__go_descriptor.63* bitcast (void (i8*, { %Interface.0*, {}*, %WaitGroup.0*, i8* }*)* @command_line_arguments.command_line_arguments..thunk3 to %__go_descriptor.63*), i8* %call.47), !dbg !763
  ret void

else.47:                                          ; preds = %else.44
  %10 = inttoptr i64 %call.39.fca.0.extract to { %_type.0*, { i64, i64 } (i8*, i8*)* }*, !dbg !753
  %call.39.fca.1.extract = extractvalue { i64, i64 } %call.39, 1, !dbg !750
  call void @llvm.dbg.value(metadata i64 %call.39.fca.1.extract, metadata !751, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !752
  %.field.ld.18 = load %Interface.0*, %Interface.0** %.pre, align 8, !dbg !764
  %call.40 = call { i64, i64 } @github_com_twitchyliquid64_subnet_vendor_github_com_songgao_water.Interface.Name(i8* nest undef, %Interface.0* %.field.ld.18), !dbg !765
  %call.40.fca.0.extract = extractvalue { i64, i64 } %call.40, 0, !dbg !765
  %call.40.fca.1.extract = extractvalue { i64, i64 } %call.40, 1, !dbg !765
  %field.134 = getelementptr inbounds { %_type.0*, { i64, i64 } (i8*, i8*)* }, { %_type.0*, { i64, i64 } (i8*, i8*)* }* %10, i64 0, i32 1, !dbg !766
  %.field.ld.19 = load { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)** %field.134, align 8, !dbg !766
  %11 = inttoptr i64 %call.39.fca.1.extract to i8*, !dbg !766
  %call.41 = call { i64, i64 } %.field.ld.19(i8* nest undef, i8* %11), !dbg !766
  %call.41.fca.0.extract = extractvalue { i64, i64 } %call.41, 0, !dbg !766
  %call.41.fca.1.extract = extractvalue { i64, i64 } %call.41, 1, !dbg !766
  %call.42 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !767
  %tmpv.119.sroa.0.0.cast.569.sroa_cast = bitcast { i8*, i64 }* %tmpv.123 to i64*
  store i64 %call.40.fca.0.extract, i64* %tmpv.119.sroa.0.0.cast.569.sroa_cast, align 8
  %tmpv.119.sroa.2.0.cast.569.sroa_idx5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.123, i64 0, i32 1
  store i64 %call.40.fca.1.extract, i64* %tmpv.119.sroa.2.0.cast.569.sroa_idx5, align 8
  %cast.572 = bitcast { i8*, i64 }* %tmpv.123 to i8*, !dbg !767
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.42, i8* nonnull %cast.572), !dbg !767
  %call.43 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !767
  %tmpv.121.sroa.0.0.cast.574.sroa_cast = bitcast { i8*, i64 }* %tmpv.125 to i64*
  store i64 %call.41.fca.0.extract, i64* %tmpv.121.sroa.0.0.cast.574.sroa_cast, align 8
  %tmpv.121.sroa.2.0.cast.574.sroa_idx3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.125, i64 0, i32 1
  store i64 %call.41.fca.1.extract, i64* %tmpv.121.sroa.2.0.cast.574.sroa_idx3, align 8
  %cast.577 = bitcast { i8*, i64 }* %tmpv.125 to i8*, !dbg !767
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.43, i8* nonnull %cast.577), !dbg !767
  %tmp.23.sroa.0.0.cast.580.sroa_idx = getelementptr inbounds [2 x %IPST.11], [2 x %IPST.11]* %tmpv.126, i64 0, i64 0, i32 0, !dbg !767
  store %_type.0* @string..d, %_type.0** %tmp.23.sroa.0.0.cast.580.sroa_idx, align 8, !dbg !767
  %tmp.23.sroa.2.0.cast.580.sroa_idx25 = getelementptr inbounds [2 x %IPST.11], [2 x %IPST.11]* %tmpv.126, i64 0, i64 0, i32 1, !dbg !767
  store i8* %call.42, i8** %tmp.23.sroa.2.0.cast.580.sroa_idx25, align 8, !dbg !767
  %tmp.24.sroa.0.0.cast.582.sroa_idx = getelementptr inbounds [2 x %IPST.11], [2 x %IPST.11]* %tmpv.126, i64 0, i64 1, i32 0, !dbg !767
  store %_type.0* @string..d, %_type.0** %tmp.24.sroa.0.0.cast.582.sroa_idx, align 8, !dbg !767
  %tmp.24.sroa.2.0.cast.582.sroa_idx26 = getelementptr inbounds [2 x %IPST.11], [2 x %IPST.11]* %tmpv.126, i64 0, i64 1, i32 1, !dbg !767
  store i8* %call.43, i8** %tmp.24.sroa.2.0.cast.582.sroa_idx26, align 8, !dbg !767
  %field.140 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.25, i64 0, i32 0, !dbg !767
  %cast.585 = getelementptr inbounds [2 x %IPST.11], [2 x %IPST.11]* %tmpv.126, i64 0, i64 0, !dbg !767
  store %IPST.11* %cast.585, %IPST.11** %field.140, align 8, !dbg !767
  %field.141 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.25, i64 0, i32 1, !dbg !767
  store i64 2, i64* %field.141, align 8, !dbg !767
  %field.142 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.25, i64 0, i32 2, !dbg !767
  store i64 2, i64* %field.142, align 8, !dbg !767
  call void @log.Printf(i8* nest undef, i64 ptrtoint ([37 x i8]* @const.110 to i64), i64 36, %IPST.6* byval nonnull %tmp.25), !dbg !767
  ret void, !dbg !768
}

define void @command_line_arguments.Client.connectionProblem(i8* nest nocapture readnone %nest.6, %Client.0* %c) #0 personality i32 (i32, i32, i64, i8*, i8*)* @__gccgo_personality_v0 !dbg !769 {
entry:
  %tmp.52 = alloca %IPST.6, align 8
  %tmp.49 = alloca %IPST.6, align 8
  %tmp.47 = alloca [3 x { i8*, i64 }], align 8
  %tmp.46 = alloca %IPST.6, align 8
  %tmpv.216 = alloca i8, align 1
  %tmpv.222 = alloca { %Mutex.0* }, align 8
  %tmpv.226 = alloca { i8*, i64 }, align 8
  %tmpv.227 = alloca [1 x %IPST.11], align 8
  %tcpConn = alloca %Conn.0, align 8
  %sret.actual.42 = alloca { %Conn.0, %error.0 }, align 8
  %tmpv.253 = alloca { i8*, i64 }, align 8
  %tmpv.254 = alloca [1 x %IPST.11], align 8
  %tmpv.258 = alloca { i8*, i64 }, align 8
  %tmpv.260 = alloca [2 x %IPST.11], align 8
  call void @llvm.dbg.value(metadata %Client.0* %c, metadata !770, metadata !DIExpression()), !dbg !771
  store i8 0, i8* %tmpv.216, align 1
  %icmp.83 = icmp eq %Client.0* %c, null, !dbg !772
  br i1 %icmp.83, label %then.87, label %fallthrough.87

finally.2:                                        ; preds = %cont.96, %fallthrough.87, %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, %fallthrough.89, %fallthrough.93, %catchpad.2
  %ehtmp.2.sroa.0.0 = phi i8* [ %ex2.2.fca.0.extract, %catchpad.2 ], [ undef, %fallthrough.93 ], [ undef, %fallthrough.89 ], [ undef, %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp ], [ undef, %fallthrough.87 ], [ undef, %cont.96 ]
  %ehtmp.2.sroa.2.0 = phi i32 [ %ex2.2.fca.1.extract, %catchpad.2 ], [ undef, %fallthrough.93 ], [ undef, %fallthrough.89 ], [ undef, %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp ], [ undef, %fallthrough.87 ], [ undef, %cont.96 ]
  %finvar.2.0 = phi i8 [ 0, %catchpad.2 ], [ 1, %fallthrough.93 ], [ 1, %fallthrough.89 ], [ 1, %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp ], [ 1, %fallthrough.87 ], [ 1, %cont.96 ]
  br label %finish.2

pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp: ; preds = %fallthrough.98, %cont.101, %cont.82, %else.110, %cont.102, %fallthrough.100, %cont.78, %cont.100, %cont.80, %cont.98, %else.103, %else.107, %fallthrough.101, %cont.99, %fallthrough.109, %fallthrough.105, %cont.96, %cont.95, %fallthrough.111, %cont.74, %fallthrough.96, %cont.70, %cont.69, %then.94, %fallthrough.92, %fallthrough.91, %then.87
  %lpad.loopexit.split-lp35 = landingpad { i8*, i32 }
          catch i8* null
  invoke void @runtime.checkdefer(i8* nest undef, i8* nonnull %tmpv.216)
          to label %finally.2 unwind label %catchpad.2, !dbg !773

then.87:                                          ; preds = %entry
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.87 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !772

fallthrough.87:                                   ; preds = %entry, %then.87
  %field.241 = getelementptr inbounds %Client.0, %Client.0* %c, i64 0, i32 16, !dbg !772
  %.field.ld.39 = load i8, i8* %field.241, align 1, !dbg !772
  %icmp.84 = icmp eq i8 %.field.ld.39, 0, !dbg !774
  br i1 %icmp.84, label %finally.2, label %fallthrough.89

fallthrough.89:                                   ; preds = %fallthrough.87
  %field.242 = getelementptr inbounds %Client.0, %Client.0* %c, i64 0, i32 9, !dbg !775
  %.field.ld.40 = load i8, i8* %field.242, align 1, !dbg !775
  %0 = and i8 %.field.ld.40, 1, !dbg !776
  %trunc.90 = icmp eq i8 %0, 0, !dbg !776
  br i1 %trunc.90, label %fallthrough.91, label %finally.2

fallthrough.91:                                   ; preds = %fallthrough.89
  %field.243 = getelementptr inbounds %Client.0, %Client.0* %c, i64 0, i32 17, !dbg !777
  invoke void @sync.Mutex.Lock(i8* nest undef, %Mutex.0* nonnull %field.243)
          to label %fallthrough.92 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !778

fallthrough.92:                                   ; preds = %fallthrough.91
  %cast.777 = bitcast { %Mutex.0* }* %tmpv.222 to i8*
  %field.245 = getelementptr inbounds { %Mutex.0* }, { %Mutex.0* }* %tmpv.222, i64 0, i32 0, !dbg !779
  store %Mutex.0* %field.243, %Mutex.0** %field.245, align 8, !dbg !779
  invoke void @runtime.deferproc(i8* nest undef, i8* nonnull %tmpv.216, %__go_descriptor.63* bitcast (i8 (i8*, { %Mutex.0* }*)* @command_line_arguments.command_line_arguments..thunk6 to %__go_descriptor.63*), i8* nonnull %cast.777)
          to label %fallthrough.93 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !779

fallthrough.93:                                   ; preds = %fallthrough.92
  %.field.ld.47 = load i8, i8* %field.241, align 1, !dbg !780
  %1 = and i8 %.field.ld.47, 1, !dbg !781
  %trunc.112 = icmp eq i8 %1, 0, !dbg !781
  br i1 %trunc.112, label %finally.2, label %then.94

then.94:                                          ; preds = %fallthrough.93
  %call.69 = invoke i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d)
          to label %cont.69 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !782

cont.69:                                          ; preds = %then.94
  %cast.784 = bitcast { i8*, i64 }* %tmpv.226 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.784, i8* align 8 bitcast ({ i8*, i64 }* @const.130 to i8*), i64 16, i1 false)
  invoke void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.69, i8* nonnull %cast.784)
          to label %cont.70 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !782

cont.70:                                          ; preds = %cont.69
  %tmp.45.sroa.0.0.cast.789.sroa_idx = getelementptr inbounds [1 x %IPST.11], [1 x %IPST.11]* %tmpv.227, i64 0, i64 0, i32 0, !dbg !782
  store %_type.0* @string..d, %_type.0** %tmp.45.sroa.0.0.cast.789.sroa_idx, align 8, !dbg !782
  %tmp.45.sroa.2.0.cast.789.sroa_idx20 = getelementptr inbounds [1 x %IPST.11], [1 x %IPST.11]* %tmpv.227, i64 0, i64 0, i32 1, !dbg !782
  store i8* %call.69, i8** %tmp.45.sroa.2.0.cast.789.sroa_idx20, align 8, !dbg !782
  %field.248 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.46, i64 0, i32 0, !dbg !782
  %cast.791 = getelementptr inbounds [1 x %IPST.11], [1 x %IPST.11]* %tmpv.227, i64 0, i64 0, !dbg !782
  store %IPST.11* %cast.791, %IPST.11** %field.248, align 8, !dbg !782
  %field.249 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.46, i64 0, i32 1, !dbg !782
  store i64 1, i64* %field.249, align 8, !dbg !782
  %field.250 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.46, i64 0, i32 2, !dbg !782
  store i64 1, i64* %field.250, align 8, !dbg !782
  invoke void @log.Println(i8* nest undef, %IPST.6* byval nonnull %tmp.46)
          to label %fallthrough.96 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !782

fallthrough.96:                                   ; preds = %cont.70
  store i8 0, i8* %field.241, align 1, !dbg !783
  %field.252 = getelementptr inbounds %Client.0, %Client.0* %c, i64 0, i32 14, !dbg !784
  %.field.ld.41 = load %Conn.1*, %Conn.1** %field.252, align 8, !dbg !784
  %call.70 = invoke { i64, i64 } @crypto_tls.Conn.Close(i8* nest undef, %Conn.1* %.field.ld.41)
          to label %cont.74 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !785

cont.74:                                          ; preds = %fallthrough.96
  invoke void @time.Sleep(i8* nest undef, i64 1000000000)
          to label %fallthrough.98.preheader unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !786

fallthrough.98.preheader:                         ; preds = %cont.74
  %2 = bitcast %Conn.0* %tcpConn to i8*
  %field.253 = getelementptr inbounds %Client.0, %Client.0* %c, i64 0, i32 2
  %cast.799 = bitcast { i8*, i64 }* %field.253 to i8*
  %field.254 = getelementptr inbounds %Client.0, %Client.0* %c, i64 0, i32 3
  %cast.804 = bitcast { i8*, i64 }* %field.254 to i8*
  %index.29 = getelementptr inbounds [3 x { i8*, i64 }], [3 x { i8*, i64 }]* %tmp.47, i64 0, i64 1
  %cast.807 = bitcast { i8*, i64 }* %index.29 to i8*
  %index.30 = getelementptr inbounds [3 x { i8*, i64 }], [3 x { i8*, i64 }]* %tmp.47, i64 0, i64 2
  %cast.809 = bitcast { i8*, i64 }* %index.30 to i8*
  %tmpv.230.sroa.0.0.cast.816.sroa_cast = bitcast { %Conn.0, %error.0 }* %sret.actual.42 to i8*
  %tmpv.230.sroa.3.0.cast.816.sroa_idx11 = getelementptr inbounds { %Conn.0, %error.0 }, { %Conn.0, %error.0 }* %sret.actual.42, i64 0, i32 1
  %tmpv.230.sroa.3.0.cast.816.sroa_cast = bitcast %error.0* %tmpv.230.sroa.3.0.cast.816.sroa_idx11 to i64*
  %tmpv.230.sroa.4.0.cast.816.sroa_idx13 = getelementptr inbounds { %Conn.0, %error.0 }, { %Conn.0, %error.0 }* %sret.actual.42, i64 0, i32 1, i32 1
  %tmpv.230.sroa.4.0.cast.816.sroa_cast = bitcast i8** %tmpv.230.sroa.4.0.cast.816.sroa_idx13 to i64*
  %field.257 = getelementptr inbounds %Conn.0, %Conn.0* %tcpConn, i64 0, i32 0
  %field.260 = getelementptr inbounds %Conn.0, %Conn.0* %tcpConn, i64 0, i32 1
  %3 = bitcast i8** %field.260 to %TCPConn.0**
  %tmpv.255.sroa.0.0.cast.873.sroa_cast = bitcast { i8*, i64 }* %tmpv.258 to i64*
  %tmpv.255.sroa.2.0.cast.873.sroa_idx2 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.258, i64 0, i32 1
  %cast.876 = bitcast { i8*, i64 }* %tmpv.258 to i8*
  %tmp.50.sroa.0.0.cast.882.sroa_idx = getelementptr inbounds [2 x %IPST.11], [2 x %IPST.11]* %tmpv.260, i64 0, i64 0, i32 0
  %tmp.50.sroa.2.0.cast.882.sroa_idx22 = getelementptr inbounds [2 x %IPST.11], [2 x %IPST.11]* %tmpv.260, i64 0, i64 0, i32 1
  %tmp.51.sroa.0.0.cast.884.sroa_idx = getelementptr inbounds [2 x %IPST.11], [2 x %IPST.11]* %tmpv.260, i64 0, i64 1, i32 0
  %tmp.51.sroa.2.0.cast.884.sroa_idx23 = getelementptr inbounds [2 x %IPST.11], [2 x %IPST.11]* %tmpv.260, i64 0, i64 1, i32 1
  %field.283 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.52, i64 0, i32 0
  %cast.887 = getelementptr inbounds [2 x %IPST.11], [2 x %IPST.11]* %tmpv.260, i64 0, i64 0
  %field.284 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.52, i64 0, i32 1
  %field.285 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.52, i64 0, i32 2
  %field.265 = getelementptr inbounds %Client.0, %Client.0* %c, i64 0, i32 15
  %cast.839 = bitcast %Conn.0* %field.265 to i8*
  %field.266 = getelementptr inbounds %Client.0, %Client.0* %c, i64 0, i32 13
  %field0.44 = bitcast %Conn.0* %tcpConn to i64*
  %4 = bitcast i8** %field.260 to i64*
  %cast.848 = bitcast %Conn.1** %field.252 to i8*
  %tmp.473233 = bitcast [3 x { i8*, i64 }]* %tmp.47 to i8*
  %tcpConn34 = bitcast %Conn.0* %tcpConn to i8*
  br label %fallthrough.98

fallthrough.98:                                   ; preds = %fallthrough.98.preheader, %cont.103
  %i.0 = phi i64 [ %add.0, %cont.103 ], [ 0, %fallthrough.98.preheader ]
  call void @llvm.dbg.value(metadata i64 %i.0, metadata !787, metadata !DIExpression()), !dbg !789
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %tmp.473233, i8* nonnull align 8 %cast.799, i64 16, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.807, i8* align 8 bitcast ({ i8*, i64 }* @const.97 to i8*), i64 16, i1 false), !dbg !790
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.809, i8* nonnull align 8 %cast.804, i64 16, i1 false), !dbg !790
  %call.71 = invoke { i64, i64 } @runtime.concatstring3(i8* nest undef, i8* null, [3 x { i8*, i64 }]* byval nonnull %tmp.47)
          to label %cont.78 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !790

cont.78:                                          ; preds = %fallthrough.98
  %call.71.fca.0.extract = extractvalue { i64, i64 } %call.71, 0, !dbg !790
  %call.71.fca.1.extract = extractvalue { i64, i64 } %call.71, 1, !dbg !790
  invoke void @net.Dial({ %Conn.0, %error.0 }* nonnull sret %sret.actual.42, i8* nest undef, i64 ptrtoint ([4 x i8]* @const.98 to i64), i64 3, i64 %call.71.fca.0.extract, i64 %call.71.fca.1.extract)
          to label %cont.79 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !792

cont.79:                                          ; preds = %cont.78
  %tmpv.230.sroa.3.0.copyload12 = load i64, i64* %tmpv.230.sroa.3.0.cast.816.sroa_cast, align 8, !dbg !792
  %tmpv.230.sroa.4.0.copyload14 = load i64, i64* %tmpv.230.sroa.4.0.cast.816.sroa_cast, align 8, !dbg !792
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %tcpConn34, i8* nonnull align 8 %tmpv.230.sroa.0.0.cast.816.sroa_cast, i64 16, i1 false)
  call void @llvm.dbg.value(metadata i64 %tmpv.230.sroa.3.0.copyload12, metadata !793, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !794
  call void @llvm.dbg.value(metadata i64 %tmpv.230.sroa.4.0.copyload14, metadata !793, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !794
  %icmp.102 = icmp eq i64 %tmpv.230.sroa.3.0.copyload12, 0, !dbg !795
  br i1 %icmp.102, label %then.99, label %else.110

then.99:                                          ; preds = %cont.79
  %tcpConn.field.ld.6 = load { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }** %field.257, align 8, !dbg !796
  %icmp.92 = icmp eq { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }* %tcpConn.field.ld.6, null, !dbg !796
  br i1 %icmp.92, label %fallthrough.100, label %else.100

fallthrough.99:                                   ; preds = %fallthrough.109
  %call.75.fca.0.extract = extractvalue { i64, i64 } %call.75, 0, !dbg !797
  %call.75.fca.1.extract = extractvalue { i64, i64 } %call.75, 1, !dbg !797
  call void @llvm.dbg.value(metadata i64 %call.75.fca.0.extract, metadata !793, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !794
  call void @llvm.dbg.value(metadata i64 %call.75.fca.1.extract, metadata !793, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !794
  call void @llvm.dbg.value(metadata i64 %call.75.fca.1.extract, metadata !793, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !794
  call void @llvm.dbg.value(metadata i64 %call.75.fca.0.extract, metadata !793, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !794
  %icmp.104 = icmp eq i64 %call.75.fca.0.extract, 0, !dbg !798
  br i1 %icmp.104, label %fallthrough.111, label %else.110

fallthrough.100:                                  ; preds = %then.99, %else.100
  %tmpv.238.0 = phi %_type.0* [ %.field.ld.42, %else.100 ], [ null, %then.99 ]
  invoke void @runtime.assertI2T(i8* nest undef, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1net.TCPConn, i64 0, i32 0), %_type.0* %tmpv.238.0, %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @net.Conn..d, i64 0, i32 0))
          to label %cont.80 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !799

else.100:                                         ; preds = %then.99
  %field.259 = getelementptr inbounds { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }, { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }* %tcpConn.field.ld.6, i64 0, i32 0, !dbg !796
  %.field.ld.42 = load %_type.0*, %_type.0** %field.259, align 8, !dbg !796
  br label %fallthrough.100

cont.80:                                          ; preds = %fallthrough.100
  %tcpConn.field.ld.824 = load %TCPConn.0*, %TCPConn.0** %3, align 8, !dbg !799
  %call.72 = invoke { i64, i64 } @net.TCPConn.SetKeepAlivePeriod(i8* nest undef, %TCPConn.0* %tcpConn.field.ld.824, i64 60000000000)
          to label %cont.81 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !800

cont.81:                                          ; preds = %cont.80
  %tcpConn.field.ld.9 = load { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }** %field.257, align 8, !dbg !801
  %icmp.93 = icmp eq { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }* %tcpConn.field.ld.9, null, !dbg !801
  br i1 %icmp.93, label %fallthrough.101, label %else.101

fallthrough.101:                                  ; preds = %cont.81, %else.101
  %tmpv.239.0 = phi %_type.0* [ %.field.ld.43, %else.101 ], [ null, %cont.81 ]
  invoke void @runtime.assertI2T(i8* nest undef, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1net.TCPConn, i64 0, i32 0), %_type.0* %tmpv.239.0, %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @net.Conn..d, i64 0, i32 0))
          to label %cont.82 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !802

else.101:                                         ; preds = %cont.81
  %field.263 = getelementptr inbounds { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }, { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }* %tcpConn.field.ld.9, i64 0, i32 0, !dbg !801
  %.field.ld.43 = load %_type.0*, %_type.0** %field.263, align 8, !dbg !801
  br label %fallthrough.101

cont.82:                                          ; preds = %fallthrough.101
  %tcpConn.field.ld.1125 = load %TCPConn.0*, %TCPConn.0** %3, align 8, !dbg !802
  %call.73 = invoke { i64, i64 } @net.TCPConn.SetKeepAlive(i8* nest undef, %TCPConn.0* %tcpConn.field.ld.1125, i8 zeroext 1)
          to label %fallthrough.102 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !803

fallthrough.102:                                  ; preds = %cont.82
  %runtime.writeBarrier.ld.2 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !804
  %icmp.96 = icmp eq i32 %runtime.writeBarrier.ld.2, 0, !dbg !804
  br i1 %icmp.96, label %else.104, label %else.103

else.103:                                         ; preds = %fallthrough.102
  invoke void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @net.Conn..d, i64 0, i32 0), i8* nonnull %cast.839, i8* nonnull %2)
          to label %fallthrough.105 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !804

else.104:                                         ; preds = %fallthrough.102
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.839, i8* nonnull align 8 %2, i64 16, i1 false), !dbg !804
  br label %fallthrough.105

fallthrough.105:                                  ; preds = %else.104, %else.103
  %.field.ld.44 = load %Config.0*, %Config.0** %field.266, align 8, !dbg !805
  %ld.86 = load i64, i64* %field0.44, align 8, !dbg !806
  %ld.87 = load i64, i64* %4, align 8, !dbg !806
  %call.74 = invoke %Conn.1* @crypto_tls.Client(i8* nest undef, i64 %ld.86, i64 %ld.87, %Config.0* %.field.ld.44)
          to label %fallthrough.106 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !806

fallthrough.106:                                  ; preds = %fallthrough.105
  %runtime.writeBarrier.ld.3 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !807
  %icmp.100 = icmp eq i32 %runtime.writeBarrier.ld.3, 0, !dbg !807
  br i1 %icmp.100, label %else.108, label %else.107

else.107:                                         ; preds = %fallthrough.106
  %cast.849 = bitcast %Conn.1* %call.74 to i8*, !dbg !807
  invoke void @runtime.writebarrierptr(i8* nest undef, i8* nonnull %cast.848, i8* %cast.849)
          to label %fallthrough.109 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !807

else.108:                                         ; preds = %fallthrough.106
  store %Conn.1* %call.74, %Conn.1** %field.252, align 8, !dbg !807
  br label %fallthrough.109

fallthrough.109:                                  ; preds = %else.108, %else.107
  %.field.ld.45 = load %Conn.1*, %Conn.1** %field.252, align 8, !dbg !808
  %call.75 = invoke { i64, i64 } @crypto_tls.Conn.Handshake(i8* nest undef, %Conn.1* %.field.ld.45)
          to label %fallthrough.99 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !797

else.110:                                         ; preds = %cont.79, %fallthrough.99
  %err.sroa.7.030 = phi i64 [ %call.75.fca.1.extract, %fallthrough.99 ], [ %tmpv.230.sroa.4.0.copyload14, %cont.79 ]
  %err.sroa.0.029 = phi i64 [ %call.75.fca.0.extract, %fallthrough.99 ], [ %tmpv.230.sroa.3.0.copyload12, %cont.79 ]
  %5 = inttoptr i64 %err.sroa.0.029 to { %_type.0*, { i64, i64 } (i8*, i8*)* }*, !dbg !798
  %field.277 = getelementptr inbounds { %_type.0*, { i64, i64 } (i8*, i8*)* }, { %_type.0*, { i64, i64 } (i8*, i8*)* }* %5, i64 0, i32 1, !dbg !809
  %.field.ld.46 = load { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)** %field.277, align 8, !dbg !809
  %6 = inttoptr i64 %err.sroa.7.030 to i8*, !dbg !809
  %call.77 = invoke { i64, i64 } %.field.ld.46(i8* nest undef, i8* %6)
          to label %cont.98 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !809

fallthrough.111:                                  ; preds = %fallthrough.99
  store i8 1, i8* %field.241, align 1, !dbg !810
  %call.76 = invoke i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d)
          to label %cont.95 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !811

cont.95:                                          ; preds = %fallthrough.111
  %cast.861 = bitcast { i8*, i64 }* %tmpv.253 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.861, i8* align 8 bitcast ({ i8*, i64 }* @const.132 to i8*), i64 16, i1 false)
  invoke void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.76, i8* nonnull %cast.861)
          to label %cont.96 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !811

cont.96:                                          ; preds = %cont.95
  %tmp.48.sroa.0.0.cast.866.sroa_idx = getelementptr inbounds [1 x %IPST.11], [1 x %IPST.11]* %tmpv.254, i64 0, i64 0, i32 0, !dbg !811
  store %_type.0* @string..d, %_type.0** %tmp.48.sroa.0.0.cast.866.sroa_idx, align 8, !dbg !811
  %tmp.48.sroa.2.0.cast.866.sroa_idx21 = getelementptr inbounds [1 x %IPST.11], [1 x %IPST.11]* %tmpv.254, i64 0, i64 0, i32 1, !dbg !811
  store i8* %call.76, i8** %tmp.48.sroa.2.0.cast.866.sroa_idx21, align 8, !dbg !811
  %field.273 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.49, i64 0, i32 0, !dbg !811
  %cast.868 = getelementptr inbounds [1 x %IPST.11], [1 x %IPST.11]* %tmpv.254, i64 0, i64 0, !dbg !811
  store %IPST.11* %cast.868, %IPST.11** %field.273, align 8, !dbg !811
  %field.274 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.49, i64 0, i32 1, !dbg !811
  store i64 1, i64* %field.274, align 8, !dbg !811
  %field.275 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.49, i64 0, i32 2, !dbg !811
  store i64 1, i64* %field.275, align 8, !dbg !811
  invoke void @log.Println(i8* nest undef, %IPST.6* byval nonnull %tmp.49)
          to label %finally.2 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !811

cont.98:                                          ; preds = %else.110
  %mul.0 = mul i64 %i.0, %i.0, !dbg !812
  %mul.1 = mul i64 %mul.0, 5, !dbg !813
  %call.78 = invoke i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d)
          to label %cont.99 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !814

cont.99:                                          ; preds = %cont.98
  %call.77.fca.1.extract = extractvalue { i64, i64 } %call.77, 1, !dbg !809
  %call.77.fca.0.extract = extractvalue { i64, i64 } %call.77, 0, !dbg !809
  store i64 %call.77.fca.0.extract, i64* %tmpv.255.sroa.0.0.cast.873.sroa_cast, align 8
  store i64 %call.77.fca.1.extract, i64* %tmpv.255.sroa.2.0.cast.873.sroa_idx2, align 8
  invoke void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.78, i8* nonnull %cast.876)
          to label %cont.100 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !814

cont.100:                                         ; preds = %cont.99
  %call.79 = invoke i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @int..d)
          to label %cont.101 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !814

cont.101:                                         ; preds = %cont.100
  %cast.879 = bitcast i8* %call.79 to i64*, !dbg !814
  store i64 %mul.1, i64* %cast.879, align 8, !dbg !814
  store %_type.0* @string..d, %_type.0** %tmp.50.sroa.0.0.cast.882.sroa_idx, align 8, !dbg !814
  store i8* %call.78, i8** %tmp.50.sroa.2.0.cast.882.sroa_idx22, align 8, !dbg !814
  store %_type.0* @int..d, %_type.0** %tmp.51.sroa.0.0.cast.884.sroa_idx, align 8, !dbg !814
  store i8* %call.79, i8** %tmp.51.sroa.2.0.cast.884.sroa_idx23, align 8, !dbg !814
  store %IPST.11* %cast.887, %IPST.11** %field.283, align 8, !dbg !814
  store i64 2, i64* %field.284, align 8, !dbg !814
  store i64 2, i64* %field.285, align 8, !dbg !814
  invoke void @log.Printf(i8* nest undef, i64 ptrtoint ([48 x i8]* @const.135 to i64), i64 47, %IPST.6* byval nonnull %tmp.52)
          to label %cont.102 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !814

cont.102:                                         ; preds = %cont.101
  %mul.4 = mul i64 %mul.0, 5000000000, !dbg !815
  invoke void @time.Sleep(i8* nest undef, i64 %mul.4)
          to label %cont.103 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !816

cont.103:                                         ; preds = %cont.102
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2)
  %add.0 = add i64 %i.0, 1, !dbg !817
  call void @llvm.dbg.value(metadata i64 %add.0, metadata !787, metadata !DIExpression()), !dbg !789
  br label %fallthrough.98

catchpad.2:                                       ; preds = %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp
  %ex2.2 = landingpad { i8*, i32 }
          cleanup
  %ex2.2.fca.0.extract = extractvalue { i8*, i32 } %ex2.2, 0
  %ex2.2.fca.1.extract = extractvalue { i8*, i32 } %ex2.2, 1
  br label %finally.2

pad.5:                                            ; preds = %finish.2
  %ex.5 = landingpad { i8*, i32 }
          catch i8* null
  call void @runtime.checkdefer(i8* nest undef, i8* nonnull %tmpv.216), !dbg !773
  br label %finish.2

finish.2:                                         ; preds = %pad.5, %finally.2
  invoke void @runtime.deferreturn(i8* nest undef, i8* nonnull %tmpv.216)
          to label %cont.105 unwind label %pad.5, !dbg !773

cont.105:                                         ; preds = %finish.2
  %icmp.106 = icmp eq i8 %finvar.2.0, 1
  br i1 %icmp.106, label %finret.2, label %finres.2

finres.2:                                         ; preds = %cont.105
  %excv.2.fca.0.insert = insertvalue { i8*, i32 } undef, i8* %ehtmp.2.sroa.0.0, 0
  %excv.2.fca.1.insert = insertvalue { i8*, i32 } %excv.2.fca.0.insert, i32 %ehtmp.2.sroa.2.0, 1
  resume { i8*, i32 } %excv.2.fca.1.insert

finret.2:                                         ; preds = %cont.105
  ret void, !dbg !818
}

define { i64, i64 } @command_line_arguments.Client.init(i8* nest nocapture readnone %nest.1, %Client.0* %c, i64 %serverAddr.chunk0, i64 %serverAddr.chunk1, i64 %port.chunk0, i64 %port.chunk1) #0 !dbg !819 {
entry:
  %tmp.20 = alloca %IPST.6, align 8
  %tmp.16 = alloca %IPST.6, align 8
  %tmp.13 = alloca %IPST.6, align 8
  %tmp.9 = alloca [3 x { i8*, i64 }], align 8
  %tcpConn = alloca %Conn.0, align 8
  %sret.actual.13 = alloca { %Conn.0, %error.0 }, align 8
  %tmpv.64 = alloca %IP.0, align 8
  %tmpv.69 = alloca %IP.0, align 8
  %tmpv.73 = alloca { i8*, i64 }, align 8
  %tmpv.75 = alloca { i8*, i64 }, align 8
  %tmpv.77 = alloca { i8*, i64 }, align 8
  %tmpv.78 = alloca [3 x %IPST.11], align 8
  %gateway = alloca %IP.0, align 8
  %sret.actual.22 = alloca { { i8*, i64 }, { i8*, i64 }, %error.0 }, align 8
  %sret.actual.23 = alloca %IP.0, align 8
  %tmpv.84 = alloca %IP.0, align 8
  %tmpv.86 = alloca { i8*, i64 }, align 8
  %tmpv.87 = alloca [2 x %IPST.11], align 8
  %tmpv.90 = alloca %IP.0, align 8
  %tmpv.94 = alloca { i8*, i64 }, align 8
  %tmpv.96 = alloca { i8*, i64 }, align 8
  %tmpv.98 = alloca { i8*, i64 }, align 8
  %tmpv.99 = alloca [3 x %IPST.11], align 8
  call void @llvm.dbg.value(metadata %Client.0* %c, metadata !822, metadata !DIExpression()), !dbg !823
  call void @llvm.dbg.value(metadata i64 %serverAddr.chunk0, metadata !824, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !825
  call void @llvm.dbg.value(metadata i64 %serverAddr.chunk1, metadata !824, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !825
  call void @llvm.dbg.value(metadata i64 %port.chunk0, metadata !826, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !827
  call void @llvm.dbg.value(metadata i64 %port.chunk1, metadata !826, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !827
  %0 = bitcast %Conn.0* %tcpConn to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0)
  %serverAddr.addr.sroa.0.0.cast.299.sroa_cast = bitcast [3 x { i8*, i64 }]* %tmp.9 to i64*, !dbg !828
  store i64 %serverAddr.chunk0, i64* %serverAddr.addr.sroa.0.0.cast.299.sroa_cast, align 8, !dbg !828
  %serverAddr.addr.sroa.2.0.cast.299.sroa_idx130 = getelementptr inbounds [3 x { i8*, i64 }], [3 x { i8*, i64 }]* %tmp.9, i64 0, i64 0, i32 1, !dbg !828
  store i64 %serverAddr.chunk1, i64* %serverAddr.addr.sroa.2.0.cast.299.sroa_idx130, align 8, !dbg !828
  %index.6 = getelementptr inbounds [3 x { i8*, i64 }], [3 x { i8*, i64 }]* %tmp.9, i64 0, i64 1, !dbg !828
  %cast.301 = bitcast { i8*, i64 }* %index.6 to i8*, !dbg !828
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.301, i8* align 8 bitcast ({ i8*, i64 }* @const.97 to i8*), i64 16, i1 false), !dbg !828
  %port.addr.sroa.0.0.cast.303.sroa_idx = getelementptr inbounds [3 x { i8*, i64 }], [3 x { i8*, i64 }]* %tmp.9, i64 0, i64 2, !dbg !828
  %port.addr.sroa.0.0.cast.303.sroa_cast = bitcast { i8*, i64 }* %port.addr.sroa.0.0.cast.303.sroa_idx to i64*, !dbg !828
  store i64 %port.chunk0, i64* %port.addr.sroa.0.0.cast.303.sroa_cast, align 8, !dbg !828
  %port.addr.sroa.2.0.cast.303.sroa_idx129 = getelementptr inbounds [3 x { i8*, i64 }], [3 x { i8*, i64 }]* %tmp.9, i64 0, i64 2, i32 1, !dbg !828
  store i64 %port.chunk1, i64* %port.addr.sroa.2.0.cast.303.sroa_idx129, align 8, !dbg !828
  %call.12 = call { i64, i64 } @runtime.concatstring3(i8* nest undef, i8* null, [3 x { i8*, i64 }]* byval nonnull %tmp.9), !dbg !828
  %call.12.fca.0.extract = extractvalue { i64, i64 } %call.12, 0, !dbg !828
  %call.12.fca.1.extract = extractvalue { i64, i64 } %call.12, 1, !dbg !828
  call void @net.Dial({ %Conn.0, %error.0 }* nonnull sret %sret.actual.13, i8* nest undef, i64 ptrtoint ([4 x i8]* @const.98 to i64), i64 3, i64 %call.12.fca.0.extract, i64 %call.12.fca.1.extract), !dbg !830
  %tmpv.40.sroa.0.0.cast.310.sroa_cast = bitcast { %Conn.0, %error.0 }* %sret.actual.13 to i8*, !dbg !830
  %tmpv.40.sroa.3.0.cast.310.sroa_idx106 = getelementptr inbounds { %Conn.0, %error.0 }, { %Conn.0, %error.0 }* %sret.actual.13, i64 0, i32 1, i32 0, !dbg !830
  %tmpv.40.sroa.3.0.copyload107 = load { %_type.0*, { i64, i64 } (i8*, i8*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)* }** %tmpv.40.sroa.3.0.cast.310.sroa_idx106, align 8, !dbg !830
  %tmpv.40.sroa.4.0.cast.310.sroa_idx108 = getelementptr inbounds { %Conn.0, %error.0 }, { %Conn.0, %error.0 }* %sret.actual.13, i64 0, i32 1, i32 1, !dbg !830
  %1 = bitcast i8** %tmpv.40.sroa.4.0.cast.310.sroa_idx108 to i64*, !dbg !830
  %tmpv.40.sroa.4.0.copyload109139 = load i64, i64* %1, align 8, !dbg !830
  %tcpConn147 = bitcast %Conn.0* %tcpConn to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %tcpConn147, i8* nonnull align 8 %tmpv.40.sroa.0.0.cast.310.sroa_cast, i64 16, i1 false)
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.40.sroa.3.0.copyload107, metadata !831, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !832
  call void @llvm.dbg.value(metadata i8** %tmpv.40.sroa.4.0.cast.310.sroa_idx108, metadata !831, metadata !DIExpression(DW_OP_deref, DW_OP_LLVM_fragment, 64, 64)), !dbg !832
  %icmp.4 = icmp eq { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.40.sroa.3.0.copyload107, null, !dbg !833
  br i1 %icmp.4, label %else.4, label %then.4

then.4:                                           ; preds = %entry
  %2 = ptrtoint { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.40.sroa.3.0.copyload107 to i64, !dbg !834
  call void @llvm.dbg.value(metadata i64 %2, metadata !835, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !836
  call void @llvm.dbg.value(metadata i64 %tmpv.40.sroa.4.0.copyload109139, metadata !835, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !836
  %ld.24.fca.0.insert = insertvalue { i64, i64 } undef, i64 %2, 0, !dbg !834
  %ld.24.fca.1.insert = insertvalue { i64, i64 } %ld.24.fca.0.insert, i64 %tmpv.40.sroa.4.0.copyload109139, 1, !dbg !834
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0), !dbg !834
  ret { i64, i64 } %ld.24.fca.1.insert, !dbg !834

else.4:                                           ; preds = %entry
  %field.56 = getelementptr inbounds %Conn.0, %Conn.0* %tcpConn, i64 0, i32 0, !dbg !837
  %tcpConn.field.ld.0 = load { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }** %field.56, align 8, !dbg !837
  %icmp.5 = icmp eq { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }* %tcpConn.field.ld.0, null, !dbg !837
  %3 = ptrtoint { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }* %tcpConn.field.ld.0 to i64
  br i1 %icmp.5, label %fallthrough.5, label %else.5

fallthrough.5:                                    ; preds = %else.4, %else.5
  %tmpv.44.0 = phi %_type.0* [ %.field.ld.2, %else.5 ], [ null, %else.4 ]
  call void @runtime.assertI2T(i8* nest undef, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1net.TCPConn, i64 0, i32 0), %_type.0* %tmpv.44.0, %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @net.Conn..d, i64 0, i32 0)), !dbg !838
  %field.59 = getelementptr inbounds %Conn.0, %Conn.0* %tcpConn, i64 0, i32 1, !dbg !838
  %4 = bitcast i8** %field.59 to %TCPConn.0**, !dbg !838
  %tcpConn.field.ld.2140 = load %TCPConn.0*, %TCPConn.0** %4, align 8, !dbg !838
  %call.13 = call { i64, i64 } @net.TCPConn.SetKeepAlivePeriod(i8* nest undef, %TCPConn.0* %tcpConn.field.ld.2140, i64 60000000000), !dbg !839
  %5 = ptrtoint %TCPConn.0* %tcpConn.field.ld.2140 to i64
  br i1 %icmp.5, label %fallthrough.6, label %else.6

else.5:                                           ; preds = %else.4
  %field.58 = getelementptr inbounds { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }, { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }* %tcpConn.field.ld.0, i64 0, i32 0, !dbg !837
  %.field.ld.2 = load %_type.0*, %_type.0** %field.58, align 8, !dbg !837
  br label %fallthrough.5

fallthrough.6:                                    ; preds = %fallthrough.5, %else.6
  %tmpv.45.0 = phi %_type.0* [ %.field.ld.3, %else.6 ], [ null, %fallthrough.5 ]
  call void @runtime.assertI2T(i8* nest undef, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1net.TCPConn, i64 0, i32 0), %_type.0* %tmpv.45.0, %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @net.Conn..d, i64 0, i32 0)), !dbg !840
  %call.14 = call { i64, i64 } @net.TCPConn.SetKeepAlive(i8* nest undef, %TCPConn.0* %tcpConn.field.ld.2140, i8 zeroext 1), !dbg !841
  %icmp.7 = icmp eq %Client.0* %c, null, !dbg !842
  br i1 %icmp.7, label %then.7, label %else.7

else.6:                                           ; preds = %fallthrough.5
  %field.62 = getelementptr inbounds { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }, { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }* %tcpConn.field.ld.0, i64 0, i32 0, !dbg !843
  %.field.ld.3 = load %_type.0*, %_type.0** %field.62, align 8, !dbg !843
  br label %fallthrough.6

then.7:                                           ; preds = %fallthrough.6
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !842
  unreachable

else.7:                                           ; preds = %fallthrough.6
  %field.64 = getelementptr inbounds %Client.0, %Client.0* %c, i64 0, i32 15, !dbg !842
  %runtime.writeBarrier.ld.0 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !844
  %icmp.9 = icmp eq i32 %runtime.writeBarrier.ld.0, 0, !dbg !844
  %cast.337 = bitcast %Conn.0* %field.64 to i8*, !dbg !844
  br i1 %icmp.9, label %else.9, label %else.8

else.8:                                           ; preds = %else.7
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @net.Conn..d, i64 0, i32 0), i8* nonnull %cast.337, i8* nonnull %0), !dbg !844
  %field0.14.phi.trans.insert = bitcast %Conn.0* %tcpConn to i64*
  %ld.25.pre = load i64, i64* %field0.14.phi.trans.insert, align 8, !dbg !845
  %.phi.trans.insert = bitcast i8** %field.59 to i64*
  %ld.26.pre = load i64, i64* %.phi.trans.insert, align 8, !dbg !845
  br label %else.10

else.9:                                           ; preds = %else.7
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.337, i8* nonnull align 8 %0, i64 16, i1 false), !dbg !844
  br label %else.10

else.10:                                          ; preds = %else.9, %else.8
  %ld.26 = phi i64 [ %5, %else.9 ], [ %ld.26.pre, %else.8 ], !dbg !845
  %ld.25 = phi i64 [ %3, %else.9 ], [ %ld.25.pre, %else.8 ], !dbg !845
  %field.65 = getelementptr inbounds %Client.0, %Client.0* %c, i64 0, i32 13, !dbg !846
  %.field.ld.4 = load %Config.0*, %Config.0** %field.65, align 8, !dbg !846
  %call.15 = call %Conn.1* @crypto_tls.Client(i8* nest undef, i64 %ld.25, i64 %ld.26, %Config.0* %.field.ld.4), !dbg !845
  %field.66 = getelementptr inbounds %Client.0, %Client.0* %c, i64 0, i32 14, !dbg !847
  %runtime.writeBarrier.ld.1 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !848
  %icmp.13 = icmp eq i32 %runtime.writeBarrier.ld.1, 0, !dbg !848
  br i1 %icmp.13, label %else.13, label %else.12

else.12:                                          ; preds = %else.10
  %cast.346 = bitcast %Conn.1** %field.66 to i8*, !dbg !848
  %cast.347 = bitcast %Conn.1* %call.15 to i8*, !dbg !848
  call void @runtime.writebarrierptr(i8* nest undef, i8* nonnull %cast.346, i8* %cast.347), !dbg !848
  %.field.ld.5.pre = load %Conn.1*, %Conn.1** %field.66, align 8, !dbg !849
  br label %else.14

else.13:                                          ; preds = %else.10
  store %Conn.1* %call.15, %Conn.1** %field.66, align 8, !dbg !848
  br label %else.14

else.14:                                          ; preds = %else.13, %else.12
  %.field.ld.5 = phi %Conn.1* [ %call.15, %else.13 ], [ %.field.ld.5.pre, %else.12 ], !dbg !849
  %call.16 = call { i64, i64 } @crypto_tls.Conn.Handshake(i8* nest undef, %Conn.1* %.field.ld.5), !dbg !851
  %call.16.fca.0.extract = extractvalue { i64, i64 } %call.16, 0, !dbg !851
  call void @llvm.dbg.value(metadata i64 %call.16.fca.0.extract, metadata !852, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !853
  %icmp.15 = icmp eq i64 %call.16.fca.0.extract, 0, !dbg !854
  br i1 %icmp.15, label %else.16, label %then.15

then.15:                                          ; preds = %else.14
  call void @llvm.dbg.value(metadata i64 %call.16.fca.0.extract, metadata !835, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !836
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0), !dbg !855
  ret { i64, i64 } %call.16, !dbg !855

else.16:                                          ; preds = %else.14
  %field.69 = getelementptr inbounds %Client.0, %Client.0* %c, i64 0, i32 16, !dbg !856
  store i8 1, i8* %field.69, align 1, !dbg !857
  %field.70 = getelementptr inbounds %Client.0, %Client.0* %c, i64 0, i32 12, !dbg !858
  %.field.ld.6 = load %Interface.0*, %Interface.0** %field.70, align 8, !dbg !858
  %call.17 = call { i64, i64 } @github_com_twitchyliquid64_subnet_vendor_github_com_songgao_water.Interface.Name(i8* nest undef, %Interface.0* %.field.ld.6), !dbg !860
  %call.17.fca.0.extract = extractvalue { i64, i64 } %call.17, 0, !dbg !860
  %call.17.fca.1.extract = extractvalue { i64, i64 } %call.17, 1, !dbg !860
  %field.71 = getelementptr inbounds %Client.0, %Client.0* %c, i64 0, i32 6, !dbg !861
  %field.72 = getelementptr inbounds %Client.0, %Client.0* %c, i64 0, i32 8, !dbg !862
  %.field.ld.7 = load %IPNet.0*, %IPNet.0** %field.72, align 8, !dbg !862
  %field.73 = getelementptr inbounds %Client.0, %Client.0* %c, i64 0, i32 0, !dbg !863
  %.field.ld.8 = load i8, i8* %field.73, align 1, !dbg !863
  %call.18 = call { i64, i64 } @command_line_arguments.SetDevIP(i8* nest undef, i64 %call.17.fca.0.extract, i64 %call.17.fca.1.extract, %IP.0* byval nonnull %field.71, %IPNet.0* %.field.ld.7, i8 zeroext %.field.ld.8), !dbg !864
  %call.18.fca.0.extract = extractvalue { i64, i64 } %call.18, 0, !dbg !864
  call void @llvm.dbg.value(metadata i64 %call.18.fca.0.extract, metadata !865, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !866
  %icmp.21 = icmp eq i64 %call.18.fca.0.extract, 0, !dbg !867
  br i1 %icmp.21, label %else.22, label %then.21

then.21:                                          ; preds = %else.16
  call void @llvm.dbg.value(metadata i64 %call.18.fca.0.extract, metadata !835, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !836
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0), !dbg !868
  ret { i64, i64 } %call.18, !dbg !868

else.22:                                          ; preds = %else.16
  %.field.ld.9 = load %Interface.0*, %Interface.0** %field.70, align 8, !dbg !869
  %call.19 = call { i64, i64 } @github_com_twitchyliquid64_subnet_vendor_github_com_songgao_water.Interface.Name(i8* nest undef, %Interface.0* %.field.ld.9), !dbg !870
  %cast.379 = bitcast %IP.0* %tmpv.64 to i8*
  %cast.380 = bitcast %IP.0* %field.71 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.379, i8* nonnull align 8 %cast.380, i64 24, i1 false)
  %call.20 = call { i64, i64 } @net.IP.String(i8* nest undef, %IP.0* nonnull %tmpv.64), !dbg !871
  %.field.ld.10 = load %IPNet.0*, %IPNet.0** %field.72, align 8, !dbg !872
  %icmp.25 = icmp eq %IPNet.0* %.field.ld.10, null, !dbg !873
  br i1 %icmp.25, label %then.25, label %else.25

then.25:                                          ; preds = %else.22
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !873
  unreachable

else.25:                                          ; preds = %else.22
  %call.20.fca.1.extract = extractvalue { i64, i64 } %call.20, 1, !dbg !871
  %call.20.fca.0.extract = extractvalue { i64, i64 } %call.20, 0, !dbg !871
  %call.19.fca.1.extract = extractvalue { i64, i64 } %call.19, 1, !dbg !870
  %call.19.fca.0.extract = extractvalue { i64, i64 } %call.19, 0, !dbg !870
  %field.78 = getelementptr inbounds %IPNet.0, %IPNet.0* %.field.ld.10, i64 0, i32 1, !dbg !873
  %cast.387 = bitcast %IP.0* %tmpv.69 to i8*
  %cast.388 = bitcast %IPMask.0* %field.78 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.387, i8* nonnull align 8 %cast.388, i64 24, i1 false)
  %call.21 = call { i64, i64 } @net.IP.String(i8* nest undef, %IP.0* nonnull %tmpv.69), !dbg !874
  %call.21.fca.0.extract = extractvalue { i64, i64 } %call.21, 0, !dbg !874
  %call.21.fca.1.extract = extractvalue { i64, i64 } %call.21, 1, !dbg !874
  %call.22 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !875
  %tmpv.62.sroa.0.0.cast.393.sroa_cast = bitcast { i8*, i64 }* %tmpv.73 to i64*
  store i64 %call.19.fca.0.extract, i64* %tmpv.62.sroa.0.0.cast.393.sroa_cast, align 8
  %tmpv.62.sroa.2.0.cast.393.sroa_idx72 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.73, i64 0, i32 1
  store i64 %call.19.fca.1.extract, i64* %tmpv.62.sroa.2.0.cast.393.sroa_idx72, align 8
  %cast.396 = bitcast { i8*, i64 }* %tmpv.73 to i8*, !dbg !875
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.22, i8* nonnull %cast.396), !dbg !875
  %call.23 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !875
  %tmpv.66.sroa.0.0.cast.398.sroa_cast = bitcast { i8*, i64 }* %tmpv.75 to i64*
  store i64 %call.20.fca.0.extract, i64* %tmpv.66.sroa.0.0.cast.398.sroa_cast, align 8
  %tmpv.66.sroa.2.0.cast.398.sroa_idx70 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.75, i64 0, i32 1
  store i64 %call.20.fca.1.extract, i64* %tmpv.66.sroa.2.0.cast.398.sroa_idx70, align 8
  %cast.401 = bitcast { i8*, i64 }* %tmpv.75 to i8*, !dbg !875
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.23, i8* nonnull %cast.401), !dbg !875
  %call.24 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !875
  %tmpv.71.sroa.0.0.cast.403.sroa_cast = bitcast { i8*, i64 }* %tmpv.77 to i64*
  store i64 %call.21.fca.0.extract, i64* %tmpv.71.sroa.0.0.cast.403.sroa_cast, align 8
  %tmpv.71.sroa.2.0.cast.403.sroa_idx68 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.77, i64 0, i32 1
  store i64 %call.21.fca.1.extract, i64* %tmpv.71.sroa.2.0.cast.403.sroa_idx68, align 8
  %cast.406 = bitcast { i8*, i64 }* %tmpv.77 to i8*, !dbg !875
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.24, i8* nonnull %cast.406), !dbg !875
  %tmp.10.sroa.0.0.cast.410.sroa_idx = getelementptr inbounds [3 x %IPST.11], [3 x %IPST.11]* %tmpv.78, i64 0, i64 0, i32 0, !dbg !875
  store %_type.0* @string..d, %_type.0** %tmp.10.sroa.0.0.cast.410.sroa_idx, align 8, !dbg !875
  %tmp.10.sroa.2.0.cast.410.sroa_idx131 = getelementptr inbounds [3 x %IPST.11], [3 x %IPST.11]* %tmpv.78, i64 0, i64 0, i32 1, !dbg !875
  store i8* %call.22, i8** %tmp.10.sroa.2.0.cast.410.sroa_idx131, align 8, !dbg !875
  %tmp.11.sroa.0.0.cast.412.sroa_idx = getelementptr inbounds [3 x %IPST.11], [3 x %IPST.11]* %tmpv.78, i64 0, i64 1, i32 0, !dbg !875
  store %_type.0* @string..d, %_type.0** %tmp.11.sroa.0.0.cast.412.sroa_idx, align 8, !dbg !875
  %tmp.11.sroa.2.0.cast.412.sroa_idx132 = getelementptr inbounds [3 x %IPST.11], [3 x %IPST.11]* %tmpv.78, i64 0, i64 1, i32 1, !dbg !875
  store i8* %call.23, i8** %tmp.11.sroa.2.0.cast.412.sroa_idx132, align 8, !dbg !875
  %tmp.12.sroa.0.0.cast.414.sroa_idx = getelementptr inbounds [3 x %IPST.11], [3 x %IPST.11]* %tmpv.78, i64 0, i64 2, i32 0, !dbg !875
  store %_type.0* @string..d, %_type.0** %tmp.12.sroa.0.0.cast.414.sroa_idx, align 8, !dbg !875
  %tmp.12.sroa.2.0.cast.414.sroa_idx133 = getelementptr inbounds [3 x %IPST.11], [3 x %IPST.11]* %tmpv.78, i64 0, i64 2, i32 1, !dbg !875
  store i8* %call.24, i8** %tmp.12.sroa.2.0.cast.414.sroa_idx133, align 8, !dbg !875
  %field.85 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.13, i64 0, i32 0, !dbg !875
  %cast.417 = getelementptr inbounds [3 x %IPST.11], [3 x %IPST.11]* %tmpv.78, i64 0, i64 0, !dbg !875
  store %IPST.11* %cast.417, %IPST.11** %field.85, align 8, !dbg !875
  %field.86 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.13, i64 0, i32 1, !dbg !875
  store i64 3, i64* %field.86, align 8, !dbg !875
  %field.87 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.13, i64 0, i32 2, !dbg !875
  store i64 3, i64* %field.87, align 8, !dbg !875
  call void @log.Printf(i8* nest undef, i64 ptrtoint ([37 x i8]* @const.100 to i64), i64 36, %IPST.6* byval nonnull %tmp.13), !dbg !875
  %field.116 = getelementptr inbounds %Client.0, %Client.0* %c, i64 0, i32 1, !dbg !876
  %field0.23 = bitcast { i8*, i64 }* %field.116 to i64*, !dbg !877
  %ld.47 = load i64, i64* %field0.23, align 8, !dbg !877
  %6 = getelementptr inbounds %Client.0, %Client.0* %c, i64 0, i32 1, i32 1, !dbg !877
  %ld.48 = load i64, i64* %6, align 8, !dbg !877
  %call.32 = call i8 @runtime.eqstring(i8* nest undef, i64 %ld.47, i64 %ld.48, i64 0, i64 0), !dbg !877
  %icmp.36 = icmp eq i8 %call.32, 1, !dbg !877
  br i1 %icmp.36, label %fallthrough.27, label %then.27

then.27:                                          ; preds = %else.25
  %7 = bitcast %IP.0* %gateway to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7)
  call void @command_line_arguments.GetNetGateway({ { i8*, i64 }, { i8*, i64 }, %error.0 }* nonnull sret %sret.actual.22, i8* nest undef), !dbg !878
  %tmpv.79.sroa.0.sroa.0.sroa.0.0.tmpv.79.sroa.0.sroa.0.0.tmpv.79.sroa.0.0.cast.421.sroa_cast.sroa_cast.sroa_cast = bitcast { { i8*, i64 }, { i8*, i64 }, %error.0 }* %sret.actual.22 to i64*, !dbg !878
  %tmpv.79.sroa.0.sroa.0.sroa.0.0.copyload64 = load i64, i64* %tmpv.79.sroa.0.sroa.0.sroa.0.0.tmpv.79.sroa.0.sroa.0.0.tmpv.79.sroa.0.0.cast.421.sroa_cast.sroa_cast.sroa_cast, align 8, !dbg !878
  %tmpv.79.sroa.0.sroa.0.sroa.3.0.tmpv.79.sroa.0.sroa.0.0.tmpv.79.sroa.0.0.cast.421.sroa_cast.sroa_cast.sroa_idx65 = getelementptr inbounds { { i8*, i64 }, { i8*, i64 }, %error.0 }, { { i8*, i64 }, { i8*, i64 }, %error.0 }* %sret.actual.22, i64 0, i32 0, i32 1, !dbg !878
  %tmpv.79.sroa.0.sroa.0.sroa.3.0.copyload66 = load i64, i64* %tmpv.79.sroa.0.sroa.0.sroa.3.0.tmpv.79.sroa.0.sroa.0.0.tmpv.79.sroa.0.0.cast.421.sroa_cast.sroa_cast.sroa_idx65, align 8, !dbg !878
  %tmpv.79.sroa.0.sroa.3.0.tmpv.79.sroa.0.0.cast.421.sroa_cast.sroa_idx49 = getelementptr inbounds { { i8*, i64 }, { i8*, i64 }, %error.0 }, { { i8*, i64 }, { i8*, i64 }, %error.0 }* %sret.actual.22, i64 0, i32 1, !dbg !878
  %tmpv.79.sroa.0.sroa.3.0.tmpv.79.sroa.0.0.cast.421.sroa_cast.sroa_cast = bitcast { i8*, i64 }* %tmpv.79.sroa.0.sroa.3.0.tmpv.79.sroa.0.0.cast.421.sroa_cast.sroa_idx49 to i64*, !dbg !878
  %tmpv.79.sroa.0.sroa.3.0.copyload50 = load i64, i64* %tmpv.79.sroa.0.sroa.3.0.tmpv.79.sroa.0.0.cast.421.sroa_cast.sroa_cast, align 8, !dbg !878
  %tmpv.79.sroa.0.sroa.4.0.tmpv.79.sroa.0.0.cast.421.sroa_cast.sroa_idx51 = getelementptr inbounds { { i8*, i64 }, { i8*, i64 }, %error.0 }, { { i8*, i64 }, { i8*, i64 }, %error.0 }* %sret.actual.22, i64 0, i32 1, i32 1, !dbg !878
  %tmpv.79.sroa.0.sroa.4.0.copyload52 = load i64, i64* %tmpv.79.sroa.0.sroa.4.0.tmpv.79.sroa.0.0.cast.421.sroa_cast.sroa_idx51, align 8, !dbg !878
  %tmpv.79.sroa.4.0.cast.421.sroa_idx28 = getelementptr inbounds { { i8*, i64 }, { i8*, i64 }, %error.0 }, { { i8*, i64 }, { i8*, i64 }, %error.0 }* %sret.actual.22, i64 0, i32 2, i32 0, !dbg !878
  %tmpv.79.sroa.4.0.copyload29 = load { %_type.0*, { i64, i64 } (i8*, i8*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)* }** %tmpv.79.sroa.4.0.cast.421.sroa_idx28, align 8, !dbg !878
  call void @llvm.dbg.value(metadata i64 %tmpv.79.sroa.0.sroa.0.sroa.0.0.copyload64, metadata !880, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !881
  call void @llvm.dbg.value(metadata i64 %tmpv.79.sroa.0.sroa.0.sroa.3.0.copyload66, metadata !880, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !881
  call void @llvm.dbg.value(metadata i64 %tmpv.79.sroa.0.sroa.3.0.copyload50, metadata !882, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !881
  call void @llvm.dbg.value(metadata i64 %tmpv.79.sroa.0.sroa.4.0.copyload52, metadata !882, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !881
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.79.sroa.4.0.copyload29, metadata !883, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !881
  %icmp.26 = icmp eq { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.79.sroa.4.0.copyload29, null, !dbg !884
  br i1 %icmp.26, label %else.28, label %then.28

fallthrough.27:                                   ; preds = %else.25, %else.32
  call void @llvm.dbg.value(metadata i64 0, metadata !835, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !836
  call void @llvm.dbg.value(metadata i64 0, metadata !835, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !836
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0), !dbg !885
  ret { i64, i64 } zeroinitializer, !dbg !885

then.28:                                          ; preds = %then.27
  %tmpv.79.sroa.5.0.cast.421.sroa_idx30 = getelementptr inbounds { { i8*, i64 }, { i8*, i64 }, %error.0 }, { { i8*, i64 }, { i8*, i64 }, %error.0 }* %sret.actual.22, i64 0, i32 2, i32 1, !dbg !878
  %8 = bitcast i8** %tmpv.79.sroa.5.0.cast.421.sroa_idx30 to i64*, !dbg !878
  %tmpv.79.sroa.5.0.copyload31142 = load i64, i64* %8, align 8, !dbg !878
  call void @llvm.dbg.value(metadata i8** %tmpv.79.sroa.5.0.cast.421.sroa_idx30, metadata !883, metadata !DIExpression(DW_OP_deref, DW_OP_LLVM_fragment, 64, 64)), !dbg !881
  %9 = ptrtoint { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.79.sroa.4.0.copyload29 to i64, !dbg !886
  call void @llvm.dbg.value(metadata i64 %9, metadata !835, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !836
  call void @llvm.dbg.value(metadata i64 %tmpv.79.sroa.5.0.copyload31142, metadata !835, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !836
  %ld.33.fca.0.insert = insertvalue { i64, i64 } undef, i64 %9, 0, !dbg !886
  %ld.33.fca.1.insert = insertvalue { i64, i64 } %ld.33.fca.0.insert, i64 %tmpv.79.sroa.5.0.copyload31142, 1, !dbg !886
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7), !dbg !886
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0), !dbg !886
  ret { i64, i64 } %ld.33.fca.1.insert, !dbg !886

else.28:                                          ; preds = %then.27
  call void @net.ParseIP(%IP.0* nonnull sret %sret.actual.23, i8* nest undef, i64 %tmpv.79.sroa.0.sroa.0.sroa.0.0.copyload64, i64 %tmpv.79.sroa.0.sroa.0.sroa.3.0.copyload66), !dbg !887
  %cast.440 = bitcast %IP.0* %sret.actual.23 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* nonnull align 8 %cast.440, i64 24, i1 false)
  %call.25 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @net.IP..d, i64 0, i32 0)), !dbg !888
  %cast.443 = bitcast %IP.0* %tmpv.84 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.443, i8* nonnull align 8 %7, i64 24, i1 false)
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @net.IP..d, i64 0, i32 0), i8* %call.25, i8* nonnull %cast.443), !dbg !888
  %call.26 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !888
  %gatewayDevice.sroa.0.0.cast.449.sroa_cast = bitcast { i8*, i64 }* %tmpv.86 to i64*
  store i64 %tmpv.79.sroa.0.sroa.3.0.copyload50, i64* %gatewayDevice.sroa.0.0.cast.449.sroa_cast, align 8
  %gatewayDevice.sroa.9.0.cast.449.sroa_idx38 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.86, i64 0, i32 1
  store i64 %tmpv.79.sroa.0.sroa.4.0.copyload52, i64* %gatewayDevice.sroa.9.0.cast.449.sroa_idx38, align 8
  %cast.452 = bitcast { i8*, i64 }* %tmpv.86 to i8*, !dbg !888
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.26, i8* nonnull %cast.452), !dbg !888
  %tmp.14.sroa.0.0.cast.456.sroa_idx = getelementptr inbounds [2 x %IPST.11], [2 x %IPST.11]* %tmpv.87, i64 0, i64 0, i32 0, !dbg !888
  store %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @net.IP..d, i64 0, i32 0), %_type.0** %tmp.14.sroa.0.0.cast.456.sroa_idx, align 8, !dbg !888
  %tmp.14.sroa.2.0.cast.456.sroa_idx134 = getelementptr inbounds [2 x %IPST.11], [2 x %IPST.11]* %tmpv.87, i64 0, i64 0, i32 1, !dbg !888
  store i8* %call.25, i8** %tmp.14.sroa.2.0.cast.456.sroa_idx134, align 8, !dbg !888
  %tmp.15.sroa.0.0.cast.458.sroa_idx = getelementptr inbounds [2 x %IPST.11], [2 x %IPST.11]* %tmpv.87, i64 0, i64 1, i32 0, !dbg !888
  store %_type.0* @string..d, %_type.0** %tmp.15.sroa.0.0.cast.458.sroa_idx, align 8, !dbg !888
  %tmp.15.sroa.2.0.cast.458.sroa_idx135 = getelementptr inbounds [2 x %IPST.11], [2 x %IPST.11]* %tmpv.87, i64 0, i64 1, i32 1, !dbg !888
  store i8* %call.26, i8** %tmp.15.sroa.2.0.cast.458.sroa_idx135, align 8, !dbg !888
  %field.96 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.16, i64 0, i32 0, !dbg !888
  %cast.461 = getelementptr inbounds [2 x %IPST.11], [2 x %IPST.11]* %tmpv.87, i64 0, i64 0, !dbg !888
  store %IPST.11* %cast.461, %IPST.11** %field.96, align 8, !dbg !888
  %field.97 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.16, i64 0, i32 1, !dbg !888
  store i64 2, i64* %field.97, align 8, !dbg !888
  %field.98 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.16, i64 0, i32 2, !dbg !888
  store i64 2, i64* %field.98, align 8, !dbg !888
  call void @log.Printf(i8* nest undef, i64 ptrtoint ([29 x i8]* @const.103 to i64), i64 28, %IPST.6* byval nonnull %tmp.16), !dbg !888
  %field.99 = getelementptr inbounds %Client.0, %Client.0* %c, i64 0, i32 5, !dbg !889
  %.field.ld.11 = load i8, i8* %field.73, align 1, !dbg !891
  call void @llvm.dbg.value(metadata %IP.0* %gateway, metadata !892, metadata !DIExpression(DW_OP_deref)), !dbg !893
  %call.27 = call { i64, i64 } @command_line_arguments.AddRoute(i8* nest undef, %IP.0* byval nonnull %field.99, %IP.0* byval nonnull %gateway, i64 %tmpv.79.sroa.0.sroa.3.0.copyload50, i64 %tmpv.79.sroa.0.sroa.4.0.copyload52, i8 zeroext %.field.ld.11), !dbg !894
  %call.27.fca.0.extract = extractvalue { i64, i64 } %call.27, 0, !dbg !894
  call void @llvm.dbg.value(metadata i64 %call.27.fca.0.extract, metadata !895, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !896
  %icmp.29 = icmp eq i64 %call.27.fca.0.extract, 0, !dbg !897
  br i1 %icmp.29, label %else.32, label %then.31

then.31:                                          ; preds = %else.28
  call void @llvm.dbg.value(metadata i64 %call.27.fca.0.extract, metadata !835, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !836
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7), !dbg !898
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0), !dbg !898
  ret { i64, i64 } %call.27, !dbg !898

else.32:                                          ; preds = %else.28
  %cast.473 = bitcast %IP.0* %tmpv.90 to i8*
  %cast.474 = bitcast %IP.0* %field.99 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.473, i8* nonnull align 8 %cast.474, i64 24, i1 false)
  %call.28 = call { i64, i64 } @net.IP.String(i8* nest undef, %IP.0* nonnull %tmpv.90), !dbg !899
  %call.28.fca.0.extract = extractvalue { i64, i64 } %call.28, 0, !dbg !899
  %call.28.fca.1.extract = extractvalue { i64, i64 } %call.28, 1, !dbg !899
  %call.29 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !900
  %tmpv.92.sroa.0.0.cast.479.sroa_cast = bitcast { i8*, i64 }* %tmpv.94 to i64*
  store i64 %call.28.fca.0.extract, i64* %tmpv.92.sroa.0.0.cast.479.sroa_cast, align 8
  %tmpv.92.sroa.2.0.cast.479.sroa_idx8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.94, i64 0, i32 1
  store i64 %call.28.fca.1.extract, i64* %tmpv.92.sroa.2.0.cast.479.sroa_idx8, align 8
  %cast.482 = bitcast { i8*, i64 }* %tmpv.94 to i8*, !dbg !900
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.29, i8* nonnull %cast.482), !dbg !900
  %call.30 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !900
  %gw.sroa.0.0.cast.484.sroa_cast = bitcast { i8*, i64 }* %tmpv.96 to i64*
  store i64 %tmpv.79.sroa.0.sroa.0.sroa.0.0.copyload64, i64* %gw.sroa.0.0.cast.484.sroa_cast, align 8
  %gw.sroa.7.0.cast.484.sroa_idx58 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.96, i64 0, i32 1
  store i64 %tmpv.79.sroa.0.sroa.0.sroa.3.0.copyload66, i64* %gw.sroa.7.0.cast.484.sroa_idx58, align 8
  %cast.487 = bitcast { i8*, i64 }* %tmpv.96 to i8*, !dbg !900
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.30, i8* nonnull %cast.487), !dbg !900
  %call.31 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !900
  %gatewayDevice.sroa.0.0.cast.489.sroa_cast = bitcast { i8*, i64 }* %tmpv.98 to i64*
  store i64 %tmpv.79.sroa.0.sroa.3.0.copyload50, i64* %gatewayDevice.sroa.0.0.cast.489.sroa_cast, align 8
  %gatewayDevice.sroa.9.0.cast.489.sroa_idx40 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.98, i64 0, i32 1
  store i64 %tmpv.79.sroa.0.sroa.4.0.copyload52, i64* %gatewayDevice.sroa.9.0.cast.489.sroa_idx40, align 8
  %cast.492 = bitcast { i8*, i64 }* %tmpv.98 to i8*, !dbg !900
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.31, i8* nonnull %cast.492), !dbg !900
  %tmp.17.sroa.0.0.cast.496.sroa_idx = getelementptr inbounds [3 x %IPST.11], [3 x %IPST.11]* %tmpv.99, i64 0, i64 0, i32 0, !dbg !900
  store %_type.0* @string..d, %_type.0** %tmp.17.sroa.0.0.cast.496.sroa_idx, align 8, !dbg !900
  %tmp.17.sroa.2.0.cast.496.sroa_idx136 = getelementptr inbounds [3 x %IPST.11], [3 x %IPST.11]* %tmpv.99, i64 0, i64 0, i32 1, !dbg !900
  store i8* %call.29, i8** %tmp.17.sroa.2.0.cast.496.sroa_idx136, align 8, !dbg !900
  %tmp.18.sroa.0.0.cast.498.sroa_idx = getelementptr inbounds [3 x %IPST.11], [3 x %IPST.11]* %tmpv.99, i64 0, i64 1, i32 0, !dbg !900
  store %_type.0* @string..d, %_type.0** %tmp.18.sroa.0.0.cast.498.sroa_idx, align 8, !dbg !900
  %tmp.18.sroa.2.0.cast.498.sroa_idx137 = getelementptr inbounds [3 x %IPST.11], [3 x %IPST.11]* %tmpv.99, i64 0, i64 1, i32 1, !dbg !900
  store i8* %call.30, i8** %tmp.18.sroa.2.0.cast.498.sroa_idx137, align 8, !dbg !900
  %tmp.19.sroa.0.0.cast.500.sroa_idx = getelementptr inbounds [3 x %IPST.11], [3 x %IPST.11]* %tmpv.99, i64 0, i64 2, i32 0, !dbg !900
  store %_type.0* @string..d, %_type.0** %tmp.19.sroa.0.0.cast.500.sroa_idx, align 8, !dbg !900
  %tmp.19.sroa.2.0.cast.500.sroa_idx138 = getelementptr inbounds [3 x %IPST.11], [3 x %IPST.11]* %tmpv.99, i64 0, i64 2, i32 1, !dbg !900
  store i8* %call.31, i8** %tmp.19.sroa.2.0.cast.500.sroa_idx138, align 8, !dbg !900
  %field.109 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.20, i64 0, i32 0, !dbg !900
  %cast.503 = getelementptr inbounds [3 x %IPST.11], [3 x %IPST.11]* %tmpv.99, i64 0, i64 0, !dbg !900
  store %IPST.11* %cast.503, %IPST.11** %field.109, align 8, !dbg !900
  %field.110 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.20, i64 0, i32 1, !dbg !900
  store i64 3, i64* %field.110, align 8, !dbg !900
  %field.111 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.20, i64 0, i32 2, !dbg !900
  store i64 3, i64* %field.111, align 8, !dbg !900
  call void @log.Printf(i8* nest undef, i64 ptrtoint ([40 x i8]* @const.105 to i64), i64 39, %IPST.6* byval nonnull %tmp.20), !dbg !900
  %field.112 = getelementptr inbounds %Client.0, %Client.0* %c, i64 0, i32 18, !dbg !901
  call void @llvm.dbg.value(metadata %IP.0* %gateway, metadata !892, metadata !DIExpression(DW_OP_deref)), !dbg !893
  call void @command_line_arguments.Reverser.AddRouteEntry(i8* nest undef, %Reverser.0* nonnull %field.112, %IP.0* byval nonnull %field.99, %IP.0* byval nonnull %gateway, i64 %tmpv.79.sroa.0.sroa.3.0.copyload50, i64 %tmpv.79.sroa.0.sroa.4.0.copyload52), !dbg !902
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7)
  br label %fallthrough.27
}

define void @command_line_arguments.Client.netRecvRoutine(i8* nest nocapture readnone %nest.5, %Client.0* %c) #0 personality i32 (i32, i32, i64, i8*, i8*)* @__gccgo_personality_v0 !dbg !903 {
entry:
  %tmp.44 = alloca %IPST.6, align 8
  %tmp.41 = alloca %IPST.6, align 8
  %tmp.38 = alloca %IPST.6, align 8
  %tmpv.186 = alloca i8, align 1
  %tmpv.190 = alloca { %WaitGroup.0* }, align 8
  %tmpv.198 = alloca { i8*, i64 }, align 8
  %tmpv.199 = alloca [1 x %IPST.11], align 8
  %tmpv.203 = alloca { i8*, i64 }, align 8
  %tmpv.205 = alloca [2 x %IPST.11], align 8
  %tmpv.210 = alloca { i8*, i64 }, align 8
  %tmpv.211 = alloca [1 x %IPST.11], align 8
  %tmpv.212 = alloca %IPPacket.0*, align 8
  call void @llvm.dbg.value(metadata %Client.0* %c, metadata !904, metadata !DIExpression()), !dbg !905
  store i8 0, i8* %tmpv.186, align 1
  %icmp.71 = icmp eq %Client.0* %c, null, !dbg !906
  br i1 %icmp.71, label %then.75, label %fallthrough.75

finally.1:                                        ; preds = %fallthrough.79, %fallthrough.85, %pad.2.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, %catchpad.1
  %ehtmp.1.sroa.0.0 = phi i8* [ %ex2.1.fca.0.extract, %catchpad.1 ], [ undef, %pad.2.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp ], [ undef, %fallthrough.85 ], [ undef, %fallthrough.79 ]
  %ehtmp.1.sroa.2.0 = phi i32 [ %ex2.1.fca.1.extract, %catchpad.1 ], [ undef, %pad.2.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp ], [ undef, %fallthrough.85 ], [ undef, %fallthrough.79 ]
  %finvar.1.0 = phi i8 [ 0, %catchpad.1 ], [ 1, %pad.2.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp ], [ 1, %fallthrough.85 ], [ 1, %fallthrough.79 ]
  br label %finish.1

pad.2.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp: ; preds = %fallthrough.82, %then.82, %cont.50, %cont.36, %then.83, %cont.46, %default.1, %cont.53, %then.81, %cont.45, %then.84, %cont.44, %case.2, %cont.52, %cont.51, %cont.48, %label.4, %then.80, %then.85, %fallthrough.77, %then.77, %cont.42, %cont.41, %cont.40, %cont.39, %then.79, %fallthrough.76, %then.76, %fallthrough.75, %then.75
  %lpad.loopexit.split-lp49 = landingpad { i8*, i32 }
          catch i8* null
  invoke void @runtime.checkdefer(i8* nest undef, i8* nonnull %tmpv.186)
          to label %finally.1 unwind label %catchpad.1, !dbg !907

then.75:                                          ; preds = %entry
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.75 unwind label %pad.2.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !906

fallthrough.75:                                   ; preds = %entry, %then.75
  %field.202 = getelementptr inbounds %Client.0, %Client.0* %c, i64 0, i32 4, !dbg !906
  invoke void @sync.WaitGroup.Add(i8* nest undef, %WaitGroup.0* nonnull %field.202, i64 1)
          to label %cont.31 unwind label %pad.2.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !908

cont.31:                                          ; preds = %fallthrough.75
  br i1 %icmp.71, label %then.76, label %fallthrough.76

then.76:                                          ; preds = %cont.31
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.76 unwind label %pad.2.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !909

fallthrough.76:                                   ; preds = %cont.31, %then.76
  %cast.705 = bitcast { %WaitGroup.0* }* %tmpv.190 to i8*
  %field.204 = getelementptr inbounds { %WaitGroup.0* }, { %WaitGroup.0* }* %tmpv.190, i64 0, i32 0, !dbg !910
  store %WaitGroup.0* %field.202, %WaitGroup.0** %field.204, align 8, !dbg !910
  invoke void @runtime.deferproc(i8* nest undef, i8* nonnull %tmpv.186, %__go_descriptor.63* bitcast (i8 (i8*, { %WaitGroup.0* }*)* @command_line_arguments.command_line_arguments..thunk5 to %__go_descriptor.63*), i8* nonnull %cast.705)
          to label %label.0.preheader unwind label %pad.2.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !910

label.0.preheader:                                ; preds = %fallthrough.76
  %field.205 = getelementptr inbounds %Client.0, %Client.0* %c, i64 0, i32 14
  %0 = bitcast %Conn.1** %field.205 to i64*
  %cast.737 = bitcast { i8*, i64 }* %tmpv.203 to i8*
  %1 = bitcast %IPPacket.0** %tmpv.212 to i8**
  %tmp.39.sroa.0.0.cast.742.sroa_idx = getelementptr inbounds [2 x %IPST.11], [2 x %IPST.11]* %tmpv.205, i64 0, i64 0, i32 0
  %tmp.39.sroa.2.0.cast.742.sroa_idx16 = getelementptr inbounds [2 x %IPST.11], [2 x %IPST.11]* %tmpv.205, i64 0, i64 0, i32 1
  %tmp.40.sroa.0.0.cast.744.sroa_idx = getelementptr inbounds [2 x %IPST.11], [2 x %IPST.11]* %tmpv.205, i64 0, i64 1, i32 0
  %tmp.40.sroa.2.0.cast.744.sroa_idx17 = getelementptr inbounds [2 x %IPST.11], [2 x %IPST.11]* %tmpv.205, i64 0, i64 1, i32 1
  %field.224 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.41, i64 0, i32 0
  %cast.746 = getelementptr inbounds [2 x %IPST.11], [2 x %IPST.11]* %tmpv.205, i64 0, i64 0
  %field.225 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.41, i64 0, i32 1
  %field.226 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.41, i64 0, i32 2
  %cast.770 = bitcast %IPPacket.0** %tmpv.212 to i8*
  %tmpv.208.sroa.0.0.cast.759.sroa_cast = bitcast { i8*, i64 }* %tmpv.210 to i64*
  %tmpv.208.sroa.2.0.cast.759.sroa_idx3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.210, i64 0, i32 1
  %cast.762 = bitcast { i8*, i64 }* %tmpv.210 to i8*
  %tmp.43.sroa.0.0.cast.764.sroa_idx = getelementptr inbounds [1 x %IPST.11], [1 x %IPST.11]* %tmpv.211, i64 0, i64 0, i32 0
  %tmp.43.sroa.2.0.cast.764.sroa_idx18 = getelementptr inbounds [1 x %IPST.11], [1 x %IPST.11]* %tmpv.211, i64 0, i64 0, i32 1
  %field.234 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.44, i64 0, i32 0
  %cast.767 = getelementptr inbounds [1 x %IPST.11], [1 x %IPST.11]* %tmpv.211, i64 0, i64 0
  %field.235 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.44, i64 0, i32 1
  %field.236 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.44, i64 0, i32 2
  %field.218 = getelementptr inbounds %Client.0, %Client.0* %c, i64 0, i32 9
  %tmpv.196.sroa.0.0.cast.723.sroa_cast = bitcast { i8*, i64 }* %tmpv.198 to i64*
  %tmpv.196.sroa.2.0.cast.723.sroa_idx9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.198, i64 0, i32 1
  %cast.726 = bitcast { i8*, i64 }* %tmpv.198 to i8*
  %tmp.37.sroa.0.0.cast.728.sroa_idx = getelementptr inbounds [1 x %IPST.11], [1 x %IPST.11]* %tmpv.199, i64 0, i64 0, i32 0
  %tmp.37.sroa.2.0.cast.728.sroa_idx15 = getelementptr inbounds [1 x %IPST.11], [1 x %IPST.11]* %tmpv.199, i64 0, i64 0, i32 1
  %field.215 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.38, i64 0, i32 0
  %cast.731 = getelementptr inbounds [1 x %IPST.11], [1 x %IPST.11]* %tmpv.199, i64 0, i64 0
  %field.216 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.38, i64 0, i32 1
  %field.217 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.38, i64 0, i32 2
  br label %label.0

label.0:                                          ; preds = %label.0.preheader, %label.4
  %tmpv.213.0 = phi %Client.0* [ %tmpv.213.1.ph, %label.4 ], [ undef, %label.0.preheader ]
  %tmpv.214.0 = phi %Client.0* [ %tmpv.214.2, %label.4 ], [ undef, %label.0.preheader ]
  %tmpv.215.0 = phi %Client.0* [ %tmpv.215.1, %label.4 ], [ undef, %label.0.preheader ]
  br i1 %icmp.71, label %then.85, label %fallthrough.85

then.77:                                          ; preds = %then.86
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.77 unwind label %pad.2.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !911

fallthrough.77:                                   ; preds = %then.86, %then.77
  %.field.ld.321920 = load i64, i64* %0, align 8, !dbg !911
  %call.58 = invoke %Decoder.0* @encoding_gob.NewDecoder(i8* nest undef, i64 ptrtoint ({ %_type.0*, void ({ i64, %error.0 }*, i8*, %Conn.1*, { i8*, i64, i64 }*)* }* @pimt..interface.4Read.0func.8.6.7uint8.9.8int.3error.9.5..crypto_tls.Conn to i64), i64 %.field.ld.321920)
          to label %label.2.outer unwind label %pad.2.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !913

label.2.outer:                                    ; preds = %fallthrough.77, %fallthrough.82
  %tmpv.213.1.ph = phi %Client.0* [ %tmpv.213.3, %fallthrough.82 ], [ %tmpv.213.0, %fallthrough.77 ]
  %tmpv.214.1.ph = phi %Client.0* [ %tmpv.214.2, %fallthrough.82 ], [ %tmpv.214.0, %fallthrough.77 ]
  br label %label.2

label.2:                                          ; preds = %label.2.backedge, %label.2.outer
  %tmpv.214.1 = phi %Client.0* [ %tmpv.214.1.ph, %label.2.outer ], [ %tmpv.214.2, %label.2.backedge ]
  br i1 %icmp.71, label %then.83, label %fallthrough.83

cont.36:                                          ; preds = %then.84
  call void @llvm.dbg.value(metadata i8* %call.59, metadata !914, metadata !DIExpression()), !dbg !918
  %2 = ptrtoint i8* %call.59 to i64, !dbg !919
  %call.60 = invoke { i64, i64 } @encoding_gob.Decoder.Decode(i8* nest undef, %Decoder.0* %call.58, i64 ptrtoint (%PtrType.0* @type...1github_com_twitchyliquid64_subnet_subnet_conn.PktType to i64), i64 %2)
          to label %cont.37 unwind label %pad.2.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !920

cont.37:                                          ; preds = %cont.36
  %call.60.fca.0.extract = extractvalue { i64, i64 } %call.60, 0, !dbg !920
  call void @llvm.dbg.value(metadata i64 %call.60.fca.0.extract, metadata !921, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !922
  %icmp.76 = icmp eq i64 %call.60.fca.0.extract, 0, !dbg !923
  br i1 %icmp.76, label %else.78, label %then.78

then.78:                                          ; preds = %cont.37
  %call.60.fca.1.extract.le = extractvalue { i64, i64 } %call.60, 1, !dbg !920
  %3 = inttoptr i64 %call.60.fca.0.extract to { %_type.0*, { i64, i64 } (i8*, i8*)* }*, !dbg !923
  br i1 %icmp.71, label %then.79, label %fallthrough.79

else.78:                                          ; preds = %cont.37
  %.ld.53 = load i8, i8* %call.59, align 1, !dbg !924
  %cond = icmp eq i8 %.ld.53, 1
  br i1 %cond, label %case.2, label %default.1

then.79:                                          ; preds = %then.78
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.79 unwind label %pad.2.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !925

fallthrough.79:                                   ; preds = %then.78, %then.79
  %.field.ld.34 = load i8, i8* %field.218, align 1, !dbg !925
  %icmp.75 = icmp eq i8 %.field.ld.34, 0, !dbg !926
  br i1 %icmp.75, label %then.80, label %finally.1

then.80:                                          ; preds = %fallthrough.79
  %field.211 = getelementptr inbounds { %_type.0*, { i64, i64 } (i8*, i8*)* }, { %_type.0*, { i64, i64 } (i8*, i8*)* }* %3, i64 0, i32 1, !dbg !927
  %.field.ld.33 = load { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)** %field.211, align 8, !dbg !927
  %4 = inttoptr i64 %call.60.fca.1.extract.le to i8*, !dbg !927
  %call.61 = invoke { i64, i64 } %.field.ld.33(i8* nest undef, i8* %4)
          to label %cont.39 unwind label %pad.2.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !927

cont.39:                                          ; preds = %then.80
  %call.62 = invoke i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d)
          to label %cont.40 unwind label %pad.2.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !928

cont.40:                                          ; preds = %cont.39
  %call.61.fca.1.extract = extractvalue { i64, i64 } %call.61, 1, !dbg !927
  %call.61.fca.0.extract = extractvalue { i64, i64 } %call.61, 0, !dbg !927
  store i64 %call.61.fca.0.extract, i64* %tmpv.196.sroa.0.0.cast.723.sroa_cast, align 8
  store i64 %call.61.fca.1.extract, i64* %tmpv.196.sroa.2.0.cast.723.sroa_idx9, align 8
  invoke void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.62, i8* nonnull %cast.726)
          to label %cont.41 unwind label %pad.2.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !928

cont.41:                                          ; preds = %cont.40
  store %_type.0* @string..d, %_type.0** %tmp.37.sroa.0.0.cast.728.sroa_idx, align 8, !dbg !928
  store i8* %call.62, i8** %tmp.37.sroa.2.0.cast.728.sroa_idx15, align 8, !dbg !928
  store %IPST.11* %cast.731, %IPST.11** %field.215, align 8, !dbg !928
  store i64 1, i64* %field.216, align 8, !dbg !928
  store i64 1, i64* %field.217, align 8, !dbg !928
  invoke void @log.Printf(i8* nest undef, i64 ptrtoint ([20 x i8]* @const.122 to i64), i64 19, %IPST.6* byval nonnull %tmp.38)
          to label %cont.42 unwind label %pad.2.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !928

cont.42:                                          ; preds = %cont.41
  invoke void @command_line_arguments.Client.connectionProblem(i8* nest undef, %Client.0* nonnull %c)
          to label %label.4 unwind label %pad.2.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !929

label.4:                                          ; preds = %fallthrough.83, %cont.42
  invoke void @time.Sleep(i8* nest undef, i64 150000000)
          to label %label.0 unwind label %pad.2.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !930

default.1:                                        ; preds = %else.78
  %call.63 = invoke i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d)
          to label %cont.44 unwind label %pad.2.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !931

case.2:                                           ; preds = %else.78
  %call.65 = invoke i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.IPPacket..d, i64 0, i32 0))
          to label %cont.48 unwind label %pad.2.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !932

cont.44:                                          ; preds = %default.1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.737, i8* align 8 bitcast ({ i8*, i64 }* @const.125 to i8*), i64 16, i1 false)
  invoke void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.63, i8* nonnull %cast.737)
          to label %cont.45 unwind label %pad.2.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !931

cont.45:                                          ; preds = %cont.44
  %call.64 = invoke i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @github_com_twitchyliquid64_subnet_subnet_conn.PktType..d)
          to label %cont.46 unwind label %pad.2.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !931

cont.46:                                          ; preds = %cont.45
  %.ld.51 = load i8, i8* %call.59, align 1, !dbg !934
  store i8 %.ld.51, i8* %call.64, align 1, !dbg !931
  store %_type.0* @string..d, %_type.0** %tmp.39.sroa.0.0.cast.742.sroa_idx, align 8, !dbg !931
  store i8* %call.63, i8** %tmp.39.sroa.2.0.cast.742.sroa_idx16, align 8, !dbg !931
  store %_type.0* @github_com_twitchyliquid64_subnet_subnet_conn.PktType..d, %_type.0** %tmp.40.sroa.0.0.cast.744.sroa_idx, align 8, !dbg !931
  store i8* %call.64, i8** %tmp.40.sroa.2.0.cast.744.sroa_idx17, align 8, !dbg !931
  store %IPST.11* %cast.746, %IPST.11** %field.224, align 8, !dbg !931
  store i64 2, i64* %field.225, align 8, !dbg !931
  store i64 2, i64* %field.226, align 8, !dbg !931
  invoke void @log.Println(i8* nest undef, %IPST.6* byval nonnull %tmp.41)
          to label %label.2.backedge unwind label %pad.2.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !931

cont.48:                                          ; preds = %case.2
  call void @llvm.dbg.value(metadata i8* %call.65, metadata !935, metadata !DIExpression()), !dbg !944
  %5 = ptrtoint i8* %call.65 to i64, !dbg !945
  %call.66 = invoke { i64, i64 } @encoding_gob.Decoder.Decode(i8* nest undef, %Decoder.0* %call.58, i64 ptrtoint (%PtrType.0* @type...1command_line_arguments.IPPacket to i64), i64 %5)
          to label %cont.49 unwind label %pad.2.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !946

cont.49:                                          ; preds = %cont.48
  %call.66.fca.0.extract = extractvalue { i64, i64 } %call.66, 0, !dbg !946
  call void @llvm.dbg.value(metadata i64 %call.66.fca.0.extract, metadata !947, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !948
  %icmp.77 = icmp eq i64 %call.66.fca.0.extract, 0, !dbg !949
  br i1 %icmp.77, label %else.81, label %then.81

then.81:                                          ; preds = %cont.49
  %6 = inttoptr i64 %call.66.fca.0.extract to { %_type.0*, { i64, i64 } (i8*, i8*)* }*, !dbg !949
  %call.66.fca.1.extract = extractvalue { i64, i64 } %call.66, 1, !dbg !946
  call void @llvm.dbg.value(metadata i64 %call.66.fca.1.extract, metadata !947, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !948
  %field.230 = getelementptr inbounds { %_type.0*, { i64, i64 } (i8*, i8*)* }, { %_type.0*, { i64, i64 } (i8*, i8*)* }* %6, i64 0, i32 1, !dbg !950
  %.field.ld.35 = load { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)** %field.230, align 8, !dbg !950
  %7 = inttoptr i64 %call.66.fca.1.extract to i8*, !dbg !950
  %call.67 = invoke { i64, i64 } %.field.ld.35(i8* nest undef, i8* %7)
          to label %cont.50 unwind label %pad.2.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !950

else.81:                                          ; preds = %cont.49
  store i8* %call.65, i8** %1, align 8
  br i1 %icmp.71, label %then.82, label %fallthrough.82

cont.50:                                          ; preds = %then.81
  %call.68 = invoke i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d)
          to label %cont.51 unwind label %pad.2.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !951

cont.51:                                          ; preds = %cont.50
  %call.67.fca.1.extract = extractvalue { i64, i64 } %call.67, 1, !dbg !950
  %call.67.fca.0.extract = extractvalue { i64, i64 } %call.67, 0, !dbg !950
  store i64 %call.67.fca.0.extract, i64* %tmpv.208.sroa.0.0.cast.759.sroa_cast, align 8
  store i64 %call.67.fca.1.extract, i64* %tmpv.208.sroa.2.0.cast.759.sroa_idx3, align 8
  invoke void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.68, i8* nonnull %cast.762)
          to label %cont.52 unwind label %pad.2.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !951

cont.52:                                          ; preds = %cont.51
  store %_type.0* @string..d, %_type.0** %tmp.43.sroa.0.0.cast.764.sroa_idx, align 8, !dbg !951
  store i8* %call.68, i8** %tmp.43.sroa.2.0.cast.764.sroa_idx18, align 8, !dbg !951
  store %IPST.11* %cast.767, %IPST.11** %field.234, align 8, !dbg !951
  store i64 1, i64* %field.235, align 8, !dbg !951
  store i64 1, i64* %field.236, align 8, !dbg !951
  invoke void @log.Printf(i8* nest undef, i64 ptrtoint ([30 x i8]* @const.126 to i64), i64 29, %IPST.6* byval nonnull %tmp.44)
          to label %cont.53 unwind label %pad.2.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !951

cont.53:                                          ; preds = %cont.52
  invoke void @command_line_arguments.Client.connectionProblem(i8* nest undef, %Client.0* %c)
          to label %label.2.backedge unwind label %pad.2.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !952

label.2.backedge:                                 ; preds = %cont.53, %cont.46
  br label %label.2

then.82:                                          ; preds = %else.81
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.82 unwind label %pad.2.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !953

fallthrough.82:                                   ; preds = %else.81, %then.82
  %tmpv.213.3 = phi %Client.0* [ %tmpv.213.1.ph, %then.82 ], [ %c, %else.81 ]
  %field.238 = getelementptr inbounds %Client.0, %Client.0* %tmpv.213.3, i64 0, i32 11, !dbg !953
  %.field.ld.36 = load {}*, {}** %field.238, align 8, !dbg !953
  invoke void @runtime.chansend1(i8* nest undef, {}* %.field.ld.36, i8* nonnull %cast.770)
          to label %label.2.outer unwind label %pad.2.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !954

then.83:                                          ; preds = %label.2
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.83 unwind label %pad.2.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !955

fallthrough.83:                                   ; preds = %label.2, %then.83
  %tmpv.214.2 = phi %Client.0* [ %tmpv.214.1, %then.83 ], [ %c, %label.2 ]
  %field.239 = getelementptr inbounds %Client.0, %Client.0* %tmpv.214.2, i64 0, i32 16, !dbg !955
  %.field.ld.37 = load i8, i8* %field.239, align 1, !dbg !955
  %8 = and i8 %.field.ld.37, 1, !dbg !955
  %trunc.84 = icmp eq i8 %8, 0, !dbg !955
  br i1 %trunc.84, label %label.4, label %then.84

then.84:                                          ; preds = %fallthrough.83
  %call.59 = invoke i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @github_com_twitchyliquid64_subnet_subnet_conn.PktType..d)
          to label %cont.36 unwind label %pad.2.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !956

then.85:                                          ; preds = %label.0
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %then.85.fallthrough.85_crit_edge unwind label %pad.2.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !957

then.85.fallthrough.85_crit_edge:                 ; preds = %then.85
  %.pre = getelementptr inbounds %Client.0, %Client.0* %tmpv.215.0, i64 0, i32 9, !dbg !957
  br label %fallthrough.85, !dbg !957

fallthrough.85:                                   ; preds = %then.85.fallthrough.85_crit_edge, %label.0
  %field.240.pre-phi = phi i8* [ %.pre, %then.85.fallthrough.85_crit_edge ], [ %field.218, %label.0 ], !dbg !957
  %tmpv.215.1 = phi %Client.0* [ %tmpv.215.0, %then.85.fallthrough.85_crit_edge ], [ %c, %label.0 ]
  %.field.ld.38 = load i8, i8* %field.240.pre-phi, align 1, !dbg !957
  %icmp.81 = icmp eq i8 %.field.ld.38, 0, !dbg !958
  br i1 %icmp.81, label %then.86, label %finally.1

then.86:                                          ; preds = %fallthrough.85
  br i1 %icmp.71, label %then.77, label %fallthrough.77

catchpad.1:                                       ; preds = %pad.2.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp
  %ex2.1 = landingpad { i8*, i32 }
          cleanup
  %ex2.1.fca.0.extract = extractvalue { i8*, i32 } %ex2.1, 0
  %ex2.1.fca.1.extract = extractvalue { i8*, i32 } %ex2.1, 1
  br label %finally.1

pad.3:                                            ; preds = %finish.1
  %ex.3 = landingpad { i8*, i32 }
          catch i8* null
  call void @runtime.checkdefer(i8* nest undef, i8* nonnull %tmpv.186), !dbg !907
  br label %finish.1

finish.1:                                         ; preds = %pad.3, %finally.1
  invoke void @runtime.deferreturn(i8* nest undef, i8* nonnull %tmpv.186)
          to label %cont.61 unwind label %pad.3, !dbg !907

cont.61:                                          ; preds = %finish.1
  %icmp.82 = icmp eq i8 %finvar.1.0, 1
  br i1 %icmp.82, label %finret.1, label %finres.1

finres.1:                                         ; preds = %cont.61
  %excv.1.fca.0.insert = insertvalue { i8*, i32 } undef, i8* %ehtmp.1.sroa.0.0, 0
  %excv.1.fca.1.insert = insertvalue { i8*, i32 } %excv.1.fca.0.insert, i32 %ehtmp.1.sroa.2.0, 1
  resume { i8*, i32 } %excv.1.fca.1.insert

finret.1:                                         ; preds = %cont.61
  ret void, !dbg !959
}

define void @command_line_arguments.Client.netSendRoutine(i8* nest nocapture readnone %nest.3, %Client.0* %c) #0 personality i32 (i32, i32, i64, i8*, i8*)* @__gccgo_personality_v0 !dbg !960 {
entry:
  %tmpv.183.i = alloca %IPST.1, align 8
  %tmpv.185.i = alloca %IPPacket.0*, align 8
  %tmp.34 = alloca %IPST.6, align 8
  %tmp.30 = alloca %IPST.6, align 8
  %tmpv.151 = alloca i8, align 1
  %tmpv.155 = alloca { %WaitGroup.0* }, align 8
  %tmpv.160 = alloca %IPPacket.0*, align 8
  %tmpv.164 = alloca %IP.0, align 8
  %tmpv.170 = alloca { i8*, i64 }, align 8
  %tmpv.171 = alloca [2 x %IPST.11], align 8
  %tmpv.176 = alloca { i8*, i64 }, align 8
  %tmpv.177 = alloca [2 x %IPST.11], align 8
  call void @llvm.dbg.value(metadata %Client.0* %c, metadata !961, metadata !DIExpression()), !dbg !962
  store i8 0, i8* %tmpv.151, align 1
  %icmp.55 = icmp eq %Client.0* %c, null, !dbg !963
  br i1 %icmp.55, label %then.56, label %fallthrough.56

finally.0:                                        ; preds = %fallthrough.73, %pad.0.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, %catchpad.0
  %ehtmp.0.sroa.0.0 = phi i8* [ %ex2.0.fca.0.extract, %catchpad.0 ], [ undef, %pad.0.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp ], [ undef, %fallthrough.73 ]
  %ehtmp.0.sroa.2.0 = phi i32 [ %ex2.0.fca.1.extract, %catchpad.0 ], [ undef, %pad.0.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp ], [ undef, %fallthrough.73 ]
  %finvar.0.0 = phi i8 [ 0, %catchpad.0 ], [ 1, %pad.0.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp ], [ 1, %fallthrough.73 ]
  br label %finish.0

pad.0.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp: ; preds = %else.65, %cont.12, %else.64, %fallthrough.63, %then.63, %fallthrough.61, %.noexc19, %.noexc18, %.noexc, %label.0.i, %then.73, %label.4, %cont.21, %else.68, %cont.19, %then.67, %cont.16, %else.66, %cont.14, %then.65, %then.60, %fallthrough.58, %then.58, %fallthrough.57, %then.57, %fallthrough.56, %then.56
  %lpad.loopexit.split-lp57 = landingpad { i8*, i32 }
          catch i8* null
  invoke void @runtime.checkdefer(i8* nest undef, i8* nonnull %tmpv.151)
          to label %finally.0 unwind label %catchpad.0, !dbg !964

then.56:                                          ; preds = %entry
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.56 unwind label %pad.0.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !963

fallthrough.56:                                   ; preds = %entry, %then.56
  %field.162 = getelementptr inbounds %Client.0, %Client.0* %c, i64 0, i32 4, !dbg !963
  invoke void @sync.WaitGroup.Add(i8* nest undef, %WaitGroup.0* nonnull %field.162, i64 1)
          to label %cont.1 unwind label %pad.0.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !965

cont.1:                                           ; preds = %fallthrough.56
  br i1 %icmp.55, label %then.57, label %fallthrough.57

then.57:                                          ; preds = %cont.1
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.57 unwind label %pad.0.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !966

fallthrough.57:                                   ; preds = %cont.1, %then.57
  %cast.632 = bitcast { %WaitGroup.0* }* %tmpv.155 to i8*
  %field.164 = getelementptr inbounds { %WaitGroup.0* }, { %WaitGroup.0* }* %tmpv.155, i64 0, i32 0, !dbg !967
  store %WaitGroup.0* %field.162, %WaitGroup.0** %field.164, align 8, !dbg !967
  invoke void @runtime.deferproc(i8* nest undef, i8* nonnull %tmpv.151, %__go_descriptor.63* bitcast (i8 (i8*, { %WaitGroup.0* }*)* @command_line_arguments.command_line_arguments..thunk4 to %__go_descriptor.63*), i8* nonnull %cast.632)
          to label %label.0.preheader unwind label %pad.0.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !967

label.0.preheader:                                ; preds = %fallthrough.57
  %field.165 = getelementptr inbounds %Client.0, %Client.0* %c, i64 0, i32 14
  %0 = bitcast %Conn.1** %field.165 to i64*
  %field.168 = getelementptr inbounds %Client.0, %Client.0* %c, i64 0, i32 16
  %field.169 = getelementptr inbounds %Client.0, %Client.0* %c, i64 0, i32 10
  %cast.644 = bitcast %IPPacket.0** %tmpv.160 to i8*
  %cast.646 = bitcast %IP.0* %tmpv.164 to i8*
  %1 = bitcast %IPST.1* %tmpv.183.i to i8*
  %2 = bitcast %IPPacket.0** %tmpv.185.i to i8*
  %cast.655 = bitcast { i8*, i64 }* %tmpv.170 to i8*
  %tmp.28.sroa.0.0.cast.662.sroa_idx = getelementptr inbounds [2 x %IPST.11], [2 x %IPST.11]* %tmpv.171, i64 0, i64 0, i32 0
  %tmp.28.sroa.2.0.cast.662.sroa_idx10 = getelementptr inbounds [2 x %IPST.11], [2 x %IPST.11]* %tmpv.171, i64 0, i64 0, i32 1
  %tmp.29.sroa.0.0.cast.664.sroa_idx = getelementptr inbounds [2 x %IPST.11], [2 x %IPST.11]* %tmpv.171, i64 0, i64 1, i32 0
  %3 = bitcast %_type.0** %tmp.29.sroa.0.0.cast.664.sroa_idx to i64*
  %tmp.29.sroa.2.0.cast.664.sroa_idx11 = getelementptr inbounds [2 x %IPST.11], [2 x %IPST.11]* %tmpv.171, i64 0, i64 1, i32 1
  %field.181 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.30, i64 0, i32 0
  %cast.666 = getelementptr inbounds [2 x %IPST.11], [2 x %IPST.11]* %tmpv.171, i64 0, i64 0
  %field.182 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.30, i64 0, i32 1
  %field.183 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.30, i64 0, i32 2
  %cast.679 = bitcast { i8*, i64 }* %tmpv.176 to i8*
  %tmp.32.sroa.0.0.cast.686.sroa_idx = getelementptr inbounds [2 x %IPST.11], [2 x %IPST.11]* %tmpv.177, i64 0, i64 0, i32 0
  %tmp.32.sroa.2.0.cast.686.sroa_idx12 = getelementptr inbounds [2 x %IPST.11], [2 x %IPST.11]* %tmpv.177, i64 0, i64 0, i32 1
  %tmp.33.sroa.0.0.cast.688.sroa_idx = getelementptr inbounds [2 x %IPST.11], [2 x %IPST.11]* %tmpv.177, i64 0, i64 1, i32 0
  %4 = bitcast %_type.0** %tmp.33.sroa.0.0.cast.688.sroa_idx to i64*
  %tmp.33.sroa.2.0.cast.688.sroa_idx13 = getelementptr inbounds [2 x %IPST.11], [2 x %IPST.11]* %tmpv.177, i64 0, i64 1, i32 1
  %field.195 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.34, i64 0, i32 0
  %cast.690 = getelementptr inbounds [2 x %IPST.11], [2 x %IPST.11]* %tmpv.177, i64 0, i64 0
  %field.196 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.34, i64 0, i32 1
  %field.197 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.34, i64 0, i32 2
  br label %label.0

label.0:                                          ; preds = %label.0.preheader, %command_line_arguments.dropSendBuffer.exit
  %tmpv.165.0 = phi %IPPacket.0* [ %tmpv.165.2, %command_line_arguments.dropSendBuffer.exit ], [ undef, %label.0.preheader ]
  %tmpv.182.0 = phi %Client.0* [ %tmpv.182.1, %command_line_arguments.dropSendBuffer.exit ], [ undef, %label.0.preheader ]
  br i1 %icmp.55, label %then.73, label %fallthrough.73

then.58:                                          ; preds = %then.74
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.58 unwind label %pad.0.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !968

fallthrough.58:                                   ; preds = %then.74, %then.58
  %.field.ld.241415 = load i64, i64* %0, align 8, !dbg !968
  %call.48 = invoke %Encoder.0* @encoding_gob.NewEncoder(i8* nest undef, i64 ptrtoint ({ %_type.0*, void ({ i64, %error.0 }*, i8*, %Conn.1*, { i8*, i64, i64 }*)* }* @pimt..interface.4Write.0func.8.6.7uint8.9.8int.3error.9.5..crypto_tls.Conn to i64), i64 %.field.ld.241415)
          to label %fallthrough.59 unwind label %pad.0.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !970

fallthrough.59:                                   ; preds = %fallthrough.58
  %.field.ld.25 = load i8, i8* %field.168, align 1, !dbg !971
  call void @llvm.dbg.value(metadata i8 %.field.ld.25, metadata !972, metadata !DIExpression()), !dbg !973
  %5 = and i8 %.field.ld.25, 1, !dbg !974
  %trunc.60 = icmp eq i8 %5, 0, !dbg !974
  br i1 %trunc.60, label %fallthrough.60, label %then.60

then.60:                                          ; preds = %fallthrough.59
  %call.49 = invoke { i64, i64 } @command_line_arguments.Client.sendLocalAddr(i8* nest undef, %Client.0* nonnull %c, %Encoder.0* %call.48)
          to label %then.60.fallthrough.60_crit_edge unwind label %pad.0.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !975

then.60.fallthrough.60_crit_edge:                 ; preds = %then.60
  %.field.ld.2930.pre = load i8, i8* %field.168, align 1, !dbg !976
  %.pre = and i8 %.field.ld.2930.pre, 1, !dbg !977
  br label %fallthrough.60, !dbg !975

fallthrough.60:                                   ; preds = %then.60.fallthrough.60_crit_edge, %fallthrough.59
  %.pre-phi = phi i8 [ %.pre, %then.60.fallthrough.60_crit_edge ], [ 0, %fallthrough.59 ], !dbg !977
  %.field.ld.2930 = phi i8 [ %.field.ld.2930.pre, %then.60.fallthrough.60_crit_edge ], [ %.field.ld.25, %fallthrough.59 ], !dbg !976
  %trunc.7031 = icmp eq i8 %.pre-phi, 0, !dbg !977
  %spec.select32 = select i1 %trunc.7031, i8 %.field.ld.2930, i8 %.field.ld.25
  %6 = and i8 %spec.select32, 1, !dbg !977
  %trunc.7133 = icmp eq i8 %6, 0, !dbg !977
  br i1 %trunc.7133, label %label.4, label %fallthrough.61

fallthrough.61:                                   ; preds = %fallthrough.60, %label.5
  %tmpv.165.134 = phi %IPPacket.0* [ %tmpv.165.3, %label.5 ], [ %tmpv.165.0, %fallthrough.60 ]
  call void @llvm.dbg.value(metadata %IPPacket.0* null, metadata !978, metadata !DIExpression()), !dbg !980
  call void @llvm.dbg.value(metadata i8 0, metadata !981, metadata !DIExpression()), !dbg !980
  store %IPPacket.0* null, %IPPacket.0** %tmpv.160, align 8
  %.field.ld.26 = load {}*, {}** %field.169, align 8, !dbg !982
  %call.50 = invoke i8 @runtime.chanrecv2(i8* nest undef, {}* %.field.ld.26, i8* nonnull %cast.644)
          to label %cont.9 unwind label %pad.0.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !983

cont.9:                                           ; preds = %fallthrough.61
  %tmpv.160.ld.0 = load %IPPacket.0*, %IPPacket.0** %tmpv.160, align 8, !dbg !983
  call void @llvm.dbg.value(metadata %IPPacket.0* %tmpv.160.ld.0, metadata !978, metadata !DIExpression()), !dbg !980
  call void @llvm.dbg.value(metadata i8 %call.50, metadata !981, metadata !DIExpression()), !dbg !980
  %icmp.60 = icmp eq i8 %call.50, 0, !dbg !984
  br i1 %icmp.60, label %label.4, label %else.62

else.62:                                          ; preds = %cont.9
  %icmp.61 = icmp eq %IPPacket.0* %tmpv.160.ld.0, null, !dbg !985
  br i1 %icmp.61, label %then.63, label %fallthrough.63

label.4:                                          ; preds = %cont.9, %label.5, %fallthrough.60, %cont.21, %cont.16
  %tmpv.165.2 = phi %IPPacket.0* [ %tmpv.165.3, %cont.16 ], [ %tmpv.165.3, %cont.21 ], [ %tmpv.165.0, %fallthrough.60 ], [ %tmpv.165.134, %cont.9 ], [ %tmpv.165.3, %label.5 ]
  invoke void @time.Sleep(i8* nest undef, i64 150000000)
          to label %fallthrough.72 unwind label %pad.0.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !986

then.63:                                          ; preds = %else.62
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.63 unwind label %pad.0.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !985

fallthrough.63:                                   ; preds = %else.62, %then.63
  %tmpv.165.3 = phi %IPPacket.0* [ %tmpv.165.134, %then.63 ], [ %tmpv.160.ld.0, %else.62 ]
  %field.170 = getelementptr inbounds %IPPacket.0, %IPPacket.0* %tmpv.165.3, i64 0, i32 1, !dbg !985
  %cast.647 = bitcast %IP.0* %field.170 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.646, i8* nonnull align 8 %cast.647, i64 24, i1 false)
  %call.51 = invoke i8 @net.IP.IsMulticast(i8* nest undef, %IP.0* nonnull %tmpv.164)
          to label %cont.11 unwind label %pad.0.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !987

cont.11:                                          ; preds = %fallthrough.63
  %7 = and i8 %call.51, 1, !dbg !988
  %trunc.64 = icmp eq i8 %7, 0, !dbg !988
  br i1 %trunc.64, label %else.64, label %label.5

else.64:                                          ; preds = %cont.11
  %call.52 = invoke i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @github_com_twitchyliquid64_subnet_subnet_conn.PktType..d)
          to label %cont.12 unwind label %pad.0.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !989

label.5:                                          ; preds = %cont.18, %cont.11
  %.field.ld.29 = load i8, i8* %field.168, align 1, !dbg !976
  %8 = and i8 %.field.ld.29, 1, !dbg !977
  %trunc.70 = icmp eq i8 %8, 0, !dbg !977
  %spec.select = select i1 %trunc.70, i8 %.field.ld.29, i8 %.field.ld.25
  %9 = and i8 %spec.select, 1, !dbg !977
  %trunc.71 = icmp eq i8 %9, 0, !dbg !977
  br i1 %trunc.71, label %label.4, label %fallthrough.61

cont.12:                                          ; preds = %else.64
  store i8 1, i8* %call.52, align 1, !dbg !989
  %10 = ptrtoint i8* %call.52 to i64, !dbg !989
  %call.53 = invoke { i64, i64 } @encoding_gob.Encoder.Encode(i8* nest undef, %Encoder.0* %call.48, i64 ptrtoint (%_type.0* @github_com_twitchyliquid64_subnet_subnet_conn.PktType..d to i64), i64 %10)
          to label %cont.13 unwind label %pad.0.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !990

cont.13:                                          ; preds = %cont.12
  %call.53.fca.0.extract = extractvalue { i64, i64 } %call.53, 0, !dbg !990
  call void @llvm.dbg.value(metadata i64 %call.53.fca.0.extract, metadata !991, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !992
  %icmp.63 = icmp eq i64 %call.53.fca.0.extract, 0, !dbg !993
  br i1 %icmp.63, label %else.65, label %then.65

then.65:                                          ; preds = %cont.13
  %call.53.fca.1.extract.le = extractvalue { i64, i64 } %call.53, 1, !dbg !990
  %call.54 = invoke i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d)
          to label %cont.14 unwind label %pad.0.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !994

else.65:                                          ; preds = %cont.13
  %11 = ptrtoint %IPPacket.0* %tmpv.160.ld.0 to i64, !dbg !995
  %call.55 = invoke { i64, i64 } @encoding_gob.Encoder.Encode(i8* nest undef, %Encoder.0* %call.48, i64 ptrtoint (%PtrType.0* @type...1command_line_arguments.IPPacket to i64), i64 %11)
          to label %cont.18 unwind label %pad.0.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !996

cont.14:                                          ; preds = %then.65
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.655, i8* align 8 bitcast ({ i8*, i64 }* @const.120 to i8*), i64 16, i1 false)
  invoke void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.54, i8* nonnull %cast.655)
          to label %else.66 unwind label %pad.0.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !994

else.66:                                          ; preds = %cont.14
  %12 = inttoptr i64 %call.53.fca.0.extract to i64*, !dbg !997
  %.field.ld.2717 = load i64, i64* %12, align 8, !dbg !997
  %13 = inttoptr i64 %call.53.fca.1.extract.le to i8*, !dbg !994
  store %_type.0* @string..d, %_type.0** %tmp.28.sroa.0.0.cast.662.sroa_idx, align 8, !dbg !994
  store i8* %call.54, i8** %tmp.28.sroa.2.0.cast.662.sroa_idx10, align 8, !dbg !994
  store i64 %.field.ld.2717, i64* %3, align 8, !dbg !994
  store i8* %13, i8** %tmp.29.sroa.2.0.cast.664.sroa_idx11, align 8, !dbg !994
  store %IPST.11* %cast.666, %IPST.11** %field.181, align 8, !dbg !994
  store i64 2, i64* %field.182, align 8, !dbg !994
  store i64 2, i64* %field.183, align 8, !dbg !994
  invoke void @log.Println(i8* nest undef, %IPST.6* byval nonnull %tmp.30)
          to label %cont.16 unwind label %pad.0.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !994

cont.16:                                          ; preds = %else.66
  invoke void @command_line_arguments.Client.connectionProblem(i8* nest undef, %Client.0* nonnull %c)
          to label %label.4 unwind label %pad.0.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !998

cont.18:                                          ; preds = %else.65
  %call.55.fca.0.extract = extractvalue { i64, i64 } %call.55, 0, !dbg !996
  call void @llvm.dbg.value(metadata i64 %call.55.fca.0.extract, metadata !991, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !992
  %icmp.65 = icmp eq i64 %call.55.fca.0.extract, 0, !dbg !999
  br i1 %icmp.65, label %label.5, label %then.67

then.67:                                          ; preds = %cont.18
  %call.55.fca.1.extract.le = extractvalue { i64, i64 } %call.55, 1, !dbg !996
  %call.56 = invoke i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d)
          to label %cont.19 unwind label %pad.0.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1000

cont.19:                                          ; preds = %then.67
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.679, i8* align 8 bitcast ({ i8*, i64 }* @const.120 to i8*), i64 16, i1 false)
  invoke void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.56, i8* nonnull %cast.679)
          to label %else.68 unwind label %pad.0.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1000

else.68:                                          ; preds = %cont.19
  %14 = inttoptr i64 %call.55.fca.0.extract to i64*, !dbg !1001
  %.field.ld.2816 = load i64, i64* %14, align 8, !dbg !1001
  %15 = inttoptr i64 %call.55.fca.1.extract.le to i8*, !dbg !1000
  store %_type.0* @string..d, %_type.0** %tmp.32.sroa.0.0.cast.686.sroa_idx, align 8, !dbg !1000
  store i8* %call.56, i8** %tmp.32.sroa.2.0.cast.686.sroa_idx12, align 8, !dbg !1000
  store i64 %.field.ld.2816, i64* %4, align 8, !dbg !1000
  store i8* %15, i8** %tmp.33.sroa.2.0.cast.688.sroa_idx13, align 8, !dbg !1000
  store %IPST.11* %cast.690, %IPST.11** %field.195, align 8, !dbg !1000
  store i64 2, i64* %field.196, align 8, !dbg !1000
  store i64 2, i64* %field.197, align 8, !dbg !1000
  invoke void @log.Println(i8* nest undef, %IPST.6* byval nonnull %tmp.34)
          to label %cont.21 unwind label %pad.0.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1000

cont.21:                                          ; preds = %else.68
  invoke void @command_line_arguments.Client.connectionProblem(i8* nest undef, %Client.0* nonnull %c)
          to label %label.4 unwind label %pad.0.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1002

fallthrough.72:                                   ; preds = %label.4
  %.field.ld.30 = load {}*, {}** %field.169, align 8, !dbg !1003
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %1), !dbg !1004
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2), !dbg !1004
  call void @llvm.dbg.value(metadata {}* %.field.ld.30, metadata !1009, metadata !DIExpression()), !dbg !1004
  br label %label.0.i

label.0.i:                                        ; preds = %call.57.i.noexc, %fallthrough.72
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1, i8 0, i64 128, i1 false)
  invoke void @runtime.newselect(i8* nest undef, i8* nonnull %1, i64 128, i32 2)
          to label %.noexc unwind label %pad.0.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1010

.noexc:                                           ; preds = %label.0.i
  store %IPPacket.0* null, %IPPacket.0** %tmpv.185.i, align 8
  invoke void @runtime.selectrecv(i8* nest undef, i8* nonnull %1, {}* %.field.ld.30, i8* nonnull %2, i8* null)
          to label %.noexc18 unwind label %pad.0.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1011

.noexc18:                                         ; preds = %.noexc
  invoke void @runtime.selectdefault(i8* nest undef, i8* nonnull %1)
          to label %.noexc19 unwind label %pad.0.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1012

.noexc19:                                         ; preds = %.noexc18
  %call.57.i20 = invoke i64 @runtime.selectgo(i8* nest undef, i8* nonnull %1)
          to label %call.57.i.noexc unwind label %pad.0.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1010

call.57.i.noexc:                                  ; preds = %.noexc19
  %switch.i = icmp eq i64 %call.57.i20, 0
  br i1 %switch.i, label %label.0.i, label %command_line_arguments.dropSendBuffer.exit

command_line_arguments.dropSendBuffer.exit:       ; preds = %call.57.i.noexc
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %1), !dbg !1013
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2), !dbg !1013
  br label %label.0, !dbg !1013

then.73:                                          ; preds = %label.0
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.73 unwind label %pad.0.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1014

fallthrough.73:                                   ; preds = %label.0, %then.73
  %tmpv.182.1 = phi %Client.0* [ %tmpv.182.0, %then.73 ], [ %c, %label.0 ]
  %field.201 = getelementptr inbounds %Client.0, %Client.0* %tmpv.182.1, i64 0, i32 9, !dbg !1014
  %.field.ld.31 = load i8, i8* %field.201, align 1, !dbg !1014
  %icmp.69 = icmp eq i8 %.field.ld.31, 0, !dbg !1015
  br i1 %icmp.69, label %then.74, label %finally.0

then.74:                                          ; preds = %fallthrough.73
  br i1 %icmp.55, label %then.58, label %fallthrough.58

catchpad.0:                                       ; preds = %pad.0.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp
  %ex2.0 = landingpad { i8*, i32 }
          cleanup
  %ex2.0.fca.0.extract = extractvalue { i8*, i32 } %ex2.0, 0
  %ex2.0.fca.1.extract = extractvalue { i8*, i32 } %ex2.0, 1
  br label %finally.0

pad.1:                                            ; preds = %finish.0
  %ex.1 = landingpad { i8*, i32 }
          catch i8* null
  call void @runtime.checkdefer(i8* nest undef, i8* nonnull %tmpv.151), !dbg !964
  br label %finish.0

finish.0:                                         ; preds = %pad.1, %finally.0
  invoke void @runtime.deferreturn(i8* nest undef, i8* nonnull %tmpv.151)
          to label %cont.29 unwind label %pad.1, !dbg !964

cont.29:                                          ; preds = %finish.0
  %icmp.70 = icmp eq i8 %finvar.0.0, 1
  br i1 %icmp.70, label %finret.0, label %finres.0

finres.0:                                         ; preds = %cont.29
  %excv.0.fca.0.insert = insertvalue { i8*, i32 } undef, i8* %ehtmp.0.sroa.0.0, 0
  %excv.0.fca.1.insert = insertvalue { i8*, i32 } %excv.0.fca.0.insert, i32 %ehtmp.0.sroa.2.0, 1
  resume { i8*, i32 } %excv.0.fca.1.insert

finret.0:                                         ; preds = %cont.29
  ret void
}

define { i64, i64 } @command_line_arguments.Client.sendLocalAddr(i8* nest nocapture readnone %nest.7, %Client.0* readonly %c, %Encoder.0* %encoder) #0 !dbg !1016 {
entry:
  %tmp.61 = alloca %IPST.6, align 8
  %tmp.56 = alloca %IPST.6, align 8
  %tmpv.266 = alloca { i8*, i64 }, align 8
  %tmpv.267 = alloca [2 x %IPST.11], align 8
  %tmpv.269 = alloca %IP.0, align 8
  %tmpv.272 = alloca %IP.0, align 8
  %addr = alloca %IP.0, align 8
  %tmpv.287 = alloca { i8*, i64 }, align 8
  %tmpv.288 = alloca [2 x %IPST.11], align 8
  %tmpv.291 = alloca %IP.0, align 8
  call void @llvm.dbg.value(metadata %Client.0* %c, metadata !1050, metadata !DIExpression()), !dbg !1051
  call void @llvm.dbg.value(metadata %Encoder.0* %encoder, metadata !1052, metadata !DIExpression()), !dbg !1053
  %call.80 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @github_com_twitchyliquid64_subnet_subnet_conn.PktType..d), !dbg !1054
  store i8 2, i8* %call.80, align 1, !dbg !1054
  %0 = ptrtoint i8* %call.80 to i64, !dbg !1054
  %call.81 = call { i64, i64 } @encoding_gob.Encoder.Encode(i8* nest undef, %Encoder.0* %encoder, i64 ptrtoint (%_type.0* @github_com_twitchyliquid64_subnet_subnet_conn.PktType..d to i64), i64 %0), !dbg !1056
  %call.81.fca.0.extract = extractvalue { i64, i64 } %call.81, 0, !dbg !1056
  call void @llvm.dbg.value(metadata i64 %call.81.fca.0.extract, metadata !1057, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1058
  %icmp.108 = icmp eq i64 %call.81.fca.0.extract, 0, !dbg !1059
  br i1 %icmp.108, label %fallthrough.113, label %then.113

then.113:                                         ; preds = %entry
  %call.81.fca.1.extract = extractvalue { i64, i64 } %call.81, 1, !dbg !1056
  call void @llvm.dbg.value(metadata i64 %call.81.fca.1.extract, metadata !1057, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1058
  %call.82 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !1060
  %cast.897 = bitcast { i8*, i64 }* %tmpv.266 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.897, i8* align 8 bitcast ({ i8*, i64 }* @const.120 to i8*), i64 16, i1 false)
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.82, i8* nonnull %cast.897), !dbg !1060
  %1 = inttoptr i64 %call.81.fca.0.extract to i64*, !dbg !1061
  %.field.ld.4844 = load i64, i64* %1, align 8, !dbg !1061
  %2 = inttoptr i64 %call.81.fca.1.extract to i8*, !dbg !1060
  %tmp.54.sroa.0.0.cast.904.sroa_idx = getelementptr inbounds [2 x %IPST.11], [2 x %IPST.11]* %tmpv.267, i64 0, i64 0, i32 0, !dbg !1060
  store %_type.0* @string..d, %_type.0** %tmp.54.sroa.0.0.cast.904.sroa_idx, align 8, !dbg !1060
  %tmp.54.sroa.2.0.cast.904.sroa_idx39 = getelementptr inbounds [2 x %IPST.11], [2 x %IPST.11]* %tmpv.267, i64 0, i64 0, i32 1, !dbg !1060
  store i8* %call.82, i8** %tmp.54.sroa.2.0.cast.904.sroa_idx39, align 8, !dbg !1060
  %tmp.55.sroa.0.0.cast.906.sroa_idx = getelementptr inbounds [2 x %IPST.11], [2 x %IPST.11]* %tmpv.267, i64 0, i64 1, i32 0, !dbg !1060
  %3 = bitcast %_type.0** %tmp.55.sroa.0.0.cast.906.sroa_idx to i64*, !dbg !1060
  store i64 %.field.ld.4844, i64* %3, align 8, !dbg !1060
  %tmp.55.sroa.2.0.cast.906.sroa_idx40 = getelementptr inbounds [2 x %IPST.11], [2 x %IPST.11]* %tmpv.267, i64 0, i64 1, i32 1, !dbg !1060
  store i8* %2, i8** %tmp.55.sroa.2.0.cast.906.sroa_idx40, align 8, !dbg !1060
  %field.298 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.56, i64 0, i32 0, !dbg !1060
  %cast.908 = getelementptr inbounds [2 x %IPST.11], [2 x %IPST.11]* %tmpv.267, i64 0, i64 0, !dbg !1060
  store %IPST.11* %cast.908, %IPST.11** %field.298, align 8, !dbg !1060
  %field.299 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.56, i64 0, i32 1, !dbg !1060
  store i64 2, i64* %field.299, align 8, !dbg !1060
  %field.300 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.56, i64 0, i32 2, !dbg !1060
  store i64 2, i64* %field.300, align 8, !dbg !1060
  call void @log.Println(i8* nest undef, %IPST.6* byval nonnull %tmp.56), !dbg !1060
  br label %fallthrough.113

fallthrough.113:                                  ; preds = %entry, %then.113
  %icmp.109 = icmp eq %Client.0* %c, null, !dbg !1062
  br i1 %icmp.109, label %then.115, label %else.115

then.115:                                         ; preds = %fallthrough.113
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1062
  unreachable

else.115:                                         ; preds = %fallthrough.113
  %field.302 = getelementptr inbounds %Client.0, %Client.0* %c, i64 0, i32 6, !dbg !1062
  %cast.911 = bitcast %IP.0* %tmpv.269 to i8*
  %cast.912 = bitcast %IP.0* %field.302 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.911, i8* nonnull align 8 %cast.912, i64 24, i1 false)
  %call.83 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @net.IP..d, i64 0, i32 0)), !dbg !1062
  %cast.915 = bitcast %IP.0* %tmpv.272 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.915, i8* nonnull align 8 %cast.911, i64 24, i1 false)
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @net.IP..d, i64 0, i32 0), i8* %call.83, i8* nonnull %cast.915), !dbg !1062
  %4 = ptrtoint i8* %call.83 to i64, !dbg !1062
  %call.84 = call { i64, i64 } @encoding_gob.Encoder.Encode(i8* nest undef, %Encoder.0* %encoder, i64 ptrtoint (%SliceType.0* @net.IP..d to i64), i64 %4), !dbg !1063
  %call.84.fca.0.extract = extractvalue { i64, i64 } %call.84, 0, !dbg !1063
  call void @llvm.dbg.value(metadata i64 %call.84.fca.0.extract, metadata !1057, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1058
  %icmp.110 = icmp eq i64 %call.84.fca.0.extract, 0, !dbg !1064
  br i1 %icmp.110, label %else.116, label %then.116

then.116:                                         ; preds = %else.115
  call void @llvm.dbg.value(metadata i64 %call.84.fca.0.extract, metadata !1065, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1066
  ret { i64, i64 } %call.84, !dbg !1067

else.116:                                         ; preds = %else.115
  %addr.0.sroa_cast = bitcast %IP.0* %addr to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %addr.0.sroa_cast)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %addr.0.sroa_cast, i8 0, i64 24, i1 false)
  %tmpv.274.sroa.0.0.cast.936.sroa_idx = getelementptr inbounds %Client.0, %Client.0* %c, i64 0, i32 7, i32 0
  %tmpv.274.sroa.0.0.copyload = load %IP.0*, %IP.0** %tmpv.274.sroa.0.0.cast.936.sroa_idx, align 8
  %tmpv.274.sroa.2.0.cast.936.sroa_idx12 = getelementptr inbounds %Client.0, %Client.0* %c, i64 0, i32 7, i32 1
  %tmpv.274.sroa.2.0.copyload = load i64, i64* %tmpv.274.sroa.2.0.cast.936.sroa_idx12, align 8
  %icmp.11748 = icmp sgt i64 %tmpv.274.sroa.2.0.copyload, 0, !dbg !1068
  br i1 %icmp.11748, label %else.118.lr.ph, label %else.122

else.118.lr.ph:                                   ; preds = %else.116
  %cast.971 = bitcast %IP.0* %tmpv.291 to i8*
  %cast.956 = bitcast { i8*, i64 }* %tmpv.287 to i8*
  %tmp.59.sroa.0.0.cast.963.sroa_idx = getelementptr inbounds [2 x %IPST.11], [2 x %IPST.11]* %tmpv.288, i64 0, i64 0, i32 0
  %tmp.59.sroa.2.0.cast.963.sroa_idx41 = getelementptr inbounds [2 x %IPST.11], [2 x %IPST.11]* %tmpv.288, i64 0, i64 0, i32 1
  %tmp.60.sroa.0.0.cast.965.sroa_idx = getelementptr inbounds [2 x %IPST.11], [2 x %IPST.11]* %tmpv.288, i64 0, i64 1, i32 0
  %5 = bitcast %_type.0** %tmp.60.sroa.0.0.cast.965.sroa_idx to i64*
  %tmp.60.sroa.2.0.cast.965.sroa_idx42 = getelementptr inbounds [2 x %IPST.11], [2 x %IPST.11]* %tmpv.288, i64 0, i64 1, i32 1
  %field.320 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.61, i64 0, i32 0
  %cast.967 = getelementptr inbounds [2 x %IPST.11], [2 x %IPST.11]* %tmpv.288, i64 0, i64 0
  %field.321 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.61, i64 0, i32 1
  %field.322 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.61, i64 0, i32 2
  %addr51 = bitcast %IP.0* %addr to i8*
  br label %else.118

label.0:                                          ; preds = %fallthrough.119
  %icmp.117 = icmp slt i64 %add.1, %tmpv.274.sroa.2.0.copyload, !dbg !1068
  br i1 %icmp.117, label %else.118, label %else.122

else.118:                                         ; preds = %else.118.lr.ph, %label.0
  %tmpv.276.049 = phi i64 [ 0, %else.118.lr.ph ], [ %add.1, %label.0 ]
  %ptroff.0 = getelementptr %IP.0, %IP.0* %tmpv.274.sroa.0.0.copyload, i64 %tmpv.276.049, !dbg !1068
  %cast.942 = bitcast %IP.0* %ptroff.0 to i8*, !dbg !1068
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %addr51, i8* align 8 %cast.942, i64 24, i1 false)
  %call.85 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @github_com_twitchyliquid64_subnet_subnet_conn.PktType..d), !dbg !1070
  store i8 2, i8* %call.85, align 1, !dbg !1070
  %6 = ptrtoint i8* %call.85 to i64, !dbg !1070
  %call.86 = call { i64, i64 } @encoding_gob.Encoder.Encode(i8* nest undef, %Encoder.0* %encoder, i64 ptrtoint (%_type.0* @github_com_twitchyliquid64_subnet_subnet_conn.PktType..d to i64), i64 %6), !dbg !1071
  %call.86.fca.0.extract = extractvalue { i64, i64 } %call.86, 0, !dbg !1071
  call void @llvm.dbg.value(metadata i64 %call.86.fca.0.extract, metadata !1057, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1058
  %icmp.115 = icmp eq i64 %call.86.fca.0.extract, 0, !dbg !1072
  br i1 %icmp.115, label %fallthrough.119, label %then.119

then.119:                                         ; preds = %else.118
  %call.86.fca.1.extract = extractvalue { i64, i64 } %call.86, 1, !dbg !1071
  call void @llvm.dbg.value(metadata i64 %call.86.fca.1.extract, metadata !1057, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1058
  %call.87 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !1073
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.956, i8* align 8 bitcast ({ i8*, i64 }* @const.120 to i8*), i64 16, i1 false)
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.87, i8* nonnull %cast.956), !dbg !1073
  %7 = inttoptr i64 %call.86.fca.0.extract to i64*, !dbg !1074
  %.field.ld.4943 = load i64, i64* %7, align 8, !dbg !1074
  %8 = inttoptr i64 %call.86.fca.1.extract to i8*, !dbg !1073
  store %_type.0* @string..d, %_type.0** %tmp.59.sroa.0.0.cast.963.sroa_idx, align 8, !dbg !1073
  store i8* %call.87, i8** %tmp.59.sroa.2.0.cast.963.sroa_idx41, align 8, !dbg !1073
  store i64 %.field.ld.4943, i64* %5, align 8, !dbg !1073
  store i8* %8, i8** %tmp.60.sroa.2.0.cast.965.sroa_idx42, align 8, !dbg !1073
  store %IPST.11* %cast.967, %IPST.11** %field.320, align 8, !dbg !1073
  store i64 2, i64* %field.321, align 8, !dbg !1073
  store i64 2, i64* %field.322, align 8, !dbg !1073
  call void @log.Println(i8* nest undef, %IPST.6* byval nonnull %tmp.61), !dbg !1073
  br label %fallthrough.119

fallthrough.119:                                  ; preds = %else.118, %then.119
  %call.88 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @net.IP..d, i64 0, i32 0)), !dbg !1075
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.971, i8* nonnull align 8 %addr.0.sroa_cast, i64 24, i1 false)
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @net.IP..d, i64 0, i32 0), i8* %call.88, i8* nonnull %cast.971), !dbg !1075
  %9 = ptrtoint i8* %call.88 to i64, !dbg !1075
  %call.89 = call { i64, i64 } @encoding_gob.Encoder.Encode(i8* nest undef, %Encoder.0* %encoder, i64 ptrtoint (%SliceType.0* @net.IP..d to i64), i64 %9), !dbg !1076
  %call.89.fca.0.extract = extractvalue { i64, i64 } %call.89, 0, !dbg !1076
  call void @llvm.dbg.value(metadata i64 %call.89.fca.0.extract, metadata !1057, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1058
  %icmp.116 = icmp eq i64 %call.89.fca.0.extract, 0, !dbg !1077
  %add.1 = add nuw nsw i64 %tmpv.276.049, 1, !dbg !1068
  br i1 %icmp.116, label %label.0, label %then.121

then.121:                                         ; preds = %fallthrough.119
  call void @llvm.dbg.value(metadata i64 %call.89.fca.0.extract, metadata !1065, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1066
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %addr.0.sroa_cast), !dbg !1078
  ret { i64, i64 } %call.89, !dbg !1078

else.122:                                         ; preds = %label.0, %else.116
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %addr.0.sroa_cast)
  call void @llvm.dbg.value(metadata i64 0, metadata !1065, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1066
  call void @llvm.dbg.value(metadata i64 0, metadata !1065, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1066
  ret { i64, i64 } zeroinitializer, !dbg !1079
}

define void @command_line_arguments.Reverser.AddRouteEntry(i8* nest nocapture readnone %nest.16, %Reverser.0* %r, %IP.0* byval nocapture readonly %destination, %IP.0* byval nocapture readonly %via, i64 %dev.chunk0, i64 %dev.chunk1) #0 !dbg !1080 {
entry:
  call void @llvm.dbg.declare(metadata %IP.0* %via, metadata !1084, metadata !DIExpression()), !dbg !1085
  call void @llvm.dbg.declare(metadata %IP.0* %destination, metadata !1086, metadata !DIExpression()), !dbg !1087
  %tmpv.421 = alloca %IPST.8, align 8
  %tmpv.424 = alloca %.command-line-arguments.routeEntries.0, align 8
  %sret.actual.88 = alloca %IPST.7, align 8
  %tmpv.434 = alloca %IPST.8, align 8
  call void @llvm.dbg.value(metadata %Reverser.0* %r, metadata !1088, metadata !DIExpression()), !dbg !1089
  call void @llvm.dbg.value(metadata i64 %dev.chunk0, metadata !1090, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1091
  call void @llvm.dbg.value(metadata i64 %dev.chunk1, metadata !1090, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1091
  %icmp.164 = icmp eq %Reverser.0* %r, null, !dbg !1092
  br i1 %icmp.164, label %then.154, label %else.155

then.154:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1092
  unreachable

else.155:                                         ; preds = %entry
  %cast.1496 = bitcast %IPST.8* %tmpv.421 to i8*
  %cast.1497 = bitcast %Reverser.0* %r to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1496, i8* align 8 %cast.1497, i64 24, i1 false)
  %field.441 = getelementptr inbounds %IPST.8, %IPST.8* %tmpv.421, i64 0, i32 1, !dbg !1093
  %tmpv.421.field.ld.0 = load i64, i64* %field.441, align 8, !dbg !1093
  %cast.1498 = bitcast %.command-line-arguments.routeEntries.0* %tmpv.424 to i8*, !dbg !1094
  %cast.1499 = bitcast %IP.0* %destination to i8*, !dbg !1094
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1498, i8* nonnull align 8 %cast.1499, i64 24, i1 false), !dbg !1094
  %field.443 = getelementptr inbounds %.command-line-arguments.routeEntries.0, %.command-line-arguments.routeEntries.0* %tmpv.424, i64 0, i32 1, !dbg !1094
  %cast.1500 = bitcast %IP.0* %field.443 to i8*, !dbg !1094
  %cast.1501 = bitcast %IP.0* %via to i8*, !dbg !1094
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1500, i8* nonnull align 8 %cast.1501, i64 24, i1 false), !dbg !1094
  %dev.addr.sroa.0.0.cast.1502.sroa_idx = getelementptr inbounds %.command-line-arguments.routeEntries.0, %.command-line-arguments.routeEntries.0* %tmpv.424, i64 0, i32 2, !dbg !1094
  %dev.addr.sroa.0.0.cast.1502.sroa_cast = bitcast { i8*, i64 }* %dev.addr.sroa.0.0.cast.1502.sroa_idx to i64*, !dbg !1094
  store i64 %dev.chunk0, i64* %dev.addr.sroa.0.0.cast.1502.sroa_cast, align 8, !dbg !1094
  %dev.addr.sroa.2.0.cast.1502.sroa_idx16 = getelementptr inbounds %.command-line-arguments.routeEntries.0, %.command-line-arguments.routeEntries.0* %tmpv.424, i64 0, i32 2, i32 1, !dbg !1094
  store i64 %dev.chunk1, i64* %dev.addr.sroa.2.0.cast.1502.sroa_idx16, align 8, !dbg !1094
  %add.4 = add i64 %tmpv.421.field.ld.0, 1, !dbg !1093
  %field.445 = getelementptr inbounds %IPST.8, %IPST.8* %tmpv.421, i64 0, i32 2, !dbg !1093
  %tmpv.421.field.ld.1 = load i64, i64* %field.445, align 8, !dbg !1093
  %icmp.166 = icmp ugt i64 %add.4, %tmpv.421.field.ld.1, !dbg !1093
  br i1 %icmp.166, label %then.156, label %else.156

then.156:                                         ; preds = %else.155
  %cast.1505 = bitcast %IPST.8* %tmpv.421 to %IPST.7*, !dbg !1093
  call void @runtime.growslice(%IPST.7* nonnull sret %sret.actual.88, i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments..command_line_arguments.routeEntries..d, i64 0, i32 0), %IPST.7* byval nonnull %cast.1505, i64 %add.4), !dbg !1093
  %tmpv.429.sroa.0.0.cast.1510.sroa_idx = bitcast %IPST.7* %sret.actual.88 to %.command-line-arguments.routeEntries.0**
  %tmpv.429.sroa.0.0.copyload = load %.command-line-arguments.routeEntries.0*, %.command-line-arguments.routeEntries.0** %tmpv.429.sroa.0.0.cast.1510.sroa_idx, align 8
  %0 = getelementptr inbounds %IPST.7, %IPST.7* %sret.actual.88, i64 0, i32 1
  %tmpv.429.sroa.3.0.copyload = load i64, i64* %0, align 8
  %1 = getelementptr inbounds %IPST.7, %IPST.7* %sret.actual.88, i64 0, i32 2
  %tmpv.429.sroa.4.0.copyload = load i64, i64* %1, align 8
  %.pre = getelementptr inbounds %IPST.8, %IPST.8* %tmpv.421, i64 0, i32 0, !dbg !1093
  br label %fallthrough.156

fallthrough.156:                                  ; preds = %else.157, %then.156
  %tmpv.429.sroa.0.0.cast.1513.sroa_idx.pre-phi = phi %.command-line-arguments.routeEntries.0** [ %field.448, %else.157 ], [ %.pre, %then.156 ], !dbg !1093
  %tmpv.429.sroa.0.0 = phi %.command-line-arguments.routeEntries.0* [ %tmpv.421.field.ld.3, %else.157 ], [ %tmpv.429.sroa.0.0.copyload, %then.156 ]
  %tmpv.429.sroa.3.0 = phi i64 [ %add.4, %else.157 ], [ %tmpv.429.sroa.3.0.copyload, %then.156 ]
  %tmpv.429.sroa.4.0 = phi i64 [ %tmpv.421.field.ld.1, %else.157 ], [ %tmpv.429.sroa.4.0.copyload, %then.156 ]
  store %.command-line-arguments.routeEntries.0* %tmpv.429.sroa.0.0, %.command-line-arguments.routeEntries.0** %tmpv.429.sroa.0.0.cast.1513.sroa_idx.pre-phi, align 8, !dbg !1093
  store i64 %tmpv.429.sroa.3.0, i64* %field.441, align 8, !dbg !1093
  store i64 %tmpv.429.sroa.4.0, i64* %field.445, align 8, !dbg !1093
  %icmp.173 = icmp sge i64 %tmpv.421.field.ld.0, %tmpv.429.sroa.3.0, !dbg !1093
  %2 = icmp slt i64 %tmpv.421.field.ld.0, 0, !dbg !1093
  %ior.83 = or i1 %2, %icmp.173, !dbg !1093
  br i1 %ior.83, label %then.159, label %else.159

else.156:                                         ; preds = %else.155
  %icmp.168 = icmp sgt i64 %add.4, %tmpv.421.field.ld.1, !dbg !1093
  %add.4.lobit29 = or i64 %tmpv.421.field.ld.1, %add.4, !dbg !1093
  %3 = icmp slt i64 %add.4.lobit29, 0, !dbg !1093
  %4 = or i1 %icmp.168, %3, !dbg !1093
  br i1 %4, label %then.157, label %else.157

then.157:                                         ; preds = %else.156
  call void @__go_runtime_error(i8* nest undef, i32 3), !dbg !1093
  unreachable

else.157:                                         ; preds = %else.156
  %field.448 = getelementptr inbounds %IPST.8, %IPST.8* %tmpv.421, i64 0, i32 0, !dbg !1093
  %tmpv.421.field.ld.3 = load %.command-line-arguments.routeEntries.0*, %.command-line-arguments.routeEntries.0** %field.448, align 8, !dbg !1093
  br label %fallthrough.156

then.159:                                         ; preds = %fallthrough.156
  call void @__go_runtime_error(i8* nest undef, i32 0), !dbg !1093
  unreachable

else.159:                                         ; preds = %fallthrough.156
  %ptroff.9 = getelementptr %.command-line-arguments.routeEntries.0, %.command-line-arguments.routeEntries.0* %tmpv.429.sroa.0.0, i64 %tmpv.421.field.ld.0, !dbg !1093
  %runtime.writeBarrier.ld.5 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1093
  %icmp.176 = icmp eq i32 %runtime.writeBarrier.ld.5, 0, !dbg !1093
  br i1 %icmp.176, label %then.160, label %else.160

then.160:                                         ; preds = %else.159
  %icmp.175 = icmp eq %.command-line-arguments.routeEntries.0* %ptroff.9, null, !dbg !1093
  br i1 %icmp.175, label %then.161, label %else.161

fallthrough.160:                                  ; preds = %else.160, %else.161
  %cast.1521 = bitcast %IPST.8* %tmpv.434 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1521, i8* nonnull align 8 %cast.1496, i64 24, i1 false)
  %runtime.writeBarrier.ld.6 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1095
  %icmp.178 = icmp eq i32 %runtime.writeBarrier.ld.6, 0, !dbg !1095
  br i1 %icmp.178, label %else.163, label %else.162

else.160:                                         ; preds = %else.159
  %cast.1519 = bitcast %.command-line-arguments.routeEntries.0* %ptroff.9 to i8*, !dbg !1093
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments..command_line_arguments.routeEntries..d, i64 0, i32 0), i8* %cast.1519, i8* nonnull %cast.1498), !dbg !1093
  br label %fallthrough.160

then.161:                                         ; preds = %then.160
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1093
  unreachable

else.161:                                         ; preds = %then.160
  %cast.1516 = bitcast %.command-line-arguments.routeEntries.0* %ptroff.9 to i8*, !dbg !1093
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %cast.1516, i8* nonnull align 8 %cast.1498, i64 64, i1 false), !dbg !1093
  br label %fallthrough.160

fallthrough.162:                                  ; preds = %else.162, %else.163
  ret void

else.162:                                         ; preds = %fallthrough.160
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7command_line_arguments.routeEntries, i64 0, i32 0), i8* %cast.1497, i8* nonnull %cast.1521), !dbg !1095
  br label %fallthrough.162

else.163:                                         ; preds = %fallthrough.160
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %cast.1497, i8* nonnull align 8 %cast.1521, i64 24, i1 false), !dbg !1095
  br label %fallthrough.162
}

define void @command_line_arguments.Reverser.Close(i8* nest nocapture readnone %nest.18, %Reverser.0* readonly %r) #0 !dbg !1096 {
entry:
  %tmp.105 = alloca %IPST.5, align 8
  %tmp.104 = alloca %IPST.6, align 8
  %tmp.99 = alloca %IPST.6, align 8
  %tmpv.443 = alloca %.command-line-arguments.routeEntries.0, align 8
  %tmpv.452 = alloca %IP.0, align 8
  %tmpv.454 = alloca %IP.0, align 8
  %tmpv.456 = alloca { i8*, i64 }, align 8
  %tmpv.458 = alloca { i8*, i64 }, align 8
  %tmpv.460 = alloca { i8*, i64 }, align 8
  %tmpv.462 = alloca { i8*, i64 }, align 8
  %tmpv.463 = alloca [3 x %IPST.11], align 8
  %tmpv.464 = alloca %IP.0, align 8
  %tmpv.466 = alloca %IP.0, align 8
  %tmpv.469 = alloca { i8*, i64 }, align 8
  %tmpv.471 = alloca { i8*, i64 }, align 8
  %tmpv.473 = alloca { i8*, i64 }, align 8
  %tmpv.475 = alloca { i8*, i64 }, align 8
  %tmpv.477 = alloca { i8*, i64 }, align 8
  %tmpv.478 = alloca [4 x %IPST.11], align 8
  %tmpv.482 = alloca { i8*, i64 }, align 8
  %tmpv.485 = alloca [3 x { i8*, i64 }], align 8
  call void @llvm.dbg.value(metadata %Reverser.0* %r, metadata !1099, metadata !DIExpression()), !dbg !1100
  %cast.1542 = bitcast %.command-line-arguments.routeEntries.0* %tmpv.443 to i8*
  %icmp.186 = icmp eq %Reverser.0* %r, null, !dbg !1101
  %0 = bitcast %.command-line-arguments.routeEntries.0* %tmpv.443 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %0, i8 0, i64 64, i1 false)
  br i1 %icmp.186, label %then.171, label %else.171

then.171:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1101
  unreachable

else.171:                                         ; preds = %entry
  %tmpv.444.sroa.0.0.cast.1548.sroa_idx = getelementptr inbounds %Reverser.0, %Reverser.0* %r, i64 0, i32 0, i32 0
  %tmpv.444.sroa.0.0.copyload = load %.command-line-arguments.routeEntries.0*, %.command-line-arguments.routeEntries.0** %tmpv.444.sroa.0.0.cast.1548.sroa_idx, align 8
  %tmpv.444.sroa.2.0.cast.1548.sroa_idx21 = getelementptr inbounds %Reverser.0, %Reverser.0* %r, i64 0, i32 0, i32 1
  %tmpv.444.sroa.2.0.copyload = load i64, i64* %tmpv.444.sroa.2.0.cast.1548.sroa_idx21, align 8
  %icmp.19030 = icmp sgt i64 %tmpv.444.sroa.2.0.copyload, 0, !dbg !1103
  br i1 %icmp.19030, label %else.172.lr.ph, label %else.175

else.172.lr.ph:                                   ; preds = %else.171
  %field.463 = getelementptr inbounds %.command-line-arguments.routeEntries.0, %.command-line-arguments.routeEntries.0* %tmpv.443, i64 0, i32 0
  %field.464 = getelementptr inbounds %.command-line-arguments.routeEntries.0, %.command-line-arguments.routeEntries.0* %tmpv.443, i64 0, i32 1
  %field.465 = getelementptr inbounds %.command-line-arguments.routeEntries.0, %.command-line-arguments.routeEntries.0* %tmpv.443, i64 0, i32 2
  %field0.94 = bitcast { i8*, i64 }* %field.465 to i64*
  %1 = getelementptr inbounds %.command-line-arguments.routeEntries.0, %.command-line-arguments.routeEntries.0* %tmpv.443, i64 0, i32 2, i32 1
  %cast.1563 = bitcast %IP.0* %tmpv.452 to i8*
  %cast.1568 = bitcast %IP.0* %tmpv.454 to i8*
  %cast.1569 = bitcast %IP.0* %field.464 to i8*
  %cast.1573 = bitcast { i8*, i64 }* %tmpv.456 to i8*
  %cast.1574 = bitcast { i8*, i64 }* %field.465 to i8*
  %tmpv.453.sroa.0.0.cast.1576.sroa_cast = bitcast { i8*, i64 }* %tmpv.458 to i64*
  %tmpv.453.sroa.2.0.cast.1576.sroa_idx10 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.458, i64 0, i32 1
  %cast.1579 = bitcast { i8*, i64 }* %tmpv.458 to i8*
  %tmpv.455.sroa.0.0.cast.1581.sroa_cast = bitcast { i8*, i64 }* %tmpv.460 to i64*
  %tmpv.455.sroa.2.0.cast.1581.sroa_idx8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.460, i64 0, i32 1
  %cast.1584 = bitcast { i8*, i64 }* %tmpv.460 to i8*
  %cast.1586 = bitcast { i8*, i64 }* %tmpv.462 to i8*
  %tmp.96.sroa.0.0.cast.1593.sroa_idx = getelementptr inbounds [3 x %IPST.11], [3 x %IPST.11]* %tmpv.463, i64 0, i64 0, i32 0
  %tmp.96.sroa.2.0.cast.1593.sroa_idx23 = getelementptr inbounds [3 x %IPST.11], [3 x %IPST.11]* %tmpv.463, i64 0, i64 0, i32 1
  %tmp.97.sroa.0.0.cast.1595.sroa_idx = getelementptr inbounds [3 x %IPST.11], [3 x %IPST.11]* %tmpv.463, i64 0, i64 1, i32 0
  %tmp.97.sroa.2.0.cast.1595.sroa_idx24 = getelementptr inbounds [3 x %IPST.11], [3 x %IPST.11]* %tmpv.463, i64 0, i64 1, i32 1
  %tmp.98.sroa.0.0.cast.1597.sroa_idx = getelementptr inbounds [3 x %IPST.11], [3 x %IPST.11]* %tmpv.463, i64 0, i64 2, i32 0
  %tmp.98.sroa.2.0.cast.1597.sroa_idx25 = getelementptr inbounds [3 x %IPST.11], [3 x %IPST.11]* %tmpv.463, i64 0, i64 2, i32 1
  %field.475 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.99, i64 0, i32 0
  %cast.1600 = getelementptr inbounds [3 x %IPST.11], [3 x %IPST.11]* %tmpv.463, i64 0, i64 0
  %field.476 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.99, i64 0, i32 1
  %field.477 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.99, i64 0, i32 2
  %cast.1601 = bitcast %IP.0* %tmpv.464 to i8*
  %cast.1606 = bitcast %IP.0* %tmpv.466 to i8*
  %cast.1614 = bitcast { i8*, i64 }* %tmpv.469 to i8*
  %tmpv.465.sroa.0.0.cast.1617.sroa_cast = bitcast { i8*, i64 }* %tmpv.471 to i64*
  %tmpv.465.sroa.2.0.cast.1617.sroa_idx6 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.471, i64 0, i32 1
  %cast.1620 = bitcast { i8*, i64 }* %tmpv.471 to i8*
  %tmpv.467.sroa.0.0.cast.1622.sroa_cast = bitcast { i8*, i64 }* %tmpv.473 to i64*
  %tmpv.467.sroa.2.0.cast.1622.sroa_idx4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.473, i64 0, i32 1
  %cast.1625 = bitcast { i8*, i64 }* %tmpv.473 to i8*
  %cast.1627 = bitcast { i8*, i64 }* %tmpv.475 to i8*
  %tmpv.468.sroa.0.0.cast.1632.sroa_cast = bitcast { i8*, i64 }* %tmpv.477 to i64*
  %tmpv.468.sroa.2.0.cast.1632.sroa_idx2 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.477, i64 0, i32 1
  %cast.1635 = bitcast { i8*, i64 }* %tmpv.477 to i8*
  %tmp.100.sroa.0.0.cast.1640.sroa_idx = getelementptr inbounds [4 x %IPST.11], [4 x %IPST.11]* %tmpv.478, i64 0, i64 0, i32 0
  %tmp.100.sroa.2.0.cast.1640.sroa_idx26 = getelementptr inbounds [4 x %IPST.11], [4 x %IPST.11]* %tmpv.478, i64 0, i64 0, i32 1
  %tmp.101.sroa.0.0.cast.1642.sroa_idx = getelementptr inbounds [4 x %IPST.11], [4 x %IPST.11]* %tmpv.478, i64 0, i64 1, i32 0
  %tmp.101.sroa.2.0.cast.1642.sroa_idx27 = getelementptr inbounds [4 x %IPST.11], [4 x %IPST.11]* %tmpv.478, i64 0, i64 1, i32 1
  %tmp.102.sroa.0.0.cast.1644.sroa_idx = getelementptr inbounds [4 x %IPST.11], [4 x %IPST.11]* %tmpv.478, i64 0, i64 2, i32 0
  %tmp.102.sroa.2.0.cast.1644.sroa_idx28 = getelementptr inbounds [4 x %IPST.11], [4 x %IPST.11]* %tmpv.478, i64 0, i64 2, i32 1
  %tmp.103.sroa.0.0.cast.1646.sroa_idx = getelementptr inbounds [4 x %IPST.11], [4 x %IPST.11]* %tmpv.478, i64 0, i64 3, i32 0
  %tmp.103.sroa.2.0.cast.1646.sroa_idx29 = getelementptr inbounds [4 x %IPST.11], [4 x %IPST.11]* %tmpv.478, i64 0, i64 3, i32 1
  %field.492 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.104, i64 0, i32 0
  %cast.1649 = getelementptr inbounds [4 x %IPST.11], [4 x %IPST.11]* %tmpv.478, i64 0, i64 0
  %field.493 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.104, i64 0, i32 1
  %field.494 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.104, i64 0, i32 2
  br label %else.172

else.172:                                         ; preds = %fallthrough.173, %else.172.lr.ph
  %tmpv.446.031 = phi i64 [ 0, %else.172.lr.ph ], [ %add.6, %fallthrough.173 ]
  %ptroff.10 = getelementptr %.command-line-arguments.routeEntries.0, %.command-line-arguments.routeEntries.0* %tmpv.444.sroa.0.0.copyload, i64 %tmpv.446.031, !dbg !1103
  %cast.1554 = bitcast %.command-line-arguments.routeEntries.0* %ptroff.10 to i8*, !dbg !1103
  call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1542, i8* align 8 %cast.1554, i64 64, i1 false), !dbg !1103
  %ld.178 = load i64, i64* %field0.94, align 8, !dbg !1104
  %ld.179 = load i64, i64* %1, align 8, !dbg !1104
  %call.140 = call { i64, i64 } @command_line_arguments.DelRoute(i8* nest undef, %IP.0* byval nonnull %field.463, %IP.0* byval nonnull %field.464, i64 %ld.178, i64 %ld.179, i8 zeroext 1), !dbg !1104
  %call.140.fca.0.extract = extractvalue { i64, i64 } %call.140, 0, !dbg !1104
  call void @llvm.dbg.value(metadata i64 %call.140.fca.0.extract, metadata !1106, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1107
  %icmp.189 = icmp eq i64 %call.140.fca.0.extract, 0, !dbg !1108
  br i1 %icmp.189, label %then.173, label %else.173

then.173:                                         ; preds = %else.172
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1563, i8* nonnull align 8 %cast.1542, i64 24, i1 false)
  %call.141 = call { i64, i64 } @net.IP.String(i8* nest undef, %IP.0* nonnull %tmpv.452), !dbg !1109
  %call.141.fca.0.extract = extractvalue { i64, i64 } %call.141, 0, !dbg !1109
  %call.141.fca.1.extract = extractvalue { i64, i64 } %call.141, 1, !dbg !1109
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1568, i8* nonnull align 8 %cast.1569, i64 24, i1 false)
  %call.142 = call { i64, i64 } @net.IP.String(i8* nest undef, %IP.0* nonnull %tmpv.454), !dbg !1110
  %call.142.fca.0.extract = extractvalue { i64, i64 } %call.142, 0, !dbg !1110
  %call.142.fca.1.extract = extractvalue { i64, i64 } %call.142, 1, !dbg !1110
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1573, i8* nonnull align 8 %cast.1574, i64 16, i1 false)
  %call.143 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !1111
  store i64 %call.141.fca.0.extract, i64* %tmpv.453.sroa.0.0.cast.1576.sroa_cast, align 8
  store i64 %call.141.fca.1.extract, i64* %tmpv.453.sroa.2.0.cast.1576.sroa_idx10, align 8
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.143, i8* nonnull %cast.1579), !dbg !1111
  %call.144 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !1111
  store i64 %call.142.fca.0.extract, i64* %tmpv.455.sroa.0.0.cast.1581.sroa_cast, align 8
  store i64 %call.142.fca.1.extract, i64* %tmpv.455.sroa.2.0.cast.1581.sroa_idx8, align 8
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.144, i8* nonnull %cast.1584), !dbg !1111
  %call.145 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !1111
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1586, i8* nonnull align 8 %cast.1573, i64 16, i1 false)
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.145, i8* nonnull %cast.1586), !dbg !1111
  store %_type.0* @string..d, %_type.0** %tmp.96.sroa.0.0.cast.1593.sroa_idx, align 8, !dbg !1111
  store i8* %call.143, i8** %tmp.96.sroa.2.0.cast.1593.sroa_idx23, align 8, !dbg !1111
  store %_type.0* @string..d, %_type.0** %tmp.97.sroa.0.0.cast.1595.sroa_idx, align 8, !dbg !1111
  store i8* %call.144, i8** %tmp.97.sroa.2.0.cast.1595.sroa_idx24, align 8, !dbg !1111
  store %_type.0* @string..d, %_type.0** %tmp.98.sroa.0.0.cast.1597.sroa_idx, align 8, !dbg !1111
  store i8* %call.145, i8** %tmp.98.sroa.2.0.cast.1597.sroa_idx25, align 8, !dbg !1111
  store %IPST.11* %cast.1600, %IPST.11** %field.475, align 8, !dbg !1111
  store i64 3, i64* %field.476, align 8, !dbg !1111
  store i64 3, i64* %field.477, align 8, !dbg !1111
  call void @log.Printf(i8* nest undef, i64 ptrtoint ([34 x i8]* @const.176 to i64), i64 33, %IPST.6* byval nonnull %tmp.99), !dbg !1111
  br label %fallthrough.173

fallthrough.173:                                  ; preds = %else.173, %then.173
  %add.6 = add nuw nsw i64 %tmpv.446.031, 1, !dbg !1103
  %exitcond = icmp eq i64 %add.6, %tmpv.444.sroa.2.0.copyload, !dbg !1103
  br i1 %exitcond, label %else.175, label %else.172

else.173:                                         ; preds = %else.172
  %2 = inttoptr i64 %call.140.fca.0.extract to { %_type.0*, { i64, i64 } (i8*, i8*)* }*, !dbg !1108
  %call.140.fca.1.extract = extractvalue { i64, i64 } %call.140, 1, !dbg !1104
  call void @llvm.dbg.value(metadata i64 %call.140.fca.1.extract, metadata !1106, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1107
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1601, i8* nonnull align 8 %cast.1542, i64 24, i1 false)
  %call.146 = call { i64, i64 } @net.IP.String(i8* nest undef, %IP.0* nonnull %tmpv.464), !dbg !1112
  %call.146.fca.0.extract = extractvalue { i64, i64 } %call.146, 0, !dbg !1112
  %call.146.fca.1.extract = extractvalue { i64, i64 } %call.146, 1, !dbg !1112
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1606, i8* nonnull align 8 %cast.1569, i64 24, i1 false)
  %call.147 = call { i64, i64 } @net.IP.String(i8* nest undef, %IP.0* nonnull %tmpv.466), !dbg !1113
  %call.147.fca.0.extract = extractvalue { i64, i64 } %call.147, 0, !dbg !1113
  %call.147.fca.1.extract = extractvalue { i64, i64 } %call.147, 1, !dbg !1113
  %field.481 = getelementptr inbounds { %_type.0*, { i64, i64 } (i8*, i8*)* }, { %_type.0*, { i64, i64 } (i8*, i8*)* }* %2, i64 0, i32 1, !dbg !1114
  %.field.ld.58 = load { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)** %field.481, align 8, !dbg !1114
  %3 = inttoptr i64 %call.140.fca.1.extract to i8*, !dbg !1114
  %call.148 = call { i64, i64 } %.field.ld.58(i8* nest undef, i8* %3), !dbg !1114
  %call.148.fca.0.extract = extractvalue { i64, i64 } %call.148, 0, !dbg !1114
  %call.148.fca.1.extract = extractvalue { i64, i64 } %call.148, 1, !dbg !1114
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1614, i8* nonnull align 8 %cast.1574, i64 16, i1 false)
  %call.149 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !1115
  store i64 %call.146.fca.0.extract, i64* %tmpv.465.sroa.0.0.cast.1617.sroa_cast, align 8
  store i64 %call.146.fca.1.extract, i64* %tmpv.465.sroa.2.0.cast.1617.sroa_idx6, align 8
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.149, i8* nonnull %cast.1620), !dbg !1115
  %call.150 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !1115
  store i64 %call.147.fca.0.extract, i64* %tmpv.467.sroa.0.0.cast.1622.sroa_cast, align 8
  store i64 %call.147.fca.1.extract, i64* %tmpv.467.sroa.2.0.cast.1622.sroa_idx4, align 8
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.150, i8* nonnull %cast.1625), !dbg !1115
  %call.151 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !1115
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1627, i8* nonnull align 8 %cast.1614, i64 16, i1 false)
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.151, i8* nonnull %cast.1627), !dbg !1115
  %call.152 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !1115
  store i64 %call.148.fca.0.extract, i64* %tmpv.468.sroa.0.0.cast.1632.sroa_cast, align 8
  store i64 %call.148.fca.1.extract, i64* %tmpv.468.sroa.2.0.cast.1632.sroa_idx2, align 8
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.152, i8* nonnull %cast.1635), !dbg !1115
  store %_type.0* @string..d, %_type.0** %tmp.100.sroa.0.0.cast.1640.sroa_idx, align 8, !dbg !1115
  store i8* %call.149, i8** %tmp.100.sroa.2.0.cast.1640.sroa_idx26, align 8, !dbg !1115
  store %_type.0* @string..d, %_type.0** %tmp.101.sroa.0.0.cast.1642.sroa_idx, align 8, !dbg !1115
  store i8* %call.150, i8** %tmp.101.sroa.2.0.cast.1642.sroa_idx27, align 8, !dbg !1115
  store %_type.0* @string..d, %_type.0** %tmp.102.sroa.0.0.cast.1644.sroa_idx, align 8, !dbg !1115
  store i8* %call.151, i8** %tmp.102.sroa.2.0.cast.1644.sroa_idx28, align 8, !dbg !1115
  store %_type.0* @string..d, %_type.0** %tmp.103.sroa.0.0.cast.1646.sroa_idx, align 8, !dbg !1115
  store i8* %call.152, i8** %tmp.103.sroa.2.0.cast.1646.sroa_idx29, align 8, !dbg !1115
  store %IPST.11* %cast.1649, %IPST.11** %field.492, align 8, !dbg !1115
  store i64 4, i64* %field.493, align 8, !dbg !1115
  store i64 4, i64* %field.494, align 8, !dbg !1115
  call void @log.Printf(i8* nest undef, i64 ptrtoint ([40 x i8]* @const.178 to i64), i64 39, %IPST.6* byval nonnull %tmp.104), !dbg !1115
  br label %fallthrough.173

else.175:                                         ; preds = %fallthrough.173, %else.171
  %field.501 = getelementptr inbounds %Reverser.0, %Reverser.0* %r, i64 0, i32 1, !dbg !1116
  %.field.ld.60 = load i8, i8* %field.501, align 1, !dbg !1116
  %4 = and i8 %.field.ld.60, 1, !dbg !1117
  %trunc.179 = icmp eq i8 %4, 0, !dbg !1117
  br i1 %trunc.179, label %fallthrough.176, label %else.177

fallthrough.176:                                  ; preds = %else.175, %else.177
  ret void

else.177:                                         ; preds = %else.175
  %field.496 = getelementptr inbounds %Reverser.0, %Reverser.0* %r, i64 0, i32 3, !dbg !1118
  %.field.ld.59 = load %Interface.0*, %Interface.0** %field.496, align 8, !dbg !1118
  %call.153 = call { i64, i64 } @github_com_twitchyliquid64_subnet_vendor_github_com_songgao_water.Interface.Close..stub(i8* nest undef, %Interface.0* %.field.ld.59), !dbg !1119
  %field.497 = getelementptr inbounds %Reverser.0, %Reverser.0* %r, i64 0, i32 2, !dbg !1120
  %cast.1658 = bitcast { i8*, i64 }* %tmpv.482 to i8*
  %cast.1659 = bitcast { i8*, i64 }* %field.497 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1658, i8* nonnull align 8 %cast.1659, i64 16, i1 false)
  %call.154 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%ArrayType.0, %ArrayType.0* @type...63x.7string, i64 0, i32 0)), !dbg !1121
  %cast.1665 = bitcast [3 x { i8*, i64 }]* %tmpv.485 to i8*, !dbg !1121
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1665, i8* align 8 bitcast ({ i8*, i64 }* @const.181 to i8*), i64 16, i1 false), !dbg !1121
  %index.61 = getelementptr inbounds [3 x { i8*, i64 }], [3 x { i8*, i64 }]* %tmpv.485, i64 0, i64 1, !dbg !1121
  %cast.1667 = bitcast { i8*, i64 }* %index.61 to i8*, !dbg !1121
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1667, i8* align 8 bitcast ({ i8*, i64 }* @const.183 to i8*), i64 16, i1 false), !dbg !1121
  %index.62 = getelementptr inbounds [3 x { i8*, i64 }], [3 x { i8*, i64 }]* %tmpv.485, i64 0, i64 2, !dbg !1121
  %cast.1669 = bitcast { i8*, i64 }* %index.62 to i8*, !dbg !1121
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1669, i8* nonnull align 8 %cast.1658, i64 16, i1 false), !dbg !1121
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%ArrayType.0, %ArrayType.0* @type...63x.7string, i64 0, i32 0), i8* %call.154, i8* nonnull %cast.1665), !dbg !1121
  %5 = bitcast %IPST.5* %tmp.105 to i8**, !dbg !1121
  store i8* %call.154, i8** %5, align 8, !dbg !1121
  %field.499 = getelementptr inbounds %IPST.5, %IPST.5* %tmp.105, i64 0, i32 1, !dbg !1121
  store i64 3, i64* %field.499, align 8, !dbg !1121
  %field.500 = getelementptr inbounds %IPST.5, %IPST.5* %tmp.105, i64 0, i32 2, !dbg !1121
  store i64 3, i64* %field.500, align 8, !dbg !1121
  %6 = call fastcc { i64, i64 } @command_line_arguments.commandExec(i64 ptrtoint ([6 x i8]* @const.159 to i64), i64 5, %IPST.5* byval nonnull %tmp.105, i8 zeroext 0), !dbg !1122
  br label %fallthrough.176
}

define void @command_line_arguments.Reverser.ResetGatewayOSX(i8* nest nocapture readnone %nest.17, %Reverser.0* %r, %Interface.0* %intf, i64 %gw.chunk0, i64 %gw.chunk1) #0 !dbg !1123 {
entry:
  %gw.addr = alloca { i8*, i64 }, align 8
  call void @llvm.dbg.value(metadata %Reverser.0* %r, metadata !1126, metadata !DIExpression()), !dbg !1127
  call void @llvm.dbg.value(metadata %Interface.0* %intf, metadata !1128, metadata !DIExpression()), !dbg !1129
  %field0.93 = bitcast { i8*, i64 }* %gw.addr to i64*
  store i64 %gw.chunk0, i64* %field0.93, align 8
  %0 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %gw.addr, i64 0, i32 1
  store i64 %gw.chunk1, i64* %0, align 8
  %icmp.179 = icmp eq %Reverser.0* %r, null, !dbg !1130
  br i1 %icmp.179, label %then.164, label %else.164

then.164:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1130
  unreachable

else.164:                                         ; preds = %entry
  %field.456 = getelementptr inbounds %Reverser.0, %Reverser.0* %r, i64 0, i32 1, !dbg !1130
  store i8 1, i8* %field.456, align 1, !dbg !1131
  %field.457 = getelementptr inbounds %Reverser.0, %Reverser.0* %r, i64 0, i32 2, !dbg !1132
  %runtime.writeBarrier.ld.7 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1133
  %icmp.182 = icmp eq i32 %runtime.writeBarrier.ld.7, 0, !dbg !1133
  %cast.1533 = bitcast { i8*, i64 }* %field.457 to i8*, !dbg !1133
  %cast.1534 = bitcast { i8*, i64 }* %gw.addr to i8*, !dbg !1133
  br i1 %icmp.182, label %else.168.thread, label %else.168

else.168.thread:                                  ; preds = %else.164
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1533, i8* nonnull align 8 %cast.1534, i64 16, i1 false), !dbg !1133
  %field.4583 = getelementptr inbounds %Reverser.0, %Reverser.0* %r, i64 0, i32 3, !dbg !1134
  br label %else.170

else.168:                                         ; preds = %else.164
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* nonnull %cast.1533, i8* nonnull %cast.1534), !dbg !1133
  %runtime.writeBarrier.ld.8.pre = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1135
  %phitmp = icmp eq i32 %runtime.writeBarrier.ld.8.pre, 0
  %field.458 = getelementptr inbounds %Reverser.0, %Reverser.0* %r, i64 0, i32 3, !dbg !1134
  br i1 %phitmp, label %else.170, label %else.169

fallthrough.169:                                  ; preds = %else.169, %else.170
  ret void

else.169:                                         ; preds = %else.168
  %cast.1539 = bitcast %Interface.0** %field.458 to i8*, !dbg !1135
  %cast.1540 = getelementptr inbounds %Interface.0, %Interface.0* %intf, i64 0, i32 0, !dbg !1135
  call void @runtime.writebarrierptr(i8* nest undef, i8* nonnull %cast.1539, i8* %cast.1540), !dbg !1135
  br label %fallthrough.169

else.170:                                         ; preds = %else.168.thread, %else.168
  %field.4584 = phi %Interface.0** [ %field.4583, %else.168.thread ], [ %field.458, %else.168 ]
  store %Interface.0* %intf, %Interface.0** %field.4584, align 8, !dbg !1135
  br label %fallthrough.169
}

define void @command_line_arguments.NewClient({ %Client.0*, %error.0 }* nocapture sret %sret.formal.0, i8* nest nocapture readnone %nest.0, i64 %servAddr.chunk0, i64 %servAddr.chunk1, i64 %port.chunk0, i64 %port.chunk1, { i8*, i64 }* byval nocapture readonly %network, { i8*, i64 }* byval nocapture readonly %iName, { i8*, i64 }* byval nocapture readonly %newGateway, { i8*, i64 }* byval nocapture readonly %certPemPath, { i8*, i64 }* byval nocapture readonly %keyPemPath, { i8*, i64 }* byval %caCertPath, %IPST.4* byval nocapture readonly %additionalAddresses) #0 !dbg !1136 {
entry:
  %tmp.161.i = alloca [2 x { i8*, i64 }], align 8
  %sret.actual.154.i = alloca { %IPST.4, %error.0 }, align 8
  %tmpv.904.i = alloca %Time.0, align 8
  %sret.actual.157.i = alloca %Time.0, align 8
  %tmp.7 = alloca %IPST.6, align 8
  %tmp.4 = alloca [2 x { i8*, i64 }], align 8
  %tmp.2 = alloca [2 x { i8*, i64 }], align 8
  call void @llvm.dbg.declare(metadata %IPST.4* %additionalAddresses, metadata !1143, metadata !DIExpression()), !dbg !1144
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %caCertPath, metadata !1145, metadata !DIExpression()), !dbg !1146
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %keyPemPath, metadata !1147, metadata !DIExpression()), !dbg !1148
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %certPemPath, metadata !1149, metadata !DIExpression()), !dbg !1150
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %newGateway, metadata !1151, metadata !DIExpression()), !dbg !1152
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %iName, metadata !1153, metadata !DIExpression()), !dbg !1154
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %network, metadata !1155, metadata !DIExpression()), !dbg !1156
  %serverIP = alloca %IP.0, align 8
  %netIP = alloca %IP.0, align 8
  %sret.actual.0 = alloca { %Config.0*, %error.0 }, align 8
  %sret.actual.1.sroa.0 = alloca %IP.0, align 8
  %sret.actual.2 = alloca { %IP.0, %IPNet.0*, %error.0 }, align 8
  %sret.actual.6 = alloca { %Interface.0*, %error.0 }, align 8
  %tmpv.29 = alloca { i8*, i64 }, align 8
  %tmpv.30 = alloca [1 x %IPST.11], align 8
  %tmpv.37 = alloca %Client.0, align 8
  call void @llvm.dbg.value(metadata i64 %servAddr.chunk0, metadata !1157, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1158
  call void @llvm.dbg.value(metadata i64 %servAddr.chunk1, metadata !1157, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1158
  call void @llvm.dbg.value(metadata i64 %port.chunk0, metadata !1159, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1160
  call void @llvm.dbg.value(metadata i64 %port.chunk1, metadata !1159, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1160
  call void @llvm.dbg.value(metadata %Client.0* null, metadata !1161, metadata !DIExpression()), !dbg !1162
  %serverIP.0.sroa_cast = bitcast %IP.0* %serverIP to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %serverIP.0.sroa_cast)
  %netIP.0.sroa_cast = bitcast %IP.0* %netIP to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %netIP.0.sroa_cast)
  %field0.0 = bitcast { i8*, i64 }* %certPemPath to i64*, !dbg !1163
  %ld.0 = load i64, i64* %field0.0, align 8, !dbg !1163
  %0 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %certPemPath, i64 0, i32 1, !dbg !1163
  %ld.1 = load i64, i64* %0, align 8, !dbg !1163
  %field0.1 = bitcast { i8*, i64 }* %keyPemPath to i64*, !dbg !1163
  %ld.2 = load i64, i64* %field0.1, align 8, !dbg !1163
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %keyPemPath, i64 0, i32 1, !dbg !1163
  %ld.3 = load i64, i64* %1, align 8, !dbg !1163
  call void @github_com_twitchyliquid64_subnet_subnet_conn.TLSConfig({ %Config.0*, %error.0 }* nonnull sret %sret.actual.0, i8* nest undef, i64 %ld.0, i64 %ld.1, i64 %ld.2, i64 %ld.3, { i8*, i64 }* byval nonnull %caCertPath), !dbg !1163
  %2 = bitcast { %Config.0*, %error.0 }* %sret.actual.0 to i64*, !dbg !1163
  %tmpv.0.sroa.0.0.copyload24147 = load i64, i64* %2, align 8, !dbg !1163
  %tmpv.0.sroa.3.sroa.0.0.tmpv.0.sroa.3.0.cast.130.sroa_cast.sroa_idx = getelementptr inbounds { %Config.0*, %error.0 }, { %Config.0*, %error.0 }* %sret.actual.0, i64 0, i32 1, i32 0, !dbg !1163
  %tmpv.0.sroa.3.sroa.0.0.copyload91 = load { %_type.0*, { i64, i64 } (i8*, i8*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)* }** %tmpv.0.sroa.3.sroa.0.0.tmpv.0.sroa.3.0.cast.130.sroa_cast.sroa_idx, align 8, !dbg !1163
  call void @llvm.dbg.value(metadata { %Config.0*, %error.0 }* %sret.actual.0, metadata !1165, metadata !DIExpression(DW_OP_deref)), !dbg !1166
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.0.sroa.3.sroa.0.0.copyload91, metadata !1167, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1166
  %icmp.0 = icmp eq { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.0.sroa.3.sroa.0.0.copyload91, null, !dbg !1168
  br i1 %icmp.0, label %else.0, label %then.0

then.0:                                           ; preds = %entry
  %tmpv.0.sroa.3.sroa.3.0.tmpv.0.sroa.3.0.cast.130.sroa_cast.sroa_idx92 = getelementptr inbounds { %Config.0*, %error.0 }, { %Config.0*, %error.0 }* %sret.actual.0, i64 0, i32 1, i32 1, !dbg !1163
  %3 = bitcast i8** %tmpv.0.sroa.3.sroa.3.0.tmpv.0.sroa.3.0.cast.130.sroa_cast.sroa_idx92 to i64*, !dbg !1163
  %tmpv.0.sroa.3.sroa.3.0.copyload93148 = load i64, i64* %3, align 8, !dbg !1163
  call void @llvm.dbg.value(metadata i8** %tmpv.0.sroa.3.sroa.3.0.tmpv.0.sroa.3.0.cast.130.sroa_cast.sroa_idx92, metadata !1167, metadata !DIExpression(DW_OP_deref, DW_OP_LLVM_fragment, 64, 64)), !dbg !1166
  call void @llvm.dbg.value(metadata %Client.0* null, metadata !1161, metadata !DIExpression()), !dbg !1162
  %4 = ptrtoint { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.0.sroa.3.sroa.0.0.copyload91 to i64, !dbg !1169
  call void @llvm.dbg.value(metadata i64 %4, metadata !1170, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1171
  call void @llvm.dbg.value(metadata i64 %tmpv.0.sroa.3.sroa.3.0.copyload93148, metadata !1170, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1171
  %tmp.0.sroa.0.0.cast.142.sroa_idx = getelementptr inbounds { %Client.0*, %error.0 }, { %Client.0*, %error.0 }* %sret.formal.0, i64 0, i32 0, !dbg !1169
  store %Client.0* null, %Client.0** %tmp.0.sroa.0.0.cast.142.sroa_idx, align 8, !dbg !1169
  %tmp.0.sroa.2.0.cast.142.sroa_idx136 = getelementptr inbounds { %Client.0*, %error.0 }, { %Client.0*, %error.0 }* %sret.formal.0, i64 0, i32 1, !dbg !1169
  %tmp.0.sroa.2.0.cast.142.sroa_cast = bitcast %error.0* %tmp.0.sroa.2.0.cast.142.sroa_idx136 to i64*, !dbg !1169
  store i64 %4, i64* %tmp.0.sroa.2.0.cast.142.sroa_cast, align 8, !dbg !1169
  %tmp.0.sroa.3.0.cast.142.sroa_idx137 = getelementptr inbounds { %Client.0*, %error.0 }, { %Client.0*, %error.0 }* %sret.formal.0, i64 0, i32 1, i32 1, !dbg !1169
  %tmp.0.sroa.3.0.cast.142.sroa_cast = bitcast i8** %tmp.0.sroa.3.0.cast.142.sroa_idx137 to i64*, !dbg !1169
  store i64 %tmpv.0.sroa.3.sroa.3.0.copyload93148, i64* %tmp.0.sroa.3.0.cast.142.sroa_cast, align 8, !dbg !1169
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %serverIP.0.sroa_cast), !dbg !1169
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %netIP.0.sroa_cast), !dbg !1169
  ret void, !dbg !1169

else.0:                                           ; preds = %entry
  %5 = bitcast [2 x { i8*, i64 }]* %tmp.161.i to i8*, !dbg !1172
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5), !dbg !1172
  %6 = bitcast { %IPST.4, %error.0 }* %sret.actual.154.i to i8*, !dbg !1172
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %6), !dbg !1172
  %7 = bitcast %Time.0* %tmpv.904.i to i8*, !dbg !1172
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7), !dbg !1172
  %8 = bitcast %Time.0* %sret.actual.157.i to i8*, !dbg !1172
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8), !dbg !1172
  call void @llvm.dbg.value(metadata i64 %servAddr.chunk0, metadata !1182, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1172
  call void @llvm.dbg.value(metadata i64 %servAddr.chunk1, metadata !1182, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1172
  call void @net.LookupIP({ %IPST.4, %error.0 }* nonnull sret %sret.actual.154.i, i8* nest undef, i64 %servAddr.chunk0, i64 %servAddr.chunk1), !dbg !1183
  %tmpv.896.sroa.0.sroa.0.0.tmpv.896.sroa.0.0.cast.2778.sroa_cast.sroa_idx.i = getelementptr inbounds { %IPST.4, %error.0 }, { %IPST.4, %error.0 }* %sret.actual.154.i, i64 0, i32 0, i32 0, !dbg !1183
  %tmpv.896.sroa.0.sroa.0.0.copyload39.i = load %IP.0*, %IP.0** %tmpv.896.sroa.0.sroa.0.0.tmpv.896.sroa.0.0.cast.2778.sroa_cast.sroa_idx.i, align 8, !dbg !1183
  %tmpv.896.sroa.0.sroa.3.0.tmpv.896.sroa.0.0.cast.2778.sroa_cast.sroa_idx40.i = getelementptr inbounds { %IPST.4, %error.0 }, { %IPST.4, %error.0 }* %sret.actual.154.i, i64 0, i32 0, i32 1, !dbg !1183
  %tmpv.896.sroa.0.sroa.3.0.copyload41.i = load i64, i64* %tmpv.896.sroa.0.sroa.3.0.tmpv.896.sroa.0.0.cast.2778.sroa_cast.sroa_idx40.i, align 8, !dbg !1183
  %tmpv.896.sroa.3.0.cast.2778.sroa_idx22.i = getelementptr inbounds { %IPST.4, %error.0 }, { %IPST.4, %error.0 }* %sret.actual.154.i, i64 0, i32 1, i32 0, !dbg !1183
  %tmpv.896.sroa.3.0.copyload23.i = load { %_type.0*, { i64, i64 } (i8*, i8*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)* }** %tmpv.896.sroa.3.0.cast.2778.sroa_idx22.i, align 8, !dbg !1183
  call void @llvm.dbg.value(metadata %IP.0* %tmpv.896.sroa.0.sroa.0.0.copyload39.i, metadata !1185, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1186
  call void @llvm.dbg.value(metadata i64 %tmpv.896.sroa.0.sroa.3.0.copyload41.i, metadata !1185, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1186
  call void @llvm.dbg.value(metadata { %IPST.4, %error.0 }* %sret.actual.154.i, metadata !1185, metadata !DIExpression(DW_OP_plus_uconst, 16, DW_OP_deref, DW_OP_stack_value, DW_OP_LLVM_fragment, 128, 64)), !dbg !1186
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.896.sroa.3.0.copyload23.i, metadata !1187, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1186
  %icmp.378.i = icmp eq { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.896.sroa.3.0.copyload23.i, null, !dbg !1188
  br i1 %icmp.378.i, label %else.338.i, label %then.338.i

then.338.i:                                       ; preds = %else.0
  %tmpv.896.sroa.4.0.cast.2778.sroa_idx24.i = getelementptr inbounds { %IPST.4, %error.0 }, { %IPST.4, %error.0 }* %sret.actual.154.i, i64 0, i32 1, i32 1, !dbg !1183
  %9 = bitcast i8** %tmpv.896.sroa.4.0.cast.2778.sroa_idx24.i to i64*, !dbg !1183
  %tmpv.896.sroa.4.0.copyload251.i = load i64, i64* %9, align 8, !dbg !1183
  call void @llvm.dbg.value(metadata i8** %tmpv.896.sroa.4.0.cast.2778.sroa_idx24.i, metadata !1187, metadata !DIExpression(DW_OP_deref, DW_OP_LLVM_fragment, 64, 64)), !dbg !1186
  %10 = ptrtoint { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.896.sroa.3.0.copyload23.i to i64, !dbg !1189
  call void @llvm.dbg.value(metadata i64 %10, metadata !1190, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1191
  call void @llvm.dbg.value(metadata i64 %tmpv.896.sroa.4.0.copyload251.i, metadata !1190, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1191
  %sret.actual.1.sroa.0.0.sroa_cast154 = bitcast %IP.0* %sret.actual.1.sroa.0 to i8*, !dbg !1189
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %sret.actual.1.sroa.0.0.sroa_cast154, i8 0, i64 24, i1 false), !dbg !1189
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5), !dbg !1189
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %6), !dbg !1189
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7), !dbg !1189
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8), !dbg !1189
  br label %command_line_arguments.hostToIP.exit, !dbg !1189

else.338.i:                                       ; preds = %else.0
  %icmp.379.i = icmp eq i64 %tmpv.896.sroa.0.sroa.3.0.copyload41.i, 0, !dbg !1192
  br i1 %icmp.379.i, label %then.339.i, label %else.339.i

then.339.i:                                       ; preds = %else.338.i
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* align 8 bitcast ({ i8*, i64 }* @const.312 to i8*), i64 16, i1 false), !dbg !1193
  %addr.addr.sroa.0.0.cast.2808.sroa_idx.i = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmp.161.i, i64 0, i64 1, !dbg !1193
  %addr.addr.sroa.0.0.cast.2808.sroa_cast.i = bitcast { i8*, i64 }* %addr.addr.sroa.0.0.cast.2808.sroa_idx.i to i64*, !dbg !1193
  store i64 %servAddr.chunk0, i64* %addr.addr.sroa.0.0.cast.2808.sroa_cast.i, align 8, !dbg !1193
  %addr.addr.sroa.3.0.cast.2808.sroa_idx65.i = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmp.161.i, i64 0, i64 1, i32 1, !dbg !1193
  store i64 %servAddr.chunk1, i64* %addr.addr.sroa.3.0.cast.2808.sroa_idx65.i, align 8, !dbg !1193
  %call.253.i = call { i64, i64 } @runtime.concatstring2(i8* nest undef, i8* null, [2 x { i8*, i64 }]* byval nonnull %tmp.161.i), !dbg !1193
  %call.253.fca.0.extract.i = extractvalue { i64, i64 } %call.253.i, 0, !dbg !1193
  %call.253.fca.1.extract.i = extractvalue { i64, i64 } %call.253.i, 1, !dbg !1193
  %call.254.i = call { i64, i64 } @errors.New(i8* nest undef, i64 %call.253.fca.0.extract.i, i64 %call.253.fca.1.extract.i), !dbg !1194
  %call.254.fca.0.extract.i = extractvalue { i64, i64 } %call.254.i, 0, !dbg !1194
  %call.254.fca.1.extract.i = extractvalue { i64, i64 } %call.254.i, 1, !dbg !1194
  call void @llvm.dbg.value(metadata i64 %call.254.fca.0.extract.i, metadata !1190, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1191
  call void @llvm.dbg.value(metadata i64 %call.254.fca.1.extract.i, metadata !1190, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1191
  %sret.actual.1.sroa.0.0.sroa_cast155 = bitcast %IP.0* %sret.actual.1.sroa.0 to i8*, !dbg !1195
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %sret.actual.1.sroa.0.0.sroa_cast155, i8 0, i64 24, i1 false), !dbg !1195
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5), !dbg !1195
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %6), !dbg !1195
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7), !dbg !1195
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8), !dbg !1195
  br label %command_line_arguments.hostToIP.exit, !dbg !1195

else.339.i:                                       ; preds = %else.338.i
  call void @time.Now(%Time.0* nonnull sret %sret.actual.157.i, i8* nest undef), !dbg !1196
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* nonnull align 8 %8, i64 24, i1 false)
  %call.255.i = call i64 @time.Time.Unix(i8* nest undef, %Time.0* nonnull %tmpv.904.i), !dbg !1197
  call void @math_rand.Seed(i8* nest undef, i64 %call.255.i), !dbg !1198
  %call.256.i = call i64 @math_rand.Int(i8* nest undef), !dbg !1199
  %icmp.380.i = icmp eq i64 %tmpv.896.sroa.0.sroa.3.0.copyload41.i, -1, !dbg !1200
  br i1 %icmp.380.i, label %fallthrough.340.i, label %else.341.i

fallthrough.340.i:                                ; preds = %else.341.i, %else.339.i
  %tmpv.910.0.i = phi i64 [ %mod.0.i, %else.341.i ], [ 0, %else.339.i ]
  %icmp.382.i = icmp sge i64 %tmpv.910.0.i, %tmpv.896.sroa.0.sroa.3.0.copyload41.i, !dbg !1201
  %11 = icmp slt i64 %tmpv.910.0.i, 0, !dbg !1201
  %ior.179.i = or i1 %icmp.382.i, %11, !dbg !1201
  br i1 %ior.179.i, label %then.342.i, label %command_line_arguments.hostToIP.exit.thread

else.341.i:                                       ; preds = %else.339.i
  %mod.0.i = srem i64 %call.256.i, %tmpv.896.sroa.0.sroa.3.0.copyload41.i, !dbg !1200
  br label %fallthrough.340.i

then.342.i:                                       ; preds = %fallthrough.340.i
  call void @__go_runtime_error(i8* nest undef, i32 0), !dbg !1201
  unreachable

command_line_arguments.hostToIP.exit.thread:      ; preds = %fallthrough.340.i
  %ptroff.20.i = getelementptr %IP.0, %IP.0* %tmpv.896.sroa.0.sroa.0.0.copyload39.i, i64 %tmpv.910.0.i, !dbg !1201
  call void @llvm.dbg.value(metadata i64 0, metadata !1190, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1191
  call void @llvm.dbg.value(metadata i64 0, metadata !1190, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1191
  %sret.actual.1.sroa.0.0.cast.2829.i.sroa_cast = bitcast %IP.0* %ptroff.20.i to i8*, !dbg !1202
  %sret.actual.1.sroa.0.0.sroa_cast152 = bitcast %IP.0* %sret.actual.1.sroa.0 to i8*, !dbg !1202
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %sret.actual.1.sroa.0.0.sroa_cast152, i8* align 8 %sret.actual.1.sroa.0.0.cast.2829.i.sroa_cast, i64 24, i1 false), !dbg !1202
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5), !dbg !1202
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %6), !dbg !1202
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7), !dbg !1202
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8), !dbg !1202
  %serverIP168170 = bitcast %IP.0* %serverIP to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %serverIP168170, i8* nonnull align 8 %sret.actual.1.sroa.0.0.sroa_cast152, i64 24, i1 false)
  call void @llvm.dbg.value(metadata i64 %sret.actual.1.sroa.4.0, metadata !1167, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1166
  call void @llvm.dbg.value(metadata i8** undef, metadata !1167, metadata !DIExpression(DW_OP_deref, DW_OP_LLVM_fragment, 64, 64)), !dbg !1166
  br label %else.1

command_line_arguments.hostToIP.exit:             ; preds = %then.339.i, %then.338.i
  %sret.actual.1.sroa.0.0.sroa_cast.pre-phi = phi i8* [ %sret.actual.1.sroa.0.0.sroa_cast155, %then.339.i ], [ %sret.actual.1.sroa.0.0.sroa_cast154, %then.338.i ], !dbg !1203
  %sret.actual.1.sroa.8.0 = phi i64 [ %call.254.fca.1.extract.i, %then.339.i ], [ %tmpv.896.sroa.4.0.copyload251.i, %then.338.i ], !dbg !1204
  %sret.actual.1.sroa.4.0 = phi i64 [ %call.254.fca.0.extract.i, %then.339.i ], [ %10, %then.338.i ], !dbg !1204
  %serverIP168 = bitcast %IP.0* %serverIP to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %serverIP168, i8* align 8 %sret.actual.1.sroa.0.0.sroa_cast.pre-phi, i64 24, i1 false)
  call void @llvm.dbg.value(metadata i64 %sret.actual.1.sroa.4.0, metadata !1167, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1166
  call void @llvm.dbg.value(metadata i8** undef, metadata !1167, metadata !DIExpression(DW_OP_deref, DW_OP_LLVM_fragment, 64, 64)), !dbg !1166
  %icmp.1 = icmp eq i64 %sret.actual.1.sroa.4.0, 0, !dbg !1205
  br i1 %icmp.1, label %else.1, label %then.1

then.1:                                           ; preds = %command_line_arguments.hostToIP.exit
  call void @llvm.dbg.value(metadata %Client.0* null, metadata !1161, metadata !DIExpression()), !dbg !1162
  call void @llvm.dbg.value(metadata i64 %sret.actual.1.sroa.4.0, metadata !1170, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1171
  call void @llvm.dbg.value(metadata i64 %sret.actual.1.sroa.8.0, metadata !1170, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1171
  %tmp.1.sroa.0.0.cast.165.sroa_idx = getelementptr inbounds { %Client.0*, %error.0 }, { %Client.0*, %error.0 }* %sret.formal.0, i64 0, i32 0, !dbg !1206
  store %Client.0* null, %Client.0** %tmp.1.sroa.0.0.cast.165.sroa_idx, align 8, !dbg !1206
  %tmp.1.sroa.2.0.cast.165.sroa_idx138 = getelementptr inbounds { %Client.0*, %error.0 }, { %Client.0*, %error.0 }* %sret.formal.0, i64 0, i32 1, !dbg !1206
  %tmp.1.sroa.2.0.cast.165.sroa_cast = bitcast %error.0* %tmp.1.sroa.2.0.cast.165.sroa_idx138 to i64*, !dbg !1206
  store i64 %sret.actual.1.sroa.4.0, i64* %tmp.1.sroa.2.0.cast.165.sroa_cast, align 8, !dbg !1206
  %tmp.1.sroa.3.0.cast.165.sroa_idx139 = getelementptr inbounds { %Client.0*, %error.0 }, { %Client.0*, %error.0 }* %sret.formal.0, i64 0, i32 1, i32 1, !dbg !1206
  %tmp.1.sroa.3.0.cast.165.sroa_cast = bitcast i8** %tmp.1.sroa.3.0.cast.165.sroa_idx139 to i64*, !dbg !1206
  store i64 %sret.actual.1.sroa.8.0, i64* %tmp.1.sroa.3.0.cast.165.sroa_cast, align 8, !dbg !1206
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %serverIP.0.sroa_cast), !dbg !1206
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %netIP.0.sroa_cast), !dbg !1206
  ret void, !dbg !1206

else.1:                                           ; preds = %command_line_arguments.hostToIP.exit.thread, %command_line_arguments.hostToIP.exit
  %field0.3 = bitcast { i8*, i64 }* %network to i64*, !dbg !1207
  %ld.6 = load i64, i64* %field0.3, align 8, !dbg !1207
  %12 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %network, i64 0, i32 1, !dbg !1207
  %ld.7 = load i64, i64* %12, align 8, !dbg !1207
  call void @net.ParseCIDR({ %IP.0, %IPNet.0*, %error.0 }* nonnull sret %sret.actual.2, i8* nest undef, i64 %ld.6, i64 %ld.7), !dbg !1207
  %tmpv.10.sroa.0.0.cast.172.sroa_cast = bitcast { %IP.0, %IPNet.0*, %error.0 }* %sret.actual.2 to i8*, !dbg !1207
  %tmpv.10.sroa.3.0.cast.172.sroa_idx21 = getelementptr inbounds { %IP.0, %IPNet.0*, %error.0 }, { %IP.0, %IPNet.0*, %error.0 }* %sret.actual.2, i64 0, i32 1, !dbg !1207
  %13 = bitcast %IPNet.0** %tmpv.10.sroa.3.0.cast.172.sroa_idx21 to i64*, !dbg !1207
  %tmpv.10.sroa.3.0.copyload22150 = load i64, i64* %13, align 8, !dbg !1207
  %tmpv.10.sroa.4.sroa.0.0.tmpv.10.sroa.4.0.cast.172.sroa_cast.sroa_idx = getelementptr inbounds { %IP.0, %IPNet.0*, %error.0 }, { %IP.0, %IPNet.0*, %error.0 }* %sret.actual.2, i64 0, i32 2, i32 0, !dbg !1207
  %tmpv.10.sroa.4.sroa.0.0.copyload87 = load { %_type.0*, { i64, i64 } (i8*, i8*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)* }** %tmpv.10.sroa.4.sroa.0.0.tmpv.10.sroa.4.0.cast.172.sroa_cast.sroa_idx, align 8, !dbg !1207
  %tmpv.10.sroa.4.sroa.3.0.tmpv.10.sroa.4.0.cast.172.sroa_cast.sroa_idx88 = getelementptr inbounds { %IP.0, %IPNet.0*, %error.0 }, { %IP.0, %IPNet.0*, %error.0 }* %sret.actual.2, i64 0, i32 2, i32 1, !dbg !1207
  %tmpv.10.sroa.4.sroa.3.0.copyload89 = load i8*, i8** %tmpv.10.sroa.4.sroa.3.0.tmpv.10.sroa.4.0.cast.172.sroa_cast.sroa_idx88, align 8, !dbg !1207
  %netIP169 = bitcast %IP.0* %netIP to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %netIP169, i8* nonnull align 8 %tmpv.10.sroa.0.0.cast.172.sroa_cast, i64 24, i1 false)
  call void @llvm.dbg.value(metadata %IPNet.0** %tmpv.10.sroa.3.0.cast.172.sroa_idx21, metadata !1208, metadata !DIExpression(DW_OP_deref)), !dbg !1209
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.10.sroa.4.sroa.0.0.copyload87, metadata !1167, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1166
  call void @llvm.dbg.value(metadata i8* %tmpv.10.sroa.4.sroa.3.0.copyload89, metadata !1167, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1166
  %icmp.2 = icmp eq { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.10.sroa.4.sroa.0.0.copyload87, null, !dbg !1210
  br i1 %icmp.2, label %else.2, label %then.2

then.2:                                           ; preds = %else.1
  %field.14 = getelementptr inbounds { %_type.0*, { i64, i64 } (i8*, i8*)* }, { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.10.sroa.4.sroa.0.0.copyload87, i64 0, i32 1, !dbg !1211
  %.field.ld.0 = load { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)** %field.14, align 8, !dbg !1211
  %call.0 = call { i64, i64 } %.field.ld.0(i8* nest undef, i8* %tmpv.10.sroa.4.sroa.3.0.copyload89), !dbg !1211
  %call.0.fca.0.extract = extractvalue { i64, i64 } %call.0, 0, !dbg !1211
  %call.0.fca.1.extract = extractvalue { i64, i64 } %call.0, 1, !dbg !1211
  %cast.187 = bitcast [2 x { i8*, i64 }]* %tmp.2 to i8*, !dbg !1212
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.187, i8* align 8 bitcast ({ i8*, i64 }* @const.84 to i8*), i64 16, i1 false), !dbg !1212
  %tmpv.15.sroa.0.0.cast.189.sroa_idx = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmp.2, i64 0, i64 1, !dbg !1212
  %tmpv.15.sroa.0.0.cast.189.sroa_cast = bitcast { i8*, i64 }* %tmpv.15.sroa.0.0.cast.189.sroa_idx to i64*, !dbg !1212
  store i64 %call.0.fca.0.extract, i64* %tmpv.15.sroa.0.0.cast.189.sroa_cast, align 8, !dbg !1212
  %tmpv.15.sroa.2.0.cast.189.sroa_idx18 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmp.2, i64 0, i64 1, i32 1, !dbg !1212
  store i64 %call.0.fca.1.extract, i64* %tmpv.15.sroa.2.0.cast.189.sroa_idx18, align 8, !dbg !1212
  %call.1 = call { i64, i64 } @runtime.concatstring2(i8* nest undef, i8* null, [2 x { i8*, i64 }]* byval nonnull %tmp.2), !dbg !1212
  %call.1.fca.0.extract = extractvalue { i64, i64 } %call.1, 0, !dbg !1212
  %call.1.fca.1.extract = extractvalue { i64, i64 } %call.1, 1, !dbg !1212
  %call.2 = call { i64, i64 } @errors.New(i8* nest undef, i64 %call.1.fca.0.extract, i64 %call.1.fca.1.extract), !dbg !1213
  %call.2.fca.0.extract = extractvalue { i64, i64 } %call.2, 0, !dbg !1213
  %call.2.fca.1.extract = extractvalue { i64, i64 } %call.2, 1, !dbg !1213
  call void @llvm.dbg.value(metadata %Client.0* null, metadata !1161, metadata !DIExpression()), !dbg !1162
  call void @llvm.dbg.value(metadata i64 %call.2.fca.0.extract, metadata !1170, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1171
  call void @llvm.dbg.value(metadata i64 %call.2.fca.1.extract, metadata !1170, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1171
  %tmp.3.sroa.0.0.cast.203.sroa_idx = getelementptr inbounds { %Client.0*, %error.0 }, { %Client.0*, %error.0 }* %sret.formal.0, i64 0, i32 0, !dbg !1214
  store %Client.0* null, %Client.0** %tmp.3.sroa.0.0.cast.203.sroa_idx, align 8, !dbg !1214
  %tmp.3.sroa.2.0.cast.203.sroa_idx140 = getelementptr inbounds { %Client.0*, %error.0 }, { %Client.0*, %error.0 }* %sret.formal.0, i64 0, i32 1, !dbg !1214
  %tmp.3.sroa.2.0.cast.203.sroa_cast = bitcast %error.0* %tmp.3.sroa.2.0.cast.203.sroa_idx140 to i64*, !dbg !1214
  store i64 %call.2.fca.0.extract, i64* %tmp.3.sroa.2.0.cast.203.sroa_cast, align 8, !dbg !1214
  %tmp.3.sroa.3.0.cast.203.sroa_idx141 = getelementptr inbounds { %Client.0*, %error.0 }, { %Client.0*, %error.0 }* %sret.formal.0, i64 0, i32 1, i32 1, !dbg !1214
  %tmp.3.sroa.3.0.cast.203.sroa_cast = bitcast i8** %tmp.3.sroa.3.0.cast.203.sroa_idx141 to i64*, !dbg !1214
  store i64 %call.2.fca.1.extract, i64* %tmp.3.sroa.3.0.cast.203.sroa_cast, align 8, !dbg !1214
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %serverIP.0.sroa_cast), !dbg !1214
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %netIP.0.sroa_cast), !dbg !1214
  ret void, !dbg !1214

else.2:                                           ; preds = %else.1
  %field0.5 = bitcast { i8*, i64 }* %iName to i64*, !dbg !1215
  %ld.10 = load i64, i64* %field0.5, align 8, !dbg !1215
  %14 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %iName, i64 0, i32 1, !dbg !1215
  %ld.11 = load i64, i64* %14, align 8, !dbg !1215
  call void @github_com_twitchyliquid64_subnet_vendor_github_com_songgao_water.NewTUN({ %Interface.0*, %error.0 }* nonnull sret %sret.actual.6, i8* nest undef, i64 %ld.10, i64 %ld.11), !dbg !1215
  %tmpv.19.sroa.0.0.cast.210.sroa_idx = getelementptr inbounds { %Interface.0*, %error.0 }, { %Interface.0*, %error.0 }* %sret.actual.6, i64 0, i32 0, !dbg !1215
  %tmpv.19.sroa.0.0.copyload12 = load %Interface.0*, %Interface.0** %tmpv.19.sroa.0.0.cast.210.sroa_idx, align 8, !dbg !1215
  %tmpv.19.sroa.3.sroa.0.0.tmpv.19.sroa.3.0.cast.210.sroa_cast.sroa_idx = getelementptr inbounds { %Interface.0*, %error.0 }, { %Interface.0*, %error.0 }* %sret.actual.6, i64 0, i32 1, i32 0, !dbg !1215
  %tmpv.19.sroa.3.sroa.0.0.copyload95 = load { %_type.0*, { i64, i64 } (i8*, i8*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)* }** %tmpv.19.sroa.3.sroa.0.0.tmpv.19.sroa.3.0.cast.210.sroa_cast.sroa_idx, align 8, !dbg !1215
  call void @llvm.dbg.value(metadata %Interface.0* %tmpv.19.sroa.0.0.copyload12, metadata !1216, metadata !DIExpression()), !dbg !1217
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.19.sroa.3.sroa.0.0.copyload95, metadata !1167, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1166
  %icmp.3 = icmp eq { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.19.sroa.3.sroa.0.0.copyload95, null, !dbg !1218
  br i1 %icmp.3, label %else.3, label %then.3

then.3:                                           ; preds = %else.2
  %tmpv.19.sroa.3.sroa.3.0.tmpv.19.sroa.3.0.cast.210.sroa_cast.sroa_idx96 = getelementptr inbounds { %Interface.0*, %error.0 }, { %Interface.0*, %error.0 }* %sret.actual.6, i64 0, i32 1, i32 1, !dbg !1215
  %tmpv.19.sroa.3.sroa.3.0.copyload97 = load i8*, i8** %tmpv.19.sroa.3.sroa.3.0.tmpv.19.sroa.3.0.cast.210.sroa_cast.sroa_idx96, align 8, !dbg !1215
  call void @llvm.dbg.value(metadata i8* %tmpv.19.sroa.3.sroa.3.0.copyload97, metadata !1167, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1166
  %field.22 = getelementptr inbounds { %_type.0*, { i64, i64 } (i8*, i8*)* }, { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.19.sroa.3.sroa.0.0.copyload95, i64 0, i32 1, !dbg !1219
  %.field.ld.1 = load { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)** %field.22, align 8, !dbg !1219
  %call.3 = call { i64, i64 } %.field.ld.1(i8* nest undef, i8* %tmpv.19.sroa.3.sroa.3.0.copyload97), !dbg !1219
  %call.3.fca.0.extract = extractvalue { i64, i64 } %call.3, 0, !dbg !1219
  %call.3.fca.1.extract = extractvalue { i64, i64 } %call.3, 1, !dbg !1219
  %cast.221 = bitcast [2 x { i8*, i64 }]* %tmp.4 to i8*, !dbg !1220
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.221, i8* align 8 bitcast ({ i8*, i64 }* @const.87 to i8*), i64 16, i1 false), !dbg !1220
  %tmpv.23.sroa.0.0.cast.223.sroa_idx = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmp.4, i64 0, i64 1, !dbg !1220
  %tmpv.23.sroa.0.0.cast.223.sroa_cast = bitcast { i8*, i64 }* %tmpv.23.sroa.0.0.cast.223.sroa_idx to i64*, !dbg !1220
  store i64 %call.3.fca.0.extract, i64* %tmpv.23.sroa.0.0.cast.223.sroa_cast, align 8, !dbg !1220
  %tmpv.23.sroa.2.0.cast.223.sroa_idx11 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmp.4, i64 0, i64 1, i32 1, !dbg !1220
  store i64 %call.3.fca.1.extract, i64* %tmpv.23.sroa.2.0.cast.223.sroa_idx11, align 8, !dbg !1220
  %call.4 = call { i64, i64 } @runtime.concatstring2(i8* nest undef, i8* null, [2 x { i8*, i64 }]* byval nonnull %tmp.4), !dbg !1220
  %call.4.fca.0.extract = extractvalue { i64, i64 } %call.4, 0, !dbg !1220
  %call.4.fca.1.extract = extractvalue { i64, i64 } %call.4, 1, !dbg !1220
  %call.5 = call { i64, i64 } @errors.New(i8* nest undef, i64 %call.4.fca.0.extract, i64 %call.4.fca.1.extract), !dbg !1221
  %call.5.fca.0.extract = extractvalue { i64, i64 } %call.5, 0, !dbg !1221
  %call.5.fca.1.extract = extractvalue { i64, i64 } %call.5, 1, !dbg !1221
  call void @llvm.dbg.value(metadata %Client.0* null, metadata !1161, metadata !DIExpression()), !dbg !1162
  call void @llvm.dbg.value(metadata i64 %call.5.fca.0.extract, metadata !1170, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1171
  call void @llvm.dbg.value(metadata i64 %call.5.fca.1.extract, metadata !1170, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1171
  %tmp.5.sroa.0.0.cast.237.sroa_idx = getelementptr inbounds { %Client.0*, %error.0 }, { %Client.0*, %error.0 }* %sret.formal.0, i64 0, i32 0, !dbg !1222
  store %Client.0* null, %Client.0** %tmp.5.sroa.0.0.cast.237.sroa_idx, align 8, !dbg !1222
  %tmp.5.sroa.2.0.cast.237.sroa_idx142 = getelementptr inbounds { %Client.0*, %error.0 }, { %Client.0*, %error.0 }* %sret.formal.0, i64 0, i32 1, !dbg !1222
  %tmp.5.sroa.2.0.cast.237.sroa_cast = bitcast %error.0* %tmp.5.sroa.2.0.cast.237.sroa_idx142 to i64*, !dbg !1222
  store i64 %call.5.fca.0.extract, i64* %tmp.5.sroa.2.0.cast.237.sroa_cast, align 8, !dbg !1222
  %tmp.5.sroa.3.0.cast.237.sroa_idx143 = getelementptr inbounds { %Client.0*, %error.0 }, { %Client.0*, %error.0 }* %sret.formal.0, i64 0, i32 1, i32 1, !dbg !1222
  %tmp.5.sroa.3.0.cast.237.sroa_cast = bitcast i8** %tmp.5.sroa.3.0.cast.237.sroa_idx143 to i64*, !dbg !1222
  store i64 %call.5.fca.1.extract, i64* %tmp.5.sroa.3.0.cast.237.sroa_cast, align 8, !dbg !1222
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %serverIP.0.sroa_cast), !dbg !1222
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %netIP.0.sroa_cast), !dbg !1222
  ret void, !dbg !1222

else.3:                                           ; preds = %else.2
  %call.6 = call { i64, i64 } @github_com_twitchyliquid64_subnet_vendor_github_com_songgao_water.Interface.Name(i8* nest undef, %Interface.0* %tmpv.19.sroa.0.0.copyload12), !dbg !1223
  %call.6.fca.0.extract = extractvalue { i64, i64 } %call.6, 0, !dbg !1223
  %call.6.fca.1.extract = extractvalue { i64, i64 } %call.6, 1, !dbg !1223
  %call.7 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !1224
  %tmpv.27.sroa.0.0.cast.244.sroa_cast = bitcast { i8*, i64 }* %tmpv.29 to i64*
  store i64 %call.6.fca.0.extract, i64* %tmpv.27.sroa.0.0.cast.244.sroa_cast, align 8
  %tmpv.27.sroa.2.0.cast.244.sroa_idx6 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.29, i64 0, i32 1
  store i64 %call.6.fca.1.extract, i64* %tmpv.27.sroa.2.0.cast.244.sroa_idx6, align 8
  %cast.247 = bitcast { i8*, i64 }* %tmpv.29 to i8*, !dbg !1224
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.7, i8* nonnull %cast.247), !dbg !1224
  %tmp.6.sroa.0.0.cast.249.sroa_idx = getelementptr inbounds [1 x %IPST.11], [1 x %IPST.11]* %tmpv.30, i64 0, i64 0, i32 0, !dbg !1224
  store %_type.0* @string..d, %_type.0** %tmp.6.sroa.0.0.cast.249.sroa_idx, align 8, !dbg !1224
  %tmp.6.sroa.2.0.cast.249.sroa_idx144 = getelementptr inbounds [1 x %IPST.11], [1 x %IPST.11]* %tmpv.30, i64 0, i64 0, i32 1, !dbg !1224
  store i8* %call.7, i8** %tmp.6.sroa.2.0.cast.249.sroa_idx144, align 8, !dbg !1224
  %field.29 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.7, i64 0, i32 0, !dbg !1224
  %cast.252 = getelementptr inbounds [1 x %IPST.11], [1 x %IPST.11]* %tmpv.30, i64 0, i64 0, !dbg !1224
  store %IPST.11* %cast.252, %IPST.11** %field.29, align 8, !dbg !1224
  %field.30 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.7, i64 0, i32 1, !dbg !1224
  store i64 1, i64* %field.30, align 8, !dbg !1224
  %field.31 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.7, i64 0, i32 2, !dbg !1224
  store i64 1, i64* %field.31, align 8, !dbg !1224
  call void @log.Printf(i8* nest undef, i64 ptrtoint ([18 x i8]* @const.88 to i64), i64 17, %IPST.6* byval nonnull %tmp.7), !dbg !1224
  %call.8 = call {}* @runtime.makechan(i8* nest undef, %_type.0* getelementptr inbounds (%ChanType.0, %ChanType.0* @type..chan.0.1command_line_arguments.IPPacket, i64 0, i32 0), i64 150), !dbg !1225
  %call.9 = call {}* @runtime.makechan(i8* nest undef, %_type.0* getelementptr inbounds (%ChanType.0, %ChanType.0* @type..chan.0.1command_line_arguments.IPPacket, i64 0, i32 0), i64 150), !dbg !1226
  %call.10 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.Client..d, i64 0, i32 0)), !dbg !1227
  %cast.256 = bitcast i8* %call.10 to %Client.0*, !dbg !1227
  %field.32 = getelementptr inbounds %Client.0, %Client.0* %tmpv.37, i64 0, i32 0, !dbg !1228
  store i8 0, i8* %field.32, align 8, !dbg !1228
  %field.33 = getelementptr inbounds %Client.0, %Client.0* %tmpv.37, i64 0, i32 1, !dbg !1228
  %cast.257 = bitcast { i8*, i64 }* %field.33 to i8*, !dbg !1228
  %cast.258 = bitcast { i8*, i64 }* %newGateway to i8*, !dbg !1228
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.257, i8* nonnull align 8 %cast.258, i64 16, i1 false), !dbg !1228
  %servAddr.addr.sroa.0.0.cast.259.sroa_idx = getelementptr inbounds %Client.0, %Client.0* %tmpv.37, i64 0, i32 2, !dbg !1228
  %servAddr.addr.sroa.0.0.cast.259.sroa_cast = bitcast { i8*, i64 }* %servAddr.addr.sroa.0.0.cast.259.sroa_idx to i64*, !dbg !1228
  store i64 %servAddr.chunk0, i64* %servAddr.addr.sroa.0.0.cast.259.sroa_cast, align 8, !dbg !1228
  %servAddr.addr.sroa.4.0.cast.259.sroa_idx134 = getelementptr inbounds %Client.0, %Client.0* %tmpv.37, i64 0, i32 2, i32 1, !dbg !1228
  store i64 %servAddr.chunk1, i64* %servAddr.addr.sroa.4.0.cast.259.sroa_idx134, align 8, !dbg !1228
  %port.addr.sroa.0.0.cast.261.sroa_idx = getelementptr inbounds %Client.0, %Client.0* %tmpv.37, i64 0, i32 3, !dbg !1228
  %port.addr.sroa.0.0.cast.261.sroa_cast = bitcast { i8*, i64 }* %port.addr.sroa.0.0.cast.261.sroa_idx to i64*, !dbg !1228
  store i64 %port.chunk0, i64* %port.addr.sroa.0.0.cast.261.sroa_cast, align 8, !dbg !1228
  %port.addr.sroa.3.0.cast.261.sroa_idx133 = getelementptr inbounds %Client.0, %Client.0* %tmpv.37, i64 0, i32 3, i32 1, !dbg !1228
  store i64 %port.chunk1, i64* %port.addr.sroa.3.0.cast.261.sroa_idx133, align 8, !dbg !1228
  %field.36 = getelementptr inbounds %Client.0, %Client.0* %tmpv.37, i64 0, i32 4, !dbg !1228
  %cast.263 = bitcast %WaitGroup.0* %field.36 to i8*, !dbg !1228
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %cast.263, i8 0, i64 16, i1 false), !dbg !1228
  %field.37 = getelementptr inbounds %Client.0, %Client.0* %tmpv.37, i64 0, i32 5, !dbg !1228
  %cast.265 = bitcast %IP.0* %field.37 to i8*, !dbg !1228
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.265, i8* nonnull align 8 %serverIP.0.sroa_cast, i64 24, i1 false), !dbg !1228
  %field.38 = getelementptr inbounds %Client.0, %Client.0* %tmpv.37, i64 0, i32 6, !dbg !1228
  %cast.267 = bitcast %IP.0* %field.38 to i8*, !dbg !1228
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.267, i8* nonnull align 8 %netIP.0.sroa_cast, i64 24, i1 false), !dbg !1228
  %field.39 = getelementptr inbounds %Client.0, %Client.0* %tmpv.37, i64 0, i32 7, !dbg !1228
  %cast.269 = bitcast %IPST.4* %field.39 to i8*, !dbg !1228
  %cast.270 = bitcast %IPST.4* %additionalAddresses to i8*, !dbg !1228
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.269, i8* nonnull align 8 %cast.270, i64 24, i1 false), !dbg !1228
  %field.40 = getelementptr inbounds %Client.0, %Client.0* %tmpv.37, i64 0, i32 8, !dbg !1228
  %15 = bitcast %IPNet.0** %field.40 to i64*, !dbg !1228
  store i64 %tmpv.10.sroa.3.0.copyload22150, i64* %15, align 8, !dbg !1228
  %field.41 = getelementptr inbounds %Client.0, %Client.0* %tmpv.37, i64 0, i32 9, !dbg !1228
  store i8 0, i8* %field.41, align 8, !dbg !1228
  %field.42 = getelementptr inbounds %Client.0, %Client.0* %tmpv.37, i64 0, i32 10, !dbg !1228
  store {}* %call.8, {}** %field.42, align 8, !dbg !1228
  %field.43 = getelementptr inbounds %Client.0, %Client.0* %tmpv.37, i64 0, i32 11, !dbg !1228
  store {}* %call.9, {}** %field.43, align 8, !dbg !1228
  %field.44 = getelementptr inbounds %Client.0, %Client.0* %tmpv.37, i64 0, i32 12, !dbg !1228
  store %Interface.0* %tmpv.19.sroa.0.0.copyload12, %Interface.0** %field.44, align 8, !dbg !1228
  %field.45 = getelementptr inbounds %Client.0, %Client.0* %tmpv.37, i64 0, i32 13, !dbg !1228
  %16 = bitcast %Config.0** %field.45 to i64*, !dbg !1228
  store i64 %tmpv.0.sroa.0.0.copyload24147, i64* %16, align 8, !dbg !1228
  %field.46 = getelementptr inbounds %Client.0, %Client.0* %tmpv.37, i64 0, i32 14, !dbg !1228
  %field.49 = getelementptr inbounds %Client.0, %Client.0* %tmpv.37, i64 0, i32 17, !dbg !1228
  %17 = bitcast %Mutex.0* %field.49 to i64*, !dbg !1228
  store i64 0, i64* %17, align 4, !dbg !1228
  %field.50 = getelementptr inbounds %Client.0, %Client.0* %tmpv.37, i64 0, i32 18, !dbg !1228
  %cast.275 = bitcast %Reverser.0* %field.50 to i8*, !dbg !1228
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %cast.275, i8 0, i64 56, i1 false), !dbg !1228
  %18 = bitcast %Conn.1** %field.46 to i8*, !dbg !1227
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 0, i64 25, i1 false), !dbg !1228
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.Client..d, i64 0, i32 0), i8* %call.10, i8* nonnull %field.32), !dbg !1227
  call void @llvm.dbg.value(metadata %Client.0* %cast.256, metadata !1229, metadata !DIExpression()), !dbg !1230
  %call.11 = call { i64, i64 } @command_line_arguments.Client.init(i8* nest undef, %Client.0* %cast.256, i64 %servAddr.chunk0, i64 %servAddr.chunk1, i64 %port.chunk0, i64 %port.chunk1), !dbg !1231
  %call.11.fca.0.extract = extractvalue { i64, i64 } %call.11, 0, !dbg !1231
  %call.11.fca.1.extract = extractvalue { i64, i64 } %call.11, 1, !dbg !1231
  call void @llvm.dbg.value(metadata %Client.0* %cast.256, metadata !1161, metadata !DIExpression()), !dbg !1162
  call void @llvm.dbg.value(metadata i64 %call.11.fca.0.extract, metadata !1170, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1171
  call void @llvm.dbg.value(metadata i64 %call.11.fca.1.extract, metadata !1170, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1171
  %19 = bitcast { %Client.0*, %error.0 }* %sret.formal.0 to i8**, !dbg !1232
  store i8* %call.10, i8** %19, align 8, !dbg !1232
  %tmp.8.sroa.2.0.cast.289.sroa_idx145 = getelementptr inbounds { %Client.0*, %error.0 }, { %Client.0*, %error.0 }* %sret.formal.0, i64 0, i32 1, !dbg !1232
  %tmp.8.sroa.2.0.cast.289.sroa_cast = bitcast %error.0* %tmp.8.sroa.2.0.cast.289.sroa_idx145 to i64*, !dbg !1232
  store i64 %call.11.fca.0.extract, i64* %tmp.8.sroa.2.0.cast.289.sroa_cast, align 8, !dbg !1232
  %tmp.8.sroa.3.0.cast.289.sroa_idx146 = getelementptr inbounds { %Client.0*, %error.0 }, { %Client.0*, %error.0 }* %sret.formal.0, i64 0, i32 1, i32 1, !dbg !1232
  %tmp.8.sroa.3.0.cast.289.sroa_cast = bitcast i8** %tmp.8.sroa.3.0.cast.289.sroa_idx146 to i64*, !dbg !1232
  store i64 %call.11.fca.1.extract, i64* %tmp.8.sroa.3.0.cast.289.sroa_cast, align 8, !dbg !1232
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %serverIP.0.sroa_cast), !dbg !1232
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %netIP.0.sroa_cast), !dbg !1232
  ret void, !dbg !1232
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1) #1

declare void @github_com_twitchyliquid64_subnet_subnet_conn.TLSConfig({ %Config.0*, %error.0 }*, i8*, i64, i64, i64, i64, { i8*, i64 }*) local_unnamed_addr #0

declare void @net.ParseCIDR({ %IP.0, %IPNet.0*, %error.0 }*, i8*, i64, i64) local_unnamed_addr #0

declare { i64, i64 } @runtime.concatstring2(i8*, i8*, [2 x { i8*, i64 }]*) local_unnamed_addr #0

declare { i64, i64 } @errors.New(i8*, i64, i64) local_unnamed_addr #0

declare void @github_com_twitchyliquid64_subnet_vendor_github_com_songgao_water.NewTUN({ %Interface.0*, %error.0 }*, i8*, i64, i64) local_unnamed_addr #0

declare { i64, i64 } @github_com_twitchyliquid64_subnet_vendor_github_com_songgao_water.Interface.Name(i8*, %Interface.0*) local_unnamed_addr #0

declare i8* @runtime.newobject(i8*, %_type.0*) local_unnamed_addr #0

declare void @runtime.typedmemmove(i8*, %_type.0*, i8*, i8*) local_unnamed_addr #0

declare void @log.Printf(i8*, i64, i64, %IPST.6*) local_unnamed_addr #0

declare {}* @runtime.makechan(i8*, %_type.0*, i64) local_unnamed_addr #0

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64, i8* nocapture) #1

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

declare { i64, i64 } @runtime.concatstring3(i8*, i8*, [3 x { i8*, i64 }]*) local_unnamed_addr #0

declare void @net.Dial({ %Conn.0, %error.0 }*, i8*, i64, i64, i64, i64) local_unnamed_addr #0

declare void @runtime.assertI2T(i8*, %_type.0*, %_type.0*, %_type.0*) local_unnamed_addr #0

declare { i64, i64 } @net.TCPConn.SetKeepAlivePeriod(i8*, %TCPConn.0*, i64) local_unnamed_addr #0

declare { i64, i64 } @net.TCPConn.SetKeepAlive(i8*, %TCPConn.0*, i8) local_unnamed_addr #0

; Function Attrs: noreturn
declare void @__go_runtime_error(i8*, i32) local_unnamed_addr #3

declare %Conn.1* @crypto_tls.Client(i8*, i64, i64, %Config.0*) local_unnamed_addr #0

declare void @runtime.writebarrierptr(i8*, i8*, i8*) local_unnamed_addr #0

declare { i64, i64 } @crypto_tls.Conn.Handshake(i8*, %Conn.1*) local_unnamed_addr #0

define { i64, i64 } @command_line_arguments.SetDevIP(i8* nest nocapture readnone %nest.10, i64 %iName.chunk0, i64 %iName.chunk1, %IP.0* byval %localAddr, %IPNet.0* readonly %addr, i8 zeroext %debug) #0 !dbg !1233 {
entry:
  %tmp.71 = alloca %IPST.6, align 8
  call void @llvm.dbg.declare(metadata %IP.0* %localAddr, metadata !1237, metadata !DIExpression()), !dbg !1238
  %args = alloca %IPST.5, align 8
  %tmpv.308 = alloca %IP.0, align 8
  %tmpv.312 = alloca { i8*, i64 }, align 8
  %tmpv.314 = alloca { i8*, i64 }, align 8
  %tmpv.316 = alloca { i8*, i64 }, align 8
  %tmpv.317 = alloca [3 x %IPST.11], align 8
  %sret.actual.59 = alloca %IPST.5, align 8
  call void @llvm.dbg.value(metadata i64 %iName.chunk0, metadata !1239, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1240
  call void @llvm.dbg.value(metadata i64 %iName.chunk1, metadata !1239, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1240
  call void @llvm.dbg.value(metadata %IPNet.0* %addr, metadata !1241, metadata !DIExpression()), !dbg !1242
  call void @llvm.dbg.value(metadata i8 %debug, metadata !1243, metadata !DIExpression()), !dbg !1244
  %0 = bitcast %IPST.5* %args to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0)
  %call.98 = call { i64, i64 } @net.IP.String(i8* nest undef, %IP.0* nonnull %localAddr), !dbg !1245
  %icmp.123 = icmp eq %IPNet.0* %addr, null, !dbg !1247
  br i1 %icmp.123, label %then.129, label %else.129

then.129:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1247
  unreachable

else.129:                                         ; preds = %entry
  %call.98.fca.1.extract = extractvalue { i64, i64 } %call.98, 1, !dbg !1245
  %call.98.fca.0.extract = extractvalue { i64, i64 } %call.98, 0, !dbg !1245
  %field.343 = getelementptr inbounds %IPNet.0, %IPNet.0* %addr, i64 0, i32 1, !dbg !1247
  %cast.1067 = bitcast %IP.0* %tmpv.308 to i8*
  %cast.1068 = bitcast %IPMask.0* %field.343 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1067, i8* nonnull align 8 %cast.1068, i64 24, i1 false)
  %call.99 = call { i64, i64 } @net.IP.String(i8* nest undef, %IP.0* nonnull %tmpv.308), !dbg !1248
  %call.99.fca.0.extract = extractvalue { i64, i64 } %call.99, 0, !dbg !1248
  %call.99.fca.1.extract = extractvalue { i64, i64 } %call.99, 1, !dbg !1248
  %call.100 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !1249
  %iName.addr.sroa.0.0.cast.1073.sroa_cast = bitcast { i8*, i64 }* %tmpv.312 to i64*
  store i64 %iName.chunk0, i64* %iName.addr.sroa.0.0.cast.1073.sroa_cast, align 8
  %iName.addr.sroa.2.0.cast.1073.sroa_idx14 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.312, i64 0, i32 1
  store i64 %iName.chunk1, i64* %iName.addr.sroa.2.0.cast.1073.sroa_idx14, align 8
  %cast.1076 = bitcast { i8*, i64 }* %tmpv.312 to i8*, !dbg !1249
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.100, i8* nonnull %cast.1076), !dbg !1249
  %call.101 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !1249
  %tmpv.307.sroa.0.0.cast.1078.sroa_cast = bitcast { i8*, i64 }* %tmpv.314 to i64*
  store i64 %call.98.fca.0.extract, i64* %tmpv.307.sroa.0.0.cast.1078.sroa_cast, align 8
  %tmpv.307.sroa.2.0.cast.1078.sroa_idx9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.314, i64 0, i32 1
  store i64 %call.98.fca.1.extract, i64* %tmpv.307.sroa.2.0.cast.1078.sroa_idx9, align 8
  %cast.1081 = bitcast { i8*, i64 }* %tmpv.314 to i8*, !dbg !1249
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.101, i8* nonnull %cast.1081), !dbg !1249
  %call.102 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !1249
  %tmpv.310.sroa.0.0.cast.1083.sroa_cast = bitcast { i8*, i64 }* %tmpv.316 to i64*
  store i64 %call.99.fca.0.extract, i64* %tmpv.310.sroa.0.0.cast.1083.sroa_cast, align 8
  %tmpv.310.sroa.2.0.cast.1083.sroa_idx7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.316, i64 0, i32 1
  store i64 %call.99.fca.1.extract, i64* %tmpv.310.sroa.2.0.cast.1083.sroa_idx7, align 8
  %cast.1086 = bitcast { i8*, i64 }* %tmpv.316 to i8*, !dbg !1249
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.102, i8* nonnull %cast.1086), !dbg !1249
  %tmp.68.sroa.0.0.cast.1090.sroa_idx = getelementptr inbounds [3 x %IPST.11], [3 x %IPST.11]* %tmpv.317, i64 0, i64 0, i32 0, !dbg !1249
  store %_type.0* @string..d, %_type.0** %tmp.68.sroa.0.0.cast.1090.sroa_idx, align 8, !dbg !1249
  %tmp.68.sroa.2.0.cast.1090.sroa_idx15 = getelementptr inbounds [3 x %IPST.11], [3 x %IPST.11]* %tmpv.317, i64 0, i64 0, i32 1, !dbg !1249
  store i8* %call.100, i8** %tmp.68.sroa.2.0.cast.1090.sroa_idx15, align 8, !dbg !1249
  %tmp.69.sroa.0.0.cast.1092.sroa_idx = getelementptr inbounds [3 x %IPST.11], [3 x %IPST.11]* %tmpv.317, i64 0, i64 1, i32 0, !dbg !1249
  store %_type.0* @string..d, %_type.0** %tmp.69.sroa.0.0.cast.1092.sroa_idx, align 8, !dbg !1249
  %tmp.69.sroa.2.0.cast.1092.sroa_idx16 = getelementptr inbounds [3 x %IPST.11], [3 x %IPST.11]* %tmpv.317, i64 0, i64 1, i32 1, !dbg !1249
  store i8* %call.101, i8** %tmp.69.sroa.2.0.cast.1092.sroa_idx16, align 8, !dbg !1249
  %tmp.70.sroa.0.0.cast.1094.sroa_idx = getelementptr inbounds [3 x %IPST.11], [3 x %IPST.11]* %tmpv.317, i64 0, i64 2, i32 0, !dbg !1249
  store %_type.0* @string..d, %_type.0** %tmp.70.sroa.0.0.cast.1094.sroa_idx, align 8, !dbg !1249
  %tmp.70.sroa.2.0.cast.1094.sroa_idx17 = getelementptr inbounds [3 x %IPST.11], [3 x %IPST.11]* %tmpv.317, i64 0, i64 2, i32 1, !dbg !1249
  store i8* %call.102, i8** %tmp.70.sroa.2.0.cast.1094.sroa_idx17, align 8, !dbg !1249
  %field.350 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.71, i64 0, i32 0, !dbg !1249
  %cast.1097 = getelementptr inbounds [3 x %IPST.11], [3 x %IPST.11]* %tmpv.317, i64 0, i64 0, !dbg !1249
  store %IPST.11* %cast.1097, %IPST.11** %field.350, align 8, !dbg !1249
  %field.351 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.71, i64 0, i32 1, !dbg !1249
  store i64 3, i64* %field.351, align 8, !dbg !1249
  %field.352 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.71, i64 0, i32 2, !dbg !1249
  store i64 3, i64* %field.352, align 8, !dbg !1249
  %call.103 = call { i64, i64 } @fmt.Sprintf(i8* nest undef, i64 ptrtoint ([17 x i8]* @const.153 to i64), i64 16, %IPST.6* byval nonnull %tmp.71), !dbg !1249
  %call.103.fca.0.extract = extractvalue { i64, i64 } %call.103, 0, !dbg !1249
  %call.103.fca.1.extract = extractvalue { i64, i64 } %call.103, 1, !dbg !1249
  call void @llvm.dbg.value(metadata i64 %call.103.fca.0.extract, metadata !1250, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1251
  call void @llvm.dbg.value(metadata i64 %call.103.fca.1.extract, metadata !1250, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1251
  call void @strings.Split(%IPST.5* nonnull sret %sret.actual.59, i8* nest undef, i64 %call.103.fca.0.extract, i64 %call.103.fca.1.extract, i64 ptrtoint ([2 x i8]* @const.149 to i64), i64 1), !dbg !1252
  %cast.1106 = bitcast %IPST.5* %sret.actual.59 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %cast.1106, i64 24, i1 false)
  call void @llvm.dbg.value(metadata %IPST.5* %args, metadata !1253, metadata !DIExpression(DW_OP_deref)), !dbg !1254
  %call.104 = call fastcc { i64, i64 } @command_line_arguments.commandExec(i64 ptrtoint ([9 x i8]* @const.155 to i64), i64 8, %IPST.5* byval nonnull %args, i8 zeroext %debug), !dbg !1255
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0), !dbg !1256
  ret { i64, i64 } %call.104, !dbg !1256
}

declare { i64, i64 } @net.IP.String(i8*, %IP.0*) local_unnamed_addr #0

declare i8 @runtime.eqstring(i8*, i64, i64, i64, i64) local_unnamed_addr #0

define void @command_line_arguments.GetNetGateway({ { i8*, i64 }, { i8*, i64 }, %error.0 }* nocapture sret %sret.formal.1, i8* nest nocapture readnone %nest.14) #0 personality i32 (i32, i32, i64, i8*, i8*)* @__gccgo_personality_v0 !dbg !1257 {
entry:
  %tmp.91 = alloca { i8*, i64, i64 }, align 8
  %tmp.90 = alloca { i8*, i64, i64 }, align 8
  %dev = alloca { i8*, i64 }, align 8
  %tmpv.348 = alloca i8, align 1
  %tmpv.349 = alloca %IP.0, align 8
  %sret.actual.74 = alloca { %File.0*, %error.0 }, align 8
  %tmpv.356 = alloca { %File.0* }, align 8
  %line = alloca { i8*, i64, i64 }, align 8
  %iface = alloca { i8*, i64 }, align 8
  %sret.actual.75 = alloca { { i8*, i64, i64 }, i8, %error.0 }, align 8
  %tmpv.369 = alloca [8 x { i8*, i64 }], align 8
  %tmpv.377 = alloca { i8*, i64 }, align 8
  %tmpv.378 = alloca %IPST.5, align 8
  %sret.actual.78 = alloca %IPST.7, align 8
  %tmpv.397178 = alloca i64, align 8
  %sret.actual.79 = alloca %IPST.7, align 8
  %tmpv.399179 = alloca i64, align 8
  %sret.actual.80 = alloca %IPST.7, align 8
  %sret.actual.85 = alloca %IP.0, align 8
  %dev.0.sroa_cast = bitcast { i8*, i64 }* %dev to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %dev.0.sroa_cast)
  store i8 0, i8* %tmpv.348, align 1
  call void @llvm.dbg.value(metadata i64 0, metadata !1265, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1266
  call void @llvm.dbg.value(metadata i64 0, metadata !1265, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1266
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %dev.0.sroa_cast, i8 0, i64 16, i1 false)
  call void @llvm.dbg.value(metadata i64 0, metadata !1267, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1268
  call void @llvm.dbg.value(metadata i64 0, metadata !1267, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1268
  %cast.1255 = bitcast %IP.0* %tmpv.349 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %cast.1255, i8 0, i64 24, i1 false)
  invoke void @os.Open({ %File.0*, %error.0 }* nonnull sret %sret.actual.74, i8* nest undef, i64 ptrtoint ([16 x i8]* @const.166 to i64), i64 15)
          to label %cont.106 unwind label %pad.6.loopexit.split-lp.loopexit.split-lp, !dbg !1269

finally.3:                                        ; preds = %then.130, %then.131, %cont.110, %cont.144, %pad.6, %catchpad.3
  %err.sroa.0.1 = phi i64 [ 0, %catchpad.3 ], [ %tmpv.350.sroa.3.sroa.0.0.copyload131, %then.130 ], [ %7, %then.131 ], [ %call.124.fca.0.extract, %cont.110 ], [ 0, %pad.6 ], [ 0, %cont.144 ], !dbg !1271
  %err.sroa.13.1 = phi i64 [ %err.sroa.13.2, %catchpad.3 ], [ %tmpv.350.sroa.3.sroa.3.0.copyload133, %then.130 ], [ %tmpv.358.sroa.4.sroa.3.0.copyload105177, %then.131 ], [ %call.124.fca.1.extract, %cont.110 ], [ %err.sroa.13.2, %pad.6 ], [ 0, %cont.144 ], !dbg !1271
  %gw.sroa.0.1 = phi i64 [ 0, %catchpad.3 ], [ 0, %then.130 ], [ 0, %then.131 ], [ 0, %cont.110 ], [ 0, %pad.6 ], [ %call.139.fca.0.extract, %cont.144 ]
  %gw.sroa.10.1 = phi i64 [ 0, %catchpad.3 ], [ 0, %then.130 ], [ 0, %then.131 ], [ 0, %cont.110 ], [ 0, %pad.6 ], [ %call.139.fca.1.extract, %cont.144 ]
  %ehtmp.3.sroa.0.0 = phi i8* [ %ex2.3.fca.0.extract, %catchpad.3 ], [ undef, %then.130 ], [ undef, %then.131 ], [ undef, %cont.110 ], [ undef, %pad.6 ], [ undef, %cont.144 ]
  %ehtmp.3.sroa.2.0 = phi i32 [ %ex2.3.fca.1.extract, %catchpad.3 ], [ undef, %then.130 ], [ undef, %then.131 ], [ undef, %cont.110 ], [ undef, %pad.6 ], [ undef, %cont.144 ]
  %finvar.3.0 = phi i8 [ 0, %catchpad.3 ], [ 1, %then.130 ], [ 1, %then.131 ], [ 1, %cont.110 ], [ 1, %pad.6 ], [ 1, %cont.144 ]
  call void @llvm.dbg.value(metadata i64 %gw.sroa.10.1, metadata !1265, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1266
  call void @llvm.dbg.value(metadata i64 %gw.sroa.0.1, metadata !1265, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1266
  call void @llvm.dbg.value(metadata i64 %err.sroa.13.1, metadata !1267, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1268
  call void @llvm.dbg.value(metadata i64 %err.sroa.0.1, metadata !1267, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1268
  br label %finish.3

pad.6.loopexit:                                   ; preds = %then.142, %then.136, %then.137, %then.139, %then.141, %else.140, %label.1
  %lpad.loopexit = landingpad { i8*, i32 }
          catch i8* null
  br label %pad.6

pad.6.loopexit.split-lp.loopexit:                 ; preds = %cont.129, %then.147, %cont.127, %fallthrough.146, %then.146, %then.145, %then.144, %then.143, %cont.112, %cont.111, %else.132, %label.0
  %lpad.loopexit213 = landingpad { i8*, i32 }
          catch i8* null
  br label %pad.6

pad.6.loopexit.split-lp.loopexit.split-lp:        ; preds = %cont.143, %cont.142, %cont.141, %else.152, %cont.138, %else.151, %cont.135, %else.150, %cont.132, %else.149, %then.132, %cont.107, %else.130, %entry
  %err.sroa.13.2.ph.ph = phi i64 [ %tmpv.350.sroa.3.sroa.3.0.copyload133, %then.132 ], [ %tmpv.350.sroa.3.sroa.3.0.copyload133, %cont.143 ], [ %tmpv.350.sroa.3.sroa.3.0.copyload133, %cont.142 ], [ %tmpv.350.sroa.3.sroa.3.0.copyload133, %cont.141 ], [ %tmpv.350.sroa.3.sroa.3.0.copyload133, %else.152 ], [ %tmpv.350.sroa.3.sroa.3.0.copyload133, %cont.138 ], [ %tmpv.350.sroa.3.sroa.3.0.copyload133, %else.151 ], [ %tmpv.350.sroa.3.sroa.3.0.copyload133, %cont.135 ], [ %tmpv.350.sroa.3.sroa.3.0.copyload133, %else.150 ], [ %tmpv.350.sroa.3.sroa.3.0.copyload133, %cont.132 ], [ %tmpv.350.sroa.3.sroa.3.0.copyload133, %else.149 ], [ %tmpv.350.sroa.3.sroa.3.0.copyload133, %cont.107 ], [ %tmpv.350.sroa.3.sroa.3.0.copyload133, %else.130 ], [ 0, %entry ]
  %lpad.loopexit.split-lp214 = landingpad { i8*, i32 }
          catch i8* null
  br label %pad.6

pad.6:                                            ; preds = %pad.6.loopexit.split-lp.loopexit, %pad.6.loopexit.split-lp.loopexit.split-lp, %pad.6.loopexit
  %err.sroa.13.2 = phi i64 [ %tmpv.350.sroa.3.sroa.3.0.copyload133, %pad.6.loopexit ], [ %tmpv.350.sroa.3.sroa.3.0.copyload133, %pad.6.loopexit.split-lp.loopexit ], [ %err.sroa.13.2.ph.ph, %pad.6.loopexit.split-lp.loopexit.split-lp ]
  call void @llvm.dbg.value(metadata i64 %err.sroa.13.2, metadata !1267, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1268
  call void @llvm.dbg.value(metadata i64 0, metadata !1267, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1268
  invoke void @runtime.checkdefer(i8* nest undef, i8* nonnull %tmpv.348)
          to label %finally.3 unwind label %catchpad.3, !dbg !1272

cont.106:                                         ; preds = %entry
  %tmpv.350.sroa.0.0.cast.1261.sroa_idx = getelementptr inbounds { %File.0*, %error.0 }, { %File.0*, %error.0 }* %sret.actual.74, i64 0, i32 0, !dbg !1269
  %tmpv.350.sroa.0.0.copyload106 = load %File.0*, %File.0** %tmpv.350.sroa.0.0.cast.1261.sroa_idx, align 8, !dbg !1269
  %tmpv.350.sroa.3.sroa.0.0.tmpv.350.sroa.3.0.cast.1261.sroa_cast.sroa_idx = getelementptr inbounds { %File.0*, %error.0 }, { %File.0*, %error.0 }* %sret.actual.74, i64 0, i32 1, !dbg !1269
  %tmpv.350.sroa.3.sroa.0.0.tmpv.350.sroa.3.0.cast.1261.sroa_cast.sroa_cast = bitcast %error.0* %tmpv.350.sroa.3.sroa.0.0.tmpv.350.sroa.3.0.cast.1261.sroa_cast.sroa_idx to i64*, !dbg !1269
  %tmpv.350.sroa.3.sroa.0.0.copyload131 = load i64, i64* %tmpv.350.sroa.3.sroa.0.0.tmpv.350.sroa.3.0.cast.1261.sroa_cast.sroa_cast, align 8, !dbg !1269
  %tmpv.350.sroa.3.sroa.3.0.tmpv.350.sroa.3.0.cast.1261.sroa_cast.sroa_idx132 = getelementptr inbounds { %File.0*, %error.0 }, { %File.0*, %error.0 }* %sret.actual.74, i64 0, i32 1, i32 1, !dbg !1269
  %tmpv.350.sroa.3.sroa.3.0.tmpv.350.sroa.3.0.cast.1261.sroa_cast.sroa_cast = bitcast i8** %tmpv.350.sroa.3.sroa.3.0.tmpv.350.sroa.3.0.cast.1261.sroa_cast.sroa_idx132 to i64*, !dbg !1269
  %tmpv.350.sroa.3.sroa.3.0.copyload133 = load i64, i64* %tmpv.350.sroa.3.sroa.3.0.tmpv.350.sroa.3.0.cast.1261.sroa_cast.sroa_cast, align 8, !dbg !1269
  call void @llvm.dbg.value(metadata %File.0* %tmpv.350.sroa.0.0.copyload106, metadata !1273, metadata !DIExpression()), !dbg !1322
  call void @llvm.dbg.value(metadata i64 %tmpv.350.sroa.3.sroa.0.0.copyload131, metadata !1267, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1268
  call void @llvm.dbg.value(metadata i64 %tmpv.350.sroa.3.sroa.3.0.copyload133, metadata !1267, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1268
  %icmp.124 = icmp eq i64 %tmpv.350.sroa.3.sroa.0.0.copyload131, 0, !dbg !1323
  br i1 %icmp.124, label %else.130, label %then.130

then.130:                                         ; preds = %cont.106
  call void @llvm.dbg.value(metadata i64 0, metadata !1265, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1266
  call void @llvm.dbg.value(metadata i64 0, metadata !1265, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1266
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %dev.0.sroa_cast, i8 0, i64 16, i1 false), !dbg !1324
  call void @llvm.dbg.value(metadata i64 %tmpv.350.sroa.3.sroa.0.0.copyload131, metadata !1267, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1268
  call void @llvm.dbg.value(metadata i64 %tmpv.350.sroa.3.sroa.3.0.copyload133, metadata !1267, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1268
  br label %finally.3

else.130:                                         ; preds = %cont.106
  %cast.1287 = bitcast { %File.0* }* %tmpv.356 to i8*
  %field.384 = getelementptr inbounds { %File.0* }, { %File.0* }* %tmpv.356, i64 0, i32 0, !dbg !1325
  store %File.0* %tmpv.350.sroa.0.0.copyload106, %File.0** %field.384, align 8, !dbg !1325
  invoke void @runtime.deferproc(i8* nest undef, i8* nonnull %tmpv.348, %__go_descriptor.63* bitcast (i8 (i8*, { %File.0* }*)* @command_line_arguments.command_line_arguments..thunk7 to %__go_descriptor.63*), i8* nonnull %cast.1287)
          to label %cont.107 unwind label %pad.6.loopexit.split-lp.loopexit.split-lp, !dbg !1325

cont.107:                                         ; preds = %else.130
  %0 = ptrtoint %File.0* %tmpv.350.sroa.0.0.copyload106 to i64, !dbg !1326
  %call.123 = invoke %Reader.0* @bufio.NewReader(i8* nest undef, i64 ptrtoint ({ %_type.0*, void ({ i64, %error.0 }*, i8*, %File.0*, { i8*, i64, i64 }*)* }* @pimt..interface.4Read.0func.8.6.7uint8.9.8int.3error.9.5..os.File to i64), i64 %0)
          to label %label.0.preheader unwind label %pad.6.loopexit.split-lp.loopexit.split-lp, !dbg !1327

label.0.preheader:                                ; preds = %cont.107
  %1 = bitcast { i8*, i64, i64 }* %line to i8*
  %iface.0.sroa_cast = bitcast { i8*, i64 }* %iface to i8*
  %tmpv.358.sroa.0.0.cast.1299.sroa_cast = bitcast { { i8*, i64, i64 }, i8, %error.0 }* %sret.actual.75 to i8*
  %tmpv.358.sroa.3.0.cast.1299.sroa_idx = getelementptr inbounds { { i8*, i64, i64 }, i8, %error.0 }, { { i8*, i64, i64 }, i8, %error.0 }* %sret.actual.75, i64 0, i32 1
  %tmpv.358.sroa.4.sroa.2.0.tmpv.358.sroa.4.0.cast.1299.sroa_raw_idx.sroa_idx102 = getelementptr inbounds { { i8*, i64, i64 }, i8, %error.0 }, { { i8*, i64, i64 }, i8, %error.0 }* %sret.actual.75, i64 0, i32 2, i32 0
  %tmpv.358.sroa.4.sroa.3.0.tmpv.358.sroa.4.0.cast.1299.sroa_raw_idx.sroa_idx104 = getelementptr inbounds { { i8*, i64, i64 }, i8, %error.0 }, { { i8*, i64, i64 }, i8, %error.0 }* %sret.actual.75, i64 0, i32 2, i32 1
  %2 = bitcast i8** %tmpv.358.sroa.4.sroa.3.0.tmpv.358.sroa.4.0.cast.1299.sroa_raw_idx.sroa_idx104 to i64*
  %cast.1357 = bitcast [8 x { i8*, i64 }]* %tmpv.369 to i8*
  %cast.1360 = getelementptr inbounds [8 x { i8*, i64 }], [8 x { i8*, i64 }]* %tmpv.369, i64 0, i64 0
  %sret.actual.77.sroa.0.0.cast.1366.sroa_cast = bitcast { i8*, i64 }* %tmpv.377 to i64*
  %sret.actual.77.sroa.2.0.cast.1366.sroa_idx40 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.377, i64 0, i32 1
  %tokens.sroa.0.0.cast.1368.sroa_idx = getelementptr inbounds %IPST.5, %IPST.5* %tmpv.378, i64 0, i32 0
  %tokens.sroa.9.0.cast.1368.sroa_idx79 = getelementptr inbounds %IPST.5, %IPST.5* %tmpv.378, i64 0, i32 1
  %tokens.sroa.13.0.cast.1368.sroa_idx85 = getelementptr inbounds %IPST.5, %IPST.5* %tmpv.378, i64 0, i32 2
  %cast.1370 = bitcast %IPST.5* %tmpv.378 to %IPST.7*
  %tmpv.384.sroa.0.0.cast.1375.sroa_idx = bitcast %IPST.7* %sret.actual.78 to { i8*, i64 }**
  %3 = getelementptr inbounds %IPST.7, %IPST.7* %sret.actual.78, i64 0, i32 1
  %4 = getelementptr inbounds %IPST.7, %IPST.7* %sret.actual.78, i64 0, i32 2
  %cast.1384 = bitcast { i8*, i64 }* %tmpv.377 to i8*
  %cast.1399 = bitcast %IPST.7* %sret.actual.79 to { i8*, i64, i64 }*
  %5 = bitcast { i8*, i64, i64 }* %tmp.90 to i64**
  %field.423 = getelementptr inbounds { i8*, i64, i64 }, { i8*, i64, i64 }* %tmp.90, i64 0, i32 1
  %field.424 = getelementptr inbounds { i8*, i64, i64 }, { i8*, i64, i64 }* %tmp.90, i64 0, i32 2
  %cast.1405 = bitcast %IPST.7* %sret.actual.80 to { i8*, i64, i64 }*
  %6 = bitcast { i8*, i64, i64 }* %tmp.91 to i64**
  %field.426 = getelementptr inbounds { i8*, i64, i64 }, { i8*, i64, i64 }* %tmp.91, i64 0, i32 1
  %field.427 = getelementptr inbounds { i8*, i64, i64 }, { i8*, i64, i64 }* %tmp.91, i64 0, i32 2
  %line247 = bitcast { i8*, i64, i64 }* %line to i8*
  br label %label.0

label.0:                                          ; preds = %label.0.preheader, %else.148
  %tmpv.388.0 = phi { i8*, i64 }* [ %tmpv.388.1, %else.148 ], [ undef, %label.0.preheader ]
  %tmpv.387.0 = phi i64 [ %tmpv.387.1, %else.148 ], [ undef, %label.0.preheader ]
  %tmpv.383.sroa.0.0 = phi { i8*, i64 }* [ %tmpv.383.sroa.0.1, %else.148 ], [ undef, %label.0.preheader ]
  %tmpv.383.sroa.2.0 = phi i64 [ %tmpv.383.sroa.2.1, %else.148 ], [ undef, %label.0.preheader ]
  %tmpv.383.sroa.3.0 = phi i64 [ %tmpv.383.sroa.3.1, %else.148 ], [ undef, %label.0.preheader ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %iface.0.sroa_cast)
  invoke void @bufio.Reader.ReadLine({ { i8*, i64, i64 }, i8, %error.0 }* nonnull sret %sret.actual.75, i8* nest undef, %Reader.0* %call.123)
          to label %cont.109 unwind label %pad.6.loopexit.split-lp.loopexit, !dbg !1328

cont.109:                                         ; preds = %label.0
  %tmpv.358.sroa.3.0.copyload60 = load i8, i8* %tmpv.358.sroa.3.0.cast.1299.sroa_idx, align 8, !dbg !1328
  %tmpv.358.sroa.4.sroa.2.0.copyload103 = load { %_type.0*, { i64, i64 } (i8*, i8*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)* }** %tmpv.358.sroa.4.sroa.2.0.tmpv.358.sroa.4.0.cast.1299.sroa_raw_idx.sroa_idx102, align 8, !dbg !1328
  %tmpv.358.sroa.4.sroa.3.0.copyload105177 = load i64, i64* %2, align 8, !dbg !1328
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %line247, i8* nonnull align 8 %tmpv.358.sroa.0.0.cast.1299.sroa_cast, i64 24, i1 false)
  call void @llvm.dbg.value(metadata i8 %tmpv.358.sroa.3.0.copyload60, metadata !1330, metadata !DIExpression()), !dbg !1331
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.358.sroa.4.sroa.2.0.copyload103, metadata !1332, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1331
  call void @llvm.dbg.value(metadata i8** %tmpv.358.sroa.4.sroa.3.0.tmpv.358.sroa.4.0.cast.1299.sroa_raw_idx.sroa_idx104, metadata !1332, metadata !DIExpression(DW_OP_deref, DW_OP_LLVM_fragment, 64, 64)), !dbg !1331
  %icmp.125 = icmp eq { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.358.sroa.4.sroa.2.0.copyload103, null, !dbg !1333
  br i1 %icmp.125, label %else.131, label %then.131

then.131:                                         ; preds = %cont.109
  call void @llvm.dbg.value(metadata i64 0, metadata !1265, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1266
  call void @llvm.dbg.value(metadata i64 0, metadata !1265, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1266
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %dev.0.sroa_cast, i8 0, i64 16, i1 false), !dbg !1334
  %7 = ptrtoint { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.358.sroa.4.sroa.2.0.copyload103 to i64, !dbg !1334
  call void @llvm.dbg.value(metadata i64 %7, metadata !1267, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1268
  call void @llvm.dbg.value(metadata i64 %tmpv.358.sroa.4.sroa.3.0.copyload105177, metadata !1267, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1268
  br label %finally.3

else.131:                                         ; preds = %cont.109
  %8 = and i8 %tmpv.358.sroa.3.0.copyload60, 1, !dbg !1335
  %trunc.132 = icmp eq i8 %8, 0, !dbg !1335
  br i1 %trunc.132, label %else.132, label %then.132

then.132:                                         ; preds = %else.131
  %call.124 = invoke { i64, i64 } @errors.New(i8* nest undef, i64 ptrtoint ([27 x i8]* @const.170 to i64), i64 26)
          to label %cont.110 unwind label %pad.6.loopexit.split-lp.loopexit.split-lp, !dbg !1336

else.132:                                         ; preds = %else.131
  %call.125 = invoke %Buffer.0* @bytes.NewBuffer(i8* nest undef, { i8*, i64, i64 }* byval nonnull %line)
          to label %cont.111 unwind label %pad.6.loopexit.split-lp.loopexit, !dbg !1337

cont.110:                                         ; preds = %then.132
  %call.124.fca.0.extract = extractvalue { i64, i64 } %call.124, 0, !dbg !1336
  %call.124.fca.1.extract = extractvalue { i64, i64 } %call.124, 1, !dbg !1336
  call void @llvm.dbg.value(metadata i64 0, metadata !1265, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1266
  call void @llvm.dbg.value(metadata i64 0, metadata !1265, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1266
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %dev.0.sroa_cast, i8 0, i64 16, i1 false), !dbg !1338
  call void @llvm.dbg.value(metadata i64 %call.124.fca.0.extract, metadata !1267, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1268
  call void @llvm.dbg.value(metadata i64 %call.124.fca.1.extract, metadata !1267, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1268
  br label %finally.3

cont.111:                                         ; preds = %else.132
  call void @llvm.dbg.value(metadata %Buffer.0* %call.125, metadata !1339, metadata !DIExpression()), !dbg !1341
  %9 = ptrtoint %Buffer.0* %call.125 to i64, !dbg !1342
  %call.126 = invoke %Scanner.0* @bufio.NewScanner(i8* nest undef, i64 ptrtoint ({ %_type.0*, void ({ i64, %error.0 }*, i8*, %Buffer.0*, { i8*, i64, i64 }*)* }* @pimt..interface.4Read.0func.8.6.7uint8.9.8int.3error.9.5..bytes.Buffer to i64), i64 %9)
          to label %cont.112 unwind label %pad.6.loopexit.split-lp.loopexit, !dbg !1343

cont.112:                                         ; preds = %cont.111
  call void @llvm.dbg.value(metadata %Scanner.0* %call.126, metadata !1344, metadata !DIExpression()), !dbg !1371
  invoke void @bufio.Scanner.Split(i8* nest undef, %Scanner.0* %call.126, %__go_descriptor.18* bitcast (%functionDescriptor.0* @bufio.ScanWords..f to %__go_descriptor.18*))
          to label %cont.113 unwind label %pad.6.loopexit.split-lp.loopexit, !dbg !1372

cont.113:                                         ; preds = %cont.112
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %cast.1357, i8 0, i64 128, i1 false)
  call void @llvm.dbg.value(metadata { i8*, i64 }* %cast.1360, metadata !1373, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1374
  call void @llvm.dbg.value(metadata i64 0, metadata !1373, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1374
  call void @llvm.dbg.value(metadata i64 8, metadata !1373, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 64)), !dbg !1374
  br label %label.1

label.1:                                          ; preds = %fallthrough.140, %cont.113
  %tmpv.388.1 = phi { i8*, i64 }* [ %tmpv.388.0, %cont.113 ], [ %tmpv.388.2, %fallthrough.140 ]
  %tmpv.387.1 = phi i64 [ %tmpv.387.0, %cont.113 ], [ %tmpv.387.2, %fallthrough.140 ]
  %tokens.sroa.0.0 = phi { i8*, i64 }* [ %cast.1360, %cont.113 ], [ %tokens.sroa.0.0.copyload76, %fallthrough.140 ]
  %tokens.sroa.9.0 = phi i64 [ 0, %cont.113 ], [ %tokens.sroa.9.0.copyload82, %fallthrough.140 ]
  %tokens.sroa.13.0 = phi i64 [ 8, %cont.113 ], [ %tokens.sroa.13.0.copyload88, %fallthrough.140 ]
  %tmpv.383.sroa.0.1 = phi { i8*, i64 }* [ %tmpv.383.sroa.0.0, %cont.113 ], [ %tmpv.383.sroa.0.2, %fallthrough.140 ]
  %tmpv.383.sroa.2.1 = phi i64 [ %tmpv.383.sroa.2.0, %cont.113 ], [ %tmpv.383.sroa.2.2, %fallthrough.140 ]
  %tmpv.383.sroa.3.1 = phi i64 [ %tmpv.383.sroa.3.0, %cont.113 ], [ %tmpv.383.sroa.3.2, %fallthrough.140 ]
  call void @llvm.dbg.value(metadata i64 %tokens.sroa.13.0, metadata !1373, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 64)), !dbg !1374
  call void @llvm.dbg.value(metadata i64 %tokens.sroa.9.0, metadata !1373, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1374
  call void @llvm.dbg.value(metadata { i8*, i64 }* %tokens.sroa.0.0, metadata !1373, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1374
  %call.128 = invoke i8 @bufio.Scanner.Scan(i8* nest undef, %Scanner.0* %call.126)
          to label %cont.122 unwind label %pad.6.loopexit, !dbg !1375

cont.116:                                         ; preds = %then.142
  %call.127.fca.0.extract = extractvalue { i64, i64 } %call.127, 0, !dbg !1376
  %call.127.fca.1.extract = extractvalue { i64, i64 } %call.127, 1, !dbg !1376
  store i64 %call.127.fca.0.extract, i64* %sret.actual.77.sroa.0.0.cast.1366.sroa_cast, align 8
  store i64 %call.127.fca.1.extract, i64* %sret.actual.77.sroa.2.0.cast.1366.sroa_idx40, align 8
  store { i8*, i64 }* %tokens.sroa.0.0, { i8*, i64 }** %tokens.sroa.0.0.cast.1368.sroa_idx, align 8
  store i64 %tokens.sroa.9.0, i64* %tokens.sroa.9.0.cast.1368.sroa_idx79, align 8
  store i64 %tokens.sroa.13.0, i64* %tokens.sroa.13.0.cast.1368.sroa_idx85, align 8
  %add.2 = add i64 %tokens.sroa.9.0, 1, !dbg !1377
  %icmp.136 = icmp ugt i64 %add.2, %tokens.sroa.13.0, !dbg !1377
  br i1 %icmp.136, label %then.136, label %else.136

then.136:                                         ; preds = %cont.116
  invoke void @runtime.growslice(%IPST.7* nonnull sret %sret.actual.78, i8* nest undef, %_type.0* nonnull @string..d, %IPST.7* byval nonnull %cast.1370, i64 %add.2)
          to label %cont.117 unwind label %pad.6.loopexit, !dbg !1377

fallthrough.136:                                  ; preds = %else.136, %then.137, %cont.117
  %tmpv.383.sroa.0.2 = phi { i8*, i64 }* [ %tmpv.383.sroa.0.1, %cont.117 ], [ %tmpv.383.sroa.0.1, %then.137 ], [ %tokens.sroa.0.0, %else.136 ]
  %tmpv.383.sroa.2.2 = phi i64 [ %tmpv.383.sroa.2.1, %cont.117 ], [ %tmpv.383.sroa.2.1, %then.137 ], [ %add.2, %else.136 ]
  %tmpv.383.sroa.3.2 = phi i64 [ %tmpv.383.sroa.3.1, %cont.117 ], [ %tmpv.383.sroa.3.1, %then.137 ], [ %tokens.sroa.13.0, %else.136 ]
  %tmpv.384.sroa.0.0 = phi { i8*, i64 }* [ %tmpv.384.sroa.0.0.copyload, %cont.117 ], [ %tmpv.383.sroa.0.1, %then.137 ], [ %tokens.sroa.0.0, %else.136 ]
  %tmpv.384.sroa.3.0 = phi i64 [ %tmpv.384.sroa.3.0.copyload, %cont.117 ], [ %tmpv.383.sroa.2.1, %then.137 ], [ %add.2, %else.136 ]
  %tmpv.384.sroa.4.0 = phi i64 [ %tmpv.384.sroa.4.0.copyload, %cont.117 ], [ %tmpv.383.sroa.3.1, %then.137 ], [ %tokens.sroa.13.0, %else.136 ]
  store { i8*, i64 }* %tmpv.384.sroa.0.0, { i8*, i64 }** %tokens.sroa.0.0.cast.1368.sroa_idx, align 8, !dbg !1377
  store i64 %tmpv.384.sroa.3.0, i64* %tokens.sroa.9.0.cast.1368.sroa_idx79, align 8, !dbg !1377
  store i64 %tmpv.384.sroa.4.0, i64* %tokens.sroa.13.0.cast.1368.sroa_idx85, align 8, !dbg !1377
  %icmp.143 = icmp sge i64 %tokens.sroa.9.0, %tmpv.384.sroa.3.0, !dbg !1377
  %10 = icmp slt i64 %tokens.sroa.9.0, 0, !dbg !1377
  %ior.55 = or i1 %10, %icmp.143, !dbg !1377
  br i1 %ior.55, label %then.139, label %fallthrough.139

else.136:                                         ; preds = %cont.116
  %icmp.138 = icmp sgt i64 %add.2, %tokens.sroa.13.0, !dbg !1377
  %add.2.lobit181 = or i64 %add.2, %tokens.sroa.13.0, !dbg !1377
  %11 = icmp slt i64 %add.2.lobit181, 0, !dbg !1377
  %12 = or i1 %icmp.138, %11, !dbg !1377
  br i1 %12, label %then.137, label %fallthrough.136

cont.117:                                         ; preds = %then.136
  %tmpv.384.sroa.0.0.copyload = load { i8*, i64 }*, { i8*, i64 }** %tmpv.384.sroa.0.0.cast.1375.sroa_idx, align 8
  %tmpv.384.sroa.3.0.copyload = load i64, i64* %3, align 8
  %tmpv.384.sroa.4.0.copyload = load i64, i64* %4, align 8
  br label %fallthrough.136

then.137:                                         ; preds = %else.136
  invoke void @__go_runtime_error(i8* nest undef, i32 3)
          to label %fallthrough.136 unwind label %pad.6.loopexit, !dbg !1377

then.139:                                         ; preds = %fallthrough.136
  invoke void @__go_runtime_error(i8* nest undef, i32 0)
          to label %fallthrough.139 unwind label %pad.6.loopexit, !dbg !1377

fallthrough.139:                                  ; preds = %fallthrough.136, %then.139
  %tmpv.387.2 = phi i64 [ %tmpv.387.1, %then.139 ], [ %tokens.sroa.9.0, %fallthrough.136 ]
  %ptroff.3 = getelementptr { i8*, i64 }, { i8*, i64 }* %tmpv.384.sroa.0.0, i64 %tmpv.387.2, !dbg !1377
  %runtime.writeBarrier.ld.4 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1377
  %icmp.146 = icmp eq i32 %runtime.writeBarrier.ld.4, 0, !dbg !1377
  br i1 %icmp.146, label %then.140, label %else.140

then.140:                                         ; preds = %fallthrough.139
  %icmp.145 = icmp eq { i8*, i64 }* %ptroff.3, null, !dbg !1377
  br i1 %icmp.145, label %then.141, label %fallthrough.141

fallthrough.140:                                  ; preds = %else.140, %fallthrough.141
  %tmpv.388.2 = phi { i8*, i64 }* [ %tmpv.388.3, %fallthrough.141 ], [ %tmpv.388.1, %else.140 ]
  %tokens.sroa.0.0.copyload76 = load { i8*, i64 }*, { i8*, i64 }** %tokens.sroa.0.0.cast.1368.sroa_idx, align 8, !dbg !1378
  call void @llvm.dbg.value(metadata { i8*, i64 }* %tokens.sroa.0.0.copyload76, metadata !1373, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1374
  %tokens.sroa.9.0.copyload82 = load i64, i64* %tokens.sroa.9.0.cast.1368.sroa_idx79, align 8, !dbg !1378
  call void @llvm.dbg.value(metadata i64 %tokens.sroa.9.0.copyload82, metadata !1373, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1374
  %tokens.sroa.13.0.copyload88 = load i64, i64* %tokens.sroa.13.0.cast.1368.sroa_idx85, align 8, !dbg !1378
  call void @llvm.dbg.value(metadata i64 %tokens.sroa.13.0.copyload88, metadata !1373, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 64)), !dbg !1374
  br label %label.1

else.140:                                         ; preds = %fallthrough.139
  %cast.1383 = bitcast { i8*, i64 }* %ptroff.3 to i8*, !dbg !1377
  invoke void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %cast.1383, i8* nonnull %cast.1384)
          to label %fallthrough.140 unwind label %pad.6.loopexit, !dbg !1377

then.141:                                         ; preds = %then.140
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.141 unwind label %pad.6.loopexit, !dbg !1377

fallthrough.141:                                  ; preds = %then.140, %then.141
  %tmpv.388.3 = phi { i8*, i64 }* [ %tmpv.388.1, %then.141 ], [ %ptroff.3, %then.140 ]
  %cast.1381 = bitcast { i8*, i64 }* %tmpv.388.3 to i8*, !dbg !1377
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %cast.1381, i8* nonnull align 8 %cast.1384, i64 16, i1 false), !dbg !1377
  br label %fallthrough.140

cont.122:                                         ; preds = %label.1
  %13 = and i8 %call.128, 1, !dbg !1375
  %trunc.142 = icmp eq i8 %13, 0, !dbg !1375
  br i1 %trunc.142, label %else.142, label %then.142

then.142:                                         ; preds = %cont.122
  %call.127 = invoke { i64, i64 } @bufio.Scanner.Text(i8* nest undef, %Scanner.0* %call.126)
          to label %cont.116 unwind label %pad.6.loopexit, !dbg !1376

else.142:                                         ; preds = %cont.122
  call void @llvm.dbg.value(metadata { i8*, i64 }* %tokens.sroa.0.0, metadata !1373, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1374
  call void @llvm.dbg.value(metadata i64 %tokens.sroa.9.0, metadata !1373, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1374
  call void @llvm.dbg.value(metadata { i8*, i64 }* %tokens.sroa.0.0, metadata !1373, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1374
  call void @llvm.dbg.value(metadata i64 %tokens.sroa.9.0, metadata !1373, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1374
  call void @llvm.dbg.value(metadata { i8*, i64 }* %tokens.sroa.0.0, metadata !1373, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1374
  call void @llvm.dbg.value(metadata i64 %tokens.sroa.9.0, metadata !1373, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1374
  call void @llvm.dbg.value(metadata { i8*, i64 }* %tokens.sroa.0.0, metadata !1373, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1374
  call void @llvm.dbg.value(metadata i64 %tokens.sroa.9.0, metadata !1373, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1374
  call void @llvm.dbg.value(metadata { i8*, i64 }* %tokens.sroa.0.0, metadata !1373, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1374
  call void @llvm.dbg.value(metadata i64 %tokens.sroa.9.0, metadata !1373, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1374
  call void @llvm.dbg.value(metadata { i8*, i64 }* %tokens.sroa.0.0, metadata !1373, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1374
  call void @llvm.dbg.value(metadata i64 %tokens.sroa.9.0, metadata !1373, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1374
  %icmp.147 = icmp slt i64 %tokens.sroa.9.0, 1, !dbg !1379
  br i1 %icmp.147, label %then.143, label %fallthrough.143

then.143:                                         ; preds = %else.142
  invoke void @__go_runtime_error(i8* nest undef, i32 0)
          to label %fallthrough.143.thread unwind label %pad.6.loopexit.split-lp.loopexit, !dbg !1379

fallthrough.143.thread:                           ; preds = %then.143
  %cast.1388187 = bitcast { i8*, i64 }* %tokens.sroa.0.0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %iface.0.sroa_cast, i8* align 8 %cast.1388187, i64 16, i1 false)
  br label %then.144

fallthrough.143:                                  ; preds = %else.142
  %cast.1388 = bitcast { i8*, i64 }* %tokens.sroa.0.0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %iface.0.sroa_cast, i8* align 8 %cast.1388, i64 16, i1 false)
  %icmp.149 = icmp eq i64 %tokens.sroa.9.0, 1, !dbg !1380
  br i1 %icmp.149, label %then.144, label %fallthrough.144

then.144:                                         ; preds = %fallthrough.143.thread, %fallthrough.143
  invoke void @__go_runtime_error(i8* nest undef, i32 0)
          to label %fallthrough.144.thread unwind label %pad.6.loopexit.split-lp.loopexit, !dbg !1380

fallthrough.144.thread:                           ; preds = %then.144
  %ptroff.5189 = getelementptr { i8*, i64 }, { i8*, i64 }* %tokens.sroa.0.0, i64 1, !dbg !1380
  %dest.sroa.0.0.cast.1390.sroa_cast190 = bitcast { i8*, i64 }* %ptroff.5189 to i64*
  %dest.sroa.0.0.copyload191 = load i64, i64* %dest.sroa.0.0.cast.1390.sroa_cast190, align 8
  call void @llvm.dbg.value(metadata i64 %dest.sroa.0.0.copyload, metadata !1381, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1382
  %dest.sroa.4.0.cast.1390.sroa_idx72192 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tokens.sroa.0.0, i64 1, i32 1
  %dest.sroa.4.0.copyload193 = load i64, i64* %dest.sroa.4.0.cast.1390.sroa_idx72192, align 8
  call void @llvm.dbg.value(metadata i64 %dest.sroa.4.0.copyload, metadata !1381, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1382
  br label %then.145

fallthrough.144:                                  ; preds = %fallthrough.143
  %ptroff.5 = getelementptr { i8*, i64 }, { i8*, i64 }* %tokens.sroa.0.0, i64 1, !dbg !1380
  %dest.sroa.0.0.cast.1390.sroa_cast = bitcast { i8*, i64 }* %ptroff.5 to i64*
  %dest.sroa.0.0.copyload = load i64, i64* %dest.sroa.0.0.cast.1390.sroa_cast, align 8
  call void @llvm.dbg.value(metadata i64 %dest.sroa.0.0.copyload, metadata !1381, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1382
  %dest.sroa.4.0.cast.1390.sroa_idx72 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tokens.sroa.0.0, i64 1, i32 1
  %dest.sroa.4.0.copyload = load i64, i64* %dest.sroa.4.0.cast.1390.sroa_idx72, align 8
  call void @llvm.dbg.value(metadata i64 %dest.sroa.4.0.copyload, metadata !1381, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1382
  %icmp.151 = icmp slt i64 %tokens.sroa.9.0, 3, !dbg !1383
  br i1 %icmp.151, label %then.145, label %fallthrough.145

then.145:                                         ; preds = %fallthrough.144.thread, %fallthrough.144
  %dest.sroa.4.0.copyload198 = phi i64 [ %dest.sroa.4.0.copyload193, %fallthrough.144.thread ], [ %dest.sroa.4.0.copyload, %fallthrough.144 ]
  %dest.sroa.0.0.copyload196 = phi i64 [ %dest.sroa.0.0.copyload191, %fallthrough.144.thread ], [ %dest.sroa.0.0.copyload, %fallthrough.144 ]
  invoke void @__go_runtime_error(i8* nest undef, i32 0)
          to label %fallthrough.145.thread unwind label %pad.6.loopexit.split-lp.loopexit, !dbg !1383

fallthrough.145.thread:                           ; preds = %then.145
  %ptroff.6199 = getelementptr { i8*, i64 }, { i8*, i64 }* %tokens.sroa.0.0, i64 2, !dbg !1383
  %gw2.sroa.0.0.cast.1392.sroa_cast200 = bitcast { i8*, i64 }* %ptroff.6199 to i64*
  %gw2.sroa.0.0.copyload201 = load i64, i64* %gw2.sroa.0.0.cast.1392.sroa_cast200, align 8
  call void @llvm.dbg.value(metadata i64 %gw2.sroa.0.0.copyload, metadata !1384, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1385
  %gw2.sroa.7.0.cast.1392.sroa_idx66202 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tokens.sroa.0.0, i64 2, i32 1
  %gw2.sroa.7.0.copyload203 = load i64, i64* %gw2.sroa.7.0.cast.1392.sroa_idx66202, align 8
  call void @llvm.dbg.value(metadata i64 %gw2.sroa.7.0.copyload, metadata !1384, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1385
  br label %then.146

fallthrough.145:                                  ; preds = %fallthrough.144
  %ptroff.6 = getelementptr { i8*, i64 }, { i8*, i64 }* %tokens.sroa.0.0, i64 2, !dbg !1383
  %gw2.sroa.0.0.cast.1392.sroa_cast = bitcast { i8*, i64 }* %ptroff.6 to i64*
  %gw2.sroa.0.0.copyload = load i64, i64* %gw2.sroa.0.0.cast.1392.sroa_cast, align 8
  call void @llvm.dbg.value(metadata i64 %gw2.sroa.0.0.copyload, metadata !1384, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1385
  %gw2.sroa.7.0.cast.1392.sroa_idx66 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tokens.sroa.0.0, i64 2, i32 1
  %gw2.sroa.7.0.copyload = load i64, i64* %gw2.sroa.7.0.cast.1392.sroa_idx66, align 8
  call void @llvm.dbg.value(metadata i64 %gw2.sroa.7.0.copyload, metadata !1384, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1385
  %icmp.153 = icmp slt i64 %tokens.sroa.9.0, 8, !dbg !1386
  br i1 %icmp.153, label %then.146, label %fallthrough.146

then.146:                                         ; preds = %fallthrough.145.thread, %fallthrough.145
  %gw2.sroa.7.0.copyload212 = phi i64 [ %gw2.sroa.7.0.copyload203, %fallthrough.145.thread ], [ %gw2.sroa.7.0.copyload, %fallthrough.145 ]
  %gw2.sroa.0.0.copyload210 = phi i64 [ %gw2.sroa.0.0.copyload201, %fallthrough.145.thread ], [ %gw2.sroa.0.0.copyload, %fallthrough.145 ]
  %dest.sroa.0.0.copyload195208 = phi i64 [ %dest.sroa.0.0.copyload196, %fallthrough.145.thread ], [ %dest.sroa.0.0.copyload, %fallthrough.145 ]
  %dest.sroa.4.0.copyload197206 = phi i64 [ %dest.sroa.4.0.copyload198, %fallthrough.145.thread ], [ %dest.sroa.4.0.copyload, %fallthrough.145 ]
  invoke void @__go_runtime_error(i8* nest undef, i32 0)
          to label %fallthrough.146 unwind label %pad.6.loopexit.split-lp.loopexit, !dbg !1386

fallthrough.146:                                  ; preds = %fallthrough.145, %then.146
  %gw2.sroa.7.0.copyload211 = phi i64 [ %gw2.sroa.7.0.copyload, %fallthrough.145 ], [ %gw2.sroa.7.0.copyload212, %then.146 ]
  %gw2.sroa.0.0.copyload209 = phi i64 [ %gw2.sroa.0.0.copyload, %fallthrough.145 ], [ %gw2.sroa.0.0.copyload210, %then.146 ]
  %dest.sroa.0.0.copyload195207 = phi i64 [ %dest.sroa.0.0.copyload, %fallthrough.145 ], [ %dest.sroa.0.0.copyload195208, %then.146 ]
  %dest.sroa.4.0.copyload197205 = phi i64 [ %dest.sroa.4.0.copyload, %fallthrough.145 ], [ %dest.sroa.4.0.copyload197206, %then.146 ]
  %ptroff.7 = getelementptr { i8*, i64 }, { i8*, i64 }* %tokens.sroa.0.0, i64 7, !dbg !1386
  %mask.sroa.0.0.cast.1394.sroa_cast = bitcast { i8*, i64 }* %ptroff.7 to i64*
  %mask.sroa.0.0.copyload = load i64, i64* %mask.sroa.0.0.cast.1394.sroa_cast, align 8
  call void @llvm.dbg.value(metadata i64 %mask.sroa.0.0.copyload, metadata !1387, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1388
  %mask.sroa.4.0.cast.1394.sroa_idx63 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tokens.sroa.0.0, i64 7, i32 1
  %mask.sroa.4.0.copyload = load i64, i64* %mask.sroa.4.0.cast.1394.sroa_idx63, align 8
  call void @llvm.dbg.value(metadata i64 %mask.sroa.4.0.copyload, metadata !1387, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1388
  store i64 3472328296227680304, i64* %tmpv.397178, align 8
  invoke void @runtime.stringtoslicebyte(%IPST.7* nonnull sret %sret.actual.79, i8* nest undef, i8* null, i64 %dest.sroa.0.0.copyload195207, i64 %dest.sroa.4.0.copyload197205)
          to label %cont.127 unwind label %pad.6.loopexit.split-lp.loopexit, !dbg !1389

cont.127:                                         ; preds = %fallthrough.146
  store i64* %tmpv.397178, i64** %5, align 8, !dbg !1390
  store i64 8, i64* %field.423, align 8, !dbg !1390
  store i64 8, i64* %field.424, align 8, !dbg !1390
  %call.129 = invoke i8 @bytes.Equal(i8* nest undef, { i8*, i64, i64 }* byval nonnull %cast.1399, { i8*, i64, i64 }* byval nonnull %tmp.90)
          to label %cont.128 unwind label %pad.6.loopexit.split-lp.loopexit, !dbg !1391

cont.128:                                         ; preds = %cont.127
  %14 = and i8 %call.129, 1, !dbg !1392
  %trunc.147 = icmp eq i8 %14, 0, !dbg !1392
  br i1 %trunc.147, label %fallthrough.147, label %then.147

then.147:                                         ; preds = %cont.128
  store i64 3472328296227680304, i64* %tmpv.399179, align 8
  invoke void @runtime.stringtoslicebyte(%IPST.7* nonnull sret %sret.actual.80, i8* nest undef, i8* null, i64 %mask.sroa.0.0.copyload, i64 %mask.sroa.4.0.copyload)
          to label %cont.129 unwind label %pad.6.loopexit.split-lp.loopexit, !dbg !1393

fallthrough.147:                                  ; preds = %cont.129, %cont.128
  %tmpv.398.0 = phi i8 [ %call.129, %cont.128 ], [ %call.130, %cont.129 ]
  %15 = and i8 %tmpv.398.0, 1, !dbg !1394
  %trunc.152 = icmp eq i8 %15, 0, !dbg !1394
  br i1 %trunc.152, label %else.148, label %else.149

cont.129:                                         ; preds = %then.147
  store i64* %tmpv.399179, i64** %6, align 8, !dbg !1395
  store i64 8, i64* %field.426, align 8, !dbg !1395
  store i64 8, i64* %field.427, align 8, !dbg !1395
  %call.130 = invoke i8 @bytes.Equal(i8* nest undef, { i8*, i64, i64 }* byval nonnull %cast.1405, { i8*, i64, i64 }* byval nonnull %tmp.91)
          to label %fallthrough.147 unwind label %pad.6.loopexit.split-lp.loopexit, !dbg !1396

else.148:                                         ; preds = %fallthrough.147
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %iface.0.sroa_cast)
  br label %label.0

else.149:                                         ; preds = %fallthrough.147
  %call.131 = invoke { i64, i64 } @__go_string_slice(i8* nest undef, i64 %gw2.sroa.0.0.copyload209, i64 %gw2.sroa.7.0.copyload211, i64 6, i64 8)
          to label %cont.132 unwind label %pad.6.loopexit.split-lp.loopexit.split-lp, !dbg !1397

cont.132:                                         ; preds = %else.149
  %call.131.fca.1.extract = extractvalue { i64, i64 } %call.131, 1, !dbg !1397
  %call.131.fca.0.extract = extractvalue { i64, i64 } %call.131, 0, !dbg !1397
  %call.132 = invoke i8 @command_line_arguments.GetNetGateway..func1(i8* nest bitcast (%functionDescriptor.0* @command_line_arguments.GetNetGateway..func1..f to i8*), i64 %call.131.fca.0.extract, i64 %call.131.fca.1.extract)
          to label %else.150 unwind label %pad.6.loopexit.split-lp.loopexit.split-lp, !dbg !1399

else.150:                                         ; preds = %cont.132
  call void @llvm.dbg.value(metadata i8 %call.132, metadata !1400, metadata !DIExpression()), !dbg !1401
  %call.133 = invoke { i64, i64 } @__go_string_slice(i8* nest undef, i64 %gw2.sroa.0.0.copyload209, i64 %gw2.sroa.7.0.copyload211, i64 4, i64 6)
          to label %cont.135 unwind label %pad.6.loopexit.split-lp.loopexit.split-lp, !dbg !1402

cont.135:                                         ; preds = %else.150
  %call.133.fca.1.extract = extractvalue { i64, i64 } %call.133, 1, !dbg !1402
  %call.133.fca.0.extract = extractvalue { i64, i64 } %call.133, 0, !dbg !1402
  %call.134 = invoke i8 @command_line_arguments.GetNetGateway..func1(i8* nest bitcast (%functionDescriptor.0* @command_line_arguments.GetNetGateway..func1..f to i8*), i64 %call.133.fca.0.extract, i64 %call.133.fca.1.extract)
          to label %else.151 unwind label %pad.6.loopexit.split-lp.loopexit.split-lp, !dbg !1403

else.151:                                         ; preds = %cont.135
  call void @llvm.dbg.value(metadata i8 %call.134, metadata !1404, metadata !DIExpression()), !dbg !1405
  %call.135 = invoke { i64, i64 } @__go_string_slice(i8* nest undef, i64 %gw2.sroa.0.0.copyload209, i64 %gw2.sroa.7.0.copyload211, i64 2, i64 4)
          to label %cont.138 unwind label %pad.6.loopexit.split-lp.loopexit.split-lp, !dbg !1406

cont.138:                                         ; preds = %else.151
  %call.135.fca.1.extract = extractvalue { i64, i64 } %call.135, 1, !dbg !1406
  %call.135.fca.0.extract = extractvalue { i64, i64 } %call.135, 0, !dbg !1406
  %call.136 = invoke i8 @command_line_arguments.GetNetGateway..func1(i8* nest bitcast (%functionDescriptor.0* @command_line_arguments.GetNetGateway..func1..f to i8*), i64 %call.135.fca.0.extract, i64 %call.135.fca.1.extract)
          to label %else.152 unwind label %pad.6.loopexit.split-lp.loopexit.split-lp, !dbg !1407

else.152:                                         ; preds = %cont.138
  call void @llvm.dbg.value(metadata i8 %call.136, metadata !1408, metadata !DIExpression()), !dbg !1409
  %call.137 = invoke { i64, i64 } @__go_string_slice(i8* nest undef, i64 %gw2.sroa.0.0.copyload209, i64 %gw2.sroa.7.0.copyload211, i64 0, i64 2)
          to label %cont.141 unwind label %pad.6.loopexit.split-lp.loopexit.split-lp, !dbg !1410

cont.141:                                         ; preds = %else.152
  %call.137.fca.1.extract = extractvalue { i64, i64 } %call.137, 1, !dbg !1410
  %call.137.fca.0.extract = extractvalue { i64, i64 } %call.137, 0, !dbg !1410
  %call.138 = invoke i8 @command_line_arguments.GetNetGateway..func1(i8* nest bitcast (%functionDescriptor.0* @command_line_arguments.GetNetGateway..func1..f to i8*), i64 %call.137.fca.0.extract, i64 %call.137.fca.1.extract)
          to label %cont.142 unwind label %pad.6.loopexit.split-lp.loopexit.split-lp, !dbg !1411

cont.142:                                         ; preds = %cont.141
  call void @llvm.dbg.value(metadata i8 %call.138, metadata !1412, metadata !DIExpression()), !dbg !1413
  invoke void @net.IPv4(%IP.0* nonnull sret %sret.actual.85, i8* nest undef, i8 zeroext %call.132, i8 zeroext %call.134, i8 zeroext %call.136, i8 zeroext %call.138)
          to label %cont.143 unwind label %pad.6.loopexit.split-lp.loopexit.split-lp, !dbg !1414

cont.143:                                         ; preds = %cont.142
  %cast.1440 = bitcast %IP.0* %sret.actual.85 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1255, i8* nonnull align 8 %cast.1440, i64 24, i1 false)
  %call.139 = invoke { i64, i64 } @net.IP.String(i8* nest undef, %IP.0* nonnull %tmpv.349)
          to label %cont.144 unwind label %pad.6.loopexit.split-lp.loopexit.split-lp, !dbg !1415

cont.144:                                         ; preds = %cont.143
  %call.139.fca.0.extract = extractvalue { i64, i64 } %call.139, 0, !dbg !1415
  %call.139.fca.1.extract = extractvalue { i64, i64 } %call.139, 1, !dbg !1415
  %dev248 = bitcast { i8*, i64 }* %dev to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %dev248, i8* nonnull align 8 %iface.0.sroa_cast, i64 16, i1 false)
  call void @llvm.dbg.value(metadata i64 %call.139.fca.0.extract, metadata !1265, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1266
  call void @llvm.dbg.value(metadata i64 %call.139.fca.1.extract, metadata !1265, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1266
  call void @llvm.dbg.value(metadata i64 0, metadata !1267, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1268
  call void @llvm.dbg.value(metadata i64 0, metadata !1267, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1268
  br label %finally.3

catchpad.3:                                       ; preds = %pad.6
  %ex2.3 = landingpad { i8*, i32 }
          cleanup
  %ex2.3.fca.0.extract = extractvalue { i8*, i32 } %ex2.3, 0
  %ex2.3.fca.1.extract = extractvalue { i8*, i32 } %ex2.3, 1
  br label %finally.3

pad.7:                                            ; preds = %finish.3
  %ex.7 = landingpad { i8*, i32 }
          catch i8* null
  call void @runtime.checkdefer(i8* nest undef, i8* nonnull %tmpv.348), !dbg !1272
  br label %finish.3

finish.3:                                         ; preds = %pad.7, %finally.3
  invoke void @runtime.deferreturn(i8* nest undef, i8* nonnull %tmpv.348)
          to label %cont.146 unwind label %pad.7, !dbg !1272

cont.146:                                         ; preds = %finish.3
  %tmpv.348.ld.0 = load i8, i8* %tmpv.348, align 1, !dbg !1272
  %16 = and i8 %tmpv.348.ld.0, 1, !dbg !1272
  %trunc.153 = icmp eq i8 %16, 0, !dbg !1272
  br i1 %trunc.153, label %else.153, label %then.153

then.153:                                         ; preds = %cont.146
  %tmp.94.sroa.0.0.cast.1482.sroa_cast = bitcast { { i8*, i64 }, { i8*, i64 }, %error.0 }* %sret.formal.1 to i64*, !dbg !1272
  store i64 %gw.sroa.0.1, i64* %tmp.94.sroa.0.0.cast.1482.sroa_cast, align 8, !dbg !1272
  %tmp.94.sroa.2.0.cast.1482.sroa_idx166 = getelementptr inbounds { { i8*, i64 }, { i8*, i64 }, %error.0 }, { { i8*, i64 }, { i8*, i64 }, %error.0 }* %sret.formal.1, i64 0, i32 0, i32 1, !dbg !1272
  store i64 %gw.sroa.10.1, i64* %tmp.94.sroa.2.0.cast.1482.sroa_idx166, align 8, !dbg !1272
  %tmp.94.sroa.3.0.cast.1482.sroa_idx = getelementptr inbounds { { i8*, i64 }, { i8*, i64 }, %error.0 }, { { i8*, i64 }, { i8*, i64 }, %error.0 }* %sret.formal.1, i64 0, i32 1, !dbg !1272
  %tmp.94.sroa.3.0.cast.1482.sroa_cast = bitcast { i8*, i64 }* %tmp.94.sroa.3.0.cast.1482.sroa_idx to i8*, !dbg !1272
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %tmp.94.sroa.3.0.cast.1482.sroa_cast, i8* nonnull align 8 %dev.0.sroa_cast, i64 16, i1 false), !dbg !1272
  %tmp.94.sroa.4.0.cast.1482.sroa_idx167 = getelementptr inbounds { { i8*, i64 }, { i8*, i64 }, %error.0 }, { { i8*, i64 }, { i8*, i64 }, %error.0 }* %sret.formal.1, i64 0, i32 2, !dbg !1272
  %tmp.94.sroa.4.0.cast.1482.sroa_cast = bitcast %error.0* %tmp.94.sroa.4.0.cast.1482.sroa_idx167 to i64*, !dbg !1272
  store i64 %err.sroa.0.1, i64* %tmp.94.sroa.4.0.cast.1482.sroa_cast, align 8, !dbg !1272
  %tmp.94.sroa.5.0.cast.1482.sroa_idx168 = getelementptr inbounds { { i8*, i64 }, { i8*, i64 }, %error.0 }, { { i8*, i64 }, { i8*, i64 }, %error.0 }* %sret.formal.1, i64 0, i32 2, i32 1, !dbg !1272
  %tmp.94.sroa.5.0.cast.1482.sroa_cast = bitcast i8** %tmp.94.sroa.5.0.cast.1482.sroa_idx168 to i64*, !dbg !1272
  store i64 %err.sroa.13.1, i64* %tmp.94.sroa.5.0.cast.1482.sroa_cast, align 8, !dbg !1272
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %dev.0.sroa_cast), !dbg !1272
  ret void, !dbg !1272

else.153:                                         ; preds = %cont.146
  %icmp.163 = icmp eq i8 %finvar.3.0, 1
  br i1 %icmp.163, label %finret.3, label %finres.3

finres.3:                                         ; preds = %else.153
  %excv.3.fca.0.insert = insertvalue { i8*, i32 } undef, i8* %ehtmp.3.sroa.0.0, 0
  %excv.3.fca.1.insert = insertvalue { i8*, i32 } %excv.3.fca.0.insert, i32 %ehtmp.3.sroa.2.0, 1
  resume { i8*, i32 } %excv.3.fca.1.insert

finret.3:                                         ; preds = %else.153
  %tmp.83.sroa.0.0.cast.1284.sroa_cast = bitcast { { i8*, i64 }, { i8*, i64 }, %error.0 }* %sret.formal.1 to i64*, !dbg !1416
  store i64 %gw.sroa.0.1, i64* %tmp.83.sroa.0.0.cast.1284.sroa_cast, align 8, !dbg !1416
  %tmp.83.sroa.2.0.cast.1284.sroa_idx172 = getelementptr inbounds { { i8*, i64 }, { i8*, i64 }, %error.0 }, { { i8*, i64 }, { i8*, i64 }, %error.0 }* %sret.formal.1, i64 0, i32 0, i32 1, !dbg !1416
  store i64 %gw.sroa.10.1, i64* %tmp.83.sroa.2.0.cast.1284.sroa_idx172, align 8, !dbg !1416
  %tmp.83.sroa.3.0.cast.1284.sroa_idx = getelementptr inbounds { { i8*, i64 }, { i8*, i64 }, %error.0 }, { { i8*, i64 }, { i8*, i64 }, %error.0 }* %sret.formal.1, i64 0, i32 1, !dbg !1416
  %tmp.83.sroa.3.0.cast.1284.sroa_cast = bitcast { i8*, i64 }* %tmp.83.sroa.3.0.cast.1284.sroa_idx to i8*, !dbg !1416
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %tmp.83.sroa.3.0.cast.1284.sroa_cast, i8* nonnull align 8 %dev.0.sroa_cast, i64 16, i1 false), !dbg !1416
  %tmp.83.sroa.4.0.cast.1284.sroa_idx173 = getelementptr inbounds { { i8*, i64 }, { i8*, i64 }, %error.0 }, { { i8*, i64 }, { i8*, i64 }, %error.0 }* %sret.formal.1, i64 0, i32 2, !dbg !1416
  %tmp.83.sroa.4.0.cast.1284.sroa_cast = bitcast %error.0* %tmp.83.sroa.4.0.cast.1284.sroa_idx173 to i64*, !dbg !1416
  store i64 %err.sroa.0.1, i64* %tmp.83.sroa.4.0.cast.1284.sroa_cast, align 8, !dbg !1416
  %tmp.83.sroa.5.0.cast.1284.sroa_idx174 = getelementptr inbounds { { i8*, i64 }, { i8*, i64 }, %error.0 }, { { i8*, i64 }, { i8*, i64 }, %error.0 }* %sret.formal.1, i64 0, i32 2, i32 1, !dbg !1416
  %tmp.83.sroa.5.0.cast.1284.sroa_cast = bitcast i8** %tmp.83.sroa.5.0.cast.1284.sroa_idx174 to i64*, !dbg !1416
  store i64 %err.sroa.13.1, i64* %tmp.83.sroa.5.0.cast.1284.sroa_cast, align 8, !dbg !1416
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %dev.0.sroa_cast), !dbg !1416
  ret void, !dbg !1416
}

declare void @net.ParseIP(%IP.0*, i8*, i64, i64) local_unnamed_addr #0

define { i64, i64 } @command_line_arguments.AddRoute(i8* nest nocapture readnone %nest.12, %IP.0* byval %addr, %IP.0* byval %viaAddr, i64 %iName.chunk0, i64 %iName.chunk1, i8 zeroext %debug) #0 !dbg !1417 {
entry:
  %tmp.78 = alloca %IPST.6, align 8
  call void @llvm.dbg.declare(metadata %IP.0* %viaAddr, metadata !1420, metadata !DIExpression()), !dbg !1421
  call void @llvm.dbg.declare(metadata %IP.0* %addr, metadata !1422, metadata !DIExpression()), !dbg !1423
  %args = alloca %IPST.5, align 8
  %tmpv.329 = alloca { i8*, i64 }, align 8
  %tmpv.331 = alloca { i8*, i64 }, align 8
  %tmpv.333 = alloca { i8*, i64 }, align 8
  %tmpv.334 = alloca [3 x %IPST.11], align 8
  %sret.actual.67 = alloca %IPST.5, align 8
  call void @llvm.dbg.value(metadata i64 %iName.chunk0, metadata !1424, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1425
  call void @llvm.dbg.value(metadata i64 %iName.chunk1, metadata !1424, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1425
  call void @llvm.dbg.value(metadata i8 %debug, metadata !1426, metadata !DIExpression()), !dbg !1427
  %0 = bitcast %IPST.5* %args to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0)
  %call.109 = call { i64, i64 } @net.IP.String(i8* nest undef, %IP.0* nonnull %addr), !dbg !1428
  %call.109.fca.0.extract = extractvalue { i64, i64 } %call.109, 0, !dbg !1428
  %call.109.fca.1.extract = extractvalue { i64, i64 } %call.109, 1, !dbg !1428
  %call.110 = call { i64, i64 } @net.IP.String(i8* nest undef, %IP.0* nonnull %viaAddr), !dbg !1430
  %call.110.fca.0.extract = extractvalue { i64, i64 } %call.110, 0, !dbg !1430
  %call.110.fca.1.extract = extractvalue { i64, i64 } %call.110, 1, !dbg !1430
  %call.111 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !1431
  %tmpv.326.sroa.0.0.cast.1160.sroa_cast = bitcast { i8*, i64 }* %tmpv.329 to i64*
  store i64 %call.109.fca.0.extract, i64* %tmpv.326.sroa.0.0.cast.1160.sroa_cast, align 8
  %tmpv.326.sroa.2.0.cast.1160.sroa_idx9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.329, i64 0, i32 1
  store i64 %call.109.fca.1.extract, i64* %tmpv.326.sroa.2.0.cast.1160.sroa_idx9, align 8
  %cast.1163 = bitcast { i8*, i64 }* %tmpv.329 to i8*, !dbg !1431
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.111, i8* nonnull %cast.1163), !dbg !1431
  %call.112 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !1431
  %tmpv.327.sroa.0.0.cast.1165.sroa_cast = bitcast { i8*, i64 }* %tmpv.331 to i64*
  store i64 %call.110.fca.0.extract, i64* %tmpv.327.sroa.0.0.cast.1165.sroa_cast, align 8
  %tmpv.327.sroa.2.0.cast.1165.sroa_idx7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.331, i64 0, i32 1
  store i64 %call.110.fca.1.extract, i64* %tmpv.327.sroa.2.0.cast.1165.sroa_idx7, align 8
  %cast.1168 = bitcast { i8*, i64 }* %tmpv.331 to i8*, !dbg !1431
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.112, i8* nonnull %cast.1168), !dbg !1431
  %call.113 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !1431
  %iName.addr.sroa.0.0.cast.1170.sroa_cast = bitcast { i8*, i64 }* %tmpv.333 to i64*
  store i64 %iName.chunk0, i64* %iName.addr.sroa.0.0.cast.1170.sroa_cast, align 8
  %iName.addr.sroa.2.0.cast.1170.sroa_idx14 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.333, i64 0, i32 1
  store i64 %iName.chunk1, i64* %iName.addr.sroa.2.0.cast.1170.sroa_idx14, align 8
  %cast.1173 = bitcast { i8*, i64 }* %tmpv.333 to i8*, !dbg !1431
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.113, i8* nonnull %cast.1173), !dbg !1431
  %tmp.75.sroa.0.0.cast.1177.sroa_idx = getelementptr inbounds [3 x %IPST.11], [3 x %IPST.11]* %tmpv.334, i64 0, i64 0, i32 0, !dbg !1431
  store %_type.0* @string..d, %_type.0** %tmp.75.sroa.0.0.cast.1177.sroa_idx, align 8, !dbg !1431
  %tmp.75.sroa.2.0.cast.1177.sroa_idx15 = getelementptr inbounds [3 x %IPST.11], [3 x %IPST.11]* %tmpv.334, i64 0, i64 0, i32 1, !dbg !1431
  store i8* %call.111, i8** %tmp.75.sroa.2.0.cast.1177.sroa_idx15, align 8, !dbg !1431
  %tmp.76.sroa.0.0.cast.1179.sroa_idx = getelementptr inbounds [3 x %IPST.11], [3 x %IPST.11]* %tmpv.334, i64 0, i64 1, i32 0, !dbg !1431
  store %_type.0* @string..d, %_type.0** %tmp.76.sroa.0.0.cast.1179.sroa_idx, align 8, !dbg !1431
  %tmp.76.sroa.2.0.cast.1179.sroa_idx16 = getelementptr inbounds [3 x %IPST.11], [3 x %IPST.11]* %tmpv.334, i64 0, i64 1, i32 1, !dbg !1431
  store i8* %call.112, i8** %tmp.76.sroa.2.0.cast.1179.sroa_idx16, align 8, !dbg !1431
  %tmp.77.sroa.0.0.cast.1181.sroa_idx = getelementptr inbounds [3 x %IPST.11], [3 x %IPST.11]* %tmpv.334, i64 0, i64 2, i32 0, !dbg !1431
  store %_type.0* @string..d, %_type.0** %tmp.77.sroa.0.0.cast.1181.sroa_idx, align 8, !dbg !1431
  %tmp.77.sroa.2.0.cast.1181.sroa_idx17 = getelementptr inbounds [3 x %IPST.11], [3 x %IPST.11]* %tmpv.334, i64 0, i64 2, i32 1, !dbg !1431
  store i8* %call.113, i8** %tmp.77.sroa.2.0.cast.1181.sroa_idx17, align 8, !dbg !1431
  %field.366 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.78, i64 0, i32 0, !dbg !1431
  %cast.1184 = getelementptr inbounds [3 x %IPST.11], [3 x %IPST.11]* %tmpv.334, i64 0, i64 0, !dbg !1431
  store %IPST.11* %cast.1184, %IPST.11** %field.366, align 8, !dbg !1431
  %field.367 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.78, i64 0, i32 1, !dbg !1431
  store i64 3, i64* %field.367, align 8, !dbg !1431
  %field.368 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.78, i64 0, i32 2, !dbg !1431
  store i64 3, i64* %field.368, align 8, !dbg !1431
  %call.114 = call { i64, i64 } @fmt.Sprintf(i8* nest undef, i64 ptrtoint ([20 x i8]* @const.161 to i64), i64 19, %IPST.6* byval nonnull %tmp.78), !dbg !1431
  %call.114.fca.0.extract = extractvalue { i64, i64 } %call.114, 0, !dbg !1431
  %call.114.fca.1.extract = extractvalue { i64, i64 } %call.114, 1, !dbg !1431
  call void @llvm.dbg.value(metadata i64 %call.114.fca.0.extract, metadata !1432, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1433
  call void @llvm.dbg.value(metadata i64 %call.114.fca.1.extract, metadata !1432, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1433
  call void @strings.Split(%IPST.5* nonnull sret %sret.actual.67, i8* nest undef, i64 %call.114.fca.0.extract, i64 %call.114.fca.1.extract, i64 ptrtoint ([2 x i8]* @const.149 to i64), i64 1), !dbg !1434
  %cast.1193 = bitcast %IPST.5* %sret.actual.67 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %cast.1193, i64 24, i1 false)
  call void @llvm.dbg.value(metadata %IPST.5* %args, metadata !1435, metadata !DIExpression(DW_OP_deref)), !dbg !1436
  %call.115 = call fastcc { i64, i64 } @command_line_arguments.commandExec(i64 ptrtoint ([6 x i8]* @const.159 to i64), i64 5, %IPST.5* byval nonnull %args, i8 zeroext %debug), !dbg !1437
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0), !dbg !1438
  ret { i64, i64 } %call.115, !dbg !1438
}

define { i64, i64 } @command_line_arguments.SetDefaultGateway(i8* nest nocapture readnone %nest.11, i64 %gw.chunk0, i64 %gw.chunk1, i64 %iName.chunk0, i64 %iName.chunk1, i8 zeroext %debug) #0 !dbg !1439 {
entry:
  %tmp.74 = alloca %IPST.6, align 8
  %args = alloca %IPST.5, align 8
  %tmpv.321 = alloca { i8*, i64 }, align 8
  %tmpv.323 = alloca { i8*, i64 }, align 8
  %tmpv.324 = alloca [2 x %IPST.11], align 8
  %sret.actual.62 = alloca %IPST.5, align 8
  call void @llvm.dbg.value(metadata i64 %gw.chunk0, metadata !1442, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1443
  call void @llvm.dbg.value(metadata i64 %gw.chunk1, metadata !1442, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1443
  call void @llvm.dbg.value(metadata i64 %iName.chunk0, metadata !1444, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1445
  call void @llvm.dbg.value(metadata i64 %iName.chunk1, metadata !1444, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1445
  call void @llvm.dbg.value(metadata i8 %debug, metadata !1446, metadata !DIExpression()), !dbg !1447
  %0 = bitcast %IPST.5* %args to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0)
  %call.105 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !1448
  %gw.addr.sroa.0.0.cast.1118.sroa_cast = bitcast { i8*, i64 }* %tmpv.321 to i64*
  store i64 %gw.chunk0, i64* %gw.addr.sroa.0.0.cast.1118.sroa_cast, align 8
  %gw.addr.sroa.2.0.cast.1118.sroa_idx11 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.321, i64 0, i32 1
  store i64 %gw.chunk1, i64* %gw.addr.sroa.2.0.cast.1118.sroa_idx11, align 8
  %cast.1121 = bitcast { i8*, i64 }* %tmpv.321 to i8*, !dbg !1448
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.105, i8* nonnull %cast.1121), !dbg !1448
  %call.106 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !1448
  %iName.addr.sroa.0.0.cast.1123.sroa_cast = bitcast { i8*, i64 }* %tmpv.323 to i64*
  store i64 %iName.chunk0, i64* %iName.addr.sroa.0.0.cast.1123.sroa_cast, align 8
  %iName.addr.sroa.2.0.cast.1123.sroa_idx10 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.323, i64 0, i32 1
  store i64 %iName.chunk1, i64* %iName.addr.sroa.2.0.cast.1123.sroa_idx10, align 8
  %cast.1126 = bitcast { i8*, i64 }* %tmpv.323 to i8*, !dbg !1448
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.106, i8* nonnull %cast.1126), !dbg !1448
  %tmp.72.sroa.0.0.cast.1129.sroa_idx = getelementptr inbounds [2 x %IPST.11], [2 x %IPST.11]* %tmpv.324, i64 0, i64 0, i32 0, !dbg !1448
  store %_type.0* @string..d, %_type.0** %tmp.72.sroa.0.0.cast.1129.sroa_idx, align 8, !dbg !1448
  %tmp.72.sroa.2.0.cast.1129.sroa_idx12 = getelementptr inbounds [2 x %IPST.11], [2 x %IPST.11]* %tmpv.324, i64 0, i64 0, i32 1, !dbg !1448
  store i8* %call.105, i8** %tmp.72.sroa.2.0.cast.1129.sroa_idx12, align 8, !dbg !1448
  %tmp.73.sroa.0.0.cast.1131.sroa_idx = getelementptr inbounds [2 x %IPST.11], [2 x %IPST.11]* %tmpv.324, i64 0, i64 1, i32 0, !dbg !1448
  store %_type.0* @string..d, %_type.0** %tmp.73.sroa.0.0.cast.1131.sroa_idx, align 8, !dbg !1448
  %tmp.73.sroa.2.0.cast.1131.sroa_idx13 = getelementptr inbounds [2 x %IPST.11], [2 x %IPST.11]* %tmpv.324, i64 0, i64 1, i32 1, !dbg !1448
  store i8* %call.106, i8** %tmp.73.sroa.2.0.cast.1131.sroa_idx13, align 8, !dbg !1448
  %field.357 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.74, i64 0, i32 0, !dbg !1448
  %cast.1134 = getelementptr inbounds [2 x %IPST.11], [2 x %IPST.11]* %tmpv.324, i64 0, i64 0, !dbg !1448
  store %IPST.11* %cast.1134, %IPST.11** %field.357, align 8, !dbg !1448
  %field.358 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.74, i64 0, i32 1, !dbg !1448
  store i64 2, i64* %field.358, align 8, !dbg !1448
  %field.359 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.74, i64 0, i32 2, !dbg !1448
  store i64 2, i64* %field.359, align 8, !dbg !1448
  %call.107 = call { i64, i64 } @fmt.Sprintf(i8* nest undef, i64 ptrtoint ([25 x i8]* @const.157 to i64), i64 24, %IPST.6* byval nonnull %tmp.74), !dbg !1448
  %call.107.fca.0.extract = extractvalue { i64, i64 } %call.107, 0, !dbg !1448
  %call.107.fca.1.extract = extractvalue { i64, i64 } %call.107, 1, !dbg !1448
  call void @llvm.dbg.value(metadata i64 %call.107.fca.0.extract, metadata !1450, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1451
  call void @llvm.dbg.value(metadata i64 %call.107.fca.1.extract, metadata !1450, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1451
  call void @strings.Split(%IPST.5* nonnull sret %sret.actual.62, i8* nest undef, i64 %call.107.fca.0.extract, i64 %call.107.fca.1.extract, i64 ptrtoint ([2 x i8]* @const.149 to i64), i64 1), !dbg !1452
  %cast.1141 = bitcast %IPST.5* %sret.actual.62 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %cast.1141, i64 24, i1 false)
  call void @llvm.dbg.value(metadata %IPST.5* %args, metadata !1453, metadata !DIExpression(DW_OP_deref)), !dbg !1454
  %call.108 = call fastcc { i64, i64 } @command_line_arguments.commandExec(i64 ptrtoint ([6 x i8]* @const.159 to i64), i64 5, %IPST.5* byval nonnull %args, i8 zeroext %debug), !dbg !1455
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0), !dbg !1456
  ret { i64, i64 } %call.108, !dbg !1456
}

define { i64, i64 } @command_line_arguments.SetInterfaceStatus(i8* nest nocapture readnone %nest.9, i64 %iName.chunk0, i64 %iName.chunk1, i8 zeroext %up, i8 zeroext %debug) #0 !dbg !1457 {
entry:
  %tmp.67 = alloca %IPST.6, align 8
  %statusString = alloca { i8*, i64 }, align 8
  %args = alloca %IPST.5, align 8
  %tmpv.300 = alloca { i8*, i64 }, align 8
  %tmpv.302 = alloca { i8*, i64 }, align 8
  %tmpv.305 = alloca [4 x %IPST.11], align 8
  %sret.actual.54 = alloca %IPST.5, align 8
  call void @llvm.dbg.value(metadata i64 %iName.chunk0, metadata !1460, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1461
  call void @llvm.dbg.value(metadata i64 %iName.chunk1, metadata !1460, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1461
  call void @llvm.dbg.value(metadata i8 %up, metadata !1462, metadata !DIExpression()), !dbg !1463
  call void @llvm.dbg.value(metadata i8 %debug, metadata !1464, metadata !DIExpression()), !dbg !1465
  %statusString.0.sroa_cast = bitcast { i8*, i64 }* %statusString to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %statusString.0.sroa_cast)
  %0 = bitcast %IPST.5* %args to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %statusString.0.sroa_cast, i8* align 8 bitcast ({ i8*, i64 }* @const.144 to i8*), i64 16, i1 false)
  %1 = and i8 %up, 1, !dbg !1466
  %trunc.128 = icmp eq i8 %1, 0, !dbg !1466
  br i1 %trunc.128, label %fallthrough.128, label %then.128

then.128:                                         ; preds = %entry
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %statusString.0.sroa_cast, i8* align 8 bitcast ({ i8*, i64 }* @const.146 to i8*), i64 16, i1 false), !dbg !1468
  br label %fallthrough.128

fallthrough.128:                                  ; preds = %entry, %then.128
  %call.92 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !1469
  %iName.addr.sroa.0.0.cast.1020.sroa_cast = bitcast { i8*, i64 }* %tmpv.300 to i64*
  store i64 %iName.chunk0, i64* %iName.addr.sroa.0.0.cast.1020.sroa_cast, align 8
  %iName.addr.sroa.2.0.cast.1020.sroa_idx10 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.300, i64 0, i32 1
  store i64 %iName.chunk1, i64* %iName.addr.sroa.2.0.cast.1020.sroa_idx10, align 8
  %cast.1023 = bitcast { i8*, i64 }* %tmpv.300 to i8*, !dbg !1469
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.92, i8* nonnull %cast.1023), !dbg !1469
  %call.93 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !1469
  %cast.1025 = bitcast { i8*, i64 }* %tmpv.302 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1025, i8* nonnull align 8 %statusString.0.sroa_cast, i64 16, i1 false)
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.93, i8* nonnull %cast.1025), !dbg !1469
  %call.94 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @int..d), !dbg !1469
  %cast.1029 = bitcast i8* %call.94 to i64*, !dbg !1469
  store i64 1500, i64* %cast.1029, align 8, !dbg !1469
  %call.95 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @int..d), !dbg !1469
  %cast.1030 = bitcast i8* %call.95 to i64*, !dbg !1469
  store i64 300, i64* %cast.1030, align 8, !dbg !1469
  %tmp.63.sroa.0.0.cast.1035.sroa_idx = getelementptr inbounds [4 x %IPST.11], [4 x %IPST.11]* %tmpv.305, i64 0, i64 0, i32 0, !dbg !1469
  store %_type.0* @string..d, %_type.0** %tmp.63.sroa.0.0.cast.1035.sroa_idx, align 8, !dbg !1469
  %tmp.63.sroa.2.0.cast.1035.sroa_idx11 = getelementptr inbounds [4 x %IPST.11], [4 x %IPST.11]* %tmpv.305, i64 0, i64 0, i32 1, !dbg !1469
  store i8* %call.92, i8** %tmp.63.sroa.2.0.cast.1035.sroa_idx11, align 8, !dbg !1469
  %tmp.64.sroa.0.0.cast.1037.sroa_idx = getelementptr inbounds [4 x %IPST.11], [4 x %IPST.11]* %tmpv.305, i64 0, i64 1, i32 0, !dbg !1469
  store %_type.0* @string..d, %_type.0** %tmp.64.sroa.0.0.cast.1037.sroa_idx, align 8, !dbg !1469
  %tmp.64.sroa.2.0.cast.1037.sroa_idx12 = getelementptr inbounds [4 x %IPST.11], [4 x %IPST.11]* %tmpv.305, i64 0, i64 1, i32 1, !dbg !1469
  store i8* %call.93, i8** %tmp.64.sroa.2.0.cast.1037.sroa_idx12, align 8, !dbg !1469
  %tmp.65.sroa.0.0.cast.1039.sroa_idx = getelementptr inbounds [4 x %IPST.11], [4 x %IPST.11]* %tmpv.305, i64 0, i64 2, i32 0, !dbg !1469
  store %_type.0* @int..d, %_type.0** %tmp.65.sroa.0.0.cast.1039.sroa_idx, align 8, !dbg !1469
  %tmp.65.sroa.2.0.cast.1039.sroa_idx13 = getelementptr inbounds [4 x %IPST.11], [4 x %IPST.11]* %tmpv.305, i64 0, i64 2, i32 1, !dbg !1469
  store i8* %call.94, i8** %tmp.65.sroa.2.0.cast.1039.sroa_idx13, align 8, !dbg !1469
  %tmp.66.sroa.0.0.cast.1041.sroa_idx = getelementptr inbounds [4 x %IPST.11], [4 x %IPST.11]* %tmpv.305, i64 0, i64 3, i32 0, !dbg !1469
  store %_type.0* @int..d, %_type.0** %tmp.66.sroa.0.0.cast.1041.sroa_idx, align 8, !dbg !1469
  %tmp.66.sroa.2.0.cast.1041.sroa_idx14 = getelementptr inbounds [4 x %IPST.11], [4 x %IPST.11]* %tmpv.305, i64 0, i64 3, i32 1, !dbg !1469
  store i8* %call.95, i8** %tmp.66.sroa.2.0.cast.1041.sroa_idx14, align 8, !dbg !1469
  %field.340 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.67, i64 0, i32 0, !dbg !1469
  %cast.1044 = getelementptr inbounds [4 x %IPST.11], [4 x %IPST.11]* %tmpv.305, i64 0, i64 0, !dbg !1469
  store %IPST.11* %cast.1044, %IPST.11** %field.340, align 8, !dbg !1469
  %field.341 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.67, i64 0, i32 1, !dbg !1469
  store i64 4, i64* %field.341, align 8, !dbg !1469
  %field.342 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.67, i64 0, i32 2, !dbg !1469
  store i64 4, i64* %field.342, align 8, !dbg !1469
  %call.96 = call { i64, i64 } @fmt.Sprintf(i8* nest undef, i64 ptrtoint ([34 x i8]* @const.147 to i64), i64 33, %IPST.6* byval nonnull %tmp.67), !dbg !1469
  %call.96.fca.0.extract = extractvalue { i64, i64 } %call.96, 0, !dbg !1469
  %call.96.fca.1.extract = extractvalue { i64, i64 } %call.96, 1, !dbg !1469
  call void @llvm.dbg.value(metadata i64 %call.96.fca.0.extract, metadata !1470, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1471
  call void @llvm.dbg.value(metadata i64 %call.96.fca.1.extract, metadata !1470, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1471
  call void @strings.Split(%IPST.5* nonnull sret %sret.actual.54, i8* nest undef, i64 %call.96.fca.0.extract, i64 %call.96.fca.1.extract, i64 ptrtoint ([2 x i8]* @const.149 to i64), i64 1), !dbg !1472
  %cast.1051 = bitcast %IPST.5* %sret.actual.54 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %cast.1051, i64 24, i1 false)
  call void @llvm.dbg.value(metadata %IPST.5* %args, metadata !1473, metadata !DIExpression(DW_OP_deref)), !dbg !1474
  %call.97 = call fastcc { i64, i64 } @command_line_arguments.commandExec(i64 ptrtoint ([3 x i8]* @const.151 to i64), i64 2, %IPST.5* byval nonnull %args, i8 zeroext %debug), !dbg !1475
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %statusString.0.sroa_cast), !dbg !1476
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0), !dbg !1476
  ret { i64, i64 } %call.97, !dbg !1476
}

define internal void @command_line_arguments.command_line_arguments..thunk0(i8* nest nocapture readnone %nest.40, { %Client.0* }* nocapture readonly %__go_thunk_parameter) #0 !dbg !1477 {
entry:
  call void @llvm.dbg.value(metadata { %Client.0* }* %__go_thunk_parameter, metadata !1484, metadata !DIExpression()), !dbg !1485
  %field.920 = getelementptr inbounds { %Client.0* }, { %Client.0* }* %__go_thunk_parameter, i64 0, i32 0, !dbg !1485
  %.field.ld.133 = load %Client.0*, %Client.0** %field.920, align 8, !dbg !1485
  call void @command_line_arguments.Client.netSendRoutine(i8* nest undef, %Client.0* %.field.ld.133), !dbg !1485
  ret void
}

declare void @__go_go(i8*, %__go_descriptor.63*, i8*) local_unnamed_addr #0

define internal void @command_line_arguments.command_line_arguments..thunk1(i8* nest nocapture readnone %nest.41, { %Client.0* }* nocapture readonly %__go_thunk_parameter) #0 !dbg !1486 {
entry:
  call void @llvm.dbg.value(metadata { %Client.0* }* %__go_thunk_parameter, metadata !1487, metadata !DIExpression()), !dbg !1488
  %field.921 = getelementptr inbounds { %Client.0* }, { %Client.0* }* %__go_thunk_parameter, i64 0, i32 0, !dbg !1488
  %.field.ld.134 = load %Client.0*, %Client.0** %field.921, align 8, !dbg !1488
  call void @command_line_arguments.Client.netRecvRoutine(i8* nest undef, %Client.0* %.field.ld.134), !dbg !1488
  ret void
}

define internal void @command_line_arguments.command_line_arguments..thunk2(i8* nest nocapture readnone %nest.42, { %Interface.0*, {}*, %WaitGroup.0*, i8* }* nocapture readonly %__go_thunk_parameter) #0 !dbg !1489 {
entry:
  call void @llvm.dbg.value(metadata { %Interface.0*, {}*, %WaitGroup.0*, i8* }* %__go_thunk_parameter, metadata !1501, metadata !DIExpression()), !dbg !1502
  %field.922 = getelementptr inbounds { %Interface.0*, {}*, %WaitGroup.0*, i8* }, { %Interface.0*, {}*, %WaitGroup.0*, i8* }* %__go_thunk_parameter, i64 0, i32 0, !dbg !1502
  %.field.ld.135 = load %Interface.0*, %Interface.0** %field.922, align 8, !dbg !1502
  %field.923 = getelementptr inbounds { %Interface.0*, {}*, %WaitGroup.0*, i8* }, { %Interface.0*, {}*, %WaitGroup.0*, i8* }* %__go_thunk_parameter, i64 0, i32 1, !dbg !1502
  %.field.ld.136 = load {}*, {}** %field.923, align 8, !dbg !1502
  %field.924 = getelementptr inbounds { %Interface.0*, {}*, %WaitGroup.0*, i8* }, { %Interface.0*, {}*, %WaitGroup.0*, i8* }* %__go_thunk_parameter, i64 0, i32 2, !dbg !1502
  %.field.ld.137 = load %WaitGroup.0*, %WaitGroup.0** %field.924, align 8, !dbg !1502
  %field.925 = getelementptr inbounds { %Interface.0*, {}*, %WaitGroup.0*, i8* }, { %Interface.0*, {}*, %WaitGroup.0*, i8* }* %__go_thunk_parameter, i64 0, i32 3, !dbg !1502
  %.field.ld.138 = load i8*, i8** %field.925, align 8, !dbg !1502
  call fastcc void @command_line_arguments.devReadRoutine(%Interface.0* %.field.ld.135, {}* %.field.ld.136, %WaitGroup.0* %.field.ld.137, i8* %.field.ld.138), !dbg !1502
  ret void
}

define internal void @command_line_arguments.command_line_arguments..thunk3(i8* nest nocapture readnone %nest.43, { %Interface.0*, {}*, %WaitGroup.0*, i8* }* nocapture readonly %__go_thunk_parameter) #0 !dbg !1503 {
entry:
  call void @llvm.dbg.value(metadata { %Interface.0*, {}*, %WaitGroup.0*, i8* }* %__go_thunk_parameter, metadata !1504, metadata !DIExpression()), !dbg !1505
  %field.926 = getelementptr inbounds { %Interface.0*, {}*, %WaitGroup.0*, i8* }, { %Interface.0*, {}*, %WaitGroup.0*, i8* }* %__go_thunk_parameter, i64 0, i32 0, !dbg !1505
  %.field.ld.139 = load %Interface.0*, %Interface.0** %field.926, align 8, !dbg !1505
  %field.927 = getelementptr inbounds { %Interface.0*, {}*, %WaitGroup.0*, i8* }, { %Interface.0*, {}*, %WaitGroup.0*, i8* }* %__go_thunk_parameter, i64 0, i32 1, !dbg !1505
  %.field.ld.140 = load {}*, {}** %field.927, align 8, !dbg !1505
  %field.928 = getelementptr inbounds { %Interface.0*, {}*, %WaitGroup.0*, i8* }, { %Interface.0*, {}*, %WaitGroup.0*, i8* }* %__go_thunk_parameter, i64 0, i32 2, !dbg !1505
  %.field.ld.141 = load %WaitGroup.0*, %WaitGroup.0** %field.928, align 8, !dbg !1505
  %field.929 = getelementptr inbounds { %Interface.0*, {}*, %WaitGroup.0*, i8* }, { %Interface.0*, {}*, %WaitGroup.0*, i8* }* %__go_thunk_parameter, i64 0, i32 3, !dbg !1505
  %.field.ld.142 = load i8*, i8** %field.929, align 8, !dbg !1505
  call fastcc void @command_line_arguments.devWriteRoutine(%Interface.0* %.field.ld.139, {}* %.field.ld.140, %WaitGroup.0* %.field.ld.141, i8* %.field.ld.142), !dbg !1505
  ret void
}

declare void @sync.WaitGroup.Add(i8*, %WaitGroup.0*, i64) local_unnamed_addr #0

; Function Attrs: noinline
define internal i8 @command_line_arguments.command_line_arguments..thunk4(i8* nest nocapture readnone %nest.44, { %WaitGroup.0* }* nocapture readonly %__go_thunk_parameter) #4 !dbg !1506 {
entry:
  call void @llvm.dbg.value(metadata { %WaitGroup.0* }* %__go_thunk_parameter, metadata !1513, metadata !DIExpression()), !dbg !1514
  call void @llvm.dbg.value(metadata i8 0, metadata !1515, metadata !DIExpression()), !dbg !1514
  %call.263 = call i8 @runtime.setdeferretaddr(i8* nest undef, i8* blockaddress(@command_line_arguments.command_line_arguments..thunk4, %label.0)), !dbg !1514
  %0 = and i8 %call.263, 1, !dbg !1514
  %trunc.347 = icmp eq i8 %0, 0, !dbg !1514
  br i1 %trunc.347, label %else.346, label %label.0

else.346:                                         ; preds = %entry
  %field.930 = getelementptr inbounds { %WaitGroup.0* }, { %WaitGroup.0* }* %__go_thunk_parameter, i64 0, i32 0, !dbg !1514
  %.field.ld.143 = load %WaitGroup.0*, %WaitGroup.0** %field.930, align 8, !dbg !1514
  call void @sync.WaitGroup.Done(i8* nest undef, %WaitGroup.0* %.field.ld.143), !dbg !1514
  br label %label.0

label.0:                                          ; preds = %entry, %else.346
  call void @llvm.dbg.value(metadata i8 0, metadata !1515, metadata !DIExpression()), !dbg !1514
  ret i8 0, !dbg !1514
}

declare void @runtime.deferproc(i8*, i8*, %__go_descriptor.63*, i8*) local_unnamed_addr #0

declare void @crypto_tls.Conn.Write({ i64, %error.0 }*, i8*, %Conn.1*, { i8*, i64, i64 }*) #0

declare %Encoder.0* @encoding_gob.NewEncoder(i8*, i64, i64) local_unnamed_addr #0

declare i8 @runtime.chanrecv2(i8*, {}*, i8*) local_unnamed_addr #0

declare i8 @net.IP.IsMulticast(i8*, %IP.0*) local_unnamed_addr #0

declare { i64, i64 } @encoding_gob.Encoder.Encode(i8*, %Encoder.0*, i64, i64) local_unnamed_addr #0

declare void @log.Println(i8*, %IPST.6*) local_unnamed_addr #0

declare void @time.Sleep(i8*, i64) local_unnamed_addr #0

declare void @runtime.checkdefer(i8*, i8*) local_unnamed_addr #0

declare void @runtime.deferreturn(i8*, i8*) local_unnamed_addr #0

declare i32 @__gccgo_personality_v0(i32, i32, i64, i8*, i8*)

declare void @runtime.newselect(i8*, i8*, i64, i32) local_unnamed_addr #0

declare void @runtime.selectrecv(i8*, i8*, {}*, i8*, i8*) local_unnamed_addr #0

declare void @runtime.selectdefault(i8*, i8*) local_unnamed_addr #0

declare i64 @runtime.selectgo(i8*, i8*) local_unnamed_addr #0

; Function Attrs: noinline
define internal i8 @command_line_arguments.command_line_arguments..thunk5(i8* nest nocapture readnone %nest.45, { %WaitGroup.0* }* nocapture readonly %__go_thunk_parameter) #4 !dbg !1516 {
entry:
  call void @llvm.dbg.value(metadata { %WaitGroup.0* }* %__go_thunk_parameter, metadata !1517, metadata !DIExpression()), !dbg !1518
  call void @llvm.dbg.value(metadata i8 0, metadata !1519, metadata !DIExpression()), !dbg !1518
  %call.264 = call i8 @runtime.setdeferretaddr(i8* nest undef, i8* blockaddress(@command_line_arguments.command_line_arguments..thunk5, %label.0)), !dbg !1518
  %0 = and i8 %call.264, 1, !dbg !1518
  %trunc.348 = icmp eq i8 %0, 0, !dbg !1518
  br i1 %trunc.348, label %else.347, label %label.0

else.347:                                         ; preds = %entry
  %field.931 = getelementptr inbounds { %WaitGroup.0* }, { %WaitGroup.0* }* %__go_thunk_parameter, i64 0, i32 0, !dbg !1518
  %.field.ld.144 = load %WaitGroup.0*, %WaitGroup.0** %field.931, align 8, !dbg !1518
  call void @sync.WaitGroup.Done(i8* nest undef, %WaitGroup.0* %.field.ld.144), !dbg !1518
  br label %label.0

label.0:                                          ; preds = %entry, %else.347
  call void @llvm.dbg.value(metadata i8 0, metadata !1519, metadata !DIExpression()), !dbg !1518
  ret i8 0, !dbg !1518
}

declare void @crypto_tls.Conn.Read({ i64, %error.0 }*, i8*, %Conn.1*, { i8*, i64, i64 }*) #0

declare %Decoder.0* @encoding_gob.NewDecoder(i8*, i64, i64) local_unnamed_addr #0

declare { i64, i64 } @encoding_gob.Decoder.Decode(i8*, %Decoder.0*, i64, i64) local_unnamed_addr #0

declare void @runtime.chansend1(i8*, {}*, i8*) local_unnamed_addr #0

declare void @sync.Mutex.Lock(i8*, %Mutex.0*) local_unnamed_addr #0

; Function Attrs: noinline
define internal i8 @command_line_arguments.command_line_arguments..thunk6(i8* nest nocapture readnone %nest.46, { %Mutex.0* }* nocapture readonly %__go_thunk_parameter) #4 !dbg !1520 {
entry:
  call void @llvm.dbg.value(metadata { %Mutex.0* }* %__go_thunk_parameter, metadata !1528, metadata !DIExpression()), !dbg !1529
  call void @llvm.dbg.value(metadata i8 0, metadata !1530, metadata !DIExpression()), !dbg !1529
  %call.265 = call i8 @runtime.setdeferretaddr(i8* nest undef, i8* blockaddress(@command_line_arguments.command_line_arguments..thunk6, %label.0)), !dbg !1529
  %0 = and i8 %call.265, 1, !dbg !1529
  %trunc.349 = icmp eq i8 %0, 0, !dbg !1529
  br i1 %trunc.349, label %else.348, label %label.0

else.348:                                         ; preds = %entry
  %field.932 = getelementptr inbounds { %Mutex.0* }, { %Mutex.0* }* %__go_thunk_parameter, i64 0, i32 0, !dbg !1529
  %.field.ld.145 = load %Mutex.0*, %Mutex.0** %field.932, align 8, !dbg !1529
  call void @sync.Mutex.Unlock(i8* nest undef, %Mutex.0* %.field.ld.145), !dbg !1529
  br label %label.0

label.0:                                          ; preds = %entry, %else.348
  call void @llvm.dbg.value(metadata i8 0, metadata !1530, metadata !DIExpression()), !dbg !1529
  ret i8 0, !dbg !1529
}

declare { i64, i64 } @crypto_tls.Conn.Close(i8*, %Conn.1*) local_unnamed_addr #0

declare { i64, i64 } @github_com_twitchyliquid64_subnet_vendor_github_com_songgao_water.Interface.Close..stub(i8*, %Interface.0*) local_unnamed_addr #0

declare { i64, i64 } @fmt.Sprintf(i8*, i64, i64, %IPST.6*) local_unnamed_addr #0

declare void @strings.Split(%IPST.5*, i8*, i64, i64, i64, i64) local_unnamed_addr #0

define internal fastcc { i64, i64 } @command_line_arguments.commandExec(i64 %command.chunk0, i64 %command.chunk1, %IPST.5* byval %args, i8 zeroext %debug) unnamed_addr #0 !dbg !1531 {
entry:
  %tmp.170 = alloca %IPST.6, align 8
  %tmp.167 = alloca %IPST.6, align 8
  %tmp.164 = alloca [3 x { i8*, i64 }], align 8
  call void @llvm.dbg.declare(metadata %IPST.5* %args, metadata !1534, metadata !DIExpression()), !dbg !1535
  %tmpv.918 = alloca { i8*, i64 }, align 8
  %tmpv.920 = alloca %IPST.5, align 8
  %tmpv.921 = alloca [2 x %IPST.11], align 8
  %tmpv.924 = alloca { i8*, i64 }, align 8
  %tmpv.925 = alloca [2 x %IPST.11], align 8
  call void @llvm.dbg.value(metadata i64 %command.chunk0, metadata !1536, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1537
  call void @llvm.dbg.value(metadata i64 %command.chunk1, metadata !1536, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1537
  call void @llvm.dbg.value(metadata i8 %debug, metadata !1538, metadata !DIExpression()), !dbg !1539
  %call.257 = call %Cmd.0* @os_exec.Command(i8* nest undef, i64 %command.chunk0, i64 %command.chunk1, %IPST.5* byval nonnull %args), !dbg !1540
  call void @llvm.dbg.value(metadata %Cmd.0* %call.257, metadata !1542, metadata !DIExpression()), !dbg !1698
  %0 = and i8 %debug, 1, !dbg !1699
  %trunc.344 = icmp eq i8 %0, 0, !dbg !1699
  br i1 %trunc.344, label %fallthrough.343, label %then.343

then.343:                                         ; preds = %entry
  %cast.2852 = bitcast [3 x { i8*, i64 }]* %tmp.164 to i8*, !dbg !1700
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2852, i8* align 8 bitcast ({ i8*, i64 }* @const.314 to i8*), i64 16, i1 false), !dbg !1700
  %command.addr.sroa.0.0.cast.2854.sroa_idx = getelementptr inbounds [3 x { i8*, i64 }], [3 x { i8*, i64 }]* %tmp.164, i64 0, i64 1, !dbg !1700
  %command.addr.sroa.0.0.cast.2854.sroa_cast = bitcast { i8*, i64 }* %command.addr.sroa.0.0.cast.2854.sroa_idx to i64*, !dbg !1700
  store i64 %command.chunk0, i64* %command.addr.sroa.0.0.cast.2854.sroa_cast, align 8, !dbg !1700
  %command.addr.sroa.3.0.cast.2854.sroa_idx11 = getelementptr inbounds [3 x { i8*, i64 }], [3 x { i8*, i64 }]* %tmp.164, i64 0, i64 1, i32 1, !dbg !1700
  store i64 %command.chunk1, i64* %command.addr.sroa.3.0.cast.2854.sroa_idx11, align 8, !dbg !1700
  %index.96 = getelementptr inbounds [3 x { i8*, i64 }], [3 x { i8*, i64 }]* %tmp.164, i64 0, i64 2, !dbg !1700
  %cast.2856 = bitcast { i8*, i64 }* %index.96 to i8*, !dbg !1700
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2856, i8* align 8 bitcast ({ i8*, i64 }* @const.316 to i8*), i64 16, i1 false), !dbg !1700
  %call.258 = call { i64, i64 } @runtime.concatstring3(i8* nest undef, i8* null, [3 x { i8*, i64 }]* byval nonnull %tmp.164), !dbg !1700
  %call.258.fca.0.extract = extractvalue { i64, i64 } %call.258, 0, !dbg !1700
  %call.258.fca.1.extract = extractvalue { i64, i64 } %call.258, 1, !dbg !1700
  %call.259 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !1701
  %tmpv.916.sroa.0.0.cast.2863.sroa_cast = bitcast { i8*, i64 }* %tmpv.918 to i64*
  store i64 %call.258.fca.0.extract, i64* %tmpv.916.sroa.0.0.cast.2863.sroa_cast, align 8
  %tmpv.916.sroa.2.0.cast.2863.sroa_idx4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.918, i64 0, i32 1
  store i64 %call.258.fca.1.extract, i64* %tmpv.916.sroa.2.0.cast.2863.sroa_idx4, align 8
  %cast.2866 = bitcast { i8*, i64 }* %tmpv.918 to i8*, !dbg !1701
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.259, i8* nonnull %cast.2866), !dbg !1701
  %call.260 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7string, i64 0, i32 0)), !dbg !1701
  %cast.2869 = bitcast %IPST.5* %tmpv.920 to i8*
  %cast.2870 = bitcast %IPST.5* %args to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2869, i8* nonnull align 8 %cast.2870, i64 24, i1 false)
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7string, i64 0, i32 0), i8* %call.260, i8* nonnull %cast.2869), !dbg !1701
  %tmp.165.sroa.0.0.cast.2877.sroa_idx = getelementptr inbounds [2 x %IPST.11], [2 x %IPST.11]* %tmpv.921, i64 0, i64 0, i32 0, !dbg !1701
  store %_type.0* @string..d, %_type.0** %tmp.165.sroa.0.0.cast.2877.sroa_idx, align 8, !dbg !1701
  %tmp.165.sroa.2.0.cast.2877.sroa_idx12 = getelementptr inbounds [2 x %IPST.11], [2 x %IPST.11]* %tmpv.921, i64 0, i64 0, i32 1, !dbg !1701
  store i8* %call.259, i8** %tmp.165.sroa.2.0.cast.2877.sroa_idx12, align 8, !dbg !1701
  %tmp.166.sroa.0.0.cast.2879.sroa_idx = getelementptr inbounds [2 x %IPST.11], [2 x %IPST.11]* %tmpv.921, i64 0, i64 1, i32 0, !dbg !1701
  store %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7string, i64 0, i32 0), %_type.0** %tmp.166.sroa.0.0.cast.2879.sroa_idx, align 8, !dbg !1701
  %tmp.166.sroa.2.0.cast.2879.sroa_idx13 = getelementptr inbounds [2 x %IPST.11], [2 x %IPST.11]* %tmpv.921, i64 0, i64 1, i32 1, !dbg !1701
  store i8* %call.260, i8** %tmp.166.sroa.2.0.cast.2879.sroa_idx13, align 8, !dbg !1701
  %field.905 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.167, i64 0, i32 0, !dbg !1701
  %cast.2881 = getelementptr inbounds [2 x %IPST.11], [2 x %IPST.11]* %tmpv.921, i64 0, i64 0, !dbg !1701
  store %IPST.11* %cast.2881, %IPST.11** %field.905, align 8, !dbg !1701
  %field.906 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.167, i64 0, i32 1, !dbg !1701
  store i64 2, i64* %field.906, align 8, !dbg !1701
  %field.907 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.167, i64 0, i32 2, !dbg !1701
  store i64 2, i64* %field.907, align 8, !dbg !1701
  call void @log.Println(i8* nest undef, %IPST.6* byval nonnull %tmp.167), !dbg !1701
  br label %fallthrough.343

fallthrough.343:                                  ; preds = %entry, %then.343
  %call.261 = call { i64, i64 } @os_exec.Cmd.Run(i8* nest undef, %Cmd.0* %call.257), !dbg !1702
  %call.261.fca.0.extract = extractvalue { i64, i64 } %call.261, 0, !dbg !1702
  call void @llvm.dbg.value(metadata i64 %call.261.fca.0.extract, metadata !1703, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1704
  %icmp.385 = icmp eq i64 %call.261.fca.0.extract, 0, !dbg !1705
  br i1 %icmp.385, label %fallthrough.344, label %then.344

then.344:                                         ; preds = %fallthrough.343
  %call.261.fca.1.extract = extractvalue { i64, i64 } %call.261, 1, !dbg !1702
  call void @llvm.dbg.value(metadata i64 %call.261.fca.1.extract, metadata !1703, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1704
  %call.262 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !1706
  %cast.2888 = bitcast { i8*, i64 }* %tmpv.924 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2888, i8* align 8 bitcast ({ i8*, i64 }* @const.318 to i8*), i64 16, i1 false)
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.262, i8* nonnull %cast.2888), !dbg !1706
  %1 = inttoptr i64 %call.261.fca.0.extract to i64*, !dbg !1707
  %.field.ld.1321 = load i64, i64* %1, align 8, !dbg !1707
  %2 = inttoptr i64 %call.261.fca.1.extract to i8*, !dbg !1706
  %tmp.168.sroa.0.0.cast.2895.sroa_idx = getelementptr inbounds [2 x %IPST.11], [2 x %IPST.11]* %tmpv.925, i64 0, i64 0, i32 0, !dbg !1706
  store %_type.0* @string..d, %_type.0** %tmp.168.sroa.0.0.cast.2895.sroa_idx, align 8, !dbg !1706
  %tmp.168.sroa.2.0.cast.2895.sroa_idx14 = getelementptr inbounds [2 x %IPST.11], [2 x %IPST.11]* %tmpv.925, i64 0, i64 0, i32 1, !dbg !1706
  store i8* %call.262, i8** %tmp.168.sroa.2.0.cast.2895.sroa_idx14, align 8, !dbg !1706
  %tmp.169.sroa.0.0.cast.2897.sroa_idx = getelementptr inbounds [2 x %IPST.11], [2 x %IPST.11]* %tmpv.925, i64 0, i64 1, i32 0, !dbg !1706
  %3 = bitcast %_type.0** %tmp.169.sroa.0.0.cast.2897.sroa_idx to i64*, !dbg !1706
  store i64 %.field.ld.1321, i64* %3, align 8, !dbg !1706
  %tmp.169.sroa.2.0.cast.2897.sroa_idx15 = getelementptr inbounds [2 x %IPST.11], [2 x %IPST.11]* %tmpv.925, i64 0, i64 1, i32 1, !dbg !1706
  store i8* %2, i8** %tmp.169.sroa.2.0.cast.2897.sroa_idx15, align 8, !dbg !1706
  %field.916 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.170, i64 0, i32 0, !dbg !1706
  %cast.2899 = getelementptr inbounds [2 x %IPST.11], [2 x %IPST.11]* %tmpv.925, i64 0, i64 0, !dbg !1706
  store %IPST.11* %cast.2899, %IPST.11** %field.916, align 8, !dbg !1706
  %field.917 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.170, i64 0, i32 1, !dbg !1706
  store i64 2, i64* %field.917, align 8, !dbg !1706
  %field.918 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.170, i64 0, i32 2, !dbg !1706
  store i64 2, i64* %field.918, align 8, !dbg !1706
  call void @log.Println(i8* nest undef, %IPST.6* byval nonnull %tmp.170), !dbg !1706
  br label %fallthrough.344

fallthrough.344:                                  ; preds = %fallthrough.343, %then.344
  call void @llvm.dbg.value(metadata i64 %call.261.fca.0.extract, metadata !1708, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1709
  call void @llvm.dbg.value(metadata i64 %call.261.fca.1.extract, metadata !1708, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1709
  ret { i64, i64 } %call.261, !dbg !1710
}

define { i64, i64 } @command_line_arguments.DelRoute(i8* nest nocapture readnone %nest.13, %IP.0* byval %addr, %IP.0* byval %viaAddr, i64 %iName.chunk0, i64 %iName.chunk1, i8 zeroext %debug) #0 !dbg !1711 {
entry:
  %tmp.82 = alloca %IPST.6, align 8
  call void @llvm.dbg.declare(metadata %IP.0* %viaAddr, metadata !1712, metadata !DIExpression()), !dbg !1713
  call void @llvm.dbg.declare(metadata %IP.0* %addr, metadata !1714, metadata !DIExpression()), !dbg !1715
  %args = alloca %IPST.5, align 8
  %tmpv.340 = alloca { i8*, i64 }, align 8
  %tmpv.342 = alloca { i8*, i64 }, align 8
  %tmpv.344 = alloca { i8*, i64 }, align 8
  %tmpv.345 = alloca [3 x %IPST.11], align 8
  %sret.actual.72 = alloca %IPST.5, align 8
  call void @llvm.dbg.value(metadata i64 %iName.chunk0, metadata !1716, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1717
  call void @llvm.dbg.value(metadata i64 %iName.chunk1, metadata !1716, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1717
  call void @llvm.dbg.value(metadata i8 %debug, metadata !1718, metadata !DIExpression()), !dbg !1719
  %0 = bitcast %IPST.5* %args to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0)
  %call.116 = call { i64, i64 } @net.IP.String(i8* nest undef, %IP.0* nonnull %addr), !dbg !1720
  %call.116.fca.0.extract = extractvalue { i64, i64 } %call.116, 0, !dbg !1720
  %call.116.fca.1.extract = extractvalue { i64, i64 } %call.116, 1, !dbg !1720
  %call.117 = call { i64, i64 } @net.IP.String(i8* nest undef, %IP.0* nonnull %viaAddr), !dbg !1722
  %call.117.fca.0.extract = extractvalue { i64, i64 } %call.117, 0, !dbg !1722
  %call.117.fca.1.extract = extractvalue { i64, i64 } %call.117, 1, !dbg !1722
  %call.118 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !1723
  %tmpv.337.sroa.0.0.cast.1211.sroa_cast = bitcast { i8*, i64 }* %tmpv.340 to i64*
  store i64 %call.116.fca.0.extract, i64* %tmpv.337.sroa.0.0.cast.1211.sroa_cast, align 8
  %tmpv.337.sroa.2.0.cast.1211.sroa_idx9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.340, i64 0, i32 1
  store i64 %call.116.fca.1.extract, i64* %tmpv.337.sroa.2.0.cast.1211.sroa_idx9, align 8
  %cast.1214 = bitcast { i8*, i64 }* %tmpv.340 to i8*, !dbg !1723
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.118, i8* nonnull %cast.1214), !dbg !1723
  %call.119 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !1723
  %tmpv.338.sroa.0.0.cast.1216.sroa_cast = bitcast { i8*, i64 }* %tmpv.342 to i64*
  store i64 %call.117.fca.0.extract, i64* %tmpv.338.sroa.0.0.cast.1216.sroa_cast, align 8
  %tmpv.338.sroa.2.0.cast.1216.sroa_idx7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.342, i64 0, i32 1
  store i64 %call.117.fca.1.extract, i64* %tmpv.338.sroa.2.0.cast.1216.sroa_idx7, align 8
  %cast.1219 = bitcast { i8*, i64 }* %tmpv.342 to i8*, !dbg !1723
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.119, i8* nonnull %cast.1219), !dbg !1723
  %call.120 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !1723
  %iName.addr.sroa.0.0.cast.1221.sroa_cast = bitcast { i8*, i64 }* %tmpv.344 to i64*
  store i64 %iName.chunk0, i64* %iName.addr.sroa.0.0.cast.1221.sroa_cast, align 8
  %iName.addr.sroa.2.0.cast.1221.sroa_idx14 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.344, i64 0, i32 1
  store i64 %iName.chunk1, i64* %iName.addr.sroa.2.0.cast.1221.sroa_idx14, align 8
  %cast.1224 = bitcast { i8*, i64 }* %tmpv.344 to i8*, !dbg !1723
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.120, i8* nonnull %cast.1224), !dbg !1723
  %tmp.79.sroa.0.0.cast.1228.sroa_idx = getelementptr inbounds [3 x %IPST.11], [3 x %IPST.11]* %tmpv.345, i64 0, i64 0, i32 0, !dbg !1723
  store %_type.0* @string..d, %_type.0** %tmp.79.sroa.0.0.cast.1228.sroa_idx, align 8, !dbg !1723
  %tmp.79.sroa.2.0.cast.1228.sroa_idx15 = getelementptr inbounds [3 x %IPST.11], [3 x %IPST.11]* %tmpv.345, i64 0, i64 0, i32 1, !dbg !1723
  store i8* %call.118, i8** %tmp.79.sroa.2.0.cast.1228.sroa_idx15, align 8, !dbg !1723
  %tmp.80.sroa.0.0.cast.1230.sroa_idx = getelementptr inbounds [3 x %IPST.11], [3 x %IPST.11]* %tmpv.345, i64 0, i64 1, i32 0, !dbg !1723
  store %_type.0* @string..d, %_type.0** %tmp.80.sroa.0.0.cast.1230.sroa_idx, align 8, !dbg !1723
  %tmp.80.sroa.2.0.cast.1230.sroa_idx16 = getelementptr inbounds [3 x %IPST.11], [3 x %IPST.11]* %tmpv.345, i64 0, i64 1, i32 1, !dbg !1723
  store i8* %call.119, i8** %tmp.80.sroa.2.0.cast.1230.sroa_idx16, align 8, !dbg !1723
  %tmp.81.sroa.0.0.cast.1232.sroa_idx = getelementptr inbounds [3 x %IPST.11], [3 x %IPST.11]* %tmpv.345, i64 0, i64 2, i32 0, !dbg !1723
  store %_type.0* @string..d, %_type.0** %tmp.81.sroa.0.0.cast.1232.sroa_idx, align 8, !dbg !1723
  %tmp.81.sroa.2.0.cast.1232.sroa_idx17 = getelementptr inbounds [3 x %IPST.11], [3 x %IPST.11]* %tmpv.345, i64 0, i64 2, i32 1, !dbg !1723
  store i8* %call.120, i8** %tmp.81.sroa.2.0.cast.1232.sroa_idx17, align 8, !dbg !1723
  %field.375 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.82, i64 0, i32 0, !dbg !1723
  %cast.1235 = getelementptr inbounds [3 x %IPST.11], [3 x %IPST.11]* %tmpv.345, i64 0, i64 0, !dbg !1723
  store %IPST.11* %cast.1235, %IPST.11** %field.375, align 8, !dbg !1723
  %field.376 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.82, i64 0, i32 1, !dbg !1723
  store i64 3, i64* %field.376, align 8, !dbg !1723
  %field.377 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.82, i64 0, i32 2, !dbg !1723
  store i64 3, i64* %field.377, align 8, !dbg !1723
  %call.121 = call { i64, i64 } @fmt.Sprintf(i8* nest undef, i64 ptrtoint ([20 x i8]* @const.163 to i64), i64 19, %IPST.6* byval nonnull %tmp.82), !dbg !1723
  %call.121.fca.0.extract = extractvalue { i64, i64 } %call.121, 0, !dbg !1723
  %call.121.fca.1.extract = extractvalue { i64, i64 } %call.121, 1, !dbg !1723
  call void @llvm.dbg.value(metadata i64 %call.121.fca.0.extract, metadata !1724, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1725
  call void @llvm.dbg.value(metadata i64 %call.121.fca.1.extract, metadata !1724, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1725
  call void @strings.Split(%IPST.5* nonnull sret %sret.actual.72, i8* nest undef, i64 %call.121.fca.0.extract, i64 %call.121.fca.1.extract, i64 ptrtoint ([2 x i8]* @const.149 to i64), i64 1), !dbg !1726
  %cast.1244 = bitcast %IPST.5* %sret.actual.72 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %cast.1244, i64 24, i1 false)
  call void @llvm.dbg.value(metadata %IPST.5* %args, metadata !1727, metadata !DIExpression(DW_OP_deref)), !dbg !1728
  %call.122 = call fastcc { i64, i64 } @command_line_arguments.commandExec(i64 ptrtoint ([6 x i8]* @const.159 to i64), i64 5, %IPST.5* byval nonnull %args, i8 zeroext %debug), !dbg !1729
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0), !dbg !1730
  ret { i64, i64 } %call.122, !dbg !1730
}

declare void @os.Open({ %File.0*, %error.0 }*, i8*, i64, i64) local_unnamed_addr #0

; Function Attrs: noinline
define internal i8 @command_line_arguments.command_line_arguments..thunk7(i8* nest nocapture readnone %nest.47, { %File.0* }* nocapture readonly %__go_thunk_parameter) #4 !dbg !1731 {
entry:
  call void @llvm.dbg.value(metadata { %File.0* }* %__go_thunk_parameter, metadata !1738, metadata !DIExpression()), !dbg !1739
  call void @llvm.dbg.value(metadata i8 0, metadata !1740, metadata !DIExpression()), !dbg !1739
  %call.266 = call i8 @runtime.setdeferretaddr(i8* nest undef, i8* blockaddress(@command_line_arguments.command_line_arguments..thunk7, %label.0)), !dbg !1739
  %0 = and i8 %call.266, 1, !dbg !1739
  %trunc.350 = icmp eq i8 %0, 0, !dbg !1739
  br i1 %trunc.350, label %else.349, label %label.0

else.349:                                         ; preds = %entry
  %field.933 = getelementptr inbounds { %File.0* }, { %File.0* }* %__go_thunk_parameter, i64 0, i32 0, !dbg !1739
  %.field.ld.146 = load %File.0*, %File.0** %field.933, align 8, !dbg !1739
  %call.267 = call { i64, i64 } @os.File.Close(i8* nest undef, %File.0* %.field.ld.146), !dbg !1739
  br label %label.0

label.0:                                          ; preds = %entry, %else.349
  call void @llvm.dbg.value(metadata i8 0, metadata !1740, metadata !DIExpression()), !dbg !1739
  ret i8 0, !dbg !1739
}

declare void @os.File.Read({ i64, %error.0 }*, i8*, %File.0*, { i8*, i64, i64 }*) #0

declare %Reader.0* @bufio.NewReader(i8*, i64, i64) local_unnamed_addr #0

define internal i8 @command_line_arguments.GetNetGateway..func1(i8* nest nocapture readnone %nest.15, i64 %s.chunk0, i64 %s.chunk1) #0 !dbg !1741 {
entry:
  %sret.actual.87 = alloca { i64, %error.0 }, align 8
  call void @llvm.dbg.value(metadata i64 %s.chunk0, metadata !1744, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1745
  call void @llvm.dbg.value(metadata i64 %s.chunk1, metadata !1744, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1745
  call void @llvm.dbg.value(metadata i8 0, metadata !1746, metadata !DIExpression()), !dbg !1747
  call void @strconv.ParseUint({ i64, %error.0 }* nonnull sret %sret.actual.87, i8* nest undef, i64 %s.chunk0, i64 %s.chunk1, i64 16, i64 8), !dbg !1748
  %tmpv.416.sroa.0.0.cast.1488.sroa_idx = getelementptr inbounds { i64, %error.0 }, { i64, %error.0 }* %sret.actual.87, i64 0, i32 0, !dbg !1748
  %tmpv.416.sroa.0.0.copyload2 = load i64, i64* %tmpv.416.sroa.0.0.cast.1488.sroa_idx, align 8, !dbg !1748
  call void @llvm.dbg.value(metadata i64 %tmpv.416.sroa.0.0.copyload2, metadata !1750, metadata !DIExpression()), !dbg !1751
  %trunc.154 = trunc i64 %tmpv.416.sroa.0.0.copyload2 to i8, !dbg !1752
  call void @llvm.dbg.value(metadata i8 %trunc.154, metadata !1746, metadata !DIExpression()), !dbg !1747
  ret i8 %trunc.154, !dbg !1753
}

declare void @bufio.Reader.ReadLine({ { i8*, i64, i64 }, i8, %error.0 }*, i8*, %Reader.0*) local_unnamed_addr #0

declare %Buffer.0* @bytes.NewBuffer(i8*, { i8*, i64, i64 }*) local_unnamed_addr #0

declare void @bytes.Buffer.Read({ i64, %error.0 }*, i8*, %Buffer.0*, { i8*, i64, i64 }*) #0

declare %Scanner.0* @bufio.NewScanner(i8*, i64, i64) local_unnamed_addr #0

declare void @bufio.Scanner.Split(i8*, %Scanner.0*, %__go_descriptor.18*) local_unnamed_addr #0

declare { i64, i64 } @bufio.Scanner.Text(i8*, %Scanner.0*) local_unnamed_addr #0

declare void @runtime.growslice(%IPST.7*, i8*, %_type.0*, %IPST.7*, i64) local_unnamed_addr #0

declare i8 @bufio.Scanner.Scan(i8*, %Scanner.0*) local_unnamed_addr #0

declare void @runtime.stringtoslicebyte(%IPST.7*, i8*, i8*, i64, i64) local_unnamed_addr #0

declare i8 @bytes.Equal(i8*, { i8*, i64, i64 }*, { i8*, i64, i64 }*) local_unnamed_addr #0

declare { i64, i64 } @__go_string_slice(i8*, i64, i64, i64, i64) local_unnamed_addr #0

declare void @net.IPv4(%IP.0*, i8*, i8, i8, i8, i8) local_unnamed_addr #0

declare void @strconv.ParseUint({ i64, %error.0 }*, i8*, i64, i64, i64, i64) local_unnamed_addr #0

define void @command_line_arguments.serverConn.hadError(i8* nest nocapture readnone %nest.24, %.command-line-arguments.serverConn.0* %c, i8 zeroext %errInRead) #0 !dbg !1754 {
entry:
  call void @llvm.dbg.value(metadata %.command-line-arguments.serverConn.0* %c, metadata !1803, metadata !DIExpression()), !dbg !1804
  call void @llvm.dbg.value(metadata i8 %errInRead, metadata !1805, metadata !DIExpression()), !dbg !1806
  %icmp.249 = icmp eq i8 %errInRead, 0, !dbg !1807
  %icmp.248 = icmp eq %.command-line-arguments.serverConn.0* %c, null, !dbg !1808
  br i1 %icmp.249, label %then.229, label %fallthrough.229

then.229:                                         ; preds = %entry
  br i1 %icmp.248, label %then.230, label %fallthrough.229.thread

fallthrough.229:                                  ; preds = %entry
  br i1 %icmp.248, label %then.231, label %else.231

then.230:                                         ; preds = %then.229
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1809
  unreachable

fallthrough.229.thread:                           ; preds = %then.229
  %tmpv.603.sroa.0.0.cast.2107.sroa_idx = getelementptr inbounds %.command-line-arguments.serverConn.0, %.command-line-arguments.serverConn.0* %c, i64 0, i32 0, i32 0
  %tmpv.603.sroa.0.0.copyload = load { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }** %tmpv.603.sroa.0.0.cast.2107.sroa_idx, align 8
  %tmpv.603.sroa.2.0.cast.2107.sroa_idx1 = getelementptr inbounds %.command-line-arguments.serverConn.0, %.command-line-arguments.serverConn.0* %c, i64 0, i32 0, i32 1
  %tmpv.603.sroa.2.0.copyload = load i8*, i8** %tmpv.603.sroa.2.0.cast.2107.sroa_idx1, align 8
  %field.632 = getelementptr inbounds { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }, { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }* %tmpv.603.sroa.0.0.copyload, i64 0, i32 1, !dbg !1810
  %.field.ld.83 = load { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)** %field.632, align 8, !dbg !1810
  %call.193 = call { i64, i64 } %.field.ld.83(i8* nest undef, i8* %tmpv.603.sroa.2.0.copyload), !dbg !1810
  br label %else.231

then.231:                                         ; preds = %fallthrough.229
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1811
  unreachable

else.231:                                         ; preds = %fallthrough.229.thread, %fallthrough.229
  %field.634 = getelementptr inbounds %.command-line-arguments.serverConn.0, %.command-line-arguments.serverConn.0* %c, i64 0, i32 6, !dbg !1811
  store i8 0, i8* %field.634, align 1, !dbg !1812
  %field.635 = getelementptr inbounds %.command-line-arguments.serverConn.0, %.command-line-arguments.serverConn.0* %c, i64 0, i32 3, !dbg !1813
  %.field.ld.84 = load %Server.0*, %Server.0** %field.635, align 8, !dbg !1813
  %field.636 = getelementptr inbounds %.command-line-arguments.serverConn.0, %.command-line-arguments.serverConn.0* %c, i64 0, i32 1, !dbg !1814
  %.field.ld.85 = load i64, i64* %field.636, align 8, !dbg !1814
  call void @command_line_arguments.Server.removeClientConn(i8* nest undef, %Server.0* %.field.ld.84, i64 %.field.ld.85), !dbg !1815
  ret void
}

define { i64, i64 } @command_line_arguments.Server.Close(i8* nest nocapture readnone %nest.35, %Server.0* %s) #0 !dbg !1816 {
entry:
  call void @llvm.dbg.value(metadata %Server.0* %s, metadata !1819, metadata !DIExpression()), !dbg !1820
  %icmp.340 = icmp eq %Server.0* %s, null, !dbg !1821
  br i1 %icmp.340, label %then.314, label %else.314

then.314:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1821
  unreachable

else.314:                                         ; preds = %entry
  %field.810 = getelementptr inbounds %Server.0, %Server.0* %s, i64 0, i32 4, !dbg !1821
  store i8 1, i8* %field.810, align 1, !dbg !1823
  %field.811 = getelementptr inbounds %Server.0, %Server.0* %s, i64 0, i32 13, !dbg !1824
  call void @command_line_arguments.Reverser.Close(i8* nest undef, %Reverser.0* nonnull %field.811), !dbg !1825
  %tmpv.837.sroa.0.0.cast.2626.sroa_idx = getelementptr inbounds %Server.0, %Server.0* %s, i64 0, i32 1, i32 0
  %tmpv.837.sroa.0.0.copyload = load { %_type.0*, void ({ %Conn.0, %error.0 }*, i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)* }*, { %_type.0*, void ({ %Conn.0, %error.0 }*, i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)* }** %tmpv.837.sroa.0.0.cast.2626.sroa_idx, align 8
  %tmpv.837.sroa.2.0.cast.2626.sroa_idx4 = getelementptr inbounds %Server.0, %Server.0* %s, i64 0, i32 1, i32 1
  %tmpv.837.sroa.2.0.copyload = load i8*, i8** %tmpv.837.sroa.2.0.cast.2626.sroa_idx4, align 8
  %field.814 = getelementptr inbounds { %_type.0*, void ({ %Conn.0, %error.0 }*, i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)* }, { %_type.0*, void ({ %Conn.0, %error.0 }*, i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)* }* %tmpv.837.sroa.0.0.copyload, i64 0, i32 3, !dbg !1826
  %.field.ld.119 = load { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)** %field.814, align 8, !dbg !1826
  %call.237 = call { i64, i64 } %.field.ld.119(i8* nest undef, i8* %tmpv.837.sroa.2.0.copyload), !dbg !1826
  %call.237.fca.0.extract = extractvalue { i64, i64 } %call.237, 0, !dbg !1826
  call void @llvm.dbg.value(metadata i64 %call.237.fca.0.extract, metadata !1827, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1828
  %icmp.343 = icmp eq i64 %call.237.fca.0.extract, 0, !dbg !1829
  br i1 %icmp.343, label %else.318, label %then.317

then.317:                                         ; preds = %else.318, %else.314
  %merge = phi { i64, i64 } [ %call.237, %else.314 ], [ %.call.238, %else.318 ]
  call void @llvm.dbg.value(metadata i64 %call.237.fca.0.extract, metadata !1830, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1831
  ret { i64, i64 } %merge, !dbg !1832

else.318:                                         ; preds = %else.314
  %field.817 = getelementptr inbounds %Server.0, %Server.0* %s, i64 0, i32 12, !dbg !1833
  %.field.ld.120 = load %Interface.0*, %Interface.0** %field.817, align 8, !dbg !1833
  %call.238 = call { i64, i64 } @github_com_twitchyliquid64_subnet_vendor_github_com_songgao_water.Interface.Close..stub(i8* nest undef, %Interface.0* %.field.ld.120), !dbg !1834
  %call.238.fca.0.extract = extractvalue { i64, i64 } %call.238, 0, !dbg !1834
  call void @llvm.dbg.value(metadata i64 %call.238.fca.0.extract, metadata !1827, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1828
  %icmp.345 = icmp eq i64 %call.238.fca.0.extract, 0, !dbg !1835
  %.call.238 = select i1 %icmp.345, { i64, i64 } zeroinitializer, { i64, i64 } %call.238
  br label %then.317
}

define { i64, i64 } @command_line_arguments.Server.Init(i8* nest nocapture readnone %nest.26, %Server.0* %s, i64 %servHost.chunk0, i64 %servHost.chunk1) #0 !dbg !1836 {
entry:
  %tmp.141 = alloca %IPST.6, align 8
  %sret.actual.126 = alloca { %Listener.0, %error.0 }, align 8
  %tmpv.651 = alloca %Listener.0, align 8
  %tmpv.664 = alloca %IP.0, align 8
  %tmpv.669 = alloca %IP.0, align 8
  %tmpv.673 = alloca { i8*, i64 }, align 8
  %tmpv.675 = alloca { i8*, i64 }, align 8
  %tmpv.677 = alloca { i8*, i64 }, align 8
  %tmpv.679 = alloca { i8*, i64 }, align 8
  %tmpv.680 = alloca [4 x %IPST.11], align 8
  call void @llvm.dbg.value(metadata %Server.0* %s, metadata !1839, metadata !DIExpression()), !dbg !1840
  call void @llvm.dbg.value(metadata i64 %servHost.chunk0, metadata !1841, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1842
  call void @llvm.dbg.value(metadata i64 %servHost.chunk1, metadata !1841, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1842
  %icmp.256 = icmp eq %Server.0* %s, null, !dbg !1843
  br i1 %icmp.256, label %then.237, label %else.237

then.237:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1843
  unreachable

else.237:                                         ; preds = %entry
  %field.681 = getelementptr inbounds %Server.0, %Server.0* %s, i64 0, i32 0, !dbg !1843
  %.field.ld.88 = load %Config.0*, %Config.0** %field.681, align 8, !dbg !1843
  call void @crypto_tls.Listen({ %Listener.0, %error.0 }* nonnull sret %sret.actual.126, i8* nest undef, i64 ptrtoint ([4 x i8]* @const.98 to i64), i64 3, i64 %servHost.chunk0, i64 %servHost.chunk1, %Config.0* %.field.ld.88), !dbg !1844
  %tmpv.647.sroa.0.0.cast.2271.sroa_cast = bitcast { %Listener.0, %error.0 }* %sret.actual.126 to i8*, !dbg !1844
  %tmpv.647.sroa.3.0.cast.2271.sroa_idx26 = getelementptr inbounds { %Listener.0, %error.0 }, { %Listener.0, %error.0 }* %sret.actual.126, i64 0, i32 1, !dbg !1844
  %tmpv.647.sroa.3.0.cast.2271.sroa_cast = bitcast %error.0* %tmpv.647.sroa.3.0.cast.2271.sroa_idx26 to i64*, !dbg !1844
  %tmpv.647.sroa.3.0.copyload27 = load i64, i64* %tmpv.647.sroa.3.0.cast.2271.sroa_cast, align 8, !dbg !1844
  %tmpv.647.sroa.4.0.cast.2271.sroa_idx28 = getelementptr inbounds { %Listener.0, %error.0 }, { %Listener.0, %error.0 }* %sret.actual.126, i64 0, i32 1, i32 1, !dbg !1844
  %tmpv.647.sroa.4.0.cast.2271.sroa_cast = bitcast i8** %tmpv.647.sroa.4.0.cast.2271.sroa_idx28 to i64*, !dbg !1844
  %tmpv.647.sroa.4.0.copyload29 = load i64, i64* %tmpv.647.sroa.4.0.cast.2271.sroa_cast, align 8, !dbg !1844
  %tmpv.65135 = bitcast %Listener.0* %tmpv.651 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %tmpv.65135, i8* nonnull align 8 %tmpv.647.sroa.0.0.cast.2271.sroa_cast, i64 16, i1 false)
  %cast.2274 = bitcast %Listener.0* %tmpv.651 to i8*
  %field.684 = getelementptr inbounds %Server.0, %Server.0* %s, i64 0, i32 1, !dbg !1845
  %runtime.writeBarrier.ld.13 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1846
  %icmp.259 = icmp eq i32 %runtime.writeBarrier.ld.13, 0, !dbg !1846
  %cast.2282 = bitcast %Listener.0* %field.684 to i8*, !dbg !1846
  br i1 %icmp.259, label %else.240, label %else.239

fallthrough.239:                                  ; preds = %else.239, %else.240
  call void @llvm.dbg.value(metadata i64 %tmpv.647.sroa.3.0.copyload27, metadata !1847, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1848
  call void @llvm.dbg.value(metadata i64 %tmpv.647.sroa.4.0.copyload29, metadata !1847, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1848
  %icmp.260 = icmp eq i64 %tmpv.647.sroa.3.0.copyload27, 0, !dbg !1849
  br i1 %icmp.260, label %else.242, label %then.241

else.239:                                         ; preds = %else.237
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @net.Listener..d, i64 0, i32 0), i8* nonnull %cast.2282, i8* nonnull %cast.2274), !dbg !1846
  br label %fallthrough.239

else.240:                                         ; preds = %else.237
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2282, i8* nonnull align 8 %cast.2274, i64 16, i1 false), !dbg !1846
  br label %fallthrough.239

then.241:                                         ; preds = %fallthrough.239
  %ld.234.fca.0.insert = insertvalue { i64, i64 } undef, i64 %tmpv.647.sroa.3.0.copyload27, 0, !dbg !1850
  %ld.234.fca.1.insert = insertvalue { i64, i64 } %ld.234.fca.0.insert, i64 %tmpv.647.sroa.4.0.copyload29, 1, !dbg !1850
  ret { i64, i64 } %ld.234.fca.1.insert, !dbg !1850

else.242:                                         ; preds = %fallthrough.239
  %field.686 = getelementptr inbounds %Server.0, %Server.0* %s, i64 0, i32 12, !dbg !1851
  %.field.ld.89 = load %Interface.0*, %Interface.0** %field.686, align 8, !dbg !1851
  %call.210 = call { i64, i64 } @github_com_twitchyliquid64_subnet_vendor_github_com_songgao_water.Interface.Name(i8* nest undef, %Interface.0* %.field.ld.89), !dbg !1852
  %call.210.fca.0.extract = extractvalue { i64, i64 } %call.210, 0, !dbg !1852
  %call.210.fca.1.extract = extractvalue { i64, i64 } %call.210, 1, !dbg !1852
  %field.687 = getelementptr inbounds %Server.0, %Server.0* %s, i64 0, i32 2, !dbg !1853
  %field.688 = getelementptr inbounds %Server.0, %Server.0* %s, i64 0, i32 3, !dbg !1854
  %.field.ld.90 = load %IPNet.0*, %IPNet.0** %field.688, align 8, !dbg !1854
  %call.211 = call { i64, i64 } @command_line_arguments.SetDevIP(i8* nest undef, i64 %call.210.fca.0.extract, i64 %call.210.fca.1.extract, %IP.0* byval nonnull %field.687, %IPNet.0* %.field.ld.90, i8 zeroext 0), !dbg !1855
  %call.211.fca.0.extract = extractvalue { i64, i64 } %call.211, 0, !dbg !1855
  call void @llvm.dbg.value(metadata i64 %call.211.fca.0.extract, metadata !1847, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1848
  %icmp.264 = icmp eq i64 %call.211.fca.0.extract, 0, !dbg !1856
  br i1 %icmp.264, label %else.246, label %then.245

then.245:                                         ; preds = %else.242
  ret { i64, i64 } %call.211, !dbg !1857

else.246:                                         ; preds = %else.242
  %.field.ld.91 = load %Interface.0*, %Interface.0** %field.686, align 8, !dbg !1858
  %call.212 = call { i64, i64 } @github_com_twitchyliquid64_subnet_vendor_github_com_songgao_water.Interface.Name(i8* nest undef, %Interface.0* %.field.ld.91), !dbg !1859
  %cast.2314 = bitcast %IP.0* %tmpv.664 to i8*
  %cast.2315 = bitcast %IP.0* %field.687 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2314, i8* nonnull align 8 %cast.2315, i64 24, i1 false)
  %call.213 = call { i64, i64 } @net.IP.String(i8* nest undef, %IP.0* nonnull %tmpv.664), !dbg !1860
  %.field.ld.92 = load %IPNet.0*, %IPNet.0** %field.688, align 8, !dbg !1861
  %icmp.268 = icmp eq %IPNet.0* %.field.ld.92, null, !dbg !1862
  br i1 %icmp.268, label %then.249, label %else.249

then.249:                                         ; preds = %else.246
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1862
  unreachable

else.249:                                         ; preds = %else.246
  %call.213.fca.1.extract = extractvalue { i64, i64 } %call.213, 1, !dbg !1860
  %call.213.fca.0.extract = extractvalue { i64, i64 } %call.213, 0, !dbg !1860
  %call.212.fca.1.extract = extractvalue { i64, i64 } %call.212, 1, !dbg !1859
  %call.212.fca.0.extract = extractvalue { i64, i64 } %call.212, 0, !dbg !1859
  %field.693 = getelementptr inbounds %IPNet.0, %IPNet.0* %.field.ld.92, i64 0, i32 1, !dbg !1862
  %cast.2322 = bitcast %IP.0* %tmpv.669 to i8*
  %cast.2323 = bitcast %IPMask.0* %field.693 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2322, i8* nonnull align 8 %cast.2323, i64 24, i1 false)
  %call.214 = call { i64, i64 } @net.IP.String(i8* nest undef, %IP.0* nonnull %tmpv.669), !dbg !1863
  %call.214.fca.0.extract = extractvalue { i64, i64 } %call.214, 0, !dbg !1863
  %call.214.fca.1.extract = extractvalue { i64, i64 } %call.214, 1, !dbg !1863
  %call.215 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !1864
  %servHost.addr.sroa.0.0.cast.2328.sroa_cast = bitcast { i8*, i64 }* %tmpv.673 to i64*
  store i64 %servHost.chunk0, i64* %servHost.addr.sroa.0.0.cast.2328.sroa_cast, align 8
  %servHost.addr.sroa.3.0.cast.2328.sroa_idx30 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.673, i64 0, i32 1
  store i64 %servHost.chunk1, i64* %servHost.addr.sroa.3.0.cast.2328.sroa_idx30, align 8
  %cast.2331 = bitcast { i8*, i64 }* %tmpv.673 to i8*, !dbg !1864
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.215, i8* nonnull %cast.2331), !dbg !1864
  %call.216 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !1864
  %tmpv.662.sroa.0.0.cast.2333.sroa_cast = bitcast { i8*, i64 }* %tmpv.675 to i64*
  store i64 %call.212.fca.0.extract, i64* %tmpv.662.sroa.0.0.cast.2333.sroa_cast, align 8
  %tmpv.662.sroa.2.0.cast.2333.sroa_idx7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.675, i64 0, i32 1
  store i64 %call.212.fca.1.extract, i64* %tmpv.662.sroa.2.0.cast.2333.sroa_idx7, align 8
  %cast.2336 = bitcast { i8*, i64 }* %tmpv.675 to i8*, !dbg !1864
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.216, i8* nonnull %cast.2336), !dbg !1864
  %call.217 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !1864
  %tmpv.666.sroa.0.0.cast.2338.sroa_cast = bitcast { i8*, i64 }* %tmpv.677 to i64*
  store i64 %call.213.fca.0.extract, i64* %tmpv.666.sroa.0.0.cast.2338.sroa_cast, align 8
  %tmpv.666.sroa.2.0.cast.2338.sroa_idx5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.677, i64 0, i32 1
  store i64 %call.213.fca.1.extract, i64* %tmpv.666.sroa.2.0.cast.2338.sroa_idx5, align 8
  %cast.2341 = bitcast { i8*, i64 }* %tmpv.677 to i8*, !dbg !1864
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.217, i8* nonnull %cast.2341), !dbg !1864
  %call.218 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !1864
  %tmpv.671.sroa.0.0.cast.2343.sroa_cast = bitcast { i8*, i64 }* %tmpv.679 to i64*
  store i64 %call.214.fca.0.extract, i64* %tmpv.671.sroa.0.0.cast.2343.sroa_cast, align 8
  %tmpv.671.sroa.2.0.cast.2343.sroa_idx3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.679, i64 0, i32 1
  store i64 %call.214.fca.1.extract, i64* %tmpv.671.sroa.2.0.cast.2343.sroa_idx3, align 8
  %cast.2346 = bitcast { i8*, i64 }* %tmpv.679 to i8*, !dbg !1864
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.218, i8* nonnull %cast.2346), !dbg !1864
  %tmp.137.sroa.0.0.cast.2351.sroa_idx = getelementptr inbounds [4 x %IPST.11], [4 x %IPST.11]* %tmpv.680, i64 0, i64 0, i32 0, !dbg !1864
  store %_type.0* @string..d, %_type.0** %tmp.137.sroa.0.0.cast.2351.sroa_idx, align 8, !dbg !1864
  %tmp.137.sroa.2.0.cast.2351.sroa_idx31 = getelementptr inbounds [4 x %IPST.11], [4 x %IPST.11]* %tmpv.680, i64 0, i64 0, i32 1, !dbg !1864
  store i8* %call.215, i8** %tmp.137.sroa.2.0.cast.2351.sroa_idx31, align 8, !dbg !1864
  %tmp.138.sroa.0.0.cast.2353.sroa_idx = getelementptr inbounds [4 x %IPST.11], [4 x %IPST.11]* %tmpv.680, i64 0, i64 1, i32 0, !dbg !1864
  store %_type.0* @string..d, %_type.0** %tmp.138.sroa.0.0.cast.2353.sroa_idx, align 8, !dbg !1864
  %tmp.138.sroa.2.0.cast.2353.sroa_idx32 = getelementptr inbounds [4 x %IPST.11], [4 x %IPST.11]* %tmpv.680, i64 0, i64 1, i32 1, !dbg !1864
  store i8* %call.216, i8** %tmp.138.sroa.2.0.cast.2353.sroa_idx32, align 8, !dbg !1864
  %tmp.139.sroa.0.0.cast.2355.sroa_idx = getelementptr inbounds [4 x %IPST.11], [4 x %IPST.11]* %tmpv.680, i64 0, i64 2, i32 0, !dbg !1864
  store %_type.0* @string..d, %_type.0** %tmp.139.sroa.0.0.cast.2355.sroa_idx, align 8, !dbg !1864
  %tmp.139.sroa.2.0.cast.2355.sroa_idx33 = getelementptr inbounds [4 x %IPST.11], [4 x %IPST.11]* %tmpv.680, i64 0, i64 2, i32 1, !dbg !1864
  store i8* %call.217, i8** %tmp.139.sroa.2.0.cast.2355.sroa_idx33, align 8, !dbg !1864
  %tmp.140.sroa.0.0.cast.2357.sroa_idx = getelementptr inbounds [4 x %IPST.11], [4 x %IPST.11]* %tmpv.680, i64 0, i64 3, i32 0, !dbg !1864
  store %_type.0* @string..d, %_type.0** %tmp.140.sroa.0.0.cast.2357.sroa_idx, align 8, !dbg !1864
  %tmp.140.sroa.2.0.cast.2357.sroa_idx34 = getelementptr inbounds [4 x %IPST.11], [4 x %IPST.11]* %tmpv.680, i64 0, i64 3, i32 1, !dbg !1864
  store i8* %call.218, i8** %tmp.140.sroa.2.0.cast.2357.sroa_idx34, align 8, !dbg !1864
  %field.702 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.141, i64 0, i32 0, !dbg !1864
  %cast.2360 = getelementptr inbounds [4 x %IPST.11], [4 x %IPST.11]* %tmpv.680, i64 0, i64 0, !dbg !1864
  store %IPST.11* %cast.2360, %IPST.11** %field.702, align 8, !dbg !1864
  %field.703 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.141, i64 0, i32 1, !dbg !1864
  store i64 4, i64* %field.703, align 8, !dbg !1864
  %field.704 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.141, i64 0, i32 2, !dbg !1864
  store i64 4, i64* %field.704, align 8, !dbg !1864
  call void @log.Printf(i8* nest undef, i64 ptrtoint ([56 x i8]* @const.293 to i64), i64 55, %IPST.6* byval nonnull %tmp.141), !dbg !1864
  ret { i64, i64 } %call.211, !dbg !1865
}

define void @command_line_arguments.Server.Run(i8* nest nocapture readnone %nest.27, %Server.0* %s) #0 !dbg !1866 {
entry:
  %tmpv.682 = alloca { %Server.0* }, align 8
  %tmpv.684 = alloca { %Server.0* }, align 8
  %tmpv.694 = alloca { %Interface.0*, {}*, %WaitGroup.0*, i8* }, align 8
  %tmpv.704 = alloca { %Interface.0*, {}*, %WaitGroup.0*, i8* }, align 8
  call void @llvm.dbg.value(metadata %Server.0* %s, metadata !1869, metadata !DIExpression()), !dbg !1870
  %call.219 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.4x.5a0.0.1command_line_arguments.Server.5, i64 0, i32 0)), !dbg !1871
  %field.705 = getelementptr inbounds { %Server.0* }, { %Server.0* }* %tmpv.682, i64 0, i32 0, !dbg !1871
  store %Server.0* %s, %Server.0** %field.705, align 8, !dbg !1871
  %cast.2373 = bitcast { %Server.0* }* %tmpv.682 to i8*, !dbg !1871
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.4x.5a0.0.1command_line_arguments.Server.5, i64 0, i32 0), i8* %call.219, i8* nonnull %cast.2373), !dbg !1871
  call void @__go_go(i8* nest undef, %__go_descriptor.63* bitcast (void (i8*, { %Server.0* }*)* @command_line_arguments.command_line_arguments..thunk10 to %__go_descriptor.63*), i8* %call.219), !dbg !1871
  %call.220 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.4x.5a0.0.1command_line_arguments.Server.5, i64 0, i32 0)), !dbg !1872
  %field.706 = getelementptr inbounds { %Server.0* }, { %Server.0* }* %tmpv.684, i64 0, i32 0, !dbg !1872
  store %Server.0* %s, %Server.0** %field.706, align 8, !dbg !1872
  %cast.2380 = bitcast { %Server.0* }* %tmpv.684 to i8*, !dbg !1872
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.4x.5a0.0.1command_line_arguments.Server.5, i64 0, i32 0), i8* %call.220, i8* nonnull %cast.2380), !dbg !1872
  call void @__go_go(i8* nest undef, %__go_descriptor.63* bitcast (void (i8*, { %Server.0* }*)* @command_line_arguments.command_line_arguments..thunk11 to %__go_descriptor.63*), i8* %call.220), !dbg !1872
  %icmp.269 = icmp eq %Server.0* %s, null, !dbg !1873
  br i1 %icmp.269, label %then.250, label %else.250

then.250:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1873
  unreachable

else.250:                                         ; preds = %entry
  %field.707 = getelementptr inbounds %Server.0, %Server.0* %s, i64 0, i32 12, !dbg !1873
  %0 = bitcast %Interface.0** %field.707 to i64*, !dbg !1873
  %.field.ld.931 = load i64, i64* %0, align 8, !dbg !1873
  %field.708 = getelementptr inbounds %Server.0, %Server.0* %s, i64 0, i32 11, !dbg !1874
  %1 = bitcast {}** %field.708 to i64*, !dbg !1874
  %.field.ld.942 = load i64, i64* %1, align 8, !dbg !1874
  %field.709 = getelementptr inbounds %Server.0, %Server.0* %s, i64 0, i32 14, !dbg !1875
  %field.710 = getelementptr inbounds %Server.0, %Server.0* %s, i64 0, i32 4, !dbg !1876
  %call.221 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.4x.5a0.0.1github_com_twitchyliquid64_subnet_vendor_github_com_songgao_water.Interface.2a1.0chan.0.1command_line_arguments.IPPacket.2a2.0.1sync.WaitGroup.2a3.0.1bool.5, i64 0, i32 0)), !dbg !1877
  %2 = bitcast { %Interface.0*, {}*, %WaitGroup.0*, i8* }* %tmpv.694 to i64*, !dbg !1877
  store i64 %.field.ld.931, i64* %2, align 8, !dbg !1877
  %field.712 = getelementptr inbounds { %Interface.0*, {}*, %WaitGroup.0*, i8* }, { %Interface.0*, {}*, %WaitGroup.0*, i8* }* %tmpv.694, i64 0, i32 1, !dbg !1877
  %3 = bitcast {}** %field.712 to i64*, !dbg !1877
  store i64 %.field.ld.942, i64* %3, align 8, !dbg !1877
  %field.713 = getelementptr inbounds { %Interface.0*, {}*, %WaitGroup.0*, i8* }, { %Interface.0*, {}*, %WaitGroup.0*, i8* }* %tmpv.694, i64 0, i32 2, !dbg !1877
  store %WaitGroup.0* %field.709, %WaitGroup.0** %field.713, align 8, !dbg !1877
  %field.714 = getelementptr inbounds { %Interface.0*, {}*, %WaitGroup.0*, i8* }, { %Interface.0*, {}*, %WaitGroup.0*, i8* }* %tmpv.694, i64 0, i32 3, !dbg !1877
  store i8* %field.710, i8** %field.714, align 8, !dbg !1877
  %cast.2391 = bitcast { %Interface.0*, {}*, %WaitGroup.0*, i8* }* %tmpv.694 to i8*, !dbg !1877
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.4x.5a0.0.1github_com_twitchyliquid64_subnet_vendor_github_com_songgao_water.Interface.2a1.0chan.0.1command_line_arguments.IPPacket.2a2.0.1sync.WaitGroup.2a3.0.1bool.5, i64 0, i32 0), i8* %call.221, i8* nonnull %cast.2391), !dbg !1877
  call void @__go_go(i8* nest undef, %__go_descriptor.63* bitcast (void (i8*, { %Interface.0*, {}*, %WaitGroup.0*, i8* }*)* @command_line_arguments.command_line_arguments..thunk12 to %__go_descriptor.63*), i8* %call.221), !dbg !1877
  %.field.ld.953 = load i64, i64* %0, align 8, !dbg !1878
  %field.716 = getelementptr inbounds %Server.0, %Server.0* %s, i64 0, i32 10, !dbg !1879
  %4 = bitcast {}** %field.716 to i64*, !dbg !1879
  %.field.ld.964 = load i64, i64* %4, align 8, !dbg !1879
  %call.222 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.4x.5a0.0.1github_com_twitchyliquid64_subnet_vendor_github_com_songgao_water.Interface.2a1.0chan.0.1command_line_arguments.IPPacket.2a2.0.1sync.WaitGroup.2a3.0.1bool.5, i64 0, i32 0)), !dbg !1880
  %5 = bitcast { %Interface.0*, {}*, %WaitGroup.0*, i8* }* %tmpv.704 to i64*, !dbg !1880
  store i64 %.field.ld.953, i64* %5, align 8, !dbg !1880
  %field.720 = getelementptr inbounds { %Interface.0*, {}*, %WaitGroup.0*, i8* }, { %Interface.0*, {}*, %WaitGroup.0*, i8* }* %tmpv.704, i64 0, i32 1, !dbg !1880
  %6 = bitcast {}** %field.720 to i64*, !dbg !1880
  store i64 %.field.ld.964, i64* %6, align 8, !dbg !1880
  %field.721 = getelementptr inbounds { %Interface.0*, {}*, %WaitGroup.0*, i8* }, { %Interface.0*, {}*, %WaitGroup.0*, i8* }* %tmpv.704, i64 0, i32 2, !dbg !1880
  store %WaitGroup.0* %field.709, %WaitGroup.0** %field.721, align 8, !dbg !1880
  %field.722 = getelementptr inbounds { %Interface.0*, {}*, %WaitGroup.0*, i8* }, { %Interface.0*, {}*, %WaitGroup.0*, i8* }* %tmpv.704, i64 0, i32 3, !dbg !1880
  store i8* %field.710, i8** %field.722, align 8, !dbg !1880
  %cast.2402 = bitcast { %Interface.0*, {}*, %WaitGroup.0*, i8* }* %tmpv.704 to i8*, !dbg !1880
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.4x.5a0.0.1github_com_twitchyliquid64_subnet_vendor_github_com_songgao_water.Interface.2a1.0chan.0.1command_line_arguments.IPPacket.2a2.0.1sync.WaitGroup.2a3.0.1bool.5, i64 0, i32 0), i8* %call.222, i8* nonnull %cast.2402), !dbg !1880
  call void @__go_go(i8* nest undef, %__go_descriptor.63* bitcast (void (i8*, { %Interface.0*, {}*, %WaitGroup.0*, i8* }*)* @command_line_arguments.command_line_arguments..thunk13 to %__go_descriptor.63*), i8* %call.222), !dbg !1880
  ret void
}

define void @command_line_arguments.Server.acceptRoutine(i8* nest nocapture readnone %nest.28, %Server.0* %s) #0 personality i32 (i32, i32, i64, i8*, i8*)* @__gccgo_personality_v0 !dbg !1881 {
entry:
  %tmp.143 = alloca %IPST.6, align 8
  %tmpv.705 = alloca i8, align 1
  %tmpv.713 = alloca { %WaitGroup.0* }, align 8
  %tmpv.715 = alloca %Time.0, align 8
  %sret.actual.133 = alloca %Time.0, align 8
  %tmpv.716 = alloca %Time.0, align 8
  %sret.actual.134 = alloca %Time.0, align 8
  %sret.actual.136 = alloca { %Conn.0, %error.0 }, align 8
  %tmpv.725 = alloca { i8*, i64 }, align 8
  %tmpv.726 = alloca [1 x %IPST.11], align 8
  call void @llvm.dbg.value(metadata %Server.0* %s, metadata !1882, metadata !DIExpression()), !dbg !1883
  store i8 0, i8* %tmpv.705, align 1
  call void @llvm.dbg.value(metadata %TCPListener.0* null, metadata !1884, metadata !DIExpression()), !dbg !1899
  %icmp.277 = icmp eq %Server.0* %s, null, !dbg !1900
  br i1 %icmp.277, label %then.258, label %fallthrough.258

finally.4:                                        ; preds = %fallthrough.266, %fallthrough.264, %cont.161, %pad.8.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, %catchpad.4
  %ehtmp.4.sroa.0.0 = phi i8* [ %ex2.4.fca.0.extract, %catchpad.4 ], [ undef, %pad.8.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp ], [ undef, %cont.161 ], [ undef, %fallthrough.264 ], [ undef, %fallthrough.266 ]
  %ehtmp.4.sroa.2.0 = phi i32 [ %ex2.4.fca.1.extract, %catchpad.4 ], [ undef, %pad.8.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp ], [ undef, %cont.161 ], [ undef, %fallthrough.264 ], [ undef, %fallthrough.266 ]
  %finvar.4.0 = phi i8 [ 0, %catchpad.4 ], [ 1, %pad.8.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp ], [ 1, %cont.161 ], [ 1, %fallthrough.264 ], [ 1, %fallthrough.266 ]
  br label %finish.4

pad.8.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp: ; preds = %else.263, %fallthrough.262, %cont.154, %cont.153, %then.261, %cont.161, %cont.160, %cont.159, %then.265, %fallthrough.260, %fallthrough.259, %fallthrough.258, %then.258
  %lpad.loopexit.split-lp25 = landingpad { i8*, i32 }
          catch i8* null
  invoke void @runtime.checkdefer(i8* nest undef, i8* nonnull %tmpv.705)
          to label %finally.4 unwind label %catchpad.4, !dbg !1901

then.258:                                         ; preds = %entry
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.258 unwind label %pad.8.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1900

fallthrough.258:                                  ; preds = %entry, %then.258
  %field.723 = getelementptr inbounds %Server.0, %Server.0* %s, i64 0, i32 1, !dbg !1900
  %field0.126 = bitcast %Listener.0* %field.723 to i64*, !dbg !1902
  %ld.241 = load i64, i64* %field0.126, align 8, !dbg !1902
  %field1.126 = getelementptr inbounds %Server.0, %Server.0* %s, i64 0, i32 1, i32 1, !dbg !1902
  %0 = bitcast i8** %field1.126 to i64*, !dbg !1902
  %ld.242 = load i64, i64* %0, align 8, !dbg !1902
  %call.223 = invoke { i64, i8 } @runtime.ifaceI2T2P(i8* nest undef, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1net.TCPListener, i64 0, i32 0), i64 %ld.241, i64 %ld.242)
          to label %fallthrough.259 unwind label %pad.8.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1902

fallthrough.259:                                  ; preds = %fallthrough.258
  %call.223.fca.0.extract = extractvalue { i64, i8 } %call.223, 0, !dbg !1902
  %cast.2414 = inttoptr i64 %call.223.fca.0.extract to %TCPListener.0*, !dbg !1902
  call void @llvm.dbg.value(metadata %TCPListener.0* %cast.2414, metadata !1884, metadata !DIExpression()), !dbg !1899
  %field.726 = getelementptr inbounds %Server.0, %Server.0* %s, i64 0, i32 14, !dbg !1903
  invoke void @sync.WaitGroup.Add(i8* nest undef, %WaitGroup.0* nonnull %field.726, i64 1)
          to label %fallthrough.260 unwind label %pad.8.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1904

fallthrough.260:                                  ; preds = %fallthrough.259
  %cast.2417 = bitcast { %WaitGroup.0* }* %tmpv.713 to i8*
  %field.728 = getelementptr inbounds { %WaitGroup.0* }, { %WaitGroup.0* }* %tmpv.713, i64 0, i32 0, !dbg !1905
  store %WaitGroup.0* %field.726, %WaitGroup.0** %field.728, align 8, !dbg !1905
  invoke void @runtime.deferproc(i8* nest undef, i8* nonnull %tmpv.705, %__go_descriptor.63* bitcast (i8 (i8*, { %WaitGroup.0* }*)* @command_line_arguments.command_line_arguments..thunk14 to %__go_descriptor.63*), i8* nonnull %cast.2417)
          to label %fallthrough.266.preheader unwind label %pad.8.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1905

fallthrough.266.preheader:                        ; preds = %fallthrough.260
  %field.745 = getelementptr inbounds %Server.0, %Server.0* %s, i64 0, i32 4
  %icmp.280 = icmp eq i64 %call.223.fca.0.extract, 0
  %tmpv.719.sroa.0.0.cast.2433.sroa_idx = getelementptr inbounds %Server.0, %Server.0* %s, i64 0, i32 1, i32 0
  %cast.2421 = bitcast %Time.0* %tmpv.715 to i8*
  %cast.2422 = bitcast %Time.0* %sret.actual.133 to i8*
  %tmpv.718.sroa.3.0.cast.2435.sroa_idx11 = getelementptr inbounds { %Conn.0, %error.0 }, { %Conn.0, %error.0 }* %sret.actual.136, i64 0, i32 1, i32 0
  %tmpv.718.sroa.4.0.cast.2435.sroa_idx13 = getelementptr inbounds { %Conn.0, %error.0 }, { %Conn.0, %error.0 }* %sret.actual.136, i64 0, i32 1, i32 1
  %cast.2423 = bitcast %Time.0* %tmpv.716 to i8*
  %cast.2424 = bitcast %Time.0* %sret.actual.134 to i8*
  %tmpv.718.sroa.0.sroa.3.0.tmpv.718.sroa.0.0.cast.2435.sroa_cast.sroa_idx20 = getelementptr inbounds { %Conn.0, %error.0 }, { %Conn.0, %error.0 }* %sret.actual.136, i64 0, i32 0, i32 1
  %tmpv.718.sroa.0.sroa.3.0.tmpv.718.sroa.0.0.cast.2435.sroa_cast.sroa_cast = bitcast i8** %tmpv.718.sroa.0.sroa.3.0.tmpv.718.sroa.0.0.cast.2435.sroa_cast.sroa_idx20 to i64*
  %tmpv.718.sroa.0.sroa.0.0.tmpv.718.sroa.0.0.cast.2435.sroa_cast.sroa_cast = bitcast { %Conn.0, %error.0 }* %sret.actual.136 to i64*
  br label %fallthrough.266, !dbg !1906

then.261:                                         ; preds = %then.267
  invoke void @time.Now(%Time.0* nonnull sret %sret.actual.133, i8* nest undef)
          to label %cont.153 unwind label %pad.8.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1907

cont.153:                                         ; preds = %then.261
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2421, i8* nonnull align 8 %cast.2422, i64 24, i1 false)
  invoke void @time.Time.Add(%Time.0* nonnull sret %sret.actual.134, i8* nest undef, %Time.0* nonnull %tmpv.715, i64 300000000)
          to label %cont.154 unwind label %pad.8.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1909

cont.154:                                         ; preds = %cont.153
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2423, i8* nonnull align 8 %cast.2424, i64 24, i1 false)
  %call.224 = invoke { i64, i64 } @net.TCPListener.SetDeadline(i8* nest undef, %TCPListener.0* %cast.2414, %Time.0* byval nonnull %tmpv.716)
          to label %fallthrough.262 unwind label %pad.8.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1910

fallthrough.262:                                  ; preds = %then.267, %cont.154
  %tmpv.719.sroa.0.0.copyload = load { %_type.0*, void ({ %Conn.0, %error.0 }*, i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)* }*, { %_type.0*, void ({ %Conn.0, %error.0 }*, i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)* }** %tmpv.719.sroa.0.0.cast.2433.sroa_idx, align 8
  %tmpv.719.sroa.2.0.copyload = load i8*, i8** %field1.126, align 8
  %field.731 = getelementptr inbounds { %_type.0*, void ({ %Conn.0, %error.0 }*, i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)* }, { %_type.0*, void ({ %Conn.0, %error.0 }*, i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)* }* %tmpv.719.sroa.0.0.copyload, i64 0, i32 1, !dbg !1911
  %.field.ld.97 = load void ({ %Conn.0, %error.0 }*, i8*, i8*)*, void ({ %Conn.0, %error.0 }*, i8*, i8*)** %field.731, align 8, !dbg !1911
  invoke void %.field.ld.97({ %Conn.0, %error.0 }* nonnull sret %sret.actual.136, i8* nest undef, i8* %tmpv.719.sroa.2.0.copyload)
          to label %cont.157 unwind label %pad.8.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1911

cont.157:                                         ; preds = %fallthrough.262
  %tmpv.718.sroa.3.0.copyload12 = load { %_type.0*, { i64, i64 } (i8*, i8*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)* }** %tmpv.718.sroa.3.0.cast.2435.sroa_idx11, align 8, !dbg !1911
  %tmpv.718.sroa.4.0.copyload14 = load i8*, i8** %tmpv.718.sroa.4.0.cast.2435.sroa_idx13, align 8, !dbg !1911
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.718.sroa.3.0.copyload12, metadata !1912, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1913
  call void @llvm.dbg.value(metadata i8* %tmpv.718.sroa.4.0.copyload14, metadata !1912, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1913
  %icmp.284 = icmp eq { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.718.sroa.3.0.copyload12, null, !dbg !1914
  br i1 %icmp.284, label %else.263, label %fallthrough.264

else.263:                                         ; preds = %cont.157
  %tmpv.718.sroa.0.sroa.3.0.copyload21 = load i64, i64* %tmpv.718.sroa.0.sroa.3.0.tmpv.718.sroa.0.0.cast.2435.sroa_cast.sroa_cast, align 8, !dbg !1911
  call void @llvm.dbg.value(metadata i64 %tmpv.718.sroa.0.sroa.3.0.copyload21, metadata !1915, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1913
  %tmpv.718.sroa.0.sroa.0.0.copyload19 = load i64, i64* %tmpv.718.sroa.0.sroa.0.0.tmpv.718.sroa.0.0.cast.2435.sroa_cast.sroa_cast, align 8, !dbg !1911
  call void @llvm.dbg.value(metadata i64 %tmpv.718.sroa.0.sroa.0.0.copyload19, metadata !1915, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1913
  invoke void @command_line_arguments.Server.handleClient(i8* nest undef, %Server.0* nonnull %s, i64 %tmpv.718.sroa.0.sroa.0.0.copyload19, i64 %tmpv.718.sroa.0.sroa.3.0.copyload21)
          to label %fallthrough.266 unwind label %pad.8.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1916

fallthrough.264:                                  ; preds = %cont.157
  %.field.ld.99 = load i8, i8* %field.745, align 1, !dbg !1917
  %icmp.283 = icmp eq i8 %.field.ld.99, 0, !dbg !1918
  br i1 %icmp.283, label %then.265, label %finally.4

then.265:                                         ; preds = %fallthrough.264
  %field.736 = getelementptr inbounds { %_type.0*, { i64, i64 } (i8*, i8*)* }, { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.718.sroa.3.0.copyload12, i64 0, i32 1, !dbg !1919
  %.field.ld.98 = load { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)** %field.736, align 8, !dbg !1919
  %call.225 = invoke { i64, i64 } %.field.ld.98(i8* nest undef, i8* %tmpv.718.sroa.4.0.copyload14)
          to label %cont.159 unwind label %pad.8.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1919

cont.159:                                         ; preds = %then.265
  %call.226 = invoke i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d)
          to label %cont.160 unwind label %pad.8.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1920

cont.160:                                         ; preds = %cont.159
  %call.225.fca.1.extract = extractvalue { i64, i64 } %call.225, 1, !dbg !1919
  %call.225.fca.0.extract = extractvalue { i64, i64 } %call.225, 0, !dbg !1919
  %tmpv.723.sroa.0.0.cast.2448.sroa_cast = bitcast { i8*, i64 }* %tmpv.725 to i64*
  store i64 %call.225.fca.0.extract, i64* %tmpv.723.sroa.0.0.cast.2448.sroa_cast, align 8
  %tmpv.723.sroa.2.0.cast.2448.sroa_idx2 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.725, i64 0, i32 1
  store i64 %call.225.fca.1.extract, i64* %tmpv.723.sroa.2.0.cast.2448.sroa_idx2, align 8
  %cast.2451 = bitcast { i8*, i64 }* %tmpv.725 to i8*, !dbg !1920
  invoke void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.226, i8* nonnull %cast.2451)
          to label %cont.161 unwind label %pad.8.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1920

cont.161:                                         ; preds = %cont.160
  %tmp.142.sroa.0.0.cast.2453.sroa_idx = getelementptr inbounds [1 x %IPST.11], [1 x %IPST.11]* %tmpv.726, i64 0, i64 0, i32 0, !dbg !1920
  store %_type.0* @string..d, %_type.0** %tmp.142.sroa.0.0.cast.2453.sroa_idx, align 8, !dbg !1920
  %tmp.142.sroa.2.0.cast.2453.sroa_idx23 = getelementptr inbounds [1 x %IPST.11], [1 x %IPST.11]* %tmpv.726, i64 0, i64 0, i32 1, !dbg !1920
  store i8* %call.226, i8** %tmp.142.sroa.2.0.cast.2453.sroa_idx23, align 8, !dbg !1920
  %field.740 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.143, i64 0, i32 0, !dbg !1920
  %cast.2456 = getelementptr inbounds [1 x %IPST.11], [1 x %IPST.11]* %tmpv.726, i64 0, i64 0, !dbg !1920
  store %IPST.11* %cast.2456, %IPST.11** %field.740, align 8, !dbg !1920
  %field.741 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.143, i64 0, i32 1, !dbg !1920
  store i64 1, i64* %field.741, align 8, !dbg !1920
  %field.742 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.143, i64 0, i32 2, !dbg !1920
  store i64 1, i64* %field.742, align 8, !dbg !1920
  invoke void @log.Printf(i8* nest undef, i64 ptrtoint ([18 x i8]* @const.297 to i64), i64 17, %IPST.6* byval nonnull %tmp.143)
          to label %finally.4 unwind label %pad.8.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1920

fallthrough.266:                                  ; preds = %fallthrough.266.preheader, %else.263
  %.field.ld.100 = load i8, i8* %field.745, align 1, !dbg !1906
  %icmp.286 = icmp eq i8 %.field.ld.100, 0, !dbg !1921
  br i1 %icmp.286, label %then.267, label %finally.4

then.267:                                         ; preds = %fallthrough.266
  br i1 %icmp.280, label %fallthrough.262, label %then.261

catchpad.4:                                       ; preds = %pad.8.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp
  %ex2.4 = landingpad { i8*, i32 }
          cleanup
  %ex2.4.fca.0.extract = extractvalue { i8*, i32 } %ex2.4, 0
  %ex2.4.fca.1.extract = extractvalue { i8*, i32 } %ex2.4, 1
  br label %finally.4

pad.9:                                            ; preds = %finish.4
  %ex.9 = landingpad { i8*, i32 }
          catch i8* null
  call void @runtime.checkdefer(i8* nest undef, i8* nonnull %tmpv.705), !dbg !1901
  br label %finish.4

finish.4:                                         ; preds = %pad.9, %finally.4
  invoke void @runtime.deferreturn(i8* nest undef, i8* nonnull %tmpv.705)
          to label %cont.166 unwind label %pad.9, !dbg !1901

cont.166:                                         ; preds = %finish.4
  %icmp.287 = icmp eq i8 %finvar.4.0, 1
  br i1 %icmp.287, label %finret.4, label %finres.4

finres.4:                                         ; preds = %cont.166
  %excv.4.fca.0.insert = insertvalue { i8*, i32 } undef, i8* %ehtmp.4.sroa.0.0, 0
  %excv.4.fca.1.insert = insertvalue { i8*, i32 } %excv.4.fca.0.insert, i32 %ehtmp.4.sroa.2.0, 1
  resume { i8*, i32 } %excv.4.fca.1.insert

finret.4:                                         ; preds = %cont.166
  ret void, !dbg !1922
}

define void @command_line_arguments.Server.dispatchRoutine(i8* nest nocapture readnone %nest.33, %Server.0* %s) #0 !dbg !1923 {
entry:
  %tmpv.802 = alloca %IPST.1, align 8
  %tmpv.805 = alloca %.command-line-arguments.inboundIPPkt.0*, align 8
  %tmpv.808 = alloca %IPPacket.0*, align 8
  call void @llvm.dbg.value(metadata %Server.0* %s, metadata !1924, metadata !DIExpression()), !dbg !1925
  %icmp.330 = icmp eq %Server.0* %s, null, !dbg !1926
  br i1 %icmp.330, label %then.301, label %else.301.lr.ph

else.301.lr.ph:                                   ; preds = %entry
  %field.793 = getelementptr inbounds %Server.0, %Server.0* %s, i64 0, i32 4
  %cast.2571 = bitcast %IPST.1* %tmpv.802 to i8*
  %field.790 = getelementptr inbounds %Server.0, %Server.0* %s, i64 0, i32 9
  %cast.2576 = bitcast %.command-line-arguments.inboundIPPkt.0** %tmpv.805 to i8*
  %field.791 = getelementptr inbounds %Server.0, %Server.0* %s, i64 0, i32 10
  %cast.2580 = bitcast %IPPacket.0** %tmpv.808 to i8*
  %.field.ld.1154 = load i8, i8* %field.793, align 1, !dbg !1926
  %icmp.3315 = icmp eq i8 %.field.ld.1154, 0, !dbg !1927
  br i1 %icmp.3315, label %then.302, label %else.302

case.8:                                           ; preds = %then.302
  %tmpv.805.ld.0 = load %.command-line-arguments.inboundIPPkt.0*, %.command-line-arguments.inboundIPPkt.0** %tmpv.805, align 8, !dbg !1928
  call void @llvm.dbg.value(metadata %.command-line-arguments.inboundIPPkt.0* %tmpv.805.ld.0, metadata !1930, metadata !DIExpression()), !dbg !1936
  %icmp.329 = icmp eq %.command-line-arguments.inboundIPPkt.0* %tmpv.805.ld.0, null, !dbg !1937
  br i1 %icmp.329, label %then.300, label %else.300

case.9:                                           ; preds = %then.302
  %tmpv.808.ld.0 = load %IPPacket.0*, %IPPacket.0** %tmpv.808, align 8, !dbg !1938
  call void @llvm.dbg.value(metadata %IPPacket.0* %tmpv.808.ld.0, metadata !1940, metadata !DIExpression()), !dbg !1941
  call void @command_line_arguments.Server.route(i8* nest undef, %Server.0* nonnull %s, %IPPacket.0* %tmpv.808.ld.0), !dbg !1942
  br label %label.2

then.300:                                         ; preds = %case.8
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1937
  unreachable

else.300:                                         ; preds = %case.8
  %field.792 = getelementptr inbounds %.command-line-arguments.inboundIPPkt.0, %.command-line-arguments.inboundIPPkt.0* %tmpv.805.ld.0, i64 0, i32 0, !dbg !1937
  %.field.ld.114 = load %IPPacket.0*, %IPPacket.0** %field.792, align 8, !dbg !1937
  call void @command_line_arguments.Server.route(i8* nest undef, %Server.0* nonnull %s, %IPPacket.0* %.field.ld.114), !dbg !1943
  br label %label.2

label.2:                                          ; preds = %case.9, %else.300
  %.field.ld.115 = load i8, i8* %field.793, align 1, !dbg !1926
  %icmp.331 = icmp eq i8 %.field.ld.115, 0, !dbg !1927
  br i1 %icmp.331, label %then.302, label %else.302

then.301:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1926
  unreachable

then.302:                                         ; preds = %else.301.lr.ph, %label.2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %cast.2571, i8 0, i64 128, i1 false)
  call void @runtime.newselect(i8* nest undef, i8* nonnull %cast.2571, i64 128, i32 2), !dbg !1944
  %.field.ld.112 = load {}*, {}** %field.790, align 8, !dbg !1945
  store %.command-line-arguments.inboundIPPkt.0* null, %.command-line-arguments.inboundIPPkt.0** %tmpv.805, align 8
  call void @runtime.selectrecv(i8* nest undef, i8* nonnull %cast.2571, {}* %.field.ld.112, i8* nonnull %cast.2576, i8* null), !dbg !1936
  %.field.ld.113 = load {}*, {}** %field.791, align 8, !dbg !1946
  store %IPPacket.0* null, %IPPacket.0** %tmpv.808, align 8
  call void @runtime.selectrecv(i8* nest undef, i8* nonnull %cast.2571, {}* %.field.ld.113, i8* nonnull %cast.2580, i8* null), !dbg !1941
  %call.231 = call i64 @runtime.selectgo(i8* nest undef, i8* nonnull %cast.2571), !dbg !1944
  %switch = icmp eq i64 %call.231, 0
  br i1 %switch, label %case.8, label %case.9

else.302:                                         ; preds = %label.2, %else.301.lr.ph
  ret void
}

define void @command_line_arguments.Server.enrollClientConn(i8* nest nocapture readnone %nest.30, %Server.0* %s, %.command-line-arguments.serverConn.0* %c) #0 personality i32 (i32, i32, i64, i8*, i8*)* @__gccgo_personality_v0 !dbg !1947 {
entry:
  %tmpv.734 = alloca i8, align 1
  %tmpv.738 = alloca { %Mutex.0* }, align 8
  %tmpv.747 = alloca i64, align 8
  call void @llvm.dbg.value(metadata %Server.0* %s, metadata !1950, metadata !DIExpression()), !dbg !1951
  call void @llvm.dbg.value(metadata %.command-line-arguments.serverConn.0* %c, metadata !1952, metadata !DIExpression()), !dbg !1953
  store i8 0, i8* %tmpv.734, align 1
  %icmp.290 = icmp eq %Server.0* %s, null, !dbg !1954
  br i1 %icmp.290, label %then.270, label %fallthrough.270

finally.5:                                        ; preds = %fallthrough.279, %else.278, %pad.10, %catchpad.5
  %ehtmp.5.sroa.0.0 = phi i8* [ %ex2.5.fca.0.extract, %catchpad.5 ], [ undef, %pad.10 ], [ undef, %else.278 ], [ undef, %fallthrough.279 ]
  %ehtmp.5.sroa.2.0 = phi i32 [ %ex2.5.fca.1.extract, %catchpad.5 ], [ undef, %pad.10 ], [ undef, %else.278 ], [ undef, %fallthrough.279 ]
  %finvar.5.0 = phi i8 [ 0, %catchpad.5 ], [ 1, %pad.10 ], [ 1, %else.278 ], [ 1, %fallthrough.279 ]
  br label %finish.5

pad.10:                                           ; preds = %else.278, %then.279, %fallthrough.277, %then.277, %then.275, %then.274, %then.273, %then.272, %fallthrough.271, %then.271, %fallthrough.270, %then.270
  %ex.10 = landingpad { i8*, i32 }
          catch i8* null
  invoke void @runtime.checkdefer(i8* nest undef, i8* nonnull %tmpv.734)
          to label %finally.5 unwind label %catchpad.5, !dbg !1955

then.270:                                         ; preds = %entry
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.270 unwind label %pad.10, !dbg !1954

fallthrough.270:                                  ; preds = %entry, %then.270
  %field.753 = getelementptr inbounds %Server.0, %Server.0* %s, i64 0, i32 7, !dbg !1954
  invoke void @sync.Mutex.Lock(i8* nest undef, %Mutex.0* nonnull %field.753)
          to label %cont.168 unwind label %pad.10, !dbg !1956

cont.168:                                         ; preds = %fallthrough.270
  br i1 %icmp.290, label %then.271, label %fallthrough.271

then.271:                                         ; preds = %cont.168
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.271 unwind label %pad.10, !dbg !1957

fallthrough.271:                                  ; preds = %cont.168, %then.271
  %cast.2476 = bitcast { %Mutex.0* }* %tmpv.738 to i8*
  %field.755 = getelementptr inbounds { %Mutex.0* }, { %Mutex.0* }* %tmpv.738, i64 0, i32 0, !dbg !1958
  store %Mutex.0* %field.753, %Mutex.0** %field.755, align 8, !dbg !1958
  invoke void @runtime.deferproc(i8* nest undef, i8* nonnull %tmpv.734, %__go_descriptor.63* bitcast (i8 (i8*, { %Mutex.0* }*)* @command_line_arguments.command_line_arguments..thunk15 to %__go_descriptor.63*), i8* nonnull %cast.2476)
          to label %cont.170 unwind label %pad.10, !dbg !1958

cont.170:                                         ; preds = %fallthrough.271
  %icmp.292 = icmp eq %.command-line-arguments.serverConn.0* %c, null, !dbg !1959
  br i1 %icmp.292, label %then.272, label %fallthrough.272

then.272:                                         ; preds = %cont.170
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.272 unwind label %pad.10, !dbg !1959

fallthrough.272:                                  ; preds = %cont.170, %then.272
  %field.756 = getelementptr inbounds %.command-line-arguments.serverConn.0, %.command-line-arguments.serverConn.0* %c, i64 0, i32 1, !dbg !1959
  br i1 %icmp.290, label %then.273, label %fallthrough.276

then.273:                                         ; preds = %fallthrough.272
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %then.274 unwind label %pad.10, !dbg !1960

then.274:                                         ; preds = %then.273
  %.field.ld.1012 = load i64, i64* inttoptr (i64 88 to i64*), align 8, !dbg !1960
  store i64 %.field.ld.1012, i64* %field.756, align 8, !dbg !1961
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %then.275 unwind label %pad.10, !dbg !1962

then.275:                                         ; preds = %then.274
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %then.277 unwind label %pad.10, !dbg !1962

fallthrough.276:                                  ; preds = %fallthrough.272
  %field.757 = getelementptr inbounds %Server.0, %Server.0* %s, i64 0, i32 8, !dbg !1960
  %.field.ld.101 = load i64, i64* %field.757, align 8, !dbg !1960
  store i64 %.field.ld.101, i64* %field.756, align 8, !dbg !1961
  %.field.ld.102 = load i64, i64* %field.757, align 8, !dbg !1962
  %add.9 = add i64 %.field.ld.102, 1, !dbg !1962
  store i64 %add.9, i64* %field.757, align 8, !dbg !1962
  %.field.ld.103 = load i64, i64* %field.756, align 8, !dbg !1963
  store i64 %.field.ld.103, i64* %tmpv.747, align 8
  br label %fallthrough.277

then.277:                                         ; preds = %then.275
  %.field.ld.1025 = load i64, i64* inttoptr (i64 88 to i64*), align 8, !dbg !1962
  %add.96 = add i64 %.field.ld.1025, 1, !dbg !1962
  store i64 %add.96, i64* inttoptr (i64 88 to i64*), align 8, !dbg !1962
  %.field.ld.1037 = load i64, i64* %field.756, align 8, !dbg !1963
  store i64 %.field.ld.1037, i64* %tmpv.747, align 8
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.277 unwind label %pad.10, !dbg !1964

fallthrough.277:                                  ; preds = %fallthrough.276, %then.277
  %field.761 = getelementptr inbounds %Server.0, %Server.0* %s, i64 0, i32 6, !dbg !1964
  %.field.ld.104 = load { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.761, align 8, !dbg !1964
  %cast.2487 = bitcast i64* %tmpv.747 to i8*, !dbg !1965
  %call.228 = invoke i8* @runtime.mapassign(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6int.7.1command_line_arguments.serverConn, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %.field.ld.104, i8* nonnull %cast.2487)
          to label %cont.177 unwind label %pad.10, !dbg !1965

cont.177:                                         ; preds = %fallthrough.277
  %cast.2488 = bitcast i8* %call.228 to %.command-line-arguments.serverConn.0**, !dbg !1965
  %runtime.writeBarrier.ld.15 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1965
  %icmp.299 = icmp eq i32 %runtime.writeBarrier.ld.15, 0, !dbg !1965
  br i1 %icmp.299, label %then.278, label %else.278

then.278:                                         ; preds = %cont.177
  %icmp.298 = icmp eq i8* %call.228, null, !dbg !1965
  br i1 %icmp.298, label %then.279, label %fallthrough.279

else.278:                                         ; preds = %cont.177
  %cast.2491 = bitcast %.command-line-arguments.serverConn.0* %c to i8*, !dbg !1965
  invoke void @runtime.writebarrierptr(i8* nest undef, i8* %call.228, i8* %cast.2491)
          to label %finally.5 unwind label %pad.10, !dbg !1965

then.279:                                         ; preds = %then.278
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.279 unwind label %pad.10, !dbg !1965

fallthrough.279:                                  ; preds = %then.278, %then.279
  store %.command-line-arguments.serverConn.0* %c, %.command-line-arguments.serverConn.0** %cast.2488, align 8, !dbg !1965
  br label %finally.5

catchpad.5:                                       ; preds = %pad.10
  %ex2.5 = landingpad { i8*, i32 }
          cleanup
  %ex2.5.fca.0.extract = extractvalue { i8*, i32 } %ex2.5, 0
  %ex2.5.fca.1.extract = extractvalue { i8*, i32 } %ex2.5, 1
  br label %finally.5

pad.11:                                           ; preds = %finish.5
  %ex.11 = landingpad { i8*, i32 }
          catch i8* null
  call void @runtime.checkdefer(i8* nest undef, i8* nonnull %tmpv.734), !dbg !1955
  br label %finish.5

finish.5:                                         ; preds = %pad.11, %finally.5
  invoke void @runtime.deferreturn(i8* nest undef, i8* nonnull %tmpv.734)
          to label %cont.181 unwind label %pad.11, !dbg !1955

cont.181:                                         ; preds = %finish.5
  %icmp.300 = icmp eq i8 %finvar.5.0, 1
  br i1 %icmp.300, label %finret.5, label %finres.5

finres.5:                                         ; preds = %cont.181
  %excv.5.fca.0.insert = insertvalue { i8*, i32 } undef, i8* %ehtmp.5.sroa.0.0, 0
  %excv.5.fca.1.insert = insertvalue { i8*, i32 } %excv.5.fca.0.insert, i32 %ehtmp.5.sroa.2.0, 1
  resume { i8*, i32 } %excv.5.fca.1.insert

finret.5:                                         ; preds = %cont.181
  ret void
}

define void @command_line_arguments.Server.handleClient(i8* nest nocapture readnone %nest.29, %Server.0* %s, i64 %conn.chunk0, i64 %conn.chunk1) #0 !dbg !1966 {
entry:
  %tmpv.732 = alloca %.command-line-arguments.serverConn.0, align 8
  call void @llvm.dbg.value(metadata %Server.0* %s, metadata !1969, metadata !DIExpression()), !dbg !1970
  call void @llvm.dbg.value(metadata i64 %conn.chunk0, metadata !1971, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1972
  call void @llvm.dbg.value(metadata i64 %conn.chunk1, metadata !1971, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1972
  %call.227 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments..command_line_arguments.serverConn..d, i64 0, i32 0)), !dbg !1973
  %cast.2462 = bitcast i8* %call.227 to %.command-line-arguments.serverConn.0*, !dbg !1973
  call void @llvm.dbg.value(metadata %.command-line-arguments.serverConn.0* %cast.2462, metadata !1975, metadata !DIExpression()), !dbg !1976
  %conn.addr.sroa.0.0.cast.2463.sroa_cast = bitcast %.command-line-arguments.serverConn.0* %tmpv.732 to i64*, !dbg !1977
  store i64 %conn.chunk0, i64* %conn.addr.sroa.0.0.cast.2463.sroa_cast, align 8, !dbg !1977
  %conn.addr.sroa.2.0.cast.2463.sroa_idx3 = getelementptr inbounds %.command-line-arguments.serverConn.0, %.command-line-arguments.serverConn.0* %tmpv.732, i64 0, i32 0, i32 1, !dbg !1977
  %conn.addr.sroa.2.0.cast.2463.sroa_cast = bitcast i8** %conn.addr.sroa.2.0.cast.2463.sroa_idx3 to i64*, !dbg !1977
  store i64 %conn.chunk1, i64* %conn.addr.sroa.2.0.cast.2463.sroa_cast, align 8, !dbg !1977
  %field.747 = getelementptr inbounds %.command-line-arguments.serverConn.0, %.command-line-arguments.serverConn.0* %tmpv.732, i64 0, i32 1, !dbg !1977
  %field.750 = getelementptr inbounds %.command-line-arguments.serverConn.0, %.command-line-arguments.serverConn.0* %tmpv.732, i64 0, i32 4, !dbg !1977
  %0 = bitcast i64* %field.747 to i8*, !dbg !1977
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %0, i8 0, i64 24, i1 false), !dbg !1977
  store i8 1, i8* %field.750, align 8, !dbg !1977
  %field.751 = getelementptr inbounds %.command-line-arguments.serverConn.0, %.command-line-arguments.serverConn.0* %tmpv.732, i64 0, i32 5, !dbg !1977
  %1 = bitcast %IPST.4* %field.751 to i8*, !dbg !1977
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1, i8 0, i64 25, i1 false), !dbg !1977
  %runtime.writeBarrier.ld.14 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1977
  %icmp.289 = icmp eq i32 %runtime.writeBarrier.ld.14, 0, !dbg !1977
  br i1 %icmp.289, label %then.268, label %else.268

then.268:                                         ; preds = %entry
  %icmp.288 = icmp eq i8* %call.227, null, !dbg !1977
  br i1 %icmp.288, label %then.269, label %else.269

fallthrough.268:                                  ; preds = %else.268, %else.269
  call void @command_line_arguments.Server.enrollClientConn(i8* nest undef, %Server.0* %s, %.command-line-arguments.serverConn.0* %cast.2462), !dbg !1978
  call void @command_line_arguments.serverConn.initClient(i8* nest undef, %.command-line-arguments.serverConn.0* %cast.2462, %Server.0* %s), !dbg !1979
  ret void

else.268:                                         ; preds = %entry
  %cast.2472 = bitcast %.command-line-arguments.serverConn.0* %tmpv.732 to i8*, !dbg !1977
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments..command_line_arguments.serverConn..d, i64 0, i32 0), i8* %call.227, i8* nonnull %cast.2472), !dbg !1977
  br label %fallthrough.268

then.269:                                         ; preds = %then.268
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1977
  unreachable

else.269:                                         ; preds = %then.268
  %cast.2469 = bitcast %.command-line-arguments.serverConn.0* %tmpv.732 to i8*, !dbg !1977
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %call.227, i8* nonnull align 8 %cast.2469, i64 80, i1 false), !dbg !1977
  br label %fallthrough.268
}

define void @command_line_arguments.Server.removeClientConn(i8* nest nocapture readnone %nest.32, %Server.0* %s, i64 %id) #0 personality i32 (i32, i32, i64, i8*, i8*)* @__gccgo_personality_v0 !dbg !1980 {
entry:
  %tmpv.766 = alloca i8, align 1
  %tmpv.770 = alloca { %Mutex.0* }, align 8
  %dest = alloca { i8*, i64 }, align 8
  %tmpv.774 = alloca { i8*, i64 }, align 8
  %tmpv.776 = alloca %IPST.9, align 8
  %tmpv.779 = alloca %IPST.5, align 8
  %sret.actual.139 = alloca %IPST.7, align 8
  %addr = alloca { i8*, i64 }, align 8
  %tmpv.798 = alloca { i8*, i64 }, align 8
  %tmpv.801 = alloca i64, align 8
  call void @llvm.dbg.value(metadata %Server.0* %s, metadata !1983, metadata !DIExpression()), !dbg !1984
  call void @llvm.dbg.value(metadata i64 %id, metadata !1985, metadata !DIExpression()), !dbg !1986
  store i8 0, i8* %tmpv.766, align 1
  %icmp.305 = icmp eq %Server.0* %s, null, !dbg !1987
  br i1 %icmp.305, label %then.283, label %fallthrough.283

finally.7:                                        ; preds = %fallthrough.297, %pad.14.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, %catchpad.7
  %ehtmp.7.sroa.0.0 = phi i8* [ %ex2.7.fca.0.extract, %catchpad.7 ], [ undef, %pad.14.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp ], [ undef, %fallthrough.297 ]
  %ehtmp.7.sroa.2.0 = phi i32 [ %ex2.7.fca.1.extract, %catchpad.7 ], [ undef, %pad.14.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp ], [ undef, %fallthrough.297 ]
  %finvar.7.0 = phi i8 [ 0, %catchpad.7 ], [ 1, %pad.14.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp ], [ 1, %fallthrough.297 ]
  br label %finish.7

pad.14.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp: ; preds = %then.295, %fallthrough.295, %fallthrough.286, %else.291, %then.292, %then.290, %then.288, %then.287, %fallthrough.297, %then.297, %fallthrough.285, %then.285, %fallthrough.284, %then.284, %fallthrough.283, %then.283
  %lpad.loopexit.split-lp74 = landingpad { i8*, i32 }
          catch i8* null
  invoke void @runtime.checkdefer(i8* nest undef, i8* nonnull %tmpv.766)
          to label %finally.7 unwind label %catchpad.7, !dbg !1989

then.283:                                         ; preds = %entry
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.283 unwind label %pad.14.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1987

fallthrough.283:                                  ; preds = %entry, %then.283
  %field.766 = getelementptr inbounds %Server.0, %Server.0* %s, i64 0, i32 7, !dbg !1987
  invoke void @sync.Mutex.Lock(i8* nest undef, %Mutex.0* nonnull %field.766)
          to label %cont.192 unwind label %pad.14.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1990

cont.192:                                         ; preds = %fallthrough.283
  br i1 %icmp.305, label %then.284, label %fallthrough.284

then.284:                                         ; preds = %cont.192
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.284 unwind label %pad.14.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1991

fallthrough.284:                                  ; preds = %cont.192, %then.284
  %cast.2509 = bitcast { %Mutex.0* }* %tmpv.770 to i8*
  %field.768 = getelementptr inbounds { %Mutex.0* }, { %Mutex.0* }* %tmpv.770, i64 0, i32 0, !dbg !1992
  store %Mutex.0* %field.766, %Mutex.0** %field.768, align 8, !dbg !1992
  invoke void @runtime.deferproc(i8* nest undef, i8* nonnull %tmpv.766, %__go_descriptor.63* bitcast (i8 (i8*, { %Mutex.0* }*)* @command_line_arguments.command_line_arguments..thunk17 to %__go_descriptor.63*), i8* nonnull %cast.2509)
          to label %cont.194 unwind label %pad.14.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1992

cont.194:                                         ; preds = %fallthrough.284
  call void @llvm.dbg.value(metadata { i8*, i64 }* null, metadata !1993, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1994
  call void @llvm.dbg.value(metadata i64 0, metadata !1993, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1994
  call void @llvm.dbg.value(metadata i64 0, metadata !1993, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 64)), !dbg !1994
  %0 = bitcast { i8*, i64 }* %dest to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %0, i8 0, i64 16, i1 false)
  call void @llvm.dbg.value(metadata i64 0, metadata !1995, metadata !DIExpression()), !dbg !1997
  br i1 %icmp.305, label %then.285, label %fallthrough.285

then.285:                                         ; preds = %cont.194
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.285 unwind label %pad.14.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1998

fallthrough.285:                                  ; preds = %cont.194, %then.285
  %field.769 = getelementptr inbounds %Server.0, %Server.0* %s, i64 0, i32 5, !dbg !1998
  %.field.ld.106 = load { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.769, align 8, !dbg !1998
  %cast.2518 = bitcast { i8*, i64 }* %tmpv.774 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %cast.2518, i8 0, i64 16, i1 false)
  %cast.2520 = bitcast %IPST.9* %tmpv.776 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %cast.2520, i8 0, i64 96, i1 false)
  invoke void @runtime.mapiterinit(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7int, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %.field.ld.106, i8* nonnull %cast.2520)
          to label %label.0.preheader unwind label %pad.14.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1999

label.0.preheader:                                ; preds = %fallthrough.285
  %field.784 = getelementptr inbounds %IPST.9, %IPST.9* %tmpv.776, i64 0, i32 0
  %field.771 = getelementptr inbounds %IPST.9, %IPST.9* %tmpv.776, i64 0, i32 1
  %toDeleteAddrs.sroa.0.0.cast.2530.sroa_idx = getelementptr inbounds %IPST.5, %IPST.5* %tmpv.779, i64 0, i32 0
  %toDeleteAddrs.sroa.6.0.cast.2530.sroa_idx27 = getelementptr inbounds %IPST.5, %IPST.5* %tmpv.779, i64 0, i32 1
  %toDeleteAddrs.sroa.7.0.cast.2530.sroa_idx32 = getelementptr inbounds %IPST.5, %IPST.5* %tmpv.779, i64 0, i32 2
  %cast.2532 = bitcast %IPST.5* %tmpv.779 to %IPST.7*
  %tmpv.785.sroa.0.0.cast.2537.sroa_idx = bitcast %IPST.7* %sret.actual.139 to { i8*, i64 }**
  %1 = getelementptr inbounds %IPST.7, %IPST.7* %sret.actual.139, i64 0, i32 1
  %2 = getelementptr inbounds %IPST.7, %IPST.7* %sret.actual.139, i64 0, i32 2
  %dest65 = bitcast { i8*, i64 }* %dest to i8*
  br label %label.0, !dbg !1999

label.0:                                          ; preds = %label.0.preheader, %fallthrough.286
  %toDeleteAddrs.sroa.0.0 = phi { i8*, i64 }* [ %toDeleteAddrs.sroa.0.1, %fallthrough.286 ], [ null, %label.0.preheader ]
  %toDeleteAddrs.sroa.6.0 = phi i64 [ %toDeleteAddrs.sroa.6.1, %fallthrough.286 ], [ 0, %label.0.preheader ]
  %toDeleteAddrs.sroa.7.0 = phi i64 [ %toDeleteAddrs.sroa.7.1, %fallthrough.286 ], [ 0, %label.0.preheader ]
  %tmpv.784.sroa.0.0 = phi { i8*, i64 }* [ %tmpv.784.sroa.0.1, %fallthrough.286 ], [ undef, %label.0.preheader ]
  %tmpv.784.sroa.2.0 = phi i64 [ %tmpv.784.sroa.2.1, %fallthrough.286 ], [ undef, %label.0.preheader ]
  %tmpv.788.0 = phi i64 [ %tmpv.788.1, %fallthrough.286 ], [ undef, %label.0.preheader ]
  %tmpv.789.0 = phi { i8*, i64 }* [ %tmpv.789.1, %fallthrough.286 ], [ undef, %label.0.preheader ]
  %tmpv.784.sroa.3.0 = phi i64 [ %tmpv.784.sroa.3.1, %fallthrough.286 ], [ undef, %label.0.preheader ]
  call void @llvm.dbg.value(metadata i64 %toDeleteAddrs.sroa.7.0, metadata !1993, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 64)), !dbg !1994
  call void @llvm.dbg.value(metadata i64 %toDeleteAddrs.sroa.6.0, metadata !1993, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1994
  call void @llvm.dbg.value(metadata { i8*, i64 }* %toDeleteAddrs.sroa.0.0, metadata !1993, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1994
  %tmpv.776.field.ld.2 = load { i8*, i64 }*, { i8*, i64 }** %field.784, align 8, !dbg !1999
  %icmp.320 = icmp eq { i8*, i64 }* %tmpv.776.field.ld.2, null, !dbg !1999
  br i1 %icmp.320, label %else.293, label %then.293

then.286:                                         ; preds = %then.293
  store { i8*, i64 }* %toDeleteAddrs.sroa.0.0, { i8*, i64 }** %toDeleteAddrs.sroa.0.0.cast.2530.sroa_idx, align 8
  store i64 %toDeleteAddrs.sroa.6.0, i64* %toDeleteAddrs.sroa.6.0.cast.2530.sroa_idx27, align 8
  store i64 %toDeleteAddrs.sroa.7.0, i64* %toDeleteAddrs.sroa.7.0.cast.2530.sroa_idx32, align 8
  %add.10 = add i64 %toDeleteAddrs.sroa.6.0, 1, !dbg !2000
  %icmp.308 = icmp ugt i64 %add.10, %toDeleteAddrs.sroa.7.0, !dbg !2000
  br i1 %icmp.308, label %then.287, label %else.287

fallthrough.286:                                  ; preds = %then.293, %fallthrough.291
  %toDeleteAddrs.sroa.0.1 = phi { i8*, i64 }* [ %toDeleteAddrs.sroa.0.0.copyload25, %fallthrough.291 ], [ %toDeleteAddrs.sroa.0.0, %then.293 ]
  %toDeleteAddrs.sroa.6.1 = phi i64 [ %toDeleteAddrs.sroa.6.0.copyload30, %fallthrough.291 ], [ %toDeleteAddrs.sroa.6.0, %then.293 ]
  %toDeleteAddrs.sroa.7.1 = phi i64 [ %toDeleteAddrs.sroa.7.0.copyload35, %fallthrough.291 ], [ %toDeleteAddrs.sroa.7.0, %then.293 ]
  %tmpv.784.sroa.0.1 = phi { i8*, i64 }* [ %tmpv.784.sroa.0.2, %fallthrough.291 ], [ %tmpv.784.sroa.0.0, %then.293 ]
  %tmpv.784.sroa.2.1 = phi i64 [ %tmpv.784.sroa.2.2, %fallthrough.291 ], [ %tmpv.784.sroa.2.0, %then.293 ]
  %tmpv.788.1 = phi i64 [ %tmpv.788.2, %fallthrough.291 ], [ %tmpv.788.0, %then.293 ]
  %tmpv.789.1 = phi { i8*, i64 }* [ %tmpv.789.2, %fallthrough.291 ], [ %tmpv.789.0, %then.293 ]
  %tmpv.784.sroa.3.1 = phi i64 [ %tmpv.784.sroa.3.2, %fallthrough.291 ], [ %tmpv.784.sroa.3.0, %then.293 ]
  call void @llvm.dbg.value(metadata i64 %toDeleteAddrs.sroa.7.1, metadata !1993, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 64)), !dbg !1994
  call void @llvm.dbg.value(metadata i64 %toDeleteAddrs.sroa.6.1, metadata !1993, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1994
  call void @llvm.dbg.value(metadata { i8*, i64 }* %toDeleteAddrs.sroa.0.1, metadata !1993, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1994
  invoke void @runtime.mapiternext(i8* nest undef, i8* nonnull %cast.2520)
          to label %label.0 unwind label %pad.14.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1999

then.287:                                         ; preds = %then.286
  invoke void @runtime.growslice(%IPST.7* nonnull sret %sret.actual.139, i8* nest undef, %_type.0* nonnull @string..d, %IPST.7* byval nonnull %cast.2532, i64 %add.10)
          to label %cont.197 unwind label %pad.14.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !2000

fallthrough.287:                                  ; preds = %else.287, %then.288, %cont.197
  %tmpv.784.sroa.0.2 = phi { i8*, i64 }* [ %tmpv.784.sroa.0.0, %cont.197 ], [ %tmpv.784.sroa.0.0, %then.288 ], [ %toDeleteAddrs.sroa.0.0, %else.287 ]
  %tmpv.784.sroa.2.2 = phi i64 [ %tmpv.784.sroa.2.0, %cont.197 ], [ %tmpv.784.sroa.2.0, %then.288 ], [ %add.10, %else.287 ]
  %tmpv.784.sroa.3.2 = phi i64 [ %tmpv.784.sroa.3.0, %cont.197 ], [ %tmpv.784.sroa.3.0, %then.288 ], [ %toDeleteAddrs.sroa.7.0, %else.287 ]
  %tmpv.785.sroa.0.0 = phi { i8*, i64 }* [ %tmpv.785.sroa.0.0.copyload, %cont.197 ], [ %tmpv.784.sroa.0.0, %then.288 ], [ %toDeleteAddrs.sroa.0.0, %else.287 ]
  %tmpv.785.sroa.3.0 = phi i64 [ %tmpv.785.sroa.3.0.copyload, %cont.197 ], [ %tmpv.784.sroa.2.0, %then.288 ], [ %add.10, %else.287 ]
  %tmpv.785.sroa.4.0 = phi i64 [ %tmpv.785.sroa.4.0.copyload, %cont.197 ], [ %tmpv.784.sroa.3.0, %then.288 ], [ %toDeleteAddrs.sroa.7.0, %else.287 ]
  store { i8*, i64 }* %tmpv.785.sroa.0.0, { i8*, i64 }** %toDeleteAddrs.sroa.0.0.cast.2530.sroa_idx, align 8, !dbg !2000
  store i64 %tmpv.785.sroa.3.0, i64* %toDeleteAddrs.sroa.6.0.cast.2530.sroa_idx27, align 8, !dbg !2000
  store i64 %tmpv.785.sroa.4.0, i64* %toDeleteAddrs.sroa.7.0.cast.2530.sroa_idx32, align 8, !dbg !2000
  %icmp.315 = icmp sge i64 %toDeleteAddrs.sroa.6.0, %tmpv.785.sroa.3.0, !dbg !2000
  %3 = icmp slt i64 %toDeleteAddrs.sroa.6.0, 0, !dbg !2000
  %ior.157 = or i1 %3, %icmp.315, !dbg !2000
  br i1 %ior.157, label %then.290, label %fallthrough.290

else.287:                                         ; preds = %then.286
  %icmp.310 = icmp sgt i64 %add.10, %toDeleteAddrs.sroa.7.0, !dbg !2000
  %add.10.lobit50 = or i64 %add.10, %toDeleteAddrs.sroa.7.0, !dbg !2000
  %4 = icmp slt i64 %add.10.lobit50, 0, !dbg !2000
  %5 = or i1 %icmp.310, %4, !dbg !2000
  br i1 %5, label %then.288, label %fallthrough.287

cont.197:                                         ; preds = %then.287
  %tmpv.785.sroa.0.0.copyload = load { i8*, i64 }*, { i8*, i64 }** %tmpv.785.sroa.0.0.cast.2537.sroa_idx, align 8
  %tmpv.785.sroa.3.0.copyload = load i64, i64* %1, align 8
  %tmpv.785.sroa.4.0.copyload = load i64, i64* %2, align 8
  br label %fallthrough.287

then.288:                                         ; preds = %else.287
  invoke void @__go_runtime_error(i8* nest undef, i32 3)
          to label %fallthrough.287 unwind label %pad.14.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !2000

then.290:                                         ; preds = %fallthrough.287
  invoke void @__go_runtime_error(i8* nest undef, i32 0)
          to label %fallthrough.290 unwind label %pad.14.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !2000

fallthrough.290:                                  ; preds = %fallthrough.287, %then.290
  %tmpv.788.2 = phi i64 [ %tmpv.788.0, %then.290 ], [ %toDeleteAddrs.sroa.6.0, %fallthrough.287 ]
  %ptroff.15 = getelementptr { i8*, i64 }, { i8*, i64 }* %tmpv.785.sroa.0.0, i64 %tmpv.788.2, !dbg !2000
  %runtime.writeBarrier.ld.16 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !2000
  %icmp.318 = icmp eq i32 %runtime.writeBarrier.ld.16, 0, !dbg !2000
  br i1 %icmp.318, label %then.291, label %else.291

then.291:                                         ; preds = %fallthrough.290
  %icmp.317 = icmp eq { i8*, i64 }* %ptroff.15, null, !dbg !2000
  br i1 %icmp.317, label %then.292, label %fallthrough.292

fallthrough.291:                                  ; preds = %else.291, %fallthrough.292
  %tmpv.789.2 = phi { i8*, i64 }* [ %tmpv.789.3, %fallthrough.292 ], [ %tmpv.789.0, %else.291 ]
  %toDeleteAddrs.sroa.0.0.copyload25 = load { i8*, i64 }*, { i8*, i64 }** %toDeleteAddrs.sroa.0.0.cast.2530.sroa_idx, align 8, !dbg !2001
  call void @llvm.dbg.value(metadata { i8*, i64 }* %toDeleteAddrs.sroa.0.0.copyload25, metadata !1993, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1994
  %toDeleteAddrs.sroa.6.0.copyload30 = load i64, i64* %toDeleteAddrs.sroa.6.0.cast.2530.sroa_idx27, align 8, !dbg !2001
  call void @llvm.dbg.value(metadata i64 %toDeleteAddrs.sroa.6.0.copyload30, metadata !1993, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1994
  %toDeleteAddrs.sroa.7.0.copyload35 = load i64, i64* %toDeleteAddrs.sroa.7.0.cast.2530.sroa_idx32, align 8, !dbg !2001
  call void @llvm.dbg.value(metadata i64 %toDeleteAddrs.sroa.7.0.copyload35, metadata !1993, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 64)), !dbg !1994
  br label %fallthrough.286

else.291:                                         ; preds = %fallthrough.290
  %cast.2545 = bitcast { i8*, i64 }* %ptroff.15 to i8*, !dbg !2000
  invoke void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %cast.2545, i8* nonnull %0)
          to label %fallthrough.291 unwind label %pad.14.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !2000

then.292:                                         ; preds = %then.291
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.292 unwind label %pad.14.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !2000

fallthrough.292:                                  ; preds = %then.291, %then.292
  %tmpv.789.3 = phi { i8*, i64 }* [ %tmpv.789.0, %then.292 ], [ %ptroff.15, %then.291 ]
  %cast.2543 = bitcast { i8*, i64 }* %tmpv.789.3 to i8*, !dbg !2000
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %cast.2543, i8* nonnull align 8 %0, i64 16, i1 false), !dbg !2000
  br label %fallthrough.291

then.293:                                         ; preds = %label.0
  %cast.2525 = bitcast { i8*, i64 }* %tmpv.776.field.ld.2 to i8*, !dbg !1999
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2518, i8* align 8 %cast.2525, i64 16, i1 false), !dbg !1999
  %tmpv.776.field.ld.1 = load i64*, i64** %field.771, align 8, !dbg !1999
  %.ld.214 = load i64, i64* %tmpv.776.field.ld.1, align 8, !dbg !1999
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %dest65, i8* nonnull align 8 %cast.2518, i64 16, i1 false)
  call void @llvm.dbg.value(metadata i64 %.ld.214, metadata !1995, metadata !DIExpression()), !dbg !1997
  %icmp.319 = icmp eq i64 %.ld.214, %id, !dbg !2002
  br i1 %icmp.319, label %then.286, label %fallthrough.286

else.293:                                         ; preds = %label.0
  call void @llvm.dbg.value(metadata { i8*, i64 }* %toDeleteAddrs.sroa.0.0, metadata !1993, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1994
  call void @llvm.dbg.value(metadata i64 %toDeleteAddrs.sroa.6.0, metadata !1993, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1994
  call void @llvm.dbg.value(metadata { i8*, i64 }* %toDeleteAddrs.sroa.0.0, metadata !1993, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1994
  call void @llvm.dbg.value(metadata i64 %toDeleteAddrs.sroa.6.0, metadata !1993, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1994
  call void @llvm.dbg.value(metadata { i8*, i64 }* %toDeleteAddrs.sroa.0.0, metadata !1993, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1994
  call void @llvm.dbg.value(metadata i64 %toDeleteAddrs.sroa.6.0, metadata !1993, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1994
  call void @llvm.dbg.value(metadata { i8*, i64 }* %toDeleteAddrs.sroa.0.0, metadata !1993, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1994
  call void @llvm.dbg.value(metadata i64 %toDeleteAddrs.sroa.6.0, metadata !1993, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1994
  call void @llvm.dbg.value(metadata { i8*, i64 }* %toDeleteAddrs.sroa.0.0, metadata !1993, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1994
  call void @llvm.dbg.value(metadata i64 %toDeleteAddrs.sroa.6.0, metadata !1993, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1994
  call void @llvm.dbg.value(metadata { i8*, i64 }* %toDeleteAddrs.sroa.0.0, metadata !1993, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1994
  call void @llvm.dbg.value(metadata i64 %toDeleteAddrs.sroa.6.0, metadata !1993, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1994
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0)
  %addr.0.sroa_cast = bitcast { i8*, i64 }* %addr to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %addr.0.sroa_cast)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %addr.0.sroa_cast, i8 0, i64 16, i1 false)
  %icmp.32457 = icmp sgt i64 %toDeleteAddrs.sroa.6.0, 0, !dbg !2003
  br i1 %icmp.32457, label %then.296.lr.ph, label %else.296

then.296.lr.ph:                                   ; preds = %else.293
  %cast.2564 = bitcast { i8*, i64 }* %tmpv.798 to i8*
  %addr66 = bitcast { i8*, i64 }* %addr to i8*
  br label %fallthrough.294

fallthrough.294:                                  ; preds = %cont.205, %then.296.lr.ph
  %tmpv.797.060 = phi %Server.0* [ undef, %then.296.lr.ph ], [ %tmpv.797.1, %cont.205 ]
  %tmpv.790.058 = phi i64 [ 0, %then.296.lr.ph ], [ %add.12, %cont.205 ]
  %ptroff.16 = getelementptr { i8*, i64 }, { i8*, i64 }* %toDeleteAddrs.sroa.0.0, i64 %tmpv.790.058, !dbg !2003
  %cast.2558 = bitcast { i8*, i64 }* %ptroff.16 to i8*, !dbg !2003
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %addr66, i8* align 8 %cast.2558, i64 16, i1 false)
  br i1 %icmp.305, label %then.295, label %fallthrough.295

then.295:                                         ; preds = %fallthrough.294
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %then.295.fallthrough.295_crit_edge unwind label %pad.14.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !2005

then.295.fallthrough.295_crit_edge:               ; preds = %then.295
  %.pre = getelementptr inbounds %Server.0, %Server.0* %tmpv.797.060, i64 0, i32 5, !dbg !2005
  br label %fallthrough.295, !dbg !2005

fallthrough.295:                                  ; preds = %then.295.fallthrough.295_crit_edge, %fallthrough.294
  %field.788.pre-phi = phi { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** [ %.pre, %then.295.fallthrough.295_crit_edge ], [ %field.769, %fallthrough.294 ], !dbg !2005
  %tmpv.797.1 = phi %Server.0* [ %tmpv.797.060, %then.295.fallthrough.295_crit_edge ], [ %s, %fallthrough.294 ]
  %.field.ld.110 = load { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.788.pre-phi, align 8, !dbg !2005
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2564, i8* nonnull align 8 %addr.0.sroa_cast, i64 16, i1 false)
  invoke void @runtime.mapdelete(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7int, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %.field.ld.110, i8* nonnull %cast.2564)
          to label %cont.205 unwind label %pad.14.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !2006

cont.205:                                         ; preds = %fallthrough.295
  %add.12 = add nuw nsw i64 %tmpv.790.058, 1, !dbg !2003
  %icmp.324 = icmp slt i64 %add.12, %toDeleteAddrs.sroa.6.0, !dbg !2003
  br i1 %icmp.324, label %fallthrough.294, label %else.296

else.296:                                         ; preds = %cont.205, %else.293
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %addr.0.sroa_cast)
  br i1 %icmp.305, label %then.297, label %fallthrough.297

then.297:                                         ; preds = %else.296
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.297 unwind label %pad.14.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !2007

fallthrough.297:                                  ; preds = %else.296, %then.297
  %field.789 = getelementptr inbounds %Server.0, %Server.0* %s, i64 0, i32 6, !dbg !2007
  %.field.ld.111 = load { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.789, align 8, !dbg !2007
  store i64 %id, i64* %tmpv.801, align 8
  %cast.2570 = bitcast i64* %tmpv.801 to i8*, !dbg !2008
  invoke void @runtime.mapdelete(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6int.7.1command_line_arguments.serverConn, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %.field.ld.111, i8* nonnull %cast.2570)
          to label %finally.7 unwind label %pad.14.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !2008

catchpad.7:                                       ; preds = %pad.14.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp
  %ex2.7 = landingpad { i8*, i32 }
          cleanup
  %ex2.7.fca.0.extract = extractvalue { i8*, i32 } %ex2.7, 0
  %ex2.7.fca.1.extract = extractvalue { i8*, i32 } %ex2.7, 1
  br label %finally.7

pad.15:                                           ; preds = %finish.7
  %ex.15 = landingpad { i8*, i32 }
          catch i8* null
  call void @runtime.checkdefer(i8* nest undef, i8* nonnull %tmpv.766), !dbg !1989
  br label %finish.7

finish.7:                                         ; preds = %pad.15, %finally.7
  invoke void @runtime.deferreturn(i8* nest undef, i8* nonnull %tmpv.766)
          to label %cont.209 unwind label %pad.15, !dbg !1989

cont.209:                                         ; preds = %finish.7
  %icmp.326 = icmp eq i8 %finvar.7.0, 1
  br i1 %icmp.326, label %finret.7, label %finres.7

finres.7:                                         ; preds = %cont.209
  %excv.7.fca.0.insert = insertvalue { i8*, i32 } undef, i8* %ehtmp.7.sroa.0.0, 0
  %excv.7.fca.1.insert = insertvalue { i8*, i32 } %excv.7.fca.0.insert, i32 %ehtmp.7.sroa.2.0, 1
  resume { i8*, i32 } %excv.7.fca.1.insert

finret.7:                                         ; preds = %cont.209
  ret void
}

define void @command_line_arguments.Server.route(i8* nest nocapture readnone %nest.34, %Server.0* %s, %IPPacket.0* %pkt) #0 !dbg !2009 {
entry:
  %tmp.146 = alloca %IPST.6, align 8
  %tmpv.811 = alloca %IP.0, align 8
  %tmpv.814 = alloca %IP.0, align 8
  %tmpv.816 = alloca { i8*, i64 }, align 8
  %tmpv.823 = alloca i64, align 8
  %tmpv.831 = alloca [1 x %IPST.11], align 8
  %tmpv.833 = alloca %IPPacket.0*, align 8
  call void @llvm.dbg.value(metadata %Server.0* %s, metadata !2012, metadata !DIExpression()), !dbg !2013
  call void @llvm.dbg.value(metadata %IPPacket.0* %pkt, metadata !2014, metadata !DIExpression()), !dbg !2015
  %icmp.332 = icmp eq %IPPacket.0* %pkt, null, !dbg !2016
  br i1 %icmp.332, label %then.303, label %else.303

then.303:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !2016
  unreachable

else.303:                                         ; preds = %entry
  %field.794 = getelementptr inbounds %IPPacket.0, %IPPacket.0* %pkt, i64 0, i32 1, !dbg !2016
  %cast.2586 = bitcast %IP.0* %tmpv.811 to i8*
  %cast.2587 = bitcast %IP.0* %field.794 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2586, i8* nonnull align 8 %cast.2587, i64 24, i1 false)
  %call.232 = call i8 @net.IP.IsMulticast(i8* nest undef, %IP.0* nonnull %tmpv.811), !dbg !2018
  %0 = and i8 %call.232, 1, !dbg !2019
  %trunc.305 = icmp eq i8 %0, 0, !dbg !2019
  br i1 %trunc.305, label %else.304, label %then.304

then.304:                                         ; preds = %then.312, %else.311, %else.303
  ret void, !dbg !2020

else.304:                                         ; preds = %else.303
  %icmp.333 = icmp eq %Server.0* %s, null, !dbg !2021
  br i1 %icmp.333, label %then.305, label %else.305

then.305:                                         ; preds = %else.304
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !2021
  unreachable

else.305:                                         ; preds = %else.304
  %field.795 = getelementptr inbounds %Server.0, %Server.0* %s, i64 0, i32 7, !dbg !2021
  call void @sync.Mutex.Lock(i8* nest undef, %Mutex.0* nonnull %field.795), !dbg !2022
  call void @llvm.dbg.value(metadata i64 0, metadata !2023, metadata !DIExpression()), !dbg !2024
  call void @llvm.dbg.value(metadata i8 0, metadata !2025, metadata !DIExpression()), !dbg !2024
  %cast.2590 = bitcast %IP.0* %tmpv.814 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2590, i8* nonnull align 8 %cast.2587, i64 24, i1 false)
  %call.233 = call { i64, i64 } @net.IP.String(i8* nest undef, %IP.0* nonnull %tmpv.814), !dbg !2026
  %call.233.fca.0.extract = extractvalue { i64, i64 } %call.233, 0, !dbg !2026
  %call.233.fca.1.extract = extractvalue { i64, i64 } %call.233, 1, !dbg !2026
  %sret.actual.140.sroa.0.0.cast.2593.sroa_cast = bitcast { i8*, i64 }* %tmpv.816 to i64*
  store i64 %call.233.fca.0.extract, i64* %sret.actual.140.sroa.0.0.cast.2593.sroa_cast, align 8
  %sret.actual.140.sroa.2.0.cast.2593.sroa_idx2 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.816, i64 0, i32 1
  store i64 %call.233.fca.1.extract, i64* %sret.actual.140.sroa.2.0.cast.2593.sroa_idx2, align 8
  %field.797 = getelementptr inbounds %Server.0, %Server.0* %s, i64 0, i32 5, !dbg !2027
  %.field.ld.116 = load { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.797, align 8, !dbg !2027
  %cast.2599 = bitcast { i8*, i64 }* %tmpv.816 to i8*, !dbg !2028
  %call.234 = call { i64, i8 } @runtime.mapaccess2(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7int, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %.field.ld.116, i8* nonnull %cast.2599), !dbg !2028
  %call.234.fca.0.extract = extractvalue { i64, i8 } %call.234, 0, !dbg !2028
  %call.234.fca.1.extract = extractvalue { i64, i8 } %call.234, 1, !dbg !2028
  %cast.2603 = inttoptr i64 %call.234.fca.0.extract to i64*, !dbg !2028
  %.ld.235 = load i64, i64* %cast.2603, align 8, !dbg !2028
  call void @llvm.dbg.value(metadata i64 %.ld.235, metadata !2023, metadata !DIExpression()), !dbg !2024
  call void @llvm.dbg.value(metadata i8 %call.234.fca.1.extract, metadata !2025, metadata !DIExpression()), !dbg !2024
  %1 = and i8 %call.234.fca.1.extract, 1, !dbg !2029
  %trunc.311 = icmp eq i8 %1, 0, !dbg !2029
  br i1 %trunc.311, label %else.311, label %then.308

then.308:                                         ; preds = %else.305
  call void @llvm.dbg.value(metadata %.command-line-arguments.serverConn.0* null, metadata !2030, metadata !DIExpression()), !dbg !2032
  call void @llvm.dbg.value(metadata i8 0, metadata !2033, metadata !DIExpression()), !dbg !2032
  store i64 %.ld.235, i64* %tmpv.823, align 8
  %field.800 = getelementptr inbounds %Server.0, %Server.0* %s, i64 0, i32 6, !dbg !2034
  %.field.ld.117 = load { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.800, align 8, !dbg !2034
  %cast.2608 = bitcast i64* %tmpv.823 to i8*, !dbg !2035
  %call.235 = call { i64, i8 } @runtime.mapaccess2(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6int.7.1command_line_arguments.serverConn, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %.field.ld.117, i8* nonnull %cast.2608), !dbg !2035
  %call.235.fca.1.extract = extractvalue { i64, i8 } %call.235, 1, !dbg !2035
  call void @llvm.dbg.value(metadata i8 %call.235.fca.1.extract, metadata !2033, metadata !DIExpression()), !dbg !2032
  %2 = and i8 %call.235.fca.1.extract, 1, !dbg !2036
  %trunc.310 = icmp eq i8 %2, 0, !dbg !2036
  br i1 %trunc.310, label %else.310, label %then.310

then.310:                                         ; preds = %then.308
  %call.235.fca.0.extract = extractvalue { i64, i8 } %call.235, 0, !dbg !2035
  %cast.2612 = inttoptr i64 %call.235.fca.0.extract to %.command-line-arguments.serverConn.0**, !dbg !2035
  %.ld.237 = load %.command-line-arguments.serverConn.0*, %.command-line-arguments.serverConn.0** %cast.2612, align 8, !dbg !2035
  call void @llvm.dbg.value(metadata %.command-line-arguments.serverConn.0* %.ld.237, metadata !2030, metadata !DIExpression()), !dbg !2032
  call void @command_line_arguments.serverConn.queueIP(i8* nest undef, %.command-line-arguments.serverConn.0* %.ld.237, %IPPacket.0* nonnull %pkt), !dbg !2037
  br label %else.311

else.310:                                         ; preds = %then.308
  %call.236 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @int..d), !dbg !2038
  %cast.2613 = bitcast i8* %call.236 to i64*, !dbg !2038
  store i64 %.ld.235, i64* %cast.2613, align 8, !dbg !2038
  %tmp.145.sroa.0.0.cast.2615.sroa_idx = getelementptr inbounds [1 x %IPST.11], [1 x %IPST.11]* %tmpv.831, i64 0, i64 0, i32 0, !dbg !2038
  store %_type.0* @int..d, %_type.0** %tmp.145.sroa.0.0.cast.2615.sroa_idx, align 8, !dbg !2038
  %tmp.145.sroa.2.0.cast.2615.sroa_idx7 = getelementptr inbounds [1 x %IPST.11], [1 x %IPST.11]* %tmpv.831, i64 0, i64 0, i32 1, !dbg !2038
  store i8* %call.236, i8** %tmp.145.sroa.2.0.cast.2615.sroa_idx7, align 8, !dbg !2038
  %field.805 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.146, i64 0, i32 0, !dbg !2038
  %cast.2618 = getelementptr inbounds [1 x %IPST.11], [1 x %IPST.11]* %tmpv.831, i64 0, i64 0, !dbg !2038
  store %IPST.11* %cast.2618, %IPST.11** %field.805, align 8, !dbg !2038
  %field.806 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.146, i64 0, i32 1, !dbg !2038
  store i64 1, i64* %field.806, align 8, !dbg !2038
  %field.807 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.146, i64 0, i32 2, !dbg !2038
  store i64 1, i64* %field.807, align 8, !dbg !2038
  call void @log.Printf(i8* nest undef, i64 ptrtoint ([81 x i8]* @const.302 to i64), i64 80, %IPST.6* byval nonnull %tmp.146), !dbg !2038
  br label %else.311

else.311:                                         ; preds = %then.310, %else.310, %else.305
  call void @sync.Mutex.Unlock(i8* nest undef, %Mutex.0* nonnull %field.795), !dbg !2039
  %icmp.339 = icmp eq i8 %call.234.fca.1.extract, 0, !dbg !2040
  br i1 %icmp.339, label %then.312, label %then.304

then.312:                                         ; preds = %else.311
  store %IPPacket.0* %pkt, %IPPacket.0** %tmpv.833, align 8
  %field.809 = getelementptr inbounds %Server.0, %Server.0* %s, i64 0, i32 11, !dbg !2041
  %.field.ld.118 = load {}*, {}** %field.809, align 8, !dbg !2041
  %cast.2621 = bitcast %IPPacket.0** %tmpv.833 to i8*, !dbg !2042
  call void @runtime.chansend1(i8* nest undef, {}* %.field.ld.118, i8* nonnull %cast.2621), !dbg !2042
  br label %then.304
}

define void @command_line_arguments.Server.setAddrForClient(i8* nest nocapture readnone %nest.31, %Server.0* %s, i64 %id, %IP.0* byval %addr) #0 personality i32 (i32, i32, i64, i8*, i8*)* @__gccgo_personality_v0 !dbg !2043 {
entry:
  call void @llvm.dbg.declare(metadata %IP.0* %addr, metadata !2046, metadata !DIExpression()), !dbg !2047
  %tmpv.754 = alloca i8, align 1
  %tmpv.758 = alloca { %Mutex.0* }, align 8
  %tmpv.762 = alloca { i8*, i64 }, align 8
  call void @llvm.dbg.value(metadata %Server.0* %s, metadata !2048, metadata !DIExpression()), !dbg !2049
  call void @llvm.dbg.value(metadata i64 %id, metadata !2050, metadata !DIExpression()), !dbg !2051
  store i8 0, i8* %tmpv.754, align 1
  %icmp.301 = icmp eq %Server.0* %s, null, !dbg !2052
  br i1 %icmp.301, label %then.280, label %fallthrough.280

finally.6:                                        ; preds = %cont.188, %pad.12, %catchpad.6
  %ehtmp.6.sroa.0.0 = phi i8* [ %ex2.6.fca.0.extract, %catchpad.6 ], [ undef, %pad.12 ], [ undef, %cont.188 ]
  %ehtmp.6.sroa.2.0 = phi i32 [ %ex2.6.fca.1.extract, %catchpad.6 ], [ undef, %pad.12 ], [ undef, %cont.188 ]
  %finvar.6.0 = phi i8 [ 0, %catchpad.6 ], [ 1, %pad.12 ], [ 1, %cont.188 ]
  br label %finish.6

pad.12:                                           ; preds = %fallthrough.282, %then.282, %cont.185, %fallthrough.281, %then.281, %fallthrough.280, %then.280
  %ex.12 = landingpad { i8*, i32 }
          catch i8* null
  invoke void @runtime.checkdefer(i8* nest undef, i8* nonnull %tmpv.754)
          to label %finally.6 unwind label %catchpad.6, !dbg !2053

then.280:                                         ; preds = %entry
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.280 unwind label %pad.12, !dbg !2052

fallthrough.280:                                  ; preds = %entry, %then.280
  %field.762 = getelementptr inbounds %Server.0, %Server.0* %s, i64 0, i32 7, !dbg !2052
  invoke void @sync.Mutex.Lock(i8* nest undef, %Mutex.0* nonnull %field.762)
          to label %cont.183 unwind label %pad.12, !dbg !2054

cont.183:                                         ; preds = %fallthrough.280
  br i1 %icmp.301, label %then.281, label %fallthrough.281

then.281:                                         ; preds = %cont.183
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.281 unwind label %pad.12, !dbg !2055

fallthrough.281:                                  ; preds = %cont.183, %then.281
  %cast.2494 = bitcast { %Mutex.0* }* %tmpv.758 to i8*
  %field.764 = getelementptr inbounds { %Mutex.0* }, { %Mutex.0* }* %tmpv.758, i64 0, i32 0, !dbg !2056
  store %Mutex.0* %field.762, %Mutex.0** %field.764, align 8, !dbg !2056
  invoke void @runtime.deferproc(i8* nest undef, i8* nonnull %tmpv.754, %__go_descriptor.63* bitcast (i8 (i8*, { %Mutex.0* }*)* @command_line_arguments.command_line_arguments..thunk16 to %__go_descriptor.63*), i8* nonnull %cast.2494)
          to label %cont.185 unwind label %pad.12, !dbg !2056

cont.185:                                         ; preds = %fallthrough.281
  %call.229 = invoke { i64, i64 } @net.IP.String(i8* nest undef, %IP.0* nonnull %addr)
          to label %cont.186 unwind label %pad.12, !dbg !2057

cont.186:                                         ; preds = %cont.185
  %call.229.fca.0.extract = extractvalue { i64, i64 } %call.229, 0, !dbg !2057
  %call.229.fca.1.extract = extractvalue { i64, i64 } %call.229, 1, !dbg !2057
  %tmpv.761.sroa.0.0.cast.2501.sroa_cast = bitcast { i8*, i64 }* %tmpv.762 to i64*
  store i64 %call.229.fca.0.extract, i64* %tmpv.761.sroa.0.0.cast.2501.sroa_cast, align 8
  %tmpv.761.sroa.2.0.cast.2501.sroa_idx2 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.762, i64 0, i32 1
  store i64 %call.229.fca.1.extract, i64* %tmpv.761.sroa.2.0.cast.2501.sroa_idx2, align 8
  br i1 %icmp.301, label %then.282, label %fallthrough.282

then.282:                                         ; preds = %cont.186
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.282 unwind label %pad.12, !dbg !2058

fallthrough.282:                                  ; preds = %cont.186, %then.282
  %field.765 = getelementptr inbounds %Server.0, %Server.0* %s, i64 0, i32 5, !dbg !2058
  %.field.ld.105 = load { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.765, align 8, !dbg !2058
  %cast.2505 = bitcast { i8*, i64 }* %tmpv.762 to i8*, !dbg !2059
  %call.230 = invoke i8* @runtime.mapassign(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7int, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %.field.ld.105, i8* nonnull %cast.2505)
          to label %cont.188 unwind label %pad.12, !dbg !2059

cont.188:                                         ; preds = %fallthrough.282
  %cast.2506 = bitcast i8* %call.230 to i64*, !dbg !2059
  store i64 %id, i64* %cast.2506, align 8, !dbg !2059
  br label %finally.6

catchpad.6:                                       ; preds = %pad.12
  %ex2.6 = landingpad { i8*, i32 }
          cleanup
  %ex2.6.fca.0.extract = extractvalue { i8*, i32 } %ex2.6, 0
  %ex2.6.fca.1.extract = extractvalue { i8*, i32 } %ex2.6, 1
  br label %finally.6

pad.13:                                           ; preds = %finish.6
  %ex.13 = landingpad { i8*, i32 }
          catch i8* null
  call void @runtime.checkdefer(i8* nest undef, i8* nonnull %tmpv.754), !dbg !2053
  br label %finish.6

finish.6:                                         ; preds = %pad.13, %finally.6
  invoke void @runtime.deferreturn(i8* nest undef, i8* nonnull %tmpv.754)
          to label %cont.190 unwind label %pad.13, !dbg !2053

cont.190:                                         ; preds = %finish.6
  %icmp.304 = icmp eq i8 %finvar.6.0, 1
  br i1 %icmp.304, label %finret.6, label %finres.6

finres.6:                                         ; preds = %cont.190
  %excv.6.fca.0.insert = insertvalue { i8*, i32 } undef, i8* %ehtmp.6.sroa.0.0, 0
  %excv.6.fca.1.insert = insertvalue { i8*, i32 } %excv.6.fca.0.insert, i32 %ehtmp.6.sroa.2.0, 1
  resume { i8*, i32 } %excv.6.fca.1.insert

finret.6:                                         ; preds = %cont.190
  ret void
}

define void @command_line_arguments.serverConn.initClient(i8* nest nocapture readnone %nest.19, %.command-line-arguments.serverConn.0* %c, %Server.0* %s) #0 !dbg !2060 {
entry:
  %tmp.108 = alloca %IPST.6, align 8
  %tmpv.504 = alloca { i8*, i64 }, align 8
  %tmpv.506 = alloca [2 x %IPST.11], align 8
  %tmpv.512 = alloca { %.command-line-arguments.serverConn.0*, i8*, {}* }, align 8
  %tmpv.516 = alloca { %.command-line-arguments.serverConn.0*, i8* }, align 8
  call void @llvm.dbg.value(metadata %.command-line-arguments.serverConn.0* %c, metadata !2063, metadata !DIExpression()), !dbg !2064
  call void @llvm.dbg.value(metadata %Server.0* %s, metadata !2065, metadata !DIExpression()), !dbg !2066
  %call.156 = call {}* @runtime.makechan(i8* nest undef, %_type.0* getelementptr inbounds (%ChanType.0, %ChanType.0* @type..chan.0.1command_line_arguments.IPPacket, i64 0, i32 0), i64 200), !dbg !2067
  %icmp.194 = icmp eq %.command-line-arguments.serverConn.0* %c, null, !dbg !2068
  br i1 %icmp.194, label %then.179, label %else.179

then.179:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !2068
  unreachable

else.179:                                         ; preds = %entry
  %field.502 = getelementptr inbounds %.command-line-arguments.serverConn.0, %.command-line-arguments.serverConn.0* %c, i64 0, i32 2, !dbg !2068
  %runtime.writeBarrier.ld.9 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !2069
  %icmp.196 = icmp eq i32 %runtime.writeBarrier.ld.9, 0, !dbg !2069
  br i1 %icmp.196, label %else.182.thread, label %else.182

else.182.thread:                                  ; preds = %else.179
  store {}* %call.156, {}** %field.502, align 8, !dbg !2069
  %field.5038 = getelementptr inbounds %.command-line-arguments.serverConn.0, %.command-line-arguments.serverConn.0* %c, i64 0, i32 6, !dbg !2070
  store i8 1, i8* %field.5038, align 1, !dbg !2071
  %field.5049 = getelementptr inbounds %.command-line-arguments.serverConn.0, %.command-line-arguments.serverConn.0* %c, i64 0, i32 3, !dbg !2072
  br label %else.185

else.182:                                         ; preds = %else.179
  %cast.1843 = bitcast {}** %field.502 to i8*, !dbg !2069
  %cast.1844 = bitcast {}* %call.156 to i8*, !dbg !2069
  call void @runtime.writebarrierptr(i8* nest undef, i8* nonnull %cast.1843, i8* %cast.1844), !dbg !2069
  %runtime.writeBarrier.ld.10.pr = load i32, i32* @runtime.writeBarrier, align 4, !dbg !2073
  %field.503 = getelementptr inbounds %.command-line-arguments.serverConn.0, %.command-line-arguments.serverConn.0* %c, i64 0, i32 6, !dbg !2070
  store i8 1, i8* %field.503, align 1, !dbg !2071
  %field.504 = getelementptr inbounds %.command-line-arguments.serverConn.0, %.command-line-arguments.serverConn.0* %c, i64 0, i32 3, !dbg !2072
  %icmp.200 = icmp eq i32 %runtime.writeBarrier.ld.10.pr, 0, !dbg !2073
  br i1 %icmp.200, label %else.185, label %else.184

else.184:                                         ; preds = %else.182
  %cast.1848 = bitcast %Server.0** %field.504 to i8*, !dbg !2073
  %cast.1849 = bitcast %Server.0* %s to i8*, !dbg !2073
  call void @runtime.writebarrierptr(i8* nest undef, i8* nonnull %cast.1848, i8* %cast.1849), !dbg !2073
  br label %else.186

else.185:                                         ; preds = %else.182.thread, %else.182
  %field.50411 = phi %Server.0** [ %field.5049, %else.182.thread ], [ %field.504, %else.182 ]
  store %Server.0* %s, %Server.0** %field.50411, align 8, !dbg !2073
  br label %else.186

else.186:                                         ; preds = %else.185, %else.184
  %tmpv.497.sroa.0.0.cast.1852.sroa_idx = getelementptr inbounds %.command-line-arguments.serverConn.0, %.command-line-arguments.serverConn.0* %c, i64 0, i32 0, i32 0
  %tmpv.497.sroa.0.0.copyload = load { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }** %tmpv.497.sroa.0.0.cast.1852.sroa_idx, align 8
  %tmpv.497.sroa.2.0.cast.1852.sroa_idx4 = getelementptr inbounds %.command-line-arguments.serverConn.0, %.command-line-arguments.serverConn.0* %c, i64 0, i32 0, i32 1
  %tmpv.497.sroa.2.0.copyload = load i8*, i8** %tmpv.497.sroa.2.0.cast.1852.sroa_idx4, align 8
  %field.507 = getelementptr inbounds { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }, { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }* %tmpv.497.sroa.0.0.copyload, i64 0, i32 4, !dbg !2074
  %.field.ld.61 = load { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)** %field.507, align 8, !dbg !2074
  %call.157 = call { i64, i64 } %.field.ld.61(i8* nest undef, i8* %tmpv.497.sroa.2.0.copyload), !dbg !2074
  %call.157.fca.0.extract = extractvalue { i64, i64 } %call.157, 0, !dbg !2074
  %call.157.fca.1.extract = extractvalue { i64, i64 } %call.157, 1, !dbg !2074
  %0 = inttoptr i64 %call.157.fca.0.extract to { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)* }*, !dbg !2075
  %field.510 = getelementptr inbounds { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)* }, { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)* }* %0, i64 0, i32 2, !dbg !2075
  %.field.ld.62 = load { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)** %field.510, align 8, !dbg !2075
  %1 = inttoptr i64 %call.157.fca.1.extract to i8*, !dbg !2075
  %call.158 = call { i64, i64 } %.field.ld.62(i8* nest undef, i8* %1), !dbg !2075
  %call.158.fca.1.extract = extractvalue { i64, i64 } %call.158, 1, !dbg !2075
  %call.158.fca.0.extract = extractvalue { i64, i64 } %call.158, 0, !dbg !2075
  %field.512 = getelementptr inbounds %.command-line-arguments.serverConn.0, %.command-line-arguments.serverConn.0* %c, i64 0, i32 1, !dbg !2076
  %.field.ld.63 = load i64, i64* %field.512, align 8, !dbg !2076
  %call.159 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !2077
  %tmpv.500.sroa.0.0.cast.1861.sroa_cast = bitcast { i8*, i64 }* %tmpv.504 to i64*
  store i64 %call.158.fca.0.extract, i64* %tmpv.500.sroa.0.0.cast.1861.sroa_cast, align 8
  %tmpv.500.sroa.2.0.cast.1861.sroa_idx2 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.504, i64 0, i32 1
  store i64 %call.158.fca.1.extract, i64* %tmpv.500.sroa.2.0.cast.1861.sroa_idx2, align 8
  %cast.1864 = bitcast { i8*, i64 }* %tmpv.504 to i8*, !dbg !2077
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.159, i8* nonnull %cast.1864), !dbg !2077
  %call.160 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @int..d), !dbg !2077
  %cast.1865 = bitcast i8* %call.160 to i64*, !dbg !2077
  store i64 %.field.ld.63, i64* %cast.1865, align 8, !dbg !2077
  %tmp.106.sroa.0.0.cast.1868.sroa_idx = getelementptr inbounds [2 x %IPST.11], [2 x %IPST.11]* %tmpv.506, i64 0, i64 0, i32 0, !dbg !2077
  store %_type.0* @string..d, %_type.0** %tmp.106.sroa.0.0.cast.1868.sroa_idx, align 8, !dbg !2077
  %tmp.106.sroa.2.0.cast.1868.sroa_idx5 = getelementptr inbounds [2 x %IPST.11], [2 x %IPST.11]* %tmpv.506, i64 0, i64 0, i32 1, !dbg !2077
  store i8* %call.159, i8** %tmp.106.sroa.2.0.cast.1868.sroa_idx5, align 8, !dbg !2077
  %tmp.107.sroa.0.0.cast.1870.sroa_idx = getelementptr inbounds [2 x %IPST.11], [2 x %IPST.11]* %tmpv.506, i64 0, i64 1, i32 0, !dbg !2077
  store %_type.0* @int..d, %_type.0** %tmp.107.sroa.0.0.cast.1870.sroa_idx, align 8, !dbg !2077
  %tmp.107.sroa.2.0.cast.1870.sroa_idx6 = getelementptr inbounds [2 x %IPST.11], [2 x %IPST.11]* %tmpv.506, i64 0, i64 1, i32 1, !dbg !2077
  store i8* %call.160, i8** %tmp.107.sroa.2.0.cast.1870.sroa_idx6, align 8, !dbg !2077
  %field.517 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.108, i64 0, i32 0, !dbg !2077
  %cast.1873 = getelementptr inbounds [2 x %IPST.11], [2 x %IPST.11]* %tmpv.506, i64 0, i64 0, !dbg !2077
  store %IPST.11* %cast.1873, %IPST.11** %field.517, align 8, !dbg !2077
  %field.518 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.108, i64 0, i32 1, !dbg !2077
  store i64 2, i64* %field.518, align 8, !dbg !2077
  %field.519 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.108, i64 0, i32 2, !dbg !2077
  store i64 2, i64* %field.519, align 8, !dbg !2077
  call void @log.Printf(i8* nest undef, i64 ptrtoint ([29 x i8]* @const.278 to i64), i64 28, %IPST.6* byval nonnull %tmp.108), !dbg !2077
  %icmp.203 = icmp eq %Server.0* %s, null, !dbg !2078
  br i1 %icmp.203, label %then.188, label %else.188

then.188:                                         ; preds = %else.186
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !2078
  unreachable

else.188:                                         ; preds = %else.186
  %field.520 = getelementptr inbounds %Server.0, %Server.0* %s, i64 0, i32 4, !dbg !2078
  %field.521 = getelementptr inbounds %Server.0, %Server.0* %s, i64 0, i32 9, !dbg !2079
  %2 = bitcast {}** %field.521 to i64*, !dbg !2079
  %.field.ld.647 = load i64, i64* %2, align 8, !dbg !2079
  %call.161 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.4x.5a0.0.1command_line_arguments.serverConn.2a1.0.1bool.2a2.0chan.0.1command_line_arguments.inboundIPPkt.5, i64 0, i32 0)), !dbg !2080
  %field.522 = getelementptr inbounds { %.command-line-arguments.serverConn.0*, i8*, {}* }, { %.command-line-arguments.serverConn.0*, i8*, {}* }* %tmpv.512, i64 0, i32 0, !dbg !2080
  store %.command-line-arguments.serverConn.0* %c, %.command-line-arguments.serverConn.0** %field.522, align 8, !dbg !2080
  %field.523 = getelementptr inbounds { %.command-line-arguments.serverConn.0*, i8*, {}* }, { %.command-line-arguments.serverConn.0*, i8*, {}* }* %tmpv.512, i64 0, i32 1, !dbg !2080
  store i8* %field.520, i8** %field.523, align 8, !dbg !2080
  %field.524 = getelementptr inbounds { %.command-line-arguments.serverConn.0*, i8*, {}* }, { %.command-line-arguments.serverConn.0*, i8*, {}* }* %tmpv.512, i64 0, i32 2, !dbg !2080
  %3 = bitcast {}** %field.524 to i64*, !dbg !2080
  store i64 %.field.ld.647, i64* %3, align 8, !dbg !2080
  %cast.1884 = bitcast { %.command-line-arguments.serverConn.0*, i8*, {}* }* %tmpv.512 to i8*, !dbg !2080
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.4x.5a0.0.1command_line_arguments.serverConn.2a1.0.1bool.2a2.0chan.0.1command_line_arguments.inboundIPPkt.5, i64 0, i32 0), i8* %call.161, i8* nonnull %cast.1884), !dbg !2080
  call void @__go_go(i8* nest undef, %__go_descriptor.63* bitcast (void (i8*, { %.command-line-arguments.serverConn.0*, i8*, {}* }*)* @command_line_arguments.command_line_arguments..thunk8 to %__go_descriptor.63*), i8* %call.161), !dbg !2080
  %call.162 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.4x.5a0.0.1command_line_arguments.serverConn.2a1.0.1bool.5, i64 0, i32 0)), !dbg !2081
  %field.526 = getelementptr inbounds { %.command-line-arguments.serverConn.0*, i8* }, { %.command-line-arguments.serverConn.0*, i8* }* %tmpv.516, i64 0, i32 0, !dbg !2081
  store %.command-line-arguments.serverConn.0* %c, %.command-line-arguments.serverConn.0** %field.526, align 8, !dbg !2081
  %field.527 = getelementptr inbounds { %.command-line-arguments.serverConn.0*, i8* }, { %.command-line-arguments.serverConn.0*, i8* }* %tmpv.516, i64 0, i32 1, !dbg !2081
  store i8* %field.520, i8** %field.527, align 8, !dbg !2081
  %cast.1895 = bitcast { %.command-line-arguments.serverConn.0*, i8* }* %tmpv.516 to i8*, !dbg !2081
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.4x.5a0.0.1command_line_arguments.serverConn.2a1.0.1bool.5, i64 0, i32 0), i8* %call.162, i8* nonnull %cast.1895), !dbg !2081
  call void @__go_go(i8* nest undef, %__go_descriptor.63* bitcast (void (i8*, { %.command-line-arguments.serverConn.0*, i8* }*)* @command_line_arguments.command_line_arguments..thunk9 to %__go_descriptor.63*), i8* %call.162), !dbg !2081
  ret void
}

define void @command_line_arguments.serverConn.queueIP(i8* nest nocapture readnone %nest.22, %.command-line-arguments.serverConn.0* %c, %IPPacket.0* %pkt) #0 !dbg !2082 {
entry:
  %tmp.127 = alloca %IPST.6, align 8
  %tmpv.588 = alloca %IPST.1, align 8
  %tmpv.591 = alloca %IPPacket.0*, align 8
  %tmpv.594 = alloca { i8*, i64 }, align 8
  %tmpv.595 = alloca [1 x %IPST.11], align 8
  call void @llvm.dbg.value(metadata %.command-line-arguments.serverConn.0* %c, metadata !2085, metadata !DIExpression()), !dbg !2086
  call void @llvm.dbg.value(metadata %IPPacket.0* %pkt, metadata !2087, metadata !DIExpression()), !dbg !2088
  %cast.2067 = bitcast %IPST.1* %tmpv.588 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %cast.2067, i8 0, i64 128, i1 false)
  call void @runtime.newselect(i8* nest undef, i8* nonnull %cast.2067, i64 128, i32 2), !dbg !2089
  %icmp.242 = icmp eq %.command-line-arguments.serverConn.0* %c, null, !dbg !2090
  br i1 %icmp.242, label %then.224, label %else.224

then.224:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !2090
  unreachable

else.224:                                         ; preds = %entry
  %field.619 = getelementptr inbounds %.command-line-arguments.serverConn.0, %.command-line-arguments.serverConn.0* %c, i64 0, i32 2, !dbg !2090
  %.field.ld.82 = load {}*, {}** %field.619, align 8, !dbg !2090
  store %IPPacket.0* %pkt, %IPPacket.0** %tmpv.591, align 8
  %cast.2072 = bitcast %IPPacket.0** %tmpv.591 to i8*, !dbg !2091
  call void @runtime.selectsend(i8* nest undef, i8* nonnull %cast.2067, {}* %.field.ld.82, i8* nonnull %cast.2072), !dbg !2091
  call void @runtime.selectdefault(i8* nest undef, i8* nonnull %cast.2067), !dbg !2092
  %call.191 = call i64 @runtime.selectgo(i8* nest undef, i8* nonnull %cast.2067), !dbg !2089
  %switch = icmp eq i64 %call.191, 0
  br i1 %switch, label %label.0, label %case.7

case.7:                                           ; preds = %else.224
  %call.189 = call { i64, i64 } @command_line_arguments.serverConn.remoteAddressStr(i8* nest undef, %.command-line-arguments.serverConn.0* nonnull %c), !dbg !2093
  %call.189.fca.0.extract = extractvalue { i64, i64 } %call.189, 0, !dbg !2093
  %call.189.fca.1.extract = extractvalue { i64, i64 } %call.189, 1, !dbg !2093
  %call.190 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !2094
  %tmpv.592.sroa.0.0.cast.2078.sroa_cast = bitcast { i8*, i64 }* %tmpv.594 to i64*
  store i64 %call.189.fca.0.extract, i64* %tmpv.592.sroa.0.0.cast.2078.sroa_cast, align 8
  %tmpv.592.sroa.2.0.cast.2078.sroa_idx2 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.594, i64 0, i32 1
  store i64 %call.189.fca.1.extract, i64* %tmpv.592.sroa.2.0.cast.2078.sroa_idx2, align 8
  %cast.2081 = bitcast { i8*, i64 }* %tmpv.594 to i8*, !dbg !2094
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.190, i8* nonnull %cast.2081), !dbg !2094
  %tmp.126.sroa.0.0.cast.2083.sroa_idx = getelementptr inbounds [1 x %IPST.11], [1 x %IPST.11]* %tmpv.595, i64 0, i64 0, i32 0, !dbg !2094
  store %_type.0* @string..d, %_type.0** %tmp.126.sroa.0.0.cast.2083.sroa_idx, align 8, !dbg !2094
  %tmp.126.sroa.2.0.cast.2083.sroa_idx3 = getelementptr inbounds [1 x %IPST.11], [1 x %IPST.11]* %tmpv.595, i64 0, i64 0, i32 1, !dbg !2094
  store i8* %call.190, i8** %tmp.126.sroa.2.0.cast.2083.sroa_idx3, align 8, !dbg !2094
  %field.622 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.127, i64 0, i32 0, !dbg !2094
  %cast.2086 = getelementptr inbounds [1 x %IPST.11], [1 x %IPST.11]* %tmpv.595, i64 0, i64 0, !dbg !2094
  store %IPST.11* %cast.2086, %IPST.11** %field.622, align 8, !dbg !2094
  %field.623 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.127, i64 0, i32 1, !dbg !2094
  store i64 1, i64* %field.623, align 8, !dbg !2094
  %field.624 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.127, i64 0, i32 2, !dbg !2094
  store i64 1, i64* %field.624, align 8, !dbg !2094
  call void @log.Printf(i8* nest undef, i64 ptrtoint ([65 x i8]* @const.289 to i64), i64 64, %IPST.6* byval nonnull %tmp.127), !dbg !2094
  br label %label.0

label.0:                                          ; preds = %else.224, %case.7
  ret void
}

define void @command_line_arguments.serverConn.readRoutine(i8* nest nocapture readnone %nest.21, %.command-line-arguments.serverConn.0* %c, i8* readonly %isShuttingDown, {}* %ipPacketSink) #0 !dbg !2095 {
entry:
  %tmp.125 = alloca %IPST.6, align 8
  %tmp.121 = alloca %IPST.6, align 8
  %tmp.118 = alloca %IPST.6, align 8
  %tmpv.546 = alloca { i8*, i64 }, align 8
  %tmpv.547 = alloca [1 x %IPST.11], align 8
  %tmpv.553 = alloca { i8*, i64 }, align 8
  %tmpv.554 = alloca [1 x %IPST.11], align 8
  %tmpv.557 = alloca %IPST.4, align 8
  %sret.actual.108 = alloca %IPST.7, align 8
  %tmpv.569 = alloca %IPST.4, align 8
  %tmpv.577 = alloca { i8*, i64 }, align 8
  %tmpv.578 = alloca [1 x %IPST.11], align 8
  %tmpv.583 = alloca %.command-line-arguments.inboundIPPkt.0, align 8
  %tmpv.584 = alloca %.command-line-arguments.inboundIPPkt.0*, align 8
  call void @llvm.dbg.value(metadata %.command-line-arguments.serverConn.0* %c, metadata !2098, metadata !DIExpression()), !dbg !2099
  call void @llvm.dbg.value(metadata i8* %isShuttingDown, metadata !2100, metadata !DIExpression()), !dbg !2101
  call void @llvm.dbg.value(metadata {}* %ipPacketSink, metadata !2102, metadata !DIExpression()), !dbg !2103
  %icmp.214 = icmp eq %.command-line-arguments.serverConn.0* %c, null, !dbg !2104
  br i1 %icmp.214, label %then.200, label %else.200

then.200:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !2104
  unreachable

else.200:                                         ; preds = %entry
  %tmpv.539.sroa.0.0.cast.1957.sroa_idx = getelementptr inbounds %.command-line-arguments.serverConn.0, %.command-line-arguments.serverConn.0* %c, i64 0, i32 0, i32 0
  %tmpv.539.sroa.0.0.copyload = load { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }** %tmpv.539.sroa.0.0.cast.1957.sroa_idx, align 8
  %tmpv.539.sroa.3.0.cast.1957.sroa_idx51 = getelementptr inbounds %.command-line-arguments.serverConn.0, %.command-line-arguments.serverConn.0* %c, i64 0, i32 0, i32 1
  %0 = bitcast i8** %tmpv.539.sroa.3.0.cast.1957.sroa_idx51 to i64*
  %tmpv.539.sroa.3.0.copyload70 = load i64, i64* %0, align 8
  %icmp.215 = icmp eq { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }* %tmpv.539.sroa.0.0.copyload, null, !dbg !2104
  br i1 %icmp.215, label %fallthrough.201, label %else.201

fallthrough.201:                                  ; preds = %else.200, %else.201
  %tmpv.541.0 = phi %_type.0* [ %.field.ld.71, %else.201 ], [ null, %else.200 ]
  %call.174 = call i8* @runtime.requireitab(i8* nest undef, %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @io.Reader..d, i64 0, i32 0), %_type.0* %tmpv.541.0), !dbg !2104
  %1 = ptrtoint i8* %call.174 to i64, !dbg !2104
  %call.175 = call %Decoder.0* @encoding_gob.NewDecoder(i8* nest undef, i64 %1, i64 %tmpv.539.sroa.3.0.copyload70), !dbg !2106
  call void @llvm.dbg.value(metadata %Decoder.0* %call.175, metadata !2107, metadata !DIExpression()), !dbg !2130
  %icmp.239 = icmp eq i8* %isShuttingDown, null, !dbg !2131
  br i1 %icmp.239, label %then.220, label %else.220.lr.ph

else.220.lr.ph:                                   ; preds = %fallthrough.201
  %field.618 = getelementptr inbounds %.command-line-arguments.serverConn.0, %.command-line-arguments.serverConn.0* %c, i64 0, i32 6
  %field.588 = getelementptr inbounds %.command-line-arguments.serverConn.0, %.command-line-arguments.serverConn.0* %c, i64 0, i32 5
  %cast.2007 = bitcast %IPST.4* %tmpv.557 to i8*
  %cast.2008 = bitcast %IPST.4* %field.588 to i8*
  %field.590 = getelementptr inbounds %IPST.4, %IPST.4* %tmpv.557, i64 0, i32 1
  %field.591 = getelementptr inbounds %IPST.4, %IPST.4* %tmpv.557, i64 0, i32 2
  %field.615 = getelementptr inbounds %.command-line-arguments.serverConn.0, %.command-line-arguments.serverConn.0* %c, i64 0, i32 1
  %2 = bitcast %.command-line-arguments.inboundIPPkt.0* %tmpv.583 to i8**
  %field.617 = getelementptr inbounds %.command-line-arguments.inboundIPPkt.0, %.command-line-arguments.inboundIPPkt.0* %tmpv.583, i64 0, i32 1
  %cast.2063 = bitcast %.command-line-arguments.inboundIPPkt.0* %tmpv.583 to i8*
  %3 = bitcast %.command-line-arguments.inboundIPPkt.0** %tmpv.584 to i8**
  %cast.2064 = bitcast %.command-line-arguments.inboundIPPkt.0** %tmpv.584 to i8*
  %cast.2010 = bitcast %IPST.4* %tmpv.557 to %IPST.7*
  %tmpv.564.sroa.0.0.cast.2015.sroa_idx = bitcast %IPST.7* %sret.actual.108 to %IP.0**
  %4 = getelementptr inbounds %IPST.7, %IPST.7* %sret.actual.108, i64 0, i32 1
  %5 = getelementptr inbounds %IPST.7, %IPST.7* %sret.actual.108, i64 0, i32 2
  %tmpv.564.sroa.0.0.cast.2018.sroa_idx = getelementptr inbounds %IPST.4, %IPST.4* %tmpv.557, i64 0, i32 0
  %cast.2026 = bitcast %IPST.4* %tmpv.569 to i8*
  %field.602 = getelementptr inbounds %.command-line-arguments.serverConn.0, %.command-line-arguments.serverConn.0* %c, i64 0, i32 3
  %.ld.164140 = load i8, i8* %isShuttingDown, align 1, !dbg !2131
  %icmp.240141 = icmp eq i8 %.ld.164140, 0, !dbg !2132
  br i1 %icmp.240141, label %fallthrough.221, label %else.223

else.201:                                         ; preds = %else.200
  %field.562 = getelementptr inbounds { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }, { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }* %tmpv.539.sroa.0.0.copyload, i64 0, i32 0, !dbg !2104
  %.field.ld.71 = load %_type.0*, %_type.0** %field.562, align 8, !dbg !2104
  br label %fallthrough.201

else.202:                                         ; preds = %then.223
  %.ld.162 = load i8, i8* %call.176, align 1, !dbg !2133
  switch i8 %.ld.162, label %label.2 [
    i8 2, label %case.4
    i8 1, label %case.5
  ]

else.203:                                         ; preds = %then.223
  %.ld.146 = load i8, i8* %isShuttingDown, align 1, !dbg !2135
  %icmp.217 = icmp eq i8 %.ld.146, 0, !dbg !2136
  br i1 %icmp.217, label %then.204, label %fallthrough.204

then.204:                                         ; preds = %else.203
  %6 = inttoptr i64 %call.177.fca.0.extract to { %_type.0*, { i64, i64 } (i8*, i8*)* }*, !dbg !2137
  %call.177.fca.1.extract.le = extractvalue { i64, i64 } %call.177, 1, !dbg !2138
  %field.569 = getelementptr inbounds { %_type.0*, { i64, i64 } (i8*, i8*)* }, { %_type.0*, { i64, i64 } (i8*, i8*)* }* %6, i64 0, i32 1, !dbg !2139
  %.field.ld.72 = load { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)** %field.569, align 8, !dbg !2139
  %7 = inttoptr i64 %call.177.fca.1.extract.le to i8*, !dbg !2139
  %call.178 = call { i64, i64 } %.field.ld.72(i8* nest undef, i8* %7), !dbg !2139
  %call.178.fca.0.extract = extractvalue { i64, i64 } %call.178, 0, !dbg !2139
  %call.178.fca.1.extract = extractvalue { i64, i64 } %call.178, 1, !dbg !2139
  %call.179 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !2140
  %tmpv.544.sroa.0.0.cast.1972.sroa_cast = bitcast { i8*, i64 }* %tmpv.546 to i64*
  store i64 %call.178.fca.0.extract, i64* %tmpv.544.sroa.0.0.cast.1972.sroa_cast, align 8
  %tmpv.544.sroa.2.0.cast.1972.sroa_idx37 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.546, i64 0, i32 1
  store i64 %call.178.fca.1.extract, i64* %tmpv.544.sroa.2.0.cast.1972.sroa_idx37, align 8
  %cast.1975 = bitcast { i8*, i64 }* %tmpv.546 to i8*, !dbg !2140
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.179, i8* nonnull %cast.1975), !dbg !2140
  %tmp.117.sroa.0.0.cast.1977.sroa_idx = getelementptr inbounds [1 x %IPST.11], [1 x %IPST.11]* %tmpv.547, i64 0, i64 0, i32 0, !dbg !2140
  store %_type.0* @string..d, %_type.0** %tmp.117.sroa.0.0.cast.1977.sroa_idx, align 8, !dbg !2140
  %tmp.117.sroa.2.0.cast.1977.sroa_idx56 = getelementptr inbounds [1 x %IPST.11], [1 x %IPST.11]* %tmpv.547, i64 0, i64 0, i32 1, !dbg !2140
  store i8* %call.179, i8** %tmp.117.sroa.2.0.cast.1977.sroa_idx56, align 8, !dbg !2140
  %field.573 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.118, i64 0, i32 0, !dbg !2140
  %cast.1980 = getelementptr inbounds [1 x %IPST.11], [1 x %IPST.11]* %tmpv.547, i64 0, i64 0, !dbg !2140
  store %IPST.11* %cast.1980, %IPST.11** %field.573, align 8, !dbg !2140
  %field.574 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.118, i64 0, i32 1, !dbg !2140
  store i64 1, i64* %field.574, align 8, !dbg !2140
  %field.575 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.118, i64 0, i32 2, !dbg !2140
  store i64 1, i64* %field.575, align 8, !dbg !2140
  call void @log.Printf(i8* nest undef, i64 ptrtoint ([23 x i8]* @const.285 to i64), i64 22, %IPST.6* byval nonnull %tmp.118), !dbg !2140
  br label %fallthrough.204

fallthrough.204:                                  ; preds = %else.203, %then.204
  call void @command_line_arguments.serverConn.hadError(i8* nest undef, %.command-line-arguments.serverConn.0* nonnull %c, i8 zeroext 1), !dbg !2141
  ret void, !dbg !2142

case.4:                                           ; preds = %else.202
  %call.180 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @net.IP..d, i64 0, i32 0)), !dbg !2143
  %cast.1984 = bitcast i8* %call.180 to %IP.0*, !dbg !2143
  call void @llvm.dbg.value(metadata %IP.0* %cast.1984, metadata !2145, metadata !DIExpression()), !dbg !2146
  %8 = ptrtoint i8* %call.180 to i64, !dbg !2147
  %call.181 = call { i64, i64 } @encoding_gob.Decoder.Decode(i8* nest undef, %Decoder.0* %call.175, i64 ptrtoint (%PtrType.0* @type...1net.IP to i64), i64 %8), !dbg !2148
  %call.181.fca.0.extract = extractvalue { i64, i64 } %call.181, 0, !dbg !2148
  call void @llvm.dbg.value(metadata i64 %call.181.fca.0.extract, metadata !2149, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2150
  %icmp.219 = icmp eq i64 %call.181.fca.0.extract, 0, !dbg !2151
  br i1 %icmp.219, label %else.207, label %then.205

case.5:                                           ; preds = %else.202
  %call.184 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.IPPacket..d, i64 0, i32 0)), !dbg !2152
  call void @llvm.dbg.value(metadata i8* %call.184, metadata !2154, metadata !DIExpression()), !dbg !2155
  %9 = ptrtoint i8* %call.184 to i64, !dbg !2156
  %call.185 = call { i64, i64 } @encoding_gob.Decoder.Decode(i8* nest undef, %Decoder.0* %call.175, i64 ptrtoint (%PtrType.0* @type...1command_line_arguments.IPPacket to i64), i64 %9), !dbg !2157
  %call.185.fca.0.extract = extractvalue { i64, i64 } %call.185, 0, !dbg !2157
  call void @llvm.dbg.value(metadata i64 %call.185.fca.0.extract, metadata !2158, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2159
  %icmp.237 = icmp eq i64 %call.185.fca.0.extract, 0, !dbg !2160
  br i1 %icmp.237, label %else.219, label %then.218

then.205:                                         ; preds = %case.4
  %10 = inttoptr i64 %call.181.fca.0.extract to { %_type.0*, { i64, i64 } (i8*, i8*)* }*, !dbg !2151
  %call.181.fca.1.extract = extractvalue { i64, i64 } %call.181, 1, !dbg !2148
  call void @llvm.dbg.value(metadata i64 %call.181.fca.1.extract, metadata !2149, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2150
  %field.580 = getelementptr inbounds { %_type.0*, { i64, i64 } (i8*, i8*)* }, { %_type.0*, { i64, i64 } (i8*, i8*)* }* %10, i64 0, i32 1, !dbg !2161
  %.field.ld.73 = load { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)** %field.580, align 8, !dbg !2161
  %11 = inttoptr i64 %call.181.fca.1.extract to i8*, !dbg !2161
  %call.182 = call { i64, i64 } %.field.ld.73(i8* nest undef, i8* %11), !dbg !2161
  %call.182.fca.0.extract = extractvalue { i64, i64 } %call.182, 0, !dbg !2161
  %call.182.fca.1.extract = extractvalue { i64, i64 } %call.182, 1, !dbg !2161
  %call.183 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !2162
  %tmpv.551.sroa.0.0.cast.1995.sroa_cast = bitcast { i8*, i64 }* %tmpv.553 to i64*
  store i64 %call.182.fca.0.extract, i64* %tmpv.551.sroa.0.0.cast.1995.sroa_cast, align 8
  %tmpv.551.sroa.2.0.cast.1995.sroa_idx28 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.553, i64 0, i32 1
  store i64 %call.182.fca.1.extract, i64* %tmpv.551.sroa.2.0.cast.1995.sroa_idx28, align 8
  %cast.1998 = bitcast { i8*, i64 }* %tmpv.553 to i8*, !dbg !2162
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.183, i8* nonnull %cast.1998), !dbg !2162
  %tmp.120.sroa.0.0.cast.2000.sroa_idx = getelementptr inbounds [1 x %IPST.11], [1 x %IPST.11]* %tmpv.554, i64 0, i64 0, i32 0, !dbg !2162
  store %_type.0* @string..d, %_type.0** %tmp.120.sroa.0.0.cast.2000.sroa_idx, align 8, !dbg !2162
  %tmp.120.sroa.2.0.cast.2000.sroa_idx57 = getelementptr inbounds [1 x %IPST.11], [1 x %IPST.11]* %tmpv.554, i64 0, i64 0, i32 1, !dbg !2162
  store i8* %call.183, i8** %tmp.120.sroa.2.0.cast.2000.sroa_idx57, align 8, !dbg !2162
  %field.584 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.121, i64 0, i32 0, !dbg !2162
  %cast.2003 = getelementptr inbounds [1 x %IPST.11], [1 x %IPST.11]* %tmpv.554, i64 0, i64 0, !dbg !2162
  store %IPST.11* %cast.2003, %IPST.11** %field.584, align 8, !dbg !2162
  %field.585 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.121, i64 0, i32 1, !dbg !2162
  store i64 1, i64* %field.585, align 8, !dbg !2162
  %field.586 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.121, i64 0, i32 2, !dbg !2162
  store i64 1, i64* %field.586, align 8, !dbg !2162
  call void @log.Printf(i8* nest undef, i64 ptrtoint ([28 x i8]* @const.287 to i64), i64 27, %IPST.6* byval nonnull %tmp.121), !dbg !2162
  call void @command_line_arguments.serverConn.hadError(i8* nest undef, %.command-line-arguments.serverConn.0* nonnull %c, i8 zeroext 0), !dbg !2163
  ret void, !dbg !2164

else.207:                                         ; preds = %case.4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2007, i8* nonnull align 8 %cast.2008, i64 24, i1 false)
  %tmpv.557.field.ld.0 = load i64, i64* %field.590, align 8, !dbg !2165
  %add.7 = add i64 %tmpv.557.field.ld.0, 1, !dbg !2165
  %tmpv.557.field.ld.1 = load i64, i64* %field.591, align 8, !dbg !2165
  %icmp.222 = icmp ugt i64 %add.7, %tmpv.557.field.ld.1, !dbg !2165
  br i1 %icmp.222, label %then.208, label %else.208

then.208:                                         ; preds = %else.207
  call void @runtime.growslice(%IPST.7* nonnull sret %sret.actual.108, i8* nest undef, %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @net.IP..d, i64 0, i32 0), %IPST.7* byval nonnull %cast.2010, i64 %add.7), !dbg !2165
  %tmpv.564.sroa.0.0.copyload = load %IP.0*, %IP.0** %tmpv.564.sroa.0.0.cast.2015.sroa_idx, align 8
  %tmpv.564.sroa.3.0.copyload = load i64, i64* %4, align 8
  %tmpv.564.sroa.4.0.copyload = load i64, i64* %5, align 8
  br label %fallthrough.208

fallthrough.208:                                  ; preds = %else.209, %then.208
  %tmpv.564.sroa.0.0 = phi %IP.0* [ %tmpv.564.sroa.0.0.copyload, %then.208 ], [ %tmpv.557.field.ld.3, %else.209 ]
  %tmpv.564.sroa.3.0 = phi i64 [ %tmpv.564.sroa.3.0.copyload, %then.208 ], [ %add.7, %else.209 ]
  %tmpv.564.sroa.4.0 = phi i64 [ %tmpv.564.sroa.4.0.copyload, %then.208 ], [ %tmpv.557.field.ld.1, %else.209 ]
  store %IP.0* %tmpv.564.sroa.0.0, %IP.0** %tmpv.564.sroa.0.0.cast.2018.sroa_idx, align 8, !dbg !2165
  store i64 %tmpv.564.sroa.3.0, i64* %field.590, align 8, !dbg !2165
  store i64 %tmpv.564.sroa.4.0, i64* %field.591, align 8, !dbg !2165
  %icmp.229 = icmp sge i64 %tmpv.557.field.ld.0, %tmpv.564.sroa.3.0, !dbg !2165
  %12 = icmp slt i64 %tmpv.557.field.ld.0, 0, !dbg !2165
  %ior.146 = or i1 %12, %icmp.229, !dbg !2165
  br i1 %ior.146, label %then.211, label %else.211

else.208:                                         ; preds = %else.207
  %icmp.224 = icmp sgt i64 %add.7, %tmpv.557.field.ld.1, !dbg !2165
  %add.7.lobit72 = or i64 %add.7, %tmpv.557.field.ld.1, !dbg !2165
  %13 = icmp slt i64 %add.7.lobit72, 0, !dbg !2165
  %14 = or i1 %icmp.224, %13, !dbg !2165
  br i1 %14, label %then.209, label %else.209

then.209:                                         ; preds = %else.208
  call void @__go_runtime_error(i8* nest undef, i32 3), !dbg !2165
  unreachable

else.209:                                         ; preds = %else.208
  %tmpv.557.field.ld.3 = load %IP.0*, %IP.0** %tmpv.564.sroa.0.0.cast.2018.sroa_idx, align 8, !dbg !2165
  br label %fallthrough.208

then.211:                                         ; preds = %fallthrough.208
  call void @__go_runtime_error(i8* nest undef, i32 0), !dbg !2165
  unreachable

else.211:                                         ; preds = %fallthrough.208
  %ptroff.12 = getelementptr %IP.0, %IP.0* %tmpv.564.sroa.0.0, i64 %tmpv.557.field.ld.0, !dbg !2165
  %runtime.writeBarrier.ld.11 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !2165
  %icmp.232 = icmp eq i32 %runtime.writeBarrier.ld.11, 0, !dbg !2165
  br i1 %icmp.232, label %then.212, label %else.212

then.212:                                         ; preds = %else.211
  %icmp.231 = icmp eq %IP.0* %ptroff.12, null, !dbg !2165
  br i1 %icmp.231, label %then.213, label %else.213

fallthrough.212:                                  ; preds = %else.212, %else.213
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2026, i8* nonnull align 8 %cast.2007, i64 24, i1 false)
  %runtime.writeBarrier.ld.12 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !2166
  %icmp.234 = icmp eq i32 %runtime.writeBarrier.ld.12, 0, !dbg !2166
  br i1 %icmp.234, label %else.215, label %else.214

else.212:                                         ; preds = %else.211
  %cast.2024 = bitcast %IP.0* %ptroff.12 to i8*, !dbg !2165
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @net.IP..d, i64 0, i32 0), i8* %cast.2024, i8* %call.180), !dbg !2165
  br label %fallthrough.212

then.213:                                         ; preds = %then.212
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !2165
  unreachable

else.213:                                         ; preds = %then.212
  %cast.2021 = bitcast %IP.0* %ptroff.12 to i8*, !dbg !2165
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %cast.2021, i8* align 8 %call.180, i64 24, i1 false), !dbg !2165
  br label %fallthrough.212

else.214:                                         ; preds = %fallthrough.212
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7net.IP, i64 0, i32 0), i8* nonnull %cast.2008, i8* nonnull %cast.2026), !dbg !2166
  br label %else.217

else.215:                                         ; preds = %fallthrough.212
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2008, i8* nonnull align 8 %cast.2026, i64 24, i1 false), !dbg !2166
  br label %else.217

else.217:                                         ; preds = %else.214, %else.215
  %.field.ld.77 = load %Server.0*, %Server.0** %field.602, align 8, !dbg !2167
  %.field.ld.78 = load i64, i64* %field.615, align 8, !dbg !2168
  call void @command_line_arguments.Server.setAddrForClient(i8* nest undef, %Server.0* %.field.ld.77, i64 %.field.ld.78, %IP.0* byval %cast.1984), !dbg !2169
  br label %label.2

label.2:                                          ; preds = %else.202, %else.219, %else.217
  %.ld.164 = load i8, i8* %isShuttingDown, align 1, !dbg !2131
  %icmp.240 = icmp eq i8 %.ld.164, 0, !dbg !2132
  br i1 %icmp.240, label %fallthrough.221, label %else.223

then.218:                                         ; preds = %case.5
  %15 = inttoptr i64 %call.185.fca.0.extract to { %_type.0*, { i64, i64 } (i8*, i8*)* }*, !dbg !2160
  %call.185.fca.1.extract = extractvalue { i64, i64 } %call.185, 1, !dbg !2157
  call void @llvm.dbg.value(metadata i64 %call.185.fca.1.extract, metadata !2158, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2159
  %field.607 = getelementptr inbounds { %_type.0*, { i64, i64 } (i8*, i8*)* }, { %_type.0*, { i64, i64 } (i8*, i8*)* }* %15, i64 0, i32 1, !dbg !2170
  %.field.ld.79 = load { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)** %field.607, align 8, !dbg !2170
  %16 = inttoptr i64 %call.185.fca.1.extract to i8*, !dbg !2170
  %call.186 = call { i64, i64 } %.field.ld.79(i8* nest undef, i8* %16), !dbg !2170
  %call.186.fca.0.extract = extractvalue { i64, i64 } %call.186, 0, !dbg !2170
  %call.186.fca.1.extract = extractvalue { i64, i64 } %call.186, 1, !dbg !2170
  %call.187 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !2171
  %tmpv.575.sroa.0.0.cast.2048.sroa_cast = bitcast { i8*, i64 }* %tmpv.577 to i64*
  store i64 %call.186.fca.0.extract, i64* %tmpv.575.sroa.0.0.cast.2048.sroa_cast, align 8
  %tmpv.575.sroa.2.0.cast.2048.sroa_idx5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.577, i64 0, i32 1
  store i64 %call.186.fca.1.extract, i64* %tmpv.575.sroa.2.0.cast.2048.sroa_idx5, align 8
  %cast.2051 = bitcast { i8*, i64 }* %tmpv.577 to i8*, !dbg !2171
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.187, i8* nonnull %cast.2051), !dbg !2171
  %tmp.124.sroa.0.0.cast.2053.sroa_idx = getelementptr inbounds [1 x %IPST.11], [1 x %IPST.11]* %tmpv.578, i64 0, i64 0, i32 0, !dbg !2171
  store %_type.0* @string..d, %_type.0** %tmp.124.sroa.0.0.cast.2053.sroa_idx, align 8, !dbg !2171
  %tmp.124.sroa.2.0.cast.2053.sroa_idx69 = getelementptr inbounds [1 x %IPST.11], [1 x %IPST.11]* %tmpv.578, i64 0, i64 0, i32 1, !dbg !2171
  store i8* %call.187, i8** %tmp.124.sroa.2.0.cast.2053.sroa_idx69, align 8, !dbg !2171
  %field.611 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.125, i64 0, i32 0, !dbg !2171
  %cast.2056 = getelementptr inbounds [1 x %IPST.11], [1 x %IPST.11]* %tmpv.578, i64 0, i64 0, !dbg !2171
  store %IPST.11* %cast.2056, %IPST.11** %field.611, align 8, !dbg !2171
  %field.612 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.125, i64 0, i32 1, !dbg !2171
  store i64 1, i64* %field.612, align 8, !dbg !2171
  %field.613 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.125, i64 0, i32 2, !dbg !2171
  store i64 1, i64* %field.613, align 8, !dbg !2171
  call void @log.Printf(i8* nest undef, i64 ptrtoint ([30 x i8]* @const.126 to i64), i64 29, %IPST.6* byval nonnull %tmp.125), !dbg !2171
  call void @command_line_arguments.serverConn.hadError(i8* nest undef, %.command-line-arguments.serverConn.0* nonnull %c, i8 zeroext 0), !dbg !2172
  ret void, !dbg !2173

else.219:                                         ; preds = %case.5
  %.field.ld.80 = load i64, i64* %field.615, align 8, !dbg !2174
  %call.188 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments..command_line_arguments.inboundIPPkt..d, i64 0, i32 0)), !dbg !2175
  store i8* %call.184, i8** %2, align 8, !dbg !2176
  store i64 %.field.ld.80, i64* %field.617, align 8, !dbg !2176
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments..command_line_arguments.inboundIPPkt..d, i64 0, i32 0), i8* %call.188, i8* nonnull %cast.2063), !dbg !2175
  store i8* %call.188, i8** %3, align 8
  call void @runtime.chansend1(i8* nest undef, {}* %ipPacketSink, i8* nonnull %cast.2064), !dbg !2177
  br label %label.2

then.220:                                         ; preds = %fallthrough.201
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !2131
  unreachable

fallthrough.221:                                  ; preds = %else.220.lr.ph, %label.2
  %.field.ld.81 = load i8, i8* %field.618, align 1, !dbg !2178
  %17 = and i8 %.field.ld.81, 1, !dbg !2179
  %trunc.224 = icmp eq i8 %17, 0, !dbg !2179
  br i1 %trunc.224, label %else.223, label %then.223

then.223:                                         ; preds = %fallthrough.221
  %call.176 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @github_com_twitchyliquid64_subnet_subnet_conn.PktType..d), !dbg !2180
  call void @llvm.dbg.value(metadata i8* %call.176, metadata !2181, metadata !DIExpression()), !dbg !2182
  %18 = ptrtoint i8* %call.176 to i64, !dbg !2183
  %call.177 = call { i64, i64 } @encoding_gob.Decoder.Decode(i8* nest undef, %Decoder.0* %call.175, i64 ptrtoint (%PtrType.0* @type...1github_com_twitchyliquid64_subnet_subnet_conn.PktType to i64), i64 %18), !dbg !2138
  %call.177.fca.0.extract = extractvalue { i64, i64 } %call.177, 0, !dbg !2138
  call void @llvm.dbg.value(metadata i64 %call.177.fca.0.extract, metadata !2184, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2185
  %icmp.218 = icmp eq i64 %call.177.fca.0.extract, 0, !dbg !2137
  br i1 %icmp.218, label %else.202, label %else.203

else.223:                                         ; preds = %fallthrough.221, %label.2, %else.220.lr.ph
  ret void
}

define { i64, i64 } @command_line_arguments.serverConn.remoteAddressStr(i8* nest nocapture readnone %nest.23, %.command-line-arguments.serverConn.0* readonly %c) #0 !dbg !2186 {
entry:
  %tmpv.600 = alloca %IP.0, align 8
  call void @llvm.dbg.value(metadata %.command-line-arguments.serverConn.0* %c, metadata !2189, metadata !DIExpression()), !dbg !2190
  %icmp.243 = icmp eq %.command-line-arguments.serverConn.0* %c, null, !dbg !2191
  br i1 %icmp.243, label %then.225, label %else.225

then.225:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !2191
  unreachable

else.225:                                         ; preds = %entry
  %field.626 = getelementptr inbounds %.command-line-arguments.serverConn.0, %.command-line-arguments.serverConn.0* %c, i64 0, i32 5, i32 1, !dbg !2191
  %.field.field.ld.0 = load i64, i64* %field.626, align 8, !dbg !2191
  %icmp.244 = icmp eq i64 %.field.field.ld.0, 0, !dbg !2192
  br i1 %icmp.244, label %then.226, label %else.227

then.226:                                         ; preds = %else.225
  call void @llvm.dbg.value(metadata i64 0, metadata !2193, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2194
  call void @llvm.dbg.value(metadata i64 0, metadata !2193, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2194
  ret { i64, i64 } zeroinitializer, !dbg !2195

else.227:                                         ; preds = %else.225
  %icmp.246 = icmp slt i64 %.field.field.ld.0, 1, !dbg !2196
  br i1 %icmp.246, label %then.228, label %else.228

then.228:                                         ; preds = %else.227
  call void @__go_runtime_error(i8* nest undef, i32 0), !dbg !2196
  unreachable

else.228:                                         ; preds = %else.227
  %tmpv.597.sroa.0.0.cast.2094.sroa_idx = getelementptr inbounds %.command-line-arguments.serverConn.0, %.command-line-arguments.serverConn.0* %c, i64 0, i32 5, i32 0
  %0 = bitcast %IP.0** %tmpv.597.sroa.0.0.cast.2094.sroa_idx to i8**
  %tmpv.597.sroa.0.0.copyload14 = load i8*, i8** %0, align 8
  %cast.2095 = bitcast %IP.0* %tmpv.600 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2095, i8* align 8 %tmpv.597.sroa.0.0.copyload14, i64 24, i1 false)
  %call.192 = call { i64, i64 } @net.IP.String(i8* nest undef, %IP.0* nonnull %tmpv.600), !dbg !2197
  ret { i64, i64 } %call.192, !dbg !2198
}

define void @command_line_arguments.serverConn.writeRoutine(i8* nest nocapture readnone %nest.20, %.command-line-arguments.serverConn.0* %c, i8* readonly %isShuttingDown) #0 !dbg !2199 {
entry:
  %tmp.114 = alloca %IPST.6, align 8
  %tmpv.520 = alloca %IPST.2, align 8
  %tmpv.523 = alloca %IPPacket.0*, align 8
  %tmpv.532 = alloca { i8*, i64 }, align 8
  %tmpv.534 = alloca { i8*, i64 }, align 8
  %tmpv.535 = alloca [2 x %IPST.11], align 8
  call void @llvm.dbg.value(metadata %.command-line-arguments.serverConn.0* %c, metadata !2202, metadata !DIExpression()), !dbg !2203
  call void @llvm.dbg.value(metadata i8* %isShuttingDown, metadata !2204, metadata !DIExpression()), !dbg !2205
  %icmp.206 = icmp eq %.command-line-arguments.serverConn.0* %c, null, !dbg !2206
  br i1 %icmp.206, label %then.191, label %else.191

then.191:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !2206
  unreachable

else.191:                                         ; preds = %entry
  %tmpv.517.sroa.0.0.cast.1900.sroa_idx = getelementptr inbounds %.command-line-arguments.serverConn.0, %.command-line-arguments.serverConn.0* %c, i64 0, i32 0, i32 0
  %tmpv.517.sroa.0.0.copyload = load { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }** %tmpv.517.sroa.0.0.cast.1900.sroa_idx, align 8
  %tmpv.517.sroa.3.0.cast.1900.sroa_idx15 = getelementptr inbounds %.command-line-arguments.serverConn.0, %.command-line-arguments.serverConn.0* %c, i64 0, i32 0, i32 1
  %0 = bitcast i8** %tmpv.517.sroa.3.0.cast.1900.sroa_idx15 to i64*
  %tmpv.517.sroa.3.0.copyload20 = load i64, i64* %0, align 8
  %icmp.207 = icmp eq { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }* %tmpv.517.sroa.0.0.copyload, null, !dbg !2206
  br i1 %icmp.207, label %fallthrough.192, label %else.192

fallthrough.192:                                  ; preds = %else.191, %else.192
  %tmpv.519.0 = phi %_type.0* [ %.field.ld.65, %else.192 ], [ null, %else.191 ]
  %call.163 = call i8* @runtime.requireitab(i8* nest undef, %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @io.Writer..d, i64 0, i32 0), %_type.0* %tmpv.519.0), !dbg !2206
  %1 = ptrtoint i8* %call.163 to i64, !dbg !2206
  %call.164 = call %Encoder.0* @encoding_gob.NewEncoder(i8* nest undef, i64 %1, i64 %tmpv.517.sroa.3.0.copyload20), !dbg !2208
  call void @llvm.dbg.value(metadata %Encoder.0* %call.164, metadata !2209, metadata !DIExpression()), !dbg !2210
  %icmp.211 = icmp eq i8* %isShuttingDown, null
  %field.558 = getelementptr inbounds %.command-line-arguments.serverConn.0, %.command-line-arguments.serverConn.0* %c, i64 0, i32 6
  %cast.1906 = bitcast %IPST.2* %tmpv.520 to i8*
  %field.535 = getelementptr inbounds %.command-line-arguments.serverConn.0, %.command-line-arguments.serverConn.0* %c, i64 0, i32 2
  %cast.1911 = bitcast %IPPacket.0** %tmpv.523 to i8*
  %2 = bitcast %IPPacket.0** %tmpv.523 to i64*
  br i1 %icmp.211, label %then.196.split, label %label.0

else.192:                                         ; preds = %else.191
  %field.531 = getelementptr inbounds { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }, { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }* %tmpv.517.sroa.0.0.copyload, i64 0, i32 0, !dbg !2206
  %.field.ld.65 = load %_type.0*, %_type.0** %field.531, align 8, !dbg !2206
  br label %fallthrough.192

label.0:                                          ; preds = %fallthrough.192, %then.199
  %.ld.142 = load i8, i8* %isShuttingDown, align 1, !dbg !2211
  %icmp.212 = icmp eq i8 %.ld.142, 0, !dbg !2212
  br i1 %icmp.212, label %fallthrough.197, label %else.199

else.195:                                         ; preds = %then.199
  %3 = inttoptr i64 %call.167.fca.0.extract to { %_type.0*, { i64, i64 } (i8*, i8*)* }*, !dbg !2213
  %call.167.fca.1.extract = extractvalue { i64, i64 } %call.167, 1, !dbg !2215
  call void @llvm.dbg.value(metadata i64 %call.167.fca.1.extract, metadata !2216, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2217
  %tmpv.526.sroa.0.0.copyload = load { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }** %tmpv.517.sroa.0.0.cast.1900.sroa_idx, align 8
  %tmpv.526.sroa.2.0.copyload = load i8*, i8** %tmpv.517.sroa.3.0.cast.1900.sroa_idx15, align 8
  %field.542 = getelementptr inbounds { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }, { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }* %tmpv.526.sroa.0.0.copyload, i64 0, i32 4, !dbg !2218
  %.field.ld.67 = load { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)** %field.542, align 8, !dbg !2218
  %call.168 = call { i64, i64 } %.field.ld.67(i8* nest undef, i8* %tmpv.526.sroa.2.0.copyload), !dbg !2218
  %call.168.fca.0.extract = extractvalue { i64, i64 } %call.168, 0, !dbg !2218
  %call.168.fca.1.extract = extractvalue { i64, i64 } %call.168, 1, !dbg !2218
  %4 = inttoptr i64 %call.168.fca.0.extract to { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)* }*, !dbg !2219
  %field.545 = getelementptr inbounds { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)* }, { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)* }* %4, i64 0, i32 2, !dbg !2219
  %.field.ld.68 = load { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)** %field.545, align 8, !dbg !2219
  %5 = inttoptr i64 %call.168.fca.1.extract to i8*, !dbg !2219
  %call.169 = call { i64, i64 } %.field.ld.68(i8* nest undef, i8* %5), !dbg !2219
  %call.169.fca.0.extract = extractvalue { i64, i64 } %call.169, 0, !dbg !2219
  %call.169.fca.1.extract = extractvalue { i64, i64 } %call.169, 1, !dbg !2219
  %field.548 = getelementptr inbounds { %_type.0*, { i64, i64 } (i8*, i8*)* }, { %_type.0*, { i64, i64 } (i8*, i8*)* }* %3, i64 0, i32 1, !dbg !2220
  %.field.ld.69 = load { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)** %field.548, align 8, !dbg !2220
  %6 = inttoptr i64 %call.167.fca.1.extract to i8*, !dbg !2220
  %call.170 = call { i64, i64 } %.field.ld.69(i8* nest undef, i8* %6), !dbg !2220
  %call.170.fca.0.extract = extractvalue { i64, i64 } %call.170, 0, !dbg !2220
  %call.170.fca.1.extract = extractvalue { i64, i64 } %call.170, 1, !dbg !2220
  %call.171 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !2221
  %tmpv.529.sroa.0.0.cast.1934.sroa_cast = bitcast { i8*, i64 }* %tmpv.532 to i64*
  store i64 %call.169.fca.0.extract, i64* %tmpv.529.sroa.0.0.cast.1934.sroa_cast, align 8
  %tmpv.529.sroa.2.0.cast.1934.sroa_idx5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.532, i64 0, i32 1
  store i64 %call.169.fca.1.extract, i64* %tmpv.529.sroa.2.0.cast.1934.sroa_idx5, align 8
  %cast.1937 = bitcast { i8*, i64 }* %tmpv.532 to i8*, !dbg !2221
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.171, i8* nonnull %cast.1937), !dbg !2221
  %call.172 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !2221
  %tmpv.530.sroa.0.0.cast.1939.sroa_cast = bitcast { i8*, i64 }* %tmpv.534 to i64*
  store i64 %call.170.fca.0.extract, i64* %tmpv.530.sroa.0.0.cast.1939.sroa_cast, align 8
  %tmpv.530.sroa.2.0.cast.1939.sroa_idx3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.534, i64 0, i32 1
  store i64 %call.170.fca.1.extract, i64* %tmpv.530.sroa.2.0.cast.1939.sroa_idx3, align 8
  %cast.1942 = bitcast { i8*, i64 }* %tmpv.534 to i8*, !dbg !2221
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.172, i8* nonnull %cast.1942), !dbg !2221
  %tmp.112.sroa.0.0.cast.1945.sroa_idx = getelementptr inbounds [2 x %IPST.11], [2 x %IPST.11]* %tmpv.535, i64 0, i64 0, i32 0, !dbg !2221
  store %_type.0* @string..d, %_type.0** %tmp.112.sroa.0.0.cast.1945.sroa_idx, align 8, !dbg !2221
  %tmp.112.sroa.2.0.cast.1945.sroa_idx18 = getelementptr inbounds [2 x %IPST.11], [2 x %IPST.11]* %tmpv.535, i64 0, i64 0, i32 1, !dbg !2221
  store i8* %call.171, i8** %tmp.112.sroa.2.0.cast.1945.sroa_idx18, align 8, !dbg !2221
  %tmp.113.sroa.0.0.cast.1947.sroa_idx = getelementptr inbounds [2 x %IPST.11], [2 x %IPST.11]* %tmpv.535, i64 0, i64 1, i32 0, !dbg !2221
  store %_type.0* @string..d, %_type.0** %tmp.113.sroa.0.0.cast.1947.sroa_idx, align 8, !dbg !2221
  %tmp.113.sroa.2.0.cast.1947.sroa_idx19 = getelementptr inbounds [2 x %IPST.11], [2 x %IPST.11]* %tmpv.535, i64 0, i64 1, i32 1, !dbg !2221
  store i8* %call.172, i8** %tmp.113.sroa.2.0.cast.1947.sroa_idx19, align 8, !dbg !2221
  %field.554 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.114, i64 0, i32 0, !dbg !2221
  %cast.1950 = getelementptr inbounds [2 x %IPST.11], [2 x %IPST.11]* %tmpv.535, i64 0, i64 0, !dbg !2221
  store %IPST.11* %cast.1950, %IPST.11** %field.554, align 8, !dbg !2221
  %field.555 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.114, i64 0, i32 1, !dbg !2221
  store i64 2, i64* %field.555, align 8, !dbg !2221
  %field.556 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.114, i64 0, i32 2, !dbg !2221
  store i64 2, i64* %field.556, align 8, !dbg !2221
  call void @log.Printf(i8* nest undef, i64 ptrtoint ([24 x i8]* @const.283 to i64), i64 23, %IPST.6* byval nonnull %tmp.114), !dbg !2221
  call void @command_line_arguments.serverConn.hadError(i8* nest undef, %.command-line-arguments.serverConn.0* nonnull %c, i8 zeroext 0), !dbg !2222
  ret void, !dbg !2223

then.196.split:                                   ; preds = %fallthrough.192
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !2211
  unreachable

fallthrough.197:                                  ; preds = %label.0
  %.field.ld.70 = load i8, i8* %field.558, align 1, !dbg !2224
  %7 = and i8 %.field.ld.70, 1, !dbg !2225
  %trunc.200 = icmp eq i8 %7, 0, !dbg !2225
  br i1 %trunc.200, label %else.199, label %then.199

then.199:                                         ; preds = %fallthrough.197
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %cast.1906, i8 0, i64 80, i1 false)
  call void @runtime.newselect(i8* nest undef, i8* nonnull %cast.1906, i64 80, i32 1), !dbg !2226
  %.field.ld.66 = load {}*, {}** %field.535, align 8, !dbg !2227
  store %IPPacket.0* null, %IPPacket.0** %tmpv.523, align 8
  call void @runtime.selectrecv(i8* nest undef, i8* nonnull %cast.1906, {}* %.field.ld.66, i8* nonnull %cast.1911, i8* null), !dbg !2228
  %call.173 = call i64 @runtime.selectgo(i8* nest undef, i8* nonnull %cast.1906), !dbg !2226
  %tmpv.523.ld.02122 = load i64, i64* %2, align 8, !dbg !2229
  call void @llvm.dbg.value(metadata %IPPacket.0** %tmpv.523, metadata !2230, metadata !DIExpression(DW_OP_deref)), !dbg !2228
  %call.165 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @github_com_twitchyliquid64_subnet_subnet_conn.PktType..d), !dbg !2231
  store i8 1, i8* %call.165, align 1, !dbg !2231
  %8 = ptrtoint i8* %call.165 to i64, !dbg !2231
  %call.166 = call { i64, i64 } @encoding_gob.Encoder.Encode(i8* nest undef, %Encoder.0* %call.164, i64 ptrtoint (%_type.0* @github_com_twitchyliquid64_subnet_subnet_conn.PktType..d to i64), i64 %8), !dbg !2232
  %call.167 = call { i64, i64 } @encoding_gob.Encoder.Encode(i8* nest undef, %Encoder.0* %call.164, i64 ptrtoint (%PtrType.0* @type...1command_line_arguments.IPPacket to i64), i64 %tmpv.523.ld.02122), !dbg !2215
  %call.167.fca.0.extract = extractvalue { i64, i64 } %call.167, 0, !dbg !2215
  call void @llvm.dbg.value(metadata i64 %call.167.fca.0.extract, metadata !2216, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2217
  %icmp.210 = icmp eq i64 %call.167.fca.0.extract, 0, !dbg !2213
  br i1 %icmp.210, label %label.0, label %else.195

else.199:                                         ; preds = %label.0, %fallthrough.197
  ret void
}

define internal void @command_line_arguments.command_line_arguments..thunk8(i8* nest nocapture readnone %nest.48, { %.command-line-arguments.serverConn.0*, i8*, {}* }* nocapture readonly %__go_thunk_parameter) #0 !dbg !2233 {
entry:
  call void @llvm.dbg.value(metadata { %.command-line-arguments.serverConn.0*, i8*, {}* }* %__go_thunk_parameter, metadata !2242, metadata !DIExpression()), !dbg !2243
  %field.934 = getelementptr inbounds { %.command-line-arguments.serverConn.0*, i8*, {}* }, { %.command-line-arguments.serverConn.0*, i8*, {}* }* %__go_thunk_parameter, i64 0, i32 0, !dbg !2243
  %.field.ld.147 = load %.command-line-arguments.serverConn.0*, %.command-line-arguments.serverConn.0** %field.934, align 8, !dbg !2243
  %field.935 = getelementptr inbounds { %.command-line-arguments.serverConn.0*, i8*, {}* }, { %.command-line-arguments.serverConn.0*, i8*, {}* }* %__go_thunk_parameter, i64 0, i32 1, !dbg !2243
  %.field.ld.148 = load i8*, i8** %field.935, align 8, !dbg !2243
  %field.936 = getelementptr inbounds { %.command-line-arguments.serverConn.0*, i8*, {}* }, { %.command-line-arguments.serverConn.0*, i8*, {}* }* %__go_thunk_parameter, i64 0, i32 2, !dbg !2243
  %.field.ld.149 = load {}*, {}** %field.936, align 8, !dbg !2243
  call void @command_line_arguments.serverConn.readRoutine(i8* nest undef, %.command-line-arguments.serverConn.0* %.field.ld.147, i8* %.field.ld.148, {}* %.field.ld.149), !dbg !2243
  ret void
}

define internal void @command_line_arguments.command_line_arguments..thunk9(i8* nest nocapture readnone %nest.49, { %.command-line-arguments.serverConn.0*, i8* }* nocapture readonly %__go_thunk_parameter) #0 !dbg !2244 {
entry:
  call void @llvm.dbg.value(metadata { %.command-line-arguments.serverConn.0*, i8* }* %__go_thunk_parameter, metadata !2252, metadata !DIExpression()), !dbg !2253
  %field.937 = getelementptr inbounds { %.command-line-arguments.serverConn.0*, i8* }, { %.command-line-arguments.serverConn.0*, i8* }* %__go_thunk_parameter, i64 0, i32 0, !dbg !2253
  %.field.ld.150 = load %.command-line-arguments.serverConn.0*, %.command-line-arguments.serverConn.0** %field.937, align 8, !dbg !2253
  %field.938 = getelementptr inbounds { %.command-line-arguments.serverConn.0*, i8* }, { %.command-line-arguments.serverConn.0*, i8* }* %__go_thunk_parameter, i64 0, i32 1, !dbg !2253
  %.field.ld.151 = load i8*, i8** %field.938, align 8, !dbg !2253
  call void @command_line_arguments.serverConn.writeRoutine(i8* nest undef, %.command-line-arguments.serverConn.0* %.field.ld.150, i8* %.field.ld.151), !dbg !2253
  ret void
}

declare i8* @runtime.requireitab(i8*, %_type.0*, %_type.0*) local_unnamed_addr #0

declare void @runtime.selectsend(i8*, i8*, {}*, i8*) local_unnamed_addr #0

define void @command_line_arguments.NewServer({ %Server.0*, %error.0 }* nocapture sret %sret.formal.2, i8* nest nocapture readnone %nest.25, i64 %servHost.chunk0, i64 %servHost.chunk1, i64 %port.chunk0, i64 %port.chunk1, { i8*, i64 }* byval nocapture readonly %network, { i8*, i64 }* byval nocapture readonly %iName, { i8*, i64 }* byval nocapture readonly %certPemPath, { i8*, i64 }* byval nocapture readonly %keyPemPath, { i8*, i64 }* byval %caCertPath) #0 !dbg !2254 {
entry:
  %tmp.135 = alloca [3 x { i8*, i64 }], align 8
  %tmp.134 = alloca %IPST.6, align 8
  %tmp.131 = alloca [2 x { i8*, i64 }], align 8
  %tmp.129 = alloca [2 x { i8*, i64 }], align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %caCertPath, metadata !2261, metadata !DIExpression()), !dbg !2262
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %keyPemPath, metadata !2263, metadata !DIExpression()), !dbg !2264
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %certPemPath, metadata !2265, metadata !DIExpression()), !dbg !2266
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %iName, metadata !2267, metadata !DIExpression()), !dbg !2268
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %network, metadata !2269, metadata !DIExpression()), !dbg !2270
  %netIP = alloca %IP.0, align 8
  %sret.actual.114 = alloca { %Config.0*, %error.0 }, align 8
  %sret.actual.115 = alloca { %IP.0, %IPNet.0*, %error.0 }, align 8
  %sret.actual.119 = alloca { %Interface.0*, %error.0 }, align 8
  %tmpv.632 = alloca { i8*, i64 }, align 8
  %tmpv.633 = alloca [1 x %IPST.11], align 8
  %tmpv.643 = alloca %Server.0, align 8
  call void @llvm.dbg.value(metadata i64 %servHost.chunk0, metadata !2271, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2272
  call void @llvm.dbg.value(metadata i64 %servHost.chunk1, metadata !2271, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2272
  call void @llvm.dbg.value(metadata i64 %port.chunk0, metadata !2273, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2274
  call void @llvm.dbg.value(metadata i64 %port.chunk1, metadata !2273, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2274
  call void @llvm.dbg.value(metadata %Server.0* null, metadata !2275, metadata !DIExpression()), !dbg !2276
  %netIP.0.sroa_cast = bitcast %IP.0* %netIP to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %netIP.0.sroa_cast)
  %field0.111 = bitcast { i8*, i64 }* %certPemPath to i64*, !dbg !2277
  %ld.214 = load i64, i64* %field0.111, align 8, !dbg !2277
  %0 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %certPemPath, i64 0, i32 1, !dbg !2277
  %ld.215 = load i64, i64* %0, align 8, !dbg !2277
  %field0.112 = bitcast { i8*, i64 }* %keyPemPath to i64*, !dbg !2277
  %ld.216 = load i64, i64* %field0.112, align 8, !dbg !2277
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %keyPemPath, i64 0, i32 1, !dbg !2277
  %ld.217 = load i64, i64* %1, align 8, !dbg !2277
  call void @github_com_twitchyliquid64_subnet_subnet_conn.TLSConfig({ %Config.0*, %error.0 }* nonnull sret %sret.actual.114, i8* nest undef, i64 %ld.214, i64 %ld.215, i64 %ld.216, i64 %ld.217, { i8*, i64 }* byval nonnull %caCertPath), !dbg !2277
  %2 = bitcast { %Config.0*, %error.0 }* %sret.actual.114 to i64*, !dbg !2277
  %tmpv.608.sroa.0.0.copyload24112 = load i64, i64* %2, align 8, !dbg !2277
  %tmpv.608.sroa.3.sroa.0.0.tmpv.608.sroa.3.0.cast.2117.sroa_cast.sroa_idx = getelementptr inbounds { %Config.0*, %error.0 }, { %Config.0*, %error.0 }* %sret.actual.114, i64 0, i32 1, i32 0, !dbg !2277
  %tmpv.608.sroa.3.sroa.0.0.copyload70 = load { %_type.0*, { i64, i64 } (i8*, i8*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)* }** %tmpv.608.sroa.3.sroa.0.0.tmpv.608.sroa.3.0.cast.2117.sroa_cast.sroa_idx, align 8, !dbg !2277
  call void @llvm.dbg.value(metadata { %Config.0*, %error.0 }* %sret.actual.114, metadata !2279, metadata !DIExpression(DW_OP_deref)), !dbg !2280
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.608.sroa.3.sroa.0.0.copyload70, metadata !2281, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2280
  %icmp.253 = icmp eq { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.608.sroa.3.sroa.0.0.copyload70, null, !dbg !2282
  br i1 %icmp.253, label %else.234, label %then.234

then.234:                                         ; preds = %entry
  %tmpv.608.sroa.3.sroa.3.0.tmpv.608.sroa.3.0.cast.2117.sroa_cast.sroa_idx71 = getelementptr inbounds { %Config.0*, %error.0 }, { %Config.0*, %error.0 }* %sret.actual.114, i64 0, i32 1, i32 1, !dbg !2277
  %3 = bitcast i8** %tmpv.608.sroa.3.sroa.3.0.tmpv.608.sroa.3.0.cast.2117.sroa_cast.sroa_idx71 to i64*, !dbg !2277
  %tmpv.608.sroa.3.sroa.3.0.copyload72113 = load i64, i64* %3, align 8, !dbg !2277
  call void @llvm.dbg.value(metadata i8** %tmpv.608.sroa.3.sroa.3.0.tmpv.608.sroa.3.0.cast.2117.sroa_cast.sroa_idx71, metadata !2281, metadata !DIExpression(DW_OP_deref, DW_OP_LLVM_fragment, 64, 64)), !dbg !2280
  call void @llvm.dbg.value(metadata %Server.0* null, metadata !2275, metadata !DIExpression()), !dbg !2276
  %4 = ptrtoint { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.608.sroa.3.sroa.0.0.copyload70 to i64, !dbg !2283
  call void @llvm.dbg.value(metadata i64 %4, metadata !2284, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2285
  call void @llvm.dbg.value(metadata i64 %tmpv.608.sroa.3.sroa.3.0.copyload72113, metadata !2284, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2285
  %tmp.128.sroa.0.0.cast.2129.sroa_idx = getelementptr inbounds { %Server.0*, %error.0 }, { %Server.0*, %error.0 }* %sret.formal.2, i64 0, i32 0, !dbg !2283
  store %Server.0* null, %Server.0** %tmp.128.sroa.0.0.cast.2129.sroa_idx, align 8, !dbg !2283
  %tmp.128.sroa.2.0.cast.2129.sroa_idx103 = getelementptr inbounds { %Server.0*, %error.0 }, { %Server.0*, %error.0 }* %sret.formal.2, i64 0, i32 1, !dbg !2283
  %tmp.128.sroa.2.0.cast.2129.sroa_cast = bitcast %error.0* %tmp.128.sroa.2.0.cast.2129.sroa_idx103 to i64*, !dbg !2283
  store i64 %4, i64* %tmp.128.sroa.2.0.cast.2129.sroa_cast, align 8, !dbg !2283
  %tmp.128.sroa.3.0.cast.2129.sroa_idx104 = getelementptr inbounds { %Server.0*, %error.0 }, { %Server.0*, %error.0 }* %sret.formal.2, i64 0, i32 1, i32 1, !dbg !2283
  %tmp.128.sroa.3.0.cast.2129.sroa_cast = bitcast i8** %tmp.128.sroa.3.0.cast.2129.sroa_idx104 to i64*, !dbg !2283
  store i64 %tmpv.608.sroa.3.sroa.3.0.copyload72113, i64* %tmp.128.sroa.3.0.cast.2129.sroa_cast, align 8, !dbg !2283
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %netIP.0.sroa_cast), !dbg !2283
  ret void, !dbg !2283

else.234:                                         ; preds = %entry
  %field0.113 = bitcast { i8*, i64 }* %network to i64*, !dbg !2286
  %ld.218 = load i64, i64* %field0.113, align 8, !dbg !2286
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %network, i64 0, i32 1, !dbg !2286
  %ld.219 = load i64, i64* %5, align 8, !dbg !2286
  call void @net.ParseCIDR({ %IP.0, %IPNet.0*, %error.0 }* nonnull sret %sret.actual.115, i8* nest undef, i64 %ld.218, i64 %ld.219), !dbg !2286
  %tmpv.613.sroa.0.0.cast.2136.sroa_cast = bitcast { %IP.0, %IPNet.0*, %error.0 }* %sret.actual.115 to i8*, !dbg !2286
  %tmpv.613.sroa.3.0.cast.2136.sroa_idx21 = getelementptr inbounds { %IP.0, %IPNet.0*, %error.0 }, { %IP.0, %IPNet.0*, %error.0 }* %sret.actual.115, i64 0, i32 1, !dbg !2286
  %6 = bitcast %IPNet.0** %tmpv.613.sroa.3.0.cast.2136.sroa_idx21 to i64*, !dbg !2286
  %tmpv.613.sroa.3.0.copyload22114 = load i64, i64* %6, align 8, !dbg !2286
  %tmpv.613.sroa.4.sroa.0.0.tmpv.613.sroa.4.0.cast.2136.sroa_cast.sroa_idx = getelementptr inbounds { %IP.0, %IPNet.0*, %error.0 }, { %IP.0, %IPNet.0*, %error.0 }* %sret.actual.115, i64 0, i32 2, i32 0, !dbg !2286
  %tmpv.613.sroa.4.sroa.0.0.copyload65 = load { %_type.0*, { i64, i64 } (i8*, i8*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)* }** %tmpv.613.sroa.4.sroa.0.0.tmpv.613.sroa.4.0.cast.2136.sroa_cast.sroa_idx, align 8, !dbg !2286
  %tmpv.613.sroa.4.sroa.3.0.tmpv.613.sroa.4.0.cast.2136.sroa_cast.sroa_idx66 = getelementptr inbounds { %IP.0, %IPNet.0*, %error.0 }, { %IP.0, %IPNet.0*, %error.0 }* %sret.actual.115, i64 0, i32 2, i32 1, !dbg !2286
  %tmpv.613.sroa.4.sroa.3.0.copyload67 = load i8*, i8** %tmpv.613.sroa.4.sroa.3.0.tmpv.613.sroa.4.0.cast.2136.sroa_cast.sroa_idx66, align 8, !dbg !2286
  %netIP120 = bitcast %IP.0* %netIP to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %netIP120, i8* nonnull align 8 %tmpv.613.sroa.0.0.cast.2136.sroa_cast, i64 24, i1 false)
  call void @llvm.dbg.value(metadata %IPNet.0** %tmpv.613.sroa.3.0.cast.2136.sroa_idx21, metadata !2287, metadata !DIExpression(DW_OP_deref)), !dbg !2288
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.613.sroa.4.sroa.0.0.copyload65, metadata !2281, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2280
  call void @llvm.dbg.value(metadata i8* %tmpv.613.sroa.4.sroa.3.0.copyload67, metadata !2281, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2280
  %icmp.254 = icmp eq { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.613.sroa.4.sroa.0.0.copyload65, null, !dbg !2289
  br i1 %icmp.254, label %else.235, label %then.235

then.235:                                         ; preds = %else.234
  %field.646 = getelementptr inbounds { %_type.0*, { i64, i64 } (i8*, i8*)* }, { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.613.sroa.4.sroa.0.0.copyload65, i64 0, i32 1, !dbg !2290
  %.field.ld.86 = load { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)** %field.646, align 8, !dbg !2290
  %call.194 = call { i64, i64 } %.field.ld.86(i8* nest undef, i8* %tmpv.613.sroa.4.sroa.3.0.copyload67), !dbg !2290
  %call.194.fca.0.extract = extractvalue { i64, i64 } %call.194, 0, !dbg !2290
  %call.194.fca.1.extract = extractvalue { i64, i64 } %call.194, 1, !dbg !2290
  %cast.2151 = bitcast [2 x { i8*, i64 }]* %tmp.129 to i8*, !dbg !2291
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2151, i8* align 8 bitcast ({ i8*, i64 }* @const.84 to i8*), i64 16, i1 false), !dbg !2291
  %tmpv.618.sroa.0.0.cast.2153.sroa_idx = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmp.129, i64 0, i64 1, !dbg !2291
  %tmpv.618.sroa.0.0.cast.2153.sroa_cast = bitcast { i8*, i64 }* %tmpv.618.sroa.0.0.cast.2153.sroa_idx to i64*, !dbg !2291
  store i64 %call.194.fca.0.extract, i64* %tmpv.618.sroa.0.0.cast.2153.sroa_cast, align 8, !dbg !2291
  %tmpv.618.sroa.2.0.cast.2153.sroa_idx18 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmp.129, i64 0, i64 1, i32 1, !dbg !2291
  store i64 %call.194.fca.1.extract, i64* %tmpv.618.sroa.2.0.cast.2153.sroa_idx18, align 8, !dbg !2291
  %call.195 = call { i64, i64 } @runtime.concatstring2(i8* nest undef, i8* null, [2 x { i8*, i64 }]* byval nonnull %tmp.129), !dbg !2291
  %call.195.fca.0.extract = extractvalue { i64, i64 } %call.195, 0, !dbg !2291
  %call.195.fca.1.extract = extractvalue { i64, i64 } %call.195, 1, !dbg !2291
  %call.196 = call { i64, i64 } @errors.New(i8* nest undef, i64 %call.195.fca.0.extract, i64 %call.195.fca.1.extract), !dbg !2292
  %call.196.fca.0.extract = extractvalue { i64, i64 } %call.196, 0, !dbg !2292
  %call.196.fca.1.extract = extractvalue { i64, i64 } %call.196, 1, !dbg !2292
  call void @llvm.dbg.value(metadata %Server.0* null, metadata !2275, metadata !DIExpression()), !dbg !2276
  call void @llvm.dbg.value(metadata i64 %call.196.fca.0.extract, metadata !2284, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2285
  call void @llvm.dbg.value(metadata i64 %call.196.fca.1.extract, metadata !2284, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2285
  %tmp.130.sroa.0.0.cast.2167.sroa_idx = getelementptr inbounds { %Server.0*, %error.0 }, { %Server.0*, %error.0 }* %sret.formal.2, i64 0, i32 0, !dbg !2293
  store %Server.0* null, %Server.0** %tmp.130.sroa.0.0.cast.2167.sroa_idx, align 8, !dbg !2293
  %tmp.130.sroa.2.0.cast.2167.sroa_idx105 = getelementptr inbounds { %Server.0*, %error.0 }, { %Server.0*, %error.0 }* %sret.formal.2, i64 0, i32 1, !dbg !2293
  %tmp.130.sroa.2.0.cast.2167.sroa_cast = bitcast %error.0* %tmp.130.sroa.2.0.cast.2167.sroa_idx105 to i64*, !dbg !2293
  store i64 %call.196.fca.0.extract, i64* %tmp.130.sroa.2.0.cast.2167.sroa_cast, align 8, !dbg !2293
  %tmp.130.sroa.3.0.cast.2167.sroa_idx106 = getelementptr inbounds { %Server.0*, %error.0 }, { %Server.0*, %error.0 }* %sret.formal.2, i64 0, i32 1, i32 1, !dbg !2293
  %tmp.130.sroa.3.0.cast.2167.sroa_cast = bitcast i8** %tmp.130.sroa.3.0.cast.2167.sroa_idx106 to i64*, !dbg !2293
  store i64 %call.196.fca.1.extract, i64* %tmp.130.sroa.3.0.cast.2167.sroa_cast, align 8, !dbg !2293
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %netIP.0.sroa_cast), !dbg !2293
  ret void, !dbg !2293

else.235:                                         ; preds = %else.234
  %field0.115 = bitcast { i8*, i64 }* %iName to i64*, !dbg !2294
  %ld.222 = load i64, i64* %field0.115, align 8, !dbg !2294
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %iName, i64 0, i32 1, !dbg !2294
  %ld.223 = load i64, i64* %7, align 8, !dbg !2294
  call void @github_com_twitchyliquid64_subnet_vendor_github_com_songgao_water.NewTUN({ %Interface.0*, %error.0 }* nonnull sret %sret.actual.119, i8* nest undef, i64 %ld.222, i64 %ld.223), !dbg !2294
  %tmpv.622.sroa.0.0.cast.2174.sroa_idx = getelementptr inbounds { %Interface.0*, %error.0 }, { %Interface.0*, %error.0 }* %sret.actual.119, i64 0, i32 0, !dbg !2294
  %tmpv.622.sroa.0.0.copyload12 = load %Interface.0*, %Interface.0** %tmpv.622.sroa.0.0.cast.2174.sroa_idx, align 8, !dbg !2294
  %tmpv.622.sroa.3.sroa.0.0.tmpv.622.sroa.3.0.cast.2174.sroa_cast.sroa_idx = getelementptr inbounds { %Interface.0*, %error.0 }, { %Interface.0*, %error.0 }* %sret.actual.119, i64 0, i32 1, i32 0, !dbg !2294
  %tmpv.622.sroa.3.sroa.0.0.copyload61 = load { %_type.0*, { i64, i64 } (i8*, i8*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)* }** %tmpv.622.sroa.3.sroa.0.0.tmpv.622.sroa.3.0.cast.2174.sroa_cast.sroa_idx, align 8, !dbg !2294
  call void @llvm.dbg.value(metadata %Interface.0* %tmpv.622.sroa.0.0.copyload12, metadata !2295, metadata !DIExpression()), !dbg !2296
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.622.sroa.3.sroa.0.0.copyload61, metadata !2281, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2280
  %icmp.255 = icmp eq { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.622.sroa.3.sroa.0.0.copyload61, null, !dbg !2297
  br i1 %icmp.255, label %else.236, label %then.236

then.236:                                         ; preds = %else.235
  %tmpv.622.sroa.3.sroa.3.0.tmpv.622.sroa.3.0.cast.2174.sroa_cast.sroa_idx62 = getelementptr inbounds { %Interface.0*, %error.0 }, { %Interface.0*, %error.0 }* %sret.actual.119, i64 0, i32 1, i32 1, !dbg !2294
  %tmpv.622.sroa.3.sroa.3.0.copyload63 = load i8*, i8** %tmpv.622.sroa.3.sroa.3.0.tmpv.622.sroa.3.0.cast.2174.sroa_cast.sroa_idx62, align 8, !dbg !2294
  call void @llvm.dbg.value(metadata i8* %tmpv.622.sroa.3.sroa.3.0.copyload63, metadata !2281, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2280
  %field.654 = getelementptr inbounds { %_type.0*, { i64, i64 } (i8*, i8*)* }, { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.622.sroa.3.sroa.0.0.copyload61, i64 0, i32 1, !dbg !2298
  %.field.ld.87 = load { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)** %field.654, align 8, !dbg !2298
  %call.197 = call { i64, i64 } %.field.ld.87(i8* nest undef, i8* %tmpv.622.sroa.3.sroa.3.0.copyload63), !dbg !2298
  %call.197.fca.0.extract = extractvalue { i64, i64 } %call.197, 0, !dbg !2298
  %call.197.fca.1.extract = extractvalue { i64, i64 } %call.197, 1, !dbg !2298
  %cast.2185 = bitcast [2 x { i8*, i64 }]* %tmp.131 to i8*, !dbg !2299
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2185, i8* align 8 bitcast ({ i8*, i64 }* @const.87 to i8*), i64 16, i1 false), !dbg !2299
  %tmpv.626.sroa.0.0.cast.2187.sroa_idx = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmp.131, i64 0, i64 1, !dbg !2299
  %tmpv.626.sroa.0.0.cast.2187.sroa_cast = bitcast { i8*, i64 }* %tmpv.626.sroa.0.0.cast.2187.sroa_idx to i64*, !dbg !2299
  store i64 %call.197.fca.0.extract, i64* %tmpv.626.sroa.0.0.cast.2187.sroa_cast, align 8, !dbg !2299
  %tmpv.626.sroa.2.0.cast.2187.sroa_idx11 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmp.131, i64 0, i64 1, i32 1, !dbg !2299
  store i64 %call.197.fca.1.extract, i64* %tmpv.626.sroa.2.0.cast.2187.sroa_idx11, align 8, !dbg !2299
  %call.198 = call { i64, i64 } @runtime.concatstring2(i8* nest undef, i8* null, [2 x { i8*, i64 }]* byval nonnull %tmp.131), !dbg !2299
  %call.198.fca.0.extract = extractvalue { i64, i64 } %call.198, 0, !dbg !2299
  %call.198.fca.1.extract = extractvalue { i64, i64 } %call.198, 1, !dbg !2299
  %call.199 = call { i64, i64 } @errors.New(i8* nest undef, i64 %call.198.fca.0.extract, i64 %call.198.fca.1.extract), !dbg !2300
  %call.199.fca.0.extract = extractvalue { i64, i64 } %call.199, 0, !dbg !2300
  %call.199.fca.1.extract = extractvalue { i64, i64 } %call.199, 1, !dbg !2300
  call void @llvm.dbg.value(metadata %Server.0* null, metadata !2275, metadata !DIExpression()), !dbg !2276
  call void @llvm.dbg.value(metadata i64 %call.199.fca.0.extract, metadata !2284, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2285
  call void @llvm.dbg.value(metadata i64 %call.199.fca.1.extract, metadata !2284, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2285
  %tmp.132.sroa.0.0.cast.2201.sroa_idx = getelementptr inbounds { %Server.0*, %error.0 }, { %Server.0*, %error.0 }* %sret.formal.2, i64 0, i32 0, !dbg !2301
  store %Server.0* null, %Server.0** %tmp.132.sroa.0.0.cast.2201.sroa_idx, align 8, !dbg !2301
  %tmp.132.sroa.2.0.cast.2201.sroa_idx107 = getelementptr inbounds { %Server.0*, %error.0 }, { %Server.0*, %error.0 }* %sret.formal.2, i64 0, i32 1, !dbg !2301
  %tmp.132.sroa.2.0.cast.2201.sroa_cast = bitcast %error.0* %tmp.132.sroa.2.0.cast.2201.sroa_idx107 to i64*, !dbg !2301
  store i64 %call.199.fca.0.extract, i64* %tmp.132.sroa.2.0.cast.2201.sroa_cast, align 8, !dbg !2301
  %tmp.132.sroa.3.0.cast.2201.sroa_idx108 = getelementptr inbounds { %Server.0*, %error.0 }, { %Server.0*, %error.0 }* %sret.formal.2, i64 0, i32 1, i32 1, !dbg !2301
  %tmp.132.sroa.3.0.cast.2201.sroa_cast = bitcast i8** %tmp.132.sroa.3.0.cast.2201.sroa_idx108 to i64*, !dbg !2301
  store i64 %call.199.fca.1.extract, i64* %tmp.132.sroa.3.0.cast.2201.sroa_cast, align 8, !dbg !2301
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %netIP.0.sroa_cast), !dbg !2301
  ret void, !dbg !2301

else.236:                                         ; preds = %else.235
  %call.200 = call { i64, i64 } @github_com_twitchyliquid64_subnet_vendor_github_com_songgao_water.Interface.Name(i8* nest undef, %Interface.0* %tmpv.622.sroa.0.0.copyload12), !dbg !2302
  %call.200.fca.0.extract = extractvalue { i64, i64 } %call.200, 0, !dbg !2302
  %call.200.fca.1.extract = extractvalue { i64, i64 } %call.200, 1, !dbg !2302
  %call.201 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !2303
  %tmpv.630.sroa.0.0.cast.2208.sroa_cast = bitcast { i8*, i64 }* %tmpv.632 to i64*
  store i64 %call.200.fca.0.extract, i64* %tmpv.630.sroa.0.0.cast.2208.sroa_cast, align 8
  %tmpv.630.sroa.2.0.cast.2208.sroa_idx6 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.632, i64 0, i32 1
  store i64 %call.200.fca.1.extract, i64* %tmpv.630.sroa.2.0.cast.2208.sroa_idx6, align 8
  %cast.2211 = bitcast { i8*, i64 }* %tmpv.632 to i8*, !dbg !2303
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.201, i8* nonnull %cast.2211), !dbg !2303
  %tmp.133.sroa.0.0.cast.2213.sroa_idx = getelementptr inbounds [1 x %IPST.11], [1 x %IPST.11]* %tmpv.633, i64 0, i64 0, i32 0, !dbg !2303
  store %_type.0* @string..d, %_type.0** %tmp.133.sroa.0.0.cast.2213.sroa_idx, align 8, !dbg !2303
  %tmp.133.sroa.2.0.cast.2213.sroa_idx109 = getelementptr inbounds [1 x %IPST.11], [1 x %IPST.11]* %tmpv.633, i64 0, i64 0, i32 1, !dbg !2303
  store i8* %call.201, i8** %tmp.133.sroa.2.0.cast.2213.sroa_idx109, align 8, !dbg !2303
  %field.661 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.134, i64 0, i32 0, !dbg !2303
  %cast.2216 = getelementptr inbounds [1 x %IPST.11], [1 x %IPST.11]* %tmpv.633, i64 0, i64 0, !dbg !2303
  store %IPST.11* %cast.2216, %IPST.11** %field.661, align 8, !dbg !2303
  %field.662 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.134, i64 0, i32 1, !dbg !2303
  store i64 1, i64* %field.662, align 8, !dbg !2303
  %field.663 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.134, i64 0, i32 2, !dbg !2303
  store i64 1, i64* %field.663, align 8, !dbg !2303
  call void @log.Printf(i8* nest undef, i64 ptrtoint ([18 x i8]* @const.88 to i64), i64 17, %IPST.6* byval nonnull %tmp.134), !dbg !2303
  %call.202 = call {}* @runtime.makechan(i8* nest undef, %_type.0* getelementptr inbounds (%ChanType.0, %ChanType.0* @type..chan.0.1command_line_arguments.inboundIPPkt, i64 0, i32 0), i64 400), !dbg !2304
  %call.203 = call {}* @runtime.makechan(i8* nest undef, %_type.0* getelementptr inbounds (%ChanType.0, %ChanType.0* @type..chan.0.1command_line_arguments.IPPacket, i64 0, i32 0), i64 150), !dbg !2305
  %call.204 = call {}* @runtime.makechan(i8* nest undef, %_type.0* getelementptr inbounds (%ChanType.0, %ChanType.0* @type..chan.0.1command_line_arguments.IPPacket, i64 0, i32 0), i64 150), !dbg !2306
  %call.205 = call { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* @__go_construct_map(i8* nest undef, i8* bitcast (%MapType.0* @type..map.6string.7int to i8*), i64 0, i64 24, i64 16, i8* null), !dbg !2307
  %call.206 = call { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* @__go_construct_map(i8* nest undef, i8* bitcast (%MapType.0* @type..map.6int.7.1command_line_arguments.serverConn to i8*), i64 0, i64 16, i64 8, i8* null), !dbg !2308
  %call.207 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.Server..d, i64 0, i32 0)), !dbg !2309
  %cast.2227 = bitcast i8* %call.207 to %Server.0*, !dbg !2309
  %8 = bitcast %Server.0* %tmpv.643 to i64*, !dbg !2310
  store i64 %tmpv.608.sroa.0.0.copyload24112, i64* %8, align 8, !dbg !2310
  %field.665 = getelementptr inbounds %Server.0, %Server.0* %tmpv.643, i64 0, i32 1, !dbg !2310
  %cast.2228 = bitcast %Listener.0* %field.665 to i8*, !dbg !2310
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %cast.2228, i8 0, i64 16, i1 false), !dbg !2310
  %field.666 = getelementptr inbounds %Server.0, %Server.0* %tmpv.643, i64 0, i32 2, !dbg !2310
  %cast.2230 = bitcast %IP.0* %field.666 to i8*, !dbg !2310
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2230, i8* nonnull align 8 %netIP.0.sroa_cast, i64 24, i1 false), !dbg !2310
  %field.667 = getelementptr inbounds %Server.0, %Server.0* %tmpv.643, i64 0, i32 3, !dbg !2310
  %9 = bitcast %IPNet.0** %field.667 to i64*, !dbg !2310
  store i64 %tmpv.613.sroa.3.0.copyload22114, i64* %9, align 8, !dbg !2310
  %field.668 = getelementptr inbounds %Server.0, %Server.0* %tmpv.643, i64 0, i32 4, !dbg !2310
  store i8 0, i8* %field.668, align 8, !dbg !2310
  %field.669 = getelementptr inbounds %Server.0, %Server.0* %tmpv.643, i64 0, i32 5, !dbg !2310
  store { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.205, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.669, align 8, !dbg !2310
  %field.670 = getelementptr inbounds %Server.0, %Server.0* %tmpv.643, i64 0, i32 6, !dbg !2310
  store { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.206, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.670, align 8, !dbg !2310
  %field.671 = getelementptr inbounds %Server.0, %Server.0* %tmpv.643, i64 0, i32 7, !dbg !2310
  %field.673 = getelementptr inbounds %Server.0, %Server.0* %tmpv.643, i64 0, i32 9, !dbg !2310
  %10 = bitcast %Mutex.0* %field.671 to i8*, !dbg !2310
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 16, i1 false), !dbg !2310
  store {}* %call.202, {}** %field.673, align 8, !dbg !2310
  %field.674 = getelementptr inbounds %Server.0, %Server.0* %tmpv.643, i64 0, i32 10, !dbg !2310
  store {}* %call.203, {}** %field.674, align 8, !dbg !2310
  %field.675 = getelementptr inbounds %Server.0, %Server.0* %tmpv.643, i64 0, i32 11, !dbg !2310
  store {}* %call.204, {}** %field.675, align 8, !dbg !2310
  %field.676 = getelementptr inbounds %Server.0, %Server.0* %tmpv.643, i64 0, i32 12, !dbg !2310
  store %Interface.0* %tmpv.622.sroa.0.0.copyload12, %Interface.0** %field.676, align 8, !dbg !2310
  %field.677 = getelementptr inbounds %Server.0, %Server.0* %tmpv.643, i64 0, i32 13, !dbg !2310
  %cast.2240 = bitcast %Server.0* %tmpv.643 to i8*, !dbg !2309
  %11 = bitcast %Reverser.0* %field.677 to i8*, !dbg !2309
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 72, i1 false), !dbg !2310
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.Server..d, i64 0, i32 0), i8* %call.207, i8* nonnull %cast.2240), !dbg !2309
  call void @llvm.dbg.value(metadata %Server.0* %cast.2227, metadata !2311, metadata !DIExpression()), !dbg !2312
  %servHost.addr.sroa.0.0.cast.2243.sroa_cast = bitcast [3 x { i8*, i64 }]* %tmp.135 to i64*, !dbg !2313
  store i64 %servHost.chunk0, i64* %servHost.addr.sroa.0.0.cast.2243.sroa_cast, align 8, !dbg !2313
  %servHost.addr.sroa.2.0.cast.2243.sroa_idx102 = getelementptr inbounds [3 x { i8*, i64 }], [3 x { i8*, i64 }]* %tmp.135, i64 0, i64 0, i32 1, !dbg !2313
  store i64 %servHost.chunk1, i64* %servHost.addr.sroa.2.0.cast.2243.sroa_idx102, align 8, !dbg !2313
  %index.77 = getelementptr inbounds [3 x { i8*, i64 }], [3 x { i8*, i64 }]* %tmp.135, i64 0, i64 1, !dbg !2313
  %cast.2245 = bitcast { i8*, i64 }* %index.77 to i8*, !dbg !2313
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2245, i8* align 8 bitcast ({ i8*, i64 }* @const.97 to i8*), i64 16, i1 false), !dbg !2313
  %port.addr.sroa.0.0.cast.2247.sroa_idx = getelementptr inbounds [3 x { i8*, i64 }], [3 x { i8*, i64 }]* %tmp.135, i64 0, i64 2, !dbg !2313
  %port.addr.sroa.0.0.cast.2247.sroa_cast = bitcast { i8*, i64 }* %port.addr.sroa.0.0.cast.2247.sroa_idx to i64*, !dbg !2313
  store i64 %port.chunk0, i64* %port.addr.sroa.0.0.cast.2247.sroa_cast, align 8, !dbg !2313
  %port.addr.sroa.2.0.cast.2247.sroa_idx101 = getelementptr inbounds [3 x { i8*, i64 }], [3 x { i8*, i64 }]* %tmp.135, i64 0, i64 2, i32 1, !dbg !2313
  store i64 %port.chunk1, i64* %port.addr.sroa.2.0.cast.2247.sroa_idx101, align 8, !dbg !2313
  %call.208 = call { i64, i64 } @runtime.concatstring3(i8* nest undef, i8* null, [3 x { i8*, i64 }]* byval nonnull %tmp.135), !dbg !2313
  %call.208.fca.0.extract = extractvalue { i64, i64 } %call.208, 0, !dbg !2313
  %call.208.fca.1.extract = extractvalue { i64, i64 } %call.208, 1, !dbg !2313
  %call.209 = call { i64, i64 } @command_line_arguments.Server.Init(i8* nest undef, %Server.0* %cast.2227, i64 %call.208.fca.0.extract, i64 %call.208.fca.1.extract), !dbg !2314
  %call.209.fca.0.extract = extractvalue { i64, i64 } %call.209, 0, !dbg !2314
  %call.209.fca.1.extract = extractvalue { i64, i64 } %call.209, 1, !dbg !2314
  call void @llvm.dbg.value(metadata %Server.0* %cast.2227, metadata !2275, metadata !DIExpression()), !dbg !2276
  call void @llvm.dbg.value(metadata i64 %call.209.fca.0.extract, metadata !2284, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2285
  call void @llvm.dbg.value(metadata i64 %call.209.fca.1.extract, metadata !2284, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2285
  %12 = bitcast { %Server.0*, %error.0 }* %sret.formal.2 to i8**, !dbg !2315
  store i8* %call.207, i8** %12, align 8, !dbg !2315
  %tmp.136.sroa.2.0.cast.2259.sroa_idx110 = getelementptr inbounds { %Server.0*, %error.0 }, { %Server.0*, %error.0 }* %sret.formal.2, i64 0, i32 1, !dbg !2315
  %tmp.136.sroa.2.0.cast.2259.sroa_cast = bitcast %error.0* %tmp.136.sroa.2.0.cast.2259.sroa_idx110 to i64*, !dbg !2315
  store i64 %call.209.fca.0.extract, i64* %tmp.136.sroa.2.0.cast.2259.sroa_cast, align 8, !dbg !2315
  %tmp.136.sroa.3.0.cast.2259.sroa_idx111 = getelementptr inbounds { %Server.0*, %error.0 }, { %Server.0*, %error.0 }* %sret.formal.2, i64 0, i32 1, i32 1, !dbg !2315
  %tmp.136.sroa.3.0.cast.2259.sroa_cast = bitcast i8** %tmp.136.sroa.3.0.cast.2259.sroa_idx111 to i64*, !dbg !2315
  store i64 %call.209.fca.1.extract, i64* %tmp.136.sroa.3.0.cast.2259.sroa_cast, align 8, !dbg !2315
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %netIP.0.sroa_cast), !dbg !2315
  ret void, !dbg !2315
}

declare { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* @__go_construct_map(i8*, i8*, i64, i64, i64, i8*) local_unnamed_addr #0

declare void @crypto_tls.Listen({ %Listener.0, %error.0 }*, i8*, i64, i64, i64, i64, %Config.0*) local_unnamed_addr #0

define internal void @command_line_arguments.command_line_arguments..thunk10(i8* nest nocapture readnone %nest.50, { %Server.0* }* nocapture readonly %__go_thunk_parameter) #0 !dbg !2316 {
entry:
  call void @llvm.dbg.value(metadata { %Server.0* }* %__go_thunk_parameter, metadata !2323, metadata !DIExpression()), !dbg !2324
  %field.939 = getelementptr inbounds { %Server.0* }, { %Server.0* }* %__go_thunk_parameter, i64 0, i32 0, !dbg !2324
  %.field.ld.152 = load %Server.0*, %Server.0** %field.939, align 8, !dbg !2324
  call void @command_line_arguments.Server.acceptRoutine(i8* nest undef, %Server.0* %.field.ld.152), !dbg !2324
  ret void
}

define internal void @command_line_arguments.command_line_arguments..thunk11(i8* nest nocapture readnone %nest.51, { %Server.0* }* nocapture readonly %__go_thunk_parameter) #0 !dbg !2325 {
entry:
  call void @llvm.dbg.value(metadata { %Server.0* }* %__go_thunk_parameter, metadata !2326, metadata !DIExpression()), !dbg !2327
  %field.940 = getelementptr inbounds { %Server.0* }, { %Server.0* }* %__go_thunk_parameter, i64 0, i32 0, !dbg !2327
  %.field.ld.153 = load %Server.0*, %Server.0** %field.940, align 8, !dbg !2327
  call void @command_line_arguments.Server.dispatchRoutine(i8* nest undef, %Server.0* %.field.ld.153), !dbg !2327
  ret void
}

define internal void @command_line_arguments.command_line_arguments..thunk12(i8* nest nocapture readnone %nest.52, { %Interface.0*, {}*, %WaitGroup.0*, i8* }* nocapture readonly %__go_thunk_parameter) #0 !dbg !2328 {
entry:
  call void @llvm.dbg.value(metadata { %Interface.0*, {}*, %WaitGroup.0*, i8* }* %__go_thunk_parameter, metadata !2329, metadata !DIExpression()), !dbg !2330
  %field.941 = getelementptr inbounds { %Interface.0*, {}*, %WaitGroup.0*, i8* }, { %Interface.0*, {}*, %WaitGroup.0*, i8* }* %__go_thunk_parameter, i64 0, i32 0, !dbg !2330
  %.field.ld.154 = load %Interface.0*, %Interface.0** %field.941, align 8, !dbg !2330
  %field.942 = getelementptr inbounds { %Interface.0*, {}*, %WaitGroup.0*, i8* }, { %Interface.0*, {}*, %WaitGroup.0*, i8* }* %__go_thunk_parameter, i64 0, i32 1, !dbg !2330
  %.field.ld.155 = load {}*, {}** %field.942, align 8, !dbg !2330
  %field.943 = getelementptr inbounds { %Interface.0*, {}*, %WaitGroup.0*, i8* }, { %Interface.0*, {}*, %WaitGroup.0*, i8* }* %__go_thunk_parameter, i64 0, i32 2, !dbg !2330
  %.field.ld.156 = load %WaitGroup.0*, %WaitGroup.0** %field.943, align 8, !dbg !2330
  %field.944 = getelementptr inbounds { %Interface.0*, {}*, %WaitGroup.0*, i8* }, { %Interface.0*, {}*, %WaitGroup.0*, i8* }* %__go_thunk_parameter, i64 0, i32 3, !dbg !2330
  %.field.ld.157 = load i8*, i8** %field.944, align 8, !dbg !2330
  call fastcc void @command_line_arguments.devWriteRoutine(%Interface.0* %.field.ld.154, {}* %.field.ld.155, %WaitGroup.0* %.field.ld.156, i8* %.field.ld.157), !dbg !2330
  ret void
}

define internal void @command_line_arguments.command_line_arguments..thunk13(i8* nest nocapture readnone %nest.53, { %Interface.0*, {}*, %WaitGroup.0*, i8* }* nocapture readonly %__go_thunk_parameter) #0 !dbg !2331 {
entry:
  call void @llvm.dbg.value(metadata { %Interface.0*, {}*, %WaitGroup.0*, i8* }* %__go_thunk_parameter, metadata !2332, metadata !DIExpression()), !dbg !2333
  %field.945 = getelementptr inbounds { %Interface.0*, {}*, %WaitGroup.0*, i8* }, { %Interface.0*, {}*, %WaitGroup.0*, i8* }* %__go_thunk_parameter, i64 0, i32 0, !dbg !2333
  %.field.ld.158 = load %Interface.0*, %Interface.0** %field.945, align 8, !dbg !2333
  %field.946 = getelementptr inbounds { %Interface.0*, {}*, %WaitGroup.0*, i8* }, { %Interface.0*, {}*, %WaitGroup.0*, i8* }* %__go_thunk_parameter, i64 0, i32 1, !dbg !2333
  %.field.ld.159 = load {}*, {}** %field.946, align 8, !dbg !2333
  %field.947 = getelementptr inbounds { %Interface.0*, {}*, %WaitGroup.0*, i8* }, { %Interface.0*, {}*, %WaitGroup.0*, i8* }* %__go_thunk_parameter, i64 0, i32 2, !dbg !2333
  %.field.ld.160 = load %WaitGroup.0*, %WaitGroup.0** %field.947, align 8, !dbg !2333
  %field.948 = getelementptr inbounds { %Interface.0*, {}*, %WaitGroup.0*, i8* }, { %Interface.0*, {}*, %WaitGroup.0*, i8* }* %__go_thunk_parameter, i64 0, i32 3, !dbg !2333
  %.field.ld.161 = load i8*, i8** %field.948, align 8, !dbg !2333
  call fastcc void @command_line_arguments.devReadRoutine(%Interface.0* %.field.ld.158, {}* %.field.ld.159, %WaitGroup.0* %.field.ld.160, i8* %.field.ld.161), !dbg !2333
  ret void
}

declare { i64, i8 } @runtime.ifaceI2T2P(i8*, %_type.0*, i64, i64) local_unnamed_addr #0

; Function Attrs: noinline
define internal i8 @command_line_arguments.command_line_arguments..thunk14(i8* nest nocapture readnone %nest.54, { %WaitGroup.0* }* nocapture readonly %__go_thunk_parameter) #4 !dbg !2334 {
entry:
  call void @llvm.dbg.value(metadata { %WaitGroup.0* }* %__go_thunk_parameter, metadata !2335, metadata !DIExpression()), !dbg !2336
  call void @llvm.dbg.value(metadata i8 0, metadata !2337, metadata !DIExpression()), !dbg !2336
  %call.268 = call i8 @runtime.setdeferretaddr(i8* nest undef, i8* blockaddress(@command_line_arguments.command_line_arguments..thunk14, %label.0)), !dbg !2336
  %0 = and i8 %call.268, 1, !dbg !2336
  %trunc.351 = icmp eq i8 %0, 0, !dbg !2336
  br i1 %trunc.351, label %else.350, label %label.0

else.350:                                         ; preds = %entry
  %field.949 = getelementptr inbounds { %WaitGroup.0* }, { %WaitGroup.0* }* %__go_thunk_parameter, i64 0, i32 0, !dbg !2336
  %.field.ld.162 = load %WaitGroup.0*, %WaitGroup.0** %field.949, align 8, !dbg !2336
  call void @sync.WaitGroup.Done(i8* nest undef, %WaitGroup.0* %.field.ld.162), !dbg !2336
  br label %label.0

label.0:                                          ; preds = %entry, %else.350
  call void @llvm.dbg.value(metadata i8 0, metadata !2337, metadata !DIExpression()), !dbg !2336
  ret i8 0, !dbg !2336
}

declare void @time.Now(%Time.0*, i8*) local_unnamed_addr #0

declare void @time.Time.Add(%Time.0*, i8*, %Time.0*, i64) local_unnamed_addr #0

declare { i64, i64 } @net.TCPListener.SetDeadline(i8*, %TCPListener.0*, %Time.0*) local_unnamed_addr #0

; Function Attrs: noinline
define internal i8 @command_line_arguments.command_line_arguments..thunk15(i8* nest nocapture readnone %nest.55, { %Mutex.0* }* nocapture readonly %__go_thunk_parameter) #4 !dbg !2338 {
entry:
  call void @llvm.dbg.value(metadata { %Mutex.0* }* %__go_thunk_parameter, metadata !2339, metadata !DIExpression()), !dbg !2340
  call void @llvm.dbg.value(metadata i8 0, metadata !2341, metadata !DIExpression()), !dbg !2340
  %call.269 = call i8 @runtime.setdeferretaddr(i8* nest undef, i8* blockaddress(@command_line_arguments.command_line_arguments..thunk15, %label.0)), !dbg !2340
  %0 = and i8 %call.269, 1, !dbg !2340
  %trunc.352 = icmp eq i8 %0, 0, !dbg !2340
  br i1 %trunc.352, label %else.351, label %label.0

else.351:                                         ; preds = %entry
  %field.950 = getelementptr inbounds { %Mutex.0* }, { %Mutex.0* }* %__go_thunk_parameter, i64 0, i32 0, !dbg !2340
  %.field.ld.163 = load %Mutex.0*, %Mutex.0** %field.950, align 8, !dbg !2340
  call void @sync.Mutex.Unlock(i8* nest undef, %Mutex.0* %.field.ld.163), !dbg !2340
  br label %label.0

label.0:                                          ; preds = %entry, %else.351
  call void @llvm.dbg.value(metadata i8 0, metadata !2341, metadata !DIExpression()), !dbg !2340
  ret i8 0, !dbg !2340
}

declare i8* @runtime.mapassign(i8*, %_type.0*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, i8*) local_unnamed_addr #0

; Function Attrs: noinline
define internal i8 @command_line_arguments.command_line_arguments..thunk16(i8* nest nocapture readnone %nest.56, { %Mutex.0* }* nocapture readonly %__go_thunk_parameter) #4 !dbg !2342 {
entry:
  call void @llvm.dbg.value(metadata { %Mutex.0* }* %__go_thunk_parameter, metadata !2343, metadata !DIExpression()), !dbg !2344
  call void @llvm.dbg.value(metadata i8 0, metadata !2345, metadata !DIExpression()), !dbg !2344
  %call.270 = call i8 @runtime.setdeferretaddr(i8* nest undef, i8* blockaddress(@command_line_arguments.command_line_arguments..thunk16, %label.0)), !dbg !2344
  %0 = and i8 %call.270, 1, !dbg !2344
  %trunc.353 = icmp eq i8 %0, 0, !dbg !2344
  br i1 %trunc.353, label %else.352, label %label.0

else.352:                                         ; preds = %entry
  %field.951 = getelementptr inbounds { %Mutex.0* }, { %Mutex.0* }* %__go_thunk_parameter, i64 0, i32 0, !dbg !2344
  %.field.ld.164 = load %Mutex.0*, %Mutex.0** %field.951, align 8, !dbg !2344
  call void @sync.Mutex.Unlock(i8* nest undef, %Mutex.0* %.field.ld.164), !dbg !2344
  br label %label.0

label.0:                                          ; preds = %entry, %else.352
  call void @llvm.dbg.value(metadata i8 0, metadata !2345, metadata !DIExpression()), !dbg !2344
  ret i8 0, !dbg !2344
}

; Function Attrs: noinline
define internal i8 @command_line_arguments.command_line_arguments..thunk17(i8* nest nocapture readnone %nest.57, { %Mutex.0* }* nocapture readonly %__go_thunk_parameter) #4 !dbg !2346 {
entry:
  call void @llvm.dbg.value(metadata { %Mutex.0* }* %__go_thunk_parameter, metadata !2347, metadata !DIExpression()), !dbg !2348
  call void @llvm.dbg.value(metadata i8 0, metadata !2349, metadata !DIExpression()), !dbg !2348
  %call.271 = call i8 @runtime.setdeferretaddr(i8* nest undef, i8* blockaddress(@command_line_arguments.command_line_arguments..thunk17, %label.0)), !dbg !2348
  %0 = and i8 %call.271, 1, !dbg !2348
  %trunc.354 = icmp eq i8 %0, 0, !dbg !2348
  br i1 %trunc.354, label %else.353, label %label.0

else.353:                                         ; preds = %entry
  %field.952 = getelementptr inbounds { %Mutex.0* }, { %Mutex.0* }* %__go_thunk_parameter, i64 0, i32 0, !dbg !2348
  %.field.ld.165 = load %Mutex.0*, %Mutex.0** %field.952, align 8, !dbg !2348
  call void @sync.Mutex.Unlock(i8* nest undef, %Mutex.0* %.field.ld.165), !dbg !2348
  br label %label.0

label.0:                                          ; preds = %entry, %else.353
  call void @llvm.dbg.value(metadata i8 0, metadata !2349, metadata !DIExpression()), !dbg !2348
  ret i8 0, !dbg !2348
}

declare void @runtime.mapiterinit(i8*, %_type.0*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, i8*) local_unnamed_addr #0

declare void @runtime.mapiternext(i8*, i8*) local_unnamed_addr #0

declare void @runtime.mapdelete(i8*, %_type.0*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, i8*) local_unnamed_addr #0

declare { i64, i8 } @runtime.mapaccess2(i8*, %_type.0*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, i8*) local_unnamed_addr #0

declare void @sync.Mutex.Unlock(i8*, %Mutex.0*) local_unnamed_addr #0

define internal fastcc void @command_line_arguments.devReadRoutine(%Interface.0* %dev, {}* %packetsIn, %WaitGroup.0* %wg, i8* readonly %isShuttingDown) unnamed_addr #0 personality i32 (i32, i32, i64, i8*, i8*)* @__gccgo_personality_v0 !dbg !2350 {
entry:
  %tmp.149 = alloca %IPST.6, align 8
  %tmpv.841 = alloca i8, align 1
  %tmpv.842 = alloca { %WaitGroup.0* }, align 8
  %packet = alloca { i8*, i64, i64 }, align 8
  %sret.actual.145 = alloca %IPST.7, align 8
  %sret.actual.146 = alloca { i64, %error.0 }, align 8
  %tmpv.850 = alloca { i8*, i64 }, align 8
  %tmpv.852 = alloca { i8*, i64 }, align 8
  %tmpv.853 = alloca [2 x %IPST.11], align 8
  %tmpv.856 = alloca %IP.0, align 8
  %tmpv.858 = alloca { i8*, i64, i64 }, align 8
  %sret.actual.149 = alloca %IP.0, align 8
  %tmpv.862 = alloca { i8*, i64, i64 }, align 8
  %tmpv.868 = alloca %IPPacket.0, align 8
  %tmpv.869 = alloca %IPPacket.0*, align 8
  call void @llvm.dbg.value(metadata %Interface.0* %dev, metadata !2354, metadata !DIExpression()), !dbg !2355
  call void @llvm.dbg.value(metadata {}* %packetsIn, metadata !2356, metadata !DIExpression()), !dbg !2357
  call void @llvm.dbg.value(metadata %WaitGroup.0* %wg, metadata !2358, metadata !DIExpression()), !dbg !2359
  call void @llvm.dbg.value(metadata i8* %isShuttingDown, metadata !2360, metadata !DIExpression()), !dbg !2361
  store i8 0, i8* %tmpv.841, align 1
  invoke void @sync.WaitGroup.Add(i8* nest undef, %WaitGroup.0* %wg, i64 1)
          to label %cont.210 unwind label %pad.16.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !2362

finally.8:                                        ; preds = %fallthrough.329, %fallthrough.322, %pad.16.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, %catchpad.8
  %ehtmp.8.sroa.0.0 = phi i8* [ %ex2.8.fca.0.extract, %catchpad.8 ], [ undef, %pad.16.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp ], [ undef, %fallthrough.322 ], [ undef, %fallthrough.329 ]
  %ehtmp.8.sroa.2.0 = phi i32 [ %ex2.8.fca.1.extract, %catchpad.8 ], [ undef, %pad.16.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp ], [ undef, %fallthrough.322 ], [ undef, %fallthrough.329 ]
  %finvar.8.0 = phi i8 [ 0, %catchpad.8 ], [ 1, %pad.16.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp ], [ 1, %fallthrough.322 ], [ 1, %fallthrough.329 ]
  br label %finish.8

pad.16.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp: ; preds = %then.329, %cont.229, %cont.228, %fallthrough.327, %then.327, %fallthrough.325, %then.325, %fallthrough.323, %then.323, %cont.212, %then.330, %fallthrough.322, %cont.220, %cont.219, %cont.218, %cont.217, %cont.216, %cont.215, %then.322, %then.321, %cont.210, %entry
  %lpad.loopexit.split-lp9 = landingpad { i8*, i32 }
          catch i8* null
  invoke void @runtime.checkdefer(i8* nest undef, i8* nonnull %tmpv.841)
          to label %finally.8 unwind label %catchpad.8, !dbg !2363

cont.210:                                         ; preds = %entry
  %cast.2649 = bitcast { %WaitGroup.0* }* %tmpv.842 to i8*
  %field.819 = getelementptr inbounds { %WaitGroup.0* }, { %WaitGroup.0* }* %tmpv.842, i64 0, i32 0, !dbg !2364
  store %WaitGroup.0* %wg, %WaitGroup.0** %field.819, align 8, !dbg !2364
  invoke void @runtime.deferproc(i8* nest undef, i8* nonnull %tmpv.841, %__go_descriptor.63* bitcast (i8 (i8*, { %WaitGroup.0* }*)* @command_line_arguments.command_line_arguments..thunk18 to %__go_descriptor.63*), i8* nonnull %cast.2649)
          to label %label.0.preheader unwind label %pad.16.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !2364

label.0.preheader:                                ; preds = %cont.210
  %icmp.367 = icmp eq i8* %isShuttingDown, null
  %0 = bitcast { i8*, i64, i64 }* %packet to i8*
  %cast.2655 = bitcast %IPST.7* %sret.actual.145 to i8*
  %tmpv.844.sroa.0.0.cast.2659.sroa_idx = getelementptr inbounds { i64, %error.0 }, { i64, %error.0 }* %sret.actual.146, i64 0, i32 0
  %tmpv.844.sroa.3.sroa.0.0.tmpv.844.sroa.3.0.cast.2659.sroa_cast.sroa_idx = getelementptr inbounds { i64, %error.0 }, { i64, %error.0 }* %sret.actual.146, i64 0, i32 1, i32 0
  %tmpv.844.sroa.3.sroa.3.0.tmpv.844.sroa.3.0.cast.2659.sroa_cast.sroa_idx31 = getelementptr inbounds { i64, %error.0 }, { i64, %error.0 }* %sret.actual.146, i64 0, i32 1, i32 1
  %field.833 = getelementptr inbounds { i8*, i64, i64 }, { i8*, i64, i64 }* %packet, i64 0, i32 2
  %1 = bitcast { i8*, i64, i64 }* %packet to i64*
  %2 = bitcast { i8*, i64, i64 }* %tmpv.858 to i64*
  %tmp.150.sroa.2.0.cast.2690.sroa_idx47 = getelementptr inbounds { i8*, i64, i64 }, { i8*, i64, i64 }* %tmpv.858, i64 0, i32 1
  %tmp.150.sroa.3.0.cast.2690.sroa_idx48 = getelementptr inbounds { i8*, i64, i64 }, { i8*, i64, i64 }* %tmpv.858, i64 0, i32 2
  %cast.2692 = bitcast %IP.0* %tmpv.856 to i8*
  %cast.2693 = bitcast %IP.0* %sret.actual.149 to i8*
  %3 = bitcast { i8*, i64, i64 }* %tmpv.862 to i64*
  %tmp.151.sroa.2.0.cast.2694.sroa_idx49 = getelementptr inbounds { i8*, i64, i64 }, { i8*, i64, i64 }* %tmpv.862, i64 0, i32 1
  %tmp.151.sroa.3.0.cast.2694.sroa_idx50 = getelementptr inbounds { i8*, i64, i64 }, { i8*, i64, i64 }* %tmpv.862, i64 0, i32 2
  %field.851 = getelementptr inbounds { i8*, i64, i64 }, { i8*, i64, i64 }* %packet, i64 0, i32 0
  %tmpv.864.sroa.0.0.cast.2702.sroa_idx = getelementptr inbounds %IPPacket.0, %IPPacket.0* %tmpv.868, i64 0, i32 0, i32 0
  %tmpv.864.sroa.2.0.cast.2702.sroa_idx55 = getelementptr inbounds %IPPacket.0, %IPPacket.0* %tmpv.868, i64 0, i32 0, i32 1
  %tmpv.864.sroa.3.0.cast.2702.sroa_idx56 = getelementptr inbounds %IPPacket.0, %IPPacket.0* %tmpv.868, i64 0, i32 0, i32 2
  %field.858 = getelementptr inbounds %IPPacket.0, %IPPacket.0* %tmpv.868, i64 0, i32 1
  %cast.2704 = bitcast %IP.0* %field.858 to i8*
  %field.859 = getelementptr inbounds %IPPacket.0, %IPPacket.0* %tmpv.868, i64 0, i32 2
  %cast.2708 = bitcast %IPPacket.0* %tmpv.868 to i8*
  %4 = bitcast %IPPacket.0** %tmpv.869 to i8**
  %cast.2709 = bitcast %IPPacket.0** %tmpv.869 to i8*
  br label %label.0, !dbg !2365

label.0:                                          ; preds = %label.0.preheader, %cont.230
  %tmpv.866.sroa.0.0 = phi i8* [ %tmpv.866.sroa.0.1, %cont.230 ], [ undef, %label.0.preheader ]
  %tmpv.866.sroa.2.0 = phi i64 [ %tmpv.866.sroa.2.1, %cont.230 ], [ undef, %label.0.preheader ]
  %tmpv.866.sroa.3.0 = phi i64 [ %tmpv.866.sroa.3.1, %cont.230 ], [ undef, %label.0.preheader ]
  %tmpv.870.0 = phi i8* [ %tmpv.870.1, %cont.230 ], [ undef, %label.0.preheader ]
  br i1 %icmp.367, label %then.329, label %fallthrough.329

cont.212:                                         ; preds = %then.330
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %cast.2655, i64 24, i1 false)
  invoke void @github_com_twitchyliquid64_subnet_vendor_github_com_songgao_water.Interface.Read..stub({ i64, %error.0 }* nonnull sret %sret.actual.146, i8* nest undef, %Interface.0* %dev, { i8*, i64, i64 }* byval nonnull %packet)
          to label %cont.213 unwind label %pad.16.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !2366

cont.213:                                         ; preds = %cont.212
  %tmpv.844.sroa.0.0.copyload23 = load i64, i64* %tmpv.844.sroa.0.0.cast.2659.sroa_idx, align 8, !dbg !2366
  %tmpv.844.sroa.3.sroa.0.0.copyload30 = load { %_type.0*, { i64, i64 } (i8*, i8*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)* }** %tmpv.844.sroa.3.sroa.0.0.tmpv.844.sroa.3.0.cast.2659.sroa_cast.sroa_idx, align 8, !dbg !2366
  %tmpv.844.sroa.3.sroa.3.0.copyload32 = load i8*, i8** %tmpv.844.sroa.3.sroa.3.0.tmpv.844.sroa.3.0.cast.2659.sroa_cast.sroa_idx31, align 8, !dbg !2366
  call void @llvm.dbg.value(metadata i64 %tmpv.844.sroa.0.0.copyload23, metadata !2368, metadata !DIExpression()), !dbg !2369
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.844.sroa.3.sroa.0.0.copyload30, metadata !2370, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2369
  call void @llvm.dbg.value(metadata i8* %tmpv.844.sroa.3.sroa.3.0.copyload32, metadata !2370, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2369
  %icmp.348 = icmp eq { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.844.sroa.3.sroa.0.0.copyload30, null, !dbg !2371
  br i1 %icmp.348, label %else.320, label %then.320

then.320:                                         ; preds = %cont.213
  br i1 %icmp.367, label %then.321, label %fallthrough.321

else.320:                                         ; preds = %cont.213
  %tmpv.844.sroa.0.0.copyload23.lobit = lshr i64 %tmpv.844.sroa.0.0.copyload23, 63, !dbg !2372
  %5 = trunc i64 %tmpv.844.sroa.0.0.copyload23.lobit to i8, !dbg !2372
  %packet.field.ld.0 = load i64, i64* %field.833, align 8, !dbg !2373
  %icmp.350 = icmp sgt i64 %tmpv.844.sroa.0.0.copyload23, %packet.field.ld.0, !dbg !2372
  %zext.365 = zext i1 %icmp.350 to i8, !dbg !2372
  %ior.160 = or i8 %zext.365, %5, !dbg !2372
  %packet.field.ld.0.lobit = lshr i64 %packet.field.ld.0, 63, !dbg !2372
  %ior.1641 = or i64 %packet.field.ld.0.lobit, %tmpv.844.sroa.0.0.copyload23.lobit, !dbg !2372
  %ior.164 = trunc i64 %ior.1641 to i8, !dbg !2372
  %ior.165 = or i8 %ior.160, %ior.164, !dbg !2372
  %trunc.325 = icmp eq i8 %ior.165, 0, !dbg !2372
  br i1 %trunc.325, label %else.323, label %then.323

then.321:                                         ; preds = %then.320
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.321 unwind label %pad.16.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !2374

fallthrough.321:                                  ; preds = %then.320, %then.321
  %.ld.245 = load i8, i8* %isShuttingDown, align 1, !dbg !2374
  %icmp.347 = icmp eq i8 %.ld.245, 0, !dbg !2375
  br i1 %icmp.347, label %then.322, label %fallthrough.322

then.322:                                         ; preds = %fallthrough.321
  %call.239 = invoke { i64, i64 } @github_com_twitchyliquid64_subnet_vendor_github_com_songgao_water.Interface.Name(i8* nest undef, %Interface.0* %dev)
          to label %cont.215 unwind label %pad.16.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !2376

fallthrough.322:                                  ; preds = %cont.220, %fallthrough.321
  invoke void @runtime.closechan(i8* nest undef, {}* %packetsIn)
          to label %finally.8 unwind label %pad.16.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !2377

cont.215:                                         ; preds = %then.322
  %call.239.fca.0.extract = extractvalue { i64, i64 } %call.239, 0, !dbg !2376
  %call.239.fca.1.extract = extractvalue { i64, i64 } %call.239, 1, !dbg !2376
  %field.823 = getelementptr inbounds { %_type.0*, { i64, i64 } (i8*, i8*)* }, { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.844.sroa.3.sroa.0.0.copyload30, i64 0, i32 1, !dbg !2378
  %.field.ld.121 = load { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)** %field.823, align 8, !dbg !2378
  %call.240 = invoke { i64, i64 } %.field.ld.121(i8* nest undef, i8* %tmpv.844.sroa.3.sroa.3.0.copyload32)
          to label %cont.216 unwind label %pad.16.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !2378

cont.216:                                         ; preds = %cont.215
  %call.240.fca.0.extract = extractvalue { i64, i64 } %call.240, 0, !dbg !2378
  %call.240.fca.1.extract = extractvalue { i64, i64 } %call.240, 1, !dbg !2378
  %call.241 = invoke i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d)
          to label %cont.217 unwind label %pad.16.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !2379

cont.217:                                         ; preds = %cont.216
  %tmpv.847.sroa.0.0.cast.2671.sroa_cast = bitcast { i8*, i64 }* %tmpv.850 to i64*
  store i64 %call.239.fca.0.extract, i64* %tmpv.847.sroa.0.0.cast.2671.sroa_cast, align 8
  %tmpv.847.sroa.2.0.cast.2671.sroa_idx22 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.850, i64 0, i32 1
  store i64 %call.239.fca.1.extract, i64* %tmpv.847.sroa.2.0.cast.2671.sroa_idx22, align 8
  %cast.2674 = bitcast { i8*, i64 }* %tmpv.850 to i8*, !dbg !2379
  invoke void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.241, i8* nonnull %cast.2674)
          to label %cont.218 unwind label %pad.16.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !2379

cont.218:                                         ; preds = %cont.217
  %call.242 = invoke i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d)
          to label %cont.219 unwind label %pad.16.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !2379

cont.219:                                         ; preds = %cont.218
  %tmpv.848.sroa.0.0.cast.2676.sroa_cast = bitcast { i8*, i64 }* %tmpv.852 to i64*
  store i64 %call.240.fca.0.extract, i64* %tmpv.848.sroa.0.0.cast.2676.sroa_cast, align 8
  %tmpv.848.sroa.2.0.cast.2676.sroa_idx20 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.852, i64 0, i32 1
  store i64 %call.240.fca.1.extract, i64* %tmpv.848.sroa.2.0.cast.2676.sroa_idx20, align 8
  %cast.2679 = bitcast { i8*, i64 }* %tmpv.852 to i8*, !dbg !2379
  invoke void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.242, i8* nonnull %cast.2679)
          to label %cont.220 unwind label %pad.16.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !2379

cont.220:                                         ; preds = %cont.219
  %tmp.147.sroa.0.0.cast.2682.sroa_idx = getelementptr inbounds [2 x %IPST.11], [2 x %IPST.11]* %tmpv.853, i64 0, i64 0, i32 0, !dbg !2379
  store %_type.0* @string..d, %_type.0** %tmp.147.sroa.0.0.cast.2682.sroa_idx, align 8, !dbg !2379
  %tmp.147.sroa.2.0.cast.2682.sroa_idx45 = getelementptr inbounds [2 x %IPST.11], [2 x %IPST.11]* %tmpv.853, i64 0, i64 0, i32 1, !dbg !2379
  store i8* %call.241, i8** %tmp.147.sroa.2.0.cast.2682.sroa_idx45, align 8, !dbg !2379
  %tmp.148.sroa.0.0.cast.2684.sroa_idx = getelementptr inbounds [2 x %IPST.11], [2 x %IPST.11]* %tmpv.853, i64 0, i64 1, i32 0, !dbg !2379
  store %_type.0* @string..d, %_type.0** %tmp.148.sroa.0.0.cast.2684.sroa_idx, align 8, !dbg !2379
  %tmp.148.sroa.2.0.cast.2684.sroa_idx46 = getelementptr inbounds [2 x %IPST.11], [2 x %IPST.11]* %tmpv.853, i64 0, i64 1, i32 1, !dbg !2379
  store i8* %call.242, i8** %tmp.148.sroa.2.0.cast.2684.sroa_idx46, align 8, !dbg !2379
  %field.829 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.149, i64 0, i32 0, !dbg !2379
  %cast.2687 = getelementptr inbounds [2 x %IPST.11], [2 x %IPST.11]* %tmpv.853, i64 0, i64 0, !dbg !2379
  store %IPST.11* %cast.2687, %IPST.11** %field.829, align 8, !dbg !2379
  %field.830 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.149, i64 0, i32 1, !dbg !2379
  store i64 2, i64* %field.830, align 8, !dbg !2379
  %field.831 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.149, i64 0, i32 2, !dbg !2379
  store i64 2, i64* %field.831, align 8, !dbg !2379
  invoke void @log.Printf(i8* nest undef, i64 ptrtoint ([17 x i8]* @const.304 to i64), i64 16, %IPST.6* byval nonnull %tmp.149)
          to label %fallthrough.322 unwind label %pad.16.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !2379

then.323:                                         ; preds = %else.320
  invoke void @__go_runtime_error(i8* nest undef, i32 3)
          to label %fallthrough.323 unwind label %pad.16.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !2372

fallthrough.323:                                  ; preds = %then.323, %else.323
  invoke void @github_com_twitchyliquid64_subnet_vendor_github_com_songgao_water_waterutil.IPv4Destination(%IP.0* nonnull sret %sret.actual.149, i8* nest undef, { i8*, i64, i64 }* byval nonnull %tmpv.858)
          to label %cont.224 unwind label %pad.16.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !2380

else.323:                                         ; preds = %else.320
  %packet.field.ld.12 = load i64, i64* %1, align 8, !dbg !2373
  store i64 %packet.field.ld.12, i64* %2, align 8
  store i64 %tmpv.844.sroa.0.0.copyload23, i64* %tmp.150.sroa.2.0.cast.2690.sroa_idx47, align 8
  store i64 %packet.field.ld.0, i64* %tmp.150.sroa.3.0.cast.2690.sroa_idx48, align 8
  br label %fallthrough.323

cont.224:                                         ; preds = %fallthrough.323
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2692, i8* nonnull align 8 %cast.2693, i64 24, i1 false)
  %packet.field.ld.2 = load i64, i64* %field.833, align 8, !dbg !2381
  %icmp.356 = icmp sgt i64 %tmpv.844.sroa.0.0.copyload23, %packet.field.ld.2, !dbg !2382
  %zext.371 = zext i1 %icmp.356 to i8, !dbg !2382
  %ior.166 = or i8 %zext.371, %5, !dbg !2382
  %packet.field.ld.2.lobit = lshr i64 %packet.field.ld.2, 63, !dbg !2382
  %ior.1703 = or i64 %packet.field.ld.2.lobit, %tmpv.844.sroa.0.0.copyload23.lobit, !dbg !2382
  %ior.170 = trunc i64 %ior.1703 to i8, !dbg !2382
  %ior.171 = or i8 %ior.166, %ior.170, !dbg !2382
  %trunc.327 = icmp eq i8 %ior.171, 0, !dbg !2382
  br i1 %trunc.327, label %else.325, label %then.325

then.325:                                         ; preds = %cont.224
  invoke void @__go_runtime_error(i8* nest undef, i32 3)
          to label %fallthrough.325 unwind label %pad.16.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !2382

fallthrough.325:                                  ; preds = %then.325, %else.325
  %call.243 = invoke i8 @github_com_twitchyliquid64_subnet_vendor_github_com_songgao_water_waterutil.IPv4Protocol(i8* nest undef, { i8*, i64, i64 }* byval nonnull %tmpv.862)
          to label %cont.226 unwind label %pad.16.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !2383

else.325:                                         ; preds = %cont.224
  %packet.field.ld.34 = load i64, i64* %1, align 8, !dbg !2381
  store i64 %packet.field.ld.34, i64* %3, align 8
  store i64 %tmpv.844.sroa.0.0.copyload23, i64* %tmp.151.sroa.2.0.cast.2694.sroa_idx49, align 8
  store i64 %packet.field.ld.2, i64* %tmp.151.sroa.3.0.cast.2694.sroa_idx50, align 8
  br label %fallthrough.325

cont.226:                                         ; preds = %fallthrough.325
  %packet.field.ld.4 = load i64, i64* %field.833, align 8, !dbg !2384
  %icmp.362 = icmp sgt i64 %tmpv.844.sroa.0.0.copyload23, %packet.field.ld.4, !dbg !2385
  %zext.377 = zext i1 %icmp.362 to i8, !dbg !2385
  %ior.172 = or i8 %zext.377, %5, !dbg !2385
  %packet.field.ld.4.lobit = lshr i64 %packet.field.ld.4, 63, !dbg !2385
  %ior.1765 = or i64 %packet.field.ld.4.lobit, %tmpv.844.sroa.0.0.copyload23.lobit, !dbg !2385
  %ior.176 = trunc i64 %ior.1765 to i8, !dbg !2385
  %ior.177 = or i8 %ior.172, %ior.176, !dbg !2385
  %trunc.329 = icmp eq i8 %ior.177, 0, !dbg !2385
  br i1 %trunc.329, label %else.327, label %then.327

then.327:                                         ; preds = %cont.226
  invoke void @__go_runtime_error(i8* nest undef, i32 3)
          to label %fallthrough.327 unwind label %pad.16.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !2385

fallthrough.327:                                  ; preds = %then.327, %else.327
  %tmpv.866.sroa.0.1 = phi i8* [ %tmpv.866.sroa.0.0, %then.327 ], [ %packet.field.ld.5, %else.327 ]
  %tmpv.866.sroa.2.1 = phi i64 [ %tmpv.866.sroa.2.0, %then.327 ], [ %tmpv.844.sroa.0.0.copyload23, %else.327 ]
  %tmpv.866.sroa.3.1 = phi i64 [ %tmpv.866.sroa.3.0, %then.327 ], [ %packet.field.ld.4, %else.327 ]
  %call.244 = invoke i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.IPPacket..d, i64 0, i32 0))
          to label %cont.228 unwind label %pad.16.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !2386

else.327:                                         ; preds = %cont.226
  %packet.field.ld.5 = load i8*, i8** %field.851, align 8, !dbg !2384
  br label %fallthrough.327

cont.228:                                         ; preds = %fallthrough.327
  store i8* %tmpv.866.sroa.0.1, i8** %tmpv.864.sroa.0.0.cast.2702.sroa_idx, align 8, !dbg !2387
  store i64 %tmpv.866.sroa.2.1, i64* %tmpv.864.sroa.2.0.cast.2702.sroa_idx55, align 8, !dbg !2387
  store i64 %tmpv.866.sroa.3.1, i64* %tmpv.864.sroa.3.0.cast.2702.sroa_idx56, align 8, !dbg !2387
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2704, i8* nonnull align 8 %cast.2692, i64 24, i1 false), !dbg !2387
  store i8 %call.243, i8* %field.859, align 8, !dbg !2387
  invoke void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.IPPacket..d, i64 0, i32 0), i8* %call.244, i8* nonnull %cast.2708)
          to label %cont.229 unwind label %pad.16.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !2386

cont.229:                                         ; preds = %cont.228
  call void @llvm.dbg.value(metadata i8* %call.244, metadata !2388, metadata !DIExpression()), !dbg !2389
  store i8* %call.244, i8** %4, align 8
  invoke void @runtime.chansend1(i8* nest undef, {}* %packetsIn, i8* nonnull %cast.2709)
          to label %cont.230 unwind label %pad.16.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !2390

cont.230:                                         ; preds = %cont.229
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0)
  br label %label.0

then.329:                                         ; preds = %label.0
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.329 unwind label %pad.16.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !2365

fallthrough.329:                                  ; preds = %label.0, %then.329
  %tmpv.870.1 = phi i8* [ %tmpv.870.0, %then.329 ], [ %isShuttingDown, %label.0 ]
  %.ld.268 = load i8, i8* %tmpv.870.1, align 1, !dbg !2365
  %icmp.368 = icmp eq i8 %.ld.268, 0, !dbg !2391
  br i1 %icmp.368, label %then.330, label %finally.8

then.330:                                         ; preds = %fallthrough.329
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0)
  invoke void @runtime.makeslice(%IPST.7* nonnull sret %sret.actual.145, i8* nest undef, %_type.0* nonnull @uint8..d, i64 4096, i64 4096)
          to label %cont.212 unwind label %pad.16.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !2392

catchpad.8:                                       ; preds = %pad.16.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp
  %ex2.8 = landingpad { i8*, i32 }
          cleanup
  %ex2.8.fca.0.extract = extractvalue { i8*, i32 } %ex2.8, 0
  %ex2.8.fca.1.extract = extractvalue { i8*, i32 } %ex2.8, 1
  br label %finally.8

pad.17:                                           ; preds = %finish.8
  %ex.17 = landingpad { i8*, i32 }
          catch i8* null
  call void @runtime.checkdefer(i8* nest undef, i8* nonnull %tmpv.841), !dbg !2363
  br label %finish.8

finish.8:                                         ; preds = %pad.17, %finally.8
  invoke void @runtime.deferreturn(i8* nest undef, i8* nonnull %tmpv.841)
          to label %cont.233 unwind label %pad.17, !dbg !2363

cont.233:                                         ; preds = %finish.8
  %icmp.369 = icmp eq i8 %finvar.8.0, 1
  br i1 %icmp.369, label %finret.8, label %finres.8

finres.8:                                         ; preds = %cont.233
  %excv.8.fca.0.insert = insertvalue { i8*, i32 } undef, i8* %ehtmp.8.sroa.0.0, 0
  %excv.8.fca.1.insert = insertvalue { i8*, i32 } %excv.8.fca.0.insert, i32 %ehtmp.8.sroa.2.0, 1
  resume { i8*, i32 } %excv.8.fca.1.insert

finret.8:                                         ; preds = %cont.233
  ret void, !dbg !2393
}

; Function Attrs: noinline
define internal i8 @command_line_arguments.command_line_arguments..thunk18(i8* nest nocapture readnone %nest.58, { %WaitGroup.0* }* nocapture readonly %__go_thunk_parameter) #4 !dbg !2394 {
entry:
  call void @llvm.dbg.value(metadata { %WaitGroup.0* }* %__go_thunk_parameter, metadata !2395, metadata !DIExpression()), !dbg !2396
  call void @llvm.dbg.value(metadata i8 0, metadata !2397, metadata !DIExpression()), !dbg !2396
  %call.272 = call i8 @runtime.setdeferretaddr(i8* nest undef, i8* blockaddress(@command_line_arguments.command_line_arguments..thunk18, %label.0)), !dbg !2396
  %0 = and i8 %call.272, 1, !dbg !2396
  %trunc.355 = icmp eq i8 %0, 0, !dbg !2396
  br i1 %trunc.355, label %else.354, label %label.0

else.354:                                         ; preds = %entry
  %field.953 = getelementptr inbounds { %WaitGroup.0* }, { %WaitGroup.0* }* %__go_thunk_parameter, i64 0, i32 0, !dbg !2396
  %.field.ld.166 = load %WaitGroup.0*, %WaitGroup.0** %field.953, align 8, !dbg !2396
  call void @sync.WaitGroup.Done(i8* nest undef, %WaitGroup.0* %.field.ld.166), !dbg !2396
  br label %label.0

label.0:                                          ; preds = %entry, %else.354
  call void @llvm.dbg.value(metadata i8 0, metadata !2397, metadata !DIExpression()), !dbg !2396
  ret i8 0, !dbg !2396
}

declare void @runtime.makeslice(%IPST.7*, i8*, %_type.0*, i64, i64) local_unnamed_addr #0

declare void @github_com_twitchyliquid64_subnet_vendor_github_com_songgao_water.Interface.Read..stub({ i64, %error.0 }*, i8*, %Interface.0*, { i8*, i64, i64 }*) local_unnamed_addr #0

declare void @runtime.closechan(i8*, {}*) local_unnamed_addr #0

declare void @github_com_twitchyliquid64_subnet_vendor_github_com_songgao_water_waterutil.IPv4Destination(%IP.0*, i8*, { i8*, i64, i64 }*) local_unnamed_addr #0

declare i8 @github_com_twitchyliquid64_subnet_vendor_github_com_songgao_water_waterutil.IPv4Protocol(i8*, { i8*, i64, i64 }*) local_unnamed_addr #0

define internal fastcc void @command_line_arguments.devWriteRoutine(%Interface.0* %dev, {}* %packetsOut, %WaitGroup.0* %wg, i8* readonly %isShuttingDown) unnamed_addr #0 personality i32 (i32, i32, i64, i8*, i8*)* @__gccgo_personality_v0 !dbg !2398 {
entry:
  %tmp.159 = alloca %IPST.6, align 8
  %tmp.155 = alloca %IPST.6, align 8
  %tmpv.871 = alloca i8, align 1
  %tmpv.872 = alloca { %WaitGroup.0* }, align 8
  %tmpv.874 = alloca %IPPacket.0*, align 8
  %sret.actual.150 = alloca { i64, %error.0 }, align 8
  %tmpv.882 = alloca { i8*, i64 }, align 8
  %tmpv.884 = alloca { i8*, i64 }, align 8
  %tmpv.885 = alloca [2 x %IPST.11], align 8
  %tmpv.890 = alloca { i8*, i64 }, align 8
  %tmpv.893 = alloca [3 x %IPST.11], align 8
  call void @llvm.dbg.value(metadata %Interface.0* %dev, metadata !2399, metadata !DIExpression()), !dbg !2400
  call void @llvm.dbg.value(metadata {}* %packetsOut, metadata !2401, metadata !DIExpression()), !dbg !2402
  call void @llvm.dbg.value(metadata %WaitGroup.0* %wg, metadata !2403, metadata !DIExpression()), !dbg !2404
  call void @llvm.dbg.value(metadata i8* %isShuttingDown, metadata !2405, metadata !DIExpression()), !dbg !2406
  store i8 0, i8* %tmpv.871, align 1
  invoke void @sync.WaitGroup.Add(i8* nest undef, %WaitGroup.0* %wg, i64 1)
          to label %cont.234 unwind label %pad.18.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit.split-lp, !dbg !2407

finally.9:                                        ; preds = %fallthrough.336, %cont.244, %pad.18.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit.split-lp, %catchpad.9
  %ehtmp.9.sroa.0.0 = phi i8* [ %ex2.9.fca.0.extract, %catchpad.9 ], [ undef, %pad.18.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit.split-lp ], [ undef, %cont.244 ], [ undef, %fallthrough.336 ]
  %ehtmp.9.sroa.2.0 = phi i32 [ %ex2.9.fca.1.extract, %catchpad.9 ], [ undef, %pad.18.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit.split-lp ], [ undef, %cont.244 ], [ undef, %fallthrough.336 ]
  %finvar.9.0 = phi i8 [ 0, %catchpad.9 ], [ 1, %pad.18.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit.split-lp ], [ 1, %cont.244 ], [ 1, %fallthrough.336 ]
  br label %finish.9

pad.18.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit.split-lp: ; preds = %entry, %cont.234, %then.332, %cont.239, %cont.240, %cont.241, %cont.242, %cont.243, %cont.244, %then.337, %then.331, %fallthrough.331, %then.333, %then.336, %cont.252, %cont.251, %cont.250, %cont.249, %fallthrough.335, %then.335, %then.334
  %lpad.loopexit.split-lp = landingpad { i8*, i32 }
          catch i8* null
  invoke void @runtime.checkdefer(i8* nest undef, i8* nonnull %tmpv.871)
          to label %finally.9 unwind label %catchpad.9, !dbg !2408

cont.234:                                         ; preds = %entry
  %cast.2711 = bitcast { %WaitGroup.0* }* %tmpv.872 to i8*
  %field.860 = getelementptr inbounds { %WaitGroup.0* }, { %WaitGroup.0* }* %tmpv.872, i64 0, i32 0, !dbg !2409
  store %WaitGroup.0* %wg, %WaitGroup.0** %field.860, align 8, !dbg !2409
  invoke void @runtime.deferproc(i8* nest undef, i8* nonnull %tmpv.871, %__go_descriptor.63* bitcast (i8 (i8*, { %WaitGroup.0* }*)* @command_line_arguments.command_line_arguments..thunk19 to %__go_descriptor.63*), i8* nonnull %cast.2711)
          to label %label.0.preheader unwind label %pad.18.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit.split-lp, !dbg !2409

label.0.preheader:                                ; preds = %cont.234
  %icmp.375 = icmp eq i8* %isShuttingDown, null
  %cast.2715 = bitcast %IPPacket.0** %tmpv.874 to i8*
  %tmpv.875.sroa.0.0.cast.2720.sroa_idx = getelementptr inbounds { i64, %error.0 }, { i64, %error.0 }* %sret.actual.150, i64 0, i32 0
  %tmpv.875.sroa.3.sroa.0.0.tmpv.875.sroa.3.0.cast.2720.sroa_cast.sroa_idx = getelementptr inbounds { i64, %error.0 }, { i64, %error.0 }* %sret.actual.150, i64 0, i32 1, i32 0
  %tmpv.875.sroa.3.sroa.3.0.tmpv.875.sroa.3.0.cast.2720.sroa_cast.sroa_idx14 = getelementptr inbounds { i64, %error.0 }, { i64, %error.0 }* %sret.actual.150, i64 0, i32 1, i32 1
  %tmpv.886.sroa.0.0.cast.2755.sroa_cast = bitcast { i8*, i64 }* %tmpv.890 to i64*
  %tmpv.886.sroa.2.0.cast.2755.sroa_idx2 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.890, i64 0, i32 1
  %cast.2758 = bitcast { i8*, i64 }* %tmpv.890 to i8*
  %tmp.156.sroa.0.0.cast.2764.sroa_idx = getelementptr inbounds [3 x %IPST.11], [3 x %IPST.11]* %tmpv.893, i64 0, i64 0, i32 0
  %tmp.156.sroa.2.0.cast.2764.sroa_idx21 = getelementptr inbounds [3 x %IPST.11], [3 x %IPST.11]* %tmpv.893, i64 0, i64 0, i32 1
  %tmp.157.sroa.0.0.cast.2766.sroa_idx = getelementptr inbounds [3 x %IPST.11], [3 x %IPST.11]* %tmpv.893, i64 0, i64 1, i32 0
  %tmp.157.sroa.2.0.cast.2766.sroa_idx22 = getelementptr inbounds [3 x %IPST.11], [3 x %IPST.11]* %tmpv.893, i64 0, i64 1, i32 1
  %tmp.158.sroa.0.0.cast.2768.sroa_idx = getelementptr inbounds [3 x %IPST.11], [3 x %IPST.11]* %tmpv.893, i64 0, i64 2, i32 0
  %tmp.158.sroa.2.0.cast.2768.sroa_idx23 = getelementptr inbounds [3 x %IPST.11], [3 x %IPST.11]* %tmpv.893, i64 0, i64 2, i32 1
  %field.883 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.159, i64 0, i32 0
  %cast.2771 = getelementptr inbounds [3 x %IPST.11], [3 x %IPST.11]* %tmpv.893, i64 0, i64 0
  %field.884 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.159, i64 0, i32 1
  %field.885 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.159, i64 0, i32 2
  br label %label.0.outer, !dbg !2410

label.0.outer:                                    ; preds = %cont.252, %label.0.preheader
  %tmpv.876.0.ph = phi %IPPacket.0* [ %tmpv.876.1, %cont.252 ], [ undef, %label.0.preheader ]
  %tmpv.888.0.ph = phi %IPPacket.0* [ %tmpv.888.2, %cont.252 ], [ undef, %label.0.preheader ]
  %tmpv.894.0.ph = phi %IPPacket.0* [ %tmpv.894.1, %cont.252 ], [ undef, %label.0.preheader ]
  %tmpv.895.0.ph = phi i8* [ %tmpv.895.1, %cont.252 ], [ undef, %label.0.preheader ]
  br label %label.0

label.0:                                          ; preds = %label.0.outer, %fallthrough.333
  %tmpv.876.0 = phi %IPPacket.0* [ %tmpv.876.1, %fallthrough.333 ], [ %tmpv.876.0.ph, %label.0.outer ]
  %tmpv.894.0 = phi %IPPacket.0* [ %tmpv.894.1, %fallthrough.333 ], [ %tmpv.894.0.ph, %label.0.outer ]
  %tmpv.895.0 = phi i8* [ %tmpv.895.1, %fallthrough.333 ], [ %tmpv.895.0.ph, %label.0.outer ]
  br i1 %icmp.375, label %then.336, label %fallthrough.336

cont.236:                                         ; preds = %then.337
  %tmpv.874.ld.0 = load %IPPacket.0*, %IPPacket.0** %tmpv.874, align 8, !dbg !2411
  call void @llvm.dbg.value(metadata %IPPacket.0* %tmpv.874.ld.0, metadata !2413, metadata !DIExpression()), !dbg !2414
  %icmp.370 = icmp eq %IPPacket.0* %tmpv.874.ld.0, null, !dbg !2415
  br i1 %icmp.370, label %then.331, label %fallthrough.331

then.331:                                         ; preds = %cont.236
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.331 unwind label %pad.18.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit.split-lp, !dbg !2415

fallthrough.331:                                  ; preds = %cont.236, %then.331
  %tmpv.876.1 = phi %IPPacket.0* [ %tmpv.876.0, %then.331 ], [ %tmpv.874.ld.0, %cont.236 ]
  %field.861 = getelementptr inbounds %IPPacket.0, %IPPacket.0* %tmpv.876.1, i64 0, i32 0, !dbg !2415
  invoke void @github_com_twitchyliquid64_subnet_vendor_github_com_songgao_water.Interface.Write..stub({ i64, %error.0 }* nonnull sret %sret.actual.150, i8* nest undef, %Interface.0* %dev, { i8*, i64, i64 }* byval %field.861)
          to label %cont.238 unwind label %pad.18.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit.split-lp, !dbg !2416

cont.238:                                         ; preds = %fallthrough.331
  %tmpv.875.sroa.0.0.copyload7 = load i64, i64* %tmpv.875.sroa.0.0.cast.2720.sroa_idx, align 8, !dbg !2416
  %tmpv.875.sroa.3.sroa.0.0.copyload13 = load { %_type.0*, { i64, i64 } (i8*, i8*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)* }** %tmpv.875.sroa.3.sroa.0.0.tmpv.875.sroa.3.0.cast.2720.sroa_cast.sroa_idx, align 8, !dbg !2416
  %tmpv.875.sroa.3.sroa.3.0.copyload15 = load i8*, i8** %tmpv.875.sroa.3.sroa.3.0.tmpv.875.sroa.3.0.cast.2720.sroa_cast.sroa_idx14, align 8, !dbg !2416
  call void @llvm.dbg.value(metadata i64 %tmpv.875.sroa.0.0.copyload7, metadata !2417, metadata !DIExpression()), !dbg !2418
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.875.sroa.3.sroa.0.0.copyload13, metadata !2419, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2418
  call void @llvm.dbg.value(metadata i8* %tmpv.875.sroa.3.sroa.3.0.copyload15, metadata !2419, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2418
  %icmp.371 = icmp eq { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.875.sroa.3.sroa.0.0.copyload13, null, !dbg !2420
  br i1 %icmp.371, label %else.332, label %then.332

then.332:                                         ; preds = %cont.238
  %call.245 = invoke { i64, i64 } @github_com_twitchyliquid64_subnet_vendor_github_com_songgao_water.Interface.Name(i8* nest undef, %Interface.0* %dev)
          to label %cont.239 unwind label %pad.18.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit.split-lp, !dbg !2421

else.332:                                         ; preds = %cont.238
  br i1 %icmp.370, label %then.333, label %fallthrough.333

cont.239:                                         ; preds = %then.332
  %call.245.fca.0.extract = extractvalue { i64, i64 } %call.245, 0, !dbg !2421
  %call.245.fca.1.extract = extractvalue { i64, i64 } %call.245, 1, !dbg !2421
  %field.865 = getelementptr inbounds { %_type.0*, { i64, i64 } (i8*, i8*)* }, { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.875.sroa.3.sroa.0.0.copyload13, i64 0, i32 1, !dbg !2422
  %.field.ld.131 = load { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)** %field.865, align 8, !dbg !2422
  %call.246 = invoke { i64, i64 } %.field.ld.131(i8* nest undef, i8* %tmpv.875.sroa.3.sroa.3.0.copyload15)
          to label %cont.240 unwind label %pad.18.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit.split-lp, !dbg !2422

cont.240:                                         ; preds = %cont.239
  %call.246.fca.0.extract = extractvalue { i64, i64 } %call.246, 0, !dbg !2422
  %call.246.fca.1.extract = extractvalue { i64, i64 } %call.246, 1, !dbg !2422
  %call.247 = invoke i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d)
          to label %cont.241 unwind label %pad.18.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit.split-lp, !dbg !2423

cont.241:                                         ; preds = %cont.240
  %tmpv.879.sroa.0.0.cast.2732.sroa_cast = bitcast { i8*, i64 }* %tmpv.882 to i64*
  store i64 %call.245.fca.0.extract, i64* %tmpv.879.sroa.0.0.cast.2732.sroa_cast, align 8
  %tmpv.879.sroa.2.0.cast.2732.sroa_idx6 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.882, i64 0, i32 1
  store i64 %call.245.fca.1.extract, i64* %tmpv.879.sroa.2.0.cast.2732.sroa_idx6, align 8
  %cast.2735 = bitcast { i8*, i64 }* %tmpv.882 to i8*, !dbg !2423
  invoke void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.247, i8* nonnull %cast.2735)
          to label %cont.242 unwind label %pad.18.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit.split-lp, !dbg !2423

cont.242:                                         ; preds = %cont.241
  %call.248 = invoke i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d)
          to label %cont.243 unwind label %pad.18.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit.split-lp, !dbg !2423

cont.243:                                         ; preds = %cont.242
  %tmpv.880.sroa.0.0.cast.2737.sroa_cast = bitcast { i8*, i64 }* %tmpv.884 to i64*
  store i64 %call.246.fca.0.extract, i64* %tmpv.880.sroa.0.0.cast.2737.sroa_cast, align 8
  %tmpv.880.sroa.2.0.cast.2737.sroa_idx4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.884, i64 0, i32 1
  store i64 %call.246.fca.1.extract, i64* %tmpv.880.sroa.2.0.cast.2737.sroa_idx4, align 8
  %cast.2740 = bitcast { i8*, i64 }* %tmpv.884 to i8*, !dbg !2423
  invoke void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.248, i8* nonnull %cast.2740)
          to label %cont.244 unwind label %pad.18.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit.split-lp, !dbg !2423

cont.244:                                         ; preds = %cont.243
  %tmp.153.sroa.0.0.cast.2743.sroa_idx = getelementptr inbounds [2 x %IPST.11], [2 x %IPST.11]* %tmpv.885, i64 0, i64 0, i32 0, !dbg !2423
  store %_type.0* @string..d, %_type.0** %tmp.153.sroa.0.0.cast.2743.sroa_idx, align 8, !dbg !2423
  %tmp.153.sroa.2.0.cast.2743.sroa_idx19 = getelementptr inbounds [2 x %IPST.11], [2 x %IPST.11]* %tmpv.885, i64 0, i64 0, i32 1, !dbg !2423
  store i8* %call.247, i8** %tmp.153.sroa.2.0.cast.2743.sroa_idx19, align 8, !dbg !2423
  %tmp.154.sroa.0.0.cast.2745.sroa_idx = getelementptr inbounds [2 x %IPST.11], [2 x %IPST.11]* %tmpv.885, i64 0, i64 1, i32 0, !dbg !2423
  store %_type.0* @string..d, %_type.0** %tmp.154.sroa.0.0.cast.2745.sroa_idx, align 8, !dbg !2423
  %tmp.154.sroa.2.0.cast.2745.sroa_idx20 = getelementptr inbounds [2 x %IPST.11], [2 x %IPST.11]* %tmpv.885, i64 0, i64 1, i32 1, !dbg !2423
  store i8* %call.248, i8** %tmp.154.sroa.2.0.cast.2745.sroa_idx20, align 8, !dbg !2423
  %field.871 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.155, i64 0, i32 0, !dbg !2423
  %cast.2748 = getelementptr inbounds [2 x %IPST.11], [2 x %IPST.11]* %tmpv.885, i64 0, i64 0, !dbg !2423
  store %IPST.11* %cast.2748, %IPST.11** %field.871, align 8, !dbg !2423
  %field.872 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.155, i64 0, i32 1, !dbg !2423
  store i64 2, i64* %field.872, align 8, !dbg !2423
  %field.873 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.155, i64 0, i32 2, !dbg !2423
  store i64 2, i64* %field.873, align 8, !dbg !2423
  invoke void @log.Printf(i8* nest undef, i64 ptrtoint ([24 x i8]* @const.306 to i64), i64 23, %IPST.6* byval nonnull %tmp.155)
          to label %finally.9 unwind label %pad.18.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit.split-lp, !dbg !2423

then.333:                                         ; preds = %else.332
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.333 unwind label %pad.18.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit.split-lp, !dbg !2424

fallthrough.333:                                  ; preds = %else.332, %then.333
  %tmpv.894.1 = phi %IPPacket.0* [ %tmpv.894.0, %then.333 ], [ %tmpv.874.ld.0, %else.332 ]
  %field.887 = getelementptr inbounds %IPPacket.0, %IPPacket.0* %tmpv.894.1, i64 0, i32 0, i32 1, !dbg !2424
  %.field.field.ld.2 = load i64, i64* %field.887, align 8, !dbg !2424
  %icmp.374 = icmp eq i64 %tmpv.875.sroa.0.0.copyload7, %.field.field.ld.2, !dbg !2425
  br i1 %icmp.374, label %label.0, label %then.334

then.334:                                         ; preds = %fallthrough.333
  %call.249 = invoke { i64, i64 } @github_com_twitchyliquid64_subnet_vendor_github_com_songgao_water.Interface.Name(i8* nest undef, %Interface.0* %dev)
          to label %cont.247 unwind label %pad.18.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit.split-lp, !dbg !2426

cont.247:                                         ; preds = %then.334
  %call.249.fca.0.extract = extractvalue { i64, i64 } %call.249, 0, !dbg !2426
  %call.249.fca.1.extract = extractvalue { i64, i64 } %call.249, 1, !dbg !2426
  br i1 %icmp.370, label %then.335, label %fallthrough.335

then.335:                                         ; preds = %cont.247
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.335 unwind label %pad.18.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit.split-lp, !dbg !2427

fallthrough.335:                                  ; preds = %cont.247, %then.335
  %tmpv.888.2 = phi %IPPacket.0* [ %tmpv.888.0.ph, %then.335 ], [ %tmpv.874.ld.0, %cont.247 ]
  %field.876 = getelementptr inbounds %IPPacket.0, %IPPacket.0* %tmpv.888.2, i64 0, i32 0, i32 1, !dbg !2427
  %.field.field.ld.1 = load i64, i64* %field.876, align 8, !dbg !2427
  %call.250 = invoke i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d)
          to label %cont.249 unwind label %pad.18.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit.split-lp, !dbg !2428

cont.249:                                         ; preds = %fallthrough.335
  store i64 %call.249.fca.0.extract, i64* %tmpv.886.sroa.0.0.cast.2755.sroa_cast, align 8
  store i64 %call.249.fca.1.extract, i64* %tmpv.886.sroa.2.0.cast.2755.sroa_idx2, align 8
  invoke void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.250, i8* nonnull %cast.2758)
          to label %cont.250 unwind label %pad.18.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit.split-lp, !dbg !2428

cont.250:                                         ; preds = %cont.249
  %call.251 = invoke i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @int..d)
          to label %cont.251 unwind label %pad.18.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit.split-lp, !dbg !2428

cont.251:                                         ; preds = %cont.250
  %cast.2759 = bitcast i8* %call.251 to i64*, !dbg !2428
  store i64 %tmpv.875.sroa.0.0.copyload7, i64* %cast.2759, align 8, !dbg !2428
  %call.252 = invoke i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @int..d)
          to label %cont.252 unwind label %pad.18.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit.split-lp, !dbg !2428

cont.252:                                         ; preds = %cont.251
  %cast.2760 = bitcast i8* %call.252 to i64*, !dbg !2428
  store i64 %.field.field.ld.1, i64* %cast.2760, align 8, !dbg !2428
  store %_type.0* @string..d, %_type.0** %tmp.156.sroa.0.0.cast.2764.sroa_idx, align 8, !dbg !2428
  store i8* %call.250, i8** %tmp.156.sroa.2.0.cast.2764.sroa_idx21, align 8, !dbg !2428
  store %_type.0* @int..d, %_type.0** %tmp.157.sroa.0.0.cast.2766.sroa_idx, align 8, !dbg !2428
  store i8* %call.251, i8** %tmp.157.sroa.2.0.cast.2766.sroa_idx22, align 8, !dbg !2428
  store %_type.0* @int..d, %_type.0** %tmp.158.sroa.0.0.cast.2768.sroa_idx, align 8, !dbg !2428
  store i8* %call.252, i8** %tmp.158.sroa.2.0.cast.2768.sroa_idx23, align 8, !dbg !2428
  store %IPST.11* %cast.2771, %IPST.11** %field.883, align 8, !dbg !2428
  store i64 3, i64* %field.884, align 8, !dbg !2428
  store i64 3, i64* %field.885, align 8, !dbg !2428
  invoke void @log.Printf(i8* nest undef, i64 ptrtoint ([48 x i8]* @const.308 to i64), i64 47, %IPST.6* byval nonnull %tmp.159)
          to label %label.0.outer unwind label %pad.18.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit.split-lp, !dbg !2428

then.336:                                         ; preds = %label.0
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.336 unwind label %pad.18.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit.split-lp, !dbg !2410

fallthrough.336:                                  ; preds = %label.0, %then.336
  %tmpv.895.1 = phi i8* [ %tmpv.895.0, %then.336 ], [ %isShuttingDown, %label.0 ]
  %.ld.273 = load i8, i8* %tmpv.895.1, align 1, !dbg !2410
  %icmp.376 = icmp eq i8 %.ld.273, 0, !dbg !2429
  br i1 %icmp.376, label %then.337, label %finally.9

then.337:                                         ; preds = %fallthrough.336
  store %IPPacket.0* null, %IPPacket.0** %tmpv.874, align 8
  invoke void @runtime.chanrecv1(i8* nest undef, {}* %packetsOut, i8* nonnull %cast.2715)
          to label %cont.236 unwind label %pad.18.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit.split-lp, !dbg !2411

catchpad.9:                                       ; preds = %pad.18.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.loopexit.split-lp
  %ex2.9 = landingpad { i8*, i32 }
          cleanup
  %ex2.9.fca.0.extract = extractvalue { i8*, i32 } %ex2.9, 0
  %ex2.9.fca.1.extract = extractvalue { i8*, i32 } %ex2.9, 1
  br label %finally.9

pad.19:                                           ; preds = %finish.9
  %ex.19 = landingpad { i8*, i32 }
          catch i8* null
  call void @runtime.checkdefer(i8* nest undef, i8* nonnull %tmpv.871), !dbg !2408
  br label %finish.9

finish.9:                                         ; preds = %pad.19, %finally.9
  invoke void @runtime.deferreturn(i8* nest undef, i8* nonnull %tmpv.871)
          to label %cont.256 unwind label %pad.19, !dbg !2408

cont.256:                                         ; preds = %finish.9
  %icmp.377 = icmp eq i8 %finvar.9.0, 1
  br i1 %icmp.377, label %finret.9, label %finres.9

finres.9:                                         ; preds = %cont.256
  %excv.9.fca.0.insert = insertvalue { i8*, i32 } undef, i8* %ehtmp.9.sroa.0.0, 0
  %excv.9.fca.1.insert = insertvalue { i8*, i32 } %excv.9.fca.0.insert, i32 %ehtmp.9.sroa.2.0, 1
  resume { i8*, i32 } %excv.9.fca.1.insert

finret.9:                                         ; preds = %cont.256
  ret void, !dbg !2430
}

; Function Attrs: noinline
define internal i8 @command_line_arguments.command_line_arguments..thunk19(i8* nest nocapture readnone %nest.59, { %WaitGroup.0* }* nocapture readonly %__go_thunk_parameter) #4 !dbg !2431 {
entry:
  call void @llvm.dbg.value(metadata { %WaitGroup.0* }* %__go_thunk_parameter, metadata !2432, metadata !DIExpression()), !dbg !2433
  call void @llvm.dbg.value(metadata i8 0, metadata !2434, metadata !DIExpression()), !dbg !2433
  %call.273 = call i8 @runtime.setdeferretaddr(i8* nest undef, i8* blockaddress(@command_line_arguments.command_line_arguments..thunk19, %label.0)), !dbg !2433
  %0 = and i8 %call.273, 1, !dbg !2433
  %trunc.356 = icmp eq i8 %0, 0, !dbg !2433
  br i1 %trunc.356, label %else.355, label %label.0

else.355:                                         ; preds = %entry
  %field.954 = getelementptr inbounds { %WaitGroup.0* }, { %WaitGroup.0* }* %__go_thunk_parameter, i64 0, i32 0, !dbg !2433
  %.field.ld.167 = load %WaitGroup.0*, %WaitGroup.0** %field.954, align 8, !dbg !2433
  call void @sync.WaitGroup.Done(i8* nest undef, %WaitGroup.0* %.field.ld.167), !dbg !2433
  br label %label.0

label.0:                                          ; preds = %entry, %else.355
  call void @llvm.dbg.value(metadata i8 0, metadata !2434, metadata !DIExpression()), !dbg !2433
  ret i8 0, !dbg !2433
}

declare void @runtime.chanrecv1(i8*, {}*, i8*) local_unnamed_addr #0

declare void @github_com_twitchyliquid64_subnet_vendor_github_com_songgao_water.Interface.Write..stub({ i64, %error.0 }*, i8*, %Interface.0*, { i8*, i64, i64 }*) local_unnamed_addr #0

declare void @net.LookupIP({ %IPST.4, %error.0 }*, i8*, i64, i64) local_unnamed_addr #0

declare i64 @time.Time.Unix(i8*, %Time.0*) local_unnamed_addr #0

declare void @math_rand.Seed(i8*, i64) local_unnamed_addr #0

declare i64 @math_rand.Int(i8*) local_unnamed_addr #0

declare %Cmd.0* @os_exec.Command(i8*, i64, i64, %IPST.5*) local_unnamed_addr #0

declare { i64, i64 } @os_exec.Cmd.Run(i8*, %Cmd.0*) local_unnamed_addr #0

declare i8 @runtime.setdeferretaddr(i8*, i8*) local_unnamed_addr #0

declare void @sync.WaitGroup.Done(i8*, %WaitGroup.0*) local_unnamed_addr #0

declare { i64, i64 } @os.File.Close(i8*, %File.0*) local_unnamed_addr #0

define i64 @command_line_arguments.struct.4Size.0uint32.2Mallocs.0uint64.2Frees.0uint64.5..hash(i8* nest nocapture readnone %nest.82, i8* %key, i64 %seed) #0 !dbg !2435 {
entry:
  call void @llvm.dbg.value(metadata i8* %key, metadata !2436, metadata !DIExpression()), !dbg !2437
  call void @llvm.dbg.value(metadata i64 %seed, metadata !2438, metadata !DIExpression()), !dbg !2437
  call void @llvm.dbg.value(metadata i64 0, metadata !2439, metadata !DIExpression()), !dbg !2437
  %pticast.32 = ptrtoint i8* %key to i64, !dbg !2437
  %call.295 = call i64 @runtime.memhash32(i8* nest undef, i8* %key, i64 %seed), !dbg !2437
  %add.16 = add i64 %pticast.32, 8, !dbg !2437
  %itpcast.2 = inttoptr i64 %add.16 to i8*, !dbg !2437
  %call.296 = call i64 @runtime.memhash64(i8* nest undef, i8* %itpcast.2, i64 %call.295), !dbg !2437
  %add.17 = add i64 %pticast.32, 16, !dbg !2437
  %itpcast.3 = inttoptr i64 %add.17 to i8*, !dbg !2437
  %call.297 = call i64 @runtime.memhash64(i8* nest undef, i8* %itpcast.3, i64 %call.296), !dbg !2437
  call void @llvm.dbg.value(metadata i64 %call.297, metadata !2439, metadata !DIExpression()), !dbg !2437
  ret i64 %call.297, !dbg !2437
}

declare i64 @runtime.memhash32(i8*, i8*, i64) local_unnamed_addr #0

declare i64 @runtime.memhash64(i8*, i8*, i64) local_unnamed_addr #0

define i8 @command_line_arguments.struct.4Size.0uint32.2Mallocs.0uint64.2Frees.0uint64.5..eq(i8* nest nocapture readnone %nest.83, i8* readonly %key1, i8* readonly %key2) #0 !dbg !2440 {
entry:
  call void @llvm.dbg.value(metadata i8* %key1, metadata !2441, metadata !DIExpression()), !dbg !2442
  call void @llvm.dbg.value(metadata i8* %key2, metadata !2443, metadata !DIExpression()), !dbg !2442
  call void @llvm.dbg.value(metadata i8 0, metadata !2444, metadata !DIExpression()), !dbg !2442
  %icmp.398 = icmp eq i8* %key1, null, !dbg !2442
  br i1 %icmp.398, label %then.363, label %else.363

then.363:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !2442
  unreachable

else.363:                                         ; preds = %entry
  %icmp.399 = icmp eq i8* %key2, null, !dbg !2442
  br i1 %icmp.399, label %then.364, label %else.364

then.364:                                         ; preds = %else.363
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !2442
  unreachable

else.364:                                         ; preds = %else.363
  %field.961 = bitcast i8* %key1 to i32*, !dbg !2442
  %.field.ld.168 = load i32, i32* %field.961, align 4, !dbg !2442
  %field.962 = bitcast i8* %key2 to i32*, !dbg !2442
  %.field.ld.169 = load i32, i32* %field.962, align 4, !dbg !2442
  %icmp.400 = icmp eq i32 %.field.ld.168, %.field.ld.169, !dbg !2442
  br i1 %icmp.400, label %else.367, label %then.365

then.365:                                         ; preds = %else.367, %else.364
  call void @llvm.dbg.value(metadata i8 0, metadata !2444, metadata !DIExpression()), !dbg !2442
  ret i8 0, !dbg !2442

else.367:                                         ; preds = %else.364
  %field.963 = getelementptr inbounds i8, i8* %key1, i64 8, !dbg !2442
  %0 = bitcast i8* %field.963 to i64*, !dbg !2442
  %.field.ld.170 = load i64, i64* %0, align 8, !dbg !2442
  %field.964 = getelementptr inbounds i8, i8* %key2, i64 8, !dbg !2442
  %1 = bitcast i8* %field.964 to i64*, !dbg !2442
  %.field.ld.171 = load i64, i64* %1, align 8, !dbg !2442
  %icmp.403 = icmp eq i64 %.field.ld.170, %.field.ld.171, !dbg !2442
  br i1 %icmp.403, label %else.370, label %then.365

else.370:                                         ; preds = %else.367
  %field.965 = getelementptr inbounds i8, i8* %key1, i64 16, !dbg !2442
  %2 = bitcast i8* %field.965 to i64*, !dbg !2442
  %.field.ld.172 = load i64, i64* %2, align 8, !dbg !2442
  %field.966 = getelementptr inbounds i8, i8* %key2, i64 16, !dbg !2442
  %3 = bitcast i8* %field.966 to i64*, !dbg !2442
  %.field.ld.173 = load i64, i64* %3, align 8, !dbg !2442
  %icmp.406 = icmp eq i64 %.field.ld.172, %.field.ld.173, !dbg !2442
  %spec.select = zext i1 %icmp.406 to i8
  ret i8 %spec.select
}

declare void @runtime.registerGCRoots(i8*, i8*) local_unnamed_addr #0

define void @command_line_arguments..import(i8* nest nocapture readnone %nest.84) local_unnamed_addr #0 !dbg !2445 {
entry:
  call void @runtime.registerGCRoots(i8* nest undef, i8* bitcast ({ i8*, i64, [66 x { i8*, i64, i64, i8* }] }* @go..C0 to i8*)), !dbg !2448
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.value(metadata, metadata, metadata) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1) #1

attributes #0 = { "disable-tail-calls"="true" "no-frame-pointer-elim"="false" "split-stack" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind readnone speculatable }
attributes #3 = { noreturn "disable-tail-calls"="true" "no-frame-pointer-elim"="false" "split-stack" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" }
attributes #4 = { noinline "disable-tail-calls"="true" "no-frame-pointer-elim"="false" "split-stack" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" }

!llvm.module.flags = !{!0}
!llvm.dbg.cu = !{!1}

!0 = !{i32 7, !"PIC Level", i32 0}
!1 = distinct !DICompileUnit(language: DW_LANG_Go, file: !2, producer: "llvm-goc", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3, globals: !4)
!2 = !DIFile(filename: "./client.go", directory: "/home/wangcong/go_path/src/github.com/twitchyliquid64/subnet/subnet")
!3 = !{}
!4 = !{!5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "runtime.writeBarrier", linkageName: "runtime.writeBarrier", scope: !1, file: !7, line: 1, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "<built-in>", directory: "")
!8 = !DIBasicType(name: "uint32", size: 32, encoding: DW_ATE_unsigned)
!9 = distinct !DISubprogram(name: "subnet.Close..1command_line_arguments.Client", linkageName: "command_line_arguments.Client.Close", scope: null, file: !10, line: 314, type: !11, isLocal: false, isDefinition: true, scopeLine: 314, isOptimized: false, unit: !1, retainedNodes: !3)
!10 = !DIFile(filename: "client.go", directory: ".")
!11 = !DISubroutineType(types: !12)
!12 = !{!13, !84, !84}
!13 = !DICompositeType(tag: DW_TAG_structure_type, name: "error", file: !7, line: 1, size: 128, align: 8, elements: !14)
!14 = !{!15, !83}
!15 = !DIDerivedType(tag: DW_TAG_member, name: "__methods", file: !7, line: 1, baseType: !16, size: 64, align: 64)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 64)
!17 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*_type,*func(*void)string}", file: !18, size: 128, align: 8, elements: !19)
!18 = !DIFile(filename: "", directory: "")
!19 = !{!20, !79}
!20 = !DIDerivedType(tag: DW_TAG_member, name: "__type_descriptor", file: !18, line: 1, baseType: !21, size: 64, align: 64)
!21 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !22, size: 64)
!22 = !DICompositeType(tag: DW_TAG_structure_type, name: "_type", file: !7, line: 1, size: 576, align: 8, elements: !23)
!23 = !{!24, !26, !27, !28, !30, !31, !32, !42, !51, !53, !60, !78}
!24 = !DIDerivedType(tag: DW_TAG_member, name: "size", file: !7, line: 1, baseType: !25, size: 64, align: 64)
!25 = !DIBasicType(name: "uintptr", size: 64, encoding: DW_ATE_unsigned)
!26 = !DIDerivedType(tag: DW_TAG_member, name: "ptrdata", file: !7, line: 1, baseType: !25, size: 64, align: 64, offset: 64)
!27 = !DIDerivedType(tag: DW_TAG_member, name: "hash", file: !7, line: 1, baseType: !8, size: 32, align: 32, offset: 128)
!28 = !DIDerivedType(tag: DW_TAG_member, name: "kind", file: !7, line: 1, baseType: !29, size: 8, align: 8, offset: 160)
!29 = !DIBasicType(name: "uint8", size: 8, encoding: DW_ATE_unsigned)
!30 = !DIDerivedType(tag: DW_TAG_member, name: "align", file: !7, line: 1, baseType: !29, size: 8, align: 8, offset: 168)
!31 = !DIDerivedType(tag: DW_TAG_member, name: "fieldAlign", file: !7, line: 1, baseType: !29, size: 8, align: 8, offset: 176)
!32 = !DIDerivedType(tag: DW_TAG_member, name: "hashfn", file: !7, line: 1, baseType: !33, size: 64, align: 64, offset: 192)
!33 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !34, size: 64)
!34 = !DICompositeType(tag: DW_TAG_structure_type, name: "__go_descriptor", file: !7, line: 1, size: 64, align: 8, elements: !35)
!35 = !{!36}
!36 = !DIDerivedType(tag: DW_TAG_member, name: "code", file: !7, line: 1, baseType: !37, size: 64, align: 64)
!37 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !38, size: 64)
!38 = !DISubroutineType(types: !39)
!39 = !{!25, !40, !25}
!40 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !41, size: 64)
!41 = !DIBasicType(name: "void")
!42 = !DIDerivedType(tag: DW_TAG_member, name: "equalfn", file: !7, line: 1, baseType: !43, size: 64, align: 64, offset: 256)
!43 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !44, size: 64)
!44 = !DICompositeType(tag: DW_TAG_structure_type, name: "__go_descriptor", file: !7, line: 1, size: 64, align: 8, elements: !45)
!45 = !{!46}
!46 = !DIDerivedType(tag: DW_TAG_member, name: "code", file: !7, line: 1, baseType: !47, size: 64, align: 64)
!47 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !48, size: 64)
!48 = !DISubroutineType(types: !49)
!49 = !{!50, !40, !40}
!50 = !DIBasicType(name: "bool", size: 8, encoding: DW_ATE_unsigned)
!51 = !DIDerivedType(tag: DW_TAG_member, name: "gcdata", file: !7, line: 1, baseType: !52, size: 64, align: 64, offset: 320)
!52 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !29, size: 64)
!53 = !DIDerivedType(tag: DW_TAG_member, name: "string", file: !7, line: 1, baseType: !54, size: 64, align: 64, offset: 384)
!54 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !55, size: 64)
!55 = !DICompositeType(tag: DW_TAG_structure_type, name: "string", file: !7, line: 1, size: 128, align: 8, elements: !56)
!56 = !{!57, !58}
!57 = !DIDerivedType(tag: DW_TAG_member, name: "__data", file: !7, line: 1, baseType: !52, size: 64, align: 64)
!58 = !DIDerivedType(tag: DW_TAG_member, name: "__length", file: !7, line: 1, baseType: !59, size: 64, align: 64, offset: 64)
!59 = !DIBasicType(name: "int", size: 64, encoding: DW_ATE_signed)
!60 = !DIDerivedType(tag: DW_TAG_member, name: "uncommonType", file: !7, line: 1, baseType: !61, size: 64, align: 64, offset: 448)
!61 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !62, size: 64)
!62 = !DICompositeType(tag: DW_TAG_structure_type, name: "uncommonType", file: !7, line: 1, size: 320, align: 8, elements: !63)
!63 = !{!64, !65, !66}
!64 = !DIDerivedType(tag: DW_TAG_member, name: "name", file: !7, line: 1, baseType: !54, size: 64, align: 64)
!65 = !DIDerivedType(tag: DW_TAG_member, name: "pkgPath", file: !7, line: 1, baseType: !54, size: 64, align: 64, offset: 64)
!66 = !DIDerivedType(tag: DW_TAG_member, name: "methods", file: !7, line: 1, baseType: !67, size: 192, align: 64, offset: 128)
!67 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*method,int,int}", file: !18, size: 192, align: 8, elements: !68)
!68 = !{!69, !76, !77}
!69 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !18, line: 1, baseType: !70, size: 64, align: 64)
!70 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !71, size: 64)
!71 = !DICompositeType(tag: DW_TAG_structure_type, name: "method", file: !7, line: 1, size: 320, align: 8, elements: !72)
!72 = !{!64, !65, !73, !74, !75}
!73 = !DIDerivedType(tag: DW_TAG_member, name: "mtyp", file: !7, line: 1, baseType: !40, size: 64, align: 64, offset: 128)
!74 = !DIDerivedType(tag: DW_TAG_member, name: "typ", file: !7, line: 1, baseType: !40, size: 64, align: 64, offset: 192)
!75 = !DIDerivedType(tag: DW_TAG_member, name: "tfn", file: !7, line: 1, baseType: !40, size: 64, align: 64, offset: 256)
!76 = !DIDerivedType(tag: DW_TAG_member, name: "__count", file: !18, line: 1, baseType: !59, size: 64, align: 64, offset: 64)
!77 = !DIDerivedType(tag: DW_TAG_member, name: "__capacity", file: !18, line: 1, baseType: !59, size: 64, align: 64, offset: 128)
!78 = !DIDerivedType(tag: DW_TAG_member, name: "ptrToThis", file: !7, line: 1, baseType: !40, size: 64, align: 64, offset: 512)
!79 = !DIDerivedType(tag: DW_TAG_member, name: "Error", file: !18, line: 1, baseType: !80, size: 64, align: 64, offset: 64)
!80 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !81, size: 64)
!81 = !DISubroutineType(types: !82)
!82 = !{!55, !40}
!83 = !DIDerivedType(tag: DW_TAG_member, name: "__object", file: !7, line: 1, baseType: !40, size: 64, align: 64, offset: 64)
!84 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !85, size: 64)
!85 = !DICompositeType(tag: DW_TAG_structure_type, name: "Client", file: !10, line: 19, size: 2304, align: 8, elements: !86)
!86 = !{!87, !88, !89, !90, !91, !101, !107, !108, !113, !120, !121, !124, !125, !156, !574, !690, !691, !692, !693}
!87 = !DIDerivedType(tag: DW_TAG_member, name: "debugMessages", file: !10, line: 20, baseType: !50, size: 8, align: 8)
!88 = !DIDerivedType(tag: DW_TAG_member, name: "newGateway", file: !10, line: 21, baseType: !55, size: 128, align: 64, offset: 64)
!89 = !DIDerivedType(tag: DW_TAG_member, name: "serverAddr", file: !10, line: 22, baseType: !55, size: 128, align: 64, offset: 192)
!90 = !DIDerivedType(tag: DW_TAG_member, name: "port", file: !10, line: 23, baseType: !55, size: 128, align: 64, offset: 320)
!91 = !DIDerivedType(tag: DW_TAG_member, name: "wg", file: !10, line: 25, baseType: !92, size: 128, align: 32, offset: 448)
!92 = !DICompositeType(tag: DW_TAG_structure_type, name: "WaitGroup", file: !10, line: 10, size: 128, align: 8, elements: !93)
!93 = !{!94, !96, !100}
!94 = !DIDerivedType(tag: DW_TAG_member, name: "noCopy", file: !10, line: 10, baseType: !95, align: 8)
!95 = !DICompositeType(tag: DW_TAG_structure_type, name: ".sync.noCopy", file: !10, line: 4, align: 8, elements: !3)
!96 = !DIDerivedType(tag: DW_TAG_member, name: "state1", file: !10, line: 10, baseType: !97, size: 96, align: 8)
!97 = !DICompositeType(tag: DW_TAG_array_type, baseType: !29, size: 96, align: 1, elements: !98)
!98 = !{!99}
!99 = !DISubrange(count: 12)
!100 = !DIDerivedType(tag: DW_TAG_member, name: "sema", file: !10, line: 10, baseType: !8, size: 32, align: 32, offset: 96)
!101 = !DIDerivedType(tag: DW_TAG_member, name: "serverIP", file: !10, line: 26, baseType: !102, size: 192, align: 64, offset: 576)
!102 = !DICompositeType(tag: DW_TAG_structure_type, name: "IP", file: !10, line: 4, size: 192, align: 8, elements: !103)
!103 = !{!104, !105, !106}
!104 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !10, line: 1, baseType: !52, size: 64, align: 64)
!105 = !DIDerivedType(tag: DW_TAG_member, name: "__count", file: !10, line: 1, baseType: !59, size: 64, align: 64, offset: 64)
!106 = !DIDerivedType(tag: DW_TAG_member, name: "__capacity", file: !10, line: 1, baseType: !59, size: 64, align: 64, offset: 128)
!107 = !DIDerivedType(tag: DW_TAG_member, name: "localAddr", file: !10, line: 27, baseType: !102, size: 192, align: 64, offset: 768)
!108 = !DIDerivedType(tag: DW_TAG_member, name: "additionalAddrs", file: !10, line: 28, baseType: !109, size: 192, align: 64, offset: 960)
!109 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*IP,int,int}", file: !18, size: 192, align: 8, elements: !110)
!110 = !{!111, !76, !77}
!111 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !18, line: 1, baseType: !112, size: 64, align: 64)
!112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !102, size: 64)
!113 = !DIDerivedType(tag: DW_TAG_member, name: "localNetMask", file: !10, line: 29, baseType: !114, size: 64, align: 64, offset: 1152)
!114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !115, size: 64)
!115 = !DICompositeType(tag: DW_TAG_structure_type, name: "IPNet", file: !10, line: 4, size: 384, align: 8, elements: !116)
!116 = !{!117, !118}
!117 = !DIDerivedType(tag: DW_TAG_member, name: "IP", file: !10, line: 4, baseType: !102, size: 192, align: 64)
!118 = !DIDerivedType(tag: DW_TAG_member, name: "Mask", file: !10, line: 4, baseType: !119, size: 192, align: 64, offset: 192)
!119 = !DICompositeType(tag: DW_TAG_structure_type, name: "IPMask", file: !10, line: 4, size: 192, align: 8, elements: !103)
!120 = !DIDerivedType(tag: DW_TAG_member, name: "isShuttingDown", file: !10, line: 30, baseType: !50, size: 8, align: 8, offset: 1216)
!121 = !DIDerivedType(tag: DW_TAG_member, name: "packetsIn", file: !10, line: 33, baseType: !122, size: 64, align: 64, offset: 1280)
!122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !123, size: 64)
!123 = !DICompositeType(tag: DW_TAG_structure_type, name: "__go_channel", file: !7, line: 1, align: 8, elements: !3)
!124 = !DIDerivedType(tag: DW_TAG_member, name: "packetsDevOut", file: !10, line: 34, baseType: !122, size: 64, align: 64, offset: 1344)
!125 = !DIDerivedType(tag: DW_TAG_member, name: "intf", file: !10, line: 36, baseType: !126, size: 64, align: 64, offset: 1408)
!126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !127, size: 64)
!127 = !DICompositeType(tag: DW_TAG_structure_type, name: "Interface", file: !10, line: 15, size: 320, align: 8, elements: !128)
!128 = !{!129, !130, !155}
!129 = !DIDerivedType(tag: DW_TAG_member, name: "isTAP", file: !10, line: 15, baseType: !50, size: 8, align: 8)
!130 = !DIDerivedType(tag: DW_TAG_member, name: "ReadWriteCloser", file: !10, line: 15, baseType: !131, size: 128, align: 64, offset: 64)
!131 = !DICompositeType(tag: DW_TAG_structure_type, name: "ReadWriteCloser", file: !10, line: 15, size: 128, align: 8, elements: !132)
!132 = !{!133, !154}
!133 = !DIDerivedType(tag: DW_TAG_member, name: "__methods", file: !10, line: 15, baseType: !134, size: 64, align: 64)
!134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !135, size: 64)
!135 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*_type,*func(*void)error,*func(*void,struct{*uint8,int,int})struct{int,error},*func(*void,struct{*uint8,int,int})struct{int,error}}", file: !18, size: 256, align: 8, elements: !136)
!136 = !{!137, !138, !142, !153}
!137 = !DIDerivedType(tag: DW_TAG_member, name: "__type_descriptor", file: !18, line: 15, baseType: !21, size: 64, align: 64)
!138 = !DIDerivedType(tag: DW_TAG_member, name: "Close", file: !18, line: 15, baseType: !139, size: 64, align: 64, offset: 64)
!139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !140, size: 64)
!140 = !DISubroutineType(types: !141)
!141 = !{!13, !40}
!142 = !DIDerivedType(tag: DW_TAG_member, name: "Read", file: !18, line: 15, baseType: !143, size: 64, align: 64, offset: 128)
!143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !144, size: 64)
!144 = !DISubroutineType(types: !145)
!145 = !{!146, !40, !150}
!146 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{int,error}", file: !18, size: 192, align: 8, elements: !147)
!147 = !{!148, !149}
!148 = !DIDerivedType(tag: DW_TAG_member, name: "n", file: !18, line: 4, baseType: !59, size: 64, align: 64)
!149 = !DIDerivedType(tag: DW_TAG_member, name: "err", file: !18, line: 4, baseType: !13, size: 128, align: 64, offset: 64)
!150 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*uint8,int,int}", file: !18, size: 192, align: 8, elements: !151)
!151 = !{!152, !76, !77}
!152 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !18, line: 1, baseType: !52, size: 64, align: 64)
!153 = !DIDerivedType(tag: DW_TAG_member, name: "Write", file: !18, line: 15, baseType: !143, size: 64, align: 64, offset: 192)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "__object", file: !10, line: 1, baseType: !40, size: 64, align: 64, offset: 64)
!155 = !DIDerivedType(tag: DW_TAG_member, name: "name", file: !10, line: 15, baseType: !55, size: 128, align: 64, offset: 192)
!156 = !DIDerivedType(tag: DW_TAG_member, name: "tlsConf", file: !10, line: 37, baseType: !157, size: 64, align: 64, offset: 1472)
!157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !158, size: 64)
!158 = !DICompositeType(tag: DW_TAG_structure_type, name: "Config", file: !10, line: 4, size: 2944, align: 8, elements: !159)
!159 = !{!160, !169, !211, !362, !376, !441, !454, !465, !481, !488, !489, !490, !492, !493, !494, !495, !496, !497, !501, !529, !530, !531, !532, !533, !535, !543, !553, !561}
!160 = !DIDerivedType(tag: DW_TAG_member, name: "Rand", file: !10, line: 4, baseType: !161, size: 128, align: 64)
!161 = !DICompositeType(tag: DW_TAG_structure_type, name: "Reader", file: !10, line: 4, size: 128, align: 8, elements: !162)
!162 = !{!163, !154}
!163 = !DIDerivedType(tag: DW_TAG_member, name: "__methods", file: !10, line: 4, baseType: !164, size: 64, align: 64)
!164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !165, size: 64)
!165 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*_type,*func(*void,struct{*uint8,int,int})struct{int,error}}", file: !18, size: 128, align: 8, elements: !166)
!166 = !{!167, !168}
!167 = !DIDerivedType(tag: DW_TAG_member, name: "__type_descriptor", file: !18, line: 4, baseType: !21, size: 64, align: 64)
!168 = !DIDerivedType(tag: DW_TAG_member, name: "Read", file: !18, line: 4, baseType: !143, size: 64, align: 64, offset: 64)
!169 = !DIDerivedType(tag: DW_TAG_member, name: "Time", file: !10, line: 4, baseType: !170, size: 64, align: 64, offset: 128)
!170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !171, size: 64)
!171 = !DICompositeType(tag: DW_TAG_structure_type, name: "__go_descriptor", file: !10, line: 4, size: 64, align: 8, elements: !172)
!172 = !{!173}
!173 = !DIDerivedType(tag: DW_TAG_member, name: "code", file: !10, line: 4, baseType: !174, size: 64, align: 64)
!174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !175, size: 64)
!175 = !DISubroutineType(types: !176)
!176 = !{!177}
!177 = !DICompositeType(tag: DW_TAG_structure_type, name: "Time", file: !10, line: 4, size: 192, align: 8, elements: !178)
!178 = !{!179, !181, !183}
!179 = !DIDerivedType(tag: DW_TAG_member, name: "wall", file: !10, line: 4, baseType: !180, size: 64, align: 64)
!180 = !DIBasicType(name: "uint64", size: 64, encoding: DW_ATE_unsigned)
!181 = !DIDerivedType(tag: DW_TAG_member, name: "ext", file: !10, line: 4, baseType: !182, size: 64, align: 64, offset: 64)
!182 = !DIBasicType(name: "int64", size: 64, encoding: DW_ATE_signed)
!183 = !DIDerivedType(tag: DW_TAG_member, name: "loc", file: !10, line: 4, baseType: !184, size: 64, align: 64, offset: 128)
!184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !185, size: 64)
!185 = !DICompositeType(tag: DW_TAG_structure_type, name: "Location", file: !10, line: 4, size: 704, align: 8, elements: !186)
!186 = !{!187, !188, !197, !208, !209, !210}
!187 = !DIDerivedType(tag: DW_TAG_member, name: "name", file: !10, line: 4, baseType: !55, size: 128, align: 64)
!188 = !DIDerivedType(tag: DW_TAG_member, name: "zone", file: !10, line: 4, baseType: !189, size: 192, align: 64, offset: 128)
!189 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*.time.zone,int,int}", file: !18, size: 192, align: 8, elements: !190)
!190 = !{!191, !76, !77}
!191 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !18, line: 1, baseType: !192, size: 64, align: 64)
!192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !193, size: 64)
!193 = !DICompositeType(tag: DW_TAG_structure_type, name: ".time.zone", file: !10, line: 4, size: 256, align: 8, elements: !194)
!194 = !{!187, !195, !196}
!195 = !DIDerivedType(tag: DW_TAG_member, name: "offset", file: !10, line: 4, baseType: !59, size: 64, align: 64, offset: 128)
!196 = !DIDerivedType(tag: DW_TAG_member, name: "isDST", file: !10, line: 4, baseType: !50, size: 8, align: 8, offset: 192)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "tx", file: !10, line: 4, baseType: !198, size: 192, align: 64, offset: 320)
!198 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*.time.zoneTrans,int,int}", file: !18, size: 192, align: 8, elements: !199)
!199 = !{!200, !76, !77}
!200 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !18, line: 1, baseType: !201, size: 64, align: 64)
!201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !202, size: 64)
!202 = !DICompositeType(tag: DW_TAG_structure_type, name: ".time.zoneTrans", file: !10, line: 4, size: 128, align: 8, elements: !203)
!203 = !{!204, !205, !206, !207}
!204 = !DIDerivedType(tag: DW_TAG_member, name: "when", file: !10, line: 4, baseType: !182, size: 64, align: 64)
!205 = !DIDerivedType(tag: DW_TAG_member, name: "index", file: !10, line: 4, baseType: !29, size: 8, align: 8, offset: 64)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "isstd", file: !10, line: 4, baseType: !50, size: 8, align: 8, offset: 72)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "isutc", file: !10, line: 4, baseType: !50, size: 8, align: 8, offset: 80)
!208 = !DIDerivedType(tag: DW_TAG_member, name: "cacheStart", file: !10, line: 4, baseType: !182, size: 64, align: 64, offset: 512)
!209 = !DIDerivedType(tag: DW_TAG_member, name: "cacheEnd", file: !10, line: 4, baseType: !182, size: 64, align: 64, offset: 576)
!210 = !DIDerivedType(tag: DW_TAG_member, name: "cacheZone", file: !10, line: 4, baseType: !192, size: 64, align: 64, offset: 640)
!211 = !DIDerivedType(tag: DW_TAG_member, name: "Certificates", file: !10, line: 4, baseType: !212, size: 192, align: 64, offset: 192)
!212 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*Certificate,int,int}", file: !18, size: 192, align: 8, elements: !213)
!213 = !{!214, !76, !77}
!214 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !18, line: 1, baseType: !215, size: 64, align: 64)
!215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !216, size: 64)
!216 = !DICompositeType(tag: DW_TAG_structure_type, name: "Certificate", file: !10, line: 4, size: 768, align: 8, elements: !217)
!217 = !{!218, !223, !227, !228, !229}
!218 = !DIDerivedType(tag: DW_TAG_member, name: "Certificate", file: !10, line: 4, baseType: !219, size: 192, align: 64)
!219 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*struct{*uint8,int,int},int,int}", file: !18, size: 192, align: 8, elements: !220)
!220 = !{!221, !76, !77}
!221 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !18, line: 1, baseType: !222, size: 64, align: 64)
!222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !150, size: 64)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "PrivateKey", file: !10, line: 4, baseType: !224, size: 128, align: 64, offset: 192)
!224 = !DICompositeType(tag: DW_TAG_structure_type, name: "PrivateKey", file: !10, line: 4, size: 128, align: 8, elements: !225)
!225 = !{!226, !154}
!226 = !DIDerivedType(tag: DW_TAG_member, name: "__type_descriptor", file: !10, line: 1, baseType: !21, size: 64, align: 64)
!227 = !DIDerivedType(tag: DW_TAG_member, name: "OCSPStaple", file: !10, line: 4, baseType: !150, size: 192, align: 64, offset: 320)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "SignedCertificateTimestamps", file: !10, line: 4, baseType: !219, size: 192, align: 64, offset: 512)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "Leaf", file: !10, line: 4, baseType: !230, size: 64, align: 64, offset: 704)
!230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !231, size: 64)
!231 = !DICompositeType(tag: DW_TAG_structure_type, name: "Certificate", file: !10, line: 4, size: 10624, align: 8, elements: !232)
!232 = !{!233, !234, !235, !236, !237, !238, !239, !241, !243, !244, !245, !256, !285, !286, !287, !288, !290, !300, !301, !306, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !347, !348, !349, !350, !355, !356, !357, !358, !359, !360, !361}
!233 = !DIDerivedType(tag: DW_TAG_member, name: "Raw", file: !10, line: 4, baseType: !150, size: 192, align: 64)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "RawTBSCertificate", file: !10, line: 4, baseType: !150, size: 192, align: 64, offset: 192)
!235 = !DIDerivedType(tag: DW_TAG_member, name: "RawSubjectPublicKeyInfo", file: !10, line: 4, baseType: !150, size: 192, align: 64, offset: 384)
!236 = !DIDerivedType(tag: DW_TAG_member, name: "RawSubject", file: !10, line: 4, baseType: !150, size: 192, align: 64, offset: 576)
!237 = !DIDerivedType(tag: DW_TAG_member, name: "RawIssuer", file: !10, line: 4, baseType: !150, size: 192, align: 64, offset: 768)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "Signature", file: !10, line: 4, baseType: !150, size: 192, align: 64, offset: 960)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "SignatureAlgorithm", file: !10, line: 4, baseType: !240, size: 64, align: 64, offset: 1152)
!240 = !DIBasicType(name: "SignatureAlgorithm", size: 64, encoding: DW_ATE_signed)
!241 = !DIDerivedType(tag: DW_TAG_member, name: "PublicKeyAlgorithm", file: !10, line: 4, baseType: !242, size: 64, align: 64, offset: 1216)
!242 = !DIBasicType(name: "PublicKeyAlgorithm", size: 64, encoding: DW_ATE_signed)
!243 = !DIDerivedType(tag: DW_TAG_member, name: "PublicKey", file: !10, line: 4, baseType: !224, size: 128, align: 64, offset: 1280)
!244 = !DIDerivedType(tag: DW_TAG_member, name: "Version", file: !10, line: 4, baseType: !59, size: 64, align: 64, offset: 1408)
!245 = !DIDerivedType(tag: DW_TAG_member, name: "SerialNumber", file: !10, line: 4, baseType: !246, size: 64, align: 64, offset: 1472)
!246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !247, size: 64)
!247 = !DICompositeType(tag: DW_TAG_structure_type, name: "Int", file: !10, line: 4, size: 256, align: 8, elements: !248)
!248 = !{!249, !250}
!249 = !DIDerivedType(tag: DW_TAG_member, name: "neg", file: !10, line: 4, baseType: !50, size: 8, align: 8)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "abs", file: !10, line: 4, baseType: !251, size: 192, align: 64, offset: 64)
!251 = !DICompositeType(tag: DW_TAG_structure_type, name: ".math/big.nat", file: !10, line: 4, size: 192, align: 8, elements: !252)
!252 = !{!253, !105, !106}
!253 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !10, line: 1, baseType: !254, size: 64, align: 64)
!254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !255, size: 64)
!255 = !DIBasicType(name: "Word", size: 64, encoding: DW_ATE_unsigned)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "Issuer", file: !10, line: 4, baseType: !257, size: 1984, align: 64, offset: 1536)
!257 = !DICompositeType(tag: DW_TAG_structure_type, name: "Name", file: !10, line: 4, size: 1984, align: 8, elements: !258)
!258 = !{!259, !263, !264, !265, !266, !267, !268, !269, !270, !271, !284}
!259 = !DIDerivedType(tag: DW_TAG_member, name: "Country", file: !10, line: 4, baseType: !260, size: 192, align: 64)
!260 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*string,int,int}", file: !18, size: 192, align: 8, elements: !261)
!261 = !{!262, !76, !77}
!262 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !18, line: 1, baseType: !54, size: 64, align: 64)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "Organization", file: !10, line: 4, baseType: !260, size: 192, align: 64, offset: 192)
!264 = !DIDerivedType(tag: DW_TAG_member, name: "OrganizationalUnit", file: !10, line: 4, baseType: !260, size: 192, align: 64, offset: 384)
!265 = !DIDerivedType(tag: DW_TAG_member, name: "Locality", file: !10, line: 4, baseType: !260, size: 192, align: 64, offset: 576)
!266 = !DIDerivedType(tag: DW_TAG_member, name: "Province", file: !10, line: 4, baseType: !260, size: 192, align: 64, offset: 768)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "StreetAddress", file: !10, line: 4, baseType: !260, size: 192, align: 64, offset: 960)
!268 = !DIDerivedType(tag: DW_TAG_member, name: "PostalCode", file: !10, line: 4, baseType: !260, size: 192, align: 64, offset: 1152)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "SerialNumber", file: !10, line: 4, baseType: !55, size: 128, align: 64, offset: 1344)
!270 = !DIDerivedType(tag: DW_TAG_member, name: "CommonName", file: !10, line: 4, baseType: !55, size: 128, align: 64, offset: 1472)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "Names", file: !10, line: 4, baseType: !272, size: 192, align: 64, offset: 1600)
!272 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*AttributeTypeAndValue,int,int}", file: !18, size: 192, align: 8, elements: !273)
!273 = !{!274, !76, !77}
!274 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !18, line: 1, baseType: !275, size: 64, align: 64)
!275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !276, size: 64)
!276 = !DICompositeType(tag: DW_TAG_structure_type, name: "AttributeTypeAndValue", file: !10, line: 4, size: 320, align: 8, elements: !277)
!277 = !{!278, !283}
!278 = !DIDerivedType(tag: DW_TAG_member, name: "Type", file: !10, line: 4, baseType: !279, size: 192, align: 64)
!279 = !DICompositeType(tag: DW_TAG_structure_type, name: "ObjectIdentifier", file: !10, line: 4, size: 192, align: 8, elements: !280)
!280 = !{!281, !105, !106}
!281 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !10, line: 1, baseType: !282, size: 64, align: 64)
!282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !59, size: 64)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "Value", file: !10, line: 4, baseType: !224, size: 128, align: 64, offset: 192)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "ExtraNames", file: !10, line: 4, baseType: !272, size: 192, align: 64, offset: 1792)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "Subject", file: !10, line: 4, baseType: !257, size: 1984, align: 64, offset: 3520)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "NotBefore", file: !10, line: 4, baseType: !177, size: 192, align: 64, offset: 5504)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "NotAfter", file: !10, line: 4, baseType: !177, size: 192, align: 64, offset: 5696)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "KeyUsage", file: !10, line: 4, baseType: !289, size: 64, align: 64, offset: 5888)
!289 = !DIBasicType(name: "KeyUsage", size: 64, encoding: DW_ATE_signed)
!290 = !DIDerivedType(tag: DW_TAG_member, name: "Extensions", file: !10, line: 4, baseType: !291, size: 192, align: 64, offset: 5952)
!291 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*Extension,int,int}", file: !18, size: 192, align: 8, elements: !292)
!292 = !{!293, !76, !77}
!293 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !18, line: 1, baseType: !294, size: 64, align: 64)
!294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !295, size: 64)
!295 = !DICompositeType(tag: DW_TAG_structure_type, name: "Extension", file: !10, line: 4, size: 448, align: 8, elements: !296)
!296 = !{!297, !298, !299}
!297 = !DIDerivedType(tag: DW_TAG_member, name: "Id", file: !10, line: 4, baseType: !279, size: 192, align: 64)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "Critical", file: !10, line: 4, baseType: !50, size: 8, align: 8, offset: 192)
!299 = !DIDerivedType(tag: DW_TAG_member, name: "Value", file: !10, line: 4, baseType: !150, size: 192, align: 64, offset: 256)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "ExtraExtensions", file: !10, line: 4, baseType: !291, size: 192, align: 64, offset: 6144)
!301 = !DIDerivedType(tag: DW_TAG_member, name: "UnhandledCriticalExtensions", file: !10, line: 4, baseType: !302, size: 192, align: 64, offset: 6336)
!302 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*ObjectIdentifier,int,int}", file: !18, size: 192, align: 8, elements: !303)
!303 = !{!304, !76, !77}
!304 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !18, line: 1, baseType: !305, size: 64, align: 64)
!305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !279, size: 64)
!306 = !DIDerivedType(tag: DW_TAG_member, name: "ExtKeyUsage", file: !10, line: 4, baseType: !307, size: 192, align: 64, offset: 6528)
!307 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*ExtKeyUsage,int,int}", file: !18, size: 192, align: 8, elements: !308)
!308 = !{!309, !76, !77}
!309 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !18, line: 1, baseType: !310, size: 64, align: 64)
!310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !311, size: 64)
!311 = !DIBasicType(name: "ExtKeyUsage", size: 64, encoding: DW_ATE_signed)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "UnknownExtKeyUsage", file: !10, line: 4, baseType: !302, size: 192, align: 64, offset: 6720)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "BasicConstraintsValid", file: !10, line: 4, baseType: !50, size: 8, align: 8, offset: 6912)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "IsCA", file: !10, line: 4, baseType: !50, size: 8, align: 8, offset: 6920)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "MaxPathLen", file: !10, line: 4, baseType: !59, size: 64, align: 64, offset: 6976)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "MaxPathLenZero", file: !10, line: 4, baseType: !50, size: 8, align: 8, offset: 7040)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "SubjectKeyId", file: !10, line: 4, baseType: !150, size: 192, align: 64, offset: 7104)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "AuthorityKeyId", file: !10, line: 4, baseType: !150, size: 192, align: 64, offset: 7296)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "OCSPServer", file: !10, line: 4, baseType: !260, size: 192, align: 64, offset: 7488)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "IssuingCertificateURL", file: !10, line: 4, baseType: !260, size: 192, align: 64, offset: 7680)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "DNSNames", file: !10, line: 4, baseType: !260, size: 192, align: 64, offset: 7872)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "EmailAddresses", file: !10, line: 4, baseType: !260, size: 192, align: 64, offset: 8064)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "IPAddresses", file: !10, line: 4, baseType: !109, size: 192, align: 64, offset: 8256)
!324 = !DIDerivedType(tag: DW_TAG_member, name: "URIs", file: !10, line: 4, baseType: !325, size: 192, align: 64, offset: 8448)
!325 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{**URL,int,int}", file: !18, size: 192, align: 8, elements: !326)
!326 = !{!327, !76, !77}
!327 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !18, line: 1, baseType: !328, size: 64, align: 64)
!328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !329, size: 64)
!329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !330, size: 64)
!330 = !DICompositeType(tag: DW_TAG_structure_type, name: "URL", file: !10, line: 4, size: 1024, align: 8, elements: !331)
!331 = !{!332, !333, !334, !341, !342, !343, !344, !345, !346}
!332 = !DIDerivedType(tag: DW_TAG_member, name: "Scheme", file: !10, line: 4, baseType: !55, size: 128, align: 64)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "Opaque", file: !10, line: 4, baseType: !55, size: 128, align: 64, offset: 128)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "User", file: !10, line: 4, baseType: !335, size: 64, align: 64, offset: 256)
!335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !336, size: 64)
!336 = !DICompositeType(tag: DW_TAG_structure_type, name: "Userinfo", file: !10, line: 4, size: 320, align: 8, elements: !337)
!337 = !{!338, !339, !340}
!338 = !DIDerivedType(tag: DW_TAG_member, name: "username", file: !10, line: 4, baseType: !55, size: 128, align: 64)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "password", file: !10, line: 4, baseType: !55, size: 128, align: 64, offset: 128)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "passwordSet", file: !10, line: 4, baseType: !50, size: 8, align: 8, offset: 256)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "Host", file: !10, line: 4, baseType: !55, size: 128, align: 64, offset: 320)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "Path", file: !10, line: 4, baseType: !55, size: 128, align: 64, offset: 448)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "RawPath", file: !10, line: 4, baseType: !55, size: 128, align: 64, offset: 576)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "ForceQuery", file: !10, line: 4, baseType: !50, size: 8, align: 8, offset: 704)
!345 = !DIDerivedType(tag: DW_TAG_member, name: "RawQuery", file: !10, line: 4, baseType: !55, size: 128, align: 64, offset: 768)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "Fragment", file: !10, line: 4, baseType: !55, size: 128, align: 64, offset: 896)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "PermittedDNSDomainsCritical", file: !10, line: 4, baseType: !50, size: 8, align: 8, offset: 8640)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "PermittedDNSDomains", file: !10, line: 4, baseType: !260, size: 192, align: 64, offset: 8704)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "ExcludedDNSDomains", file: !10, line: 4, baseType: !260, size: 192, align: 64, offset: 8896)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "PermittedIPRanges", file: !10, line: 4, baseType: !351, size: 192, align: 64, offset: 9088)
!351 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{**IPNet,int,int}", file: !18, size: 192, align: 8, elements: !352)
!352 = !{!353, !76, !77}
!353 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !18, line: 1, baseType: !354, size: 64, align: 64)
!354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !114, size: 64)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "ExcludedIPRanges", file: !10, line: 4, baseType: !351, size: 192, align: 64, offset: 9280)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "PermittedEmailAddresses", file: !10, line: 4, baseType: !260, size: 192, align: 64, offset: 9472)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "ExcludedEmailAddresses", file: !10, line: 4, baseType: !260, size: 192, align: 64, offset: 9664)
!358 = !DIDerivedType(tag: DW_TAG_member, name: "PermittedURIDomains", file: !10, line: 4, baseType: !260, size: 192, align: 64, offset: 9856)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "ExcludedURIDomains", file: !10, line: 4, baseType: !260, size: 192, align: 64, offset: 10048)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "CRLDistributionPoints", file: !10, line: 4, baseType: !260, size: 192, align: 64, offset: 10240)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "PolicyIdentifiers", file: !10, line: 4, baseType: !302, size: 192, align: 64, offset: 10432)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "NameToCertificate", file: !10, line: 4, baseType: !363, size: 64, align: 64, offset: 384)
!363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !364, size: 64)
!364 = !DICompositeType(tag: DW_TAG_structure_type, name: "runtime.hmap", file: !7, line: 1, size: 384, align: 8, elements: !365)
!365 = !{!366, !367, !368, !369, !371, !372, !373, !374, !375}
!366 = !DIDerivedType(tag: DW_TAG_member, name: "count", file: !7, line: 1, baseType: !59, size: 64, align: 64)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "flags", file: !7, line: 1, baseType: !29, size: 8, align: 8, offset: 64)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "B", file: !7, line: 1, baseType: !29, size: 8, align: 8, offset: 72)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "noverflow", file: !7, line: 1, baseType: !370, size: 16, align: 16, offset: 80)
!370 = !DIBasicType(name: "uint16", size: 16, encoding: DW_ATE_unsigned)
!371 = !DIDerivedType(tag: DW_TAG_member, name: "hash0", file: !7, line: 1, baseType: !8, size: 32, align: 32, offset: 96)
!372 = !DIDerivedType(tag: DW_TAG_member, name: "buckets", file: !7, line: 1, baseType: !40, size: 64, align: 64, offset: 128)
!373 = !DIDerivedType(tag: DW_TAG_member, name: "oldbuckets", file: !7, line: 1, baseType: !40, size: 64, align: 64, offset: 192)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "nevacuate", file: !7, line: 1, baseType: !25, size: 64, align: 64, offset: 256)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "extra", file: !7, line: 1, baseType: !40, size: 64, align: 64, offset: 320)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "GetCertificate", file: !10, line: 4, baseType: !377, size: 64, align: 64, offset: 448)
!377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !378, size: 64)
!378 = !DICompositeType(tag: DW_TAG_structure_type, name: "__go_descriptor", file: !10, line: 4, size: 64, align: 8, elements: !379)
!379 = !{!380}
!380 = !DIDerivedType(tag: DW_TAG_member, name: "code", file: !10, line: 4, baseType: !381, size: 64, align: 64)
!381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !382, size: 64)
!382 = !DISubroutineType(types: !383)
!383 = !{!384, !388}
!384 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*Certificate,error}", file: !18, size: 192, align: 8, elements: !385)
!385 = !{!386, !387}
!386 = !DIDerivedType(tag: DW_TAG_member, name: "UNNAMED", file: !18, line: 4, baseType: !215, size: 64, align: 64)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "UNNAMED", file: !18, line: 4, baseType: !13, size: 128, align: 64, offset: 64)
!388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !389, size: 64)
!389 = !DICompositeType(tag: DW_TAG_structure_type, name: "ClientHelloInfo", file: !10, line: 4, size: 1408, align: 8, elements: !390)
!390 = !{!391, !396, !397, !403, !404, !410, !411, !412}
!391 = !DIDerivedType(tag: DW_TAG_member, name: "CipherSuites", file: !10, line: 4, baseType: !392, size: 192, align: 64)
!392 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*uint16,int,int}", file: !18, size: 192, align: 8, elements: !393)
!393 = !{!394, !76, !77}
!394 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !18, line: 1, baseType: !395, size: 64, align: 64)
!395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !370, size: 64)
!396 = !DIDerivedType(tag: DW_TAG_member, name: "ServerName", file: !10, line: 4, baseType: !55, size: 128, align: 64, offset: 192)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "SupportedCurves", file: !10, line: 4, baseType: !398, size: 192, align: 64, offset: 320)
!398 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*CurveID,int,int}", file: !18, size: 192, align: 8, elements: !399)
!399 = !{!400, !76, !77}
!400 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !18, line: 1, baseType: !401, size: 64, align: 64)
!401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !402, size: 64)
!402 = !DIBasicType(name: "CurveID", size: 16, encoding: DW_ATE_unsigned)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "SupportedPoints", file: !10, line: 4, baseType: !150, size: 192, align: 64, offset: 512)
!404 = !DIDerivedType(tag: DW_TAG_member, name: "SignatureSchemes", file: !10, line: 4, baseType: !405, size: 192, align: 64, offset: 704)
!405 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*SignatureScheme,int,int}", file: !18, size: 192, align: 8, elements: !406)
!406 = !{!407, !76, !77}
!407 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !18, line: 1, baseType: !408, size: 64, align: 64)
!408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !409, size: 64)
!409 = !DIBasicType(name: "SignatureScheme", size: 16, encoding: DW_ATE_unsigned)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "SupportedProtos", file: !10, line: 4, baseType: !260, size: 192, align: 64, offset: 896)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "SupportedVersions", file: !10, line: 4, baseType: !392, size: 192, align: 64, offset: 1088)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "Conn", file: !10, line: 4, baseType: !413, size: 128, align: 64, offset: 1280)
!413 = !DICompositeType(tag: DW_TAG_structure_type, name: "Conn", file: !10, line: 4, size: 128, align: 8, elements: !414)
!414 = !{!415, !154}
!415 = !DIDerivedType(tag: DW_TAG_member, name: "__methods", file: !10, line: 4, baseType: !416, size: 64, align: 64)
!416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !417, size: 64)
!417 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*_type,*func(*void)error,*func(*void)Addr,*func(*void,struct{*uint8,int,int})struct{int,error},*func(*void)Addr,*func(*void,Time)error,*func(*void,Time)error,*func(*void,Time)error,*func(*void,struct{*uint8,int,int})struct{int,error}}", file: !18, size: 576, align: 8, elements: !418)
!418 = !{!167, !419, !420, !432, !433, !434, !438, !439, !440}
!419 = !DIDerivedType(tag: DW_TAG_member, name: "Close", file: !18, line: 4, baseType: !139, size: 64, align: 64, offset: 64)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "LocalAddr", file: !18, line: 4, baseType: !421, size: 64, align: 64, offset: 128)
!421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !422, size: 64)
!422 = !DISubroutineType(types: !423)
!423 = !{!424, !40}
!424 = !DICompositeType(tag: DW_TAG_structure_type, name: "Addr", file: !10, line: 4, size: 128, align: 8, elements: !425)
!425 = !{!426, !154}
!426 = !DIDerivedType(tag: DW_TAG_member, name: "__methods", file: !10, line: 4, baseType: !427, size: 64, align: 64)
!427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !428, size: 64)
!428 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*_type,*func(*void)string,*func(*void)string}", file: !18, size: 192, align: 8, elements: !429)
!429 = !{!167, !430, !431}
!430 = !DIDerivedType(tag: DW_TAG_member, name: "Network", file: !18, line: 4, baseType: !80, size: 64, align: 64, offset: 64)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "String", file: !18, line: 4, baseType: !80, size: 64, align: 64, offset: 128)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "Read", file: !18, line: 4, baseType: !143, size: 64, align: 64, offset: 192)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "RemoteAddr", file: !18, line: 4, baseType: !421, size: 64, align: 64, offset: 256)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "SetDeadline", file: !18, line: 4, baseType: !435, size: 64, align: 64, offset: 320)
!435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !436, size: 64)
!436 = !DISubroutineType(types: !437)
!437 = !{!13, !40, !177}
!438 = !DIDerivedType(tag: DW_TAG_member, name: "SetReadDeadline", file: !18, line: 4, baseType: !435, size: 64, align: 64, offset: 384)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "SetWriteDeadline", file: !18, line: 4, baseType: !435, size: 64, align: 64, offset: 448)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "Write", file: !18, line: 4, baseType: !143, size: 64, align: 64, offset: 512)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "GetClientCertificate", file: !10, line: 4, baseType: !442, size: 64, align: 64, offset: 512)
!442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !443, size: 64)
!443 = !DICompositeType(tag: DW_TAG_structure_type, name: "__go_descriptor", file: !10, line: 4, size: 64, align: 8, elements: !444)
!444 = !{!445}
!445 = !DIDerivedType(tag: DW_TAG_member, name: "code", file: !10, line: 4, baseType: !446, size: 64, align: 64)
!446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !447, size: 64)
!447 = !DISubroutineType(types: !448)
!448 = !{!384, !449}
!449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !450, size: 64)
!450 = !DICompositeType(tag: DW_TAG_structure_type, name: "CertificateRequestInfo", file: !10, line: 4, size: 384, align: 8, elements: !451)
!451 = !{!452, !453}
!452 = !DIDerivedType(tag: DW_TAG_member, name: "AcceptableCAs", file: !10, line: 4, baseType: !219, size: 192, align: 64)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "SignatureSchemes", file: !10, line: 4, baseType: !405, size: 192, align: 64, offset: 192)
!454 = !DIDerivedType(tag: DW_TAG_member, name: "GetConfigForClient", file: !10, line: 4, baseType: !455, size: 64, align: 64, offset: 576)
!455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !456, size: 64)
!456 = !DICompositeType(tag: DW_TAG_structure_type, name: "__go_descriptor", file: !10, line: 4, size: 64, align: 8, elements: !457)
!457 = !{!458}
!458 = !DIDerivedType(tag: DW_TAG_member, name: "code", file: !10, line: 4, baseType: !459, size: 64, align: 64)
!459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !460, size: 64)
!460 = !DISubroutineType(types: !461)
!461 = !{!462, !388}
!462 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*Config,error}", file: !18, size: 192, align: 8, elements: !463)
!463 = !{!464, !387}
!464 = !DIDerivedType(tag: DW_TAG_member, name: "UNNAMED", file: !18, line: 4, baseType: !40, size: 64, align: 64)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "VerifyPeerCertificate", file: !10, line: 4, baseType: !466, size: 64, align: 64, offset: 640)
!466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !467, size: 64)
!467 = !DICompositeType(tag: DW_TAG_structure_type, name: "__go_descriptor", file: !10, line: 4, size: 64, align: 8, elements: !468)
!468 = !{!469}
!469 = !DIDerivedType(tag: DW_TAG_member, name: "code", file: !10, line: 4, baseType: !470, size: 64, align: 64)
!470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !471, size: 64)
!471 = !DISubroutineType(types: !472)
!472 = !{!13, !219, !473}
!473 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*struct{**Certificate,int,int},int,int}", file: !18, size: 192, align: 8, elements: !474)
!474 = !{!475, !76, !77}
!475 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !18, line: 1, baseType: !476, size: 64, align: 64)
!476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !477, size: 64)
!477 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{**Certificate,int,int}", file: !18, size: 192, align: 8, elements: !478)
!478 = !{!479, !76, !77}
!479 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !18, line: 1, baseType: !480, size: 64, align: 64)
!480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !230, size: 64)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "RootCAs", file: !10, line: 4, baseType: !482, size: 64, align: 64, offset: 704)
!482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !483, size: 64)
!483 = !DICompositeType(tag: DW_TAG_structure_type, name: "CertPool", file: !10, line: 4, size: 320, align: 8, elements: !484)
!484 = !{!485, !486, !487}
!485 = !DIDerivedType(tag: DW_TAG_member, name: "bySubjectKeyId", file: !10, line: 4, baseType: !363, size: 64, align: 64)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "byName", file: !10, line: 4, baseType: !363, size: 64, align: 64, offset: 64)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "certs", file: !10, line: 4, baseType: !477, size: 192, align: 64, offset: 128)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "NextProtos", file: !10, line: 4, baseType: !260, size: 192, align: 64, offset: 768)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "ServerName", file: !10, line: 4, baseType: !55, size: 128, align: 64, offset: 960)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "ClientAuth", file: !10, line: 4, baseType: !491, size: 64, align: 64, offset: 1088)
!491 = !DIBasicType(name: "ClientAuthType", size: 64, encoding: DW_ATE_signed)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "ClientCAs", file: !10, line: 4, baseType: !482, size: 64, align: 64, offset: 1152)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "InsecureSkipVerify", file: !10, line: 4, baseType: !50, size: 8, align: 8, offset: 1216)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "CipherSuites", file: !10, line: 4, baseType: !392, size: 192, align: 64, offset: 1280)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "PreferServerCipherSuites", file: !10, line: 4, baseType: !50, size: 8, align: 8, offset: 1472)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "SessionTicketsDisabled", file: !10, line: 4, baseType: !50, size: 8, align: 8, offset: 1480)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "SessionTicketKey", file: !10, line: 4, baseType: !498, size: 256, align: 8, offset: 1488)
!498 = !DICompositeType(tag: DW_TAG_array_type, baseType: !29, size: 256, align: 1, elements: !499)
!499 = !{!500}
!500 = !DISubrange(count: 32)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "ClientSessionCache", file: !10, line: 4, baseType: !502, size: 128, align: 64, offset: 1792)
!502 = !DICompositeType(tag: DW_TAG_structure_type, name: "ClientSessionCache", file: !10, line: 4, size: 128, align: 8, elements: !503)
!503 = !{!504, !154}
!504 = !DIDerivedType(tag: DW_TAG_member, name: "__methods", file: !10, line: 4, baseType: !505, size: 64, align: 64)
!505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !506, size: 64)
!506 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*_type,*func(*void,string)struct{*ClientSessionState,bool},*func(*void,string,*ClientSessionState)void}", file: !18, size: 192, align: 8, elements: !507)
!507 = !{!167, !508, !525}
!508 = !DIDerivedType(tag: DW_TAG_member, name: "Get", file: !18, line: 4, baseType: !509, size: 64, align: 64, offset: 64)
!509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !510, size: 64)
!510 = !DISubroutineType(types: !511)
!511 = !{!512, !40, !55}
!512 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*ClientSessionState,bool}", file: !18, size: 128, align: 8, elements: !513)
!513 = !{!514, !524}
!514 = !DIDerivedType(tag: DW_TAG_member, name: "session", file: !18, line: 4, baseType: !515, size: 64, align: 64)
!515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !516, size: 64)
!516 = !DICompositeType(tag: DW_TAG_structure_type, name: "ClientSessionState", file: !10, line: 4, size: 832, align: 8, elements: !517)
!517 = !{!518, !519, !520, !521, !522, !523}
!518 = !DIDerivedType(tag: DW_TAG_member, name: "sessionTicket", file: !10, line: 4, baseType: !150, size: 192, align: 64)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "vers", file: !10, line: 4, baseType: !370, size: 16, align: 16, offset: 192)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "cipherSuite", file: !10, line: 4, baseType: !370, size: 16, align: 16, offset: 208)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "masterSecret", file: !10, line: 4, baseType: !150, size: 192, align: 64, offset: 256)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "serverCertificates", file: !10, line: 4, baseType: !477, size: 192, align: 64, offset: 448)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "verifiedChains", file: !10, line: 4, baseType: !473, size: 192, align: 64, offset: 640)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "ok", file: !18, line: 4, baseType: !50, size: 8, align: 8, offset: 64)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "Put", file: !18, line: 4, baseType: !526, size: 64, align: 64, offset: 128)
!526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !527, size: 64)
!527 = !DISubroutineType(types: !528)
!528 = !{!41, !40, !55, !515}
!529 = !DIDerivedType(tag: DW_TAG_member, name: "MinVersion", file: !10, line: 4, baseType: !370, size: 16, align: 16, offset: 1920)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "MaxVersion", file: !10, line: 4, baseType: !370, size: 16, align: 16, offset: 1936)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "CurvePreferences", file: !10, line: 4, baseType: !398, size: 192, align: 64, offset: 1984)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "DynamicRecordSizingDisabled", file: !10, line: 4, baseType: !50, size: 8, align: 8, offset: 2176)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "Renegotiation", file: !10, line: 4, baseType: !534, size: 64, align: 64, offset: 2240)
!534 = !DIBasicType(name: "RenegotiationSupport", size: 64, encoding: DW_ATE_signed)
!535 = !DIDerivedType(tag: DW_TAG_member, name: "KeyLogWriter", file: !10, line: 4, baseType: !536, size: 128, align: 64, offset: 2304)
!536 = !DICompositeType(tag: DW_TAG_structure_type, name: "Writer", file: !10, line: 4, size: 128, align: 8, elements: !537)
!537 = !{!538, !154}
!538 = !DIDerivedType(tag: DW_TAG_member, name: "__methods", file: !10, line: 4, baseType: !539, size: 64, align: 64)
!539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !540, size: 64)
!540 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*_type,*func(*void,struct{*uint8,int,int})struct{int,error}}", file: !18, size: 128, align: 8, elements: !541)
!541 = !{!167, !542}
!542 = !DIDerivedType(tag: DW_TAG_member, name: "Write", file: !18, line: 4, baseType: !143, size: 64, align: 64, offset: 64)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "serverInitOnce", file: !10, line: 4, baseType: !544, size: 96, align: 32, offset: 2432)
!544 = !DICompositeType(tag: DW_TAG_structure_type, name: "Once", file: !10, line: 4, size: 96, align: 8, elements: !545)
!545 = !{!546, !552}
!546 = !DIDerivedType(tag: DW_TAG_member, name: "m", file: !10, line: 4, baseType: !547, size: 64, align: 32)
!547 = !DICompositeType(tag: DW_TAG_structure_type, name: "Mutex", file: !10, line: 4, size: 64, align: 8, elements: !548)
!548 = !{!549, !551}
!549 = !DIDerivedType(tag: DW_TAG_member, name: "state", file: !10, line: 4, baseType: !550, size: 32, align: 32)
!550 = !DIBasicType(name: "int32", size: 32, encoding: DW_ATE_signed)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "sema", file: !10, line: 4, baseType: !8, size: 32, align: 32, offset: 32)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "done", file: !10, line: 4, baseType: !8, size: 32, align: 32, offset: 64)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", file: !10, line: 4, baseType: !554, size: 192, align: 32, offset: 2528)
!554 = !DICompositeType(tag: DW_TAG_structure_type, name: "RWMutex", file: !10, line: 4, size: 192, align: 8, elements: !555)
!555 = !{!556, !557, !558, !559, !560}
!556 = !DIDerivedType(tag: DW_TAG_member, name: "w", file: !10, line: 4, baseType: !547, size: 64, align: 32)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "writerSem", file: !10, line: 4, baseType: !8, size: 32, align: 32, offset: 64)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "readerSem", file: !10, line: 4, baseType: !8, size: 32, align: 32, offset: 96)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "readerCount", file: !10, line: 4, baseType: !550, size: 32, align: 32, offset: 128)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "readerWait", file: !10, line: 4, baseType: !550, size: 32, align: 32, offset: 160)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "sessionTicketKeys", file: !10, line: 4, baseType: !562, size: 192, align: 64, offset: 2752)
!562 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*.crypto/tls.ticketKey,int,int}", file: !18, size: 192, align: 8, elements: !563)
!563 = !{!564, !76, !77}
!564 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !18, line: 1, baseType: !565, size: 64, align: 64)
!565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !566, size: 64)
!566 = !DICompositeType(tag: DW_TAG_structure_type, name: ".crypto/tls.ticketKey", file: !10, line: 4, size: 384, align: 8, elements: !567)
!567 = !{!568, !572, !573}
!568 = !DIDerivedType(tag: DW_TAG_member, name: "keyName", file: !10, line: 4, baseType: !569, size: 128, align: 8)
!569 = !DICompositeType(tag: DW_TAG_array_type, baseType: !29, size: 128, align: 1, elements: !570)
!570 = !{!571}
!571 = !DISubrange(count: 16)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "aesKey", file: !10, line: 4, baseType: !569, size: 128, align: 8, offset: 128)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "hmacKey", file: !10, line: 4, baseType: !569, size: 128, align: 8, offset: 256)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "tlsConn", file: !10, line: 38, baseType: !575, size: 64, align: 64, offset: 1536)
!575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !576, size: 64)
!576 = !DICompositeType(tag: DW_TAG_structure_type, name: "Conn", file: !10, line: 4, size: 6720, align: 8, elements: !577)
!577 = !{!578, !579, !580, !581, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !670, !671, !672, !673, !683, !684, !685, !686, !687, !688, !689}
!578 = !DIDerivedType(tag: DW_TAG_member, name: "conn", file: !10, line: 4, baseType: !413, size: 128, align: 64)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "isClient", file: !10, line: 4, baseType: !50, size: 8, align: 8, offset: 128)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "handshakeMutex", file: !10, line: 4, baseType: !547, size: 64, align: 32, offset: 160)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "handshakeCond", file: !10, line: 4, baseType: !582, size: 64, align: 64, offset: 256)
!582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !583, size: 64)
!583 = !DICompositeType(tag: DW_TAG_structure_type, name: "Cond", file: !10, line: 4, size: 448, align: 8, elements: !584)
!584 = !{!585, !586, !598, !606}
!585 = !DIDerivedType(tag: DW_TAG_member, name: "noCopy", file: !10, line: 4, baseType: !95, align: 8)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "L", file: !10, line: 4, baseType: !587, size: 128, align: 64)
!587 = !DICompositeType(tag: DW_TAG_structure_type, name: "Locker", file: !10, line: 4, size: 128, align: 8, elements: !588)
!588 = !{!589, !154}
!589 = !DIDerivedType(tag: DW_TAG_member, name: "__methods", file: !10, line: 4, baseType: !590, size: 64, align: 64)
!590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !591, size: 64)
!591 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*_type,*func(*void)void,*func(*void)void}", file: !18, size: 192, align: 8, elements: !592)
!592 = !{!167, !593, !597}
!593 = !DIDerivedType(tag: DW_TAG_member, name: "Lock", file: !18, line: 4, baseType: !594, size: 64, align: 64, offset: 64)
!594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !595, size: 64)
!595 = !DISubroutineType(types: !596)
!596 = !{!41, !40}
!597 = !DIDerivedType(tag: DW_TAG_member, name: "Unlock", file: !18, line: 4, baseType: !594, size: 64, align: 64, offset: 128)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "notify", file: !10, line: 4, baseType: !599, size: 256, align: 64, offset: 128)
!599 = !DICompositeType(tag: DW_TAG_structure_type, name: ".sync.notifyList", file: !10, line: 4, size: 256, align: 8, elements: !600)
!600 = !{!601, !602, !603, !604, !605}
!601 = !DIDerivedType(tag: DW_TAG_member, name: "wait", file: !10, line: 4, baseType: !8, size: 32, align: 32)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "notify", file: !10, line: 4, baseType: !8, size: 32, align: 32, offset: 32)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "lock", file: !10, line: 4, baseType: !25, size: 64, align: 64, offset: 64)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "head", file: !10, line: 4, baseType: !40, size: 64, align: 64, offset: 128)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "tail", file: !10, line: 4, baseType: !40, size: 64, align: 64, offset: 192)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "checker", file: !10, line: 4, baseType: !607, size: 64, align: 64, offset: 384)
!607 = !DIBasicType(name: ".sync.copyChecker", size: 64, encoding: DW_ATE_unsigned)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "handshakeErr", file: !10, line: 4, baseType: !13, size: 128, align: 64, offset: 320)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "vers", file: !10, line: 4, baseType: !370, size: 16, align: 16, offset: 448)
!610 = !DIDerivedType(tag: DW_TAG_member, name: "haveVers", file: !10, line: 4, baseType: !50, size: 8, align: 8, offset: 464)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "config", file: !10, line: 4, baseType: !157, size: 64, align: 64, offset: 512)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "handshakeComplete", file: !10, line: 4, baseType: !50, size: 8, align: 8, offset: 576)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "handshakes", file: !10, line: 4, baseType: !59, size: 64, align: 64, offset: 640)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "didResume", file: !10, line: 4, baseType: !50, size: 8, align: 8, offset: 704)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "cipherSuite", file: !10, line: 4, baseType: !370, size: 16, align: 16, offset: 720)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "ocspResponse", file: !10, line: 4, baseType: !150, size: 192, align: 64, offset: 768)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "scts", file: !10, line: 4, baseType: !219, size: 192, align: 64, offset: 960)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "peerCertificates", file: !10, line: 4, baseType: !477, size: 192, align: 64, offset: 1152)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "verifiedChains", file: !10, line: 4, baseType: !473, size: 192, align: 64, offset: 1344)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "serverName", file: !10, line: 4, baseType: !55, size: 128, align: 64, offset: 1536)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "secureRenegotiation", file: !10, line: 4, baseType: !50, size: 8, align: 8, offset: 1664)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "clientFinishedIsFirst", file: !10, line: 4, baseType: !50, size: 8, align: 8, offset: 1672)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "closeNotifyErr", file: !10, line: 4, baseType: !13, size: 128, align: 64, offset: 1728)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "closeNotifySent", file: !10, line: 4, baseType: !50, size: 8, align: 8, offset: 1856)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "clientFinished", file: !10, line: 4, baseType: !97, size: 96, align: 8, offset: 1864)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "serverFinished", file: !10, line: 4, baseType: !97, size: 96, align: 8, offset: 1960)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "clientProtocol", file: !10, line: 4, baseType: !55, size: 128, align: 64, offset: 2112)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "clientProtocolFallback", file: !10, line: 4, baseType: !50, size: 8, align: 8, offset: 2240)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "in", file: !10, line: 4, baseType: !630, size: 1408, align: 64, offset: 2304)
!630 = !DICompositeType(tag: DW_TAG_structure_type, name: ".crypto/tls.halfConn", file: !10, line: 4, size: 1408, align: 8, elements: !631)
!631 = !{!632, !633, !634, !635, !636, !651, !655, !662, !666, !667, !668, !669}
!632 = !DIDerivedType(tag: DW_TAG_member, name: "Mutex", file: !10, line: 4, baseType: !547, size: 64, align: 32)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "err", file: !10, line: 4, baseType: !13, size: 128, align: 64, offset: 64)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "version", file: !10, line: 4, baseType: !370, size: 16, align: 16, offset: 192)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "cipher", file: !10, line: 4, baseType: !224, size: 128, align: 64, offset: 256)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "mac", file: !10, line: 4, baseType: !637, size: 128, align: 64, offset: 384)
!637 = !DICompositeType(tag: DW_TAG_structure_type, name: ".crypto/tls.macFunction", file: !10, line: 4, size: 128, align: 8, elements: !638)
!638 = !{!639, !154}
!639 = !DIDerivedType(tag: DW_TAG_member, name: "__methods", file: !10, line: 4, baseType: !640, size: 64, align: 64)
!640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !641, size: 64)
!641 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*_type,*func(*void,struct{*uint8,int,int},struct{*uint8,int,int},struct{*uint8,int,int},struct{*uint8,int,int},struct{*uint8,int,int})struct{*uint8,int,int},*func(*void)int}", file: !18, size: 192, align: 8, elements: !642)
!642 = !{!167, !643, !647}
!643 = !DIDerivedType(tag: DW_TAG_member, name: "MAC", file: !18, line: 4, baseType: !644, size: 64, align: 64, offset: 64)
!644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !645, size: 64)
!645 = !DISubroutineType(types: !646)
!646 = !{!150, !40, !150, !150, !150, !150, !150}
!647 = !DIDerivedType(tag: DW_TAG_member, name: "Size", file: !18, line: 4, baseType: !648, size: 64, align: 64, offset: 128)
!648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !649, size: 64)
!649 = !DISubroutineType(types: !650)
!650 = !{!59, !40}
!651 = !DIDerivedType(tag: DW_TAG_member, name: "seq", file: !10, line: 4, baseType: !652, size: 64, align: 8, offset: 512)
!652 = !DICompositeType(tag: DW_TAG_array_type, baseType: !29, size: 64, align: 1, elements: !653)
!653 = !{!654}
!654 = !DISubrange(count: 8)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "bfree", file: !10, line: 4, baseType: !656, size: 64, align: 64, offset: 576)
!656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !657, size: 64)
!657 = !DICompositeType(tag: DW_TAG_structure_type, name: ".crypto/tls.block", file: !10, line: 4, size: 320, align: 8, elements: !658)
!658 = !{!659, !660, !661}
!659 = !DIDerivedType(tag: DW_TAG_member, name: "data", file: !10, line: 4, baseType: !150, size: 192, align: 64)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "off", file: !10, line: 4, baseType: !59, size: 64, align: 64, offset: 192)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "link", file: !10, line: 4, baseType: !40, size: 64, align: 64, offset: 256)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "additionalData", file: !10, line: 4, baseType: !663, size: 104, align: 8, offset: 640)
!663 = !DICompositeType(tag: DW_TAG_array_type, baseType: !29, size: 104, align: 1, elements: !664)
!664 = !{!665}
!665 = !DISubrange(count: 13)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "nextCipher", file: !10, line: 4, baseType: !224, size: 128, align: 64, offset: 768)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "nextMac", file: !10, line: 4, baseType: !637, size: 128, align: 64, offset: 896)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "inDigestBuf", file: !10, line: 4, baseType: !150, size: 192, align: 64, offset: 1024)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "outDigestBuf", file: !10, line: 4, baseType: !150, size: 192, align: 64, offset: 1216)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "out", file: !10, line: 4, baseType: !630, size: 1408, align: 64, offset: 3712)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "rawInput", file: !10, line: 4, baseType: !656, size: 64, align: 64, offset: 5120)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "input", file: !10, line: 4, baseType: !656, size: 64, align: 64, offset: 5184)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "hand", file: !10, line: 4, baseType: !674, size: 832, align: 64, offset: 5248)
!674 = !DICompositeType(tag: DW_TAG_structure_type, name: "Buffer", file: !10, line: 4, size: 832, align: 8, elements: !675)
!675 = !{!676, !660, !677, !681}
!676 = !DIDerivedType(tag: DW_TAG_member, name: "buf", file: !10, line: 4, baseType: !150, size: 192, align: 64)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "bootstrap", file: !10, line: 4, baseType: !678, size: 512, align: 8, offset: 256)
!678 = !DICompositeType(tag: DW_TAG_array_type, baseType: !29, size: 512, align: 1, elements: !679)
!679 = !{!680}
!680 = !DISubrange(count: 64)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "lastRead", file: !10, line: 4, baseType: !682, size: 8, align: 8, offset: 768)
!682 = !DIBasicType(name: ".bytes.readOp", size: 8, encoding: DW_ATE_signed)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "buffering", file: !10, line: 4, baseType: !50, size: 8, align: 8, offset: 6080)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "sendBuf", file: !10, line: 4, baseType: !150, size: 192, align: 64, offset: 6144)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "bytesSent", file: !10, line: 4, baseType: !182, size: 64, align: 64, offset: 6336)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "packetsSent", file: !10, line: 4, baseType: !182, size: 64, align: 64, offset: 6400)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "warnCount", file: !10, line: 4, baseType: !59, size: 64, align: 64, offset: 6464)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "activeCall", file: !10, line: 4, baseType: !550, size: 32, align: 32, offset: 6528)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "tmp", file: !10, line: 4, baseType: !569, size: 128, align: 8, offset: 6560)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "tcpConn", file: !10, line: 39, baseType: !413, size: 128, align: 64, offset: 1600)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "connectionOk", file: !10, line: 42, baseType: !50, size: 8, align: 8, offset: 1728)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "connResetLock", file: !10, line: 43, baseType: !547, size: 64, align: 32, offset: 1760)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "reverser", file: !10, line: 45, baseType: !694, size: 448, align: 64, offset: 1856)
!694 = !DICompositeType(tag: DW_TAG_structure_type, name: "Reverser", file: !695, line: 12, size: 448, align: 8, elements: !696)
!695 = !DIFile(filename: "reverser.go", directory: ".")
!696 = !{!697, !707, !708, !709}
!697 = !DIDerivedType(tag: DW_TAG_member, name: "RouteDeletions", file: !695, line: 13, baseType: !698, size: 192, align: 64)
!698 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*.command-line-arguments.routeEntries,int,int}", file: !18, size: 192, align: 8, elements: !699)
!699 = !{!700, !76, !77}
!700 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !18, line: 1, baseType: !701, size: 64, align: 64)
!701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !702, size: 64)
!702 = !DICompositeType(tag: DW_TAG_structure_type, name: ".command-line-arguments.routeEntries", file: !695, line: 21, size: 512, align: 8, elements: !703)
!703 = !{!704, !705, !706}
!704 = !DIDerivedType(tag: DW_TAG_member, name: "dest", file: !695, line: 22, baseType: !102, size: 192, align: 64)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "via", file: !695, line: 23, baseType: !102, size: 192, align: 64, offset: 192)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "dev", file: !695, line: 24, baseType: !55, size: 128, align: 64, offset: 384)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "updateGateway", file: !695, line: 15, baseType: !50, size: 8, align: 8, offset: 192)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "newGW", file: !695, line: 16, baseType: !55, size: 128, align: 64, offset: 256)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "interfaceToClose", file: !695, line: 18, baseType: !126, size: 64, align: 64, offset: 384)
!710 = !DILocalVariable(name: "c", arg: 1, scope: !9, file: !10, line: 314, type: !84)
!711 = !DILocation(line: 314, column: 1, scope: !9)
!712 = !DILocation(line: 315, column: 3, scope: !713)
!713 = distinct !DILexicalBlock(scope: !9, file: !10, line: 314, column: 1)
!714 = !DILocation(line: 315, column: 19, scope: !713)
!715 = !DILocation(line: 316, column: 3, scope: !713)
!716 = !DILocation(line: 316, column: 12, scope: !713)
!717 = !DILocation(line: 317, column: 3, scope: !713)
!718 = !DILocation(line: 317, column: 11, scope: !713)
!719 = !DILocation(line: 318, column: 8, scope: !713)
!720 = !DILocation(line: 318, column: 13, scope: !713)
!721 = !DILocalVariable(name: "e", scope: !713, file: !10, line: 318, type: !13)
!722 = !DILocation(line: 318, column: 2, scope: !9)
!723 = !DILocation(line: 319, column: 7, scope: !713)
!724 = !DILocalVariable(name: "$ret4", scope: !9, file: !10, line: 314, type: !13)
!725 = !DILocation(line: 314, column: 26, scope: !9)
!726 = !DILocation(line: 320, column: 3, scope: !713)
!727 = distinct !DISubprogram(name: "subnet.Run..1command_line_arguments.Client", linkageName: "command_line_arguments.Client.Run", scope: null, file: !10, line: 140, type: !728, isLocal: false, isDefinition: true, scopeLine: 140, isOptimized: false, unit: !1, retainedNodes: !3)
!728 = !DISubroutineType(types: !729)
!729 = !{!41, !84, !84}
!730 = !DILocalVariable(name: "c", arg: 1, scope: !727, file: !10, line: 140, type: !84)
!731 = !DILocation(line: 140, column: 1, scope: !727)
!732 = !DILocation(line: 142, column: 6, scope: !733)
!733 = distinct !DILexicalBlock(scope: !727, file: !10, line: 140, column: 1)
!734 = !DILocation(line: 142, column: 18, scope: !733)
!735 = !DILocation(line: 0, scope: !736)
!736 = distinct !DILexicalBlock(scope: !733, file: !10, line: 142, column: 24)
!737 = !DILocation(line: 150, column: 50, scope: !733)
!738 = !DILocation(line: 143, column: 43, scope: !736)
!739 = !DILocation(line: 143, column: 48, scope: !736)
!740 = !DILocation(line: 143, column: 58, scope: !736)
!741 = !DILocation(line: 143, column: 10, scope: !736)
!742 = !DILocalVariable(name: "err", scope: !736, file: !10, line: 143, type: !13)
!743 = !DILocation(line: 143, column: 3, scope: !733)
!744 = !DILocation(line: 144, column: 10, scope: !736)
!745 = !DILocation(line: 145, column: 45, scope: !736)
!746 = !DILocation(line: 145, column: 8, scope: !736)
!747 = !DILocation(line: 146, column: 4, scope: !736)
!748 = !DILocation(line: 150, column: 29, scope: !733)
!749 = !DILocation(line: 150, column: 34, scope: !733)
!750 = !DILocation(line: 150, column: 9, scope: !733)
!751 = !DILocalVariable(name: "err", scope: !733, file: !10, line: 150, type: !13)
!752 = !DILocation(line: 150, column: 2, scope: !727)
!753 = !DILocation(line: 151, column: 9, scope: !733)
!754 = !DILocation(line: 156, column: 2, scope: !733)
!755 = !DILocation(line: 157, column: 2, scope: !733)
!756 = !DILocation(line: 158, column: 21, scope: !733)
!757 = !DILocation(line: 158, column: 29, scope: !733)
!758 = !DILocation(line: 158, column: 43, scope: !733)
!759 = !DILocation(line: 158, column: 50, scope: !733)
!760 = !DILocation(line: 158, column: 2, scope: !733)
!761 = !DILocation(line: 159, column: 22, scope: !733)
!762 = !DILocation(line: 159, column: 30, scope: !733)
!763 = !DILocation(line: 159, column: 2, scope: !733)
!764 = !DILocation(line: 152, column: 56, scope: !733)
!765 = !DILocation(line: 152, column: 61, scope: !733)
!766 = !DILocation(line: 152, column: 73, scope: !733)
!767 = !DILocation(line: 152, column: 7, scope: !733)
!768 = !DILocation(line: 153, column: 3, scope: !733)
!769 = distinct !DISubprogram(name: "subnet.connectionProblem..1command_line_arguments.Client", linkageName: "command_line_arguments.Client.connectionProblem", scope: null, file: !10, line: 251, type: !728, isLocal: false, isDefinition: true, scopeLine: 251, isOptimized: false, unit: !1, retainedNodes: !3)
!770 = !DILocalVariable(name: "c", arg: 1, scope: !769, file: !10, line: 251, type: !84)
!771 = !DILocation(line: 251, column: 1, scope: !769)
!772 = !DILocation(line: 252, column: 7, scope: !769)
!773 = !DILocation(line: 289, column: 1, scope: !769)
!774 = !DILocation(line: 252, column: 5, scope: !769)
!775 = !DILocation(line: 255, column: 6, scope: !769)
!776 = !DILocation(line: 255, column: 2, scope: !769)
!777 = !DILocation(line: 259, column: 3, scope: !769)
!778 = !DILocation(line: 259, column: 17, scope: !769)
!779 = !DILocation(line: 260, column: 2, scope: !769)
!780 = !DILocation(line: 262, column: 6, scope: !769)
!781 = !DILocation(line: 262, column: 2, scope: !769)
!782 = !DILocation(line: 263, column: 7, scope: !769)
!783 = !DILocation(line: 264, column: 18, scope: !769)
!784 = !DILocation(line: 265, column: 4, scope: !769)
!785 = !DILocation(line: 265, column: 12, scope: !769)
!786 = !DILocation(line: 266, column: 8, scope: !769)
!787 = !DILocalVariable(name: "i", scope: !788, file: !10, line: 268, type: !59)
!788 = distinct !DILexicalBlock(scope: !769, file: !10, line: 268, column: 3)
!789 = !DILocation(line: 268, column: 7, scope: !769)
!790 = !DILocation(line: 269, column: 37, scope: !791)
!791 = distinct !DILexicalBlock(scope: !788, file: !10, line: 268, column: 25)
!792 = !DILocation(line: 269, column: 24, scope: !791)
!793 = !DILocalVariable(name: "err", scope: !791, file: !10, line: 269, type: !13)
!794 = !DILocation(line: 269, column: 4, scope: !788)
!795 = !DILocation(line: 271, column: 11, scope: !791)
!796 = !DILocation(line: 272, column: 5, scope: !791)
!797 = !DILocation(line: 276, column: 20, scope: !791)
!798 = !DILocation(line: 279, column: 11, scope: !791)
!799 = !DILocation(line: 272, column: 12, scope: !791)
!800 = !DILocation(line: 272, column: 27, scope: !791)
!801 = !DILocation(line: 273, column: 5, scope: !791)
!802 = !DILocation(line: 273, column: 12, scope: !791)
!803 = !DILocation(line: 273, column: 27, scope: !791)
!804 = !DILocation(line: 274, column: 15, scope: !791)
!805 = !DILocation(line: 275, column: 38, scope: !791)
!806 = !DILocation(line: 275, column: 21, scope: !791)
!807 = !DILocation(line: 275, column: 15, scope: !791)
!808 = !DILocation(line: 276, column: 12, scope: !791)
!809 = !DILocation(line: 284, column: 71, scope: !791)
!810 = !DILocation(line: 280, column: 20, scope: !791)
!811 = !DILocation(line: 281, column: 9, scope: !791)
!812 = !DILocation(line: 284, column: 82, scope: !791)
!813 = !DILocation(line: 284, column: 84, scope: !791)
!814 = !DILocation(line: 284, column: 9, scope: !791)
!815 = !DILocation(line: 285, column: 28, scope: !791)
!816 = !DILocation(line: 285, column: 10, scope: !791)
!817 = !DILocation(line: 268, column: 21, scope: !788)
!818 = !DILocation(line: 253, column: 3, scope: !769)
!819 = distinct !DISubprogram(name: "subnet.init..1command_line_arguments.Client", linkageName: "command_line_arguments.Client.init", scope: null, file: !10, line: 94, type: !820, isLocal: false, isDefinition: true, scopeLine: 94, isOptimized: false, unit: !1, retainedNodes: !3)
!820 = !DISubroutineType(types: !821)
!821 = !{!13, !84, !84, !55, !55}
!822 = !DILocalVariable(name: "c", arg: 1, scope: !819, file: !10, line: 94, type: !84)
!823 = !DILocation(line: 94, column: 1, scope: !819)
!824 = !DILocalVariable(name: "serverAddr", arg: 2, scope: !819, file: !10, line: 94, type: !55)
!825 = !DILocation(line: 94, column: 23, scope: !819)
!826 = !DILocalVariable(name: "port", arg: 3, scope: !819, file: !10, line: 94, type: !55)
!827 = !DILocation(line: 94, column: 35, scope: !819)
!828 = !DILocation(line: 95, column: 34, scope: !829)
!829 = distinct !DILexicalBlock(scope: !819, file: !10, line: 94, column: 1)
!830 = !DILocation(line: 95, column: 22, scope: !829)
!831 = !DILocalVariable(name: "err", scope: !829, file: !10, line: 95, type: !13)
!832 = !DILocation(line: 95, column: 2, scope: !819)
!833 = !DILocation(line: 96, column: 9, scope: !829)
!834 = !DILocation(line: 97, column: 3, scope: !829)
!835 = !DILocalVariable(name: "$ret2", scope: !819, file: !10, line: 94, type: !13)
!836 = !DILocation(line: 94, column: 48, scope: !819)
!837 = !DILocation(line: 99, column: 2, scope: !829)
!838 = !DILocation(line: 99, column: 9, scope: !829)
!839 = !DILocation(line: 99, column: 24, scope: !829)
!840 = !DILocation(line: 100, column: 9, scope: !829)
!841 = !DILocation(line: 100, column: 24, scope: !829)
!842 = !DILocation(line: 101, column: 3, scope: !829)
!843 = !DILocation(line: 100, column: 2, scope: !829)
!844 = !DILocation(line: 101, column: 12, scope: !829)
!845 = !DILocation(line: 103, column: 18, scope: !829)
!846 = !DILocation(line: 103, column: 35, scope: !829)
!847 = !DILocation(line: 103, column: 3, scope: !829)
!848 = !DILocation(line: 103, column: 12, scope: !829)
!849 = !DILocation(line: 105, column: 13, scope: !850)
!850 = distinct !DILexicalBlock(scope: !829, file: !10, line: 105, column: 2)
!851 = !DILocation(line: 105, column: 21, scope: !850)
!852 = !DILocalVariable(name: "err", scope: !850, file: !10, line: 105, type: !13)
!853 = !DILocation(line: 105, column: 5, scope: !829)
!854 = !DILocation(line: 105, column: 39, scope: !850)
!855 = !DILocation(line: 106, column: 3, scope: !850)
!856 = !DILocation(line: 109, column: 3, scope: !829)
!857 = !DILocation(line: 109, column: 17, scope: !829)
!858 = !DILocation(line: 111, column: 22, scope: !859)
!859 = distinct !DILexicalBlock(scope: !829, file: !10, line: 111, column: 2)
!860 = !DILocation(line: 111, column: 27, scope: !859)
!861 = !DILocation(line: 111, column: 37, scope: !859)
!862 = !DILocation(line: 111, column: 50, scope: !859)
!863 = !DILocation(line: 111, column: 66, scope: !859)
!864 = !DILocation(line: 111, column: 12, scope: !859)
!865 = !DILocalVariable(name: "err", scope: !859, file: !10, line: 111, type: !13)
!866 = !DILocation(line: 111, column: 5, scope: !829)
!867 = !DILocation(line: 111, column: 87, scope: !859)
!868 = !DILocation(line: 112, column: 3, scope: !859)
!869 = !DILocation(line: 114, column: 55, scope: !829)
!870 = !DILocation(line: 114, column: 60, scope: !829)
!871 = !DILocation(line: 114, column: 80, scope: !829)
!872 = !DILocation(line: 114, column: 99, scope: !829)
!873 = !DILocation(line: 114, column: 112, scope: !829)
!874 = !DILocation(line: 114, column: 118, scope: !829)
!875 = !DILocation(line: 114, column: 6, scope: !829)
!876 = !DILocation(line: 116, column: 6, scope: !829)
!877 = !DILocation(line: 116, column: 18, scope: !829)
!878 = !DILocation(line: 118, column: 29, scope: !879)
!879 = distinct !DILexicalBlock(scope: !829, file: !10, line: 116, column: 24)
!880 = !DILocalVariable(name: "gw", scope: !879, file: !10, line: 118, type: !55)
!881 = !DILocation(line: 118, column: 3, scope: !829)
!882 = !DILocalVariable(name: "gatewayDevice", scope: !879, file: !10, line: 118, type: !55)
!883 = !DILocalVariable(name: "err", scope: !879, file: !10, line: 118, type: !13)
!884 = !DILocation(line: 119, column: 10, scope: !879)
!885 = !DILocation(line: 136, column: 2, scope: !829)
!886 = !DILocation(line: 120, column: 4, scope: !879)
!887 = !DILocation(line: 122, column: 18, scope: !879)
!888 = !DILocation(line: 123, column: 7, scope: !879)
!889 = !DILocation(line: 126, column: 23, scope: !890)
!890 = distinct !DILexicalBlock(scope: !879, file: !10, line: 126, column: 3)
!891 = !DILocation(line: 126, column: 59, scope: !890)
!892 = !DILocalVariable(name: "gateway", scope: !879, file: !10, line: 122, type: !102)
!893 = !DILocation(line: 122, column: 3, scope: !829)
!894 = !DILocation(line: 126, column: 13, scope: !890)
!895 = !DILocalVariable(name: "err", scope: !890, file: !10, line: 126, type: !13)
!896 = !DILocation(line: 126, column: 6, scope: !879)
!897 = !DILocation(line: 126, column: 80, scope: !890)
!898 = !DILocation(line: 127, column: 4, scope: !890)
!899 = !DILocation(line: 129, column: 68, scope: !879)
!900 = !DILocation(line: 129, column: 7, scope: !879)
!901 = !DILocation(line: 130, column: 4, scope: !879)
!902 = !DILocation(line: 130, column: 13, scope: !879)
!903 = distinct !DISubprogram(name: "subnet.netRecvRoutine..1command_line_arguments.Client", linkageName: "command_line_arguments.Client.netRecvRoutine", scope: null, file: !10, line: 212, type: !728, isLocal: false, isDefinition: true, scopeLine: 212, isOptimized: false, unit: !1, retainedNodes: !3)
!904 = !DILocalVariable(name: "c", arg: 1, scope: !903, file: !10, line: 212, type: !84)
!905 = !DILocation(line: 212, column: 1, scope: !903)
!906 = !DILocation(line: 213, column: 3, scope: !903)
!907 = !DILocation(line: 249, column: 1, scope: !903)
!908 = !DILocation(line: 213, column: 6, scope: !903)
!909 = !DILocation(line: 214, column: 9, scope: !903)
!910 = !DILocation(line: 214, column: 2, scope: !903)
!911 = !DILocation(line: 217, column: 30, scope: !912)
!912 = distinct !DILexicalBlock(scope: !903, file: !10, line: 216, column: 24)
!913 = !DILocation(line: 217, column: 18, scope: !912)
!914 = !DILocalVariable(name: "pktType", scope: !915, file: !10, line: 220, type: !916)
!915 = distinct !DILexicalBlock(scope: !912, file: !10, line: 219, column: 22)
!916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !917, size: 64)
!917 = !DIBasicType(name: "PktType", size: 8, encoding: DW_ATE_unsigned)
!918 = !DILocation(line: 220, column: 8, scope: !912)
!919 = !DILocation(line: 221, column: 26, scope: !915)
!920 = !DILocation(line: 221, column: 18, scope: !915)
!921 = !DILocalVariable(name: "err", scope: !915, file: !10, line: 221, type: !13)
!922 = !DILocation(line: 221, column: 4, scope: !912)
!923 = !DILocation(line: 223, column: 11, scope: !915)
!924 = !DILocation(line: 232, column: 11, scope: !915)
!925 = !DILocation(line: 224, column: 10, scope: !915)
!926 = !DILocation(line: 224, column: 8, scope: !915)
!927 = !DILocation(line: 225, column: 44, scope: !915)
!928 = !DILocation(line: 225, column: 10, scope: !915)
!929 = !DILocation(line: 226, column: 7, scope: !915)
!930 = !DILocation(line: 247, column: 8, scope: !912)
!931 = !DILocation(line: 234, column: 9, scope: !915)
!932 = !DILocation(line: 236, column: 9, scope: !933)
!933 = distinct !DILexicalBlock(scope: !915, file: !10, line: 236, column: 5)
!934 = !DILocation(line: 234, column: 49, scope: !915)
!935 = !DILocalVariable(name: "ipPkt", scope: !933, file: !10, line: 236, type: !936)
!936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !937, size: 64)
!937 = !DICompositeType(tag: DW_TAG_structure_type, name: "IPPacket", file: !938, line: 10, size: 448, align: 8, elements: !939)
!938 = !DIFile(filename: "dev_packet.go", directory: ".")
!939 = !{!940, !941, !942}
!940 = !DIDerivedType(tag: DW_TAG_member, name: "Raw", file: !938, line: 11, baseType: !150, size: 192, align: 64)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "Dest", file: !938, line: 12, baseType: !102, size: 192, align: 64, offset: 192)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "Protocol", file: !938, line: 13, baseType: !943, size: 8, align: 8, offset: 384)
!943 = !DIBasicType(name: "IPProtocol", size: 8, encoding: DW_ATE_unsigned)
!944 = !DILocation(line: 236, column: 9, scope: !915)
!945 = !DILocation(line: 237, column: 27, scope: !933)
!946 = !DILocation(line: 237, column: 19, scope: !933)
!947 = !DILocalVariable(name: "err", scope: !933, file: !10, line: 237, type: !13)
!948 = !DILocation(line: 237, column: 5, scope: !915)
!949 = !DILocation(line: 238, column: 12, scope: !933)
!950 = !DILocation(line: 239, column: 53, scope: !933)
!951 = !DILocation(line: 239, column: 10, scope: !933)
!952 = !DILocation(line: 240, column: 7, scope: !933)
!953 = !DILocation(line: 244, column: 6, scope: !933)
!954 = !DILocation(line: 244, column: 21, scope: !933)
!955 = !DILocation(line: 219, column: 8, scope: !912)
!956 = !DILocation(line: 220, column: 8, scope: !915)
!957 = !DILocation(line: 216, column: 8, scope: !903)
!958 = !DILocation(line: 216, column: 6, scope: !903)
!959 = !DILocation(line: 229, column: 5, scope: !903)
!960 = distinct !DISubprogram(name: "subnet.netSendRoutine..1command_line_arguments.Client", linkageName: "command_line_arguments.Client.netSendRoutine", scope: null, file: !10, line: 162, type: !728, isLocal: false, isDefinition: true, scopeLine: 162, isOptimized: false, unit: !1, retainedNodes: !3)
!961 = !DILocalVariable(name: "c", arg: 1, scope: !960, file: !10, line: 162, type: !84)
!962 = !DILocation(line: 162, column: 1, scope: !960)
!963 = !DILocation(line: 163, column: 3, scope: !960)
!964 = !DILocation(line: 200, column: 1, scope: !960)
!965 = !DILocation(line: 163, column: 6, scope: !960)
!966 = !DILocation(line: 164, column: 9, scope: !960)
!967 = !DILocation(line: 164, column: 2, scope: !960)
!968 = !DILocation(line: 167, column: 30, scope: !969)
!969 = distinct !DILexicalBlock(scope: !960, file: !10, line: 166, column: 24)
!970 = !DILocation(line: 167, column: 18, scope: !969)
!971 = !DILocation(line: 168, column: 14, scope: !969)
!972 = !DILocalVariable(name: "connOK", scope: !969, file: !10, line: 168, type: !50)
!973 = !DILocation(line: 168, column: 3, scope: !960)
!974 = !DILocation(line: 169, column: 3, scope: !969)
!975 = !DILocation(line: 170, column: 5, scope: !969)
!976 = !DILocation(line: 173, column: 8, scope: !969)
!977 = !DILocation(line: 173, column: 22, scope: !969)
!978 = !DILocalVariable(name: "pkt", scope: !979, file: !10, line: 174, type: !936)
!979 = distinct !DILexicalBlock(scope: !969, file: !10, line: 173, column: 32)
!980 = !DILocation(line: 174, column: 4, scope: !969)
!981 = !DILocalVariable(name: "ok", scope: !979, file: !10, line: 174, type: !50)
!982 = !DILocation(line: 174, column: 18, scope: !979)
!983 = !DILocation(line: 174, column: 4, scope: !979)
!984 = !DILocation(line: 175, column: 7, scope: !979)
!985 = !DILocation(line: 179, column: 10, scope: !979)
!986 = !DILocation(line: 197, column: 8, scope: !969)
!987 = !DILocation(line: 179, column: 15, scope: !979)
!988 = !DILocation(line: 179, column: 4, scope: !979)
!989 = !DILocation(line: 184, column: 31, scope: !979)
!990 = !DILocation(line: 184, column: 18, scope: !979)
!991 = !DILocalVariable(name: "err", scope: !979, file: !10, line: 184, type: !13)
!992 = !DILocation(line: 184, column: 4, scope: !969)
!993 = !DILocation(line: 185, column: 11, scope: !979)
!994 = !DILocation(line: 186, column: 9, scope: !979)
!995 = !DILocation(line: 190, column: 25, scope: !979)
!996 = !DILocation(line: 190, column: 17, scope: !979)
!997 = !DILocation(line: 186, column: 35, scope: !979)
!998 = !DILocation(line: 187, column: 6, scope: !979)
!999 = !DILocation(line: 191, column: 11, scope: !979)
!1000 = !DILocation(line: 192, column: 9, scope: !979)
!1001 = !DILocation(line: 192, column: 35, scope: !979)
!1002 = !DILocation(line: 193, column: 6, scope: !979)
!1003 = !DILocation(line: 198, column: 19, scope: !969)
!1004 = !DILocation(line: 202, column: 21, scope: !1005, inlinedAt: !1008)
!1005 = distinct !DISubprogram(name: "subnet.dropSendBuffer", scope: null, file: !10, line: 202, type: !1006, isLocal: true, isDefinition: true, scopeLine: 202, isOptimized: false, unit: !1, retainedNodes: !3)
!1006 = !DISubroutineType(types: !1007)
!1007 = !{!41, !122}
!1008 = distinct !DILocation(line: 198, column: 3, scope: !969)
!1009 = !DILocalVariable(name: "buffer", arg: 1, scope: !1005, file: !10, line: 202, type: !122)
!1010 = !DILocation(line: 204, column: 3, scope: !1005, inlinedAt: !1008)
!1011 = !DILocation(line: 205, column: 3, scope: !1005, inlinedAt: !1008)
!1012 = !DILocation(line: 206, column: 3, scope: !1005, inlinedAt: !1008)
!1013 = !DILocation(line: 207, column: 4, scope: !1005, inlinedAt: !1008)
!1014 = !DILocation(line: 166, column: 8, scope: !960)
!1015 = !DILocation(line: 166, column: 6, scope: !960)
!1016 = distinct !DISubprogram(name: "subnet.sendLocalAddr..1command_line_arguments.Client", linkageName: "command_line_arguments.Client.sendLocalAddr", scope: null, file: !10, line: 291, type: !1017, isLocal: false, isDefinition: true, scopeLine: 291, isOptimized: false, unit: !1, retainedNodes: !3)
!1017 = !DISubroutineType(types: !1018)
!1018 = !{!13, !84, !84, !1019}
!1019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1020, size: 64)
!1020 = !DICompositeType(tag: DW_TAG_structure_type, name: "Encoder", file: !10, line: 5, size: 1280, align: 8, elements: !1021)
!1021 = !{!1022, !1023, !1028, !1029, !1047, !1048, !1049}
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", file: !10, line: 5, baseType: !547, size: 64, align: 32)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "w", file: !10, line: 5, baseType: !1024, size: 192, align: 64, offset: 64)
!1024 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*Writer,int,int}", file: !18, size: 192, align: 8, elements: !1025)
!1025 = !{!1026, !76, !77}
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !18, line: 1, baseType: !1027, size: 64, align: 64)
!1027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !536, size: 64)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "sent", file: !10, line: 5, baseType: !363, size: 64, align: 64, offset: 256)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "countState", file: !10, line: 5, baseType: !1030, size: 64, align: 64, offset: 320)
!1030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1031, size: 64)
!1031 = !DICompositeType(tag: DW_TAG_structure_type, name: ".encoding/gob.encoderState", file: !10, line: 5, size: 448, align: 8, elements: !1032)
!1032 = !{!1033, !1034, !1040, !1041, !1042, !1046}
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "enc", file: !10, line: 5, baseType: !40, size: 64, align: 64)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "b", file: !10, line: 5, baseType: !1035, size: 64, align: 64, offset: 64)
!1035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1036, size: 64)
!1036 = !DICompositeType(tag: DW_TAG_structure_type, name: ".encoding/gob.encBuffer", file: !10, line: 5, size: 704, align: 8, elements: !1037)
!1037 = !{!1038, !1039}
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "data", file: !10, line: 5, baseType: !150, size: 192, align: 64)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "scratch", file: !10, line: 5, baseType: !678, size: 512, align: 8, offset: 192)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "sendZero", file: !10, line: 5, baseType: !50, size: 8, align: 8, offset: 128)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "fieldnum", file: !10, line: 5, baseType: !59, size: 64, align: 64, offset: 192)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "buf", file: !10, line: 5, baseType: !1043, size: 72, align: 8, offset: 256)
!1043 = !DICompositeType(tag: DW_TAG_array_type, baseType: !29, size: 72, align: 1, elements: !1044)
!1044 = !{!1045}
!1045 = !DISubrange(count: 9)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "next", file: !10, line: 5, baseType: !40, size: 64, align: 64, offset: 384)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "freeList", file: !10, line: 5, baseType: !1030, size: 64, align: 64, offset: 384)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "byteBuf", file: !10, line: 5, baseType: !1036, size: 704, align: 64, offset: 448)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "err", file: !10, line: 5, baseType: !13, size: 128, align: 64, offset: 1152)
!1050 = !DILocalVariable(name: "c", arg: 1, scope: !1016, file: !10, line: 291, type: !84)
!1051 = !DILocation(line: 291, column: 1, scope: !1016)
!1052 = !DILocalVariable(name: "encoder", arg: 2, scope: !1016, file: !10, line: 291, type: !1019)
!1053 = !DILocation(line: 291, column: 32, scope: !1016)
!1054 = !DILocation(line: 292, column: 29, scope: !1055)
!1055 = distinct !DILexicalBlock(scope: !1016, file: !10, line: 291, column: 1)
!1056 = !DILocation(line: 292, column: 16, scope: !1055)
!1057 = !DILocalVariable(name: "err", scope: !1055, file: !10, line: 292, type: !13)
!1058 = !DILocation(line: 292, column: 2, scope: !1016)
!1059 = !DILocation(line: 293, column: 9, scope: !1055)
!1060 = !DILocation(line: 294, column: 7, scope: !1055)
!1061 = !DILocation(line: 294, column: 33, scope: !1055)
!1062 = !DILocation(line: 296, column: 24, scope: !1055)
!1063 = !DILocation(line: 296, column: 15, scope: !1055)
!1064 = !DILocation(line: 297, column: 9, scope: !1055)
!1065 = !DILocalVariable(name: "$ret3", scope: !1016, file: !10, line: 291, type: !13)
!1066 = !DILocation(line: 291, column: 54, scope: !1016)
!1067 = !DILocation(line: 298, column: 3, scope: !1055)
!1068 = !DILocation(line: 300, column: 2, scope: !1069)
!1069 = distinct !DILexicalBlock(scope: !1055, file: !10, line: 300, column: 2)
!1070 = !DILocation(line: 301, column: 29, scope: !1069)
!1071 = !DILocation(line: 301, column: 16, scope: !1069)
!1072 = !DILocation(line: 302, column: 10, scope: !1069)
!1073 = !DILocation(line: 303, column: 8, scope: !1069)
!1074 = !DILocation(line: 303, column: 34, scope: !1069)
!1075 = !DILocation(line: 305, column: 24, scope: !1069)
!1076 = !DILocation(line: 305, column: 16, scope: !1069)
!1077 = !DILocation(line: 306, column: 10, scope: !1069)
!1078 = !DILocation(line: 307, column: 4, scope: !1069)
!1079 = !DILocation(line: 310, column: 2, scope: !1055)
!1080 = distinct !DISubprogram(name: "subnet.AddRouteEntry..1command_line_arguments.Reverser", linkageName: "command_line_arguments.Reverser.AddRouteEntry", scope: null, file: !695, line: 29, type: !1081, isLocal: false, isDefinition: true, scopeLine: 29, isOptimized: false, unit: !1, retainedNodes: !3)
!1081 = !DISubroutineType(types: !1082)
!1082 = !{!41, !1083, !1083, !102, !102, !55}
!1083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !694, size: 64)
!1084 = !DILocalVariable(name: "via", arg: 3, scope: !1080, file: !695, line: 29, type: !102)
!1085 = !DILocation(line: 29, column: 54, scope: !1080)
!1086 = !DILocalVariable(name: "destination", arg: 2, scope: !1080, file: !695, line: 29, type: !102)
!1087 = !DILocation(line: 29, column: 34, scope: !1080)
!1088 = !DILocalVariable(name: "r", arg: 1, scope: !1080, file: !695, line: 29, type: !1083)
!1089 = !DILocation(line: 29, column: 1, scope: !1080)
!1090 = !DILocalVariable(name: "dev", arg: 4, scope: !1080, file: !695, line: 29, type: !55)
!1091 = !DILocation(line: 29, column: 66, scope: !1080)
!1092 = !DILocation(line: 30, column: 3, scope: !1080)
!1093 = !DILocation(line: 30, column: 21, scope: !1080)
!1094 = !DILocation(line: 30, column: 46, scope: !1080)
!1095 = !DILocation(line: 30, column: 19, scope: !1080)
!1096 = distinct !DISubprogram(name: "subnet.Close..1command_line_arguments.Reverser", linkageName: "command_line_arguments.Reverser.Close", scope: null, file: !695, line: 46, type: !1097, isLocal: false, isDefinition: true, scopeLine: 46, isOptimized: false, unit: !1, retainedNodes: !3)
!1097 = !DISubroutineType(types: !1098)
!1098 = !{!41, !1083, !1083}
!1099 = !DILocalVariable(name: "r", arg: 1, scope: !1096, file: !695, line: 46, type: !1083)
!1100 = !DILocation(line: 46, column: 1, scope: !1096)
!1101 = !DILocation(line: 47, column: 25, scope: !1102)
!1102 = distinct !DILexicalBlock(scope: !1096, file: !695, line: 47, column: 2)
!1103 = !DILocation(line: 47, column: 2, scope: !1102)
!1104 = !DILocation(line: 48, column: 8, scope: !1105)
!1105 = distinct !DILexicalBlock(scope: !1102, file: !695, line: 47, column: 41)
!1106 = !DILocalVariable(name: "e", scope: !1105, file: !695, line: 48, type: !13)
!1107 = !DILocation(line: 48, column: 3, scope: !1102)
!1108 = !DILocation(line: 49, column: 8, scope: !1105)
!1109 = !DILocation(line: 50, column: 63, scope: !1105)
!1110 = !DILocation(line: 50, column: 83, scope: !1105)
!1111 = !DILocation(line: 50, column: 8, scope: !1105)
!1112 = !DILocation(line: 52, column: 69, scope: !1105)
!1113 = !DILocation(line: 52, column: 89, scope: !1105)
!1114 = !DILocation(line: 52, column: 112, scope: !1105)
!1115 = !DILocation(line: 52, column: 8, scope: !1105)
!1116 = !DILocation(line: 55, column: 6, scope: !1096)
!1117 = !DILocation(line: 55, column: 2, scope: !1096)
!1118 = !DILocation(line: 56, column: 4, scope: !1096)
!1119 = !DILocation(line: 56, column: 21, scope: !1096)
!1120 = !DILocation(line: 57, column: 52, scope: !1096)
!1121 = !DILocation(line: 57, column: 24, scope: !1096)
!1122 = !DILocation(line: 57, column: 3, scope: !1096)
!1123 = distinct !DISubprogram(name: "subnet.ResetGatewayOSX..1command_line_arguments.Reverser", linkageName: "command_line_arguments.Reverser.ResetGatewayOSX", scope: null, file: !695, line: 38, type: !1124, isLocal: false, isDefinition: true, scopeLine: 38, isOptimized: false, unit: !1, retainedNodes: !3)
!1124 = !DISubroutineType(types: !1125)
!1125 = !{!41, !1083, !1083, !126, !55}
!1126 = !DILocalVariable(name: "r", arg: 1, scope: !1123, file: !695, line: 38, type: !1083)
!1127 = !DILocation(line: 38, column: 1, scope: !1123)
!1128 = !DILocalVariable(name: "intf", arg: 2, scope: !1123, file: !695, line: 38, type: !126)
!1129 = !DILocation(line: 38, column: 36, scope: !1123)
!1130 = !DILocation(line: 39, column: 3, scope: !1123)
!1131 = !DILocation(line: 39, column: 18, scope: !1123)
!1132 = !DILocation(line: 40, column: 3, scope: !1123)
!1133 = !DILocation(line: 40, column: 10, scope: !1123)
!1134 = !DILocation(line: 41, column: 3, scope: !1123)
!1135 = !DILocation(line: 41, column: 21, scope: !1123)
!1136 = distinct !DISubprogram(name: "subnet.NewClient", linkageName: "command_line_arguments.NewClient", scope: null, file: !10, line: 49, type: !1137, isLocal: false, isDefinition: true, scopeLine: 49, isOptimized: false, unit: !1, retainedNodes: !3)
!1137 = !DISubroutineType(types: !1138)
!1138 = !{!1139, !55, !55, !55, !55, !55, !55, !55, !55, !109}
!1139 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*Client,error}", file: !18, size: 192, align: 8, elements: !1140)
!1140 = !{!1141, !1142}
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "UNNAMED", file: !18, line: 50, baseType: !84, size: 64, align: 64)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "UNNAMED", file: !18, line: 50, baseType: !13, size: 128, align: 64, offset: 64)
!1143 = !DILocalVariable(name: "additionalAddresses", arg: 9, scope: !1136, file: !10, line: 50, type: !109)
!1144 = !DILocation(line: 50, column: 46, scope: !1136)
!1145 = !DILocalVariable(name: "caCertPath", arg: 8, scope: !1136, file: !10, line: 50, type: !55)
!1146 = !DILocation(line: 50, column: 27, scope: !1136)
!1147 = !DILocalVariable(name: "keyPemPath", arg: 7, scope: !1136, file: !10, line: 50, type: !55)
!1148 = !DILocation(line: 50, column: 15, scope: !1136)
!1149 = !DILocalVariable(name: "certPemPath", arg: 6, scope: !1136, file: !10, line: 50, type: !55)
!1150 = !DILocation(line: 50, column: 2, scope: !1136)
!1151 = !DILocalVariable(name: "newGateway", arg: 5, scope: !1136, file: !10, line: 49, type: !55)
!1152 = !DILocation(line: 49, column: 55, scope: !1136)
!1153 = !DILocalVariable(name: "iName", arg: 4, scope: !1136, file: !10, line: 49, type: !55)
!1154 = !DILocation(line: 49, column: 41, scope: !1136)
!1155 = !DILocalVariable(name: "network", arg: 3, scope: !1136, file: !10, line: 49, type: !55)
!1156 = !DILocation(line: 49, column: 32, scope: !1136)
!1157 = !DILocalVariable(name: "servAddr", arg: 1, scope: !1136, file: !10, line: 49, type: !55)
!1158 = !DILocation(line: 49, column: 16, scope: !1136)
!1159 = !DILocalVariable(name: "port", arg: 2, scope: !1136, file: !10, line: 49, type: !55)
!1160 = !DILocation(line: 49, column: 26, scope: !1136)
!1161 = !DILocalVariable(name: "$ret0", scope: !1136, file: !10, line: 50, type: !84)
!1162 = !DILocation(line: 50, column: 77, scope: !1136)
!1163 = !DILocation(line: 52, column: 23, scope: !1164)
!1164 = distinct !DILexicalBlock(scope: !1136, file: !10, line: 49, column: 1)
!1165 = !DILocalVariable(name: "tlsConf", scope: !1164, file: !10, line: 52, type: !157)
!1166 = !DILocation(line: 52, column: 2, scope: !1136)
!1167 = !DILocalVariable(name: "err", scope: !1164, file: !10, line: 52, type: !13)
!1168 = !DILocation(line: 53, column: 9, scope: !1164)
!1169 = !DILocation(line: 54, column: 3, scope: !1164)
!1170 = !DILocalVariable(name: "$ret1", scope: !1136, file: !10, line: 50, type: !13)
!1171 = !DILocation(line: 50, column: 86, scope: !1136)
!1172 = !DILocation(line: 12, column: 15, scope: !1173, inlinedAt: !1181)
!1173 = distinct !DISubprogram(name: "subnet.hostToIP", scope: null, file: !1174, line: 12, type: !1175, isLocal: true, isDefinition: true, scopeLine: 12, isOptimized: false, unit: !1, retainedNodes: !3)
!1174 = !DIFile(filename: "util.go", directory: ".")
!1175 = !DISubroutineType(types: !1176)
!1176 = !{!1177, !55}
!1177 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{IP,error}", file: !18, size: 320, align: 8, elements: !1178)
!1178 = !{!1179, !1180}
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "UNNAMED", file: !18, line: 12, baseType: !102, size: 192, align: 64)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "UNNAMED", file: !18, line: 12, baseType: !13, size: 128, align: 64, offset: 192)
!1181 = distinct !DILocation(line: 57, column: 19, scope: !1164)
!1182 = !DILocalVariable(name: "addr", arg: 1, scope: !1173, file: !1174, line: 12, type: !55)
!1183 = !DILocation(line: 13, column: 20, scope: !1184, inlinedAt: !1181)
!1184 = distinct !DILexicalBlock(scope: !1173, file: !1174, line: 12, column: 1)
!1185 = !DILocalVariable(name: "addrs", scope: !1184, file: !1174, line: 13, type: !109)
!1186 = !DILocation(line: 13, column: 2, scope: !1173, inlinedAt: !1181)
!1187 = !DILocalVariable(name: "err", scope: !1184, file: !1174, line: 13, type: !13)
!1188 = !DILocation(line: 14, column: 9, scope: !1184, inlinedAt: !1181)
!1189 = !DILocation(line: 15, column: 3, scope: !1184, inlinedAt: !1181)
!1190 = !DILocalVariable(name: "$ret16", scope: !1173, file: !1174, line: 12, type: !13)
!1191 = !DILocation(line: 12, column: 37, scope: !1173, inlinedAt: !1181)
!1192 = !DILocation(line: 17, column: 16, scope: !1184, inlinedAt: !1181)
!1193 = !DILocation(line: 18, column: 44, scope: !1184, inlinedAt: !1181)
!1194 = !DILocation(line: 18, column: 22, scope: !1184, inlinedAt: !1181)
!1195 = !DILocation(line: 18, column: 3, scope: !1184, inlinedAt: !1181)
!1196 = !DILocation(line: 21, column: 17, scope: !1184, inlinedAt: !1181)
!1197 = !DILocation(line: 21, column: 22, scope: !1184, inlinedAt: !1181)
!1198 = !DILocation(line: 21, column: 7, scope: !1184, inlinedAt: !1181)
!1199 = !DILocation(line: 22, column: 20, scope: !1184, inlinedAt: !1181)
!1200 = !DILocation(line: 22, column: 25, scope: !1184, inlinedAt: !1181)
!1201 = !DILocation(line: 22, column: 14, scope: !1184, inlinedAt: !1181)
!1202 = !DILocation(line: 22, column: 2, scope: !1184, inlinedAt: !1181)
!1203 = !DILocation(line: 57, column: 19, scope: !1164)
!1204 = !DILocation(line: 0, scope: !1164)
!1205 = !DILocation(line: 58, column: 9, scope: !1164)
!1206 = !DILocation(line: 59, column: 3, scope: !1164)
!1207 = !DILocation(line: 62, column: 34, scope: !1164)
!1208 = !DILocalVariable(name: "localNetMask", scope: !1164, file: !10, line: 62, type: !114)
!1209 = !DILocation(line: 62, column: 2, scope: !1136)
!1210 = !DILocation(line: 63, column: 9, scope: !1164)
!1211 = !DILocation(line: 64, column: 65, scope: !1164)
!1212 = !DILocation(line: 64, column: 57, scope: !1164)
!1213 = !DILocation(line: 64, column: 22, scope: !1164)
!1214 = !DILocation(line: 64, column: 3, scope: !1164)
!1215 = !DILocation(line: 67, column: 21, scope: !1164)
!1216 = !DILocalVariable(name: "intf", scope: !1164, file: !10, line: 67, type: !126)
!1217 = !DILocation(line: 67, column: 2, scope: !1136)
!1218 = !DILocation(line: 68, column: 9, scope: !1164)
!1219 = !DILocation(line: 69, column: 57, scope: !1164)
!1220 = !DILocation(line: 69, column: 49, scope: !1164)
!1221 = !DILocation(line: 69, column: 22, scope: !1164)
!1222 = !DILocation(line: 69, column: 3, scope: !1164)
!1223 = !DILocation(line: 72, column: 39, scope: !1164)
!1224 = !DILocation(line: 72, column: 6, scope: !1164)
!1225 = !DILocation(line: 84, column: 20, scope: !1164)
!1226 = !DILocation(line: 85, column: 20, scope: !1164)
!1227 = !DILocation(line: 74, column: 9, scope: !1164)
!1228 = !DILocation(line: 74, column: 10, scope: !1164)
!1229 = !DILocalVariable(name: "ret", scope: !1164, file: !10, line: 74, type: !84)
!1230 = !DILocation(line: 74, column: 2, scope: !1136)
!1231 = !DILocation(line: 89, column: 17, scope: !1164)
!1232 = !DILocation(line: 89, column: 2, scope: !1164)
!1233 = distinct !DISubprogram(name: "subnet.SetDevIP", linkageName: "command_line_arguments.SetDevIP", scope: null, file: !1234, line: 26, type: !1235, isLocal: false, isDefinition: true, scopeLine: 26, isOptimized: false, unit: !1, retainedNodes: !3)
!1234 = !DIFile(filename: "helpers_linux.go", directory: ".")
!1235 = !DISubroutineType(types: !1236)
!1236 = !{!13, !55, !102, !114, !50}
!1237 = !DILocalVariable(name: "localAddr", arg: 2, scope: !1233, file: !1234, line: 26, type: !102)
!1238 = !DILocation(line: 26, column: 29, scope: !1233)
!1239 = !DILocalVariable(name: "iName", arg: 1, scope: !1233, file: !1234, line: 26, type: !55)
!1240 = !DILocation(line: 26, column: 15, scope: !1233)
!1241 = !DILocalVariable(name: "addr", arg: 3, scope: !1233, file: !1234, line: 26, type: !114)
!1242 = !DILocation(line: 26, column: 47, scope: !1233)
!1243 = !DILocalVariable(name: "debug", arg: 4, scope: !1233, file: !1234, line: 26, type: !50)
!1244 = !DILocation(line: 26, column: 64, scope: !1233)
!1245 = !DILocation(line: 27, column: 59, scope: !1246)
!1246 = distinct !DILexicalBlock(scope: !1233, file: !1234, line: 26, column: 1)
!1247 = !DILocation(line: 27, column: 81, scope: !1246)
!1248 = !DILocation(line: 27, column: 87, scope: !1246)
!1249 = !DILocation(line: 27, column: 15, scope: !1246)
!1250 = !DILocalVariable(name: "sargs", scope: !1246, file: !1234, line: 27, type: !55)
!1251 = !DILocation(line: 27, column: 2, scope: !1233)
!1252 = !DILocation(line: 28, column: 18, scope: !1246)
!1253 = !DILocalVariable(name: "args", scope: !1246, file: !1234, line: 28, type: !260)
!1254 = !DILocation(line: 28, column: 2, scope: !1233)
!1255 = !DILocation(line: 29, column: 9, scope: !1246)
!1256 = !DILocation(line: 29, column: 2, scope: !1246)
!1257 = distinct !DISubprogram(name: "subnet.GetNetGateway", linkageName: "command_line_arguments.GetNetGateway", scope: null, file: !1234, line: 55, type: !1258, isLocal: false, isDefinition: true, scopeLine: 55, isOptimized: false, unit: !1, retainedNodes: !3)
!1258 = !DISubroutineType(types: !1259)
!1259 = !{!1260}
!1260 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{string,string,error}", file: !18, size: 384, align: 8, elements: !1261)
!1261 = !{!1262, !1263, !1264}
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "gw", file: !18, line: 55, baseType: !55, size: 128, align: 64)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "dev", file: !18, line: 55, baseType: !55, size: 128, align: 64, offset: 128)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "err", file: !18, line: 55, baseType: !13, size: 128, align: 64, offset: 256)
!1265 = !DILocalVariable(name: "gw", scope: !1257, file: !1234, line: 55, type: !55)
!1266 = !DILocation(line: 55, column: 23, scope: !1257)
!1267 = !DILocalVariable(name: "err", scope: !1257, file: !1234, line: 55, type: !13)
!1268 = !DILocation(line: 55, column: 39, scope: !1257)
!1269 = !DILocation(line: 56, column: 18, scope: !1270)
!1270 = distinct !DILexicalBlock(scope: !1257, file: !1234, line: 55, column: 1)
!1271 = !DILocation(line: 0, scope: !1270)
!1272 = !DILocation(line: 105, column: 1, scope: !1257)
!1273 = !DILocalVariable(name: "file", scope: !1270, file: !1234, line: 56, type: !1274)
!1274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1275, size: 64)
!1275 = !DICompositeType(tag: DW_TAG_structure_type, name: "File", file: !10, line: 8, size: 64, align: 8, elements: !1276)
!1276 = !{!1277}
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "file", file: !10, line: 8, baseType: !1278, size: 64, align: 64)
!1278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1279, size: 64)
!1279 = !DICompositeType(tag: DW_TAG_structure_type, name: ".os.file", file: !10, line: 8, size: 640, align: 8, elements: !1280)
!1280 = !{!1281, !1311, !1312, !1320, !1321}
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "pfd", file: !10, line: 8, baseType: !1282, size: 384, align: 64)
!1282 = !DICompositeType(tag: DW_TAG_structure_type, name: "FD", file: !10, line: 8, size: 384, align: 8, elements: !1283)
!1283 = !{!1284, !1290, !1291, !1295, !1306, !1307, !1308, !1309, !1310}
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "fdmu", file: !10, line: 8, baseType: !1285, size: 128, align: 64)
!1285 = !DICompositeType(tag: DW_TAG_structure_type, name: ".internal/poll.fdMutex", file: !10, line: 8, size: 128, align: 8, elements: !1286)
!1286 = !{!1287, !1288, !1289}
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "state", file: !10, line: 8, baseType: !180, size: 64, align: 64)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "rsema", file: !10, line: 8, baseType: !8, size: 32, align: 32, offset: 64)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "wsema", file: !10, line: 8, baseType: !8, size: 32, align: 32, offset: 96)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "Sysfd", file: !10, line: 8, baseType: !59, size: 64, align: 64, offset: 128)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "pd", file: !10, line: 8, baseType: !1292, size: 64, align: 64, offset: 192)
!1292 = !DICompositeType(tag: DW_TAG_structure_type, name: ".internal/poll.pollDesc", file: !10, line: 8, size: 64, align: 8, elements: !1293)
!1293 = !{!1294}
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "runtimeCtx", file: !10, line: 8, baseType: !25, size: 64, align: 64)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "iovecs", file: !10, line: 8, baseType: !1296, size: 64, align: 64, offset: 256)
!1296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1297, size: 64)
!1297 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*Iovec,int,int}", file: !18, size: 192, align: 8, elements: !1298)
!1298 = !{!1299, !76, !77}
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !18, line: 1, baseType: !1300, size: 64, align: 64)
!1300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1301, size: 64)
!1301 = !DICompositeType(tag: DW_TAG_structure_type, name: "Iovec", file: !10, line: 8, size: 128, align: 8, elements: !1302)
!1302 = !{!1303, !1304}
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "Base", file: !10, line: 8, baseType: !52, size: 64, align: 64)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "Len", file: !10, line: 8, baseType: !1305, size: 64, align: 64, offset: 64)
!1305 = !DIBasicType(name: "Iovec_len_t", size: 64, encoding: DW_ATE_unsigned)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "csema", file: !10, line: 8, baseType: !8, size: 32, align: 32, offset: 320)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "IsStream", file: !10, line: 8, baseType: !50, size: 8, align: 8, offset: 352)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "ZeroReadIsEOF", file: !10, line: 8, baseType: !50, size: 8, align: 8, offset: 360)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "isFile", file: !10, line: 8, baseType: !50, size: 8, align: 8, offset: 368)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "isBlocking", file: !10, line: 8, baseType: !50, size: 8, align: 8, offset: 376)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "name", file: !10, line: 8, baseType: !55, size: 128, align: 64, offset: 384)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "dirinfo", file: !10, line: 8, baseType: !1313, size: 64, align: 64, offset: 512)
!1313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1314, size: 64)
!1314 = !DICompositeType(tag: DW_TAG_structure_type, name: ".os.dirInfo", file: !10, line: 8, size: 256, align: 8, elements: !1315)
!1315 = !{!1316, !1317}
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "buf", file: !10, line: 8, baseType: !150, size: 192, align: 64)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "dir", file: !10, line: 8, baseType: !1318, size: 64, align: 64, offset: 192)
!1318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1319, size: 64)
!1319 = !DICompositeType(tag: DW_TAG_structure_type, name: "DIR", file: !10, line: 8, align: 8, elements: !3)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "nonblock", file: !10, line: 8, baseType: !50, size: 8, align: 8, offset: 576)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "stdoutOrErr", file: !10, line: 8, baseType: !50, size: 8, align: 8, offset: 584)
!1322 = !DILocation(line: 56, column: 2, scope: !1257)
!1323 = !DILocation(line: 57, column: 9, scope: !1270)
!1324 = !DILocation(line: 58, column: 3, scope: !1270)
!1325 = !DILocation(line: 61, column: 2, scope: !1270)
!1326 = !DILocation(line: 62, column: 24, scope: !1270)
!1327 = !DILocation(line: 62, column: 14, scope: !1270)
!1328 = !DILocation(line: 70, column: 28, scope: !1329)
!1329 = distinct !DILexicalBlock(scope: !1270, file: !1234, line: 69, column: 6)
!1330 = !DILocalVariable(name: "isPrefix", scope: !1329, file: !1234, line: 70, type: !50)
!1331 = !DILocation(line: 70, column: 3, scope: !1270)
!1332 = !DILocalVariable(name: "err", scope: !1329, file: !1234, line: 70, type: !13)
!1333 = !DILocation(line: 72, column: 10, scope: !1329)
!1334 = !DILocation(line: 73, column: 4, scope: !1329)
!1335 = !DILocation(line: 75, column: 3, scope: !1329)
!1336 = !DILocation(line: 76, column: 26, scope: !1329)
!1337 = !DILocation(line: 78, column: 16, scope: !1329)
!1338 = !DILocation(line: 76, column: 4, scope: !1329)
!1339 = !DILocalVariable(name: "buf", scope: !1329, file: !1234, line: 78, type: !1340)
!1340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !674, size: 64)
!1341 = !DILocation(line: 78, column: 3, scope: !1270)
!1342 = !DILocation(line: 79, column: 31, scope: !1329)
!1343 = !DILocation(line: 79, column: 20, scope: !1329)
!1344 = !DILocalVariable(name: "scanner", scope: !1329, file: !1234, line: 79, type: !1345)
!1345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1346, size: 64)
!1346 = !DICompositeType(tag: DW_TAG_structure_type, name: "Scanner", file: !1234, line: 4, size: 1024, align: 8, elements: !1347)
!1347 = !{!1348, !1349, !1362, !1363, !1364, !1365, !1366, !1367, !1368, !1369, !1370}
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "r", file: !1234, line: 4, baseType: !161, size: 128, align: 64)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "split", file: !1234, line: 4, baseType: !1350, size: 64, align: 64, offset: 128)
!1350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1351, size: 64)
!1351 = !DICompositeType(tag: DW_TAG_structure_type, name: "__go_descriptor", file: !1234, line: 4, size: 64, align: 8, elements: !1352)
!1352 = !{!1353}
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "code", file: !1234, line: 4, baseType: !1354, size: 64, align: 64)
!1354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1355, size: 64)
!1355 = !DISubroutineType(types: !1356)
!1356 = !{!1357, !150, !50}
!1357 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{int,struct{*uint8,int,int},error}", file: !18, size: 384, align: 8, elements: !1358)
!1358 = !{!1359, !1360, !1361}
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "advance", file: !18, line: 4, baseType: !59, size: 64, align: 64)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "token", file: !18, line: 4, baseType: !150, size: 192, align: 64, offset: 64)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "err", file: !18, line: 4, baseType: !13, size: 128, align: 64, offset: 256)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "maxTokenSize", file: !1234, line: 4, baseType: !59, size: 64, align: 64, offset: 192)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "token", file: !1234, line: 4, baseType: !150, size: 192, align: 64, offset: 256)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "buf", file: !1234, line: 4, baseType: !150, size: 192, align: 64, offset: 448)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "start", file: !1234, line: 4, baseType: !59, size: 64, align: 64, offset: 640)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "end", file: !1234, line: 4, baseType: !59, size: 64, align: 64, offset: 704)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "err", file: !1234, line: 4, baseType: !13, size: 128, align: 64, offset: 768)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "empties", file: !1234, line: 4, baseType: !59, size: 64, align: 64, offset: 896)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "scanCalled", file: !1234, line: 4, baseType: !50, size: 8, align: 8, offset: 960)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "done", file: !1234, line: 4, baseType: !50, size: 8, align: 8, offset: 968)
!1371 = !DILocation(line: 79, column: 3, scope: !1270)
!1372 = !DILocation(line: 80, column: 10, scope: !1329)
!1373 = !DILocalVariable(name: "tokens", scope: !1329, file: !1234, line: 81, type: !260)
!1374 = !DILocation(line: 81, column: 3, scope: !1270)
!1375 = !DILocation(line: 83, column: 14, scope: !1329)
!1376 = !DILocation(line: 84, column: 35, scope: !1329)
!1377 = !DILocation(line: 84, column: 13, scope: !1329)
!1378 = !DILocation(line: 84, column: 11, scope: !1329)
!1379 = !DILocation(line: 87, column: 18, scope: !1329)
!1380 = !DILocation(line: 88, column: 17, scope: !1329)
!1381 = !DILocalVariable(name: "dest", scope: !1329, file: !1234, line: 88, type: !55)
!1382 = !DILocation(line: 88, column: 3, scope: !1270)
!1383 = !DILocation(line: 89, column: 15, scope: !1329)
!1384 = !DILocalVariable(name: "gw", scope: !1329, file: !1234, line: 89, type: !55)
!1385 = !DILocation(line: 89, column: 3, scope: !1270)
!1386 = !DILocation(line: 90, column: 17, scope: !1329)
!1387 = !DILocalVariable(name: "mask", scope: !1329, file: !1234, line: 90, type: !55)
!1388 = !DILocation(line: 90, column: 3, scope: !1270)
!1389 = !DILocation(line: 92, column: 24, scope: !1329)
!1390 = !DILocation(line: 92, column: 38, scope: !1329)
!1391 = !DILocation(line: 92, column: 12, scope: !1329)
!1392 = !DILocation(line: 92, column: 52, scope: !1329)
!1393 = !DILocation(line: 93, column: 22, scope: !1329)
!1394 = !DILocation(line: 92, column: 3, scope: !1329)
!1395 = !DILocation(line: 93, column: 36, scope: !1329)
!1396 = !DILocation(line: 93, column: 10, scope: !1329)
!1397 = !DILocation(line: 94, column: 18, scope: !1398)
!1398 = distinct !DILexicalBlock(scope: !1329, file: !1234, line: 93, column: 50)
!1399 = !DILocation(line: 94, column: 9, scope: !1398)
!1400 = !DILocalVariable(name: "a", scope: !1398, file: !1234, line: 94, type: !29)
!1401 = !DILocation(line: 94, column: 4, scope: !1329)
!1402 = !DILocation(line: 95, column: 18, scope: !1398)
!1403 = !DILocation(line: 95, column: 9, scope: !1398)
!1404 = !DILocalVariable(name: "b", scope: !1398, file: !1234, line: 95, type: !29)
!1405 = !DILocation(line: 95, column: 4, scope: !1329)
!1406 = !DILocation(line: 96, column: 18, scope: !1398)
!1407 = !DILocation(line: 96, column: 9, scope: !1398)
!1408 = !DILocalVariable(name: "c", scope: !1398, file: !1234, line: 96, type: !29)
!1409 = !DILocation(line: 96, column: 4, scope: !1329)
!1410 = !DILocation(line: 97, column: 18, scope: !1398)
!1411 = !DILocation(line: 97, column: 9, scope: !1398)
!1412 = !DILocalVariable(name: "d", scope: !1398, file: !1234, line: 97, type: !29)
!1413 = !DILocation(line: 97, column: 4, scope: !1329)
!1414 = !DILocation(line: 99, column: 14, scope: !1398)
!1415 = !DILocation(line: 101, column: 13, scope: !1398)
!1416 = !DILocation(line: 58, column: 3, scope: !1257)
!1417 = distinct !DISubprogram(name: "subnet.AddRoute", linkageName: "command_line_arguments.AddRoute", scope: null, file: !1234, line: 40, type: !1418, isLocal: false, isDefinition: true, scopeLine: 40, isOptimized: false, unit: !1, retainedNodes: !3)
!1418 = !DISubroutineType(types: !1419)
!1419 = !{!13, !102, !102, !55, !50}
!1420 = !DILocalVariable(name: "viaAddr", arg: 2, scope: !1417, file: !1234, line: 40, type: !102)
!1421 = !DILocation(line: 40, column: 21, scope: !1417)
!1422 = !DILocalVariable(name: "addr", arg: 1, scope: !1417, file: !1234, line: 40, type: !102)
!1423 = !DILocation(line: 40, column: 15, scope: !1417)
!1424 = !DILocalVariable(name: "iName", arg: 3, scope: !1417, file: !1234, line: 40, type: !55)
!1425 = !DILocation(line: 40, column: 37, scope: !1417)
!1426 = !DILocalVariable(name: "debug", arg: 4, scope: !1417, file: !1234, line: 40, type: !50)
!1427 = !DILocation(line: 40, column: 51, scope: !1417)
!1428 = !DILocation(line: 41, column: 50, scope: !1429)
!1429 = distinct !DILexicalBlock(scope: !1417, file: !1234, line: 40, column: 1)
!1430 = !DILocation(line: 41, column: 68, scope: !1429)
!1431 = !DILocation(line: 41, column: 15, scope: !1429)
!1432 = !DILocalVariable(name: "sargs", scope: !1429, file: !1234, line: 41, type: !55)
!1433 = !DILocation(line: 41, column: 2, scope: !1417)
!1434 = !DILocation(line: 42, column: 18, scope: !1429)
!1435 = !DILocalVariable(name: "args", scope: !1429, file: !1234, line: 42, type: !260)
!1436 = !DILocation(line: 42, column: 2, scope: !1417)
!1437 = !DILocation(line: 43, column: 9, scope: !1429)
!1438 = !DILocation(line: 43, column: 2, scope: !1429)
!1439 = distinct !DISubprogram(name: "subnet.SetDefaultGateway", linkageName: "command_line_arguments.SetDefaultGateway", scope: null, file: !1234, line: 33, type: !1440, isLocal: false, isDefinition: true, scopeLine: 33, isOptimized: false, unit: !1, retainedNodes: !3)
!1440 = !DISubroutineType(types: !1441)
!1441 = !{!13, !55, !55, !50}
!1442 = !DILocalVariable(name: "gw", arg: 1, scope: !1439, file: !1234, line: 33, type: !55)
!1443 = !DILocation(line: 33, column: 24, scope: !1439)
!1444 = !DILocalVariable(name: "iName", arg: 2, scope: !1439, file: !1234, line: 33, type: !55)
!1445 = !DILocation(line: 33, column: 28, scope: !1439)
!1446 = !DILocalVariable(name: "debug", arg: 3, scope: !1439, file: !1234, line: 33, type: !50)
!1447 = !DILocation(line: 33, column: 42, scope: !1439)
!1448 = !DILocation(line: 34, column: 15, scope: !1449)
!1449 = distinct !DILexicalBlock(scope: !1439, file: !1234, line: 33, column: 1)
!1450 = !DILocalVariable(name: "sargs", scope: !1449, file: !1234, line: 34, type: !55)
!1451 = !DILocation(line: 34, column: 2, scope: !1439)
!1452 = !DILocation(line: 35, column: 18, scope: !1449)
!1453 = !DILocalVariable(name: "args", scope: !1449, file: !1234, line: 35, type: !260)
!1454 = !DILocation(line: 35, column: 2, scope: !1439)
!1455 = !DILocation(line: 36, column: 9, scope: !1449)
!1456 = !DILocation(line: 36, column: 2, scope: !1449)
!1457 = distinct !DISubprogram(name: "subnet.SetInterfaceStatus", linkageName: "command_line_arguments.SetInterfaceStatus", scope: null, file: !1234, line: 15, type: !1458, isLocal: false, isDefinition: true, scopeLine: 15, isOptimized: false, unit: !1, retainedNodes: !3)
!1458 = !DISubroutineType(types: !1459)
!1459 = !{!13, !55, !50, !50}
!1460 = !DILocalVariable(name: "iName", arg: 1, scope: !1457, file: !1234, line: 15, type: !55)
!1461 = !DILocation(line: 15, column: 25, scope: !1457)
!1462 = !DILocalVariable(name: "up", arg: 2, scope: !1457, file: !1234, line: 15, type: !50)
!1463 = !DILocation(line: 15, column: 39, scope: !1457)
!1464 = !DILocalVariable(name: "debug", arg: 3, scope: !1457, file: !1234, line: 15, type: !50)
!1465 = !DILocation(line: 15, column: 48, scope: !1457)
!1466 = !DILocation(line: 17, column: 2, scope: !1467)
!1467 = distinct !DILexicalBlock(scope: !1457, file: !1234, line: 15, column: 1)
!1468 = !DILocation(line: 18, column: 16, scope: !1467)
!1469 = !DILocation(line: 20, column: 15, scope: !1467)
!1470 = !DILocalVariable(name: "sargs", scope: !1467, file: !1234, line: 20, type: !55)
!1471 = !DILocation(line: 20, column: 2, scope: !1457)
!1472 = !DILocation(line: 21, column: 18, scope: !1467)
!1473 = !DILocalVariable(name: "args", scope: !1467, file: !1234, line: 21, type: !260)
!1474 = !DILocation(line: 21, column: 2, scope: !1457)
!1475 = !DILocation(line: 22, column: 9, scope: !1467)
!1476 = !DILocation(line: 22, column: 2, scope: !1467)
!1477 = distinct !DISubprogram(name: "subnet.command_line_arguments..thunk0", scope: null, file: !10, line: 156, type: !1478, isLocal: true, isDefinition: true, scopeLine: 156, isOptimized: false, unit: !1, retainedNodes: !3)
!1478 = !DISubroutineType(types: !1479)
!1479 = !{!41, !1480}
!1480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1481, size: 64)
!1481 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*Client}", file: !18, size: 64, align: 8, elements: !1482)
!1482 = !{!1483}
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "a0", file: !18, line: 156, baseType: !84, size: 64, align: 64)
!1484 = !DILocalVariable(name: "__go_thunk_parameter", arg: 1, scope: !1477, file: !10, line: 156, type: !1480)
!1485 = !DILocation(line: 156, column: 2, scope: !1477)
!1486 = distinct !DISubprogram(name: "subnet.command_line_arguments..thunk1", scope: null, file: !10, line: 157, type: !1478, isLocal: true, isDefinition: true, scopeLine: 157, isOptimized: false, unit: !1, retainedNodes: !3)
!1487 = !DILocalVariable(name: "__go_thunk_parameter", arg: 1, scope: !1486, file: !10, line: 157, type: !1480)
!1488 = !DILocation(line: 157, column: 2, scope: !1486)
!1489 = distinct !DISubprogram(name: "subnet.command_line_arguments..thunk2", scope: null, file: !10, line: 158, type: !1490, isLocal: true, isDefinition: true, scopeLine: 158, isOptimized: false, unit: !1, retainedNodes: !3)
!1490 = !DISubroutineType(types: !1491)
!1491 = !{!41, !1492}
!1492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1493, size: 64)
!1493 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*Interface,*__go_channel,*WaitGroup,*bool}", file: !18, size: 256, align: 8, elements: !1494)
!1494 = !{!1495, !1496, !1497, !1499}
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "a0", file: !18, line: 158, baseType: !126, size: 64, align: 64)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "a1", file: !18, line: 158, baseType: !122, size: 64, align: 64, offset: 64)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "a2", file: !18, line: 158, baseType: !1498, size: 64, align: 64, offset: 128)
!1498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !92, size: 64)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "a3", file: !18, line: 158, baseType: !1500, size: 64, align: 64, offset: 192)
!1500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !50, size: 64)
!1501 = !DILocalVariable(name: "__go_thunk_parameter", arg: 1, scope: !1489, file: !10, line: 158, type: !1492)
!1502 = !DILocation(line: 158, column: 2, scope: !1489)
!1503 = distinct !DISubprogram(name: "subnet.command_line_arguments..thunk3", scope: null, file: !10, line: 159, type: !1490, isLocal: true, isDefinition: true, scopeLine: 159, isOptimized: false, unit: !1, retainedNodes: !3)
!1504 = !DILocalVariable(name: "__go_thunk_parameter", arg: 1, scope: !1503, file: !10, line: 159, type: !1492)
!1505 = !DILocation(line: 159, column: 2, scope: !1503)
!1506 = distinct !DISubprogram(name: "subnet.command_line_arguments..thunk4", scope: null, file: !10, line: 164, type: !1507, isLocal: true, isDefinition: true, scopeLine: 164, isOptimized: false, unit: !1, retainedNodes: !3)
!1507 = !DISubroutineType(types: !1508)
!1508 = !{!50, !1509}
!1509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1510, size: 64)
!1510 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*WaitGroup}", file: !18, size: 64, align: 8, elements: !1511)
!1511 = !{!1512}
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "a0", file: !18, line: 164, baseType: !1498, size: 64, align: 64)
!1513 = !DILocalVariable(name: "__go_thunk_parameter", arg: 1, scope: !1506, file: !10, line: 164, type: !1509)
!1514 = !DILocation(line: 164, column: 2, scope: !1506)
!1515 = !DILocalVariable(name: "$ret18", scope: !1506, file: !10, line: 164, type: !50)
!1516 = distinct !DISubprogram(name: "subnet.command_line_arguments..thunk5", scope: null, file: !10, line: 214, type: !1507, isLocal: true, isDefinition: true, scopeLine: 214, isOptimized: false, unit: !1, retainedNodes: !3)
!1517 = !DILocalVariable(name: "__go_thunk_parameter", arg: 1, scope: !1516, file: !10, line: 214, type: !1509)
!1518 = !DILocation(line: 214, column: 2, scope: !1516)
!1519 = !DILocalVariable(name: "$ret19", scope: !1516, file: !10, line: 214, type: !50)
!1520 = distinct !DISubprogram(name: "subnet.command_line_arguments..thunk6", scope: null, file: !10, line: 260, type: !1521, isLocal: true, isDefinition: true, scopeLine: 260, isOptimized: false, unit: !1, retainedNodes: !3)
!1521 = !DISubroutineType(types: !1522)
!1522 = !{!50, !1523}
!1523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1524, size: 64)
!1524 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*Mutex}", file: !18, size: 64, align: 8, elements: !1525)
!1525 = !{!1526}
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "a0", file: !18, line: 260, baseType: !1527, size: 64, align: 64)
!1527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !547, size: 64)
!1528 = !DILocalVariable(name: "__go_thunk_parameter", arg: 1, scope: !1520, file: !10, line: 260, type: !1523)
!1529 = !DILocation(line: 260, column: 2, scope: !1520)
!1530 = !DILocalVariable(name: "$ret20", scope: !1520, file: !10, line: 260, type: !50)
!1531 = distinct !DISubprogram(name: "subnet.commandExec", scope: null, file: !1174, line: 25, type: !1532, isLocal: true, isDefinition: true, scopeLine: 25, isOptimized: false, unit: !1, retainedNodes: !3)
!1532 = !DISubroutineType(types: !1533)
!1533 = !{!13, !55, !260, !50}
!1534 = !DILocalVariable(name: "args", arg: 2, scope: !1531, file: !1174, line: 25, type: !260)
!1535 = !DILocation(line: 25, column: 34, scope: !1531)
!1536 = !DILocalVariable(name: "command", arg: 1, scope: !1531, file: !1174, line: 25, type: !55)
!1537 = !DILocation(line: 25, column: 18, scope: !1531)
!1538 = !DILocalVariable(name: "debug", arg: 3, scope: !1531, file: !1174, line: 25, type: !50)
!1539 = !DILocation(line: 25, column: 49, scope: !1531)
!1540 = !DILocation(line: 26, column: 14, scope: !1541)
!1541 = distinct !DILexicalBlock(scope: !1531, file: !1174, line: 25, column: 1)
!1542 = !DILocalVariable(name: "cmd", scope: !1541, file: !1174, line: 26, type: !1543)
!1543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1544, size: 64)
!1544 = !DICompositeType(tag: DW_TAG_structure_type, name: "Cmd", file: !1174, line: 8, size: 2624, align: 8, elements: !1545)
!1545 = !{!1546, !1547, !1548, !1549, !1550, !1551, !1552, !1553, !1558, !1604, !1612, !1645, !1669, !1670, !1671, !1672, !1683, !1684, !1696, !1697}
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "Path", file: !1174, line: 8, baseType: !55, size: 128, align: 64)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "Args", file: !1174, line: 8, baseType: !260, size: 192, align: 64, offset: 128)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "Env", file: !1174, line: 8, baseType: !260, size: 192, align: 64, offset: 320)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "Dir", file: !1174, line: 8, baseType: !55, size: 128, align: 64, offset: 512)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "Stdin", file: !1174, line: 8, baseType: !161, size: 128, align: 64, offset: 640)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "Stdout", file: !1174, line: 8, baseType: !536, size: 128, align: 64, offset: 768)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "Stderr", file: !1174, line: 8, baseType: !536, size: 128, align: 64, offset: 896)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "ExtraFiles", file: !1174, line: 8, baseType: !1554, size: 192, align: 64, offset: 1024)
!1554 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{**File,int,int}", file: !18, size: 192, align: 8, elements: !1555)
!1555 = !{!1556, !76, !77}
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !18, line: 1, baseType: !1557, size: 64, align: 64)
!1557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1274, size: 64)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "SysProcAttr", file: !1174, line: 8, baseType: !1559, size: 64, align: 64, offset: 1216)
!1559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1560, size: 64)
!1560 = !DICompositeType(tag: DW_TAG_structure_type, name: "SysProcAttr", file: !1234, line: 9, size: 1280, align: 8, elements: !1561)
!1561 = !{!1562, !1563, !1575, !1576, !1577, !1578, !1579, !1580, !1581, !1582, !1583, !1585, !1586, !1587, !1597, !1598, !1599}
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "Chroot", file: !1234, line: 9, baseType: !55, size: 128, align: 64)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "Credential", file: !1234, line: 9, baseType: !1564, size: 64, align: 64, offset: 128)
!1564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1565, size: 64)
!1565 = !DICompositeType(tag: DW_TAG_structure_type, name: "Credential", file: !1234, line: 9, size: 320, align: 8, elements: !1566)
!1566 = !{!1567, !1568, !1569, !1574}
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "Uid", file: !1234, line: 9, baseType: !8, size: 32, align: 32)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "Gid", file: !1234, line: 9, baseType: !8, size: 32, align: 32, offset: 32)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "Groups", file: !1234, line: 9, baseType: !1570, size: 192, align: 64, offset: 64)
!1570 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*uint32,int,int}", file: !18, size: 192, align: 8, elements: !1571)
!1571 = !{!1572, !76, !77}
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !18, line: 1, baseType: !1573, size: 64, align: 64)
!1573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8, size: 64)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "NoSetGroups", file: !1234, line: 9, baseType: !50, size: 8, align: 8, offset: 256)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "Ptrace", file: !1234, line: 9, baseType: !50, size: 8, align: 8, offset: 192)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "Setsid", file: !1234, line: 9, baseType: !50, size: 8, align: 8, offset: 200)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "Setpgid", file: !1234, line: 9, baseType: !50, size: 8, align: 8, offset: 208)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "Setctty", file: !1234, line: 9, baseType: !50, size: 8, align: 8, offset: 216)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "Noctty", file: !1234, line: 9, baseType: !50, size: 8, align: 8, offset: 224)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "Ctty", file: !1234, line: 9, baseType: !59, size: 64, align: 64, offset: 256)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "Foreground", file: !1234, line: 9, baseType: !50, size: 8, align: 8, offset: 320)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "Pgid", file: !1234, line: 9, baseType: !59, size: 64, align: 64, offset: 384)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "Pdeathsig", file: !1234, line: 9, baseType: !1584, size: 64, align: 64, offset: 448)
!1584 = !DIBasicType(name: "Signal", size: 64, encoding: DW_ATE_signed)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "Cloneflags", file: !1234, line: 9, baseType: !25, size: 64, align: 64, offset: 512)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "Unshareflags", file: !1234, line: 9, baseType: !25, size: 64, align: 64, offset: 576)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "UidMappings", file: !1234, line: 9, baseType: !1588, size: 192, align: 64, offset: 640)
!1588 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*SysProcIDMap,int,int}", file: !18, size: 192, align: 8, elements: !1589)
!1589 = !{!1590, !76, !77}
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !18, line: 1, baseType: !1591, size: 64, align: 64)
!1591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1592, size: 64)
!1592 = !DICompositeType(tag: DW_TAG_structure_type, name: "SysProcIDMap", file: !1234, line: 9, size: 192, align: 8, elements: !1593)
!1593 = !{!1594, !1595, !1596}
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "ContainerID", file: !1234, line: 9, baseType: !59, size: 64, align: 64)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "HostID", file: !1234, line: 9, baseType: !59, size: 64, align: 64, offset: 64)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "Size", file: !1234, line: 9, baseType: !59, size: 64, align: 64, offset: 128)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "GidMappings", file: !1234, line: 9, baseType: !1588, size: 192, align: 64, offset: 832)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "GidMappingsEnableSetgroups", file: !1234, line: 9, baseType: !50, size: 8, align: 8, offset: 1024)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "AmbientCaps", file: !1234, line: 9, baseType: !1600, size: 192, align: 64, offset: 1088)
!1600 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*uintptr,int,int}", file: !18, size: 192, align: 8, elements: !1601)
!1601 = !{!1602, !76, !77}
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !18, line: 1, baseType: !1603, size: 64, align: 64)
!1603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !25, size: 64)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "Process", file: !1174, line: 8, baseType: !1605, size: 64, align: 64, offset: 1280)
!1605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1606, size: 64)
!1606 = !DICompositeType(tag: DW_TAG_structure_type, name: "Process", file: !1234, line: 9, size: 384, align: 8, elements: !1607)
!1607 = !{!1608, !1609, !1610, !1611}
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "Pid", file: !1234, line: 9, baseType: !59, size: 64, align: 64)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "handle", file: !1234, line: 9, baseType: !25, size: 64, align: 64, offset: 64)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "isdone", file: !1234, line: 9, baseType: !8, size: 32, align: 32, offset: 128)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "sigMu", file: !1234, line: 9, baseType: !554, size: 192, align: 32, offset: 160)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "ProcessState", file: !1174, line: 8, baseType: !1613, size: 64, align: 64, offset: 1344)
!1613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1614, size: 64)
!1614 = !DICompositeType(tag: DW_TAG_structure_type, name: "ProcessState", file: !1234, line: 9, size: 192, align: 8, elements: !1615)
!1615 = !{!1616, !1617, !1619}
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "pid", file: !1234, line: 9, baseType: !59, size: 64, align: 64)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "status", file: !1234, line: 9, baseType: !1618, size: 32, align: 32, offset: 64)
!1618 = !DIBasicType(name: "WaitStatus", size: 32, encoding: DW_ATE_unsigned)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "rusage", file: !1234, line: 9, baseType: !1620, size: 64, align: 64, offset: 128)
!1620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1621, size: 64)
!1621 = !DICompositeType(tag: DW_TAG_structure_type, name: "Rusage", file: !1234, line: 9, size: 1152, align: 8, elements: !1622)
!1622 = !{!1623, !1630, !1631, !1632, !1633, !1634, !1635, !1636, !1637, !1638, !1639, !1640, !1641, !1642, !1643, !1644}
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "Utime", file: !1234, line: 9, baseType: !1624, size: 128, align: 64)
!1624 = !DICompositeType(tag: DW_TAG_structure_type, name: "Timeval", file: !1234, line: 9, size: 128, align: 8, elements: !1625)
!1625 = !{!1626, !1628}
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "Sec", file: !1234, line: 9, baseType: !1627, size: 64, align: 64)
!1627 = !DIBasicType(name: "Timeval_sec_t", size: 64, encoding: DW_ATE_signed)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "Usec", file: !1234, line: 9, baseType: !1629, size: 64, align: 64, offset: 64)
!1629 = !DIBasicType(name: "Timeval_usec_t", size: 64, encoding: DW_ATE_signed)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "Stime", file: !1234, line: 9, baseType: !1624, size: 128, align: 64, offset: 128)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "Maxrss", file: !1234, line: 9, baseType: !182, size: 64, align: 64, offset: 256)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "Ixrss", file: !1234, line: 9, baseType: !182, size: 64, align: 64, offset: 320)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "Idrss", file: !1234, line: 9, baseType: !182, size: 64, align: 64, offset: 384)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "Isrss", file: !1234, line: 9, baseType: !182, size: 64, align: 64, offset: 448)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "Minflt", file: !1234, line: 9, baseType: !182, size: 64, align: 64, offset: 512)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "Majflt", file: !1234, line: 9, baseType: !182, size: 64, align: 64, offset: 576)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "Nswap", file: !1234, line: 9, baseType: !182, size: 64, align: 64, offset: 640)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "Inblock", file: !1234, line: 9, baseType: !182, size: 64, align: 64, offset: 704)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "Oublock", file: !1234, line: 9, baseType: !182, size: 64, align: 64, offset: 768)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "Msgsnd", file: !1234, line: 9, baseType: !182, size: 64, align: 64, offset: 832)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "Msgrcv", file: !1234, line: 9, baseType: !182, size: 64, align: 64, offset: 896)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "Nsignals", file: !1234, line: 9, baseType: !182, size: 64, align: 64, offset: 960)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "Nvcsw", file: !1234, line: 9, baseType: !182, size: 64, align: 64, offset: 1024)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "Nivcsw", file: !1234, line: 9, baseType: !182, size: 64, align: 64, offset: 1088)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", file: !1174, line: 8, baseType: !1646, size: 128, align: 64, offset: 1408)
!1646 = !DICompositeType(tag: DW_TAG_structure_type, name: "Context", file: !10, line: 4, size: 128, align: 8, elements: !1647)
!1647 = !{!1648, !154}
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "__methods", file: !10, line: 4, baseType: !1649, size: 64, align: 64)
!1649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1650, size: 64)
!1650 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*_type,*func(*void)struct{Time,bool},*func(*void)*__go_channel,*func(*void)error,*func(*void,PrivateKey)PrivateKey}", file: !18, size: 320, align: 8, elements: !1651)
!1651 = !{!167, !1652, !1660, !1664, !1665}
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "Deadline", file: !18, line: 4, baseType: !1653, size: 64, align: 64, offset: 64)
!1653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1654, size: 64)
!1654 = !DISubroutineType(types: !1655)
!1655 = !{!1656, !40}
!1656 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{Time,bool}", file: !18, size: 256, align: 8, elements: !1657)
!1657 = !{!1658, !1659}
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", file: !18, line: 4, baseType: !177, size: 192, align: 64)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "ok", file: !18, line: 4, baseType: !50, size: 8, align: 8, offset: 192)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "Done", file: !18, line: 4, baseType: !1661, size: 64, align: 64, offset: 128)
!1661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1662, size: 64)
!1662 = !DISubroutineType(types: !1663)
!1663 = !{!122, !40}
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "Err", file: !18, line: 4, baseType: !139, size: 64, align: 64, offset: 192)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "Value", file: !18, line: 4, baseType: !1666, size: 64, align: 64, offset: 256)
!1666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1667, size: 64)
!1667 = !DISubroutineType(types: !1668)
!1668 = !{!224, !40, !224}
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "lookPathErr", file: !1174, line: 8, baseType: !13, size: 128, align: 64, offset: 1536)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "finished", file: !1174, line: 8, baseType: !50, size: 8, align: 8, offset: 1664)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "childFiles", file: !1174, line: 8, baseType: !1554, size: 192, align: 64, offset: 1728)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "closeAfterStart", file: !1174, line: 8, baseType: !1673, size: 192, align: 64, offset: 1920)
!1673 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*Closer,int,int}", file: !18, size: 192, align: 8, elements: !1674)
!1674 = !{!1675, !76, !77}
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !18, line: 1, baseType: !1676, size: 64, align: 64)
!1676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1677, size: 64)
!1677 = !DICompositeType(tag: DW_TAG_structure_type, name: "Closer", file: !10, line: 4, size: 128, align: 8, elements: !1678)
!1678 = !{!1679, !154}
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "__methods", file: !10, line: 4, baseType: !1680, size: 64, align: 64)
!1680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1681, size: 64)
!1681 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*_type,*func(*void)error}", file: !18, size: 128, align: 8, elements: !1682)
!1682 = !{!167, !419}
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "closeAfterWait", file: !1174, line: 8, baseType: !1673, size: 192, align: 64, offset: 2112)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "goroutine", file: !1174, line: 8, baseType: !1685, size: 192, align: 64, offset: 2304)
!1685 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{**__go_descriptor,int,int}", file: !18, size: 192, align: 8, elements: !1686)
!1686 = !{!1687, !76, !77}
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !18, line: 1, baseType: !1688, size: 64, align: 64)
!1688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1689, size: 64)
!1689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1690, size: 64)
!1690 = !DICompositeType(tag: DW_TAG_structure_type, name: "__go_descriptor", file: !10, line: 4, size: 64, align: 8, elements: !1691)
!1691 = !{!1692}
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "code", file: !10, line: 4, baseType: !1693, size: 64, align: 64)
!1693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1694, size: 64)
!1694 = !DISubroutineType(types: !1695)
!1695 = !{!13}
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "errch", file: !1174, line: 8, baseType: !122, size: 64, align: 64, offset: 2496)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "waitDone", file: !1174, line: 8, baseType: !122, size: 64, align: 64, offset: 2560)
!1698 = !DILocation(line: 26, column: 2, scope: !1531)
!1699 = !DILocation(line: 27, column: 2, scope: !1541)
!1700 = !DILocation(line: 28, column: 20, scope: !1541)
!1701 = !DILocation(line: 28, column: 7, scope: !1541)
!1702 = !DILocation(line: 30, column: 10, scope: !1541)
!1703 = !DILocalVariable(name: "e", scope: !1541, file: !1174, line: 30, type: !13)
!1704 = !DILocation(line: 30, column: 2, scope: !1531)
!1705 = !DILocation(line: 31, column: 7, scope: !1541)
!1706 = !DILocation(line: 32, column: 7, scope: !1541)
!1707 = !DILocation(line: 32, column: 35, scope: !1541)
!1708 = !DILocalVariable(name: "$ret17", scope: !1531, file: !1174, line: 25, type: !13)
!1709 = !DILocation(line: 25, column: 61, scope: !1531)
!1710 = !DILocation(line: 34, column: 2, scope: !1541)
!1711 = distinct !DISubprogram(name: "subnet.DelRoute", linkageName: "command_line_arguments.DelRoute", scope: null, file: !1234, line: 47, type: !1418, isLocal: false, isDefinition: true, scopeLine: 47, isOptimized: false, unit: !1, retainedNodes: !3)
!1712 = !DILocalVariable(name: "viaAddr", arg: 2, scope: !1711, file: !1234, line: 47, type: !102)
!1713 = !DILocation(line: 47, column: 21, scope: !1711)
!1714 = !DILocalVariable(name: "addr", arg: 1, scope: !1711, file: !1234, line: 47, type: !102)
!1715 = !DILocation(line: 47, column: 15, scope: !1711)
!1716 = !DILocalVariable(name: "iName", arg: 3, scope: !1711, file: !1234, line: 47, type: !55)
!1717 = !DILocation(line: 47, column: 37, scope: !1711)
!1718 = !DILocalVariable(name: "debug", arg: 4, scope: !1711, file: !1234, line: 47, type: !50)
!1719 = !DILocation(line: 47, column: 51, scope: !1711)
!1720 = !DILocation(line: 48, column: 50, scope: !1721)
!1721 = distinct !DILexicalBlock(scope: !1711, file: !1234, line: 47, column: 1)
!1722 = !DILocation(line: 48, column: 68, scope: !1721)
!1723 = !DILocation(line: 48, column: 15, scope: !1721)
!1724 = !DILocalVariable(name: "sargs", scope: !1721, file: !1234, line: 48, type: !55)
!1725 = !DILocation(line: 48, column: 2, scope: !1711)
!1726 = !DILocation(line: 49, column: 18, scope: !1721)
!1727 = !DILocalVariable(name: "args", scope: !1721, file: !1234, line: 49, type: !260)
!1728 = !DILocation(line: 49, column: 2, scope: !1711)
!1729 = !DILocation(line: 50, column: 9, scope: !1721)
!1730 = !DILocation(line: 50, column: 2, scope: !1721)
!1731 = distinct !DISubprogram(name: "subnet.command_line_arguments..thunk7", scope: null, file: !1234, line: 61, type: !1732, isLocal: true, isDefinition: true, scopeLine: 61, isOptimized: false, unit: !1, retainedNodes: !3)
!1732 = !DISubroutineType(types: !1733)
!1733 = !{!50, !1734}
!1734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1735, size: 64)
!1735 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*File}", file: !18, size: 64, align: 8, elements: !1736)
!1736 = !{!1737}
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "a0", file: !18, line: 61, baseType: !1274, size: 64, align: 64)
!1738 = !DILocalVariable(name: "__go_thunk_parameter", arg: 1, scope: !1731, file: !1234, line: 61, type: !1734)
!1739 = !DILocation(line: 61, column: 2, scope: !1731)
!1740 = !DILocalVariable(name: "$ret21", scope: !1731, file: !1234, line: 61, type: !50)
!1741 = distinct !DISubprogram(name: "subnet.GetNetGateway..func1", scope: null, file: !1234, line: 64, type: !1742, isLocal: true, isDefinition: true, scopeLine: 64, isOptimized: false, unit: !1, retainedNodes: !3)
!1742 = !DISubroutineType(types: !1743)
!1743 = !{!29, !55}
!1744 = !DILocalVariable(name: "s", arg: 1, scope: !1741, file: !1234, line: 64, type: !55)
!1745 = !DILocation(line: 64, column: 17, scope: !1741)
!1746 = !DILocalVariable(name: "$ret10", scope: !1741, file: !1234, line: 64, type: !29)
!1747 = !DILocation(line: 64, column: 27, scope: !1741)
!1748 = !DILocation(line: 65, column: 19, scope: !1749)
!1749 = distinct !DILexicalBlock(scope: !1741, file: !1234, line: 64, column: 12)
!1750 = !DILocalVariable(name: "b", scope: !1749, file: !1234, line: 65, type: !180)
!1751 = !DILocation(line: 65, column: 3, scope: !1741)
!1752 = !DILocation(line: 66, column: 10, scope: !1749)
!1753 = !DILocation(line: 66, column: 3, scope: !1749)
!1754 = distinct !DISubprogram(name: "subnet.hadError..1command_line_arguments.serverConn", linkageName: "command_line_arguments.serverConn.hadError", scope: null, file: !1755, line: 105, type: !1756, isLocal: false, isDefinition: true, scopeLine: 105, isOptimized: false, unit: !1, retainedNodes: !3)
!1755 = !DIFile(filename: "server_conn.go", directory: ".")
!1756 = !DISubroutineType(types: !1757)
!1757 = !{!41, !1758, !1758, !50}
!1758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1759, size: 64)
!1759 = !DICompositeType(tag: DW_TAG_structure_type, name: ".command-line-arguments.serverConn", file: !1755, line: 11, size: 640, align: 8, elements: !1760)
!1760 = !{!1761, !1762, !1763, !1764, !1800, !1801, !1802}
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "conn", file: !1755, line: 12, baseType: !413, size: 128, align: 64)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "id", file: !1755, line: 13, baseType: !59, size: 64, align: 64, offset: 128)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "outboundIPPkts", file: !1755, line: 15, baseType: !122, size: 64, align: 64, offset: 192)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "server", file: !1755, line: 17, baseType: !1765, size: 64, align: 64, offset: 256)
!1765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1766, size: 64)
!1766 = !DICompositeType(tag: DW_TAG_structure_type, name: "Server", file: !1767, line: 17, size: 1600, align: 8, elements: !1768)
!1767 = !DIFile(filename: "server.go", directory: ".")
!1768 = !{!1769, !1770, !1787, !1788, !1789, !1790, !1791, !1792, !1793, !1794, !1795, !1796, !1797, !1798, !1799}
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "tlsConf", file: !1767, line: 18, baseType: !157, size: 64, align: 64)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "tlsListener", file: !1767, line: 19, baseType: !1771, size: 128, align: 64, offset: 64)
!1771 = !DICompositeType(tag: DW_TAG_structure_type, name: "Listener", file: !10, line: 4, size: 128, align: 8, elements: !1772)
!1772 = !{!1773, !154}
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "__methods", file: !10, line: 4, baseType: !1774, size: 64, align: 64)
!1774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1775, size: 64)
!1775 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*_type,*func(*void)struct{Conn,error},*func(*void)Addr,*func(*void)error}", file: !18, size: 256, align: 8, elements: !1776)
!1776 = !{!167, !1777, !1785, !1786}
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "Accept", file: !18, line: 4, baseType: !1778, size: 64, align: 64, offset: 64)
!1778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1779, size: 64)
!1779 = !DISubroutineType(types: !1780)
!1780 = !{!1781, !40}
!1781 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{Conn,error}", file: !18, size: 256, align: 8, elements: !1782)
!1782 = !{!1783, !1784}
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "UNNAMED", file: !18, line: 4, baseType: !413, size: 128, align: 64)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "UNNAMED", file: !18, line: 4, baseType: !13, size: 128, align: 64, offset: 128)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "Addr", file: !18, line: 4, baseType: !421, size: 64, align: 64, offset: 128)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "Close", file: !18, line: 4, baseType: !139, size: 64, align: 64, offset: 192)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "localAddr", file: !1767, line: 20, baseType: !102, size: 192, align: 64, offset: 192)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "localNetMask", file: !1767, line: 21, baseType: !114, size: 64, align: 64, offset: 384)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "isShuttingDown", file: !1767, line: 22, baseType: !50, size: 8, align: 8, offset: 448)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "clientIDByAddress", file: !1767, line: 24, baseType: !363, size: 64, align: 64, offset: 512)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "clients", file: !1767, line: 25, baseType: !363, size: 64, align: 64, offset: 576)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "clientsLock", file: !1767, line: 26, baseType: !547, size: 64, align: 32, offset: 640)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "lastClientID", file: !1767, line: 27, baseType: !59, size: 64, align: 64, offset: 704)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "inboundIPPkts", file: !1767, line: 29, baseType: !122, size: 64, align: 64, offset: 768)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "inboundDevPkts", file: !1767, line: 30, baseType: !122, size: 64, align: 64, offset: 832)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "outboundDevPkts", file: !1767, line: 31, baseType: !122, size: 64, align: 64, offset: 896)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "intf", file: !1767, line: 33, baseType: !126, size: 64, align: 64, offset: 960)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "reverser", file: !1767, line: 34, baseType: !694, size: 448, align: 64, offset: 1024)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "wg", file: !1767, line: 35, baseType: !92, size: 128, align: 32, offset: 1472)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "canSendIP", file: !1755, line: 18, baseType: !50, size: 8, align: 8, offset: 320)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "remoteAddrs", file: !1755, line: 19, baseType: !109, size: 192, align: 64, offset: 384)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "connectionOk", file: !1755, line: 21, baseType: !50, size: 8, align: 8, offset: 576)
!1803 = !DILocalVariable(name: "c", arg: 1, scope: !1754, file: !1755, line: 105, type: !1758)
!1804 = !DILocation(line: 105, column: 1, scope: !1754)
!1805 = !DILocalVariable(name: "errInRead", arg: 2, scope: !1754, file: !1755, line: 105, type: !50)
!1806 = !DILocation(line: 105, column: 31, scope: !1754)
!1807 = !DILocation(line: 106, column: 5, scope: !1754)
!1808 = !DILocation(line: 0, scope: !1754)
!1809 = !DILocation(line: 107, column: 4, scope: !1754)
!1810 = !DILocation(line: 107, column: 9, scope: !1754)
!1811 = !DILocation(line: 109, column: 3, scope: !1754)
!1812 = !DILocation(line: 109, column: 17, scope: !1754)
!1813 = !DILocation(line: 110, column: 3, scope: !1754)
!1814 = !DILocation(line: 110, column: 29, scope: !1754)
!1815 = !DILocation(line: 110, column: 10, scope: !1754)
!1816 = distinct !DISubprogram(name: "subnet.Close..1command_line_arguments.Server", linkageName: "command_line_arguments.Server.Close", scope: null, file: !1767, line: 195, type: !1817, isLocal: false, isDefinition: true, scopeLine: 195, isOptimized: false, unit: !1, retainedNodes: !3)
!1817 = !DISubroutineType(types: !1818)
!1818 = !{!13, !1765, !1765}
!1819 = !DILocalVariable(name: "s", arg: 1, scope: !1816, file: !1767, line: 195, type: !1765)
!1820 = !DILocation(line: 195, column: 1, scope: !1816)
!1821 = !DILocation(line: 196, column: 3, scope: !1822)
!1822 = distinct !DILexicalBlock(scope: !1816, file: !1767, line: 195, column: 1)
!1823 = !DILocation(line: 196, column: 19, scope: !1822)
!1824 = !DILocation(line: 197, column: 3, scope: !1822)
!1825 = !DILocation(line: 197, column: 12, scope: !1822)
!1826 = !DILocation(line: 199, column: 22, scope: !1822)
!1827 = !DILocalVariable(name: "err", scope: !1822, file: !1767, line: 199, type: !13)
!1828 = !DILocation(line: 199, column: 2, scope: !1816)
!1829 = !DILocation(line: 200, column: 9, scope: !1822)
!1830 = !DILocalVariable(name: "$ret14", scope: !1816, file: !1767, line: 195, type: !13)
!1831 = !DILocation(line: 195, column: 26, scope: !1816)
!1832 = !DILocation(line: 201, column: 3, scope: !1822)
!1833 = !DILocation(line: 203, column: 9, scope: !1822)
!1834 = !DILocation(line: 203, column: 14, scope: !1822)
!1835 = !DILocation(line: 204, column: 9, scope: !1822)
!1836 = distinct !DISubprogram(name: "subnet.Init..1command_line_arguments.Server", linkageName: "command_line_arguments.Server.Init", scope: null, file: !1767, line: 74, type: !1837, isLocal: false, isDefinition: true, scopeLine: 74, isOptimized: false, unit: !1, retainedNodes: !3)
!1837 = !DISubroutineType(types: !1838)
!1838 = !{!13, !1765, !1765, !55}
!1839 = !DILocalVariable(name: "s", arg: 1, scope: !1836, file: !1767, line: 74, type: !1765)
!1840 = !DILocation(line: 74, column: 1, scope: !1836)
!1841 = !DILocalVariable(name: "servHost", arg: 2, scope: !1836, file: !1767, line: 74, type: !55)
!1842 = !DILocation(line: 74, column: 23, scope: !1836)
!1843 = !DILocation(line: 75, column: 52, scope: !1836)
!1844 = !DILocation(line: 75, column: 27, scope: !1836)
!1845 = !DILocation(line: 75, column: 3, scope: !1836)
!1846 = !DILocation(line: 75, column: 21, scope: !1836)
!1847 = !DILocalVariable(name: "err", scope: !1836, file: !1767, line: 74, type: !13)
!1848 = !DILocation(line: 74, column: 41, scope: !1836)
!1849 = !DILocation(line: 76, column: 9, scope: !1836)
!1850 = !DILocation(line: 77, column: 3, scope: !1836)
!1851 = !DILocation(line: 79, column: 21, scope: !1836)
!1852 = !DILocation(line: 79, column: 26, scope: !1836)
!1853 = !DILocation(line: 79, column: 36, scope: !1836)
!1854 = !DILocation(line: 79, column: 49, scope: !1836)
!1855 = !DILocation(line: 79, column: 11, scope: !1836)
!1856 = !DILocation(line: 79, column: 76, scope: !1836)
!1857 = !DILocation(line: 80, column: 3, scope: !1836)
!1858 = !DILocation(line: 83, column: 14, scope: !1836)
!1859 = !DILocation(line: 83, column: 19, scope: !1836)
!1860 = !DILocation(line: 83, column: 39, scope: !1836)
!1861 = !DILocation(line: 83, column: 58, scope: !1836)
!1862 = !DILocation(line: 83, column: 71, scope: !1836)
!1863 = !DILocation(line: 83, column: 77, scope: !1836)
!1864 = !DILocation(line: 82, column: 6, scope: !1836)
!1865 = !DILocation(line: 84, column: 2, scope: !1836)
!1866 = distinct !DISubprogram(name: "subnet.Run..1command_line_arguments.Server", linkageName: "command_line_arguments.Server.Run", scope: null, file: !1767, line: 88, type: !1867, isLocal: false, isDefinition: true, scopeLine: 88, isOptimized: false, unit: !1, retainedNodes: !3)
!1867 = !DISubroutineType(types: !1868)
!1868 = !{!41, !1765, !1765}
!1869 = !DILocalVariable(name: "s", arg: 1, scope: !1866, file: !1767, line: 88, type: !1765)
!1870 = !DILocation(line: 88, column: 1, scope: !1866)
!1871 = !DILocation(line: 89, column: 2, scope: !1866)
!1872 = !DILocation(line: 90, column: 2, scope: !1866)
!1873 = !DILocation(line: 91, column: 22, scope: !1866)
!1874 = !DILocation(line: 91, column: 30, scope: !1866)
!1875 = !DILocation(line: 91, column: 50, scope: !1866)
!1876 = !DILocation(line: 91, column: 57, scope: !1866)
!1877 = !DILocation(line: 91, column: 2, scope: !1866)
!1878 = !DILocation(line: 92, column: 21, scope: !1866)
!1879 = !DILocation(line: 92, column: 29, scope: !1866)
!1880 = !DILocation(line: 92, column: 2, scope: !1866)
!1881 = distinct !DISubprogram(name: "subnet.acceptRoutine..1command_line_arguments.Server", linkageName: "command_line_arguments.Server.acceptRoutine", scope: null, file: !1767, line: 95, type: !1867, isLocal: false, isDefinition: true, scopeLine: 95, isOptimized: false, unit: !1, retainedNodes: !3)
!1882 = !DILocalVariable(name: "s", arg: 1, scope: !1881, file: !1767, line: 95, type: !1765)
!1883 = !DILocation(line: 95, column: 1, scope: !1881)
!1884 = !DILocalVariable(name: "tcpListener", scope: !1885, file: !1767, line: 96, type: !1886)
!1885 = distinct !DILexicalBlock(scope: !1881, file: !1767, line: 95, column: 1)
!1886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1887, size: 64)
!1887 = !DICompositeType(tag: DW_TAG_structure_type, name: "TCPListener", file: !10, line: 8, size: 64, align: 8, elements: !1888)
!1888 = !{!1889}
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "fd", file: !10, line: 8, baseType: !1890, size: 64, align: 64)
!1890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1891, size: 64)
!1891 = !DICompositeType(tag: DW_TAG_structure_type, name: ".net.netFD", file: !10, line: 8, size: 960, align: 8, elements: !1892)
!1892 = !{!1281, !1893, !1894, !1895, !1896, !1897, !1898}
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "family", file: !10, line: 8, baseType: !59, size: 64, align: 64, offset: 384)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "sotype", file: !10, line: 8, baseType: !59, size: 64, align: 64, offset: 448)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "isConnected", file: !10, line: 8, baseType: !50, size: 8, align: 8, offset: 512)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "net", file: !10, line: 8, baseType: !55, size: 128, align: 64, offset: 576)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "laddr", file: !10, line: 8, baseType: !424, size: 128, align: 64, offset: 704)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "raddr", file: !10, line: 8, baseType: !424, size: 128, align: 64, offset: 832)
!1899 = !DILocation(line: 96, column: 6, scope: !1881)
!1900 = !DILocation(line: 97, column: 20, scope: !1885)
!1901 = !DILocation(line: 114, column: 1, scope: !1881)
!1902 = !DILocation(line: 97, column: 17, scope: !1885)
!1903 = !DILocation(line: 98, column: 3, scope: !1885)
!1904 = !DILocation(line: 98, column: 6, scope: !1885)
!1905 = !DILocation(line: 99, column: 2, scope: !1885)
!1906 = !DILocation(line: 101, column: 8, scope: !1885)
!1907 = !DILocation(line: 103, column: 33, scope: !1908)
!1908 = distinct !DILexicalBlock(scope: !1885, file: !1767, line: 101, column: 24)
!1909 = !DILocation(line: 103, column: 38, scope: !1908)
!1910 = !DILocation(line: 103, column: 15, scope: !1908)
!1911 = !DILocation(line: 105, column: 29, scope: !1908)
!1912 = !DILocalVariable(name: "err", scope: !1908, file: !1767, line: 105, type: !13)
!1913 = !DILocation(line: 105, column: 3, scope: !1885)
!1914 = !DILocation(line: 106, column: 10, scope: !1908)
!1915 = !DILocalVariable(name: "conn", scope: !1908, file: !1767, line: 105, type: !413)
!1916 = !DILocation(line: 112, column: 4, scope: !1908)
!1917 = !DILocation(line: 107, column: 9, scope: !1908)
!1918 = !DILocation(line: 107, column: 7, scope: !1908)
!1919 = !DILocation(line: 108, column: 41, scope: !1908)
!1920 = !DILocation(line: 108, column: 9, scope: !1908)
!1921 = !DILocation(line: 101, column: 6, scope: !1885)
!1922 = !DILocation(line: 110, column: 4, scope: !1881)
!1923 = distinct !DISubprogram(name: "subnet.dispatchRoutine..1command_line_arguments.Server", linkageName: "command_line_arguments.Server.dispatchRoutine", scope: null, file: !1767, line: 158, type: !1867, isLocal: false, isDefinition: true, scopeLine: 158, isOptimized: false, unit: !1, retainedNodes: !3)
!1924 = !DILocalVariable(name: "s", arg: 1, scope: !1923, file: !1767, line: 158, type: !1765)
!1925 = !DILocation(line: 158, column: 1, scope: !1923)
!1926 = !DILocation(line: 159, column: 8, scope: !1923)
!1927 = !DILocation(line: 159, column: 6, scope: !1923)
!1928 = !DILocation(line: 161, column: 3, scope: !1929)
!1929 = distinct !DILexicalBlock(scope: !1923, file: !1767, line: 163, column: 4)
!1930 = !DILocalVariable(name: "pkt", scope: !1929, file: !1767, line: 161, type: !1931)
!1931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1932, size: 64)
!1932 = !DICompositeType(tag: DW_TAG_structure_type, name: ".command-line-arguments.inboundIPPkt", file: !938, line: 16, size: 128, align: 8, elements: !1933)
!1933 = !{!1934, !1935}
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "pkt", file: !938, line: 17, baseType: !936, size: 64, align: 64)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "clientID", file: !938, line: 18, baseType: !59, size: 64, align: 64, offset: 64)
!1936 = !DILocation(line: 161, column: 3, scope: !1923)
!1937 = !DILocation(line: 163, column: 15, scope: !1929)
!1938 = !DILocation(line: 164, column: 3, scope: !1939)
!1939 = distinct !DILexicalBlock(scope: !1923, file: !1767, line: 166, column: 4)
!1940 = !DILocalVariable(name: "pkt", scope: !1939, file: !1767, line: 164, type: !936)
!1941 = !DILocation(line: 164, column: 3, scope: !1923)
!1942 = !DILocation(line: 166, column: 5, scope: !1939)
!1943 = !DILocation(line: 163, column: 5, scope: !1929)
!1944 = !DILocation(line: 160, column: 3, scope: !1923)
!1945 = !DILocation(line: 161, column: 18, scope: !1923)
!1946 = !DILocation(line: 164, column: 18, scope: !1923)
!1947 = distinct !DISubprogram(name: "subnet.enrollClientConn..1command_line_arguments.Server", linkageName: "command_line_arguments.Server.enrollClientConn", scope: null, file: !1767, line: 125, type: !1948, isLocal: false, isDefinition: true, scopeLine: 125, isOptimized: false, unit: !1, retainedNodes: !3)
!1948 = !DISubroutineType(types: !1949)
!1949 = !{!41, !1765, !1765, !1758}
!1950 = !DILocalVariable(name: "s", arg: 1, scope: !1947, file: !1767, line: 125, type: !1765)
!1951 = !DILocation(line: 125, column: 1, scope: !1947)
!1952 = !DILocalVariable(name: "c", arg: 2, scope: !1947, file: !1767, line: 125, type: !1758)
!1953 = !DILocation(line: 125, column: 35, scope: !1947)
!1954 = !DILocation(line: 126, column: 3, scope: !1947)
!1955 = !DILocation(line: 131, column: 1, scope: !1947)
!1956 = !DILocation(line: 126, column: 15, scope: !1947)
!1957 = !DILocation(line: 127, column: 9, scope: !1947)
!1958 = !DILocation(line: 127, column: 2, scope: !1947)
!1959 = !DILocation(line: 128, column: 3, scope: !1947)
!1960 = !DILocation(line: 128, column: 10, scope: !1947)
!1961 = !DILocation(line: 128, column: 7, scope: !1947)
!1962 = !DILocation(line: 129, column: 3, scope: !1947)
!1963 = !DILocation(line: 130, column: 13, scope: !1947)
!1964 = !DILocation(line: 130, column: 3, scope: !1947)
!1965 = !DILocation(line: 130, column: 18, scope: !1947)
!1966 = distinct !DISubprogram(name: "subnet.handleClient..1command_line_arguments.Server", linkageName: "command_line_arguments.Server.handleClient", scope: null, file: !1767, line: 116, type: !1967, isLocal: false, isDefinition: true, scopeLine: 116, isOptimized: false, unit: !1, retainedNodes: !3)
!1967 = !DISubroutineType(types: !1968)
!1968 = !{!41, !1765, !1765, !413}
!1969 = !DILocalVariable(name: "s", arg: 1, scope: !1966, file: !1767, line: 116, type: !1765)
!1970 = !DILocation(line: 116, column: 1, scope: !1966)
!1971 = !DILocalVariable(name: "conn", arg: 2, scope: !1966, file: !1767, line: 116, type: !413)
!1972 = !DILocation(line: 116, column: 31, scope: !1966)
!1973 = !DILocation(line: 117, column: 2, scope: !1974)
!1974 = distinct !DILexicalBlock(scope: !1966, file: !1767, line: 116, column: 1)
!1975 = !DILocalVariable(name: "c", scope: !1974, file: !1767, line: 117, type: !1758)
!1976 = !DILocation(line: 117, column: 2, scope: !1966)
!1977 = !DILocation(line: 117, column: 7, scope: !1974)
!1978 = !DILocation(line: 121, column: 3, scope: !1974)
!1979 = !DILocation(line: 122, column: 3, scope: !1974)
!1980 = distinct !DISubprogram(name: "subnet.removeClientConn..1command_line_arguments.Server", linkageName: "command_line_arguments.Server.removeClientConn", scope: null, file: !1767, line: 140, type: !1981, isLocal: false, isDefinition: true, scopeLine: 140, isOptimized: false, unit: !1, retainedNodes: !3)
!1981 = !DISubroutineType(types: !1982)
!1982 = !{!41, !1765, !1765, !59}
!1983 = !DILocalVariable(name: "s", arg: 1, scope: !1980, file: !1767, line: 140, type: !1765)
!1984 = !DILocation(line: 140, column: 1, scope: !1980)
!1985 = !DILocalVariable(name: "id", arg: 2, scope: !1980, file: !1767, line: 140, type: !59)
!1986 = !DILocation(line: 140, column: 35, scope: !1980)
!1987 = !DILocation(line: 141, column: 3, scope: !1988)
!1988 = distinct !DILexicalBlock(scope: !1980, file: !1767, line: 140, column: 1)
!1989 = !DILocation(line: 155, column: 1, scope: !1980)
!1990 = !DILocation(line: 141, column: 15, scope: !1988)
!1991 = !DILocation(line: 142, column: 9, scope: !1988)
!1992 = !DILocation(line: 142, column: 2, scope: !1988)
!1993 = !DILocalVariable(name: "toDeleteAddrs", scope: !1988, file: !1767, line: 145, type: !260)
!1994 = !DILocation(line: 145, column: 6, scope: !1980)
!1995 = !DILocalVariable(name: "itemID", scope: !1996, file: !1767, line: 146, type: !59)
!1996 = distinct !DILexicalBlock(scope: !1988, file: !1767, line: 146, column: 2)
!1997 = !DILocation(line: 146, column: 6, scope: !1988)
!1998 = !DILocation(line: 146, column: 29, scope: !1996)
!1999 = !DILocation(line: 146, column: 2, scope: !1996)
!2000 = !DILocation(line: 148, column: 20, scope: !1996)
!2001 = !DILocation(line: 148, column: 18, scope: !1996)
!2002 = !DILocation(line: 147, column: 13, scope: !1996)
!2003 = !DILocation(line: 151, column: 2, scope: !2004)
!2004 = distinct !DILexicalBlock(scope: !1988, file: !1767, line: 151, column: 2)
!2005 = !DILocation(line: 152, column: 11, scope: !2004)
!2006 = !DILocation(line: 152, column: 3, scope: !2004)
!2007 = !DILocation(line: 154, column: 10, scope: !1988)
!2008 = !DILocation(line: 154, column: 2, scope: !1988)
!2009 = distinct !DISubprogram(name: "subnet.route..1command_line_arguments.Server", linkageName: "command_line_arguments.Server.route", scope: null, file: !1767, line: 171, type: !2010, isLocal: false, isDefinition: true, scopeLine: 171, isOptimized: false, unit: !1, retainedNodes: !3)
!2010 = !DISubroutineType(types: !2011)
!2011 = !{!41, !1765, !1765, !936}
!2012 = !DILocalVariable(name: "s", arg: 1, scope: !2009, file: !1767, line: 171, type: !1765)
!2013 = !DILocation(line: 171, column: 1, scope: !2009)
!2014 = !DILocalVariable(name: "pkt", arg: 2, scope: !2009, file: !1767, line: 171, type: !936)
!2015 = !DILocation(line: 171, column: 24, scope: !2009)
!2016 = !DILocation(line: 172, column: 8, scope: !2017)
!2017 = distinct !DILexicalBlock(scope: !2009, file: !1767, line: 171, column: 1)
!2018 = !DILocation(line: 172, column: 13, scope: !2017)
!2019 = !DILocation(line: 172, column: 2, scope: !2017)
!2020 = !DILocation(line: 173, column: 3, scope: !2017)
!2021 = !DILocation(line: 176, column: 3, scope: !2017)
!2022 = !DILocation(line: 176, column: 15, scope: !2017)
!2023 = !DILocalVariable(name: "destClientID", scope: !2017, file: !1767, line: 177, type: !59)
!2024 = !DILocation(line: 177, column: 2, scope: !2009)
!2025 = !DILocalVariable(name: "canRouteDirectly", scope: !2017, file: !1767, line: 177, type: !50)
!2026 = !DILocation(line: 177, column: 64, scope: !2017)
!2027 = !DILocation(line: 177, column: 37, scope: !2017)
!2028 = !DILocation(line: 177, column: 2, scope: !2017)
!2029 = !DILocation(line: 178, column: 2, scope: !2017)
!2030 = !DILocalVariable(name: "destClient", scope: !2031, file: !1767, line: 179, type: !1758)
!2031 = distinct !DILexicalBlock(scope: !2017, file: !1767, line: 178, column: 22)
!2032 = !DILocation(line: 179, column: 3, scope: !2017)
!2033 = !DILocalVariable(name: "clientExists", scope: !2031, file: !1767, line: 179, type: !50)
!2034 = !DILocation(line: 179, column: 32, scope: !2031)
!2035 = !DILocation(line: 179, column: 3, scope: !2031)
!2036 = !DILocation(line: 180, column: 3, scope: !2031)
!2037 = !DILocation(line: 181, column: 14, scope: !2031)
!2038 = !DILocation(line: 184, column: 8, scope: !2031)
!2039 = !DILocation(line: 187, column: 15, scope: !2017)
!2040 = !DILocation(line: 188, column: 5, scope: !2017)
!2041 = !DILocation(line: 189, column: 4, scope: !2017)
!2042 = !DILocation(line: 189, column: 21, scope: !2017)
!2043 = distinct !DISubprogram(name: "subnet.setAddrForClient..1command_line_arguments.Server", linkageName: "command_line_arguments.Server.setAddrForClient", scope: null, file: !1767, line: 133, type: !2044, isLocal: false, isDefinition: true, scopeLine: 133, isOptimized: false, unit: !1, retainedNodes: !3)
!2044 = !DISubroutineType(types: !2045)
!2045 = !{!41, !1765, !1765, !59, !102}
!2046 = !DILocalVariable(name: "addr", arg: 3, scope: !2043, file: !1767, line: 133, type: !102)
!2047 = !DILocation(line: 133, column: 43, scope: !2043)
!2048 = !DILocalVariable(name: "s", arg: 1, scope: !2043, file: !1767, line: 133, type: !1765)
!2049 = !DILocation(line: 133, column: 1, scope: !2043)
!2050 = !DILocalVariable(name: "id", arg: 2, scope: !2043, file: !1767, line: 133, type: !59)
!2051 = !DILocation(line: 133, column: 35, scope: !2043)
!2052 = !DILocation(line: 134, column: 3, scope: !2043)
!2053 = !DILocation(line: 138, column: 1, scope: !2043)
!2054 = !DILocation(line: 134, column: 15, scope: !2043)
!2055 = !DILocation(line: 135, column: 9, scope: !2043)
!2056 = !DILocation(line: 135, column: 2, scope: !2043)
!2057 = !DILocation(line: 137, column: 26, scope: !2043)
!2058 = !DILocation(line: 137, column: 3, scope: !2043)
!2059 = !DILocation(line: 137, column: 37, scope: !2043)
!2060 = distinct !DISubprogram(name: "subnet.initClient..1command_line_arguments.serverConn", linkageName: "command_line_arguments.serverConn.initClient", scope: null, file: !1755, line: 24, type: !2061, isLocal: false, isDefinition: true, scopeLine: 24, isOptimized: false, unit: !1, retainedNodes: !3)
!2061 = !DISubroutineType(types: !2062)
!2062 = !{!41, !1758, !1758, !1765}
!2063 = !DILocalVariable(name: "c", arg: 1, scope: !2060, file: !1755, line: 24, type: !1758)
!2064 = !DILocation(line: 24, column: 1, scope: !2060)
!2065 = !DILocalVariable(name: "s", arg: 2, scope: !2060, file: !1755, line: 24, type: !1765)
!2066 = !DILocation(line: 24, column: 33, scope: !2060)
!2067 = !DILocation(line: 25, column: 21, scope: !2060)
!2068 = !DILocation(line: 25, column: 3, scope: !2060)
!2069 = !DILocation(line: 25, column: 19, scope: !2060)
!2070 = !DILocation(line: 26, column: 3, scope: !2060)
!2071 = !DILocation(line: 26, column: 17, scope: !2060)
!2072 = !DILocation(line: 27, column: 3, scope: !2060)
!2073 = !DILocation(line: 27, column: 11, scope: !2060)
!2074 = !DILocation(line: 28, column: 52, scope: !2060)
!2075 = !DILocation(line: 28, column: 65, scope: !2060)
!2076 = !DILocation(line: 28, column: 77, scope: !2060)
!2077 = !DILocation(line: 28, column: 6, scope: !2060)
!2078 = !DILocation(line: 29, column: 21, scope: !2060)
!2079 = !DILocation(line: 29, column: 39, scope: !2060)
!2080 = !DILocation(line: 29, column: 2, scope: !2060)
!2081 = !DILocation(line: 30, column: 2, scope: !2060)
!2082 = distinct !DISubprogram(name: "subnet.queueIP..1command_line_arguments.serverConn", linkageName: "command_line_arguments.serverConn.queueIP", scope: null, file: !1755, line: 90, type: !2083, isLocal: false, isDefinition: true, scopeLine: 90, isOptimized: false, unit: !1, retainedNodes: !3)
!2083 = !DISubroutineType(types: !2084)
!2084 = !{!41, !1758, !1758, !936}
!2085 = !DILocalVariable(name: "c", arg: 1, scope: !2082, file: !1755, line: 90, type: !1758)
!2086 = !DILocation(line: 90, column: 1, scope: !2082)
!2087 = !DILocalVariable(name: "pkt", arg: 2, scope: !2082, file: !1755, line: 90, type: !936)
!2088 = !DILocation(line: 90, column: 30, scope: !2082)
!2089 = !DILocation(line: 91, column: 2, scope: !2082)
!2090 = !DILocation(line: 92, column: 8, scope: !2082)
!2091 = !DILocation(line: 92, column: 2, scope: !2082)
!2092 = !DILocation(line: 93, column: 2, scope: !2082)
!2093 = !DILocation(line: 94, column: 84, scope: !2082)
!2094 = !DILocation(line: 94, column: 7, scope: !2082)
!2095 = distinct !DISubprogram(name: "subnet.readRoutine..1command_line_arguments.serverConn", linkageName: "command_line_arguments.serverConn.readRoutine", scope: null, file: !1755, line: 50, type: !2096, isLocal: false, isDefinition: true, scopeLine: 50, isOptimized: false, unit: !1, retainedNodes: !3)
!2096 = !DISubroutineType(types: !2097)
!2097 = !{!41, !1758, !1758, !1500, !122}
!2098 = !DILocalVariable(name: "c", arg: 1, scope: !2095, file: !1755, line: 50, type: !1758)
!2099 = !DILocation(line: 50, column: 1, scope: !2095)
!2100 = !DILocalVariable(name: "isShuttingDown", arg: 2, scope: !2095, file: !1755, line: 50, type: !1500)
!2101 = !DILocation(line: 50, column: 34, scope: !2095)
!2102 = !DILocalVariable(name: "ipPacketSink", arg: 3, scope: !2095, file: !1755, line: 50, type: !122)
!2103 = !DILocation(line: 50, column: 56, scope: !2095)
!2104 = !DILocation(line: 51, column: 29, scope: !2105)
!2105 = distinct !DILexicalBlock(scope: !2095, file: !1755, line: 50, column: 1)
!2106 = !DILocation(line: 51, column: 17, scope: !2105)
!2107 = !DILocalVariable(name: "decoder", scope: !2105, file: !1755, line: 51, type: !2108)
!2108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2109, size: 64)
!2109 = !DICompositeType(tag: DW_TAG_structure_type, name: "Decoder", file: !10, line: 5, size: 1024, align: 8, elements: !2110)
!2110 = !{!1022, !2111, !2112, !2116, !2117, !2118, !2119, !2128, !2129}
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "r", file: !10, line: 5, baseType: !161, size: 128, align: 64, offset: 64)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "buf", file: !10, line: 5, baseType: !2113, size: 256, align: 64, offset: 192)
!2113 = !DICompositeType(tag: DW_TAG_structure_type, name: ".encoding/gob.decBuffer", file: !10, line: 5, size: 256, align: 8, elements: !2114)
!2114 = !{!1038, !2115}
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "offset", file: !10, line: 5, baseType: !59, size: 64, align: 64, offset: 192)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "wireType", file: !10, line: 5, baseType: !363, size: 64, align: 64, offset: 448)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "decoderCache", file: !10, line: 5, baseType: !363, size: 64, align: 64, offset: 512)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "ignorerCache", file: !10, line: 5, baseType: !363, size: 64, align: 64, offset: 576)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "freeList", file: !10, line: 5, baseType: !2120, size: 64, align: 64, offset: 640)
!2120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2121, size: 64)
!2121 = !DICompositeType(tag: DW_TAG_structure_type, name: ".encoding/gob.decoderState", file: !10, line: 5, size: 256, align: 8, elements: !2122)
!2122 = !{!2123, !2124, !2126, !2127}
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "dec", file: !10, line: 5, baseType: !40, size: 64, align: 64)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "b", file: !10, line: 5, baseType: !2125, size: 64, align: 64, offset: 64)
!2125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2113, size: 64)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "fieldnum", file: !10, line: 5, baseType: !59, size: 64, align: 64, offset: 128)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "next", file: !10, line: 5, baseType: !40, size: 64, align: 64, offset: 192)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "countBuf", file: !10, line: 5, baseType: !150, size: 192, align: 64, offset: 704)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "err", file: !10, line: 5, baseType: !13, size: 128, align: 64, offset: 896)
!2130 = !DILocation(line: 51, column: 2, scope: !2095)
!2131 = !DILocation(line: 53, column: 7, scope: !2105)
!2132 = !DILocation(line: 53, column: 6, scope: !2105)
!2133 = !DILocation(line: 64, column: 10, scope: !2134)
!2134 = distinct !DILexicalBlock(scope: !2105, file: !1755, line: 53, column: 41)
!2135 = !DILocation(line: 57, column: 8, scope: !2134)
!2136 = !DILocation(line: 57, column: 7, scope: !2134)
!2137 = !DILocation(line: 56, column: 10, scope: !2134)
!2138 = !DILocation(line: 55, column: 17, scope: !2134)
!2139 = !DILocation(line: 58, column: 46, scope: !2134)
!2140 = !DILocation(line: 58, column: 9, scope: !2134)
!2141 = !DILocation(line: 60, column: 5, scope: !2134)
!2142 = !DILocation(line: 61, column: 4, scope: !2134)
!2143 = !DILocation(line: 66, column: 8, scope: !2144)
!2144 = distinct !DILexicalBlock(scope: !2134, file: !1755, line: 66, column: 4)
!2145 = !DILocalVariable(name: "localAddr", scope: !2144, file: !1755, line: 66, type: !112)
!2146 = !DILocation(line: 66, column: 8, scope: !2134)
!2147 = !DILocation(line: 67, column: 26, scope: !2144)
!2148 = !DILocation(line: 67, column: 18, scope: !2144)
!2149 = !DILocalVariable(name: "err", scope: !2144, file: !1755, line: 67, type: !13)
!2150 = !DILocation(line: 67, column: 4, scope: !2134)
!2151 = !DILocation(line: 68, column: 11, scope: !2144)
!2152 = !DILocation(line: 77, column: 8, scope: !2153)
!2153 = distinct !DILexicalBlock(scope: !2134, file: !1755, line: 77, column: 4)
!2154 = !DILocalVariable(name: "ipPkt", scope: !2153, file: !1755, line: 77, type: !936)
!2155 = !DILocation(line: 77, column: 8, scope: !2134)
!2156 = !DILocation(line: 78, column: 26, scope: !2153)
!2157 = !DILocation(line: 78, column: 18, scope: !2153)
!2158 = !DILocalVariable(name: "err", scope: !2153, file: !1755, line: 78, type: !13)
!2159 = !DILocation(line: 78, column: 4, scope: !2134)
!2160 = !DILocation(line: 79, column: 11, scope: !2153)
!2161 = !DILocation(line: 69, column: 50, scope: !2144)
!2162 = !DILocation(line: 69, column: 9, scope: !2144)
!2163 = !DILocation(line: 70, column: 6, scope: !2144)
!2164 = !DILocation(line: 71, column: 5, scope: !2144)
!2165 = !DILocation(line: 73, column: 20, scope: !2144)
!2166 = !DILocation(line: 73, column: 18, scope: !2144)
!2167 = !DILocation(line: 74, column: 5, scope: !2144)
!2168 = !DILocation(line: 74, column: 31, scope: !2144)
!2169 = !DILocation(line: 74, column: 12, scope: !2144)
!2170 = !DILocation(line: 80, column: 52, scope: !2153)
!2171 = !DILocation(line: 80, column: 9, scope: !2153)
!2172 = !DILocation(line: 81, column: 6, scope: !2153)
!2173 = !DILocation(line: 82, column: 5, scope: !2153)
!2174 = !DILocation(line: 85, column: 58, scope: !2153)
!2175 = !DILocation(line: 85, column: 20, scope: !2153)
!2176 = !DILocation(line: 85, column: 21, scope: !2153)
!2177 = !DILocation(line: 85, column: 17, scope: !2153)
!2178 = !DILocation(line: 53, column: 27, scope: !2105)
!2179 = !DILocation(line: 53, column: 23, scope: !2105)
!2180 = !DILocation(line: 54, column: 7, scope: !2134)
!2181 = !DILocalVariable(name: "pktType", scope: !2134, file: !1755, line: 54, type: !916)
!2182 = !DILocation(line: 54, column: 7, scope: !2105)
!2183 = !DILocation(line: 55, column: 25, scope: !2134)
!2184 = !DILocalVariable(name: "err", scope: !2134, file: !1755, line: 55, type: !13)
!2185 = !DILocation(line: 55, column: 3, scope: !2105)
!2186 = distinct !DISubprogram(name: "subnet.remoteAddressStr..1command_line_arguments.serverConn", linkageName: "command_line_arguments.serverConn.remoteAddressStr", scope: null, file: !1755, line: 98, type: !2187, isLocal: false, isDefinition: true, scopeLine: 98, isOptimized: false, unit: !1, retainedNodes: !3)
!2187 = !DISubroutineType(types: !2188)
!2188 = !{!55, !1758, !1758}
!2189 = !DILocalVariable(name: "c", arg: 1, scope: !2186, file: !1755, line: 98, type: !1758)
!2190 = !DILocation(line: 98, column: 1, scope: !2186)
!2191 = !DILocation(line: 99, column: 10, scope: !2186)
!2192 = !DILocation(line: 99, column: 24, scope: !2186)
!2193 = !DILocalVariable(name: "$ret11", scope: !2186, file: !1755, line: 98, type: !55)
!2194 = !DILocation(line: 98, column: 41, scope: !2186)
!2195 = !DILocation(line: 100, column: 3, scope: !2186)
!2196 = !DILocation(line: 102, column: 22, scope: !2186)
!2197 = !DILocation(line: 102, column: 25, scope: !2186)
!2198 = !DILocation(line: 102, column: 2, scope: !2186)
!2199 = distinct !DISubprogram(name: "subnet.writeRoutine..1command_line_arguments.serverConn", linkageName: "command_line_arguments.serverConn.writeRoutine", scope: null, file: !1755, line: 33, type: !2200, isLocal: false, isDefinition: true, scopeLine: 33, isOptimized: false, unit: !1, retainedNodes: !3)
!2200 = !DISubroutineType(types: !2201)
!2201 = !{!41, !1758, !1758, !1500}
!2202 = !DILocalVariable(name: "c", arg: 1, scope: !2199, file: !1755, line: 33, type: !1758)
!2203 = !DILocation(line: 33, column: 1, scope: !2199)
!2204 = !DILocalVariable(name: "isShuttingDown", arg: 2, scope: !2199, file: !1755, line: 33, type: !1500)
!2205 = !DILocation(line: 33, column: 35, scope: !2199)
!2206 = !DILocation(line: 34, column: 29, scope: !2207)
!2207 = distinct !DILexicalBlock(scope: !2199, file: !1755, line: 33, column: 1)
!2208 = !DILocation(line: 34, column: 17, scope: !2207)
!2209 = !DILocalVariable(name: "encoder", scope: !2207, file: !1755, line: 34, type: !1019)
!2210 = !DILocation(line: 34, column: 2, scope: !2199)
!2211 = !DILocation(line: 36, column: 7, scope: !2207)
!2212 = !DILocation(line: 36, column: 6, scope: !2207)
!2213 = !DILocation(line: 41, column: 11, scope: !2214)
!2214 = distinct !DILexicalBlock(scope: !2207, file: !1755, line: 39, column: 4)
!2215 = !DILocation(line: 40, column: 18, scope: !2214)
!2216 = !DILocalVariable(name: "err", scope: !2214, file: !1755, line: 40, type: !13)
!2217 = !DILocation(line: 40, column: 4, scope: !2207)
!2218 = !DILocation(line: 42, column: 50, scope: !2214)
!2219 = !DILocation(line: 42, column: 63, scope: !2214)
!2220 = !DILocation(line: 42, column: 77, scope: !2214)
!2221 = !DILocation(line: 42, column: 9, scope: !2214)
!2222 = !DILocation(line: 43, column: 6, scope: !2214)
!2223 = !DILocation(line: 44, column: 5, scope: !2214)
!2224 = !DILocation(line: 36, column: 27, scope: !2207)
!2225 = !DILocation(line: 36, column: 23, scope: !2207)
!2226 = !DILocation(line: 37, column: 3, scope: !2207)
!2227 = !DILocation(line: 38, column: 18, scope: !2207)
!2228 = !DILocation(line: 38, column: 3, scope: !2207)
!2229 = !DILocation(line: 38, column: 3, scope: !2214)
!2230 = !DILocalVariable(name: "pkt", scope: !2214, file: !1755, line: 38, type: !936)
!2231 = !DILocation(line: 39, column: 24, scope: !2214)
!2232 = !DILocation(line: 39, column: 11, scope: !2214)
!2233 = distinct !DISubprogram(name: "subnet.command_line_arguments..thunk8", scope: null, file: !1755, line: 29, type: !2234, isLocal: true, isDefinition: true, scopeLine: 29, isOptimized: false, unit: !1, retainedNodes: !3)
!2234 = !DISubroutineType(types: !2235)
!2235 = !{!41, !2236}
!2236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2237, size: 64)
!2237 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*.command-line-arguments.serverConn,*bool,*__go_channel}", file: !18, size: 192, align: 8, elements: !2238)
!2238 = !{!2239, !2240, !2241}
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "a0", file: !18, line: 29, baseType: !1758, size: 64, align: 64)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "a1", file: !18, line: 29, baseType: !1500, size: 64, align: 64, offset: 64)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "a2", file: !18, line: 29, baseType: !122, size: 64, align: 64, offset: 128)
!2242 = !DILocalVariable(name: "__go_thunk_parameter", arg: 1, scope: !2233, file: !1755, line: 29, type: !2236)
!2243 = !DILocation(line: 29, column: 2, scope: !2233)
!2244 = distinct !DISubprogram(name: "subnet.command_line_arguments..thunk9", scope: null, file: !1755, line: 30, type: !2245, isLocal: true, isDefinition: true, scopeLine: 30, isOptimized: false, unit: !1, retainedNodes: !3)
!2245 = !DISubroutineType(types: !2246)
!2246 = !{!41, !2247}
!2247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2248, size: 64)
!2248 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*.command-line-arguments.serverConn,*bool}", file: !18, size: 128, align: 8, elements: !2249)
!2249 = !{!2250, !2251}
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "a0", file: !18, line: 30, baseType: !1758, size: 64, align: 64)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "a1", file: !18, line: 30, baseType: !1500, size: 64, align: 64, offset: 64)
!2252 = !DILocalVariable(name: "__go_thunk_parameter", arg: 1, scope: !2244, file: !1755, line: 30, type: !2247)
!2253 = !DILocation(line: 30, column: 2, scope: !2244)
!2254 = distinct !DISubprogram(name: "subnet.NewServer", linkageName: "command_line_arguments.NewServer", scope: null, file: !1767, line: 39, type: !2255, isLocal: false, isDefinition: true, scopeLine: 39, isOptimized: false, unit: !1, retainedNodes: !3)
!2255 = !DISubroutineType(types: !2256)
!2256 = !{!2257, !55, !55, !55, !55, !55, !55, !55}
!2257 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*Server,error}", file: !18, size: 192, align: 8, elements: !2258)
!2258 = !{!2259, !2260}
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "UNNAMED", file: !18, line: 40, baseType: !1765, size: 64, align: 64)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "UNNAMED", file: !18, line: 40, baseType: !13, size: 128, align: 64, offset: 64)
!2261 = !DILocalVariable(name: "caCertPath", arg: 7, scope: !2254, file: !1767, line: 40, type: !55)
!2262 = !DILocation(line: 40, column: 27, scope: !2254)
!2263 = !DILocalVariable(name: "keyPemPath", arg: 6, scope: !2254, file: !1767, line: 40, type: !55)
!2264 = !DILocation(line: 40, column: 15, scope: !2254)
!2265 = !DILocalVariable(name: "certPemPath", arg: 5, scope: !2254, file: !1767, line: 40, type: !55)
!2266 = !DILocation(line: 40, column: 2, scope: !2254)
!2267 = !DILocalVariable(name: "iName", arg: 4, scope: !2254, file: !1767, line: 39, type: !55)
!2268 = !DILocation(line: 39, column: 41, scope: !2254)
!2269 = !DILocalVariable(name: "network", arg: 3, scope: !2254, file: !1767, line: 39, type: !55)
!2270 = !DILocation(line: 39, column: 32, scope: !2254)
!2271 = !DILocalVariable(name: "servHost", arg: 1, scope: !2254, file: !1767, line: 39, type: !55)
!2272 = !DILocation(line: 39, column: 16, scope: !2254)
!2273 = !DILocalVariable(name: "port", arg: 2, scope: !2254, file: !1767, line: 39, type: !55)
!2274 = !DILocation(line: 39, column: 26, scope: !2254)
!2275 = !DILocalVariable(name: "$ret12", scope: !2254, file: !1767, line: 40, type: !1765)
!2276 = !DILocation(line: 40, column: 47, scope: !2254)
!2277 = !DILocation(line: 41, column: 23, scope: !2278)
!2278 = distinct !DILexicalBlock(scope: !2254, file: !1767, line: 39, column: 1)
!2279 = !DILocalVariable(name: "tlsConf", scope: !2278, file: !1767, line: 41, type: !157)
!2280 = !DILocation(line: 41, column: 2, scope: !2254)
!2281 = !DILocalVariable(name: "err", scope: !2278, file: !1767, line: 41, type: !13)
!2282 = !DILocation(line: 42, column: 9, scope: !2278)
!2283 = !DILocation(line: 43, column: 3, scope: !2278)
!2284 = !DILocalVariable(name: "$ret13", scope: !2254, file: !1767, line: 40, type: !13)
!2285 = !DILocation(line: 40, column: 56, scope: !2254)
!2286 = !DILocation(line: 46, column: 34, scope: !2278)
!2287 = !DILocalVariable(name: "localNetMask", scope: !2278, file: !1767, line: 46, type: !114)
!2288 = !DILocation(line: 46, column: 2, scope: !2254)
!2289 = !DILocation(line: 47, column: 9, scope: !2278)
!2290 = !DILocation(line: 48, column: 65, scope: !2278)
!2291 = !DILocation(line: 48, column: 57, scope: !2278)
!2292 = !DILocation(line: 48, column: 22, scope: !2278)
!2293 = !DILocation(line: 48, column: 3, scope: !2278)
!2294 = !DILocation(line: 51, column: 21, scope: !2278)
!2295 = !DILocalVariable(name: "intf", scope: !2278, file: !1767, line: 51, type: !126)
!2296 = !DILocation(line: 51, column: 2, scope: !2254)
!2297 = !DILocation(line: 52, column: 9, scope: !2278)
!2298 = !DILocation(line: 53, column: 57, scope: !2278)
!2299 = !DILocation(line: 53, column: 49, scope: !2278)
!2300 = !DILocation(line: 53, column: 22, scope: !2278)
!2301 = !DILocation(line: 53, column: 3, scope: !2278)
!2302 = !DILocation(line: 56, column: 39, scope: !2278)
!2303 = !DILocation(line: 56, column: 6, scope: !2278)
!2304 = !DILocation(line: 63, column: 22, scope: !2278)
!2305 = !DILocation(line: 64, column: 22, scope: !2278)
!2306 = !DILocation(line: 65, column: 22, scope: !2278)
!2307 = !DILocation(line: 66, column: 22, scope: !2278)
!2308 = !DILocation(line: 67, column: 22, scope: !2278)
!2309 = !DILocation(line: 58, column: 7, scope: !2278)
!2310 = !DILocation(line: 58, column: 8, scope: !2278)
!2311 = !DILocalVariable(name: "s", scope: !2278, file: !1767, line: 58, type: !1765)
!2312 = !DILocation(line: 58, column: 2, scope: !2254)
!2313 = !DILocation(line: 70, column: 19, scope: !2278)
!2314 = !DILocation(line: 70, column: 13, scope: !2278)
!2315 = !DILocation(line: 70, column: 2, scope: !2278)
!2316 = distinct !DISubprogram(name: "subnet.command_line_arguments..thunk10", scope: null, file: !1767, line: 89, type: !2317, isLocal: true, isDefinition: true, scopeLine: 89, isOptimized: false, unit: !1, retainedNodes: !3)
!2317 = !DISubroutineType(types: !2318)
!2318 = !{!41, !2319}
!2319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2320, size: 64)
!2320 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*Server}", file: !18, size: 64, align: 8, elements: !2321)
!2321 = !{!2322}
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "a0", file: !18, line: 89, baseType: !1765, size: 64, align: 64)
!2323 = !DILocalVariable(name: "__go_thunk_parameter", arg: 1, scope: !2316, file: !1767, line: 89, type: !2319)
!2324 = !DILocation(line: 89, column: 2, scope: !2316)
!2325 = distinct !DISubprogram(name: "subnet.command_line_arguments..thunk11", scope: null, file: !1767, line: 90, type: !2317, isLocal: true, isDefinition: true, scopeLine: 90, isOptimized: false, unit: !1, retainedNodes: !3)
!2326 = !DILocalVariable(name: "__go_thunk_parameter", arg: 1, scope: !2325, file: !1767, line: 90, type: !2319)
!2327 = !DILocation(line: 90, column: 2, scope: !2325)
!2328 = distinct !DISubprogram(name: "subnet.command_line_arguments..thunk12", scope: null, file: !1767, line: 91, type: !1490, isLocal: true, isDefinition: true, scopeLine: 91, isOptimized: false, unit: !1, retainedNodes: !3)
!2329 = !DILocalVariable(name: "__go_thunk_parameter", arg: 1, scope: !2328, file: !1767, line: 91, type: !1492)
!2330 = !DILocation(line: 91, column: 2, scope: !2328)
!2331 = distinct !DISubprogram(name: "subnet.command_line_arguments..thunk13", scope: null, file: !1767, line: 92, type: !1490, isLocal: true, isDefinition: true, scopeLine: 92, isOptimized: false, unit: !1, retainedNodes: !3)
!2332 = !DILocalVariable(name: "__go_thunk_parameter", arg: 1, scope: !2331, file: !1767, line: 92, type: !1492)
!2333 = !DILocation(line: 92, column: 2, scope: !2331)
!2334 = distinct !DISubprogram(name: "subnet.command_line_arguments..thunk14", scope: null, file: !1767, line: 99, type: !1507, isLocal: true, isDefinition: true, scopeLine: 99, isOptimized: false, unit: !1, retainedNodes: !3)
!2335 = !DILocalVariable(name: "__go_thunk_parameter", arg: 1, scope: !2334, file: !1767, line: 99, type: !1509)
!2336 = !DILocation(line: 99, column: 2, scope: !2334)
!2337 = !DILocalVariable(name: "$ret22", scope: !2334, file: !1767, line: 99, type: !50)
!2338 = distinct !DISubprogram(name: "subnet.command_line_arguments..thunk15", scope: null, file: !1767, line: 127, type: !1521, isLocal: true, isDefinition: true, scopeLine: 127, isOptimized: false, unit: !1, retainedNodes: !3)
!2339 = !DILocalVariable(name: "__go_thunk_parameter", arg: 1, scope: !2338, file: !1767, line: 127, type: !1523)
!2340 = !DILocation(line: 127, column: 2, scope: !2338)
!2341 = !DILocalVariable(name: "$ret23", scope: !2338, file: !1767, line: 127, type: !50)
!2342 = distinct !DISubprogram(name: "subnet.command_line_arguments..thunk16", scope: null, file: !1767, line: 135, type: !1521, isLocal: true, isDefinition: true, scopeLine: 135, isOptimized: false, unit: !1, retainedNodes: !3)
!2343 = !DILocalVariable(name: "__go_thunk_parameter", arg: 1, scope: !2342, file: !1767, line: 135, type: !1523)
!2344 = !DILocation(line: 135, column: 2, scope: !2342)
!2345 = !DILocalVariable(name: "$ret24", scope: !2342, file: !1767, line: 135, type: !50)
!2346 = distinct !DISubprogram(name: "subnet.command_line_arguments..thunk17", scope: null, file: !1767, line: 142, type: !1521, isLocal: true, isDefinition: true, scopeLine: 142, isOptimized: false, unit: !1, retainedNodes: !3)
!2347 = !DILocalVariable(name: "__go_thunk_parameter", arg: 1, scope: !2346, file: !1767, line: 142, type: !1523)
!2348 = !DILocation(line: 142, column: 2, scope: !2346)
!2349 = !DILocalVariable(name: "$ret25", scope: !2346, file: !1767, line: 142, type: !50)
!2350 = distinct !DISubprogram(name: "subnet.devReadRoutine", scope: null, file: !2351, line: 11, type: !2352, isLocal: true, isDefinition: true, scopeLine: 11, isOptimized: false, unit: !1, retainedNodes: !3)
!2351 = !DIFile(filename: "tun_service_routines.go", directory: ".")
!2352 = !DISubroutineType(types: !2353)
!2353 = !{!41, !126, !122, !1498, !1500}
!2354 = !DILocalVariable(name: "dev", arg: 1, scope: !2350, file: !2351, line: 11, type: !126)
!2355 = !DILocation(line: 11, column: 21, scope: !2350)
!2356 = !DILocalVariable(name: "packetsIn", arg: 2, scope: !2350, file: !2351, line: 11, type: !122)
!2357 = !DILocation(line: 11, column: 43, scope: !2350)
!2358 = !DILocalVariable(name: "wg", arg: 3, scope: !2350, file: !2351, line: 11, type: !1498)
!2359 = !DILocation(line: 11, column: 69, scope: !2350)
!2360 = !DILocalVariable(name: "isShuttingDown", arg: 4, scope: !2350, file: !2351, line: 11, type: !1500)
!2361 = !DILocation(line: 11, column: 89, scope: !2350)
!2362 = !DILocation(line: 12, column: 4, scope: !2350)
!2363 = !DILocation(line: 33, column: 1, scope: !2350)
!2364 = !DILocation(line: 13, column: 2, scope: !2350)
!2365 = !DILocation(line: 15, column: 7, scope: !2350)
!2366 = !DILocation(line: 17, column: 16, scope: !2367)
!2367 = distinct !DILexicalBlock(scope: !2350, file: !2351, line: 15, column: 23)
!2368 = !DILocalVariable(name: "n", scope: !2367, file: !2351, line: 17, type: !59)
!2369 = !DILocation(line: 17, column: 3, scope: !2350)
!2370 = !DILocalVariable(name: "err", scope: !2367, file: !2351, line: 17, type: !13)
!2371 = !DILocation(line: 18, column: 10, scope: !2367)
!2372 = !DILocation(line: 27, column: 46, scope: !2367)
!2373 = !DILocation(line: 27, column: 40, scope: !2367)
!2374 = !DILocation(line: 19, column: 8, scope: !2367)
!2375 = !DILocation(line: 19, column: 7, scope: !2367)
!2376 = !DILocation(line: 20, column: 40, scope: !2367)
!2377 = !DILocation(line: 22, column: 4, scope: !2367)
!2378 = !DILocation(line: 20, column: 52, scope: !2367)
!2379 = !DILocation(line: 20, column: 9, scope: !2367)
!2380 = !DILocation(line: 27, column: 24, scope: !2367)
!2381 = !DILocation(line: 28, column: 37, scope: !2367)
!2382 = !DILocation(line: 28, column: 43, scope: !2367)
!2383 = !DILocation(line: 28, column: 24, scope: !2367)
!2384 = !DILocation(line: 26, column: 14, scope: !2367)
!2385 = !DILocation(line: 26, column: 20, scope: !2367)
!2386 = !DILocation(line: 25, column: 8, scope: !2367)
!2387 = !DILocation(line: 25, column: 9, scope: !2367)
!2388 = !DILocalVariable(name: "p", scope: !2367, file: !2351, line: 25, type: !936)
!2389 = !DILocation(line: 25, column: 3, scope: !2350)
!2390 = !DILocation(line: 30, column: 13, scope: !2367)
!2391 = !DILocation(line: 15, column: 6, scope: !2350)
!2392 = !DILocation(line: 16, column: 13, scope: !2367)
!2393 = !DILocation(line: 23, column: 4, scope: !2350)
!2394 = distinct !DISubprogram(name: "subnet.command_line_arguments..thunk18", scope: null, file: !2351, line: 13, type: !1507, isLocal: true, isDefinition: true, scopeLine: 13, isOptimized: false, unit: !1, retainedNodes: !3)
!2395 = !DILocalVariable(name: "__go_thunk_parameter", arg: 1, scope: !2394, file: !2351, line: 13, type: !1509)
!2396 = !DILocation(line: 13, column: 2, scope: !2394)
!2397 = !DILocalVariable(name: "$ret26", scope: !2394, file: !2351, line: 13, type: !50)
!2398 = distinct !DISubprogram(name: "subnet.devWriteRoutine", scope: null, file: !2351, line: 35, type: !2352, isLocal: true, isDefinition: true, scopeLine: 35, isOptimized: false, unit: !1, retainedNodes: !3)
!2399 = !DILocalVariable(name: "dev", arg: 1, scope: !2398, file: !2351, line: 35, type: !126)
!2400 = !DILocation(line: 35, column: 22, scope: !2398)
!2401 = !DILocalVariable(name: "packetsOut", arg: 2, scope: !2398, file: !2351, line: 35, type: !122)
!2402 = !DILocation(line: 35, column: 44, scope: !2398)
!2403 = !DILocalVariable(name: "wg", arg: 3, scope: !2398, file: !2351, line: 35, type: !1498)
!2404 = !DILocation(line: 35, column: 71, scope: !2398)
!2405 = !DILocalVariable(name: "isShuttingDown", arg: 4, scope: !2398, file: !2351, line: 35, type: !1500)
!2406 = !DILocation(line: 35, column: 91, scope: !2398)
!2407 = !DILocation(line: 36, column: 4, scope: !2398)
!2408 = !DILocation(line: 50, column: 1, scope: !2398)
!2409 = !DILocation(line: 37, column: 2, scope: !2398)
!2410 = !DILocation(line: 39, column: 7, scope: !2398)
!2411 = !DILocation(line: 40, column: 10, scope: !2412)
!2412 = distinct !DILexicalBlock(scope: !2398, file: !2351, line: 39, column: 23)
!2413 = !DILocalVariable(name: "pkt", scope: !2412, file: !2351, line: 40, type: !936)
!2414 = !DILocation(line: 40, column: 3, scope: !2398)
!2415 = !DILocation(line: 41, column: 26, scope: !2412)
!2416 = !DILocation(line: 41, column: 16, scope: !2412)
!2417 = !DILocalVariable(name: "w", scope: !2412, file: !2351, line: 41, type: !59)
!2418 = !DILocation(line: 41, column: 3, scope: !2398)
!2419 = !DILocalVariable(name: "err", scope: !2412, file: !2351, line: 41, type: !13)
!2420 = !DILocation(line: 42, column: 10, scope: !2412)
!2421 = !DILocation(line: 43, column: 46, scope: !2412)
!2422 = !DILocation(line: 43, column: 58, scope: !2412)
!2423 = !DILocation(line: 43, column: 8, scope: !2412)
!2424 = !DILocation(line: 46, column: 18, scope: !2412)
!2425 = !DILocation(line: 46, column: 8, scope: !2412)
!2426 = !DILocation(line: 47, column: 70, scope: !2412)
!2427 = !DILocation(line: 47, column: 89, scope: !2412)
!2428 = !DILocation(line: 47, column: 8, scope: !2412)
!2429 = !DILocation(line: 39, column: 6, scope: !2398)
!2430 = !DILocation(line: 44, column: 4, scope: !2398)
!2431 = distinct !DISubprogram(name: "subnet.command_line_arguments..thunk19", scope: null, file: !2351, line: 37, type: !1507, isLocal: true, isDefinition: true, scopeLine: 37, isOptimized: false, unit: !1, retainedNodes: !3)
!2432 = !DILocalVariable(name: "__go_thunk_parameter", arg: 1, scope: !2431, file: !2351, line: 37, type: !1509)
!2433 = !DILocation(line: 37, column: 2, scope: !2431)
!2434 = !DILocalVariable(name: "$ret27", scope: !2431, file: !2351, line: 37, type: !50)
!2435 = distinct !DISubprogram(name: "subnet.struct.4Size.0uint32.2Mallocs.0uint64.2Frees.0uint64.5..hash", linkageName: "command_line_arguments.struct.4Size.0uint32.2Mallocs.0uint64.2Frees.0uint64.5..hash", scope: null, file: !7, line: 1, type: !38, isLocal: false, isDefinition: true, scopeLine: 1, isOptimized: false, unit: !1, retainedNodes: !3)
!2436 = !DILocalVariable(name: "key", arg: 1, scope: !2435, file: !7, line: 1, type: !40)
!2437 = !DILocation(line: 1, column: 1, scope: !2435)
!2438 = !DILocalVariable(name: "seed", arg: 2, scope: !2435, file: !7, line: 1, type: !25)
!2439 = !DILocalVariable(name: "$ret50", scope: !2435, file: !7, line: 1, type: !25)
!2440 = distinct !DISubprogram(name: "subnet.struct.4Size.0uint32.2Mallocs.0uint64.2Frees.0uint64.5..eq", linkageName: "command_line_arguments.struct.4Size.0uint32.2Mallocs.0uint64.2Frees.0uint64.5..eq", scope: null, file: !7, line: 1, type: !48, isLocal: false, isDefinition: true, scopeLine: 1, isOptimized: false, unit: !1, retainedNodes: !3)
!2441 = !DILocalVariable(name: "key1", arg: 1, scope: !2440, file: !7, line: 1, type: !40)
!2442 = !DILocation(line: 1, column: 1, scope: !2440)
!2443 = !DILocalVariable(name: "key2", arg: 2, scope: !2440, file: !7, line: 1, type: !40)
!2444 = !DILocalVariable(name: "$ret51", scope: !2440, file: !7, line: 1, type: !50)
!2445 = distinct !DISubprogram(name: "subnet.command_line_arguments..import", linkageName: "command_line_arguments..import", scope: null, file: !10, line: 1, type: !2446, isLocal: false, isDefinition: true, scopeLine: 1, isOptimized: false, unit: !1, retainedNodes: !3)
!2446 = !DISubroutineType(types: !2447)
!2447 = !{!41}
!2448 = !DILocation(line: 1, column: 1, scope: !2449)
!2449 = !DILexicalBlockFile(scope: !2445, file: !7, discriminator: 0)
	.text
	.file	"gomodule"

	.section ".go_export","e",@progbits
	.ascii "v2;\n"
	.ascii "package "
	.ascii "subnet"
	.ascii ";\n"
	.ascii "pkgpath "
	.ascii "command-line-arguments"
	.ascii ";\n"
	.ascii "import "
	.ascii "bufio"
	.ascii " "
	.ascii "bufio"
	.ascii " \""
	.ascii "bufio"
	.ascii "\";\n"
	.ascii "import "
	.ascii "bytes"
	.ascii " "
	.ascii "bytes"
	.ascii " \""
	.ascii "bytes"
	.ascii "\";\n"
	.ascii "import "
	.ascii "tls"
	.ascii " "
	.ascii "crypto/tls"
	.ascii " \""
	.ascii "crypto/tls"
	.ascii "\";\n"
	.ascii "import "
	.ascii "gob"
	.ascii " "
	.ascii "encoding/gob"
	.ascii " \""
	.ascii "encoding/gob"
	.ascii "\";\n"
	.ascii "import "
	.ascii "errors"
	.ascii " "
	.ascii "errors"
	.ascii " \""
	.ascii "errors"
	.ascii "\";\n"
	.ascii "import "
	.ascii "fmt"
	.ascii " "
	.ascii "fmt"
	.ascii " \""
	.ascii "fmt"
	.ascii "\";\n"
	.ascii "import "
	.ascii "water"
	.ascii " "
	.ascii "github.com/twitchyliquid64/subnet/vendor/github.com/songgao/water"
	.ascii " \""
	.ascii "github.com/songgao/water"
	.ascii "\";\n"
	.ascii "import "
	.ascii "waterutil"
	.ascii " "
	.ascii "github.com/twitchyliquid64/subnet/vendor/github.com/songgao/water/waterutil"
	.ascii " \""
	.ascii "github.com/songgao/water/waterutil"
	.ascii "\";\n"
	.ascii "import "
	.ascii "conn"
	.ascii " "
	.ascii "github.com/twitchyliquid64/subnet/subnet/conn"
	.ascii " \""
	.ascii "github.com/twitchyliquid64/subnet/subnet/conn"
	.ascii "\";\n"
	.ascii "import "
	.ascii "log"
	.ascii " "
	.ascii "log"
	.ascii " \""
	.ascii "log"
	.ascii "\";\n"
	.ascii "import "
	.ascii "rand"
	.ascii " "
	.ascii "math/rand"
	.ascii " \""
	.ascii "math/rand"
	.ascii "\";\n"
	.ascii "import "
	.ascii "net"
	.ascii " "
	.ascii "net"
	.ascii " \""
	.ascii "net"
	.ascii "\";\n"
	.ascii "import "
	.ascii "os"
	.ascii " "
	.ascii "os"
	.ascii " \""
	.ascii "os"
	.ascii "\";\n"
	.ascii "import "
	.ascii "exec"
	.ascii " "
	.ascii "os/exec"
	.ascii " \""
	.ascii "os/exec"
	.ascii "\";\n"
	.ascii "import "
	.ascii "runtime"
	.ascii " "
	.ascii "runtime"
	.ascii " \""
	.ascii "runtime"
	.ascii "\";\n"
	.ascii "import "
	.ascii "strconv"
	.ascii " "
	.ascii "strconv"
	.ascii " \""
	.ascii "strconv"
	.ascii "\";\n"
	.ascii "import "
	.ascii "strings"
	.ascii " "
	.ascii "strings"
	.ascii " \""
	.ascii "strings"
	.ascii "\";\n"
	.ascii "import "
	.ascii "sync"
	.ascii " "
	.ascii "sync"
	.ascii " \""
	.ascii "sync"
	.ascii "\";\n"
	.ascii "import "
	.ascii "time"
	.ascii " "
	.ascii "time"
	.ascii " \""
	.ascii "time"
	.ascii "\";\n"
	.ascii "init"
	.ascii " "
	.ascii "bufio"
	.ascii " "
	.ascii "bufio..import"
	.ascii " "
	.ascii "bytes"
	.ascii " "
	.ascii "bytes..import"
	.ascii " "
	.ascii "context"
	.ascii " "
	.ascii "context..import"
	.ascii " "
	.ascii "crypto"
	.ascii " "
	.ascii "crypto..import"
	.ascii " "
	.ascii "cipher"
	.ascii " "
	.ascii "crypto_cipher..import"
	.ascii " "
	.ascii "des"
	.ascii " "
	.ascii "crypto_des..import"
	.ascii " "
	.ascii "dsa"
	.ascii " "
	.ascii "crypto_dsa..import"
	.ascii " "
	.ascii "ecdsa"
	.ascii " "
	.ascii "crypto_ecdsa..import"
	.ascii " "
	.ascii "elliptic"
	.ascii " "
	.ascii "crypto_elliptic..import"
	.ascii " "
	.ascii "md5"
	.ascii " "
	.ascii "crypto_md5..import"
	.ascii " "
	.ascii "rand"
	.ascii " "
	.ascii "crypto_rand..import"
	.ascii " "
	.ascii "rsa"
	.ascii " "
	.ascii "crypto_rsa..import"
	.ascii " "
	.ascii "sha1"
	.ascii " "
	.ascii "crypto_sha1..import"
	.ascii " "
	.ascii "sha256"
	.ascii " "
	.ascii "crypto_sha256..import"
	.ascii " "
	.ascii "sha512"
	.ascii " "
	.ascii "crypto_sha512..import"
	.ascii " "
	.ascii "tls"
	.ascii " "
	.ascii "crypto_tls..import"
	.ascii " "
	.ascii "x509"
	.ascii " "
	.ascii "crypto_x509..import"
	.ascii " "
	.ascii "pkix"
	.ascii " "
	.ascii "crypto_x509_pkix..import"
	.ascii " "
	.ascii "asn1"
	.ascii " "
	.ascii "encoding_asn1..import"
	.ascii " "
	.ascii "base64"
	.ascii " "
	.ascii "encoding_base64..import"
	.ascii " "
	.ascii "binary"
	.ascii " "
	.ascii "encoding_binary..import"
	.ascii " "
	.ascii "gob"
	.ascii " "
	.ascii "encoding_gob..import"
	.ascii " "
	.ascii "hex"
	.ascii " "
	.ascii "encoding_hex..import"
	.ascii " "
	.ascii "json"
	.ascii " "
	.ascii "encoding_json..import"
	.ascii " "
	.ascii "pem"
	.ascii " "
	.ascii "encoding_pem..import"
	.ascii " "
	.ascii "fmt"
	.ascii " "
	.ascii "fmt..import"
	.ascii " "
	.ascii "cert"
	.ascii " "
	.ascii "github_com_twitchyliquid64_subnet_subnet_cert..import"
	.ascii " "
	.ascii "poll"
	.ascii " "
	.ascii "internal_poll..import"
	.ascii " "
	.ascii "testlog"
	.ascii " "
	.ascii "internal_testlog..import"
	.ascii " "
	.ascii "io"
	.ascii " "
	.ascii "io..import"
	.ascii " "
	.ascii "ioutil"
	.ascii " "
	.ascii "io_ioutil..import"
	.ascii " "
	.ascii "log"
	.ascii " "
	.ascii "log..import"
	.ascii " "
	.ascii "big"
	.ascii " "
	.ascii "math_big..import"
	.ascii " "
	.ascii "rand"
	.ascii " "
	.ascii "math_rand..import"
	.ascii " "
	.ascii "net"
	.ascii " "
	.ascii "net..import"
	.ascii " "
	.ascii "os"
	.ascii " "
	.ascii "os..import"
	.ascii " "
	.ascii "exec"
	.ascii " "
	.ascii "os_exec..import"
	.ascii " "
	.ascii "filepath"
	.ascii " "
	.ascii "path_filepath..import"
	.ascii " "
	.ascii "reflect"
	.ascii " "
	.ascii "reflect..import"
	.ascii " "
	.ascii "runtime"
	.ascii " "
	.ascii "runtime..import"
	.ascii " "
	.ascii "sys"
	.ascii " "
	.ascii "runtime_internal_sys..import"
	.ascii " "
	.ascii "strconv"
	.ascii " "
	.ascii "strconv..import"
	.ascii " "
	.ascii "sync"
	.ascii " "
	.ascii "sync..import"
	.ascii " "
	.ascii "syscall"
	.ascii " "
	.ascii "syscall..import"
	.ascii " "
	.ascii "time"
	.ascii " "
	.ascii "time..import"
	.ascii " "
	.ascii "unicode"
	.ascii " "
	.ascii "unicode..import"
	.ascii " "
	.ascii "chacha20poly1305"
	.ascii " "
	.ascii "vendor_golang_org_x_crypto_chacha20poly1305..import"
	.ascii " "
	.ascii "cryptobyte"
	.ascii " "
	.ascii "vendor_golang_org_x_crypto_cryptobyte..import"
	.ascii ";\n"
	.ascii "init_graph"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "40"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "45"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "40"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "45"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "25"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "40"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "41"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "43"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "44"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "45"
	.ascii " "
	.ascii "3"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "3"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "3"
	.ascii " "
	.ascii "40"
	.ascii " "
	.ascii "3"
	.ascii " "
	.ascii "41"
	.ascii " "
	.ascii "3"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "4"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "4"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "4"
	.ascii " "
	.ascii "40"
	.ascii " "
	.ascii "4"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "5"
	.ascii " "
	.ascii "4"
	.ascii " "
	.ascii "5"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "5"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "5"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "5"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "5"
	.ascii " "
	.ascii "40"
	.ascii " "
	.ascii "5"
	.ascii " "
	.ascii "41"
	.ascii " "
	.ascii "5"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "5"
	.ascii " "
	.ascii "45"
	.ascii " "
	.ascii "6"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "6"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "6"
	.ascii " "
	.ascii "25"
	.ascii " "
	.ascii "6"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "6"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "6"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "6"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "6"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "6"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "6"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "6"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "6"
	.ascii " "
	.ascii "40"
	.ascii " "
	.ascii "6"
	.ascii " "
	.ascii "41"
	.ascii " "
	.ascii "6"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "6"
	.ascii " "
	.ascii "43"
	.ascii " "
	.ascii "6"
	.ascii " "
	.ascii "44"
	.ascii " "
	.ascii "6"
	.ascii " "
	.ascii "45"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "3"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "4"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "8"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "14"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "25"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "40"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "41"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "43"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "44"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "45"
	.ascii " "
	.ascii "8"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "8"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "8"
	.ascii " "
	.ascii "25"
	.ascii " "
	.ascii "8"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "8"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "8"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "8"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "8"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "8"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "8"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "8"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "8"
	.ascii " "
	.ascii "40"
	.ascii " "
	.ascii "8"
	.ascii " "
	.ascii "41"
	.ascii " "
	.ascii "8"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "8"
	.ascii " "
	.ascii "43"
	.ascii " "
	.ascii "8"
	.ascii " "
	.ascii "44"
	.ascii " "
	.ascii "8"
	.ascii " "
	.ascii "45"
	.ascii " "
	.ascii "9"
	.ascii " "
	.ascii "3"
	.ascii " "
	.ascii "9"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "9"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "9"
	.ascii " "
	.ascii "40"
	.ascii " "
	.ascii "9"
	.ascii " "
	.ascii "41"
	.ascii " "
	.ascii "9"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "4"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "25"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "40"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "41"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "43"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "44"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "45"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "3"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "4"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "25"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "40"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "41"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "43"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "44"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "45"
	.ascii " "
	.ascii "12"
	.ascii " "
	.ascii "3"
	.ascii " "
	.ascii "12"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "12"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "12"
	.ascii " "
	.ascii "40"
	.ascii " "
	.ascii "12"
	.ascii " "
	.ascii "41"
	.ascii " "
	.ascii "12"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "13"
	.ascii " "
	.ascii "3"
	.ascii " "
	.ascii "13"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "13"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "13"
	.ascii " "
	.ascii "40"
	.ascii " "
	.ascii "13"
	.ascii " "
	.ascii "41"
	.ascii " "
	.ascii "13"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "14"
	.ascii " "
	.ascii "3"
	.ascii " "
	.ascii "14"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "14"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "14"
	.ascii " "
	.ascii "40"
	.ascii " "
	.ascii "14"
	.ascii " "
	.ascii "41"
	.ascii " "
	.ascii "14"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "3"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "4"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "5"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "6"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "8"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "9"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "12"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "13"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "14"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "22"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "24"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "25"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "37"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "40"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "41"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "43"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "44"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "45"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "46"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "47"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "3"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "4"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "5"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "6"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "8"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "9"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "12"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "13"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "14"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "22"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "24"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "25"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "37"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "40"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "41"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "43"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "44"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "45"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "47"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "22"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "25"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "40"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "41"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "43"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "44"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "45"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "25"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "40"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "41"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "43"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "44"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "45"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "40"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "41"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "45"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "40"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "41"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "45"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "25"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "40"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "41"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "43"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "44"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "45"
	.ascii " "
	.ascii "22"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "22"
	.ascii " "
	.ascii "25"
	.ascii " "
	.ascii "22"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "22"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "22"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "22"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "22"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "22"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "22"
	.ascii " "
	.ascii "40"
	.ascii " "
	.ascii "22"
	.ascii " "
	.ascii "41"
	.ascii " "
	.ascii "22"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "22"
	.ascii " "
	.ascii "43"
	.ascii " "
	.ascii "22"
	.ascii " "
	.ascii "44"
	.ascii " "
	.ascii "22"
	.ascii " "
	.ascii "45"
	.ascii " "
	.ascii "23"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "23"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "23"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "23"
	.ascii " "
	.ascii "25"
	.ascii " "
	.ascii "23"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "23"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "23"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "23"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "23"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "23"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "23"
	.ascii " "
	.ascii "40"
	.ascii " "
	.ascii "23"
	.ascii " "
	.ascii "41"
	.ascii " "
	.ascii "23"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "23"
	.ascii " "
	.ascii "43"
	.ascii " "
	.ascii "23"
	.ascii " "
	.ascii "44"
	.ascii " "
	.ascii "23"
	.ascii " "
	.ascii "45"
	.ascii " "
	.ascii "24"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "24"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "24"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "24"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "24"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "24"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "24"
	.ascii " "
	.ascii "40"
	.ascii " "
	.ascii "24"
	.ascii " "
	.ascii "41"
	.ascii " "
	.ascii "24"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "24"
	.ascii " "
	.ascii "45"
	.ascii " "
	.ascii "25"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "25"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "25"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "25"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "25"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "25"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "25"
	.ascii " "
	.ascii "40"
	.ascii " "
	.ascii "25"
	.ascii " "
	.ascii "41"
	.ascii " "
	.ascii "25"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "25"
	.ascii " "
	.ascii "43"
	.ascii " "
	.ascii "25"
	.ascii " "
	.ascii "44"
	.ascii " "
	.ascii "25"
	.ascii " "
	.ascii "45"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "3"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "4"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "5"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "6"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "8"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "9"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "12"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "13"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "14"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "22"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "23"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "24"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "25"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "37"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "40"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "41"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "43"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "44"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "45"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "47"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "40"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "43"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "44"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "40"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "37"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "40"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "41"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "43"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "44"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "45"
	.ascii " "
	.ascii "31"
	.ascii " "
	.ascii "25"
	.ascii " "
	.ascii "31"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "31"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "31"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "31"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "31"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "31"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "31"
	.ascii " "
	.ascii "40"
	.ascii " "
	.ascii "31"
	.ascii " "
	.ascii "41"
	.ascii " "
	.ascii "31"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "31"
	.ascii " "
	.ascii "43"
	.ascii " "
	.ascii "31"
	.ascii " "
	.ascii "44"
	.ascii " "
	.ascii "31"
	.ascii " "
	.ascii "45"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "25"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "40"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "41"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "43"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "44"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "45"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "40"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "25"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "40"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "41"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "43"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "44"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "45"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "40"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "43"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "44"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "25"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "37"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "40"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "41"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "43"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "44"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "45"
	.ascii " "
	.ascii "37"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "37"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "37"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "37"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "37"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "37"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "37"
	.ascii " "
	.ascii "40"
	.ascii " "
	.ascii "37"
	.ascii " "
	.ascii "41"
	.ascii " "
	.ascii "37"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "37"
	.ascii " "
	.ascii "43"
	.ascii " "
	.ascii "37"
	.ascii " "
	.ascii "44"
	.ascii " "
	.ascii "37"
	.ascii " "
	.ascii "45"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "40"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "41"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "45"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "40"
	.ascii " "
	.ascii "41"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "41"
	.ascii " "
	.ascii "40"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "40"
	.ascii " "
	.ascii "43"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "43"
	.ascii " "
	.ascii "40"
	.ascii " "
	.ascii "43"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "44"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "44"
	.ascii " "
	.ascii "40"
	.ascii " "
	.ascii "44"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "44"
	.ascii " "
	.ascii "43"
	.ascii " "
	.ascii "46"
	.ascii " "
	.ascii "4"
	.ascii " "
	.ascii "46"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "46"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "46"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "46"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "46"
	.ascii " "
	.ascii "40"
	.ascii " "
	.ascii "46"
	.ascii " "
	.ascii "41"
	.ascii " "
	.ascii "46"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "46"
	.ascii " "
	.ascii "45"
	.ascii " "
	.ascii "47"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "47"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "47"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "47"
	.ascii " "
	.ascii "25"
	.ascii " "
	.ascii "47"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "47"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "47"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "47"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "47"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "47"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "47"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "47"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "47"
	.ascii " "
	.ascii "40"
	.ascii " "
	.ascii "47"
	.ascii " "
	.ascii "41"
	.ascii " "
	.ascii "47"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "47"
	.ascii " "
	.ascii "43"
	.ascii " "
	.ascii "47"
	.ascii " "
	.ascii "44"
	.ascii " "
	.ascii "47"
	.ascii " "
	.ascii "45"
	.ascii ";\n"
	.ascii "func "
	.ascii "AddRoute"
	.ascii " ("
	.ascii "addr"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 1 "
	.ascii "\"net.IP\" "
	.ascii "<type 2 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "ip"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 1>"
	.ascii ") "
	.ascii ".net.matchAddrFamily"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 1>"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "ip"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 1>"
	.ascii ") "
	.ascii "DefaultMask"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 3 "
	.ascii "\"net.IPMask\" "
	.ascii "<type 4 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "m"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 3>"
	.ascii ") "
	.ascii "String"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "m"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 3>"
	.ascii ") "
	.ascii "Size"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "ones"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "bits"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii ";\n"
	.ascii ">"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "ip"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 1>"
	.ascii ") "
	.ascii "IsLinkLocalMulticast"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "ip"
	.ascii " "
	.ascii "<type 1>"
	.ascii ") "
	.ascii "IsUnspecified"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "ip"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 1>"
	.ascii ") "
	.ascii "MarshalText"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 5 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "ip"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 1>"
	.ascii ") "
	.ascii "IsLinkLocalUnicast"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "ip"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 1>"
	.ascii ") "
	.ascii "To16"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 1>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "ip"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 1>"
	.ascii ") "
	.ascii "IsMulticast"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "ip"
	.ascii " "
	.ascii "<type 1>"
	.ascii ") "
	.ascii "Mask"
	.ascii " ("
	.ascii "mask"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 3>"
	.ascii ")"
	.ascii " "
	.ascii "<type 1>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "ip"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 1>"
	.ascii ") "
	.ascii "To4"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 1>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "ip"
	.ascii " "
	.ascii "<type 1>"
	.ascii ") "
	.ascii "IsGlobalUnicast"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "ip"
	.ascii " "
	.ascii "<type 1>"
	.ascii ") "
	.ascii "Equal"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<type 1>"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "ip"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 1>"
	.ascii ") "
	.ascii "String"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "ip"
	.ascii " "
	.ascii "<type 1>"
	.ascii ") "
	.ascii "IsLoopback"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "ip"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 6 "
	.ascii "*"
	.ascii "<type 1>"
	.ascii ">"
	.ascii ") "
	.ascii "UnmarshalText"
	.ascii " ("
	.ascii "text"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 7 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "ip"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 1>"
	.ascii ") "
	.ascii "IsInterfaceLocalMulticast"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii ">"
	.ascii ", "
	.ascii "viaAddr"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 1>"
	.ascii ", "
	.ascii "iName"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "debug"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii "type "
	.ascii "<type 8 "
	.ascii "\"Client\" "
	.ascii "<type 9 "
	.ascii "struct { "
	.ascii ".command-line-arguments.debugMessages"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii ".command-line-arguments.newGateway"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii ".command-line-arguments.serverAddr"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii ".command-line-arguments.port"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii ".command-line-arguments.wg"
	.ascii " "
	.ascii "<type 10 "
	.ascii "\"sync.WaitGroup\" "
	.ascii "<type 11 "
	.ascii "struct { "
	.ascii ".sync.noCopy"
	.ascii " "
	.ascii "<type 12 "
	.ascii "\".sync.noCopy\" "
	.ascii "<type 13 "
	.ascii "struct { "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "?"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 14 "
	.ascii "*"
	.ascii "<type 12>"
	.ascii ">"
	.ascii ") "
	.ascii "Lock"
	.ascii " ("
	.ascii ")"
	.ascii ";\n"
	.ascii ">"
	.ascii "; "
	.ascii ".sync.state1"
	.ascii " "
	.ascii "<type 15 "
	.ascii "["
	.ascii "12"
	.ascii " "
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii "; "
	.ascii ".sync.sema"
	.ascii " "
	.ascii "<type -7>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "wg"
	.ascii " "
	.ascii "<type 16 "
	.ascii "*"
	.ascii "<type 10>"
	.ascii ">"
	.ascii ") "
	.ascii "Wait"
	.ascii " ("
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "wg"
	.ascii " "
	.ascii "<type 16>"
	.ascii ") "
	.ascii "Done"
	.ascii " ("
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "wg"
	.ascii " "
	.ascii "<type 16>"
	.ascii ") "
	.ascii "Add"
	.ascii " ("
	.ascii "delta"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "wg"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 16>"
	.ascii ") "
	.ascii ".sync.state"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 17 "
	.ascii "*"
	.ascii "<type -8>"
	.ascii ">"
	.ascii ";\n"
	.ascii ">"
	.ascii "; "
	.ascii ".command-line-arguments.serverIP"
	.ascii " "
	.ascii "<type 1>"
	.ascii "; "
	.ascii ".command-line-arguments.localAddr"
	.ascii " "
	.ascii "<type 1>"
	.ascii "; "
	.ascii ".command-line-arguments.additionalAddrs"
	.ascii " "
	.ascii "<type 18 "
	.ascii "["
	.ascii "] "
	.ascii "<type 1>"
	.ascii ">"
	.ascii "; "
	.ascii ".command-line-arguments.localNetMask"
	.ascii " "
	.ascii "<type 19 "
	.ascii "*"
	.ascii "<type 20 "
	.ascii "\"net.IPNet\" "
	.ascii "<type 21 "
	.ascii "struct { "
	.ascii "IP"
	.ascii " "
	.ascii "<type 1>"
	.ascii "; "
	.ascii "Mask"
	.ascii " "
	.ascii "<type 3>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "n"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 22 "
	.ascii "*"
	.ascii "<type 20>"
	.ascii ">"
	.ascii ") "
	.ascii "Network"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "n"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 22>"
	.ascii ") "
	.ascii "String"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "n"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 22>"
	.ascii ") "
	.ascii "Contains"
	.ascii " ("
	.ascii "ip"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 1>"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".command-line-arguments.isShuttingDown"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii ".command-line-arguments.packetsIn"
	.ascii " "
	.ascii "<type 23 "
	.ascii "chan "
	.ascii "<type 24 "
	.ascii "*"
	.ascii "<type 25 "
	.ascii "\"IPPacket\" "
	.ascii "<type 26 "
	.ascii "struct { "
	.ascii "Raw"
	.ascii " "
	.ascii "<type 27 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii "; "
	.ascii "Dest"
	.ascii " "
	.ascii "<type 1>"
	.ascii "; "
	.ascii "Protocol"
	.ascii " "
	.ascii "<type 28 "
	.ascii "\"github.com/twitchyliquid64/subnet/vendor/github.com/songgao/water/waterutil.IPProtocol\" "
	.ascii "<type -20>"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".command-line-arguments.packetsDevOut"
	.ascii " "
	.ascii "<type 29 "
	.ascii "chan "
	.ascii "<type 30 "
	.ascii "*"
	.ascii "<type 25>"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".command-line-arguments.intf"
	.ascii " "
	.ascii "<type 31 "
	.ascii "*"
	.ascii "<type 32 "
	.ascii "\"github.com/twitchyliquid64/subnet/vendor/github.com/songgao/water.Interface\" "
	.ascii "<type 33 "
	.ascii "struct { "
	.ascii ".github.com/twitchyliquid64/subnet/vendor/github.com/songgao/water.isTAP"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii "? "
	.ascii "<type 34 "
	.ascii "\"io.ReadWriteCloser\" "
	.ascii "\""
	.ascii "io"
	.ascii "\" "
	.ascii "<type 35 "
	.ascii "interface { "
	.ascii "? "
	.ascii "<type 36 "
	.ascii "\"io.Reader\" "
	.ascii "<type 37 "
	.ascii "interface { "
	.ascii "Read"
	.ascii " ("
	.ascii "p"
	.ascii " "
	.ascii "<type 38 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "("
	.ascii "n"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii "? "
	.ascii "<type 39 "
	.ascii "\"io.Writer\" "
	.ascii "<type 40 "
	.ascii "interface { "
	.ascii "Write"
	.ascii " ("
	.ascii "p"
	.ascii " "
	.ascii "<type 41 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "("
	.ascii "n"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii "? "
	.ascii "<type 42 "
	.ascii "\"io.Closer\" "
	.ascii "<type 43 "
	.ascii "interface { "
	.ascii "Close"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".github.com/twitchyliquid64/subnet/vendor/github.com/songgao/water.name"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "ifce"
	.ascii " "
	.ascii "<esc:0x22>"
	.ascii " "
	.ascii "<type 44 "
	.ascii "*"
	.ascii "<type 32>"
	.ascii ">"
	.ascii ") "
	.ascii "Name"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "ifce"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 44>"
	.ascii ") "
	.ascii "IsTAP"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "ifce"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 44>"
	.ascii ") "
	.ascii "IsTUN"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".command-line-arguments.tlsConf"
	.ascii " "
	.ascii "<type 45 "
	.ascii "*"
	.ascii "<type 46 "
	.ascii "\"crypto/tls.Config\" "
	.ascii "<type 47 "
	.ascii "struct { "
	.ascii "Rand"
	.ascii " "
	.ascii "<type 36>"
	.ascii "; "
	.ascii "Time"
	.ascii " "
	.ascii "<type 48 "
	.ascii "("
	.ascii ")"
	.ascii " "
	.ascii "<type 49 "
	.ascii "\"time.Time\" "
	.ascii "<type 50 "
	.ascii "struct { "
	.ascii ".time.wall"
	.ascii " "
	.ascii "<type -8>"
	.ascii "; "
	.ascii ".time.ext"
	.ascii " "
	.ascii "<type -4>"
	.ascii "; "
	.ascii ".time.loc"
	.ascii " "
	.ascii "<type 51 "
	.ascii "*"
	.ascii "<type 52 "
	.ascii "\"time.Location\" "
	.ascii "<type 53 "
	.ascii "struct { "
	.ascii ".time.name"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii ".time.zone"
	.ascii " "
	.ascii "<type 54 "
	.ascii "["
	.ascii "] "
	.ascii "<type 55 "
	.ascii "\".time.zone\" "
	.ascii "<type 56 "
	.ascii "struct { "
	.ascii ".time.name"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii ".time.offset"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii ".time.isDST"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".time.tx"
	.ascii " "
	.ascii "<type 57 "
	.ascii "["
	.ascii "] "
	.ascii "<type 58 "
	.ascii "\".time.zoneTrans\" "
	.ascii "<type 59 "
	.ascii "struct { "
	.ascii ".time.when"
	.ascii " "
	.ascii "<type -4>"
	.ascii "; "
	.ascii ".time.index"
	.ascii " "
	.ascii "<type -5>"
	.ascii "; "
	.ascii ".time.isstd"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii ".time.isutc"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".time.cacheStart"
	.ascii " "
	.ascii "<type -4>"
	.ascii "; "
	.ascii ".time.cacheEnd"
	.ascii " "
	.ascii "<type -4>"
	.ascii "; "
	.ascii ".time.cacheZone"
	.ascii " "
	.ascii "<type 60 "
	.ascii "*"
	.ascii "<type 55>"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "l"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 61 "
	.ascii "*"
	.ascii "<type 52>"
	.ascii ">"
	.ascii ") "
	.ascii ".time.firstZoneUsed"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "l"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 61>"
	.ascii ") "
	.ascii ".time.lookupName"
	.ascii " ("
	.ascii "name"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "unix"
	.ascii " "
	.ascii "<type -4>"
	.ascii ")"
	.ascii " ("
	.ascii "offset"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "ok"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "l"
	.ascii " "
	.ascii "<esc:0x32>"
	.ascii " "
	.ascii "<type 61>"
	.ascii ") "
	.ascii ".time.lookup"
	.ascii " ("
	.ascii "sec"
	.ascii " "
	.ascii "<type -4>"
	.ascii ")"
	.ascii " ("
	.ascii "name"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "offset"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "isDST"
	.ascii " "
	.ascii "<type -15>"
	.ascii ", "
	.ascii "start"
	.ascii " "
	.ascii "<type -4>"
	.ascii ", "
	.ascii "end"
	.ascii " "
	.ascii "<type -4>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "l"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 61>"
	.ascii ") "
	.ascii ".time.get"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 61>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "l"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 61>"
	.ascii ") "
	.ascii ".time.lookupFirstZone"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "l"
	.ascii " "
	.ascii "<esc:0x22>"
	.ascii " "
	.ascii "<type 61>"
	.ascii ") "
	.ascii "String"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 49>"
	.ascii ") "
	.ascii "YearDay"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 49>"
	.ascii ") "
	.ascii "UnixNano"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -4>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 49>"
	.ascii ") "
	.ascii "MarshalBinary"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 62 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 49>"
	.ascii ") "
	.ascii "Nanosecond"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 49>"
	.ascii ") "
	.ascii "Equal"
	.ascii " ("
	.ascii "u"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 49>"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 49>"
	.ascii ") "
	.ascii "Minute"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 63 "
	.ascii "*"
	.ascii "<type 49>"
	.ascii ">"
	.ascii ") "
	.ascii "GobDecode"
	.ascii " ("
	.ascii "data"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 64 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x32>"
	.ascii " "
	.ascii "<type 49>"
	.ascii ") "
	.ascii ".time.locabs"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "name"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "offset"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "abs"
	.ascii " "
	.ascii "<type -8>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 63>"
	.ascii ") "
	.ascii ".time.stripMono"
	.ascii " ("
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 49>"
	.ascii ") "
	.ascii ".time.abs"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -8>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x32>"
	.ascii " "
	.ascii "<type 49>"
	.ascii ") "
	.ascii "Zone"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "name"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "offset"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 49>"
	.ascii ") "
	.ascii "In"
	.ascii " ("
	.ascii "loc"
	.ascii " "
	.ascii "<type 51>"
	.ascii ")"
	.ascii " "
	.ascii "<type 49>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 63>"
	.ascii ") "
	.ascii ".time.setMono"
	.ascii " ("
	.ascii "m"
	.ascii " "
	.ascii "<type -4>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 63>"
	.ascii ") "
	.ascii "UnmarshalText"
	.ascii " ("
	.ascii "data"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 65 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 49>"
	.ascii ") "
	.ascii "Weekday"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 66 "
	.ascii "\"time.Weekday\" "
	.ascii "<type -11>"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "d"
	.ascii " "
	.ascii "<type 66>"
	.ascii ") "
	.ascii "String"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii ">"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 49>"
	.ascii ") "
	.ascii "Location"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 51>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 63>"
	.ascii ") "
	.ascii "UnmarshalJSON"
	.ascii " ("
	.ascii "data"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 67 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 63>"
	.ascii ") "
	.ascii ".time.sec"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -4>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 49>"
	.ascii ") "
	.ascii "Sub"
	.ascii " ("
	.ascii "u"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 49>"
	.ascii ")"
	.ascii " "
	.ascii "<type 68 "
	.ascii "\"time.Duration\" "
	.ascii "<type -4>"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "d"
	.ascii " "
	.ascii "<type 68>"
	.ascii ") "
	.ascii "String"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "d"
	.ascii " "
	.ascii "<type 68>"
	.ascii ") "
	.ascii "Nanoseconds"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -4>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "d"
	.ascii " "
	.ascii "<type 68>"
	.ascii ") "
	.ascii "Minutes"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -10>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "d"
	.ascii " "
	.ascii "<type 68>"
	.ascii ") "
	.ascii "Round"
	.ascii " ("
	.ascii "m"
	.ascii " "
	.ascii "<type 68>"
	.ascii ")"
	.ascii " "
	.ascii "<type 68>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "d"
	.ascii " "
	.ascii "<type 68>"
	.ascii ") "
	.ascii "Seconds"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -10>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "d"
	.ascii " "
	.ascii "<type 68>"
	.ascii ") "
	.ascii "Hours"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -10>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "d"
	.ascii " "
	.ascii "<type 68>"
	.ascii ") "
	.ascii "Truncate"
	.ascii " ("
	.ascii "m"
	.ascii " "
	.ascii "<type 68>"
	.ascii ")"
	.ascii " "
	.ascii "<type 68>"
	.ascii ";\n"
	.ascii ">"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 49>"
	.ascii ") "
	.ascii "Day"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 49>"
	.ascii ") "
	.ascii "Add"
	.ascii " ("
	.ascii "d"
	.ascii " "
	.ascii "<type 68>"
	.ascii ")"
	.ascii " "
	.ascii "<type 49>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 63>"
	.ascii ") "
	.ascii "UnmarshalBinary"
	.ascii " ("
	.ascii "data"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 69 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 49>"
	.ascii ") "
	.ascii "Local"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 49>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 49>"
	.ascii ") "
	.ascii "Unix"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -4>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 49>"
	.ascii ") "
	.ascii "After"
	.ascii " ("
	.ascii "u"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 49>"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 63>"
	.ascii ") "
	.ascii ".time.addSec"
	.ascii " ("
	.ascii "d"
	.ascii " "
	.ascii "<type -4>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 63>"
	.ascii ") "
	.ascii ".time.setLoc"
	.ascii " ("
	.ascii "loc"
	.ascii " "
	.ascii "<type 51>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 49>"
	.ascii ") "
	.ascii "GobEncode"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 70 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 49>"
	.ascii ") "
	.ascii "String"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 49>"
	.ascii ") "
	.ascii "Before"
	.ascii " ("
	.ascii "u"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 49>"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 63>"
	.ascii ") "
	.ascii ".time.unixSec"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -4>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 49>"
	.ascii ") "
	.ascii "Round"
	.ascii " ("
	.ascii "d"
	.ascii " "
	.ascii "<type 68>"
	.ascii ")"
	.ascii " "
	.ascii "<type 49>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 49>"
	.ascii ") "
	.ascii "Date"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "year"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "month"
	.ascii " "
	.ascii "<type 71 "
	.ascii "\"time.Month\" "
	.ascii "<type -11>"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "m"
	.ascii " "
	.ascii "<type 71>"
	.ascii ") "
	.ascii "String"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii ">"
	.ascii ", "
	.ascii "day"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 49>"
	.ascii ") "
	.ascii "MarshalJSON"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 72 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 49>"
	.ascii ") "
	.ascii "MarshalText"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 73 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 49>"
	.ascii ") "
	.ascii "IsZero"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 49>"
	.ascii ") "
	.ascii "Format"
	.ascii " ("
	.ascii "layout"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 49>"
	.ascii ") "
	.ascii "Truncate"
	.ascii " ("
	.ascii "d"
	.ascii " "
	.ascii "<type 68>"
	.ascii ")"
	.ascii " "
	.ascii "<type 49>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 49>"
	.ascii ") "
	.ascii "Year"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 49>"
	.ascii ") "
	.ascii "UTC"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 49>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 49>"
	.ascii ") "
	.ascii ".time.date"
	.ascii " ("
	.ascii "full"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii " ("
	.ascii "year"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "month"
	.ascii " "
	.ascii "<type 71>"
	.ascii ", "
	.ascii "day"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "yday"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 49>"
	.ascii ") "
	.ascii "ISOWeek"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "year"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "week"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 49>"
	.ascii ") "
	.ascii "AppendFormat"
	.ascii " ("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 74 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ", "
	.ascii "layout"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " "
	.ascii "<type 75 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 63>"
	.ascii ") "
	.ascii ".time.nsec"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -3>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<type 49>"
	.ascii ") "
	.ascii "AddDate"
	.ascii " ("
	.ascii "years"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "months"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "days"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " "
	.ascii "<type 49>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 49>"
	.ascii ") "
	.ascii "Month"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 71>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 49>"
	.ascii ") "
	.ascii "Second"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 63>"
	.ascii ") "
	.ascii ".time.mono"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -4>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 49>"
	.ascii ") "
	.ascii "Clock"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "hour"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "min"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "sec"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 49>"
	.ascii ") "
	.ascii "Hour"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii "Certificates"
	.ascii " "
	.ascii "<type 76 "
	.ascii "["
	.ascii "] "
	.ascii "<type 77 "
	.ascii "\"crypto/tls.Certificate\" "
	.ascii "<type 78 "
	.ascii "struct { "
	.ascii "Certificate"
	.ascii " "
	.ascii "<type 79 "
	.ascii "["
	.ascii "] "
	.ascii "<type 80 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii "PrivateKey"
	.ascii " "
	.ascii "<type 81 "
	.ascii "\"crypto.PrivateKey\" "
	.ascii "\""
	.ascii "crypto"
	.ascii "\" "
	.ascii "<type 82 "
	.ascii "interface { "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii "OCSPStaple"
	.ascii " "
	.ascii "<type 83 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii "; "
	.ascii "SignedCertificateTimestamps"
	.ascii " "
	.ascii "<type 84 "
	.ascii "["
	.ascii "] "
	.ascii "<type 85 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii "Leaf"
	.ascii " "
	.ascii "<type 86 "
	.ascii "*"
	.ascii "<type 87 "
	.ascii "\"crypto/x509.Certificate\" "
	.ascii "\""
	.ascii "x509"
	.ascii "\" "
	.ascii "<type 88 "
	.ascii "struct { "
	.ascii "Raw"
	.ascii " "
	.ascii "<type 89 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii "; "
	.ascii "RawTBSCertificate"
	.ascii " "
	.ascii "<type 90 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii "; "
	.ascii "RawSubjectPublicKeyInfo"
	.ascii " "
	.ascii "<type 91 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii "; "
	.ascii "RawSubject"
	.ascii " "
	.ascii "<type 92 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii "; "
	.ascii "RawIssuer"
	.ascii " "
	.ascii "<type 93 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii "; "
	.ascii "Signature"
	.ascii " "
	.ascii "<type 94 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii "; "
	.ascii "SignatureAlgorithm"
	.ascii " "
	.ascii "<type 95 "
	.ascii "\"crypto/x509.SignatureAlgorithm\" "
	.ascii "<type -11>"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "algo"
	.ascii " "
	.ascii "<type 95>"
	.ascii ") "
	.ascii ".crypto/x509.isRSAPSS"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "algo"
	.ascii " "
	.ascii "<type 95>"
	.ascii ") "
	.ascii "String"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii ">"
	.ascii "; "
	.ascii "PublicKeyAlgorithm"
	.ascii " "
	.ascii "<type 96 "
	.ascii "\"crypto/x509.PublicKeyAlgorithm\" "
	.ascii "<type -11>"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "algo"
	.ascii " "
	.ascii "<type 96>"
	.ascii ") "
	.ascii "String"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii ">"
	.ascii "; "
	.ascii "PublicKey"
	.ascii " "
	.ascii "<type 97 "
	.ascii "interface { "
	.ascii "}"
	.ascii ">"
	.ascii "; "
	.ascii "Version"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii "SerialNumber"
	.ascii " "
	.ascii "<type 98 "
	.ascii "*"
	.ascii "<type 99 "
	.ascii "\"math/big.Int\" "
	.ascii "\""
	.ascii "big"
	.ascii "\" "
	.ascii "<type 100 "
	.ascii "struct { "
	.ascii ".math/big.neg"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii ".math/big.abs"
	.ascii " "
	.ascii "<type 101 "
	.ascii "\".math/big.nat\" "
	.ascii "<type 102 "
	.ascii "["
	.ascii "] "
	.ascii "<type 103 "
	.ascii "\"math/big.Word\" "
	.ascii "<type -12>"
	.ascii ">"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "n"
	.ascii " "
	.ascii "<type 101>"
	.ascii ") "
	.ascii ".math/big.probablyPrimeLucas"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "z"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 101>"
	.ascii ") "
	.ascii ".math/big.expNNMontgomery"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 101>"
	.ascii ", "
	.ascii "y"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 101>"
	.ascii ", "
	.ascii "m"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 101>"
	.ascii ")"
	.ascii " "
	.ascii "<type 101>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "z"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 101>"
	.ascii ") "
	.ascii ".math/big.norm"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 101>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "x"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 101>"
	.ascii ") "
	.ascii ".math/big.itoa"
	.ascii " ("
	.ascii "neg"
	.ascii " "
	.ascii "<type -15>"
	.ascii ", "
	.ascii "base"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " "
	.ascii "<type 104 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "x"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 101>"
	.ascii ") "
	.ascii ".math/big.bitLen"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "q"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 101>"
	.ascii ") "
	.ascii ".math/big.convertWords"
	.ascii " ("
	.ascii "s"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 105 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ", "
	.ascii "b"
	.ascii " "
	.ascii "<type 103>"
	.ascii ", "
	.ascii "ndigits"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "bb"
	.ascii " "
	.ascii "<type 103>"
	.ascii ", "
	.ascii "table"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 106 "
	.ascii "["
	.ascii "] "
	.ascii "<type 107 "
	.ascii "\".math/big.divisor\" "
	.ascii "<type 108 "
	.ascii "struct { "
	.ascii ".math/big.bbb"
	.ascii " "
	.ascii "<type 101>"
	.ascii "; "
	.ascii ".math/big.nbits"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii ".math/big.ndigits"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "z"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 101>"
	.ascii ") "
	.ascii ".math/big.scan"
	.ascii " ("
	.ascii "r"
	.ascii " "
	.ascii "<type 109 "
	.ascii "\"io.ByteScanner\" "
	.ascii "<type 110 "
	.ascii "interface { "
	.ascii "? "
	.ascii "<type 111 "
	.ascii "\"io.ByteReader\" "
	.ascii "<type 112 "
	.ascii "interface { "
	.ascii "ReadByte"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "("
	.ascii "?"
	.ascii " "
	.ascii "<type -20>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii "UnreadByte"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ", "
	.ascii "base"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "fracOk"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii " ("
	.ascii "res"
	.ascii " "
	.ascii "<type 101>"
	.ascii ", "
	.ascii "b"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "count"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "z"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 101>"
	.ascii ") "
	.ascii ".math/big.div"
	.ascii " ("
	.ascii "z2"
	.ascii " "
	.ascii "<esc:0x82>"
	.ascii " "
	.ascii "<type 101>"
	.ascii ", "
	.ascii "u"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 101>"
	.ascii ", "
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 101>"
	.ascii ")"
	.ascii " ("
	.ascii "q"
	.ascii " "
	.ascii "<type 101>"
	.ascii ", "
	.ascii "r"
	.ascii " "
	.ascii "<type 101>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "z"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 101>"
	.ascii ") "
	.ascii ".math/big.bytes"
	.ascii " ("
	.ascii "buf"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 113 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ")"
	.ascii " ("
	.ascii "i"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "x"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 101>"
	.ascii ") "
	.ascii ".math/big.sticky"
	.ascii " ("
	.ascii "i"
	.ascii " "
	.ascii "<type -12>"
	.ascii ")"
	.ascii " "
	.ascii "<type -12>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "z"
	.ascii " "
	.ascii "<type 101>"
	.ascii ") "
	.ascii ".math/big.expNNWindowed"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<type 101>"
	.ascii ", "
	.ascii "y"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 101>"
	.ascii ", "
	.ascii "m"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 101>"
	.ascii ")"
	.ascii " "
	.ascii "<type 101>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "z"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 101>"
	.ascii ") "
	.ascii ".math/big.make"
	.ascii " ("
	.ascii "n"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " "
	.ascii "<type 101>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "z"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 101>"
	.ascii ") "
	.ascii ".math/big.divLarge"
	.ascii " ("
	.ascii "u"
	.ascii " "
	.ascii "<esc:0x82>"
	.ascii " "
	.ascii "<type 101>"
	.ascii ", "
	.ascii "uIn"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 101>"
	.ascii ", "
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 101>"
	.ascii ")"
	.ascii " ("
	.ascii "q"
	.ascii " "
	.ascii "<type 101>"
	.ascii ", "
	.ascii "r"
	.ascii " "
	.ascii "<type 101>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "x"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 101>"
	.ascii ") "
	.ascii ".math/big.trailingZeroBits"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -12>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "z"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 101>"
	.ascii ") "
	.ascii ".math/big.divW"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 101>"
	.ascii ", "
	.ascii "y"
	.ascii " "
	.ascii "<type 103>"
	.ascii ")"
	.ascii " ("
	.ascii "q"
	.ascii " "
	.ascii "<type 101>"
	.ascii ", "
	.ascii "r"
	.ascii " "
	.ascii "<type 103>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "x"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 101>"
	.ascii ") "
	.ascii ".math/big.modW"
	.ascii " ("
	.ascii "d"
	.ascii " "
	.ascii "<type 103>"
	.ascii ")"
	.ascii " ("
	.ascii "r"
	.ascii " "
	.ascii "<type 103>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "z"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 101>"
	.ascii ") "
	.ascii ".math/big.setBit"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 101>"
	.ascii ", "
	.ascii "i"
	.ascii " "
	.ascii "<type -12>"
	.ascii ", "
	.ascii "b"
	.ascii " "
	.ascii "<type -12>"
	.ascii ")"
	.ascii " "
	.ascii "<type 101>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "z"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 101>"
	.ascii ") "
	.ascii ".math/big.shl"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 101>"
	.ascii ", "
	.ascii "s"
	.ascii " "
	.ascii "<type -12>"
	.ascii ")"
	.ascii " "
	.ascii "<type 101>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "z"
	.ascii " "
	.ascii "<type 101>"
	.ascii ") "
	.ascii ".math/big.mul"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 101>"
	.ascii ", "
	.ascii "y"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 101>"
	.ascii ")"
	.ascii " "
	.ascii "<type 101>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "z"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 101>"
	.ascii ") "
	.ascii ".math/big.random"
	.ascii " ("
	.ascii "rand"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 114 "
	.ascii "*"
	.ascii "<type 115 "
	.ascii "\"math/rand.Rand\" "
	.ascii "<type 116 "
	.ascii "struct { "
	.ascii ".math/rand.src"
	.ascii " "
	.ascii "<type 117 "
	.ascii "\"math/rand.Source\" "
	.ascii "<type 118 "
	.ascii "interface { "
	.ascii "Int63"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -4>"
	.ascii "; "
	.ascii "Seed"
	.ascii " ("
	.ascii "seed"
	.ascii " "
	.ascii "<type -4>"
	.ascii ")"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".math/rand.s64"
	.ascii " "
	.ascii "<type 119 "
	.ascii "\"math/rand.Source64\" "
	.ascii "<type 120 "
	.ascii "interface { "
	.ascii "? "
	.ascii "<type 117>"
	.ascii "; "
	.ascii "Uint64"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -8>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".math/rand.readVal"
	.ascii " "
	.ascii "<type -4>"
	.ascii "; "
	.ascii ".math/rand.readPos"
	.ascii " "
	.ascii "<type -1>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "r"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 121 "
	.ascii "*"
	.ascii "<type 115>"
	.ascii ">"
	.ascii ") "
	.ascii "Uint64"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -8>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "r"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 121>"
	.ascii ") "
	.ascii "Perm"
	.ascii " ("
	.ascii "n"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " "
	.ascii "<type 122 "
	.ascii "["
	.ascii "] "
	.ascii "<type -11>"
	.ascii ">"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "r"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 121>"
	.ascii ") "
	.ascii "ExpFloat64"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -10>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "r"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 121>"
	.ascii ") "
	.ascii "Shuffle"
	.ascii " ("
	.ascii "n"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "swap"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 123 "
	.ascii "("
	.ascii "i"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "j"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii ">"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "r"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 121>"
	.ascii ") "
	.ascii "Int31n"
	.ascii " ("
	.ascii "n"
	.ascii " "
	.ascii "<type -3>"
	.ascii ")"
	.ascii " "
	.ascii "<type -3>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "r"
	.ascii " "
	.ascii "<type 121>"
	.ascii ") "
	.ascii "Read"
	.ascii " ("
	.ascii "p"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 124 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ")"
	.ascii " ("
	.ascii "n"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "r"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 121>"
	.ascii ") "
	.ascii "Seed"
	.ascii " ("
	.ascii "seed"
	.ascii " "
	.ascii "<type -4>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "r"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 121>"
	.ascii ") "
	.ascii "Uint32"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -7>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "r"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 121>"
	.ascii ") "
	.ascii "Int63"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -4>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "r"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 121>"
	.ascii ") "
	.ascii "Float64"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -10>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "r"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 121>"
	.ascii ") "
	.ascii "Intn"
	.ascii " ("
	.ascii "n"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "r"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 121>"
	.ascii ") "
	.ascii "Int"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "r"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 121>"
	.ascii ") "
	.ascii "Float32"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -9>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "r"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 121>"
	.ascii ") "
	.ascii ".math/rand.int31n"
	.ascii " ("
	.ascii "n"
	.ascii " "
	.ascii "<type -3>"
	.ascii ")"
	.ascii " "
	.ascii "<type -3>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "r"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 121>"
	.ascii ") "
	.ascii "Int63n"
	.ascii " ("
	.ascii "n"
	.ascii " "
	.ascii "<type -4>"
	.ascii ")"
	.ascii " "
	.ascii "<type -4>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "r"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 121>"
	.ascii ") "
	.ascii "NormFloat64"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -10>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "r"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 121>"
	.ascii ") "
	.ascii "Int31"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -3>"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii ", "
	.ascii "limit"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 101>"
	.ascii ", "
	.ascii "n"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " "
	.ascii "<type 101>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "z"
	.ascii " "
	.ascii "<type 101>"
	.ascii ") "
	.ascii ".math/big.mulRange"
	.ascii " ("
	.ascii "a"
	.ascii " "
	.ascii "<type -8>"
	.ascii ", "
	.ascii "b"
	.ascii " "
	.ascii "<type -8>"
	.ascii ")"
	.ascii " "
	.ascii "<type 101>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "z"
	.ascii " "
	.ascii "<type 101>"
	.ascii ") "
	.ascii ".math/big.expNN"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<type 101>"
	.ascii ", "
	.ascii "y"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 101>"
	.ascii ", "
	.ascii "m"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 101>"
	.ascii ")"
	.ascii " "
	.ascii "<type 101>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "x"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 101>"
	.ascii ") "
	.ascii ".math/big.cmp"
	.ascii " ("
	.ascii "y"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 101>"
	.ascii ")"
	.ascii " ("
	.ascii "r"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "z"
	.ascii " "
	.ascii "<type 101>"
	.ascii ") "
	.ascii ".math/big.expWW"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<type 103>"
	.ascii ", "
	.ascii "y"
	.ascii " "
	.ascii "<type 103>"
	.ascii ")"
	.ascii " "
	.ascii "<type 101>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "x"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 101>"
	.ascii ") "
	.ascii ".math/big.utoa"
	.ascii " ("
	.ascii "base"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " "
	.ascii "<type 125 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "z"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 101>"
	.ascii ") "
	.ascii ".math/big.clear"
	.ascii " ("
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "z"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 101>"
	.ascii ") "
	.ascii ".math/big.setBytes"
	.ascii " ("
	.ascii "buf"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 126 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type 101>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "z"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 101>"
	.ascii ") "
	.ascii ".math/big.setUint64"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<type -8>"
	.ascii ")"
	.ascii " "
	.ascii "<type 101>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "z"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 101>"
	.ascii ") "
	.ascii ".math/big.sub"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 101>"
	.ascii ", "
	.ascii "y"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 101>"
	.ascii ")"
	.ascii " "
	.ascii "<type 101>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "z"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 101>"
	.ascii ") "
	.ascii ".math/big.shr"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 101>"
	.ascii ", "
	.ascii "s"
	.ascii " "
	.ascii "<type -12>"
	.ascii ")"
	.ascii " "
	.ascii "<type 101>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "z"
	.ascii " "
	.ascii "<type 101>"
	.ascii ") "
	.ascii ".math/big.add"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 101>"
	.ascii ", "
	.ascii "y"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 101>"
	.ascii ")"
	.ascii " "
	.ascii "<type 101>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "z"
	.ascii " "
	.ascii "<type 101>"
	.ascii ") "
	.ascii ".math/big.sqr"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 101>"
	.ascii ")"
	.ascii " "
	.ascii "<type 101>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "z"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 101>"
	.ascii ") "
	.ascii ".math/big.set"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 101>"
	.ascii ")"
	.ascii " "
	.ascii "<type 101>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "z"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 101>"
	.ascii ") "
	.ascii ".math/big.and"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 101>"
	.ascii ", "
	.ascii "y"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 101>"
	.ascii ")"
	.ascii " "
	.ascii "<type 101>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "z"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 101>"
	.ascii ") "
	.ascii ".math/big.mulAddWW"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 101>"
	.ascii ", "
	.ascii "y"
	.ascii " "
	.ascii "<type 103>"
	.ascii ", "
	.ascii "r"
	.ascii " "
	.ascii "<type 103>"
	.ascii ")"
	.ascii " "
	.ascii "<type 101>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "x"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 101>"
	.ascii ") "
	.ascii ".math/big.bit"
	.ascii " ("
	.ascii "i"
	.ascii " "
	.ascii "<type -12>"
	.ascii ")"
	.ascii " "
	.ascii "<type -12>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "z"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 101>"
	.ascii ") "
	.ascii ".math/big.or"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 101>"
	.ascii ", "
	.ascii "y"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 101>"
	.ascii ")"
	.ascii " "
	.ascii "<type 101>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "z"
	.ascii " "
	.ascii "<type 101>"
	.ascii ") "
	.ascii ".math/big.sqrt"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 101>"
	.ascii ")"
	.ascii " "
	.ascii "<type 101>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "z"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 101>"
	.ascii ") "
	.ascii ".math/big.andNot"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 101>"
	.ascii ", "
	.ascii "y"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 101>"
	.ascii ")"
	.ascii " "
	.ascii "<type 101>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "z"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 101>"
	.ascii ") "
	.ascii ".math/big.xor"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 101>"
	.ascii ", "
	.ascii "y"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 101>"
	.ascii ")"
	.ascii " "
	.ascii "<type 101>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "z"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 101>"
	.ascii ") "
	.ascii ".math/big.montgomery"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 101>"
	.ascii ", "
	.ascii "y"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 101>"
	.ascii ", "
	.ascii "m"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 101>"
	.ascii ", "
	.ascii "k"
	.ascii " "
	.ascii "<type 103>"
	.ascii ", "
	.ascii "n"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " "
	.ascii "<type 101>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "n"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 101>"
	.ascii ") "
	.ascii ".math/big.probablyPrimeMillerRabin"
	.ascii " ("
	.ascii "reps"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "force2"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "z"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 101>"
	.ascii ") "
	.ascii ".math/big.setWord"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<type 103>"
	.ascii ")"
	.ascii " "
	.ascii "<type 101>"
	.ascii ";\n"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "z"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 127 "
	.ascii "*"
	.ascii "<type 99>"
	.ascii ">"
	.ascii ") "
	.ascii "UnmarshalJSON"
	.ascii " ("
	.ascii "text"
	.ascii " "
	.ascii "<type 128 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "x"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ") "
	.ascii "Int64"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -4>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "z"
	.ascii " "
	.ascii "<esc:0x1a>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ") "
	.ascii "SetBytes"
	.ascii " ("
	.ascii "buf"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 129 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type 127>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "z"
	.ascii " "
	.ascii "<esc:0x1a>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ") "
	.ascii "Neg"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ")"
	.ascii " "
	.ascii "<type 127>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "x"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ") "
	.ascii "Bit"
	.ascii " ("
	.ascii "i"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " "
	.ascii "<type -12>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "z"
	.ascii " "
	.ascii "<esc:0x1a>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ") "
	.ascii "ModSqrt"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ", "
	.ascii "p"
	.ascii " "
	.ascii "<type 127>"
	.ascii ")"
	.ascii " "
	.ascii "<type 127>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "z"
	.ascii " "
	.ascii "<esc:0x1a>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ") "
	.ascii "Mod"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ", "
	.ascii "y"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ")"
	.ascii " "
	.ascii "<type 127>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "z"
	.ascii " "
	.ascii "<esc:0x1a>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ") "
	.ascii "Abs"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ")"
	.ascii " "
	.ascii "<type 127>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "x"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ") "
	.ascii "GobEncode"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 130 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "z"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ") "
	.ascii "GobDecode"
	.ascii " ("
	.ascii "buf"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 131 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "x"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ") "
	.ascii "MarshalJSON"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 132 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "x"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ") "
	.ascii "Text"
	.ascii " ("
	.ascii "base"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "x"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ") "
	.ascii "ProbablyPrime"
	.ascii " ("
	.ascii "n"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "z"
	.ascii " "
	.ascii "<esc:0x1a>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ") "
	.ascii "Div"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ", "
	.ascii "y"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ")"
	.ascii " "
	.ascii "<type 127>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "x"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ") "
	.ascii "Format"
	.ascii " ("
	.ascii "s"
	.ascii " "
	.ascii "<type 133 "
	.ascii "\"fmt.State\" "
	.ascii "<type 134 "
	.ascii "interface { "
	.ascii "Write"
	.ascii " ("
	.ascii "b"
	.ascii " "
	.ascii "<type 135 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "("
	.ascii "n"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii "; "
	.ascii "Width"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "("
	.ascii "wid"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "ok"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii "; "
	.ascii "Precision"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "("
	.ascii "prec"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "ok"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii "; "
	.ascii "Flag"
	.ascii " ("
	.ascii "c"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ", "
	.ascii "ch"
	.ascii " "
	.ascii "<type -21>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "x"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ") "
	.ascii "String"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "x"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ") "
	.ascii "IsUint64"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "z"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ") "
	.ascii "Scan"
	.ascii " ("
	.ascii "s"
	.ascii " "
	.ascii "<type 136 "
	.ascii "\"fmt.ScanState\" "
	.ascii "<type 137 "
	.ascii "interface { "
	.ascii "ReadRune"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "("
	.ascii "r"
	.ascii " "
	.ascii "<type -21>"
	.ascii ", "
	.ascii "size"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii "; "
	.ascii "UnreadRune"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii "; "
	.ascii "SkipSpace"
	.ascii " ("
	.ascii ")"
	.ascii "; "
	.ascii "Token"
	.ascii " ("
	.ascii "skipSpace"
	.ascii " "
	.ascii "<type -15>"
	.ascii ", "
	.ascii "f"
	.ascii " "
	.ascii "<type 138 "
	.ascii "("
	.ascii "?"
	.ascii " "
	.ascii "<type -21>"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "("
	.ascii "token"
	.ascii " "
	.ascii "<type 139 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii "; "
	.ascii "Width"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "("
	.ascii "wid"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "ok"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii "; "
	.ascii "Read"
	.ascii " ("
	.ascii "buf"
	.ascii " "
	.ascii "<type 140 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "("
	.ascii "n"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ", "
	.ascii "ch"
	.ascii " "
	.ascii "<type -21>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "z"
	.ascii " "
	.ascii "<esc:0x1a>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ") "
	.ascii "Rand"
	.ascii " ("
	.ascii "rnd"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 114>"
	.ascii ", "
	.ascii "n"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ")"
	.ascii " "
	.ascii "<type 127>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "x"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ") "
	.ascii "IsInt64"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "z"
	.ascii " "
	.ascii "<esc:0x1a>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ") "
	.ascii "Set"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ")"
	.ascii " "
	.ascii "<type 127>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "x"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ") "
	.ascii "Append"
	.ascii " ("
	.ascii "buf"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 141 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ", "
	.ascii "base"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " "
	.ascii "<type 142 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "z"
	.ascii " "
	.ascii "<esc:0x1a>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ") "
	.ascii "Mul"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ", "
	.ascii "y"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ")"
	.ascii " "
	.ascii "<type 127>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "z"
	.ascii " "
	.ascii "<esc:0x1a>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ") "
	.ascii "ModInverse"
	.ascii " ("
	.ascii "g"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ", "
	.ascii "n"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ")"
	.ascii " "
	.ascii "<type 127>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "z"
	.ascii " "
	.ascii "<esc:0x1a>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ") "
	.ascii "DivMod"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ", "
	.ascii "y"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ", "
	.ascii "m"
	.ascii " "
	.ascii "<esc:0x8a>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 127>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type 127>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "z"
	.ascii " "
	.ascii "<esc:0x1a>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ") "
	.ascii "Rsh"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ", "
	.ascii "n"
	.ascii " "
	.ascii "<type -12>"
	.ascii ")"
	.ascii " "
	.ascii "<type 127>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "x"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ") "
	.ascii "BitLen"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "z"
	.ascii " "
	.ascii "<esc:0x1a>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ") "
	.ascii "Rem"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ", "
	.ascii "y"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ")"
	.ascii " "
	.ascii "<type 127>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "z"
	.ascii " "
	.ascii "<esc:0x1a>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ") "
	.ascii ".math/big.setFromScanner"
	.ascii " ("
	.ascii "r"
	.ascii " "
	.ascii "<type 109>"
	.ascii ", "
	.ascii "base"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 127>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "z"
	.ascii " "
	.ascii "<esc:0x1a>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ") "
	.ascii ".math/big.scan"
	.ascii " ("
	.ascii "r"
	.ascii " "
	.ascii "<type 109>"
	.ascii ", "
	.ascii "base"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 127>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "z"
	.ascii " "
	.ascii "<esc:0x1a>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ") "
	.ascii "Sqrt"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ")"
	.ascii " "
	.ascii "<type 127>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "z"
	.ascii " "
	.ascii "<esc:0x1a>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ") "
	.ascii "MulRange"
	.ascii " ("
	.ascii "a"
	.ascii " "
	.ascii "<type -4>"
	.ascii ", "
	.ascii "b"
	.ascii " "
	.ascii "<type -4>"
	.ascii ")"
	.ascii " "
	.ascii "<type 127>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "x"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ") "
	.ascii "Uint64"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -8>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "x"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ") "
	.ascii "Cmp"
	.ascii " ("
	.ascii "y"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ")"
	.ascii " ("
	.ascii "r"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "z"
	.ascii " "
	.ascii "<esc:0x1a>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ") "
	.ascii "SetInt64"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<type -4>"
	.ascii ")"
	.ascii " "
	.ascii "<type 127>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "z"
	.ascii " "
	.ascii "<esc:0x1a>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ") "
	.ascii ".math/big.modSqrt3Mod4Prime"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ", "
	.ascii "p"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ")"
	.ascii " "
	.ascii "<type 127>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "z"
	.ascii " "
	.ascii "<esc:0x1a>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ") "
	.ascii "Sub"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ", "
	.ascii "y"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ")"
	.ascii " "
	.ascii "<type 127>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "z"
	.ascii " "
	.ascii "<esc:0x1a>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ") "
	.ascii "Add"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ", "
	.ascii "y"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ")"
	.ascii " "
	.ascii "<type 127>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "z"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ") "
	.ascii "SetBits"
	.ascii " ("
	.ascii "abs"
	.ascii " "
	.ascii "<type 143 "
	.ascii "["
	.ascii "] "
	.ascii "<type 103>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type 127>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "z"
	.ascii " "
	.ascii "<esc:0x1a>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ") "
	.ascii "GCD"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ", "
	.ascii "y"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ", "
	.ascii "a"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ", "
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ")"
	.ascii " "
	.ascii "<type 127>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "z"
	.ascii " "
	.ascii "<esc:0x1a>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ") "
	.ascii "Xor"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ", "
	.ascii "y"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ")"
	.ascii " "
	.ascii "<type 127>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "z"
	.ascii " "
	.ascii "<esc:0x1a>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ") "
	.ascii "Quo"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ", "
	.ascii "y"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ")"
	.ascii " "
	.ascii "<type 127>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "x"
	.ascii " "
	.ascii "<esc:0x22>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ") "
	.ascii "Bits"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 144 "
	.ascii "["
	.ascii "] "
	.ascii "<type 103>"
	.ascii ">"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "z"
	.ascii " "
	.ascii "<esc:0x1a>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ") "
	.ascii ".math/big.modSqrtTonelliShanks"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ", "
	.ascii "p"
	.ascii " "
	.ascii "<type 127>"
	.ascii ")"
	.ascii " "
	.ascii "<type 127>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "z"
	.ascii " "
	.ascii "<esc:0x1a>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ") "
	.ascii "Binomial"
	.ascii " ("
	.ascii "n"
	.ascii " "
	.ascii "<type -4>"
	.ascii ", "
	.ascii "k"
	.ascii " "
	.ascii "<type -4>"
	.ascii ")"
	.ascii " "
	.ascii "<type 127>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "z"
	.ascii " "
	.ascii "<esc:0x1a>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ") "
	.ascii "AndNot"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ", "
	.ascii "y"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ")"
	.ascii " "
	.ascii "<type 127>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "x"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ") "
	.ascii "Sign"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "z"
	.ascii " "
	.ascii "<esc:0x1a>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ") "
	.ascii "QuoRem"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ", "
	.ascii "y"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ", "
	.ascii "r"
	.ascii " "
	.ascii "<esc:0x8a>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 127>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type 127>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "z"
	.ascii " "
	.ascii "<esc:0x1a>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ") "
	.ascii "Exp"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ", "
	.ascii "y"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ", "
	.ascii "m"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ")"
	.ascii " "
	.ascii "<type 127>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "z"
	.ascii " "
	.ascii "<esc:0x1a>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ") "
	.ascii "Or"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ", "
	.ascii "y"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ")"
	.ascii " "
	.ascii "<type 127>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "z"
	.ascii " "
	.ascii "<esc:0x1a>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ") "
	.ascii "SetString"
	.ascii " ("
	.ascii "s"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "base"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 127>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "z"
	.ascii " "
	.ascii "<esc:0x1a>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ") "
	.ascii "SetUint64"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<type -8>"
	.ascii ")"
	.ascii " "
	.ascii "<type 127>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "z"
	.ascii " "
	.ascii "<esc:0x1a>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ") "
	.ascii "SetBit"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ", "
	.ascii "i"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "b"
	.ascii " "
	.ascii "<type -12>"
	.ascii ")"
	.ascii " "
	.ascii "<type 127>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "x"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ") "
	.ascii "Bytes"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 145 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "z"
	.ascii " "
	.ascii "<esc:0x1a>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ") "
	.ascii "Lsh"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ", "
	.ascii "n"
	.ascii " "
	.ascii "<type -12>"
	.ascii ")"
	.ascii " "
	.ascii "<type 127>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "x"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ") "
	.ascii "MarshalText"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "text"
	.ascii " "
	.ascii "<type 146 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "z"
	.ascii " "
	.ascii "<esc:0x1a>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ") "
	.ascii "And"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ", "
	.ascii "y"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ")"
	.ascii " "
	.ascii "<type 127>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "z"
	.ascii " "
	.ascii "<esc:0x1a>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ") "
	.ascii ".math/big.lehmerGCD"
	.ascii " ("
	.ascii "a"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ", "
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ")"
	.ascii " "
	.ascii "<type 127>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "x"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ") "
	.ascii "CmpAbs"
	.ascii " ("
	.ascii "y"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "z"
	.ascii " "
	.ascii "<esc:0x1a>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ") "
	.ascii "Not"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ")"
	.ascii " "
	.ascii "<type 127>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "z"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ") "
	.ascii "UnmarshalText"
	.ascii " ("
	.ascii "text"
	.ascii " "
	.ascii "<type 147 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii "Issuer"
	.ascii " "
	.ascii "<type 148 "
	.ascii "\"crypto/x509/pkix.Name\" "
	.ascii "\""
	.ascii "pkix"
	.ascii "\" "
	.ascii "<type 149 "
	.ascii "struct { "
	.ascii "Country"
	.ascii " "
	.ascii "<type 150 "
	.ascii "["
	.ascii "] "
	.ascii "<type -16>"
	.ascii ">"
	.ascii "; "
	.ascii "Organization"
	.ascii " "
	.ascii "<type 150>"
	.ascii "; "
	.ascii "OrganizationalUnit"
	.ascii " "
	.ascii "<type 150>"
	.ascii "; "
	.ascii "Locality"
	.ascii " "
	.ascii "<type 151 "
	.ascii "["
	.ascii "] "
	.ascii "<type -16>"
	.ascii ">"
	.ascii "; "
	.ascii "Province"
	.ascii " "
	.ascii "<type 151>"
	.ascii "; "
	.ascii "StreetAddress"
	.ascii " "
	.ascii "<type 152 "
	.ascii "["
	.ascii "] "
	.ascii "<type -16>"
	.ascii ">"
	.ascii "; "
	.ascii "PostalCode"
	.ascii " "
	.ascii "<type 152>"
	.ascii "; "
	.ascii "SerialNumber"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "CommonName"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "Names"
	.ascii " "
	.ascii "<type 153 "
	.ascii "["
	.ascii "] "
	.ascii "<type 154 "
	.ascii "\"crypto/x509/pkix.AttributeTypeAndValue\" "
	.ascii "<type 155 "
	.ascii "struct { "
	.ascii "Type"
	.ascii " "
	.ascii "<type 156 "
	.ascii "\"encoding/asn1.ObjectIdentifier\" "
	.ascii "\""
	.ascii "asn1"
	.ascii "\" "
	.ascii "<type 157 "
	.ascii "["
	.ascii "] "
	.ascii "<type -11>"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "oi"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 156>"
	.ascii ") "
	.ascii "String"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "oi"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 156>"
	.ascii ") "
	.ascii "Equal"
	.ascii " ("
	.ascii "other"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 156>"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii ">"
	.ascii "; "
	.ascii "Value"
	.ascii " "
	.ascii "<type 158 "
	.ascii "interface { "
	.ascii "}"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii "ExtraNames"
	.ascii " "
	.ascii "<type 159 "
	.ascii "["
	.ascii "] "
	.ascii "<type 154>"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "n"
	.ascii " "
	.ascii "<type 148>"
	.ascii ") "
	.ascii "ToRDNSequence"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "ret"
	.ascii " "
	.ascii "<type 160 "
	.ascii "\"crypto/x509/pkix.RDNSequence\" "
	.ascii "<type 161 "
	.ascii "["
	.ascii "] "
	.ascii "<type 162 "
	.ascii "\"crypto/x509/pkix.RelativeDistinguishedNameSET\" "
	.ascii "<type 163 "
	.ascii "["
	.ascii "] "
	.ascii "<type 154>"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "r"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 160>"
	.ascii ") "
	.ascii "String"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii ">"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "n"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 148>"
	.ascii ") "
	.ascii ".crypto/x509/pkix.appendRDNs"
	.ascii " ("
	.ascii "in"
	.ascii " "
	.ascii "<esc:0x1a>"
	.ascii " "
	.ascii "<type 160>"
	.ascii ", "
	.ascii "values"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 164 "
	.ascii "["
	.ascii "] "
	.ascii "<type -16>"
	.ascii ">"
	.ascii ", "
	.ascii "oid"
	.ascii " "
	.ascii "<type 156>"
	.ascii ")"
	.ascii " "
	.ascii "<type 160>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "n"
	.ascii " "
	.ascii "<type 148>"
	.ascii ") "
	.ascii "String"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "n"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 165 "
	.ascii "*"
	.ascii "<type 148>"
	.ascii ">"
	.ascii ") "
	.ascii "FillFromRDNSequence"
	.ascii " ("
	.ascii "rdns"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 166 "
	.ascii "*"
	.ascii "<type 160>"
	.ascii ">"
	.ascii ")"
	.ascii ";\n"
	.ascii ">"
	.ascii "; "
	.ascii "Subject"
	.ascii " "
	.ascii "<type 148>"
	.ascii "; "
	.ascii "NotBefore"
	.ascii " "
	.ascii "<type 49>"
	.ascii "; "
	.ascii "NotAfter"
	.ascii " "
	.ascii "<type 49>"
	.ascii "; "
	.ascii "KeyUsage"
	.ascii " "
	.ascii "<type 167 "
	.ascii "\"crypto/x509.KeyUsage\" "
	.ascii "<type -11>"
	.ascii ">"
	.ascii "; "
	.ascii "Extensions"
	.ascii " "
	.ascii "<type 168 "
	.ascii "["
	.ascii "] "
	.ascii "<type 169 "
	.ascii "\"crypto/x509/pkix.Extension\" "
	.ascii "<type 170 "
	.ascii "struct { "
	.ascii "Id"
	.ascii " "
	.ascii "<type 156>"
	.ascii "; "
	.ascii "Critical"
	.ascii " "
	.ascii "<type -15>"
	.ascii " "
	.ascii "\"asn1:\\\"optional\\\"\""
	.ascii "; "
	.ascii "Value"
	.ascii " "
	.ascii "<type 171 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii "ExtraExtensions"
	.ascii " "
	.ascii "<type 172 "
	.ascii "["
	.ascii "] "
	.ascii "<type 169>"
	.ascii ">"
	.ascii "; "
	.ascii "UnhandledCriticalExtensions"
	.ascii " "
	.ascii "<type 173 "
	.ascii "["
	.ascii "] "
	.ascii "<type 156>"
	.ascii ">"
	.ascii "; "
	.ascii "ExtKeyUsage"
	.ascii " "
	.ascii "<type 174 "
	.ascii "["
	.ascii "] "
	.ascii "<type 175 "
	.ascii "\"crypto/x509.ExtKeyUsage\" "
	.ascii "<type -11>"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii "UnknownExtKeyUsage"
	.ascii " "
	.ascii "<type 176 "
	.ascii "["
	.ascii "] "
	.ascii "<type 156>"
	.ascii ">"
	.ascii "; "
	.ascii "BasicConstraintsValid"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii "IsCA"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii "MaxPathLen"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii "MaxPathLenZero"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii "SubjectKeyId"
	.ascii " "
	.ascii "<type 177 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii "; "
	.ascii "AuthorityKeyId"
	.ascii " "
	.ascii "<type 178 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii "; "
	.ascii "OCSPServer"
	.ascii " "
	.ascii "<type 179 "
	.ascii "["
	.ascii "] "
	.ascii "<type -16>"
	.ascii ">"
	.ascii "; "
	.ascii "IssuingCertificateURL"
	.ascii " "
	.ascii "<type 180 "
	.ascii "["
	.ascii "] "
	.ascii "<type -16>"
	.ascii ">"
	.ascii "; "
	.ascii "DNSNames"
	.ascii " "
	.ascii "<type 181 "
	.ascii "["
	.ascii "] "
	.ascii "<type -16>"
	.ascii ">"
	.ascii "; "
	.ascii "EmailAddresses"
	.ascii " "
	.ascii "<type 182 "
	.ascii "["
	.ascii "] "
	.ascii "<type -16>"
	.ascii ">"
	.ascii "; "
	.ascii "IPAddresses"
	.ascii " "
	.ascii "<type 183 "
	.ascii "["
	.ascii "] "
	.ascii "<type 1>"
	.ascii ">"
	.ascii "; "
	.ascii "URIs"
	.ascii " "
	.ascii "<type 184 "
	.ascii "["
	.ascii "] "
	.ascii "<type 185 "
	.ascii "*"
	.ascii "<type 186 "
	.ascii "\"net/url.URL\" "
	.ascii "\""
	.ascii "url"
	.ascii "\" "
	.ascii "<type 187 "
	.ascii "struct { "
	.ascii "Scheme"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "Opaque"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "User"
	.ascii " "
	.ascii "<type 188 "
	.ascii "*"
	.ascii "<type 189 "
	.ascii "\"net/url.Userinfo\" "
	.ascii "<type 190 "
	.ascii "struct { "
	.ascii ".net/url.username"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii ".net/url.password"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii ".net/url.passwordSet"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "u"
	.ascii " "
	.ascii "<esc:0x22>"
	.ascii " "
	.ascii "<type 191 "
	.ascii "*"
	.ascii "<type 189>"
	.ascii ">"
	.ascii ") "
	.ascii "String"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "u"
	.ascii " "
	.ascii "<esc:0x22>"
	.ascii " "
	.ascii "<type 191>"
	.ascii ") "
	.ascii "Password"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "u"
	.ascii " "
	.ascii "<esc:0x22>"
	.ascii " "
	.ascii "<type 191>"
	.ascii ") "
	.ascii "Username"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii "Host"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "Path"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "RawPath"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "ForceQuery"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii "RawQuery"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "Fragment"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "u"
	.ascii " "
	.ascii "<esc:0x22>"
	.ascii " "
	.ascii "<type 192 "
	.ascii "*"
	.ascii "<type 186>"
	.ascii ">"
	.ascii ") "
	.ascii "RequestURI"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "u"
	.ascii " "
	.ascii "<esc:0x22>"
	.ascii " "
	.ascii "<type 192>"
	.ascii ") "
	.ascii "EscapedPath"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "u"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 192>"
	.ascii ") "
	.ascii "String"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "u"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 192>"
	.ascii ") "
	.ascii "IsAbs"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "u"
	.ascii " "
	.ascii "<esc:0xa>"
	.ascii " "
	.ascii "<type 192>"
	.ascii ") "
	.ascii "ResolveReference"
	.ascii " ("
	.ascii "ref"
	.ascii " "
	.ascii "<esc:0xa>"
	.ascii " "
	.ascii "<type 192>"
	.ascii ")"
	.ascii " "
	.ascii "<type 192>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "u"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 192>"
	.ascii ") "
	.ascii "Hostname"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "u"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 192>"
	.ascii ") "
	.ascii "Port"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "u"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 192>"
	.ascii ") "
	.ascii "UnmarshalBinary"
	.ascii " ("
	.ascii "text"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 193 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "u"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 192>"
	.ascii ") "
	.ascii ".net/url.setPath"
	.ascii " ("
	.ascii "p"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "u"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 192>"
	.ascii ") "
	.ascii "Parse"
	.ascii " ("
	.ascii "ref"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 192>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "u"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 192>"
	.ascii ") "
	.ascii "MarshalBinary"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "text"
	.ascii " "
	.ascii "<type 194 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "u"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 192>"
	.ascii ") "
	.ascii "Query"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 195 "
	.ascii "\"net/url.Values\" "
	.ascii "<type 196 "
	.ascii "map ["
	.ascii "<type -16>"
	.ascii "] "
	.ascii "<type 197 "
	.ascii "["
	.ascii "] "
	.ascii "<type -16>"
	.ascii ">"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 195>"
	.ascii ") "
	.ascii "Add"
	.ascii " ("
	.ascii "key"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "value"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 195>"
	.ascii ") "
	.ascii "Del"
	.ascii " ("
	.ascii "key"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 195>"
	.ascii ") "
	.ascii "Encode"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 195>"
	.ascii ") "
	.ascii "Get"
	.ascii " ("
	.ascii "key"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 195>"
	.ascii ") "
	.ascii "Set"
	.ascii " ("
	.ascii "key"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "value"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii ";\n"
	.ascii ">"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii "PermittedDNSDomainsCritical"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii "PermittedDNSDomains"
	.ascii " "
	.ascii "<type 198 "
	.ascii "["
	.ascii "] "
	.ascii "<type -16>"
	.ascii ">"
	.ascii "; "
	.ascii "ExcludedDNSDomains"
	.ascii " "
	.ascii "<type 199 "
	.ascii "["
	.ascii "] "
	.ascii "<type -16>"
	.ascii ">"
	.ascii "; "
	.ascii "PermittedIPRanges"
	.ascii " "
	.ascii "<type 200 "
	.ascii "["
	.ascii "] "
	.ascii "<type 19>"
	.ascii ">"
	.ascii "; "
	.ascii "ExcludedIPRanges"
	.ascii " "
	.ascii "<type 201 "
	.ascii "["
	.ascii "] "
	.ascii "<type 19>"
	.ascii ">"
	.ascii "; "
	.ascii "PermittedEmailAddresses"
	.ascii " "
	.ascii "<type 202 "
	.ascii "["
	.ascii "] "
	.ascii "<type -16>"
	.ascii ">"
	.ascii "; "
	.ascii "ExcludedEmailAddresses"
	.ascii " "
	.ascii "<type 203 "
	.ascii "["
	.ascii "] "
	.ascii "<type -16>"
	.ascii ">"
	.ascii "; "
	.ascii "PermittedURIDomains"
	.ascii " "
	.ascii "<type 204 "
	.ascii "["
	.ascii "] "
	.ascii "<type -16>"
	.ascii ">"
	.ascii "; "
	.ascii "ExcludedURIDomains"
	.ascii " "
	.ascii "<type 205 "
	.ascii "["
	.ascii "] "
	.ascii "<type -16>"
	.ascii ">"
	.ascii "; "
	.ascii "CRLDistributionPoints"
	.ascii " "
	.ascii "<type 206 "
	.ascii "["
	.ascii "] "
	.ascii "<type -16>"
	.ascii ">"
	.ascii "; "
	.ascii "PolicyIdentifiers"
	.ascii " "
	.ascii "<type 207 "
	.ascii "["
	.ascii "] "
	.ascii "<type 156>"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "c"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 208 "
	.ascii "*"
	.ascii "<type 87>"
	.ascii ">"
	.ascii ") "
	.ascii "CheckSignatureFrom"
	.ascii " ("
	.ascii "parent"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 208>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "c"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 208>"
	.ascii ") "
	.ascii "CheckSignature"
	.ascii " ("
	.ascii "algo"
	.ascii " "
	.ascii "<type 95>"
	.ascii ", "
	.ascii "signed"
	.ascii " "
	.ascii "<type 209 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ", "
	.ascii "signature"
	.ascii " "
	.ascii "<type 209>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "c"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 208>"
	.ascii ") "
	.ascii "Equal"
	.ascii " ("
	.ascii "other"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 208>"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "c"
	.ascii " "
	.ascii "<esc:0x1a>"
	.ascii " "
	.ascii "<type 208>"
	.ascii ") "
	.ascii "VerifyHostname"
	.ascii " ("
	.ascii "h"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "c"
	.ascii " "
	.ascii "<type 208>"
	.ascii ") "
	.ascii ".crypto/x509.isValid"
	.ascii " ("
	.ascii "certType"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "currentChain"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 210 "
	.ascii "["
	.ascii "] "
	.ascii "<type 208>"
	.ascii ">"
	.ascii ", "
	.ascii "opts"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 211 "
	.ascii "*"
	.ascii "<type 212 "
	.ascii "\"crypto/x509.VerifyOptions\" "
	.ascii "<type 213 "
	.ascii "struct { "
	.ascii "DNSName"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "Intermediates"
	.ascii " "
	.ascii "<type 214 "
	.ascii "*"
	.ascii "<type 215 "
	.ascii "\"crypto/x509.CertPool\" "
	.ascii "<type 216 "
	.ascii "struct { "
	.ascii ".crypto/x509.bySubjectKeyId"
	.ascii " "
	.ascii "<type 217 "
	.ascii "map ["
	.ascii "<type -16>"
	.ascii "] "
	.ascii "<type 218 "
	.ascii "["
	.ascii "] "
	.ascii "<type -11>"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".crypto/x509.byName"
	.ascii " "
	.ascii "<type 219 "
	.ascii "map ["
	.ascii "<type -16>"
	.ascii "] "
	.ascii "<type 220 "
	.ascii "["
	.ascii "] "
	.ascii "<type -11>"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".crypto/x509.certs"
	.ascii " "
	.ascii "<type 221 "
	.ascii "["
	.ascii "] "
	.ascii "<type 208>"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 222 "
	.ascii "*"
	.ascii "<type 215>"
	.ascii ">"
	.ascii ") "
	.ascii "AddCert"
	.ascii " ("
	.ascii "cert"
	.ascii " "
	.ascii "<type 208>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<esc:0x18a>"
	.ascii " "
	.ascii "<type 222>"
	.ascii ") "
	.ascii ".crypto/x509.findVerifiedParents"
	.ascii " ("
	.ascii "cert"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 208>"
	.ascii ")"
	.ascii " ("
	.ascii "parents"
	.ascii " "
	.ascii "<type 223 "
	.ascii "["
	.ascii "] "
	.ascii "<type -11>"
	.ascii ">"
	.ascii ", "
	.ascii "errCert"
	.ascii " "
	.ascii "<type 208>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 222>"
	.ascii ") "
	.ascii "Subjects"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 224 "
	.ascii "["
	.ascii "] "
	.ascii "<type 225 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ">"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 222>"
	.ascii ") "
	.ascii ".crypto/x509.contains"
	.ascii " ("
	.ascii "cert"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 208>"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 222>"
	.ascii ") "
	.ascii "AppendCertsFromPEM"
	.ascii " ("
	.ascii "pemCerts"
	.ascii " "
	.ascii "<type 226 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ")"
	.ascii " ("
	.ascii "ok"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii "Roots"
	.ascii " "
	.ascii "<type 214>"
	.ascii "; "
	.ascii "CurrentTime"
	.ascii " "
	.ascii "<type 49>"
	.ascii "; "
	.ascii "KeyUsages"
	.ascii " "
	.ascii "<type 227 "
	.ascii "["
	.ascii "] "
	.ascii "<type 175>"
	.ascii ">"
	.ascii "; "
	.ascii "MaxConstraintComparisions"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "c"
	.ascii " "
	.ascii "<esc:0x32>"
	.ascii " "
	.ascii "<type 208>"
	.ascii ") "
	.ascii ".crypto/x509.getSANExtension"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 228 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "c"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 208>"
	.ascii ") "
	.ascii ".crypto/x509.hasSANExtension"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "c"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 208>"
	.ascii ") "
	.ascii "CreateCRL"
	.ascii " ("
	.ascii "rand"
	.ascii " "
	.ascii "<type 36>"
	.ascii ", "
	.ascii "priv"
	.ascii " "
	.ascii "<type 229 "
	.ascii "interface { "
	.ascii "}"
	.ascii ">"
	.ascii ", "
	.ascii "revokedCerts"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 230 "
	.ascii "["
	.ascii "] "
	.ascii "<type 231 "
	.ascii "\"crypto/x509/pkix.RevokedCertificate\" "
	.ascii "<type 232 "
	.ascii "struct { "
	.ascii "SerialNumber"
	.ascii " "
	.ascii "<type 98>"
	.ascii "; "
	.ascii "RevocationTime"
	.ascii " "
	.ascii "<type 49>"
	.ascii "; "
	.ascii "Extensions"
	.ascii " "
	.ascii "<type 233 "
	.ascii "["
	.ascii "] "
	.ascii "<type 169>"
	.ascii ">"
	.ascii " "
	.ascii "\"asn1:\\\"optional\\\"\""
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii ", "
	.ascii "now"
	.ascii " "
	.ascii "<type 49>"
	.ascii ", "
	.ascii "expiry"
	.ascii " "
	.ascii "<type 49>"
	.ascii ")"
	.ascii " ("
	.ascii "crlBytes"
	.ascii " "
	.ascii "<type 234 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "c"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 208>"
	.ascii ") "
	.ascii ".crypto/x509.hasNameConstraints"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "c"
	.ascii " "
	.ascii "<type 208>"
	.ascii ") "
	.ascii "Verify"
	.ascii " ("
	.ascii "opts"
	.ascii " "
	.ascii "<type 212>"
	.ascii ")"
	.ascii " ("
	.ascii "chains"
	.ascii " "
	.ascii "<type 235 "
	.ascii "["
	.ascii "] "
	.ascii "<type 236 "
	.ascii "["
	.ascii "] "
	.ascii "<type 208>"
	.ascii ">"
	.ascii ">"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "c"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 208>"
	.ascii ") "
	.ascii ".crypto/x509.checkNameConstraints"
	.ascii " ("
	.ascii "count"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 237 "
	.ascii "*"
	.ascii "<type -11>"
	.ascii ">"
	.ascii ", "
	.ascii "maxConstraintComparisons"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "nameType"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "name"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "parsedName"
	.ascii " "
	.ascii "<type 238 "
	.ascii "interface { "
	.ascii "}"
	.ascii ">"
	.ascii ", "
	.ascii "match"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 239 "
	.ascii "("
	.ascii "parsedName"
	.ascii " "
	.ascii "<type 240 "
	.ascii "interface { "
	.ascii "}"
	.ascii ">"
	.ascii ", "
	.ascii "constraint"
	.ascii " "
	.ascii "<type 240>"
	.ascii ")"
	.ascii " "
	.ascii "("
	.ascii "match"
	.ascii " "
	.ascii "<type -15>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ">"
	.ascii ", "
	.ascii "permitted"
	.ascii " "
	.ascii "<type 241 "
	.ascii "interface { "
	.ascii "}"
	.ascii ">"
	.ascii ", "
	.ascii "excluded"
	.ascii " "
	.ascii "<type 241>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "c"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 208>"
	.ascii ") "
	.ascii ".crypto/x509.systemVerify"
	.ascii " ("
	.ascii "opts"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 211>"
	.ascii ")"
	.ascii " ("
	.ascii "chains"
	.ascii " "
	.ascii "<type 242 "
	.ascii "["
	.ascii "] "
	.ascii "<type 243 "
	.ascii "["
	.ascii "] "
	.ascii "<type 208>"
	.ascii ">"
	.ascii ">"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "c"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 208>"
	.ascii ") "
	.ascii "CheckCRLSignature"
	.ascii " ("
	.ascii "crl"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 244 "
	.ascii "*"
	.ascii "<type 245 "
	.ascii "\"crypto/x509/pkix.CertificateList\" "
	.ascii "<type 246 "
	.ascii "struct { "
	.ascii "TBSCertList"
	.ascii " "
	.ascii "<type 247 "
	.ascii "\"crypto/x509/pkix.TBSCertificateList\" "
	.ascii "<type 248 "
	.ascii "struct { "
	.ascii "Raw"
	.ascii " "
	.ascii "<type 249 "
	.ascii "\"encoding/asn1.RawContent\" "
	.ascii "<type 250 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii "Version"
	.ascii " "
	.ascii "<type -11>"
	.ascii " "
	.ascii "\"asn1:\\\"optional,default:0\\\"\""
	.ascii "; "
	.ascii "Signature"
	.ascii " "
	.ascii "<type 251 "
	.ascii "\"crypto/x509/pkix.AlgorithmIdentifier\" "
	.ascii "<type 252 "
	.ascii "struct { "
	.ascii "Algorithm"
	.ascii " "
	.ascii "<type 156>"
	.ascii "; "
	.ascii "Parameters"
	.ascii " "
	.ascii "<type 253 "
	.ascii "\"encoding/asn1.RawValue\" "
	.ascii "<type 254 "
	.ascii "struct { "
	.ascii "Class"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii "Tag"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii "IsCompound"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii "Bytes"
	.ascii " "
	.ascii "<type 255 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii "; "
	.ascii "FullBytes"
	.ascii " "
	.ascii "<type 256 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii " "
	.ascii "\"asn1:\\\"optional\\\"\""
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii "Issuer"
	.ascii " "
	.ascii "<type 160>"
	.ascii "; "
	.ascii "ThisUpdate"
	.ascii " "
	.ascii "<type 49>"
	.ascii "; "
	.ascii "NextUpdate"
	.ascii " "
	.ascii "<type 49>"
	.ascii " "
	.ascii "\"asn1:\\\"optional\\\"\""
	.ascii "; "
	.ascii "RevokedCertificates"
	.ascii " "
	.ascii "<type 257 "
	.ascii "["
	.ascii "] "
	.ascii "<type 231>"
	.ascii ">"
	.ascii " "
	.ascii "\"asn1:\\\"optional\\\"\""
	.ascii "; "
	.ascii "Extensions"
	.ascii " "
	.ascii "<type 258 "
	.ascii "["
	.ascii "] "
	.ascii "<type 169>"
	.ascii ">"
	.ascii " "
	.ascii "\"asn1:\\\"tag:0,optional,explicit\\\"\""
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii "SignatureAlgorithm"
	.ascii " "
	.ascii "<type 251>"
	.ascii "; "
	.ascii "SignatureValue"
	.ascii " "
	.ascii "<type 259 "
	.ascii "\"encoding/asn1.BitString\" "
	.ascii "<type 260 "
	.ascii "struct { "
	.ascii "Bytes"
	.ascii " "
	.ascii "<type 261 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii "; "
	.ascii "BitLength"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 259>"
	.ascii ") "
	.ascii "RightAlign"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 262 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 259>"
	.ascii ") "
	.ascii "At"
	.ascii " ("
	.ascii "i"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "certList"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 263 "
	.ascii "*"
	.ascii "<type 245>"
	.ascii ">"
	.ascii ") "
	.ascii "HasExpired"
	.ascii " ("
	.ascii "now"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 49>"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "c"
	.ascii " "
	.ascii "<type 208>"
	.ascii ") "
	.ascii ".crypto/x509.buildChains"
	.ascii " ("
	.ascii "cache"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 264 "
	.ascii "map ["
	.ascii "<type -11>"
	.ascii "] "
	.ascii "<type 265 "
	.ascii "["
	.ascii "] "
	.ascii "<type 266 "
	.ascii "["
	.ascii "] "
	.ascii "<type 208>"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii ", "
	.ascii "currentChain"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 267 "
	.ascii "["
	.ascii "] "
	.ascii "<type 208>"
	.ascii ">"
	.ascii ", "
	.ascii "opts"
	.ascii " "
	.ascii "<esc:0x20a>"
	.ascii " "
	.ascii "<type 211>"
	.ascii ")"
	.ascii " ("
	.ascii "chains"
	.ascii " "
	.ascii "<type 268 "
	.ascii "["
	.ascii "] "
	.ascii "<type 269 "
	.ascii "["
	.ascii "] "
	.ascii "<type 208>"
	.ascii ">"
	.ascii ">"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii "NameToCertificate"
	.ascii " "
	.ascii "<type 270 "
	.ascii "map ["
	.ascii "<type -16>"
	.ascii "] "
	.ascii "<type 271 "
	.ascii "*"
	.ascii "<type 77>"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii "GetCertificate"
	.ascii " "
	.ascii "<type 272 "
	.ascii "("
	.ascii "?"
	.ascii " "
	.ascii "<type 273 "
	.ascii "*"
	.ascii "<type 274 "
	.ascii "\"crypto/tls.ClientHelloInfo\" "
	.ascii "<type 275 "
	.ascii "struct { "
	.ascii "CipherSuites"
	.ascii " "
	.ascii "<type 276 "
	.ascii "["
	.ascii "] "
	.ascii "<type -6>"
	.ascii ">"
	.ascii "; "
	.ascii "ServerName"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "SupportedCurves"
	.ascii " "
	.ascii "<type 277 "
	.ascii "["
	.ascii "] "
	.ascii "<type 278 "
	.ascii "\"crypto/tls.CurveID\" "
	.ascii "<type -6>"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii "SupportedPoints"
	.ascii " "
	.ascii "<type 279 "
	.ascii "["
	.ascii "] "
	.ascii "<type -5>"
	.ascii ">"
	.ascii "; "
	.ascii "SignatureSchemes"
	.ascii " "
	.ascii "<type 280 "
	.ascii "["
	.ascii "] "
	.ascii "<type 281 "
	.ascii "\"crypto/tls.SignatureScheme\" "
	.ascii "<type -6>"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii "SupportedProtos"
	.ascii " "
	.ascii "<type 282 "
	.ascii "["
	.ascii "] "
	.ascii "<type -16>"
	.ascii ">"
	.ascii "; "
	.ascii "SupportedVersions"
	.ascii " "
	.ascii "<type 283 "
	.ascii "["
	.ascii "] "
	.ascii "<type -6>"
	.ascii ">"
	.ascii "; "
	.ascii "Conn"
	.ascii " "
	.ascii "<type 284 "
	.ascii "\"net.Conn\" "
	.ascii "<type 285 "
	.ascii "interface { "
	.ascii "Read"
	.ascii " ("
	.ascii "b"
	.ascii " "
	.ascii "<type 286 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "("
	.ascii "n"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii "; "
	.ascii "Write"
	.ascii " ("
	.ascii "b"
	.ascii " "
	.ascii "<type 287 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "("
	.ascii "n"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii "; "
	.ascii "Close"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii "; "
	.ascii "LocalAddr"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 288 "
	.ascii "\"net.Addr\" "
	.ascii "<type 289 "
	.ascii "interface { "
	.ascii "Network"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "String"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii "RemoteAddr"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 288>"
	.ascii "; "
	.ascii "SetDeadline"
	.ascii " ("
	.ascii "t"
	.ascii " "
	.ascii "<type 49>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii "; "
	.ascii "SetReadDeadline"
	.ascii " ("
	.ascii "t"
	.ascii " "
	.ascii "<type 49>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii "; "
	.ascii "SetWriteDeadline"
	.ascii " ("
	.ascii "t"
	.ascii " "
	.ascii "<type 49>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "("
	.ascii "?"
	.ascii " "
	.ascii "<type 271>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ">"
	.ascii "; "
	.ascii "GetClientCertificate"
	.ascii " "
	.ascii "<type 290 "
	.ascii "("
	.ascii "?"
	.ascii " "
	.ascii "<type 291 "
	.ascii "*"
	.ascii "<type 292 "
	.ascii "\"crypto/tls.CertificateRequestInfo\" "
	.ascii "<type 293 "
	.ascii "struct { "
	.ascii "AcceptableCAs"
	.ascii " "
	.ascii "<type 294 "
	.ascii "["
	.ascii "] "
	.ascii "<type 295 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii "SignatureSchemes"
	.ascii " "
	.ascii "<type 296 "
	.ascii "["
	.ascii "] "
	.ascii "<type 281>"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "("
	.ascii "?"
	.ascii " "
	.ascii "<type 271>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ">"
	.ascii "; "
	.ascii "GetConfigForClient"
	.ascii " "
	.ascii "<type 297 "
	.ascii "("
	.ascii "?"
	.ascii " "
	.ascii "<type 273>"
	.ascii ")"
	.ascii " "
	.ascii "("
	.ascii "?"
	.ascii " "
	.ascii "<type 298 "
	.ascii "*"
	.ascii "<type 46>"
	.ascii ">"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ">"
	.ascii "; "
	.ascii "VerifyPeerCertificate"
	.ascii " "
	.ascii "<type 299 "
	.ascii "("
	.ascii "rawCerts"
	.ascii " "
	.ascii "<type 300 "
	.ascii "["
	.ascii "] "
	.ascii "<type 301 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ">"
	.ascii ", "
	.ascii "verifiedChains"
	.ascii " "
	.ascii "<type 302 "
	.ascii "["
	.ascii "] "
	.ascii "<type 303 "
	.ascii "["
	.ascii "] "
	.ascii "<type 86>"
	.ascii ">"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ">"
	.ascii "; "
	.ascii "RootCAs"
	.ascii " "
	.ascii "<type 214>"
	.ascii "; "
	.ascii "NextProtos"
	.ascii " "
	.ascii "<type 304 "
	.ascii "["
	.ascii "] "
	.ascii "<type -16>"
	.ascii ">"
	.ascii "; "
	.ascii "ServerName"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "ClientAuth"
	.ascii " "
	.ascii "<type 305 "
	.ascii "\"crypto/tls.ClientAuthType\" "
	.ascii "<type -11>"
	.ascii ">"
	.ascii "; "
	.ascii "ClientCAs"
	.ascii " "
	.ascii "<type 214>"
	.ascii "; "
	.ascii "InsecureSkipVerify"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii "CipherSuites"
	.ascii " "
	.ascii "<type 306 "
	.ascii "["
	.ascii "] "
	.ascii "<type -6>"
	.ascii ">"
	.ascii "; "
	.ascii "PreferServerCipherSuites"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii "SessionTicketsDisabled"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii "SessionTicketKey"
	.ascii " "
	.ascii "<type 307 "
	.ascii "["
	.ascii "32"
	.ascii " "
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii "; "
	.ascii "ClientSessionCache"
	.ascii " "
	.ascii "<type 308 "
	.ascii "\"crypto/tls.ClientSessionCache\" "
	.ascii "<type 309 "
	.ascii "interface { "
	.ascii "Get"
	.ascii " ("
	.ascii "sessionKey"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " "
	.ascii "("
	.ascii "session"
	.ascii " "
	.ascii "<type 310 "
	.ascii "*"
	.ascii "<type 311 "
	.ascii "\"crypto/tls.ClientSessionState\" "
	.ascii "<type 312 "
	.ascii "struct { "
	.ascii ".crypto/tls.sessionTicket"
	.ascii " "
	.ascii "<type 313 "
	.ascii "["
	.ascii "] "
	.ascii "<type -5>"
	.ascii ">"
	.ascii "; "
	.ascii ".crypto/tls.vers"
	.ascii " "
	.ascii "<type -6>"
	.ascii "; "
	.ascii ".crypto/tls.cipherSuite"
	.ascii " "
	.ascii "<type -6>"
	.ascii "; "
	.ascii ".crypto/tls.masterSecret"
	.ascii " "
	.ascii "<type 314 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii "; "
	.ascii ".crypto/tls.serverCertificates"
	.ascii " "
	.ascii "<type 315 "
	.ascii "["
	.ascii "] "
	.ascii "<type 86>"
	.ascii ">"
	.ascii "; "
	.ascii ".crypto/tls.verifiedChains"
	.ascii " "
	.ascii "<type 316 "
	.ascii "["
	.ascii "] "
	.ascii "<type 317 "
	.ascii "["
	.ascii "] "
	.ascii "<type 86>"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii ", "
	.ascii "ok"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii "; "
	.ascii "Put"
	.ascii " ("
	.ascii "sessionKey"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "cs"
	.ascii " "
	.ascii "<type 310>"
	.ascii ")"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii "MinVersion"
	.ascii " "
	.ascii "<type -6>"
	.ascii "; "
	.ascii "MaxVersion"
	.ascii " "
	.ascii "<type -6>"
	.ascii "; "
	.ascii "CurvePreferences"
	.ascii " "
	.ascii "<type 318 "
	.ascii "["
	.ascii "] "
	.ascii "<type 278>"
	.ascii ">"
	.ascii "; "
	.ascii "DynamicRecordSizingDisabled"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii "Renegotiation"
	.ascii " "
	.ascii "<type 319 "
	.ascii "\"crypto/tls.RenegotiationSupport\" "
	.ascii "<type -11>"
	.ascii ">"
	.ascii "; "
	.ascii "KeyLogWriter"
	.ascii " "
	.ascii "<type 39>"
	.ascii "; "
	.ascii ".crypto/tls.serverInitOnce"
	.ascii " "
	.ascii "<type 320 "
	.ascii "\"sync.Once\" "
	.ascii "<type 321 "
	.ascii "struct { "
	.ascii ".sync.m"
	.ascii " "
	.ascii "<type 322 "
	.ascii "\"sync.Mutex\" "
	.ascii "<type 323 "
	.ascii "struct { "
	.ascii ".sync.state"
	.ascii " "
	.ascii "<type -3>"
	.ascii "; "
	.ascii ".sync.sema"
	.ascii " "
	.ascii "<type -7>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "m"
	.ascii " "
	.ascii "<type 324 "
	.ascii "*"
	.ascii "<type 322>"
	.ascii ">"
	.ascii ") "
	.ascii "Unlock"
	.ascii " ("
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "m"
	.ascii " "
	.ascii "<type 324>"
	.ascii ") "
	.ascii "Lock"
	.ascii " ("
	.ascii ")"
	.ascii ";\n"
	.ascii ">"
	.ascii "; "
	.ascii ".sync.done"
	.ascii " "
	.ascii "<type -7>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "o"
	.ascii " "
	.ascii "<type 325 "
	.ascii "*"
	.ascii "<type 320>"
	.ascii ">"
	.ascii ") "
	.ascii "Do"
	.ascii " ("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 326 "
	.ascii "("
	.ascii ")"
	.ascii ">"
	.ascii ")"
	.ascii ";\n"
	.ascii ">"
	.ascii "; "
	.ascii ".crypto/tls.mutex"
	.ascii " "
	.ascii "<type 327 "
	.ascii "\"sync.RWMutex\" "
	.ascii "<type 328 "
	.ascii "struct { "
	.ascii ".sync.w"
	.ascii " "
	.ascii "<type 322>"
	.ascii "; "
	.ascii ".sync.writerSem"
	.ascii " "
	.ascii "<type -7>"
	.ascii "; "
	.ascii ".sync.readerSem"
	.ascii " "
	.ascii "<type -7>"
	.ascii "; "
	.ascii ".sync.readerCount"
	.ascii " "
	.ascii "<type -3>"
	.ascii "; "
	.ascii ".sync.readerWait"
	.ascii " "
	.ascii "<type -3>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "rw"
	.ascii " "
	.ascii "<type 329 "
	.ascii "*"
	.ascii "<type 327>"
	.ascii ">"
	.ascii ") "
	.ascii "Unlock"
	.ascii " ("
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "rw"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 329>"
	.ascii ") "
	.ascii "RLocker"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 330 "
	.ascii "\"sync.Locker\" "
	.ascii "<type 331 "
	.ascii "interface { "
	.ascii "Lock"
	.ascii " ("
	.ascii ")"
	.ascii "; "
	.ascii "Unlock"
	.ascii " ("
	.ascii ")"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "rw"
	.ascii " "
	.ascii "<type 329>"
	.ascii ") "
	.ascii "RLock"
	.ascii " ("
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "rw"
	.ascii " "
	.ascii "<type 329>"
	.ascii ") "
	.ascii "RUnlock"
	.ascii " ("
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "rw"
	.ascii " "
	.ascii "<type 329>"
	.ascii ") "
	.ascii "Lock"
	.ascii " ("
	.ascii ")"
	.ascii ";\n"
	.ascii ">"
	.ascii "; "
	.ascii ".crypto/tls.sessionTicketKeys"
	.ascii " "
	.ascii "<type 332 "
	.ascii "["
	.ascii "] "
	.ascii "<type 333 "
	.ascii "\".crypto/tls.ticketKey\" "
	.ascii "<type 334 "
	.ascii "struct { "
	.ascii ".crypto/tls.keyName"
	.ascii " "
	.ascii "<type 335 "
	.ascii "["
	.ascii "16"
	.ascii " "
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii "; "
	.ascii ".crypto/tls.aesKey"
	.ascii " "
	.ascii "<type 336 "
	.ascii "["
	.ascii "16"
	.ascii " "
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii "; "
	.ascii ".crypto/tls.hmacKey"
	.ascii " "
	.ascii "<type 337 "
	.ascii "["
	.ascii "16"
	.ascii " "
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "c"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 338 "
	.ascii "*"
	.ascii "<type 46>"
	.ascii ">"
	.ascii ") "
	.ascii ".crypto/tls.writeKeyLog"
	.ascii " ("
	.ascii "clientRandom"
	.ascii " "
	.ascii "<type 339 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ", "
	.ascii "masterSecret"
	.ascii " "
	.ascii "<type 339>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "c"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 338>"
	.ascii ") "
	.ascii "BuildNameToCertificate"
	.ascii " ("
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "c"
	.ascii " "
	.ascii "<esc:0x1a2>"
	.ascii " "
	.ascii "<type 338>"
	.ascii ") "
	.ascii ".crypto/tls.getCertificate"
	.ascii " ("
	.ascii "clientHello"
	.ascii " "
	.ascii "<type 273>"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 271>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "c"
	.ascii " "
	.ascii "<type 338>"
	.ascii ") "
	.ascii "SetSessionTicketKeys"
	.ascii " ("
	.ascii "keys"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 340 "
	.ascii "["
	.ascii "] "
	.ascii "<type 341 "
	.ascii "["
	.ascii "32"
	.ascii " "
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ">"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "c"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 338>"
	.ascii ") "
	.ascii ".crypto/tls.maxVersion"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -6>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "c"
	.ascii " "
	.ascii "<type 338>"
	.ascii ") "
	.ascii ".crypto/tls.serverInit"
	.ascii " ("
	.ascii "originalConfig"
	.ascii " "
	.ascii "<type 338>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "c"
	.ascii " "
	.ascii "<type 338>"
	.ascii ") "
	.ascii "Clone"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 338>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "c"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 338>"
	.ascii ") "
	.ascii ".crypto/tls.mutualVersion"
	.ascii " ("
	.ascii "vers"
	.ascii " "
	.ascii "<type -6>"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type -6>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "c"
	.ascii " "
	.ascii "<esc:0x22>"
	.ascii " "
	.ascii "<type 338>"
	.ascii ") "
	.ascii ".crypto/tls.rand"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 36>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "c"
	.ascii " "
	.ascii "<esc:0x22>"
	.ascii " "
	.ascii "<type 338>"
	.ascii ") "
	.ascii ".crypto/tls.cipherSuites"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 342 "
	.ascii "["
	.ascii "] "
	.ascii "<type -6>"
	.ascii ">"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "c"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 338>"
	.ascii ") "
	.ascii ".crypto/tls.minVersion"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -6>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "c"
	.ascii " "
	.ascii "<type 338>"
	.ascii ") "
	.ascii ".crypto/tls.ticketKeys"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 343 "
	.ascii "["
	.ascii "] "
	.ascii "<type 333>"
	.ascii ">"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "c"
	.ascii " "
	.ascii "<esc:0x22>"
	.ascii " "
	.ascii "<type 338>"
	.ascii ") "
	.ascii ".crypto/tls.curvePreferences"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 344 "
	.ascii "["
	.ascii "] "
	.ascii "<type 278>"
	.ascii ">"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "c"
	.ascii " "
	.ascii "<esc:0x32>"
	.ascii " "
	.ascii "<type 338>"
	.ascii ") "
	.ascii ".crypto/tls.time"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 49>"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".command-line-arguments.tlsConn"
	.ascii " "
	.ascii "<type 345 "
	.ascii "*"
	.ascii "<type 346 "
	.ascii "\"crypto/tls.Conn\" "
	.ascii "<type 347 "
	.ascii "struct { "
	.ascii ".crypto/tls.conn"
	.ascii " "
	.ascii "<type 284>"
	.ascii "; "
	.ascii ".crypto/tls.isClient"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii ".crypto/tls.handshakeMutex"
	.ascii " "
	.ascii "<type 322>"
	.ascii "; "
	.ascii ".crypto/tls.handshakeCond"
	.ascii " "
	.ascii "<type 348 "
	.ascii "*"
	.ascii "<type 349 "
	.ascii "\"sync.Cond\" "
	.ascii "<type 350 "
	.ascii "struct { "
	.ascii ".sync.noCopy"
	.ascii " "
	.ascii "<type 12>"
	.ascii "; "
	.ascii "L"
	.ascii " "
	.ascii "<type 330>"
	.ascii "; "
	.ascii ".sync.notify"
	.ascii " "
	.ascii "<type 351 "
	.ascii "\".sync.notifyList\" "
	.ascii "<type 352 "
	.ascii "struct { "
	.ascii ".sync.wait"
	.ascii " "
	.ascii "<type -7>"
	.ascii "; "
	.ascii ".sync.notify"
	.ascii " "
	.ascii "<type -7>"
	.ascii "; "
	.ascii ".sync.lock"
	.ascii " "
	.ascii "<type -13>"
	.ascii "; "
	.ascii ".sync.head"
	.ascii " "
	.ascii "<type 353 "
	.ascii "\"unsafe.Pointer\" "
	.ascii "\""
	.ascii "unsafe"
	.ascii "\" "
	.ascii "<type 354 "
	.ascii "*"
	.ascii "any"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".sync.tail"
	.ascii " "
	.ascii "<type 353>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".sync.checker"
	.ascii " "
	.ascii "<type 355 "
	.ascii "\".sync.copyChecker\" "
	.ascii "<type -13>"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "c"
	.ascii " "
	.ascii "<type 356 "
	.ascii "*"
	.ascii "<type 355>"
	.ascii ">"
	.ascii ") "
	.ascii ".sync.check"
	.ascii " ("
	.ascii ")"
	.ascii ";\n"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "c"
	.ascii " "
	.ascii "<type 357 "
	.ascii "*"
	.ascii "<type 349>"
	.ascii ">"
	.ascii ") "
	.ascii "Wait"
	.ascii " ("
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "c"
	.ascii " "
	.ascii "<type 357>"
	.ascii ") "
	.ascii "Signal"
	.ascii " ("
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "c"
	.ascii " "
	.ascii "<type 357>"
	.ascii ") "
	.ascii "Broadcast"
	.ascii " ("
	.ascii ")"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".crypto/tls.handshakeErr"
	.ascii " "
	.ascii "<type -19>"
	.ascii "; "
	.ascii ".crypto/tls.vers"
	.ascii " "
	.ascii "<type -6>"
	.ascii "; "
	.ascii ".crypto/tls.haveVers"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii ".crypto/tls.config"
	.ascii " "
	.ascii "<type 45>"
	.ascii "; "
	.ascii ".crypto/tls.handshakeComplete"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii ".crypto/tls.handshakes"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii ".crypto/tls.didResume"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii ".crypto/tls.cipherSuite"
	.ascii " "
	.ascii "<type -6>"
	.ascii "; "
	.ascii ".crypto/tls.ocspResponse"
	.ascii " "
	.ascii "<type 358 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii "; "
	.ascii ".crypto/tls.scts"
	.ascii " "
	.ascii "<type 359 "
	.ascii "["
	.ascii "] "
	.ascii "<type 360 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".crypto/tls.peerCertificates"
	.ascii " "
	.ascii "<type 361 "
	.ascii "["
	.ascii "] "
	.ascii "<type 86>"
	.ascii ">"
	.ascii "; "
	.ascii ".crypto/tls.verifiedChains"
	.ascii " "
	.ascii "<type 362 "
	.ascii "["
	.ascii "] "
	.ascii "<type 363 "
	.ascii "["
	.ascii "] "
	.ascii "<type 86>"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".crypto/tls.serverName"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii ".crypto/tls.secureRenegotiation"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii ".crypto/tls.clientFinishedIsFirst"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii ".crypto/tls.closeNotifyErr"
	.ascii " "
	.ascii "<type -19>"
	.ascii "; "
	.ascii ".crypto/tls.closeNotifySent"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii ".crypto/tls.clientFinished"
	.ascii " "
	.ascii "<type 364 "
	.ascii "["
	.ascii "12"
	.ascii " "
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii "; "
	.ascii ".crypto/tls.serverFinished"
	.ascii " "
	.ascii "<type 365 "
	.ascii "["
	.ascii "12"
	.ascii " "
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii "; "
	.ascii ".crypto/tls.clientProtocol"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii ".crypto/tls.clientProtocolFallback"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii ".crypto/tls.in"
	.ascii " "
	.ascii "<type 366 "
	.ascii "\".crypto/tls.halfConn\" "
	.ascii "<type 367 "
	.ascii "struct { "
	.ascii "? "
	.ascii "<type 322>"
	.ascii "; "
	.ascii ".crypto/tls.err"
	.ascii " "
	.ascii "<type -19>"
	.ascii "; "
	.ascii ".crypto/tls.version"
	.ascii " "
	.ascii "<type -6>"
	.ascii "; "
	.ascii ".crypto/tls.cipher"
	.ascii " "
	.ascii "<type 368 "
	.ascii "interface { "
	.ascii "}"
	.ascii ">"
	.ascii "; "
	.ascii ".crypto/tls.mac"
	.ascii " "
	.ascii "<type 369 "
	.ascii "\".crypto/tls.macFunction\" "
	.ascii "<type 370 "
	.ascii "interface { "
	.ascii "Size"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii "MAC"
	.ascii " ("
	.ascii "digestBuf"
	.ascii " "
	.ascii "<type 371 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ", "
	.ascii "seq"
	.ascii " "
	.ascii "<type 371>"
	.ascii ", "
	.ascii "header"
	.ascii " "
	.ascii "<type 371>"
	.ascii ", "
	.ascii "data"
	.ascii " "
	.ascii "<type 371>"
	.ascii ", "
	.ascii "extra"
	.ascii " "
	.ascii "<type 371>"
	.ascii ")"
	.ascii " "
	.ascii "<type 372 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".crypto/tls.seq"
	.ascii " "
	.ascii "<type 373 "
	.ascii "["
	.ascii "8"
	.ascii " "
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii "; "
	.ascii ".crypto/tls.bfree"
	.ascii " "
	.ascii "<type 374 "
	.ascii "*"
	.ascii "<type 375 "
	.ascii "\".crypto/tls.block\" "
	.ascii "<type 376 "
	.ascii "struct { "
	.ascii ".crypto/tls.data"
	.ascii " "
	.ascii "<type 377 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii "; "
	.ascii ".crypto/tls.off"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii ".crypto/tls.link"
	.ascii " "
	.ascii "<type 378 "
	.ascii "*"
	.ascii "<type 375>"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 379 "
	.ascii "*"
	.ascii "<type 375>"
	.ascii ">"
	.ascii ") "
	.ascii "Read"
	.ascii " ("
	.ascii "p"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 380 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ")"
	.ascii " ("
	.ascii "n"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 379>"
	.ascii ") "
	.ascii ".crypto/tls.readFromUntil"
	.ascii " ("
	.ascii "r"
	.ascii " "
	.ascii "<type 36>"
	.ascii ", "
	.ascii "n"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 379>"
	.ascii ") "
	.ascii ".crypto/tls.reserve"
	.ascii " ("
	.ascii "n"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 379>"
	.ascii ") "
	.ascii ".crypto/tls.resize"
	.ascii " ("
	.ascii "n"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".crypto/tls.additionalData"
	.ascii " "
	.ascii "<type 381 "
	.ascii "["
	.ascii "13"
	.ascii " "
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii "; "
	.ascii ".crypto/tls.nextCipher"
	.ascii " "
	.ascii "<type 382 "
	.ascii "interface { "
	.ascii "}"
	.ascii ">"
	.ascii "; "
	.ascii ".crypto/tls.nextMac"
	.ascii " "
	.ascii "<type 369>"
	.ascii "; "
	.ascii ".crypto/tls.inDigestBuf"
	.ascii " "
	.ascii "<type 383 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii "; "
	.ascii ".crypto/tls.outDigestBuf"
	.ascii " "
	.ascii "<type 383>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "hc"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 384 "
	.ascii "*"
	.ascii "<type 366>"
	.ascii ">"
	.ascii ") "
	.ascii ".crypto/tls.freeBlock"
	.ascii " ("
	.ascii "b"
	.ascii " "
	.ascii "<type 374>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "hc"
	.ascii " "
	.ascii "<type 384>"
	.ascii ") "
	.ascii ".crypto/tls.encrypt"
	.ascii " ("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 374>"
	.ascii ", "
	.ascii "explicitIVLen"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type -15>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type 385 "
	.ascii "\".crypto/tls.alert\" "
	.ascii "<type -5>"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "e"
	.ascii " "
	.ascii "<type 385>"
	.ascii ") "
	.ascii "Error"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "e"
	.ascii " "
	.ascii "<type 385>"
	.ascii ") "
	.ascii "String"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii ">"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "hc"
	.ascii " "
	.ascii "<esc:0x10a>"
	.ascii " "
	.ascii "<type 384>"
	.ascii ") "
	.ascii ".crypto/tls.splitBlock"
	.ascii " ("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 374>"
	.ascii ", "
	.ascii "n"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 374>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type 374>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "hc"
	.ascii " "
	.ascii "<esc:0x2a>"
	.ascii " "
	.ascii "<type 384>"
	.ascii ") "
	.ascii ".crypto/tls.newBlock"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 374>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "hc"
	.ascii " "
	.ascii "<type 384>"
	.ascii ") "
	.ascii ".crypto/tls.decrypt"
	.ascii " ("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 374>"
	.ascii ")"
	.ascii " ("
	.ascii "ok"
	.ascii " "
	.ascii "<type -15>"
	.ascii ", "
	.ascii "prefixLen"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "alertValue"
	.ascii " "
	.ascii "<type 385>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "hc"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 384>"
	.ascii ") "
	.ascii ".crypto/tls.setErrorLocked"
	.ascii " ("
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "hc"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 384>"
	.ascii ") "
	.ascii ".crypto/tls.prepareCipherSpec"
	.ascii " ("
	.ascii "version"
	.ascii " "
	.ascii "<type -6>"
	.ascii ", "
	.ascii "cipher"
	.ascii " "
	.ascii "<type 386 "
	.ascii "interface { "
	.ascii "}"
	.ascii ">"
	.ascii ", "
	.ascii "mac"
	.ascii " "
	.ascii "<type 369>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "hc"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 384>"
	.ascii ") "
	.ascii ".crypto/tls.changeCipherSpec"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "hc"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 384>"
	.ascii ") "
	.ascii ".crypto/tls.incSeq"
	.ascii " ("
	.ascii ")"
	.ascii ";\n"
	.ascii ">"
	.ascii "; "
	.ascii ".crypto/tls.out"
	.ascii " "
	.ascii "<type 366>"
	.ascii "; "
	.ascii ".crypto/tls.rawInput"
	.ascii " "
	.ascii "<type 374>"
	.ascii "; "
	.ascii ".crypto/tls.input"
	.ascii " "
	.ascii "<type 374>"
	.ascii "; "
	.ascii ".crypto/tls.hand"
	.ascii " "
	.ascii "<type 387 "
	.ascii "\"bytes.Buffer\" "
	.ascii "<type 388 "
	.ascii "struct { "
	.ascii ".bytes.buf"
	.ascii " "
	.ascii "<type 389 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii "; "
	.ascii ".bytes.off"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii ".bytes.bootstrap"
	.ascii " "
	.ascii "<type 390 "
	.ascii "["
	.ascii "64"
	.ascii " "
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii "; "
	.ascii ".bytes.lastRead"
	.ascii " "
	.ascii "<type 391 "
	.ascii "\".bytes.readOp\" "
	.ascii "<type -1>"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 392 "
	.ascii "*"
	.ascii "<type 387>"
	.ascii ">"
	.ascii ") "
	.ascii "UnreadByte"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 392>"
	.ascii ") "
	.ascii "ReadRune"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "r"
	.ascii " "
	.ascii "<type -21>"
	.ascii ", "
	.ascii "size"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 392>"
	.ascii ") "
	.ascii ".bytes.empty"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 392>"
	.ascii ") "
	.ascii "Len"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 392>"
	.ascii ") "
	.ascii "String"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x22>"
	.ascii " "
	.ascii "<type 392>"
	.ascii ") "
	.ascii "Bytes"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 393 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<type 392>"
	.ascii ") "
	.ascii "ReadFrom"
	.ascii " ("
	.ascii "r"
	.ascii " "
	.ascii "<type 36>"
	.ascii ")"
	.ascii " ("
	.ascii "n"
	.ascii " "
	.ascii "<type -4>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 392>"
	.ascii ") "
	.ascii ".bytes.tryGrowByReslice"
	.ascii " ("
	.ascii "n"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 392>"
	.ascii ") "
	.ascii "Cap"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 392>"
	.ascii ") "
	.ascii "Reset"
	.ascii " ("
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 392>"
	.ascii ") "
	.ascii "ReadBytes"
	.ascii " ("
	.ascii "delim"
	.ascii " "
	.ascii "<type -20>"
	.ascii ")"
	.ascii " ("
	.ascii "line"
	.ascii " "
	.ascii "<type 394 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<type 392>"
	.ascii ") "
	.ascii "Grow"
	.ascii " ("
	.ascii "n"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 392>"
	.ascii ") "
	.ascii "Truncate"
	.ascii " ("
	.ascii "n"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x22>"
	.ascii " "
	.ascii "<type 392>"
	.ascii ") "
	.ascii "Next"
	.ascii " ("
	.ascii "n"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " "
	.ascii "<type 395 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<type 392>"
	.ascii ") "
	.ascii "Write"
	.ascii " ("
	.ascii "p"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 396 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ")"
	.ascii " ("
	.ascii "n"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 392>"
	.ascii ") "
	.ascii "WriteTo"
	.ascii " ("
	.ascii "w"
	.ascii " "
	.ascii "<type 39>"
	.ascii ")"
	.ascii " ("
	.ascii "n"
	.ascii " "
	.ascii "<type -4>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<type 392>"
	.ascii ") "
	.ascii "WriteString"
	.ascii " ("
	.ascii "s"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " ("
	.ascii "n"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<type 392>"
	.ascii ") "
	.ascii "WriteByte"
	.ascii " ("
	.ascii "c"
	.ascii " "
	.ascii "<type -20>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 392>"
	.ascii ") "
	.ascii "ReadString"
	.ascii " ("
	.ascii "delim"
	.ascii " "
	.ascii "<type -20>"
	.ascii ")"
	.ascii " ("
	.ascii "line"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<type 392>"
	.ascii ") "
	.ascii "WriteRune"
	.ascii " ("
	.ascii "r"
	.ascii " "
	.ascii "<type -21>"
	.ascii ")"
	.ascii " ("
	.ascii "n"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 392>"
	.ascii ") "
	.ascii "ReadByte"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type -20>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x22>"
	.ascii " "
	.ascii "<type 392>"
	.ascii ") "
	.ascii ".bytes.readSlice"
	.ascii " ("
	.ascii "delim"
	.ascii " "
	.ascii "<type -20>"
	.ascii ")"
	.ascii " ("
	.ascii "line"
	.ascii " "
	.ascii "<type 397 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 392>"
	.ascii ") "
	.ascii "UnreadRune"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<type 392>"
	.ascii ") "
	.ascii ".bytes.grow"
	.ascii " ("
	.ascii "n"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 392>"
	.ascii ") "
	.ascii "Read"
	.ascii " ("
	.ascii "p"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 398 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ")"
	.ascii " ("
	.ascii "n"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii ">"
	.ascii "; "
	.ascii ".crypto/tls.buffering"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii ".crypto/tls.sendBuf"
	.ascii " "
	.ascii "<type 399 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii "; "
	.ascii ".crypto/tls.bytesSent"
	.ascii " "
	.ascii "<type -4>"
	.ascii "; "
	.ascii ".crypto/tls.packetsSent"
	.ascii " "
	.ascii "<type -4>"
	.ascii "; "
	.ascii ".crypto/tls.warnCount"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii ".crypto/tls.activeCall"
	.ascii " "
	.ascii "<type -3>"
	.ascii "; "
	.ascii ".crypto/tls.tmp"
	.ascii " "
	.ascii "<type 400 "
	.ascii "["
	.ascii "16"
	.ascii " "
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "c"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 401 "
	.ascii "*"
	.ascii "<type 346>"
	.ascii ">"
	.ascii ") "
	.ascii ".crypto/tls.decryptTicket"
	.ascii " ("
	.ascii "encrypted"
	.ascii " "
	.ascii "<type 402 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 403 "
	.ascii "*"
	.ascii "<type 404 "
	.ascii "\".crypto/tls.sessionState\" "
	.ascii "<type 405 "
	.ascii "struct { "
	.ascii ".crypto/tls.vers"
	.ascii " "
	.ascii "<type -6>"
	.ascii "; "
	.ascii ".crypto/tls.cipherSuite"
	.ascii " "
	.ascii "<type -6>"
	.ascii "; "
	.ascii ".crypto/tls.masterSecret"
	.ascii " "
	.ascii "<type 406 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii "; "
	.ascii ".crypto/tls.certificates"
	.ascii " "
	.ascii "<type 407 "
	.ascii "["
	.ascii "] "
	.ascii "<type 408 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".crypto/tls.usedOldKey"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 409 "
	.ascii "*"
	.ascii "<type 404>"
	.ascii ">"
	.ascii ") "
	.ascii ".crypto/tls.unmarshal"
	.ascii " ("
	.ascii "data"
	.ascii " "
	.ascii "<type 410 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 409>"
	.ascii ") "
	.ascii ".crypto/tls.marshal"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 411 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 409>"
	.ascii ") "
	.ascii ".crypto/tls.equal"
	.ascii " ("
	.ascii "i"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 412 "
	.ascii "interface { "
	.ascii "}"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "c"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 401>"
	.ascii ") "
	.ascii ".crypto/tls.encryptTicket"
	.ascii " ("
	.ascii "state"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 403>"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 413 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "c"
	.ascii " "
	.ascii "<type 401>"
	.ascii ") "
	.ascii ".crypto/tls.serverHandshake"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "c"
	.ascii " "
	.ascii "<type 401>"
	.ascii ") "
	.ascii ".crypto/tls.clientHandshake"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "c"
	.ascii " "
	.ascii "<type 401>"
	.ascii ") "
	.ascii "OCSPResponse"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 414 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "c"
	.ascii " "
	.ascii "<type 401>"
	.ascii ") "
	.ascii "ConnectionState"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 415 "
	.ascii "\"crypto/tls.ConnectionState\" "
	.ascii "<type 416 "
	.ascii "struct { "
	.ascii "Version"
	.ascii " "
	.ascii "<type -6>"
	.ascii "; "
	.ascii "HandshakeComplete"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii "DidResume"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii "CipherSuite"
	.ascii " "
	.ascii "<type -6>"
	.ascii "; "
	.ascii "NegotiatedProtocol"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "NegotiatedProtocolIsMutual"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii "ServerName"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "PeerCertificates"
	.ascii " "
	.ascii "<type 417 "
	.ascii "["
	.ascii "] "
	.ascii "<type 86>"
	.ascii ">"
	.ascii "; "
	.ascii "VerifiedChains"
	.ascii " "
	.ascii "<type 418 "
	.ascii "["
	.ascii "] "
	.ascii "<type 419 "
	.ascii "["
	.ascii "] "
	.ascii "<type 86>"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii "SignedCertificateTimestamps"
	.ascii " "
	.ascii "<type 420 "
	.ascii "["
	.ascii "] "
	.ascii "<type 421 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii "OCSPResponse"
	.ascii " "
	.ascii "<type 422 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii "; "
	.ascii "TLSUnique"
	.ascii " "
	.ascii "<type 423 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "c"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 401>"
	.ascii ") "
	.ascii "SetReadDeadline"
	.ascii " ("
	.ascii "t"
	.ascii " "
	.ascii "<type 49>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "c"
	.ascii " "
	.ascii "<type 401>"
	.ascii ") "
	.ascii ".crypto/tls.sendAlert"
	.ascii " ("
	.ascii "err"
	.ascii " "
	.ascii "<type 385>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "c"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 401>"
	.ascii ") "
	.ascii ".crypto/tls.newRecordHeaderError"
	.ascii " ("
	.ascii "msg"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " ("
	.ascii "err"
	.ascii " "
	.ascii "<type 424 "
	.ascii "\"crypto/tls.RecordHeaderError\" "
	.ascii "<type 425 "
	.ascii "struct { "
	.ascii "Msg"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "RecordHeader"
	.ascii " "
	.ascii "<type 426 "
	.ascii "["
	.ascii "5"
	.ascii " "
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "e"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 424>"
	.ascii ") "
	.ascii "Error"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii ">"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "c"
	.ascii " "
	.ascii "<type 401>"
	.ascii ") "
	.ascii ".crypto/tls.readHandshake"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 427 "
	.ascii "interface { "
	.ascii "}"
	.ascii ">"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "c"
	.ascii " "
	.ascii "<type 401>"
	.ascii ") "
	.ascii "VerifyHostname"
	.ascii " ("
	.ascii "host"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "c"
	.ascii " "
	.ascii "<type 401>"
	.ascii ") "
	.ascii ".crypto/tls.sendAlertLocked"
	.ascii " ("
	.ascii "err"
	.ascii " "
	.ascii "<type 385>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "c"
	.ascii " "
	.ascii "<type 401>"
	.ascii ") "
	.ascii ".crypto/tls.readRecord"
	.ascii " ("
	.ascii "want"
	.ascii " "
	.ascii "<type 428 "
	.ascii "\".crypto/tls.recordType\" "
	.ascii "<type -5>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "c"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 401>"
	.ascii ") "
	.ascii ".crypto/tls.maxPayloadSizeForWrite"
	.ascii " ("
	.ascii "typ"
	.ascii " "
	.ascii "<type 428>"
	.ascii ", "
	.ascii "explicitIVLen"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "c"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 401>"
	.ascii ") "
	.ascii "RemoteAddr"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 288>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "c"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 401>"
	.ascii ") "
	.ascii ".crypto/tls.write"
	.ascii " ("
	.ascii "data"
	.ascii " "
	.ascii "<type 429 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "c"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 401>"
	.ascii ") "
	.ascii ".crypto/tls.flush"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "c"
	.ascii " "
	.ascii "<type 401>"
	.ascii ") "
	.ascii ".crypto/tls.writeRecordLocked"
	.ascii " ("
	.ascii "typ"
	.ascii " "
	.ascii "<type 428>"
	.ascii ", "
	.ascii "data"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 430 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "c"
	.ascii " "
	.ascii "<type 401>"
	.ascii ") "
	.ascii ".crypto/tls.writeRecord"
	.ascii " ("
	.ascii "typ"
	.ascii " "
	.ascii "<type 428>"
	.ascii ", "
	.ascii "data"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 431 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "c"
	.ascii " "
	.ascii "<type 401>"
	.ascii ") "
	.ascii "Close"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "c"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 401>"
	.ascii ") "
	.ascii "LocalAddr"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 288>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "c"
	.ascii " "
	.ascii "<type 401>"
	.ascii ") "
	.ascii "Write"
	.ascii " ("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 432 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "c"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 401>"
	.ascii ") "
	.ascii "SetDeadline"
	.ascii " ("
	.ascii "t"
	.ascii " "
	.ascii "<type 49>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "c"
	.ascii " "
	.ascii "<type 401>"
	.ascii ") "
	.ascii ".crypto/tls.handleRenegotiation"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "c"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 401>"
	.ascii ") "
	.ascii "SetWriteDeadline"
	.ascii " ("
	.ascii "t"
	.ascii " "
	.ascii "<type 49>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "c"
	.ascii " "
	.ascii "<type 401>"
	.ascii ") "
	.ascii "Read"
	.ascii " ("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 433 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ")"
	.ascii " ("
	.ascii "n"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "c"
	.ascii " "
	.ascii "<type 401>"
	.ascii ") "
	.ascii "CloseWrite"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "c"
	.ascii " "
	.ascii "<type 401>"
	.ascii ") "
	.ascii ".crypto/tls.closeNotify"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "c"
	.ascii " "
	.ascii "<type 401>"
	.ascii ") "
	.ascii "Handshake"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".command-line-arguments.tcpConn"
	.ascii " "
	.ascii "<type 284>"
	.ascii "; "
	.ascii ".command-line-arguments.connectionOk"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii ".command-line-arguments.connResetLock"
	.ascii " "
	.ascii "<type 322>"
	.ascii "; "
	.ascii ".command-line-arguments.reverser"
	.ascii " "
	.ascii "<type 434 "
	.ascii "\"Reverser\" "
	.ascii "<type 435 "
	.ascii "struct { "
	.ascii "RouteDeletions"
	.ascii " "
	.ascii "<type 436 "
	.ascii "["
	.ascii "] "
	.ascii "<type 437 "
	.ascii "\".command-line-arguments.routeEntries\" "
	.ascii "<type 438 "
	.ascii "struct { "
	.ascii ".command-line-arguments.dest"
	.ascii " "
	.ascii "<type 1>"
	.ascii "; "
	.ascii ".command-line-arguments.via"
	.ascii " "
	.ascii "<type 1>"
	.ascii "; "
	.ascii ".command-line-arguments.dev"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".command-line-arguments.updateGateway"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii ".command-line-arguments.newGW"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii ".command-line-arguments.interfaceToClose"
	.ascii " "
	.ascii "<type 31>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "r"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 439 "
	.ascii "*"
	.ascii "<type 434>"
	.ascii ">"
	.ascii ") "
	.ascii "AddRouteEntry"
	.ascii " ("
	.ascii "destination"
	.ascii " "
	.ascii "<type 1>"
	.ascii ", "
	.ascii "via"
	.ascii " "
	.ascii "<type 1>"
	.ascii ", "
	.ascii "dev"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "r"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 439>"
	.ascii ") "
	.ascii "ResetGatewayOSX"
	.ascii " ("
	.ascii "intf"
	.ascii " "
	.ascii "<type 31>"
	.ascii ", "
	.ascii "gw"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "r"
	.ascii " "
	.ascii "<type 439>"
	.ascii ") "
	.ascii "Close"
	.ascii " ("
	.ascii ")"
	.ascii ";\n"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "c"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 440 "
	.ascii "*"
	.ascii "<type 8>"
	.ascii ">"
	.ascii ") "
	.ascii ".command-line-arguments.init"
	.ascii " ("
	.ascii "serverAddr"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "port"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "c"
	.ascii " "
	.ascii "<type 440>"
	.ascii ") "
	.ascii "Run"
	.ascii " ("
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "c"
	.ascii " "
	.ascii "<type 440>"
	.ascii ") "
	.ascii ".command-line-arguments.netSendRoutine"
	.ascii " ("
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "c"
	.ascii " "
	.ascii "<type 440>"
	.ascii ") "
	.ascii ".command-line-arguments.netRecvRoutine"
	.ascii " ("
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "c"
	.ascii " "
	.ascii "<type 440>"
	.ascii ") "
	.ascii ".command-line-arguments.connectionProblem"
	.ascii " ("
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "c"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 440>"
	.ascii ") "
	.ascii ".command-line-arguments.sendLocalAddr"
	.ascii " ("
	.ascii "encoder"
	.ascii " "
	.ascii "<type 441 "
	.ascii "*"
	.ascii "<type 442 "
	.ascii "\"encoding/gob.Encoder\" "
	.ascii "<type 443 "
	.ascii "struct { "
	.ascii ".encoding/gob.mutex"
	.ascii " "
	.ascii "<type 322>"
	.ascii "; "
	.ascii ".encoding/gob.w"
	.ascii " "
	.ascii "<type 444 "
	.ascii "["
	.ascii "] "
	.ascii "<type 39>"
	.ascii ">"
	.ascii "; "
	.ascii ".encoding/gob.sent"
	.ascii " "
	.ascii "<type 445 "
	.ascii "map ["
	.ascii "<type 446 "
	.ascii "\"reflect.Type\" "
	.ascii "\""
	.ascii "reflect"
	.ascii "\" "
	.ascii "<type 447 "
	.ascii "interface { "
	.ascii "Align"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii "FieldAlign"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii "Method"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " "
	.ascii "<type 448 "
	.ascii "\"reflect.Method\" "
	.ascii "<type 449 "
	.ascii "struct { "
	.ascii "Name"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "PkgPath"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "Type"
	.ascii " "
	.ascii "<type 446>"
	.ascii "; "
	.ascii "Func"
	.ascii " "
	.ascii "<type 450 "
	.ascii "\"reflect.Value\" "
	.ascii "<type 451 "
	.ascii "struct { "
	.ascii ".reflect.typ"
	.ascii " "
	.ascii "<type 452 "
	.ascii "*"
	.ascii "<type 453 "
	.ascii "\".reflect.rtype\" "
	.ascii "<type 454 "
	.ascii "struct { "
	.ascii ".reflect.size"
	.ascii " "
	.ascii "<type -13>"
	.ascii "; "
	.ascii ".reflect.ptrdata"
	.ascii " "
	.ascii "<type -13>"
	.ascii "; "
	.ascii ".reflect.hash"
	.ascii " "
	.ascii "<type -7>"
	.ascii "; "
	.ascii ".reflect.kind"
	.ascii " "
	.ascii "<type -5>"
	.ascii "; "
	.ascii ".reflect.align"
	.ascii " "
	.ascii "<type -1>"
	.ascii "; "
	.ascii ".reflect.fieldAlign"
	.ascii " "
	.ascii "<type -5>"
	.ascii "; "
	.ascii ".reflect._"
	.ascii " "
	.ascii "<type -5>"
	.ascii "; "
	.ascii ".reflect.hashfn"
	.ascii " "
	.ascii "<type 455 "
	.ascii "("
	.ascii "?"
	.ascii " "
	.ascii "<type 353>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -13>"
	.ascii ")"
	.ascii " "
	.ascii "<type -13>"
	.ascii ">"
	.ascii "; "
	.ascii ".reflect.equalfn"
	.ascii " "
	.ascii "<type 456 "
	.ascii "("
	.ascii "?"
	.ascii " "
	.ascii "<type 353>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type 353>"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ">"
	.ascii "; "
	.ascii ".reflect.gcdata"
	.ascii " "
	.ascii "<type 457 "
	.ascii "*"
	.ascii "<type -20>"
	.ascii ">"
	.ascii "; "
	.ascii ".reflect.string"
	.ascii " "
	.ascii "<type 458 "
	.ascii "*"
	.ascii "<type -16>"
	.ascii ">"
	.ascii "; "
	.ascii "? "
	.ascii "<type 459 "
	.ascii "*"
	.ascii "<type 460 "
	.ascii "\".reflect.uncommonType\" "
	.ascii "<type 461 "
	.ascii "struct { "
	.ascii ".reflect.name"
	.ascii " "
	.ascii "<type 458>"
	.ascii "; "
	.ascii ".reflect.pkgPath"
	.ascii " "
	.ascii "<type 458>"
	.ascii "; "
	.ascii ".reflect.methods"
	.ascii " "
	.ascii "<type 462 "
	.ascii "["
	.ascii "] "
	.ascii "<type 463 "
	.ascii "\".reflect.method\" "
	.ascii "<type 464 "
	.ascii "struct { "
	.ascii ".reflect.name"
	.ascii " "
	.ascii "<type 458>"
	.ascii "; "
	.ascii ".reflect.pkgPath"
	.ascii " "
	.ascii "<type 458>"
	.ascii "; "
	.ascii ".reflect.mtyp"
	.ascii " "
	.ascii "<type 465 "
	.ascii "*"
	.ascii "<type 453>"
	.ascii ">"
	.ascii "; "
	.ascii ".reflect.typ"
	.ascii " "
	.ascii "<type 465>"
	.ascii "; "
	.ascii ".reflect.tfn"
	.ascii " "
	.ascii "<type 353>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 466 "
	.ascii "*"
	.ascii "<type 460>"
	.ascii ">"
	.ascii ") "
	.ascii ".reflect.uncommon"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 466>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x32>"
	.ascii " "
	.ascii "<type 466>"
	.ascii ") "
	.ascii "PkgPath"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x32>"
	.ascii " "
	.ascii "<type 466>"
	.ascii ") "
	.ascii "Name"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".reflect.ptrToThis"
	.ascii " "
	.ascii "<type 465>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<type 465>"
	.ascii ") "
	.ascii "FieldByNameFunc"
	.ascii " ("
	.ascii "match"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 467 "
	.ascii "("
	.ascii "?"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ">"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 468 "
	.ascii "\"reflect.StructField\" "
	.ascii "<type 469 "
	.ascii "struct { "
	.ascii "Name"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "PkgPath"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "Type"
	.ascii " "
	.ascii "<type 446>"
	.ascii "; "
	.ascii "Tag"
	.ascii " "
	.ascii "<type 470 "
	.ascii "\"reflect.StructTag\" "
	.ascii "<type -16>"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "tag"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 470>"
	.ascii ") "
	.ascii "Get"
	.ascii " ("
	.ascii "key"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "tag"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 470>"
	.ascii ") "
	.ascii "Lookup"
	.ascii " ("
	.ascii "key"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " ("
	.ascii "value"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "ok"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii ";\n"
	.ascii ">"
	.ascii "; "
	.ascii "Offset"
	.ascii " "
	.ascii "<type -13>"
	.ascii "; "
	.ascii "Index"
	.ascii " "
	.ascii "<type 471 "
	.ascii "["
	.ascii "] "
	.ascii "<type -11>"
	.ascii ">"
	.ascii "; "
	.ascii "Anonymous"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 465>"
	.ascii ") "
	.ascii "In"
	.ascii " ("
	.ascii "i"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " "
	.ascii "<type 446>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x4a>"
	.ascii " "
	.ascii "<type 465>"
	.ascii ") "
	.ascii "Field"
	.ascii " ("
	.ascii "i"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " "
	.ascii "<type 468>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 465>"
	.ascii ") "
	.ascii "NumField"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 465>"
	.ascii ") "
	.ascii "Elem"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 446>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 465>"
	.ascii ") "
	.ascii "String"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<type 465>"
	.ascii ") "
	.ascii ".reflect.ptrTo"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 465>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 465>"
	.ascii ") "
	.ascii "IsVariadic"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<type 465>"
	.ascii ") "
	.ascii "FieldByIndex"
	.ascii " ("
	.ascii "index"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 472 "
	.ascii "["
	.ascii "] "
	.ascii "<type -11>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type 468>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 465>"
	.ascii ") "
	.ascii "Size"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -13>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x42>"
	.ascii " "
	.ascii "<type 465>"
	.ascii ") "
	.ascii "Name"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<type 465>"
	.ascii ") "
	.ascii "MethodByName"
	.ascii " ("
	.ascii "name"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " ("
	.ascii "m"
	.ascii " "
	.ascii "<type 448>"
	.ascii ", "
	.ascii "ok"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 465>"
	.ascii ") "
	.ascii ".reflect.common"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 465>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 465>"
	.ascii ") "
	.ascii "Kind"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 473 "
	.ascii "\"reflect.Kind\" "
	.ascii "<type -12>"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "k"
	.ascii " "
	.ascii "<type 473>"
	.ascii ") "
	.ascii "String"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii ">"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 465>"
	.ascii ") "
	.ascii "Bits"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<type 465>"
	.ascii ") "
	.ascii ".reflect.exportedMethods"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 474 "
	.ascii "["
	.ascii "] "
	.ascii "<type 463>"
	.ascii ">"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<type 465>"
	.ascii ") "
	.ascii "NumMethod"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 465>"
	.ascii ") "
	.ascii "Comparable"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 465>"
	.ascii ") "
	.ascii "Implements"
	.ascii " ("
	.ascii "u"
	.ascii " "
	.ascii "<type 446>"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<type 465>"
	.ascii ") "
	.ascii "FieldByName"
	.ascii " ("
	.ascii "name"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 468>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 465>"
	.ascii ") "
	.ascii "AssignableTo"
	.ascii " ("
	.ascii "u"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 446>"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 465>"
	.ascii ") "
	.ascii "Len"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x32>"
	.ascii " "
	.ascii "<type 465>"
	.ascii ") "
	.ascii ".reflect.rawString"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 465>"
	.ascii ") "
	.ascii "Out"
	.ascii " ("
	.ascii "i"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " "
	.ascii "<type 446>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 465>"
	.ascii ") "
	.ascii "ConvertibleTo"
	.ascii " ("
	.ascii "u"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 446>"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x42>"
	.ascii " "
	.ascii "<type 465>"
	.ascii ") "
	.ascii "PkgPath"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 465>"
	.ascii ") "
	.ascii ".reflect.pointers"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<type 465>"
	.ascii ") "
	.ascii "Method"
	.ascii " ("
	.ascii "i"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " ("
	.ascii "m"
	.ascii " "
	.ascii "<type 448>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 465>"
	.ascii ") "
	.ascii "Align"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 465>"
	.ascii ") "
	.ascii "NumOut"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 465>"
	.ascii ") "
	.ascii "ChanDir"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 475 "
	.ascii "\"reflect.ChanDir\" "
	.ascii "<type -11>"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "d"
	.ascii " "
	.ascii "<type 475>"
	.ascii ") "
	.ascii "String"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii ">"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 465>"
	.ascii ") "
	.ascii "Key"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 446>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 465>"
	.ascii ") "
	.ascii "FieldAlign"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 465>"
	.ascii ") "
	.ascii "NumIn"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".reflect.ptr"
	.ascii " "
	.ascii "<type 353>"
	.ascii "; "
	.ascii "? "
	.ascii "<type 476 "
	.ascii "\".reflect.flag\" "
	.ascii "<type -13>"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "f"
	.ascii " "
	.ascii "<type 476>"
	.ascii ") "
	.ascii ".reflect.mustBeExported"
	.ascii " ("
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "f"
	.ascii " "
	.ascii "<type 476>"
	.ascii ") "
	.ascii ".reflect.mustBeAssignable"
	.ascii " ("
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "f"
	.ascii " "
	.ascii "<type 476>"
	.ascii ") "
	.ascii ".reflect.kind"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 473>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "f"
	.ascii " "
	.ascii "<type 476>"
	.ascii ") "
	.ascii ".reflect.ro"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 476>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "f"
	.ascii " "
	.ascii "<type 476>"
	.ascii ") "
	.ascii ".reflect.mustBe"
	.ascii " ("
	.ascii "expected"
	.ascii " "
	.ascii "<type 473>"
	.ascii ")"
	.ascii ";\n"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 450>"
	.ascii ") "
	.ascii "SetBytes"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<type 477 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 450>"
	.ascii ") "
	.ascii "CanAddr"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x2a>"
	.ascii " "
	.ascii "<type 450>"
	.ascii ") "
	.ascii "MapIndex"
	.ascii " ("
	.ascii "key"
	.ascii " "
	.ascii "<type 450>"
	.ascii ")"
	.ascii " "
	.ascii "<type 450>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 450>"
	.ascii ") "
	.ascii "SetMapIndex"
	.ascii " ("
	.ascii "key"
	.ascii " "
	.ascii "<type 450>"
	.ascii ", "
	.ascii "val"
	.ascii " "
	.ascii "<type 450>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 450>"
	.ascii ") "
	.ascii "SetBool"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 450>"
	.ascii ") "
	.ascii "SetFloat"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<type -10>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<type 450>"
	.ascii ") "
	.ascii "Set"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<type 450>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 450>"
	.ascii ") "
	.ascii "Send"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<type 450>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 450>"
	.ascii ") "
	.ascii "OverflowInt"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<type -4>"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<type 450>"
	.ascii ") "
	.ascii "Method"
	.ascii " ("
	.ascii "i"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " "
	.ascii "<type 450>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 450>"
	.ascii ") "
	.ascii "OverflowFloat"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<type -10>"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<type 450>"
	.ascii ") "
	.ascii "Type"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 446>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 450>"
	.ascii ") "
	.ascii "OverflowComplex"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<type -18>"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 450>"
	.ascii ") "
	.ascii "MapKeys"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 478 "
	.ascii "["
	.ascii "] "
	.ascii "<type 450>"
	.ascii ">"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<type 450>"
	.ascii ") "
	.ascii "Len"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 450>"
	.ascii ") "
	.ascii "SetLen"
	.ascii " ("
	.ascii "n"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<type 450>"
	.ascii ") "
	.ascii "MethodByName"
	.ascii " ("
	.ascii "name"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " "
	.ascii "<type 450>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<type 450>"
	.ascii ") "
	.ascii "FieldByIndex"
	.ascii " ("
	.ascii "index"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 479 "
	.ascii "["
	.ascii "] "
	.ascii "<type -11>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type 450>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<type 450>"
	.ascii ") "
	.ascii "String"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 450>"
	.ascii ") "
	.ascii "NumField"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 450>"
	.ascii ") "
	.ascii "Field"
	.ascii " ("
	.ascii "i"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " "
	.ascii "<type 450>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 450>"
	.ascii ") "
	.ascii "SetPointer"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<type 353>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 450>"
	.ascii ") "
	.ascii "OverflowUint"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<type -8>"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<type 450>"
	.ascii ") "
	.ascii "FieldByName"
	.ascii " ("
	.ascii "name"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " "
	.ascii "<type 450>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<type 450>"
	.ascii ") "
	.ascii "CallSlice"
	.ascii " ("
	.ascii "in"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 480 "
	.ascii "["
	.ascii "] "
	.ascii "<type 450>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type 481 "
	.ascii "["
	.ascii "] "
	.ascii "<type 450>"
	.ascii ">"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 450>"
	.ascii ") "
	.ascii "Float"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -10>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 450>"
	.ascii ") "
	.ascii "TrySend"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<type 450>"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 450>"
	.ascii ") "
	.ascii "SetCap"
	.ascii " ("
	.ascii "n"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 450>"
	.ascii ") "
	.ascii "Index"
	.ascii " ("
	.ascii "i"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " "
	.ascii "<type 450>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<type 450>"
	.ascii ") "
	.ascii "Cap"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 450>"
	.ascii ") "
	.ascii ".reflect.setRunes"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<type 482 "
	.ascii "["
	.ascii "] "
	.ascii "<type -21>"
	.ascii ">"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 450>"
	.ascii ") "
	.ascii "SetComplex"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<type -18>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x2a>"
	.ascii " "
	.ascii "<type 450>"
	.ascii ") "
	.ascii ".reflect.runes"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 483 "
	.ascii "["
	.ascii "] "
	.ascii "<type -21>"
	.ascii ">"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 450>"
	.ascii ") "
	.ascii "InterfaceData"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 484 "
	.ascii "["
	.ascii "2"
	.ascii " "
	.ascii "] "
	.ascii "<type -13>"
	.ascii ">"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<type 450>"
	.ascii ") "
	.ascii "TryRecv"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<type 450>"
	.ascii ", "
	.ascii "ok"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 450>"
	.ascii ") "
	.ascii "Uint"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -8>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<type 450>"
	.ascii ") "
	.ascii "Convert"
	.ascii " ("
	.ascii "t"
	.ascii " "
	.ascii "<type 446>"
	.ascii ")"
	.ascii " "
	.ascii "<type 450>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 450>"
	.ascii ") "
	.ascii "Bool"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<type 450>"
	.ascii ") "
	.ascii "Slice"
	.ascii " ("
	.ascii "i"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "j"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " "
	.ascii "<type 450>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 450>"
	.ascii ") "
	.ascii "SetInt"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<type -4>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<type 450>"
	.ascii ") "
	.ascii "Elem"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 450>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<type 450>"
	.ascii ") "
	.ascii ".reflect.recv"
	.ascii " ("
	.ascii "nb"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii " ("
	.ascii "val"
	.ascii " "
	.ascii "<type 450>"
	.ascii ", "
	.ascii "ok"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<type 450>"
	.ascii ") "
	.ascii ".reflect.assignTo"
	.ascii " ("
	.ascii "context"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "dst"
	.ascii " "
	.ascii "<type 452>"
	.ascii ", "
	.ascii "target"
	.ascii " "
	.ascii "<type 353>"
	.ascii ")"
	.ascii " "
	.ascii "<type 450>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<type 450>"
	.ascii ") "
	.ascii "Slice3"
	.ascii " ("
	.ascii "i"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "j"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "k"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " "
	.ascii "<type 450>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 450>"
	.ascii ") "
	.ascii "SetString"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 450>"
	.ascii ") "
	.ascii "SetUint"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<type -8>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 450>"
	.ascii ") "
	.ascii "CanInterface"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<type 450>"
	.ascii ") "
	.ascii "Recv"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<type 450>"
	.ascii ", "
	.ascii "ok"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<type 450>"
	.ascii ") "
	.ascii "Close"
	.ascii " ("
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<type 450>"
	.ascii ") "
	.ascii "Call"
	.ascii " ("
	.ascii "in"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 485 "
	.ascii "["
	.ascii "] "
	.ascii "<type 450>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type 486 "
	.ascii "["
	.ascii "] "
	.ascii "<type 450>"
	.ascii ">"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x2a>"
	.ascii " "
	.ascii "<type 450>"
	.ascii ") "
	.ascii "Bytes"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 487 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<type 450>"
	.ascii ") "
	.ascii "Addr"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 450>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<type 450>"
	.ascii ") "
	.ascii "Interface"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "i"
	.ascii " "
	.ascii "<type 488 "
	.ascii "interface { "
	.ascii "}"
	.ascii ">"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 450>"
	.ascii ") "
	.ascii "Kind"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 473>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 450>"
	.ascii ") "
	.ascii "Int"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -4>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 450>"
	.ascii ") "
	.ascii ".reflect.send"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<type 450>"
	.ascii ", "
	.ascii "nb"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii " ("
	.ascii "selected"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 450>"
	.ascii ") "
	.ascii ".reflect.pointer"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 353>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 450>"
	.ascii ") "
	.ascii "CanSet"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 450>"
	.ascii ") "
	.ascii "Pointer"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -13>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<type 450>"
	.ascii ") "
	.ascii "FieldByNameFunc"
	.ascii " ("
	.ascii "match"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 489 "
	.ascii "("
	.ascii "?"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type 450>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 450>"
	.ascii ") "
	.ascii "Complex"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -18>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<type 450>"
	.ascii ") "
	.ascii "NumMethod"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 450>"
	.ascii ") "
	.ascii "IsValid"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<type 450>"
	.ascii ") "
	.ascii ".reflect.call"
	.ascii " ("
	.ascii "op"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "in"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 490 "
	.ascii "["
	.ascii "] "
	.ascii "<type 450>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type 491 "
	.ascii "["
	.ascii "] "
	.ascii "<type 450>"
	.ascii ">"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 450>"
	.ascii ") "
	.ascii "UnsafeAddr"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -13>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 450>"
	.ascii ") "
	.ascii "IsNil"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii ">"
	.ascii "; "
	.ascii "Index"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii "MethodByName"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " "
	.ascii "("
	.ascii "?"
	.ascii " "
	.ascii "<type 448>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii "; "
	.ascii "NumMethod"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii "Name"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "PkgPath"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "Size"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -13>"
	.ascii "; "
	.ascii "String"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii ".reflect.rawString"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "Kind"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 473>"
	.ascii "; "
	.ascii "Implements"
	.ascii " ("
	.ascii "u"
	.ascii " "
	.ascii "<type 446>"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii "AssignableTo"
	.ascii " ("
	.ascii "u"
	.ascii " "
	.ascii "<type 446>"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii "ConvertibleTo"
	.ascii " ("
	.ascii "u"
	.ascii " "
	.ascii "<type 446>"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii "Comparable"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii "Bits"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii "ChanDir"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 475>"
	.ascii "; "
	.ascii "IsVariadic"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii "Elem"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 446>"
	.ascii "; "
	.ascii "Field"
	.ascii " ("
	.ascii "i"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " "
	.ascii "<type 468>"
	.ascii "; "
	.ascii "FieldByIndex"
	.ascii " ("
	.ascii "index"
	.ascii " "
	.ascii "<type 492 "
	.ascii "["
	.ascii "] "
	.ascii "<type -11>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type 468>"
	.ascii "; "
	.ascii "FieldByName"
	.ascii " ("
	.ascii "name"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " "
	.ascii "("
	.ascii "?"
	.ascii " "
	.ascii "<type 468>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii "; "
	.ascii "FieldByNameFunc"
	.ascii " ("
	.ascii "match"
	.ascii " "
	.ascii "<type 493 "
	.ascii "("
	.ascii "?"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "("
	.ascii "?"
	.ascii " "
	.ascii "<type 468>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii "; "
	.ascii "In"
	.ascii " ("
	.ascii "i"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " "
	.ascii "<type 446>"
	.ascii "; "
	.ascii "Key"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 446>"
	.ascii "; "
	.ascii "Len"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii "NumField"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii "NumIn"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii "NumOut"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii "Out"
	.ascii " ("
	.ascii "i"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " "
	.ascii "<type 446>"
	.ascii "; "
	.ascii ".reflect.common"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 452>"
	.ascii "; "
	.ascii ".reflect.uncommon"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 459>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii "] "
	.ascii "<type 494 "
	.ascii "\".encoding/gob.typeId\" "
	.ascii "<type -3>"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<type 494>"
	.ascii ") "
	.ascii ".encoding/gob.name"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<type 494>"
	.ascii ") "
	.ascii ".encoding/gob.string"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<type 494>"
	.ascii ") "
	.ascii ".encoding/gob.gobType"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 495 "
	.ascii "\".encoding/gob.gobType\" "
	.ascii "<type 496 "
	.ascii "interface { "
	.ascii ".encoding/gob.id"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 494>"
	.ascii "; "
	.ascii ".encoding/gob.setId"
	.ascii " ("
	.ascii "id"
	.ascii " "
	.ascii "<type 494>"
	.ascii ")"
	.ascii "; "
	.ascii ".encoding/gob.name"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii ".encoding/gob.string"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii ".encoding/gob.safeString"
	.ascii " ("
	.ascii "seen"
	.ascii " "
	.ascii "<type 497 "
	.ascii "map ["
	.ascii "<type 494>"
	.ascii "] "
	.ascii "<type -15>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".encoding/gob.countState"
	.ascii " "
	.ascii "<type 498 "
	.ascii "*"
	.ascii "<type 499 "
	.ascii "\".encoding/gob.encoderState\" "
	.ascii "<type 500 "
	.ascii "struct { "
	.ascii ".encoding/gob.enc"
	.ascii " "
	.ascii "<type 501 "
	.ascii "*"
	.ascii "<type 442>"
	.ascii ">"
	.ascii "; "
	.ascii ".encoding/gob.b"
	.ascii " "
	.ascii "<type 502 "
	.ascii "*"
	.ascii "<type 503 "
	.ascii "\".encoding/gob.encBuffer\" "
	.ascii "<type 504 "
	.ascii "struct { "
	.ascii ".encoding/gob.data"
	.ascii " "
	.ascii "<type 505 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii "; "
	.ascii ".encoding/gob.scratch"
	.ascii " "
	.ascii "<type 506 "
	.ascii "["
	.ascii "64"
	.ascii " "
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "e"
	.ascii " "
	.ascii "<type 507 "
	.ascii "*"
	.ascii "<type 503>"
	.ascii ">"
	.ascii ") "
	.ascii "Reset"
	.ascii " ("
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "e"
	.ascii " "
	.ascii "<esc:0x22>"
	.ascii " "
	.ascii "<type 507>"
	.ascii ") "
	.ascii "Bytes"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 508 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "e"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 507>"
	.ascii ") "
	.ascii "WriteByte"
	.ascii " ("
	.ascii "c"
	.ascii " "
	.ascii "<type -20>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "e"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 507>"
	.ascii ") "
	.ascii "Write"
	.ascii " ("
	.ascii "p"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 509 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "e"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 507>"
	.ascii ") "
	.ascii "Len"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "e"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 507>"
	.ascii ") "
	.ascii "WriteString"
	.ascii " ("
	.ascii "s"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".encoding/gob.sendZero"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii ".encoding/gob.fieldnum"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii ".encoding/gob.buf"
	.ascii " "
	.ascii "<type 510 "
	.ascii "["
	.ascii "9"
	.ascii " "
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii "; "
	.ascii ".encoding/gob.next"
	.ascii " "
	.ascii "<type 511 "
	.ascii "*"
	.ascii "<type 499>"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "state"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 512 "
	.ascii "*"
	.ascii "<type 499>"
	.ascii ">"
	.ascii ") "
	.ascii ".encoding/gob.update"
	.ascii " ("
	.ascii "instr"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 513 "
	.ascii "*"
	.ascii "<type 514 "
	.ascii "\".encoding/gob.encInstr\" "
	.ascii "<type 515 "
	.ascii "struct { "
	.ascii ".encoding/gob.op"
	.ascii " "
	.ascii "<type 516 "
	.ascii "\".encoding/gob.encOp\" "
	.ascii "<type 517 "
	.ascii "("
	.ascii "i"
	.ascii " "
	.ascii "<type 518 "
	.ascii "*"
	.ascii "<type 514>"
	.ascii ">"
	.ascii ", "
	.ascii "state"
	.ascii " "
	.ascii "<type 512>"
	.ascii ", "
	.ascii "v"
	.ascii " "
	.ascii "<type 450>"
	.ascii ")"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".encoding/gob.field"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii ".encoding/gob.index"
	.ascii " "
	.ascii "<type 519 "
	.ascii "["
	.ascii "] "
	.ascii "<type -11>"
	.ascii ">"
	.ascii "; "
	.ascii ".encoding/gob.indir"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "state"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 512>"
	.ascii ") "
	.ascii ".encoding/gob.encodeInt"
	.ascii " ("
	.ascii "i"
	.ascii " "
	.ascii "<type -4>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "state"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 512>"
	.ascii ") "
	.ascii ".encoding/gob.encodeUint"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<type -8>"
	.ascii ")"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".encoding/gob.freeList"
	.ascii " "
	.ascii "<type 498>"
	.ascii "; "
	.ascii ".encoding/gob.byteBuf"
	.ascii " "
	.ascii "<type 503>"
	.ascii "; "
	.ascii ".encoding/gob.err"
	.ascii " "
	.ascii "<type -19>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "enc"
	.ascii " "
	.ascii "<type 520 "
	.ascii "*"
	.ascii "<type 442>"
	.ascii ">"
	.ascii ") "
	.ascii "EncodeValue"
	.ascii " ("
	.ascii "value"
	.ascii " "
	.ascii "<type 450>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "enc"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 520>"
	.ascii ") "
	.ascii ".encoding/gob.sendTypeId"
	.ascii " ("
	.ascii "state"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 498>"
	.ascii ", "
	.ascii "ut"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 521 "
	.ascii "*"
	.ascii "<type 522 "
	.ascii "\".encoding/gob.userTypeInfo\" "
	.ascii "<type 523 "
	.ascii "struct { "
	.ascii ".encoding/gob.user"
	.ascii " "
	.ascii "<type 446>"
	.ascii "; "
	.ascii ".encoding/gob.base"
	.ascii " "
	.ascii "<type 446>"
	.ascii "; "
	.ascii ".encoding/gob.indir"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii ".encoding/gob.externalEnc"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii ".encoding/gob.externalDec"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii ".encoding/gob.encIndir"
	.ascii " "
	.ascii "<type -1>"
	.ascii "; "
	.ascii ".encoding/gob.decIndir"
	.ascii " "
	.ascii "<type -1>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "enc"
	.ascii " "
	.ascii "<type 520>"
	.ascii ") "
	.ascii ".encoding/gob.sendTypeDescriptor"
	.ascii " ("
	.ascii "w"
	.ascii " "
	.ascii "<type 39>"
	.ascii ", "
	.ascii "state"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 498>"
	.ascii ", "
	.ascii "ut"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 521>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "enc"
	.ascii " "
	.ascii "<type 520>"
	.ascii ") "
	.ascii "Encode"
	.ascii " ("
	.ascii "e"
	.ascii " "
	.ascii "<type 524 "
	.ascii "interface { "
	.ascii "}"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "enc"
	.ascii " "
	.ascii "<type 520>"
	.ascii ") "
	.ascii ".encoding/gob.sendActualType"
	.ascii " ("
	.ascii "w"
	.ascii " "
	.ascii "<type 39>"
	.ascii ", "
	.ascii "state"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 498>"
	.ascii ", "
	.ascii "ut"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 521>"
	.ascii ", "
	.ascii "actual"
	.ascii " "
	.ascii "<type 446>"
	.ascii ")"
	.ascii " ("
	.ascii "sent"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "enc"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 520>"
	.ascii ") "
	.ascii ".encoding/gob.pushWriter"
	.ascii " ("
	.ascii "w"
	.ascii " "
	.ascii "<type 39>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "enc"
	.ascii " "
	.ascii "<type 520>"
	.ascii ") "
	.ascii ".encoding/gob.encodeSingle"
	.ascii " ("
	.ascii "b"
	.ascii " "
	.ascii "<type 502>"
	.ascii ", "
	.ascii "engine"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 525 "
	.ascii "*"
	.ascii "<type 526 "
	.ascii "\".encoding/gob.encEngine\" "
	.ascii "<type 527 "
	.ascii "struct { "
	.ascii ".encoding/gob.instr"
	.ascii " "
	.ascii "<type 528 "
	.ascii "["
	.ascii "] "
	.ascii "<type 514>"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii ", "
	.ascii "value"
	.ascii " "
	.ascii "<type 450>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "enc"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 520>"
	.ascii ") "
	.ascii ".encoding/gob.freeEncoderState"
	.ascii " ("
	.ascii "e"
	.ascii " "
	.ascii "<type 498>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "enc"
	.ascii " "
	.ascii "<type 520>"
	.ascii ") "
	.ascii ".encoding/gob.encodeStruct"
	.ascii " ("
	.ascii "b"
	.ascii " "
	.ascii "<type 502>"
	.ascii ", "
	.ascii "engine"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 525>"
	.ascii ", "
	.ascii "value"
	.ascii " "
	.ascii "<type 450>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "enc"
	.ascii " "
	.ascii "<type 520>"
	.ascii ") "
	.ascii ".encoding/gob.newEncoderState"
	.ascii " ("
	.ascii "b"
	.ascii " "
	.ascii "<type 502>"
	.ascii ")"
	.ascii " "
	.ascii "<type 498>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "enc"
	.ascii " "
	.ascii "<type 520>"
	.ascii ") "
	.ascii ".encoding/gob.encodeMap"
	.ascii " ("
	.ascii "b"
	.ascii " "
	.ascii "<type 502>"
	.ascii ", "
	.ascii "mv"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 450>"
	.ascii ", "
	.ascii "keyOp"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 516>"
	.ascii ", "
	.ascii "elemOp"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 516>"
	.ascii ", "
	.ascii "keyIndir"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "elemIndir"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "enc"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 520>"
	.ascii ") "
	.ascii ".encoding/gob.popWriter"
	.ascii " ("
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "enc"
	.ascii " "
	.ascii "<type 520>"
	.ascii ") "
	.ascii ".encoding/gob.encodeArray"
	.ascii " ("
	.ascii "b"
	.ascii " "
	.ascii "<type 502>"
	.ascii ", "
	.ascii "value"
	.ascii " "
	.ascii "<type 450>"
	.ascii ", "
	.ascii "op"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 516>"
	.ascii ", "
	.ascii "elemIndir"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "length"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "helper"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 529 "
	.ascii "\".encoding/gob.encHelper\" "
	.ascii "<type 530 "
	.ascii "("
	.ascii "state"
	.ascii " "
	.ascii "<type 498>"
	.ascii ", "
	.ascii "v"
	.ascii " "
	.ascii "<type 450>"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ">"
	.ascii ">"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "enc"
	.ascii " "
	.ascii "<type 520>"
	.ascii ") "
	.ascii ".encoding/gob.encode"
	.ascii " ("
	.ascii "b"
	.ascii " "
	.ascii "<type 502>"
	.ascii ", "
	.ascii "value"
	.ascii " "
	.ascii "<type 450>"
	.ascii ", "
	.ascii "ut"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 521>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "enc"
	.ascii " "
	.ascii "<esc:0x32>"
	.ascii " "
	.ascii "<type 520>"
	.ascii ") "
	.ascii ".encoding/gob.writer"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 39>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "enc"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 520>"
	.ascii ") "
	.ascii ".encoding/gob.writeMessage"
	.ascii " ("
	.ascii "w"
	.ascii " "
	.ascii "<type 39>"
	.ascii ", "
	.ascii "b"
	.ascii " "
	.ascii "<type 502>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "enc"
	.ascii " "
	.ascii "<type 520>"
	.ascii ") "
	.ascii ".encoding/gob.encodeInterface"
	.ascii " ("
	.ascii "b"
	.ascii " "
	.ascii "<type 502>"
	.ascii ", "
	.ascii "iv"
	.ascii " "
	.ascii "<type 450>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "enc"
	.ascii " "
	.ascii "<type 520>"
	.ascii ") "
	.ascii ".encoding/gob.sendType"
	.ascii " ("
	.ascii "w"
	.ascii " "
	.ascii "<type 39>"
	.ascii ", "
	.ascii "state"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 498>"
	.ascii ", "
	.ascii "origt"
	.ascii " "
	.ascii "<type 446>"
	.ascii ")"
	.ascii " ("
	.ascii "sent"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "enc"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 520>"
	.ascii ") "
	.ascii ".encoding/gob.setError"
	.ascii " ("
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "enc"
	.ascii " "
	.ascii "<type 520>"
	.ascii ") "
	.ascii ".encoding/gob.encodeGobEncoder"
	.ascii " ("
	.ascii "b"
	.ascii " "
	.ascii "<type 502>"
	.ascii ", "
	.ascii "ut"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 521>"
	.ascii ", "
	.ascii "v"
	.ascii " "
	.ascii "<type 450>"
	.ascii ")"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "c"
	.ascii " "
	.ascii "<type 440>"
	.ascii ") "
	.ascii "Close"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii ">"
	.ascii ";\n"
	.ascii "func "
	.ascii "DelRoute"
	.ascii " ("
	.ascii "addr"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 1>"
	.ascii ", "
	.ascii "viaAddr"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 1>"
	.ascii ", "
	.ascii "iName"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "debug"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii "func "
	.ascii "GetNetGateway"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "gw"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "dev"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii "type "
	.ascii "<type 25>"
	.ascii ";\n"
	.ascii "func "
	.ascii "NewClient"
	.ascii " ("
	.ascii "servAddr"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "port"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "network"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "iName"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "newGateway"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "certPemPath"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "keyPemPath"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "caCertPath"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "additionalAddresses"
	.ascii " "
	.ascii "<type 531 "
	.ascii "["
	.ascii "] "
	.ascii "<type 1>"
	.ascii ">"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 440>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii "func "
	.ascii "NewServer"
	.ascii " ("
	.ascii "servHost"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "port"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "network"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "iName"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "certPemPath"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "keyPemPath"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "caCertPath"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 532 "
	.ascii "*"
	.ascii "<type 533 "
	.ascii "\"Server\" "
	.ascii "<type 534 "
	.ascii "struct { "
	.ascii ".command-line-arguments.tlsConf"
	.ascii " "
	.ascii "<type 45>"
	.ascii "; "
	.ascii ".command-line-arguments.tlsListener"
	.ascii " "
	.ascii "<type 535 "
	.ascii "\"net.Listener\" "
	.ascii "<type 536 "
	.ascii "interface { "
	.ascii "Accept"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "("
	.ascii "?"
	.ascii " "
	.ascii "<type 284>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii "; "
	.ascii "Close"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii "; "
	.ascii "Addr"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 288>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".command-line-arguments.localAddr"
	.ascii " "
	.ascii "<type 1>"
	.ascii "; "
	.ascii ".command-line-arguments.localNetMask"
	.ascii " "
	.ascii "<type 19>"
	.ascii "; "
	.ascii ".command-line-arguments.isShuttingDown"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii ".command-line-arguments.clientIDByAddress"
	.ascii " "
	.ascii "<type 537 "
	.ascii "map ["
	.ascii "<type -16>"
	.ascii "] "
	.ascii "<type -11>"
	.ascii ">"
	.ascii "; "
	.ascii ".command-line-arguments.clients"
	.ascii " "
	.ascii "<type 538 "
	.ascii "map ["
	.ascii "<type -11>"
	.ascii "] "
	.ascii "<type 539 "
	.ascii "*"
	.ascii "<type 540 "
	.ascii "\".command-line-arguments.serverConn\" "
	.ascii "<type 541 "
	.ascii "struct { "
	.ascii ".command-line-arguments.conn"
	.ascii " "
	.ascii "<type 284>"
	.ascii "; "
	.ascii ".command-line-arguments.id"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii ".command-line-arguments.outboundIPPkts"
	.ascii " "
	.ascii "<type 542 "
	.ascii "chan "
	.ascii "<type 543 "
	.ascii "*"
	.ascii "<type 25>"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".command-line-arguments.server"
	.ascii " "
	.ascii "<type 544 "
	.ascii "*"
	.ascii "<type 533>"
	.ascii ">"
	.ascii "; "
	.ascii ".command-line-arguments.canSendIP"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii ".command-line-arguments.remoteAddrs"
	.ascii " "
	.ascii "<type 545 "
	.ascii "["
	.ascii "] "
	.ascii "<type 1>"
	.ascii ">"
	.ascii "; "
	.ascii ".command-line-arguments.connectionOk"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "c"
	.ascii " "
	.ascii "<type 546 "
	.ascii "*"
	.ascii "<type 540>"
	.ascii ">"
	.ascii ") "
	.ascii ".command-line-arguments.initClient"
	.ascii " ("
	.ascii "s"
	.ascii " "
	.ascii "<type 547 "
	.ascii "*"
	.ascii "<type 533>"
	.ascii ">"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "c"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 546>"
	.ascii ") "
	.ascii ".command-line-arguments.writeRoutine"
	.ascii " ("
	.ascii "isShuttingDown"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 548 "
	.ascii "*"
	.ascii "<type -15>"
	.ascii ">"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "c"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 546>"
	.ascii ") "
	.ascii ".command-line-arguments.readRoutine"
	.ascii " ("
	.ascii "isShuttingDown"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 549 "
	.ascii "*"
	.ascii "<type -15>"
	.ascii ">"
	.ascii ", "
	.ascii "ipPacketSink"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 550 "
	.ascii "chan "
	.ascii "<type 551 "
	.ascii "*"
	.ascii "<type 552 "
	.ascii "\".command-line-arguments.inboundIPPkt\" "
	.ascii "<type 553 "
	.ascii "struct { "
	.ascii ".command-line-arguments.pkt"
	.ascii " "
	.ascii "<type 543>"
	.ascii "; "
	.ascii ".command-line-arguments.clientID"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "c"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 546>"
	.ascii ") "
	.ascii ".command-line-arguments.queueIP"
	.ascii " ("
	.ascii "pkt"
	.ascii " "
	.ascii "<type 543>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "c"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 546>"
	.ascii ") "
	.ascii ".command-line-arguments.remoteAddressStr"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "c"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 546>"
	.ascii ") "
	.ascii ".command-line-arguments.hadError"
	.ascii " ("
	.ascii "errInRead"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".command-line-arguments.clientsLock"
	.ascii " "
	.ascii "<type 322>"
	.ascii "; "
	.ascii ".command-line-arguments.lastClientID"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii ".command-line-arguments.inboundIPPkts"
	.ascii " "
	.ascii "<type 554 "
	.ascii "chan "
	.ascii "<type 551>"
	.ascii ">"
	.ascii "; "
	.ascii ".command-line-arguments.inboundDevPkts"
	.ascii " "
	.ascii "<type 555 "
	.ascii "chan "
	.ascii "<type 543>"
	.ascii ">"
	.ascii "; "
	.ascii ".command-line-arguments.outboundDevPkts"
	.ascii " "
	.ascii "<type 556 "
	.ascii "chan "
	.ascii "<type 543>"
	.ascii ">"
	.ascii "; "
	.ascii ".command-line-arguments.intf"
	.ascii " "
	.ascii "<type 31>"
	.ascii "; "
	.ascii ".command-line-arguments.reverser"
	.ascii " "
	.ascii "<type 434>"
	.ascii "; "
	.ascii ".command-line-arguments.wg"
	.ascii " "
	.ascii "<type 10>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 557 "
	.ascii "*"
	.ascii "<type 533>"
	.ascii ">"
	.ascii ") "
	.ascii "Init"
	.ascii " ("
	.ascii "servHost"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " ("
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<type 557>"
	.ascii ") "
	.ascii "Run"
	.ascii " ("
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<type 557>"
	.ascii ") "
	.ascii ".command-line-arguments.acceptRoutine"
	.ascii " ("
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<type 557>"
	.ascii ") "
	.ascii ".command-line-arguments.handleClient"
	.ascii " ("
	.ascii "conn"
	.ascii " "
	.ascii "<type 284>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<type 557>"
	.ascii ") "
	.ascii ".command-line-arguments.enrollClientConn"
	.ascii " ("
	.ascii "c"
	.ascii " "
	.ascii "<type 539>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<type 557>"
	.ascii ") "
	.ascii ".command-line-arguments.setAddrForClient"
	.ascii " ("
	.ascii "id"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "addr"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 1>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<type 557>"
	.ascii ") "
	.ascii ".command-line-arguments.removeClientConn"
	.ascii " ("
	.ascii "id"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<type 557>"
	.ascii ") "
	.ascii ".command-line-arguments.dispatchRoutine"
	.ascii " ("
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<type 557>"
	.ascii ") "
	.ascii ".command-line-arguments.route"
	.ascii " ("
	.ascii "pkt"
	.ascii " "
	.ascii "<type 543>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<type 557>"
	.ascii ") "
	.ascii "Close"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii "type "
	.ascii "<type 434>"
	.ascii ";\n"
	.ascii "type "
	.ascii "<type 533>"
	.ascii ";\n"
	.ascii "func "
	.ascii "SetDefaultGateway"
	.ascii " ("
	.ascii "gw"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "iName"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "debug"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii "func "
	.ascii "SetDevIP"
	.ascii " ("
	.ascii "iName"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "localAddr"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 1>"
	.ascii ", "
	.ascii "addr"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 19>"
	.ascii ", "
	.ascii "debug"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii "func "
	.ascii "SetInterfaceStatus"
	.ascii " ("
	.ascii "iName"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "up"
	.ascii " "
	.ascii "<type -15>"
	.ascii ", "
	.ascii "debug"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii "checksum 5E0C0958893F19BB8C1A108C168337E710621A90;\n"
	.text


	.file	1 "<built-in>"
	.section	.text.command_line_arguments.Client.Close,"ax",@progbits
	.globl	command_line_arguments.Client.Close
	.p2align	4, 0x90
	.type	command_line_arguments.Client.Close,@function
command_line_arguments.Client.Close:
.Lfunc_begin0:
	.file	2 "./client.go"
	.loc	2 314 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB0_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB0_2:
.Ltmp0:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	.loc	2 315 3 prologue_end
	testq	%rdi, %rdi
	je	.LBB0_4
.Ltmp1:
	.loc	2 0 3 is_stmt 0
	movq	%rdi, %rbx
.Ltmp2:
	.loc	2 315 19
	movb	$1, 152(%rdi)
	.loc	2 316 3 is_stmt 1
	leaq	232(%rdi), %rdi
	.loc	2 316 12 is_stmt 0
	callq	command_line_arguments.Reverser.Close
	.loc	2 317 3 is_stmt 1
	movq	192(%rbx), %rdi
	.loc	2 317 11 is_stmt 0
	callq	crypto_tls.Conn.Close
	.loc	2 318 8 is_stmt 1
	movq	176(%rbx), %rdi
	.loc	2 318 13 is_stmt 0
	callq	github_com_twitchyliquid64_subnet_vendor_github_com_songgao_water.Interface.Close..stub
.Ltmp3:
	.loc	2 319 7 is_stmt 1
	testq	%rax, %rax
	cmoveq	%rax, %rdx
	cmoveq	%rax, %rax
.Ltmp4:
	.loc	2 320 3
	popq	%rbx
.Ltmp5:
	.cfi_def_cfa_offset 8
	retq
.LBB0_4:
	.cfi_def_cfa_offset 16
.Ltmp6:
	.loc	2 315 3
	movl	$6, %edi
.Ltmp7:
	callq	__go_runtime_error
.Ltmp8:
.Lfunc_end0:
	.size	command_line_arguments.Client.Close, .Lfunc_end0-command_line_arguments.Client.Close
	.cfi_endproc

	.section	.text.command_line_arguments.Client.Run,"ax",@progbits
	.globl	command_line_arguments.Client.Run
	.p2align	4, 0x90
	.type	command_line_arguments.Client.Run,@function
command_line_arguments.Client.Run:
.Lfunc_begin1:
	.loc	2 140 0
	.cfi_startproc
	leaq	-296(%rsp), %r11
	cmpq	%fs:112, %r11
	ja	.LBB1_2
	movq	%r10, %rax
	movabsq	$296, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB1_2:
.Ltmp9:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$248, %rsp
	.cfi_def_cfa_offset 304
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	.loc	2 142 6 prologue_end
	testq	%rdi, %rdi
	je	.LBB1_11
.Ltmp10:
	.loc	2 0 6 is_stmt 0
	movq	%rdi, %rbx
.Ltmp11:
	.loc	2 142 18
	movq	8(%rdi), %rdi
	movq	16(%rbx), %rsi
	xorl	%edx, %edx
	xorl	%ecx, %ecx
	callq	runtime.eqstring
	cmpb	$1, %al
	je	.LBB1_8
.Ltmp12:
	.loc	2 143 43 is_stmt 1
	movq	176(%rbx), %rdi
	.loc	2 143 48 is_stmt 0
	callq	github_com_twitchyliquid64_subnet_vendor_github_com_songgao_water.Interface.Name
	movq	%rdx, %rcx
	.loc	2 143 58
	movzbl	(%rbx), %r8d
	.loc	2 143 10
	movq	8(%rbx), %rdi
	movq	16(%rbx), %rsi
	movq	%rax, %rdx
	callq	command_line_arguments.SetDefaultGateway
.Ltmp13:
	.loc	2 144 10 is_stmt 1
	testq	%rax, %rax
	je	.LBB1_8
.Ltmp14:
	.loc	2 145 45
	movq	%rdx, %rdi
	callq	*8(%rax)
.Ltmp15:
	movq	%rax, %r15
	movq	%rdx, %r14
	.loc	2 145 8 is_stmt 0
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
.Ltmp16:
	.loc	2 0 8
	movq	%r15, 136(%rsp)
	movq	%r14, 144(%rsp)
	leaq	136(%rsp), %rdx
	.loc	2 145 8
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movq	$string..d, 120(%rsp)
	movq	%rbx, 128(%rsp)
	leaq	120(%rsp), %rax
	movq	%rax, 40(%rsp)
	movq	$1, 48(%rsp)
	movq	$1, 56(%rsp)
	movq	56(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	40(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.108, %edi
	movl	$22, %esi
	jmp	.LBB1_6
.Ltmp17:
.LBB1_8:
	.loc	2 150 29 is_stmt 1
	movq	176(%rbx), %rdi
	.loc	2 150 34 is_stmt 0
	callq	github_com_twitchyliquid64_subnet_vendor_github_com_songgao_water.Interface.Name
	movq	%rdx, %rsi
	.loc	2 150 50
	movzbl	(%rbx), %ecx
	.loc	2 150 9
	movl	$1, %edx
	movq	%rax, %rdi
	callq	command_line_arguments.SetInterfaceStatus
	.loc	2 151 9 is_stmt 1
	testq	%rax, %rax
	je	.LBB1_9
.Ltmp18:
	.loc	2 0 9 is_stmt 0
	movq	%rax, %r14
.Ltmp19:
	movq	%rdx, %r15
.Ltmp20:
	.loc	2 152 56 is_stmt 1
	movq	176(%rbx), %rdi
	.loc	2 152 61 is_stmt 0
	callq	github_com_twitchyliquid64_subnet_vendor_github_com_songgao_water.Interface.Name
	movq	%rax, %r13
	movq	%rdx, %r12
	.loc	2 152 73
	movq	%r15, %rdi
	callq	*8(%r14)
	movq	%rax, %r14
	movq	%rdx, %r15
.Ltmp21:
	.loc	2 152 7
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbp
	movq	%r13, 104(%rsp)
	movq	%r12, 112(%rsp)
	leaq	104(%rsp), %rdx
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
.Ltmp22:
	.loc	2 0 7
	movq	%r14, 88(%rsp)
	movq	%r15, 96(%rsp)
	leaq	88(%rsp), %rdx
	.loc	2 152 7
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movq	$string..d, 216(%rsp)
	movq	%rbp, 224(%rsp)
	movq	$string..d, 232(%rsp)
	movq	%rbx, 240(%rsp)
	leaq	216(%rsp), %rax
	movq	%rax, 64(%rsp)
	movq	$2, 72(%rsp)
	movq	$2, 80(%rsp)
	movq	80(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	64(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.110, %edi
	movl	$36, %esi
.LBB1_6:
	.loc	2 0 7
	callq	log.Printf
	jmp	.LBB1_7
.LBB1_9:
.Ltmp23:
	.loc	2 156 2 is_stmt 1
	movl	$type..struct.4.4x.5a0.0.1command_line_arguments.Client.5, %edi
	callq	runtime.newobject
	movq	%rax, %r14
	movq	%rbx, 32(%rsp)
	leaq	32(%rsp), %rdx
	movl	$type..struct.4.4x.5a0.0.1command_line_arguments.Client.5, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movl	$command_line_arguments.command_line_arguments..thunk0, %edi
	movq	%r14, %rsi
	callq	__go_go
	.loc	2 157 2
	movl	$type..struct.4.4x.5a0.0.1command_line_arguments.Client.5, %edi
	callq	runtime.newobject
	movq	%rax, %r14
	movq	%rbx, 24(%rsp)
	leaq	24(%rsp), %rdx
	movl	$type..struct.4.4x.5a0.0.1command_line_arguments.Client.5, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movl	$command_line_arguments.command_line_arguments..thunk1, %edi
	movq	%r14, %rsi
	callq	__go_go
	.loc	2 158 29
	movq	160(%rbx), %r13
	.loc	2 158 21 is_stmt 0
	movq	176(%rbx), %rbp
	.loc	2 158 43
	leaq	56(%rbx), %r12
	.loc	2 158 50
	leaq	152(%rbx), %r15
	.loc	2 158 2
	movl	$type..struct.4.4x.5a0.0.1github_com_twitchyliquid64_subnet_vendor_github_com_songgao_water.Interface.2a1.0chan.0.1command_line_arguments.IPPacket.2a2.0.1sync.WaitGroup.2a3.0.1bool.5, %edi
	callq	runtime.newobject
	movq	%rax, %r14
	movq	%rbp, 184(%rsp)
	movq	%r13, 192(%rsp)
	movq	%r12, 200(%rsp)
	movq	%r15, 208(%rsp)
	leaq	184(%rsp), %rdx
	movl	$type..struct.4.4x.5a0.0.1github_com_twitchyliquid64_subnet_vendor_github_com_songgao_water.Interface.2a1.0chan.0.1command_line_arguments.IPPacket.2a2.0.1sync.WaitGroup.2a3.0.1bool.5, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movl	$command_line_arguments.command_line_arguments..thunk2, %edi
	movq	%r14, %rsi
	callq	__go_go
	.loc	2 159 30 is_stmt 1
	movq	168(%rbx), %r14
	.loc	2 159 22 is_stmt 0
	movq	176(%rbx), %rbp
	.loc	2 159 2
	movl	$type..struct.4.4x.5a0.0.1github_com_twitchyliquid64_subnet_vendor_github_com_songgao_water.Interface.2a1.0chan.0.1command_line_arguments.IPPacket.2a2.0.1sync.WaitGroup.2a3.0.1bool.5, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
.Ltmp24:
	movq	%rbp, 152(%rsp)
	movq	%r14, 160(%rsp)
	movq	%r12, 168(%rsp)
	movq	%r15, 176(%rsp)
	leaq	152(%rsp), %rdx
	movl	$type..struct.4.4x.5a0.0.1github_com_twitchyliquid64_subnet_vendor_github_com_songgao_water.Interface.2a1.0chan.0.1command_line_arguments.IPPacket.2a2.0.1sync.WaitGroup.2a3.0.1bool.5, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movl	$command_line_arguments.command_line_arguments..thunk3, %edi
	movq	%rbx, %rsi
	callq	__go_go
.LBB1_7:
	.loc	2 0 2
	addq	$248, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB1_11:
	.cfi_def_cfa_offset 304
.Ltmp25:
	.loc	2 142 6 is_stmt 1
	movl	$6, %edi
.Ltmp26:
	callq	__go_runtime_error
.Ltmp27:
.Lfunc_end1:
	.size	command_line_arguments.Client.Run, .Lfunc_end1-command_line_arguments.Client.Run
	.cfi_endproc

	.section	.text.command_line_arguments.Client.connectionProblem,"ax",@progbits
	.globl	command_line_arguments.Client.connectionProblem
	.p2align	4, 0x90
	.type	command_line_arguments.Client.connectionProblem,@function
command_line_arguments.Client.connectionProblem:
.Lfunc_begin2:
	.loc	2 251 0
	.cfi_startproc
	.cfi_personality 3, __gccgo_personality_v0
	.cfi_lsda 3, .Lexception0
	leaq	-440(%rsp), %r11
	cmpq	%fs:112, %r11
	ja	.LBB2_2
	movq	%r10, %rax
	movabsq	$440, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB2_2:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$392, %rsp
	.cfi_def_cfa_offset 448
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rdi, %rbp
	movb	$0, 63(%rsp)
.Ltmp90:
	.loc	2 252 7 prologue_end
	testq	%rdi, %rdi
	jne	.LBB2_4
.Ltmp91:
.Ltmp28:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp29:
.Ltmp92:
.LBB2_4:
	.loc	2 0 7 is_stmt 0
	movb	$1, %r14b
	.loc	2 252 5
	cmpb	$0, 216(%rbp)
	je	.LBB2_5
.Ltmp93:
	.loc	2 0 5
	testb	$1, 152(%rbp)
	jne	.LBB2_11
.Ltmp94:
	.loc	2 259 3 is_stmt 1
	leaq	220(%rbp), %rbx
.Ltmp30:
	.loc	2 259 17 is_stmt 0
	movq	%rbx, %rdi
	callq	sync.Mutex.Lock
.Ltmp31:
.Ltmp95:
	.loc	2 260 2 is_stmt 1
	movq	%rbx, 112(%rsp)
.Ltmp32:
	leaq	63(%rsp), %rdi
	leaq	112(%rsp), %rdx
	movl	$command_line_arguments.command_line_arguments..thunk6, %esi
	callq	runtime.deferproc
.Ltmp33:
.Ltmp96:
	.loc	2 262 2
	testb	$1, 216(%rbp)
	jne	.LBB2_16
.Ltmp97:
	.loc	2 0 2 is_stmt 0
	leaq	63(%rsp), %rbp
.Ltmp98:
	jmp	.LBB2_56
.LBB2_5:
.Ltmp99:
	leaq	63(%rsp), %rbp
.Ltmp100:
	jmp	.LBB2_56
.LBB2_11:
.Ltmp101:
	leaq	63(%rsp), %rbp
.Ltmp102:
	jmp	.LBB2_56
.LBB2_16:
.Ltmp103:
.Ltmp34:
	.loc	2 263 7 is_stmt 1
	movl	$string..d, %edi
	callq	runtime.newobject
.Ltmp35:
.Ltmp104:
	.loc	2 0 7 is_stmt 0
	movq	%rax, %rbx
	movups	.Lconst.130(%rip), %xmm0
	movaps	%xmm0, 288(%rsp)
.Ltmp36:
	leaq	288(%rsp), %rdx
	.loc	2 263 7
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
.Ltmp37:
.Ltmp105:
	movq	$string..d, 224(%rsp)
	movq	%rbx, 232(%rsp)
	leaq	224(%rsp), %rax
	movq	%rax, 120(%rsp)
	movq	$1, 128(%rsp)
	movq	$1, 136(%rsp)
.Ltmp38:
	movq	136(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	120(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	callq	log.Println
.Ltmp39:
.Ltmp106:
	.loc	2 264 18 is_stmt 1
	movb	$0, 216(%rbp)
	.loc	2 265 4
	movq	192(%rbp), %rdi
.Ltmp40:
	.loc	2 265 12 is_stmt 0
	callq	crypto_tls.Conn.Close
.Ltmp41:
.Ltmp107:
.Ltmp42:
	.loc	2 266 8 is_stmt 1
	movl	$1000000000, %edi
	callq	time.Sleep
.Ltmp43:
.Ltmp108:
	.loc	2 0 8 is_stmt 0
	leaq	192(%rbp), %rax
	movq	%rax, 80(%rsp)
	leaq	24(%rbp), %rax
	movq	%rax, 104(%rsp)
	leaq	40(%rbp), %r12
	movq	%rbp, 96(%rsp)
.Ltmp109:
	leaq	200(%rbp), %rax
	movq	%rax, 88(%rsp)
	xorl	%r14d, %r14d
	jmp	.LBB2_22
.Ltmp110:
	.p2align	4, 0x90
.LBB2_34:
	.loc	2 268 21 is_stmt 1
	addq	$1, %r14
.Ltmp111:
.LBB2_22:
	.loc	2 0 21 is_stmt 0
	movq	104(%rsp), %rax
	movups	(%rax), %xmm0
	movaps	%xmm0, 336(%rsp)
	leaq	352(%rsp), %rax
.Ltmp112:
	.loc	2 269 37 is_stmt 1
	movups	.Lconst.97(%rip), %xmm0
	movups	%xmm0, (%rax)
	movups	(%r12), %xmm0
	movups	%xmm0, 16(%rax)
.Ltmp44:
	movaps	336(%rsp), %xmm0
	movaps	352(%rsp), %xmm1
	movaps	368(%rsp), %xmm2
	movups	%xmm2, 32(%rsp)
	movups	%xmm1, 16(%rsp)
	movups	%xmm0, (%rsp)
	xorl	%edi, %edi
	callq	runtime.concatstring3
.Ltmp45:
.Ltmp113:
	.loc	2 0 37 is_stmt 0
	movq	%rdx, %rbp
.Ltmp46:
	.loc	2 269 24
	movl	$.Lconst.98, %esi
	movl	$3, %edx
	leaq	304(%rsp), %rdi
	movq	%rax, %rcx
	movq	%rbp, %r8
	callq	net.Dial
.Ltmp47:
.Ltmp114:
	movq	320(%rsp), %rcx
.Ltmp115:
	movq	328(%rsp), %rdx
.Ltmp116:
	.loc	2 0 24
	movups	304(%rsp), %xmm0
	movaps	%xmm0, 64(%rsp)
	.loc	2 271 11 is_stmt 1
	testq	%rcx, %rcx
	jne	.LBB2_28
.Ltmp117:
	.loc	2 272 5
	movq	64(%rsp), %rax
	testq	%rax, %rax
	je	.LBB2_26
.Ltmp118:
	movq	(%rax), %rsi
	jmp	.LBB2_36
.Ltmp119:
.LBB2_26:
	.loc	2 0 5 is_stmt 0
	xorl	%esi, %esi
.Ltmp120:
.LBB2_36:
.Ltmp48:
	.loc	2 272 12
	movl	$type...1net.TCPConn, %edi
	movl	$net.Conn..d, %edx
	callq	runtime.assertI2T
.Ltmp49:
.Ltmp121:
	movq	72(%rsp), %rdi
.Ltmp50:
	.loc	2 272 27
	movabsq	$60000000000, %rsi
	callq	net.TCPConn.SetKeepAlivePeriod
.Ltmp51:
.Ltmp122:
	.loc	2 273 5 is_stmt 1
	movq	64(%rsp), %rax
	testq	%rax, %rax
	je	.LBB2_39
.Ltmp123:
	movq	(%rax), %rsi
	jmp	.LBB2_40
.Ltmp124:
.LBB2_39:
	.loc	2 0 5 is_stmt 0
	xorl	%esi, %esi
.Ltmp125:
.LBB2_40:
.Ltmp52:
	.loc	2 273 12
	movl	$type...1net.TCPConn, %edi
	movl	$net.Conn..d, %edx
	callq	runtime.assertI2T
.Ltmp53:
.Ltmp126:
	movq	72(%rsp), %rdi
.Ltmp54:
	.loc	2 273 27
	movl	$1, %esi
	callq	net.TCPConn.SetKeepAlive
.Ltmp55:
.Ltmp127:
	.loc	2 274 15 is_stmt 1
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB2_44
.Ltmp128:
.Ltmp56:
	movl	$net.Conn..d, %edi
	movq	88(%rsp), %rsi
	leaq	64(%rsp), %rdx
	callq	runtime.typedmemmove
.Ltmp57:
	jmp	.LBB2_45
.Ltmp129:
.LBB2_44:
	movaps	64(%rsp), %xmm0
	movq	88(%rsp), %rax
	movups	%xmm0, (%rax)
.Ltmp130:
.LBB2_45:
	.loc	2 275 38
	movq	96(%rsp), %rax
	movq	184(%rax), %rdx
	.loc	2 275 21 is_stmt 0
	movq	64(%rsp), %rdi
	movq	72(%rsp), %rsi
.Ltmp58:
	callq	crypto_tls.Client
.Ltmp59:
.Ltmp131:
	.loc	2 275 15
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB2_48
.Ltmp132:
.Ltmp60:
	movq	80(%rsp), %rdi
	movq	%rax, %rsi
	callq	runtime.writebarrierptr
.Ltmp61:
	jmp	.LBB2_49
.Ltmp133:
.LBB2_48:
	movq	80(%rsp), %rcx
	movq	%rax, (%rcx)
.Ltmp134:
.LBB2_49:
	.loc	2 276 12 is_stmt 1
	movq	80(%rsp), %rax
	movq	(%rax), %rdi
.Ltmp62:
	.loc	2 276 20 is_stmt 0
	callq	crypto_tls.Conn.Handshake
.Ltmp63:
.Ltmp135:
	.loc	2 0 20
	movq	%rax, %rcx
	.loc	2 279 11 is_stmt 1
	testq	%rax, %rax
	je	.LBB2_50
.Ltmp136:
.LBB2_28:
.Ltmp64:
	.loc	2 284 71
	movq	%rdx, %rdi
	callq	*8(%rcx)
.Ltmp65:
.Ltmp137:
	.loc	2 0 71 is_stmt 0
	movq	%rax, %rbp
	movq	%rdx, %rbx
.Ltmp66:
	.loc	2 284 9
	movl	$string..d, %edi
	callq	runtime.newobject
.Ltmp67:
.Ltmp138:
	.loc	2 0 9
	movq	%rax, %r13
	movq	%rbp, 192(%rsp)
	movq	%rbx, 200(%rsp)
.Ltmp68:
	.loc	2 284 9
	movl	$string..d, %edi
	movq	%rax, %rsi
	leaq	192(%rsp), %rdx
	callq	runtime.typedmemmove
.Ltmp69:
.Ltmp139:
.Ltmp70:
	movl	$int..d, %edi
	callq	runtime.newobject
.Ltmp71:
.Ltmp140:
	.loc	2 0 9
	movq	%r14, %r15
	imulq	%r14, %r15
	leaq	(%r15,%r15,4), %rcx
	.loc	2 284 9
	movq	%rcx, (%rax)
	movq	$string..d, 240(%rsp)
	movq	%r13, 248(%rsp)
	movq	$int..d, 256(%rsp)
	movq	%rax, 264(%rsp)
	leaq	240(%rsp), %rax
	movq	%rax, 168(%rsp)
	movq	$2, 176(%rsp)
	movq	$2, 184(%rsp)
.Ltmp72:
	movq	184(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	168(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.135, %edi
	movl	$47, %esi
	callq	log.Printf
.Ltmp73:
.Ltmp141:
	.loc	2 285 28 is_stmt 1
	movabsq	$5000000000, %rax
	imulq	%rax, %r15
.Ltmp74:
	.loc	2 285 10 is_stmt 0
	movq	%r15, %rdi
	callq	time.Sleep
.Ltmp75:
	jmp	.LBB2_34
.Ltmp142:
.LBB2_50:
	.loc	2 280 20 is_stmt 1
	movq	96(%rsp), %rax
	movb	$1, 216(%rax)
.Ltmp77:
	.loc	2 281 9
	movl	$string..d, %edi
	callq	runtime.newobject
.Ltmp78:
	movb	$1, %r14b
.Ltmp143:
	.loc	2 0 9 is_stmt 0
	movq	%rax, %rbx
	movups	.Lconst.132(%rip), %xmm0
	movaps	%xmm0, 272(%rsp)
.Ltmp79:
	leaq	272(%rsp), %rdx
	.loc	2 281 9
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
.Ltmp80:
.Ltmp144:
	movq	$string..d, 208(%rsp)
	movq	%rbx, 216(%rsp)
	leaq	208(%rsp), %rax
	movq	%rax, 144(%rsp)
	movq	$1, 152(%rsp)
	movq	$1, 160(%rsp)
.Ltmp81:
	movq	160(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	144(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	callq	log.Println
.Ltmp82:
.Ltmp145:
	.loc	2 0 9
	leaq	63(%rsp), %rbp
	jmp	.LBB2_56
.Ltmp146:
.LBB2_7:
.Ltmp83:
	jmp	.LBB2_8
.LBB2_6:
.Ltmp147:
.Ltmp76:
.LBB2_8:
.Ltmp84:
	leaq	63(%rsp), %rdi
	.loc	2 289 1 is_stmt 1
	callq	runtime.checkdefer
.Ltmp85:
	.loc	2 0 1 is_stmt 0
	movb	$1, %r14b
	leaq	63(%rsp), %rbp
	jmp	.LBB2_56
.LBB2_54:
.Ltmp86:
	movq	%rax, %rbx
	xorl	%r14d, %r14d
	leaq	63(%rsp), %rbp
	jmp	.LBB2_56
.LBB2_55:
.Ltmp89:
	.loc	2 289 1
	movq	%rbp, %rdi
	callq	runtime.checkdefer
	.p2align	4, 0x90
.LBB2_56:
.Ltmp87:
	movq	%rbp, %rdi
	callq	runtime.deferreturn
.Ltmp88:
	.loc	2 0 1
	testb	%r14b, %r14b
	je	.LBB2_60
	.loc	2 253 3 is_stmt 1
	addq	$392, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp148:
.LBB2_60:
	.cfi_def_cfa_offset 448
	.loc	2 0 3 is_stmt 0
	movq	%rbx, %rdi
	callq	_Unwind_Resume
.Lfunc_end2:
	.size	command_line_arguments.Client.connectionProblem, .Lfunc_end2-command_line_arguments.Client.connectionProblem
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table2:
.Lexception0:
	.byte	255
	.byte	3
	.uleb128 .Lttbase0-.Lttbaseref0
.Lttbaseref0:
	.byte	1
	.uleb128 .Lcst_end0-.Lcst_begin0
.Lcst_begin0:
	.uleb128 .Lfunc_begin2-.Lfunc_begin2
	.uleb128 .Ltmp28-.Lfunc_begin2
	.byte	0
	.byte	0
	.uleb128 .Ltmp28-.Lfunc_begin2
	.uleb128 .Ltmp43-.Ltmp28
	.uleb128 .Ltmp83-.Lfunc_begin2
	.byte	1
	.uleb128 .Ltmp44-.Lfunc_begin2
	.uleb128 .Ltmp75-.Ltmp44
	.uleb128 .Ltmp76-.Lfunc_begin2
	.byte	1
	.uleb128 .Ltmp77-.Lfunc_begin2
	.uleb128 .Ltmp82-.Ltmp77
	.uleb128 .Ltmp83-.Lfunc_begin2
	.byte	1
	.uleb128 .Ltmp84-.Lfunc_begin2
	.uleb128 .Ltmp85-.Ltmp84
	.uleb128 .Ltmp86-.Lfunc_begin2
	.byte	0
	.uleb128 .Ltmp85-.Lfunc_begin2
	.uleb128 .Ltmp87-.Ltmp85
	.byte	0
	.byte	0
	.uleb128 .Ltmp87-.Lfunc_begin2
	.uleb128 .Ltmp88-.Ltmp87
	.uleb128 .Ltmp89-.Lfunc_begin2
	.byte	1
	.uleb128 .Ltmp88-.Lfunc_begin2
	.uleb128 .Lfunc_end2-.Ltmp88
	.byte	0
	.byte	0
.Lcst_end0:
	.byte	1
	.byte	0
	.p2align	2
	.long	0
.Lttbase0:
	.p2align	2

	.section	.text.command_line_arguments.Client.init,"ax",@progbits
	.globl	command_line_arguments.Client.init
	.p2align	4, 0x90
	.type	command_line_arguments.Client.init,@function
command_line_arguments.Client.init:
.Lfunc_begin3:
	.loc	2 94 0 is_stmt 1
	.cfi_startproc
	leaq	-744(%rsp), %r11
	cmpq	%fs:112, %r11
	ja	.LBB3_2
	movq	%r10, %rax
	movabsq	$744, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB3_2:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$696, %rsp
	.cfi_def_cfa_offset 752
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rdi, %r12
.Ltmp149:
	.loc	2 95 34 prologue_end
	movq	%rsi, 288(%rsp)
	movq	%rdx, 296(%rsp)
	movups	.Lconst.97(%rip), %xmm0
	movups	%xmm0, 304(%rsp)
	movq	%rcx, 320(%rsp)
	movq	%r8, 328(%rsp)
	movups	288(%rsp), %xmm0
	movups	304(%rsp), %xmm1
	movups	320(%rsp), %xmm2
	movups	%xmm2, 32(%rsp)
	movups	%xmm1, 16(%rsp)
	movups	%xmm0, (%rsp)
	xorl	%edi, %edi
	callq	runtime.concatstring3
.Ltmp150:
	movq	%rdx, %rbp
	leaq	664(%rsp), %rdi
.Ltmp151:
	.loc	2 95 22 is_stmt 0
	movl	$.Lconst.98, %esi
	movl	$3, %edx
	movq	%rax, %rcx
	movq	%rbp, %r8
	callq	net.Dial
.Ltmp152:
	movq	680(%rsp), %rax
.Ltmp153:
	movq	688(%rsp), %rdx
.Ltmp154:
	.loc	2 0 22
	movups	664(%rsp), %xmm0
	movaps	%xmm0, 64(%rsp)
	.loc	2 96 9 is_stmt 1
	testq	%rax, %rax
	jne	.LBB3_23
.Ltmp155:
	.loc	2 99 2
	movq	64(%rsp), %rbx
	testq	%rbx, %rbx
	je	.LBB3_4
.Ltmp156:
	movq	(%rbx), %rsi
	jmp	.LBB3_5
.Ltmp157:
.LBB3_4:
	.loc	2 0 2 is_stmt 0
	xorl	%esi, %esi
.Ltmp158:
.LBB3_5:
	.loc	2 99 9
	movl	$type...1net.TCPConn, %edi
	movl	$net.Conn..d, %edx
.Ltmp159:
	callq	runtime.assertI2T
.Ltmp160:
	movq	72(%rsp), %rbp
	movabsq	$60000000000, %rsi
	.loc	2 99 24
	movq	%rbp, %rdi
	callq	net.TCPConn.SetKeepAlivePeriod
	.loc	2 99 2
	testq	%rbx, %rbx
	je	.LBB3_6
.Ltmp161:
	.loc	2 100 2 is_stmt 1
	movq	(%rbx), %rsi
	jmp	.LBB3_7
.Ltmp162:
.LBB3_6:
	.loc	2 0 2 is_stmt 0
	xorl	%esi, %esi
.Ltmp163:
.LBB3_7:
	.loc	2 100 9
	movl	$type...1net.TCPConn, %edi
	movl	$net.Conn..d, %edx
	callq	runtime.assertI2T
	.loc	2 100 24
	movl	$1, %esi
	movq	%rbp, %rdi
	callq	net.TCPConn.SetKeepAlive
	.loc	2 101 3 is_stmt 1
	testq	%r12, %r12
	je	.LBB3_26
.Ltmp164:
	leaq	200(%r12), %rsi
	.loc	2 101 12 is_stmt 0
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB3_10
.Ltmp165:
	.loc	2 0 12
	leaq	64(%rsp), %rdx
	.loc	2 101 12
	movl	$net.Conn..d, %edi
	callq	runtime.typedmemmove
	.loc	2 103 18 is_stmt 1
	movq	64(%rsp), %rbx
	movq	72(%rsp), %rbp
	jmp	.LBB3_11
.Ltmp166:
.LBB3_10:
	.loc	2 101 12
	movaps	64(%rsp), %xmm0
	movups	%xmm0, (%rsi)
.Ltmp167:
.LBB3_11:
	.loc	2 103 35
	movq	184(%r12), %rdx
	.loc	2 103 18 is_stmt 0
	movq	%rbx, %rdi
	movq	%rbp, %rsi
	callq	crypto_tls.Client
	.loc	2 103 3
	leaq	192(%r12), %rbx
	.loc	2 103 12
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB3_13
.Ltmp168:
	movq	%rbx, %rdi
	movq	%rax, %rsi
	callq	runtime.writebarrierptr
.Ltmp169:
	.loc	2 105 13 is_stmt 1
	movq	(%rbx), %rax
	jmp	.LBB3_14
.Ltmp170:
.LBB3_13:
	.loc	2 103 12
	movq	%rax, (%rbx)
.Ltmp171:
.LBB3_14:
	.loc	2 105 21
	movq	%rax, %rdi
	callq	crypto_tls.Conn.Handshake
.Ltmp172:
	.loc	2 105 39 is_stmt 0
	testq	%rax, %rax
	jne	.LBB3_23
.Ltmp173:
	.loc	2 109 17 is_stmt 1
	movb	$1, 216(%r12)
.Ltmp174:
	.loc	2 111 22
	movq	176(%r12), %rdi
	.loc	2 111 27 is_stmt 0
	callq	github_com_twitchyliquid64_subnet_vendor_github_com_songgao_water.Interface.Name
.Ltmp175:
	.loc	2 111 50
	movq	144(%r12), %rbp
	.loc	2 111 66
	movzbl	(%r12), %ecx
	.loc	2 111 12
	movq	112(%r12), %rsi
	movq	%rsi, 16(%rsp)
	movups	96(%r12), %xmm0
	movups	%xmm0, (%rsp)
	movq	%rax, %rdi
	movq	%rdx, %rsi
	movq	%rbp, %rdx
	callq	command_line_arguments.SetDevIP
.Ltmp176:
	.loc	2 111 87
	testq	%rax, %rax
	jne	.LBB3_23
.Ltmp177:
	.loc	2 0 87
	leaq	96(%r12), %rbx
	.loc	2 114 55 is_stmt 1
	movq	176(%r12), %rdi
	.loc	2 114 60 is_stmt 0
	callq	github_com_twitchyliquid64_subnet_vendor_github_com_songgao_water.Interface.Name
.Ltmp178:
	movq	%rax, 48(%rsp)
	movq	%rdx, %rbp
	movups	(%rbx), %xmm0
	movaps	%xmm0, 608(%rsp)
	movq	16(%rbx), %rax
	movq	%rax, 624(%rsp)
	leaq	608(%rsp), %rdi
	.loc	2 114 80
	callq	net.IP.String
	movq	%rax, %rbx
	movq	%rdx, 56(%rsp)
	.loc	2 114 99
	movq	144(%r12), %rax
	.loc	2 114 112
	testq	%rax, %rax
	je	.LBB3_26
.Ltmp179:
	.loc	2 0 112
	movq	40(%rax), %rcx
	movq	%rcx, 592(%rsp)
	movups	24(%rax), %xmm0
	movaps	%xmm0, 576(%rsp)
	leaq	576(%rsp), %rdi
	.loc	2 114 118
	callq	net.IP.String
	movq	%rax, %r14
	movq	%rdx, %r15
	.loc	2 114 6
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %r13
	movq	48(%rsp), %rax
	movq	%rax, 272(%rsp)
	movq	%rbp, 280(%rsp)
	leaq	272(%rsp), %rdx
	movl	$string..d, %edi
	movq	%r13, %rsi
	callq	runtime.typedmemmove
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbp
	movq	%rbx, 256(%rsp)
	movq	56(%rsp), %rax
	movq	%rax, 264(%rsp)
	leaq	256(%rsp), %rdx
	movl	$string..d, %edi
	movq	%rbp, %rsi
	callq	runtime.typedmemmove
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
	movq	%r14, 240(%rsp)
	movq	%r15, 248(%rsp)
	leaq	240(%rsp), %rdx
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movq	$string..d, 464(%rsp)
	movq	%r13, 472(%rsp)
	movq	$string..d, 480(%rsp)
	movq	%rbp, 488(%rsp)
	movq	$string..d, 496(%rsp)
	movq	%rbx, 504(%rsp)
	leaq	464(%rsp), %rax
	movq	%rax, 104(%rsp)
	movq	$3, 112(%rsp)
	movq	$3, 120(%rsp)
	movq	120(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	104(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.100, %edi
	movl	$36, %esi
	callq	log.Printf
	.loc	2 116 18 is_stmt 1
	movq	8(%r12), %rdi
	movq	16(%r12), %rsi
	xorl	%edx, %edx
	xorl	%ecx, %ecx
	callq	runtime.eqstring
	cmpb	$1, %al
	jne	.LBB3_18
.Ltmp180:
.LBB3_22:
	.loc	2 136 2
	xorl	%eax, %eax
	xorl	%edx, %edx
	jmp	.LBB3_23
.LBB3_18:
.Ltmp181:
	.loc	2 0 2 is_stmt 0
	leaq	416(%rsp), %rdi
.Ltmp182:
	.loc	2 118 29 is_stmt 1
	callq	command_line_arguments.GetNetGateway
	movq	448(%rsp), %rax
.Ltmp183:
	.loc	2 119 10
	testq	%rax, %rax
	je	.LBB3_20
.Ltmp184:
	.loc	2 118 29
	movq	456(%rsp), %rdx
	jmp	.LBB3_23
.Ltmp185:
.LBB3_20:
	.loc	2 0 29 is_stmt 0
	movq	416(%rsp), %r13
.Ltmp186:
	movq	424(%rsp), %rdx
.Ltmp187:
	movq	432(%rsp), %r14
.Ltmp188:
	movq	440(%rsp), %r15
.Ltmp189:
	leaq	640(%rsp), %rdi
	.loc	2 122 18 is_stmt 1
	movq	%r13, %rsi
	movq	%rdx, 56(%rsp)
.Ltmp190:
	callq	net.ParseIP
.Ltmp191:
	.loc	2 0 18 is_stmt 0
	movq	656(%rsp), %rax
	movq	%rax, 96(%rsp)
	movups	640(%rsp), %xmm0
	movaps	%xmm0, 80(%rsp)
	.loc	2 123 7 is_stmt 1
	movl	$net.IP..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbp
	movaps	80(%rsp), %xmm0
	movaps	%xmm0, 544(%rsp)
	movq	96(%rsp), %rax
	movq	%rax, 560(%rsp)
	leaq	544(%rsp), %rdx
	movl	$net.IP..d, %edi
	movq	%rbp, %rsi
	callq	runtime.typedmemmove
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
	movq	%r14, 224(%rsp)
	movq	%r15, 232(%rsp)
	leaq	224(%rsp), %rdx
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movq	$net.IP..d, 336(%rsp)
	movq	%rbp, 344(%rsp)
	movq	$string..d, 352(%rsp)
	movq	%rbx, 360(%rsp)
	leaq	336(%rsp), %rax
	movq	%rax, 128(%rsp)
	movq	$2, 136(%rsp)
	movq	$2, 144(%rsp)
	movq	144(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	128(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.103, %edi
	movl	$28, %esi
	callq	log.Printf
.Ltmp192:
	.loc	2 126 59
	movzbl	(%r12), %edx
	.loc	2 126 13 is_stmt 0
	movq	96(%rsp), %rax
	movq	%rax, 40(%rsp)
	movaps	80(%rsp), %xmm0
	movups	%xmm0, 24(%rsp)
	movq	88(%r12), %rax
	movq	%rax, 16(%rsp)
	movups	72(%r12), %xmm0
	movups	%xmm0, (%rsp)
	movq	%r14, %rdi
	movq	%r15, %rsi
	callq	command_line_arguments.AddRoute
.Ltmp193:
	.loc	2 126 80
	testq	%rax, %rax
	je	.LBB3_21
.Ltmp194:
.LBB3_23:
	.loc	2 0 80
	addq	$696, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp195:
.LBB3_21:
	.cfi_def_cfa_offset 752
	leaq	72(%r12), %rcx
	movq	%rcx, 48(%rsp)
	movq	16(%rcx), %rax
.Ltmp196:
	movq	%rax, 528(%rsp)
	movups	(%rcx), %xmm0
	movaps	%xmm0, 512(%rsp)
	leaq	512(%rsp), %rdi
	.loc	2 129 68 is_stmt 1
	callq	net.IP.String
	movq	%rax, %rbx
	movq	%r13, %rbp
	movq	%rdx, %r13
	.loc	2 129 7 is_stmt 0
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rbx, 208(%rsp)
	movq	%r13, 216(%rsp)
	leaq	208(%rsp), %rdx
	movl	$string..d, %edi
	movq	%rax, %rsi
	movq	%rax, %r13
	callq	runtime.typedmemmove
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
	movq	%rbp, 192(%rsp)
	movq	56(%rsp), %rax
	movq	%rax, 200(%rsp)
	leaq	192(%rsp), %rdx
	movl	$string..d, %edi
	movq	%rbx, %rsi
	callq	runtime.typedmemmove
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbp
	movq	%r14, 176(%rsp)
	movq	%r15, 184(%rsp)
	leaq	176(%rsp), %rdx
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movq	$string..d, 368(%rsp)
	movq	%r13, 376(%rsp)
	movq	$string..d, 384(%rsp)
	movq	%rbx, 392(%rsp)
	movq	$string..d, 400(%rsp)
	movq	%rbp, 408(%rsp)
	leaq	368(%rsp), %rax
	movq	%rax, 152(%rsp)
	movq	$3, 160(%rsp)
	movq	$3, 168(%rsp)
	movq	168(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	152(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.105, %edi
	movl	$39, %esi
	callq	log.Printf
	.loc	2 130 4 is_stmt 1
	addq	$232, %r12
.Ltmp197:
	.loc	2 130 13 is_stmt 0
	movq	96(%rsp), %rax
	movq	%rax, 40(%rsp)
	movaps	80(%rsp), %xmm0
	movups	%xmm0, 24(%rsp)
	movq	48(%rsp), %rcx
	movq	16(%rcx), %rax
	movq	%rax, 16(%rsp)
	movups	(%rcx), %xmm0
	movups	%xmm0, (%rsp)
	movq	%r12, %rdi
	movq	%r14, %rsi
	movq	%r15, %rdx
	callq	command_line_arguments.Reverser.AddRouteEntry
	jmp	.LBB3_22
.Ltmp198:
.LBB3_26:
	.loc	2 0 13
	movl	$6, %edi
	callq	__go_runtime_error
.Lfunc_end3:
	.size	command_line_arguments.Client.init, .Lfunc_end3-command_line_arguments.Client.init
	.cfi_endproc

	.section	.text.command_line_arguments.Client.netRecvRoutine,"ax",@progbits
	.globl	command_line_arguments.Client.netRecvRoutine
	.p2align	4, 0x90
	.type	command_line_arguments.Client.netRecvRoutine,@function
command_line_arguments.Client.netRecvRoutine:
.Lfunc_begin4:
	.loc	2 212 0 is_stmt 1
	.cfi_startproc
	.cfi_personality 3, __gccgo_personality_v0
	.cfi_lsda 3, .Lexception1
	leaq	-344(%rsp), %r11
	cmpq	%fs:112, %r11
	ja	.LBB4_2
	movq	%r10, %rax
	movabsq	$344, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB4_2:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$296, %rsp
	.cfi_def_cfa_offset 352
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movb	$0, 39(%rsp)
	movq	%rdi, 40(%rsp)
.Ltmp269:
	.loc	2 213 3 prologue_end
	testq	%rdi, %rdi
	jne	.LBB4_4
.Ltmp270:
.Ltmp199:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp200:
.Ltmp271:
.LBB4_4:
	movq	40(%rsp), %rax
	leaq	56(%rax), %rbx
.Ltmp201:
	.loc	2 213 6 is_stmt 0
	movl	$1, %esi
	movq	%rbx, %rdi
	callq	sync.WaitGroup.Add
.Ltmp202:
.Ltmp272:
	.loc	2 213 3
	cmpq	$0, 40(%rsp)
	jne	.LBB4_7
.Ltmp273:
.Ltmp203:
	.loc	2 214 9 is_stmt 1
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp204:
.Ltmp274:
.LBB4_7:
	.loc	2 214 2 is_stmt 0
	movq	%rbx, 96(%rsp)
.Ltmp205:
	leaq	39(%rsp), %rdi
	leaq	96(%rsp), %rdx
	movl	$command_line_arguments.command_line_arguments..thunk5, %esi
	callq	runtime.deferproc
.Ltmp206:
.Ltmp275:
	.loc	2 0 2
	movq	40(%rsp), %rax
	leaq	152(%rax), %rax
	movq	%rax, 56(%rsp)
.Ltmp276:
	.p2align	4, 0x90
.LBB4_9:
	.loc	2 216 8 is_stmt 1
	movq	56(%rsp), %rax
	movq	40(%rsp), %rdx
	movq	%rdx, %rcx
	.loc	2 213 3
	testq	%rdx, %rdx
	jne	.LBB4_12
.Ltmp277:
.Ltmp208:
	.loc	2 216 8
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp209:
.Ltmp278:
	.loc	2 0 8 is_stmt 0
	movq	80(%rsp), %rcx
	.loc	2 216 8
	leaq	152(%rcx), %rax
.Ltmp279:
.LBB4_12:
	.loc	2 0 8
	movb	$1, %dl
	.loc	2 216 6
	movl	%edx, 52(%rsp)
	cmpb	$0, (%rax)
	jne	.LBB4_13
.Ltmp280:
	.loc	2 0 6
	movq	%rcx, 80(%rsp)
	.loc	2 213 3 is_stmt 1
	cmpq	$0, 40(%rsp)
	jne	.LBB4_22
.Ltmp281:
.Ltmp210:
	.loc	2 217 30
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp211:
.Ltmp282:
.LBB4_22:
	movq	40(%rsp), %rax
	movq	192(%rax), %rsi
.Ltmp212:
	.loc	2 217 18 is_stmt 0
	movl	$pimt..interface.4Read.0func.8.6.7uint8.9.8int.3error.9.5..crypto_tls.Conn, %edi
	callq	encoding_gob.NewDecoder
	movq	%rax, 64(%rsp)
.Ltmp213:
.Ltmp283:
.LBB4_23:
	.loc	2 0 18
	movq	%r12, %rbx
.Ltmp284:
	.p2align	4, 0x90
.LBB4_24:
	movq	40(%rsp), %rax
	movq	%rax, %r12
	.loc	2 213 3 is_stmt 1
	testq	%rax, %rax
	jne	.LBB4_26
.Ltmp285:
.Ltmp214:
	.loc	2 219 8
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp215:
	movq	%rbx, %r12
.Ltmp286:
.LBB4_26:
	testb	$1, 216(%r12)
	je	.LBB4_38
.Ltmp287:
.Ltmp216:
	.loc	2 220 8
	movl	$github_com_twitchyliquid64_subnet_subnet_conn.PktType..d, %edi
	callq	runtime.newobject
.Ltmp217:
.Ltmp288:
	.loc	2 0 8 is_stmt 0
	movq	%rax, %r14
.Ltmp218:
.Ltmp289:
	.loc	2 221 18 is_stmt 1
	movl	$type...1github_com_twitchyliquid64_subnet_subnet_conn.PktType, %esi
	movq	64(%rsp), %rdi
	movq	%rax, %rdx
	callq	encoding_gob.Decoder.Decode
.Ltmp219:
.Ltmp290:
	.loc	2 0 18 is_stmt 0
	movq	%rax, %r13
	.loc	2 223 11 is_stmt 1
	testq	%rax, %rax
	jne	.LBB4_30
.Ltmp291:
	.loc	2 0 11 is_stmt 0
	cmpb	$1, (%r14)
	jne	.LBB4_48
.Ltmp292:
.Ltmp240:
	.loc	2 236 9 is_stmt 1
	movl	$command_line_arguments.IPPacket..d, %edi
	callq	runtime.newobject
.Ltmp241:
.Ltmp293:
	.loc	2 0 9 is_stmt 0
	movq	%rax, %rbx
.Ltmp242:
.Ltmp294:
	.loc	2 237 19 is_stmt 1
	movl	$type...1command_line_arguments.IPPacket, %esi
	movq	64(%rsp), %rdi
	movq	%rax, %rdx
	callq	encoding_gob.Decoder.Decode
.Ltmp243:
.Ltmp295:
	.loc	2 238 12
	testq	%rax, %rax
	je	.LBB4_52
.Ltmp296:
.Ltmp244:
	.loc	2 239 53
	movq	%rdx, %rdi
	callq	*8(%rax)
.Ltmp297:
.Ltmp245:
	.loc	2 0 53 is_stmt 0
	movq	%rax, %rbp
	movq	%rdx, %r14
.Ltmp246:
	.loc	2 239 10
	movl	$string..d, %edi
	callq	runtime.newobject
.Ltmp247:
.Ltmp298:
	.loc	2 0 10
	movq	%rax, %rbx
.Ltmp299:
	movq	%rbp, 192(%rsp)
	movq	%r14, 200(%rsp)
.Ltmp248:
	.loc	2 239 10
	movl	$string..d, %edi
	movq	%rax, %rsi
	leaq	192(%rsp), %rdx
	callq	runtime.typedmemmove
.Ltmp249:
.Ltmp300:
	movq	$string..d, 176(%rsp)
	movq	%rbx, 184(%rsp)
	leaq	176(%rsp), %rax
	movq	%rax, 152(%rsp)
	movq	$1, 160(%rsp)
	movq	$1, 168(%rsp)
.Ltmp250:
	movq	168(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	152(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.126, %edi
	movl	$29, %esi
	callq	log.Printf
.Ltmp251:
.Ltmp301:
.Ltmp252:
	.loc	2 240 7 is_stmt 1
	movq	40(%rsp), %rdi
	callq	command_line_arguments.Client.connectionProblem
.Ltmp253:
	movq	%r12, %rbx
	jmp	.LBB4_24
.Ltmp302:
	.p2align	4, 0x90
.LBB4_48:
.Ltmp232:
	.loc	2 234 9
	movl	$string..d, %edi
	callq	runtime.newobject
.Ltmp233:
.Ltmp303:
	.loc	2 0 9 is_stmt 0
	movq	%rax, %rbx
	movups	.Lconst.125(%rip), %xmm0
	movaps	%xmm0, 272(%rsp)
.Ltmp234:
	.loc	2 234 9
	movl	$string..d, %edi
	movq	%rax, %rsi
	leaq	272(%rsp), %rdx
	callq	runtime.typedmemmove
.Ltmp235:
.Ltmp304:
.Ltmp236:
	movl	$github_com_twitchyliquid64_subnet_subnet_conn.PktType..d, %edi
	callq	runtime.newobject
.Ltmp237:
.Ltmp305:
	.loc	2 234 49
	movzbl	(%r14), %ecx
	.loc	2 234 9
	movb	%cl, (%rax)
	movq	$string..d, 240(%rsp)
	movq	%rbx, 248(%rsp)
	movq	$github_com_twitchyliquid64_subnet_subnet_conn.PktType..d, 256(%rsp)
	movq	%rax, 264(%rsp)
	leaq	240(%rsp), %rax
	movq	%rax, 128(%rsp)
	movq	$2, 136(%rsp)
	movq	$2, 144(%rsp)
.Ltmp238:
	movq	144(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	128(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	callq	log.Println
.Ltmp239:
	movq	%r12, %rbx
	jmp	.LBB4_24
.Ltmp306:
.LBB4_52:
	.loc	2 0 9
	movq	%rbx, 88(%rsp)
	movq	40(%rsp), %rax
	movq	%rax, %rbx
	.loc	2 213 3 is_stmt 1
	testq	%rax, %rax
	jne	.LBB4_54
.Ltmp307:
.Ltmp255:
	.loc	2 244 6
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp256:
	movq	72(%rsp), %rbx
.Ltmp308:
.LBB4_54:
	movq	168(%rbx), %rdi
.Ltmp257:
	.loc	2 244 21 is_stmt 0
	leaq	88(%rsp), %rsi
	callq	runtime.chansend1
.Ltmp258:
	movq	%rbx, 72(%rsp)
	jmp	.LBB4_23
.Ltmp309:
	.p2align	4, 0x90
.LBB4_30:
	.loc	2 0 21
	movq	%rdx, %r15
	.loc	2 213 3 is_stmt 1
	cmpq	$0, 40(%rsp)
	jne	.LBB4_32
.Ltmp310:
.Ltmp220:
	.loc	2 224 10
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp221:
.Ltmp311:
.LBB4_32:
	.loc	2 224 8 is_stmt 0
	movq	56(%rsp), %rax
	cmpb	$0, (%rax)
	jne	.LBB4_56
.Ltmp312:
.Ltmp222:
	.loc	2 225 44 is_stmt 1
	movq	%r15, %rdi
	callq	*8(%r13)
.Ltmp223:
.Ltmp313:
	.loc	2 0 44 is_stmt 0
	movq	%rax, %rbp
	movq	%rdx, %r14
.Ltmp224:
	.loc	2 225 10
	movl	$string..d, %edi
	callq	runtime.newobject
.Ltmp225:
.Ltmp314:
	.loc	2 0 10
	movq	%rax, %rbx
	movq	%rbp, 224(%rsp)
	movq	%r14, 232(%rsp)
.Ltmp226:
	.loc	2 225 10
	movl	$string..d, %edi
	movq	%rax, %rsi
	leaq	224(%rsp), %rdx
	callq	runtime.typedmemmove
.Ltmp227:
.Ltmp315:
	movq	$string..d, 208(%rsp)
	movq	%rbx, 216(%rsp)
	leaq	208(%rsp), %rax
	movq	%rax, 104(%rsp)
	movq	$1, 112(%rsp)
	movq	$1, 120(%rsp)
.Ltmp228:
	movq	120(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	104(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.122, %edi
	movl	$19, %esi
	callq	log.Printf
.Ltmp229:
.Ltmp316:
.Ltmp230:
	.loc	2 226 7 is_stmt 1
	movq	40(%rsp), %rdi
	callq	command_line_arguments.Client.connectionProblem
.Ltmp231:
.Ltmp317:
.LBB4_38:
.Ltmp260:
	.loc	2 247 8
	movl	$150000000, %edi
	callq	time.Sleep
.Ltmp261:
	jmp	.LBB4_9
.Ltmp318:
.LBB4_13:
	.loc	2 0 8 is_stmt 0
	leaq	39(%rsp), %rbx
	jmp	.LBB4_58
.Ltmp319:
.LBB4_17:
.Ltmp207:
	jmp	.LBB4_18
.Ltmp320:
.LBB4_15:
.Ltmp259:
	jmp	.LBB4_18
.Ltmp321:
.LBB4_16:
.Ltmp262:
	jmp	.LBB4_18
.Ltmp322:
.LBB4_14:
.Ltmp254:
.LBB4_18:
.Ltmp263:
	leaq	39(%rsp), %rdi
	.loc	2 249 1 is_stmt 1
	callq	runtime.checkdefer
.Ltmp264:
.Ltmp323:
	.loc	2 0 1 is_stmt 0
	movb	$1, %al
	movl	%eax, 52(%rsp)
	leaq	39(%rsp), %rbx
	jmp	.LBB4_58
.Ltmp324:
.LBB4_55:
.Ltmp265:
	movq	%rax, %rbp
	movl	$0, 52(%rsp)
.Ltmp325:
.LBB4_56:
	leaq	39(%rsp), %rbx
	jmp	.LBB4_58
.Ltmp326:
.LBB4_57:
.Ltmp268:
	.loc	2 249 1
	movq	%rbx, %rdi
	callq	runtime.checkdefer
.Ltmp327:
	.p2align	4, 0x90
.LBB4_58:
.Ltmp266:
	movq	%rbx, %rdi
	callq	runtime.deferreturn
.Ltmp267:
.Ltmp328:
	.loc	2 0 1
	cmpb	$0, 52(%rsp)
	je	.LBB4_61
.Ltmp329:
	.loc	2 229 5 is_stmt 1
	addq	$296, %rsp
.Ltmp330:
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp331:
.LBB4_61:
	.cfi_def_cfa_offset 352
	.loc	2 0 5 is_stmt 0
	movq	%rbp, %rdi
	callq	_Unwind_Resume
.Lfunc_end4:
	.size	command_line_arguments.Client.netRecvRoutine, .Lfunc_end4-command_line_arguments.Client.netRecvRoutine
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table4:
.Lexception1:
	.byte	255
	.byte	3
	.uleb128 .Lttbase1-.Lttbaseref1
.Lttbaseref1:
	.byte	1
	.uleb128 .Lcst_end1-.Lcst_begin1
.Lcst_begin1:
	.uleb128 .Lfunc_begin4-.Lfunc_begin4
	.uleb128 .Ltmp199-.Lfunc_begin4
	.byte	0
	.byte	0
	.uleb128 .Ltmp199-.Lfunc_begin4
	.uleb128 .Ltmp206-.Ltmp199
	.uleb128 .Ltmp207-.Lfunc_begin4
	.byte	1
	.uleb128 .Ltmp208-.Lfunc_begin4
	.uleb128 .Ltmp213-.Ltmp208
	.uleb128 .Ltmp262-.Lfunc_begin4
	.byte	1
	.uleb128 .Ltmp214-.Lfunc_begin4
	.uleb128 .Ltmp239-.Ltmp214
	.uleb128 .Ltmp254-.Lfunc_begin4
	.byte	1
	.uleb128 .Ltmp255-.Lfunc_begin4
	.uleb128 .Ltmp258-.Ltmp255
	.uleb128 .Ltmp259-.Lfunc_begin4
	.byte	1
	.uleb128 .Ltmp220-.Lfunc_begin4
	.uleb128 .Ltmp261-.Ltmp220
	.uleb128 .Ltmp262-.Lfunc_begin4
	.byte	1
	.uleb128 .Ltmp263-.Lfunc_begin4
	.uleb128 .Ltmp264-.Ltmp263
	.uleb128 .Ltmp265-.Lfunc_begin4
	.byte	0
	.uleb128 .Ltmp264-.Lfunc_begin4
	.uleb128 .Ltmp266-.Ltmp264
	.byte	0
	.byte	0
	.uleb128 .Ltmp266-.Lfunc_begin4
	.uleb128 .Ltmp267-.Ltmp266
	.uleb128 .Ltmp268-.Lfunc_begin4
	.byte	1
	.uleb128 .Ltmp267-.Lfunc_begin4
	.uleb128 .Lfunc_end4-.Ltmp267
	.byte	0
	.byte	0
.Lcst_end1:
	.byte	1
	.byte	0
	.p2align	2
	.long	0
.Lttbase1:
	.p2align	2

	.section	.text.command_line_arguments.Client.netSendRoutine,"ax",@progbits
	.globl	command_line_arguments.Client.netSendRoutine
	.p2align	4, 0x90
	.type	command_line_arguments.Client.netSendRoutine,@function
command_line_arguments.Client.netSendRoutine:
.Lfunc_begin5:
	.loc	2 162 0 is_stmt 1
	.cfi_startproc
	.cfi_personality 3, __gccgo_personality_v0
	.cfi_lsda 3, .Lexception2
	leaq	-440(%rsp), %r11
	cmpq	%fs:112, %r11
	ja	.LBB5_2
	movq	%r10, %rax
	movabsq	$440, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB5_2:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$392, %rsp
	.cfi_def_cfa_offset 448
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rdi, %r13
	movb	$0, 31(%rsp)
.Ltmp396:
	.loc	2 163 3 prologue_end
	testq	%rdi, %rdi
	jne	.LBB5_4
.Ltmp397:
.Ltmp332:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp333:
.Ltmp398:
.LBB5_4:
	leaq	56(%r13), %rbx
.Ltmp334:
	.loc	2 163 6 is_stmt 0
	movl	$1, %esi
	movq	%rbx, %rdi
	callq	sync.WaitGroup.Add
.Ltmp335:
.Ltmp399:
	.loc	2 163 3
	testq	%r13, %r13
	jne	.LBB5_7
.Ltmp400:
.Ltmp336:
	.loc	2 164 9 is_stmt 1
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp337:
.Ltmp401:
.LBB5_7:
	.loc	2 164 2 is_stmt 0
	movq	%rbx, 64(%rsp)
.Ltmp338:
	leaq	31(%rsp), %rdi
	leaq	64(%rsp), %rdx
	movl	$command_line_arguments.command_line_arguments..thunk4, %esi
	callq	runtime.deferproc
.Ltmp339:
.Ltmp402:
	.loc	2 0 2
	leaq	256(%rsp), %r15
	jmp	.LBB5_9
.Ltmp403:
	.p2align	4, 0x90
.LBB5_39:
	movq	32(%rsp), %rbp
	movq	40(%rsp), %r14
.LBB5_9:
.Ltmp404:
	movq	%r13, 40(%rsp)
	.loc	2 163 3 is_stmt 1
	testq	%r13, %r13
	jne	.LBB5_11
.Ltmp405:
.Ltmp341:
	.loc	2 166 8
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp342:
	movq	%r14, 40(%rsp)
.Ltmp406:
.LBB5_11:
	.loc	2 166 6 is_stmt 0
	movq	40(%rsp), %rax
	cmpb	$0, 152(%rax)
	jne	.LBB5_22
.Ltmp407:
	.loc	2 163 3 is_stmt 1
	testq	%r13, %r13
	jne	.LBB5_14
.Ltmp408:
.Ltmp343:
	.loc	2 167 30
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp344:
.Ltmp409:
.LBB5_14:
	movq	192(%r13), %rsi
.Ltmp345:
	.loc	2 167 18 is_stmt 0
	movl	$pimt..interface.4Write.0func.8.6.7uint8.9.8int.3error.9.5..crypto_tls.Conn, %edi
	callq	encoding_gob.NewEncoder
	movq	%rax, 48(%rsp)
.Ltmp346:
.Ltmp410:
	.loc	2 168 14 is_stmt 1
	movb	216(%r13), %al
.Ltmp411:
	.loc	2 169 3
	testb	$1, %al
	jne	.LBB5_23
.Ltmp412:
	.loc	2 0 3 is_stmt 0
	xorl	%ecx, %ecx
	movl	%eax, %ebx
	.loc	2 173 22 is_stmt 1
	testb	%cl, %cl
	je	.LBB5_27
.Ltmp413:
.LBB5_26:
	.loc	2 0 22 is_stmt 0
	movl	%ebx, %eax
.Ltmp414:
.LBB5_27:
	.loc	2 173 22
	testb	$1, %al
	jne	.LBB5_29
.Ltmp415:
	.loc	2 0 22
	movq	%rbp, 32(%rsp)
	jmp	.LBB5_32
.Ltmp416:
	.p2align	4, 0x90
.LBB5_29:
	movq	$0, 56(%rsp)
	movq	%r13, %r14
.Ltmp417:
	.loc	2 174 18 is_stmt 1
	movq	160(%r13), %rdi
.Ltmp349:
	.loc	2 174 4 is_stmt 0
	leaq	56(%rsp), %rsi
	callq	runtime.chanrecv2
.Ltmp350:
.Ltmp418:
	.loc	2 175 7 is_stmt 1
	testb	%al, %al
	je	.LBB5_31
.Ltmp419:
	.loc	2 0 7 is_stmt 0
	movq	56(%rsp), %r13
.Ltmp420:
	movq	%r13, 32(%rsp)
	.loc	2 179 10 is_stmt 1
	testq	%r13, %r13
	jne	.LBB5_42
.Ltmp421:
.Ltmp351:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp352:
	movq	%rbp, 32(%rsp)
.Ltmp422:
.LBB5_42:
	.loc	2 0 10 is_stmt 0
	movq	32(%rsp), %rcx
	movq	40(%rcx), %rax
	movq	%rax, 240(%rsp)
	movups	24(%rcx), %xmm0
	movaps	%xmm0, 224(%rsp)
.Ltmp353:
	.loc	2 179 15
	leaq	224(%rsp), %rdi
	callq	net.IP.IsMulticast
.Ltmp354:
.Ltmp423:
	.loc	2 0 15
	testb	$1, %al
	jne	.LBB5_51
.Ltmp355:
	.loc	2 184 31 is_stmt 1
	movl	$github_com_twitchyliquid64_subnet_subnet_conn.PktType..d, %edi
	callq	runtime.newobject
.Ltmp356:
	movb	$1, (%rax)
.Ltmp357:
	.loc	2 184 18 is_stmt 0
	movl	$github_com_twitchyliquid64_subnet_subnet_conn.PktType..d, %esi
	movq	48(%rsp), %rdi
	movq	%rax, %rdx
	callq	encoding_gob.Encoder.Encode
.Ltmp358:
	.loc	2 0 18
	movq	%rax, %rbp
	.loc	2 185 11 is_stmt 1
	testq	%rax, %rax
	jne	.LBB5_47
.Ltmp367:
	.loc	2 190 17
	movl	$type...1command_line_arguments.IPPacket, %esi
	movq	48(%rsp), %rdi
	movq	%r13, %rdx
	callq	encoding_gob.Encoder.Encode
.Ltmp368:
	.loc	2 0 17 is_stmt 0
	movq	%rax, %rbp
	.loc	2 191 11 is_stmt 1
	testq	%rax, %rax
	jne	.LBB5_56
.Ltmp424:
.LBB5_51:
	.loc	2 0 11 is_stmt 0
	movq	%r14, %r13
	.loc	2 173 8 is_stmt 1
	movzbl	216(%r14), %eax
	.loc	2 173 22 is_stmt 0
	testb	$1, %al
	je	.LBB5_53
	.loc	2 0 22
	movl	%ebx, %eax
.LBB5_53:
	movq	32(%rsp), %rbp
	.loc	2 173 22
	testb	$1, %al
	jne	.LBB5_29
	jmp	.LBB5_32
	.p2align	4, 0x90
.LBB5_23:
.Ltmp425:
.Ltmp347:
	.loc	2 0 22
	movl	%eax, %ebx
	.loc	2 170 5 is_stmt 1
	movq	%r13, %rdi
	movq	48(%rsp), %rsi
	callq	command_line_arguments.Client.sendLocalAddr
.Ltmp426:
.Ltmp348:
	.loc	2 173 8
	movb	216(%r13), %al
	.loc	2 173 22 is_stmt 0
	movl	%eax, %ecx
	andb	$1, %cl
	testb	%cl, %cl
	jne	.LBB5_26
	jmp	.LBB5_27
.Ltmp427:
.LBB5_31:
	.loc	2 0 22
	movq	%rbp, 32(%rsp)
	movq	%r14, %r13
.Ltmp428:
	jmp	.LBB5_32
.LBB5_47:
	movq	%rdx, %r12
.Ltmp359:
.Ltmp429:
	.loc	2 186 9 is_stmt 1
	movl	$string..d, %edi
	callq	runtime.newobject
.Ltmp360:
	.loc	2 0 9 is_stmt 0
	movq	%rax, %rbx
	movq	%r14, %r13
	movups	.Lconst.120(%rip), %xmm0
	movaps	%xmm0, 208(%rsp)
.Ltmp361:
	.loc	2 186 9
	movl	$string..d, %edi
	movq	%rax, %rsi
	leaq	208(%rsp), %rdx
	callq	runtime.typedmemmove
.Ltmp362:
.Ltmp430:
	.loc	2 186 35
	movq	(%rbp), %rax
	.loc	2 186 9
	movq	$string..d, 160(%rsp)
	movq	%rbx, 168(%rsp)
	movq	%rax, 176(%rsp)
	movq	%r12, 184(%rsp)
	leaq	160(%rsp), %rax
	movq	%rax, 80(%rsp)
	movq	$2, 88(%rsp)
	movq	$2, 96(%rsp)
.Ltmp363:
	movq	96(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	80(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	callq	log.Println
.Ltmp364:
.Ltmp431:
.Ltmp365:
	.loc	2 187 6 is_stmt 1
	movq	%r13, %rdi
	callq	command_line_arguments.Client.connectionProblem
.Ltmp366:
	jmp	.LBB5_32
.Ltmp432:
.LBB5_56:
	.loc	2 0 6 is_stmt 0
	movq	%rdx, %r12
.Ltmp370:
	.loc	2 192 9 is_stmt 1
	movl	$string..d, %edi
	callq	runtime.newobject
.Ltmp371:
	.loc	2 0 9 is_stmt 0
	movq	%rax, %rbx
	movq	%r14, %r13
	movups	.Lconst.120(%rip), %xmm0
	movaps	%xmm0, 192(%rsp)
.Ltmp372:
	.loc	2 192 9
	movl	$string..d, %edi
	movq	%rax, %rsi
	leaq	192(%rsp), %rdx
	callq	runtime.typedmemmove
.Ltmp373:
.Ltmp433:
	.loc	2 192 35
	movq	(%rbp), %rax
	.loc	2 192 9
	movq	$string..d, 128(%rsp)
	movq	%rbx, 136(%rsp)
	movq	%rax, 144(%rsp)
	movq	%r12, 152(%rsp)
	leaq	128(%rsp), %rax
	movq	%rax, 104(%rsp)
	movq	$2, 112(%rsp)
	movq	$2, 120(%rsp)
.Ltmp374:
	movq	120(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	104(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	callq	log.Println
.Ltmp375:
.Ltmp434:
.Ltmp376:
	.loc	2 193 6 is_stmt 1
	movq	%r13, %rdi
	callq	command_line_arguments.Client.connectionProblem
.Ltmp377:
.Ltmp435:
	.p2align	4, 0x90
.LBB5_32:
.Ltmp378:
	.loc	2 197 8
	movl	$150000000, %edi
	callq	time.Sleep
.Ltmp379:
	.loc	2 198 19
	movq	160(%r13), %rbp
.Ltmp436:
	.loc	2 0 19 is_stmt 0
	leaq	72(%rsp), %rbx
.Ltmp437:
	.p2align	4, 0x90
.LBB5_34:
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 368(%rsp)
	movaps	%xmm0, 352(%rsp)
	movaps	%xmm0, 336(%rsp)
	movaps	%xmm0, 320(%rsp)
	movaps	%xmm0, 304(%rsp)
	movaps	%xmm0, 288(%rsp)
	movaps	%xmm0, 272(%rsp)
	movaps	%xmm0, 256(%rsp)
.Ltmp381:
.Ltmp438:
	.loc	2 204 3 is_stmt 1
	movl	$128, %esi
	movl	$2, %edx
	movq	%r15, %rdi
	callq	runtime.newselect
.Ltmp382:
.Ltmp439:
	.loc	2 0 3 is_stmt 0
	movq	$0, 72(%rsp)
.Ltmp383:
	.loc	2 205 3 is_stmt 1
	xorl	%ecx, %ecx
	movq	%r15, %rdi
	movq	%rbp, %rsi
	movq	%rbx, %rdx
	callq	runtime.selectrecv
.Ltmp384:
.Ltmp440:
.Ltmp385:
	.loc	2 206 3
	movq	%r15, %rdi
	callq	runtime.selectdefault
.Ltmp386:
.Ltmp441:
.Ltmp387:
	.loc	2 204 3
	movq	%r15, %rdi
	callq	runtime.selectgo
.Ltmp388:
.Ltmp442:
	.loc	2 0 3 is_stmt 0
	testq	%rax, %rax
	je	.LBB5_34
	jmp	.LBB5_39
.LBB5_20:
.Ltmp443:
.Ltmp340:
	jmp	.LBB5_21
.Ltmp444:
.LBB5_19:
.Ltmp380:
	jmp	.LBB5_21
.LBB5_18:
.Ltmp369:
	jmp	.LBB5_21
.LBB5_17:
.Ltmp389:
.LBB5_21:
.Ltmp390:
	leaq	31(%rsp), %rdi
	.loc	2 200 1 is_stmt 1
	callq	runtime.checkdefer
.Ltmp391:
.LBB5_22:
	.loc	2 0 1 is_stmt 0
	movb	$1, %bl
	leaq	31(%rsp), %rbp
	jmp	.LBB5_63
.LBB5_60:
.Ltmp392:
	movq	%rax, %r14
	xorl	%ebx, %ebx
	leaq	31(%rsp), %rbp
	jmp	.LBB5_63
.LBB5_62:
.Ltmp395:
	.loc	2 200 1
	movq	%rbp, %rdi
	callq	runtime.checkdefer
	.p2align	4, 0x90
.LBB5_63:
.Ltmp393:
	movq	%rbp, %rdi
	callq	runtime.deferreturn
.Ltmp394:
.Ltmp445:
	.loc	2 0 1
	testb	%bl, %bl
	je	.LBB5_66
	addq	$392, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB5_66:
	.cfi_def_cfa_offset 448
	movq	%r14, %rdi
	callq	_Unwind_Resume
.Lfunc_end5:
	.size	command_line_arguments.Client.netSendRoutine, .Lfunc_end5-command_line_arguments.Client.netSendRoutine
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table5:
.Lexception2:
	.byte	255
	.byte	3
	.uleb128 .Lttbase2-.Lttbaseref2
.Lttbaseref2:
	.byte	1
	.uleb128 .Lcst_end2-.Lcst_begin2
.Lcst_begin2:
	.uleb128 .Lfunc_begin5-.Lfunc_begin5
	.uleb128 .Ltmp332-.Lfunc_begin5
	.byte	0
	.byte	0
	.uleb128 .Ltmp332-.Lfunc_begin5
	.uleb128 .Ltmp339-.Ltmp332
	.uleb128 .Ltmp340-.Lfunc_begin5
	.byte	1
	.uleb128 .Ltmp341-.Lfunc_begin5
	.uleb128 .Ltmp346-.Ltmp341
	.uleb128 .Ltmp380-.Lfunc_begin5
	.byte	1
	.uleb128 .Ltmp349-.Lfunc_begin5
	.uleb128 .Ltmp368-.Ltmp349
	.uleb128 .Ltmp369-.Lfunc_begin5
	.byte	1
	.uleb128 .Ltmp347-.Lfunc_begin5
	.uleb128 .Ltmp379-.Ltmp347
	.uleb128 .Ltmp380-.Lfunc_begin5
	.byte	1
	.uleb128 .Ltmp381-.Lfunc_begin5
	.uleb128 .Ltmp388-.Ltmp381
	.uleb128 .Ltmp389-.Lfunc_begin5
	.byte	1
	.uleb128 .Ltmp390-.Lfunc_begin5
	.uleb128 .Ltmp391-.Ltmp390
	.uleb128 .Ltmp392-.Lfunc_begin5
	.byte	0
	.uleb128 .Ltmp391-.Lfunc_begin5
	.uleb128 .Ltmp393-.Ltmp391
	.byte	0
	.byte	0
	.uleb128 .Ltmp393-.Lfunc_begin5
	.uleb128 .Ltmp394-.Ltmp393
	.uleb128 .Ltmp395-.Lfunc_begin5
	.byte	1
	.uleb128 .Ltmp394-.Lfunc_begin5
	.uleb128 .Lfunc_end5-.Ltmp394
	.byte	0
	.byte	0
.Lcst_end2:
	.byte	1
	.byte	0
	.p2align	2
	.long	0
.Lttbase2:
	.p2align	2

	.section	.text.command_line_arguments.Client.sendLocalAddr,"ax",@progbits
	.globl	command_line_arguments.Client.sendLocalAddr
	.p2align	4, 0x90
	.type	command_line_arguments.Client.sendLocalAddr,@function
command_line_arguments.Client.sendLocalAddr:
.Lfunc_begin6:
	.loc	2 291 0 is_stmt 1
	.cfi_startproc
	leaq	-360(%rsp), %r11
	cmpq	%fs:112, %r11
	ja	.LBB6_2
	movq	%r10, %rax
	movabsq	$360, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB6_2:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$312, %rsp
	.cfi_def_cfa_offset 368
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rsi, %r12
	movq	%rdi, %r14
.Ltmp446:
	.loc	2 292 29 prologue_end
	movl	$github_com_twitchyliquid64_subnet_subnet_conn.PktType..d, %edi
	callq	runtime.newobject
	movb	$2, (%rax)
	.loc	2 292 16 is_stmt 0
	movl	$github_com_twitchyliquid64_subnet_subnet_conn.PktType..d, %esi
	movq	%r12, %rdi
	movq	%rax, %rdx
	callq	encoding_gob.Encoder.Encode
	.loc	2 293 9 is_stmt 1
	testq	%rax, %rax
	je	.LBB6_4
.Ltmp447:
	.loc	2 0 9 is_stmt 0
	movq	%rax, %rbx
.Ltmp448:
	movq	%rdx, %r15
.Ltmp449:
	.loc	2 294 7 is_stmt 1
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %r13
	movups	.Lconst.120(%rip), %xmm0
	movaps	%xmm0, 288(%rsp)
	leaq	288(%rsp), %rdx
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	.loc	2 294 33 is_stmt 0
	movq	(%rbx), %rax
	.loc	2 294 7
	movq	$string..d, 176(%rsp)
	movq	%r13, 184(%rsp)
	movq	%rax, 192(%rsp)
	movq	%r15, 200(%rsp)
	leaq	176(%rsp), %rax
	movq	%rax, 64(%rsp)
	movq	$2, 72(%rsp)
	movq	$2, 80(%rsp)
	movq	80(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	64(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	callq	log.Println
.Ltmp450:
.LBB6_4:
	.loc	2 296 24 is_stmt 1
	testq	%r14, %r14
	je	.LBB6_12
.Ltmp451:
	.loc	2 0 24 is_stmt 0
	movq	112(%r14), %rax
	movq	%rax, 128(%rsp)
	movups	96(%r14), %xmm0
	movaps	%xmm0, 112(%rsp)
	.loc	2 296 24
	movl	$net.IP..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
	movaps	112(%rsp), %xmm0
	movaps	%xmm0, 256(%rsp)
	movq	128(%rsp), %rax
	movq	%rax, 272(%rsp)
	leaq	256(%rsp), %rdx
	movl	$net.IP..d, %edi
	movq	%rbx, %rsi
	callq	runtime.typedmemmove
	.loc	2 296 15
	movl	$net.IP..d, %esi
	movq	%r12, %rdi
	movq	%rbx, %rdx
	callq	encoding_gob.Encoder.Encode
.Ltmp452:
	.loc	2 297 9 is_stmt 1
	testq	%rax, %rax
	jne	.LBB6_14
.Ltmp453:
	.loc	2 0 9 is_stmt 0
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 32(%rsp)
	movq	$0, 48(%rsp)
	movq	128(%r14), %rax
.Ltmp454:
	movq	%rax, 56(%rsp)
.Ltmp455:
	.loc	2 300 2 is_stmt 1
	testq	%rax, %rax
	jle	.LBB6_13
.Ltmp456:
	.loc	2 0 2 is_stmt 0
	movq	120(%r14), %r14
.Ltmp457:
	xorl	%r15d, %r15d
.Ltmp458:
	.p2align	4, 0x90
.LBB6_9:
	movq	16(%r14), %rax
	movq	%rax, 48(%rsp)
	movups	(%r14), %xmm0
	movaps	%xmm0, 32(%rsp)
	.loc	2 301 29 is_stmt 1
	movl	$github_com_twitchyliquid64_subnet_subnet_conn.PktType..d, %edi
	callq	runtime.newobject
	movb	$2, (%rax)
	.loc	2 301 16 is_stmt 0
	movl	$github_com_twitchyliquid64_subnet_subnet_conn.PktType..d, %esi
	movq	%r12, %rdi
	movq	%rax, %rdx
	callq	encoding_gob.Encoder.Encode
	.loc	2 302 10 is_stmt 1
	testq	%rax, %rax
	je	.LBB6_11
.Ltmp459:
	.loc	2 0 10 is_stmt 0
	movq	%rax, %rbx
.Ltmp460:
	movq	%rdx, %r13
.Ltmp461:
	.loc	2 303 8 is_stmt 1
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbp
	movups	.Lconst.120(%rip), %xmm0
	movaps	%xmm0, 240(%rsp)
	movl	$string..d, %edi
	movq	%rax, %rsi
	leaq	240(%rsp), %rdx
	callq	runtime.typedmemmove
	.loc	2 303 34 is_stmt 0
	movq	(%rbx), %rax
	.loc	2 303 8
	movq	$string..d, 144(%rsp)
	movq	%rbp, 152(%rsp)
	movq	%rax, 160(%rsp)
	movq	%r13, 168(%rsp)
	leaq	144(%rsp), %rax
	movq	%rax, 88(%rsp)
	movq	$2, 96(%rsp)
	movq	$2, 104(%rsp)
	movq	104(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	88(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	callq	log.Println
.Ltmp462:
.LBB6_11:
	.loc	2 305 24 is_stmt 1
	movl	$net.IP..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
	movaps	32(%rsp), %xmm0
	movaps	%xmm0, 208(%rsp)
	movq	48(%rsp), %rax
	movq	%rax, 224(%rsp)
	movl	$net.IP..d, %edi
	movq	%rbx, %rsi
	leaq	208(%rsp), %rdx
	callq	runtime.typedmemmove
	.loc	2 305 16 is_stmt 0
	movl	$net.IP..d, %esi
	movq	%r12, %rdi
	movq	%rbx, %rdx
	callq	encoding_gob.Encoder.Encode
.Ltmp463:
	.loc	2 306 10 is_stmt 1
	testq	%rax, %rax
	jne	.LBB6_14
.Ltmp464:
	.loc	2 300 2
	addq	$1, %r15
	addq	$24, %r14
	cmpq	56(%rsp), %r15
	jl	.LBB6_9
.Ltmp465:
.LBB6_13:
	.loc	2 310 2
	xorl	%eax, %eax
	xorl	%edx, %edx
.Ltmp466:
.LBB6_14:
	.loc	2 0 2 is_stmt 0
	addq	$312, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
.Ltmp467:
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB6_12:
	.cfi_def_cfa_offset 368
.Ltmp468:
	.loc	2 296 24 is_stmt 1
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp469:
.Lfunc_end6:
	.size	command_line_arguments.Client.sendLocalAddr, .Lfunc_end6-command_line_arguments.Client.sendLocalAddr
	.cfi_endproc

	.section	.text.command_line_arguments.Reverser.AddRouteEntry,"ax",@progbits
	.globl	command_line_arguments.Reverser.AddRouteEntry
	.p2align	4, 0x90
	.type	command_line_arguments.Reverser.AddRouteEntry,@function
command_line_arguments.Reverser.AddRouteEntry:
.Lfunc_begin7:
	.file	3 "./reverser.go"
	.loc	3 29 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB7_2
	movq	%r10, %rax
	movabsq	$200, %r10
	movabsq	$48, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB7_2:
.Ltmp470:
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	subq	$184, %rsp
	.cfi_def_cfa_offset 208
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
.Ltmp471:
	.loc	3 30 3 prologue_end
	testq	%rdi, %rdi
	je	.LBB7_19
.Ltmp472:
	.loc	3 0 3 is_stmt 0
	movq	%rdi, %r14
.Ltmp473:
	leaq	232(%rsp), %r8
	leaq	208(%rsp), %rdi
	movups	(%r14), %xmm0
	movaps	%xmm0, 32(%rsp)
	movq	16(%r14), %rax
	movq	%rax, 48(%rsp)
	.loc	3 30 21
	movq	40(%rsp), %rbx
	.loc	3 30 46
	movq	16(%rdi), %rcx
	movq	%rcx, 112(%rsp)
	movups	(%rdi), %xmm0
	movaps	%xmm0, 96(%rsp)
	movq	16(%r8), %rcx
	movq	%rcx, 136(%rsp)
	movups	(%r8), %xmm0
	movups	%xmm0, 120(%rsp)
	movq	%rsi, 144(%rsp)
	movq	%rdx, 152(%rsp)
	.loc	3 30 21
	leaq	1(%rbx), %rdx
	cmpq	%rax, %rdx
	jbe	.LBB7_8
.Ltmp474:
	movq	48(%rsp), %rax
	movq	%rax, 16(%rsp)
	movaps	32(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	leaq	160(%rsp), %rdi
	movl	$command_line_arguments..command_line_arguments.routeEntries..d, %esi
.Ltmp475:
	callq	runtime.growslice
	movq	160(%rsp), %rsi
	movq	168(%rsp), %rdx
	movq	176(%rsp), %rax
	jmp	.LBB7_5
.Ltmp476:
.LBB7_8:
	cmpq	%rax, %rdx
	jg	.LBB7_20
.Ltmp477:
	.loc	3 0 21
	movq	%rax, %rcx
	orq	%rdx, %rcx
	js	.LBB7_20
.Ltmp478:
	.loc	3 30 21
	movq	32(%rsp), %rsi
.Ltmp479:
.LBB7_5:
	movq	%rsi, 32(%rsp)
	movq	%rdx, 40(%rsp)
	movq	%rax, 48(%rsp)
	testq	%rbx, %rbx
	js	.LBB7_7
.Ltmp480:
	.loc	3 0 21
	cmpq	%rdx, %rbx
	jge	.LBB7_7
.Ltmp481:
	.loc	3 30 21
	shlq	$6, %rbx
	addq	%rbx, %rsi
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB7_12
.Ltmp482:
	.loc	3 0 21
	leaq	96(%rsp), %rdx
	.loc	3 30 21
	movl	$command_line_arguments..command_line_arguments.routeEntries..d, %edi
	callq	runtime.typedmemmove
	jmp	.LBB7_15
.Ltmp483:
.LBB7_12:
	testq	%rsi, %rsi
	je	.LBB7_19
.Ltmp484:
	movaps	96(%rsp), %xmm0
	movaps	112(%rsp), %xmm1
	movaps	128(%rsp), %xmm2
	movaps	144(%rsp), %xmm3
	movups	%xmm3, 48(%rsi)
	movups	%xmm2, 32(%rsi)
	movups	%xmm1, 16(%rsi)
	movups	%xmm0, (%rsi)
.Ltmp485:
.LBB7_15:
	.loc	3 0 21
	movq	48(%rsp), %rax
	movq	%rax, 80(%rsp)
	movaps	32(%rsp), %xmm0
	movaps	%xmm0, 64(%rsp)
	.loc	3 30 19
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB7_18
.Ltmp486:
	.loc	3 0 19
	leaq	64(%rsp), %rdx
	.loc	3 30 19
	movl	$type...6.7command_line_arguments.routeEntries, %edi
	movq	%r14, %rsi
	callq	runtime.typedmemmove
	jmp	.LBB7_17
.Ltmp487:
.LBB7_18:
	movq	80(%rsp), %rax
	movq	%rax, 16(%r14)
	movaps	64(%rsp), %xmm0
	movups	%xmm0, (%r14)
.Ltmp488:
.LBB7_17:
	.loc	3 0 19
	addq	$184, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
.Ltmp489:
	.cfi_def_cfa_offset 8
	retq
.LBB7_7:
	.cfi_def_cfa_offset 208
.Ltmp490:
	.loc	3 30 21
	xorl	%edi, %edi
	callq	__go_runtime_error
.Ltmp491:
.LBB7_19:
	.loc	3 0 21
	movl	$6, %edi
	callq	__go_runtime_error
.LBB7_20:
.Ltmp492:
	.loc	3 30 21
	movl	$3, %edi
	callq	__go_runtime_error
.Ltmp493:
.Lfunc_end7:
	.size	command_line_arguments.Reverser.AddRouteEntry, .Lfunc_end7-command_line_arguments.Reverser.AddRouteEntry
	.cfi_endproc

	.section	.text.command_line_arguments.Reverser.Close,"ax",@progbits
	.globl	command_line_arguments.Reverser.Close
	.p2align	4, 0x90
	.type	command_line_arguments.Reverser.Close,@function
command_line_arguments.Reverser.Close:
.Lfunc_begin8:
	.loc	3 46 0 is_stmt 1
	.cfi_startproc
	leaq	-744(%rsp), %r11
	cmpq	%fs:112, %r11
	ja	.LBB8_2
	movq	%r10, %rax
	movabsq	$744, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB8_2:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$696, %rsp
	.cfi_def_cfa_offset 752
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 112(%rsp)
	movaps	%xmm0, 96(%rsp)
	movaps	%xmm0, 80(%rsp)
	movaps	%xmm0, 64(%rsp)
.Ltmp494:
	.loc	3 47 25 prologue_end
	testq	%rdi, %rdi
	je	.LBB8_11
.Ltmp495:
	.loc	3 0 25 is_stmt 0
	movq	%rdi, 56(%rsp)
.Ltmp496:
	movq	8(%rdi), %rcx
	.loc	3 47 2
	testq	%rcx, %rcx
	jle	.LBB8_8
.Ltmp497:
	.loc	3 0 2
	movq	56(%rsp), %rax
	movq	(%rax), %r15
	leaq	88(%rsp), %rbx
.Ltmp498:
	.p2align	4, 0x90
.LBB8_5:
	movq	%rcx, 160(%rsp)
	.loc	3 47 2
	movups	(%r15), %xmm0
	movups	16(%r15), %xmm1
	movups	32(%r15), %xmm2
	movups	48(%r15), %xmm3
	movaps	%xmm3, 112(%rsp)
	movaps	%xmm2, 96(%rsp)
	movaps	%xmm1, 80(%rsp)
	movaps	%xmm0, 64(%rsp)
.Ltmp499:
	.loc	3 48 8 is_stmt 1
	movq	112(%rsp), %rdi
	movq	120(%rsp), %rsi
	movq	16(%rbx), %rax
	movq	%rax, 40(%rsp)
	movups	(%rbx), %xmm0
	movups	%xmm0, 24(%rsp)
	movq	80(%rsp), %rax
	movq	%rax, 16(%rsp)
	movaps	64(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$1, %edx
	callq	command_line_arguments.DelRoute
	.loc	3 49 8
	testq	%rax, %rax
	je	.LBB8_6
.Ltmp500:
	.loc	3 0 8 is_stmt 0
	movq	%rax, %rbp
.Ltmp501:
	movq	%rdx, %r12
.Ltmp502:
	movq	80(%rsp), %rax
	movq	%rax, 528(%rsp)
	movaps	64(%rsp), %xmm0
	movaps	%xmm0, 512(%rsp)
	.loc	3 52 69 is_stmt 1
	leaq	512(%rsp), %rdi
	callq	net.IP.String
	movq	%rax, %r13
	movq	%rdx, %r14
	movups	(%rbx), %xmm0
	movaps	%xmm0, 480(%rsp)
	movq	16(%rbx), %rax
	movq	%rax, 496(%rsp)
	.loc	3 52 89 is_stmt 0
	leaq	480(%rsp), %rdi
	callq	net.IP.String
	movq	%rax, 144(%rsp)
	movq	%rdx, 136(%rsp)
	.loc	3 52 112
	movq	%r12, %rdi
	callq	*8(%rbp)
	movq	%rax, 48(%rsp)
	movq	%rdx, 152(%rsp)
	movups	24(%rbx), %xmm0
	movaps	%xmm0, 464(%rsp)
	.loc	3 52 8
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %r12
.Ltmp503:
	.loc	3 0 8
	movq	%r13, 272(%rsp)
	movq	%r14, 280(%rsp)
	.loc	3 52 8
	movl	$string..d, %edi
	movq	%rax, %rsi
	leaq	272(%rsp), %rdx
	callq	runtime.typedmemmove
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %r13
	movq	144(%rsp), %rax
	movq	%rax, 256(%rsp)
	movq	136(%rsp), %rax
	movq	%rax, 264(%rsp)
	movl	$string..d, %edi
	movq	%r13, %rsi
	leaq	256(%rsp), %rdx
	callq	runtime.typedmemmove
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
	movaps	464(%rsp), %xmm0
	movaps	%xmm0, 448(%rsp)
	movl	$string..d, %edi
	movq	%rax, %rsi
	leaq	448(%rsp), %rdx
	callq	runtime.typedmemmove
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbp
	movq	48(%rsp), %rax
	movq	%rax, 240(%rsp)
	movq	152(%rsp), %rax
	movq	%rax, 248(%rsp)
	movl	$string..d, %edi
	movq	%rbp, %rsi
	leaq	240(%rsp), %rdx
	callq	runtime.typedmemmove
	movq	$string..d, 368(%rsp)
	movq	%r12, 376(%rsp)
	movq	$string..d, 384(%rsp)
	movq	%r13, 392(%rsp)
	movq	$string..d, 400(%rsp)
	movq	%rbx, 408(%rsp)
	movq	$string..d, 416(%rsp)
	movq	%rbp, 424(%rsp)
	leaq	368(%rsp), %rax
	movq	%rax, 192(%rsp)
	movq	$4, 200(%rsp)
	movq	$4, 208(%rsp)
	movq	208(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	192(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.178, %edi
	movl	$39, %esi
	jmp	.LBB8_7
.Ltmp504:
	.p2align	4, 0x90
.LBB8_6:
	.loc	3 0 8
	movq	80(%rsp), %rax
	movq	%rax, 624(%rsp)
	movaps	64(%rsp), %xmm0
	movaps	%xmm0, 608(%rsp)
	.loc	3 50 63 is_stmt 1
	leaq	608(%rsp), %rdi
	callq	net.IP.String
	movq	%rax, %r12
	movq	%rdx, %r14
	movups	(%rbx), %xmm0
	movaps	%xmm0, 576(%rsp)
	movq	16(%rbx), %rax
	movq	%rax, 592(%rsp)
	.loc	3 50 83 is_stmt 0
	leaq	576(%rsp), %rdi
	callq	net.IP.String
	movq	%rax, %rbp
	movq	%rdx, 48(%rsp)
	movups	24(%rbx), %xmm0
	movaps	%xmm0, 560(%rsp)
	.loc	3 50 8
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %r13
	movq	%r12, 304(%rsp)
	movq	%r14, 312(%rsp)
	movl	$string..d, %edi
	movq	%rax, %rsi
	leaq	304(%rsp), %rdx
	callq	runtime.typedmemmove
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
	movq	%rbp, 288(%rsp)
	movq	48(%rsp), %rax
	movq	%rax, 296(%rsp)
	movl	$string..d, %edi
	movq	%rbx, %rsi
	leaq	288(%rsp), %rdx
	callq	runtime.typedmemmove
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbp
	movaps	560(%rsp), %xmm0
	movaps	%xmm0, 544(%rsp)
	movl	$string..d, %edi
	movq	%rax, %rsi
	leaq	544(%rsp), %rdx
	callq	runtime.typedmemmove
	movq	$string..d, 320(%rsp)
	movq	%r13, 328(%rsp)
	movq	$string..d, 336(%rsp)
	movq	%rbx, 344(%rsp)
	movq	$string..d, 352(%rsp)
	movq	%rbp, 360(%rsp)
	leaq	320(%rsp), %rax
	movq	%rax, 168(%rsp)
	movq	$3, 176(%rsp)
	movq	$3, 184(%rsp)
	movq	184(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	168(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.176, %edi
	movl	$33, %esi
.Ltmp505:
.LBB8_7:
	.loc	3 0 8
	callq	log.Printf
	.loc	3 47 2 is_stmt 1
	addq	$64, %r15
	movq	160(%rsp), %rcx
	addq	$-1, %rcx
	leaq	88(%rsp), %rbx
	jne	.LBB8_5
.Ltmp506:
.LBB8_8:
	.loc	3 0 2 is_stmt 0
	movq	56(%rsp), %rbx
	testb	$1, 24(%rbx)
	je	.LBB8_10
.Ltmp507:
	.loc	3 56 4 is_stmt 1
	movq	48(%rbx), %rdi
	.loc	3 56 21 is_stmt 0
	callq	github_com_twitchyliquid64_subnet_vendor_github_com_songgao_water.Interface.Close..stub
	movups	32(%rbx), %xmm0
	movaps	%xmm0, 432(%rsp)
	.loc	3 57 24 is_stmt 1
	movl	$type...63x.7string, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
	movups	.Lconst.181(%rip), %xmm0
	movaps	%xmm0, 640(%rsp)
	movups	.Lconst.183(%rip), %xmm0
	movaps	%xmm0, 656(%rsp)
	movaps	432(%rsp), %xmm0
	movaps	%xmm0, 672(%rsp)
	leaq	640(%rsp), %rdx
	movl	$type...63x.7string, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movq	%rbx, 216(%rsp)
	movq	$3, 224(%rsp)
	movq	$3, 232(%rsp)
	.loc	3 57 3 is_stmt 0
	movq	232(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	216(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.159, %edi
	movl	$5, %esi
	xorl	%edx, %edx
	callq	command_line_arguments.commandExec
.Ltmp508:
.LBB8_10:
	.loc	3 0 3
	addq	$696, %rsp
.Ltmp509:
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB8_11:
	.cfi_def_cfa_offset 752
.Ltmp510:
	.loc	3 47 25 is_stmt 1
	movl	$6, %edi
.Ltmp511:
	callq	__go_runtime_error
.Ltmp512:
.Lfunc_end8:
	.size	command_line_arguments.Reverser.Close, .Lfunc_end8-command_line_arguments.Reverser.Close
	.cfi_endproc

	.section	.text.command_line_arguments.Reverser.ResetGatewayOSX,"ax",@progbits
	.globl	command_line_arguments.Reverser.ResetGatewayOSX
	.p2align	4, 0x90
	.type	command_line_arguments.Reverser.ResetGatewayOSX,@function
command_line_arguments.Reverser.ResetGatewayOSX:
.Lfunc_begin9:
	.loc	3 38 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB9_2
	movq	%r10, %rax
	movabsq	$40, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB9_2:
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	subq	$24, %rsp
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	movq	%rdx, 8(%rsp)
	movq	%rcx, 16(%rsp)
.Ltmp513:
	.loc	3 39 3 prologue_end
	testq	%rdi, %rdi
	je	.LBB9_9
.Ltmp514:
	.loc	3 0 3 is_stmt 0
	movq	%rsi, %r14
.Ltmp515:
	movq	%rdi, %rbx
.Ltmp516:
	.loc	3 39 18
	movb	$1, 24(%rdi)
	.loc	3 40 3 is_stmt 1
	leaq	32(%rdi), %rsi
	.loc	3 40 10 is_stmt 0
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB9_4
	.loc	3 0 10
	leaq	8(%rsp), %rdx
	.loc	3 40 10
	movl	$string..d, %edi
	callq	runtime.typedmemmove
	.loc	3 41 3 is_stmt 1
	addq	$48, %rbx
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB9_5
	.loc	3 41 21 is_stmt 0
	movq	%rbx, %rdi
	movq	%r14, %rsi
	callq	runtime.writebarrierptr
	jmp	.LBB9_8
.LBB9_4:
	.loc	3 40 10 is_stmt 1
	movups	8(%rsp), %xmm0
	movups	%xmm0, (%rsi)
	.loc	3 41 3
	addq	$48, %rbx
.LBB9_5:
	.loc	3 41 21 is_stmt 0
	movq	%r14, (%rbx)
.LBB9_8:
	.loc	3 0 21
	addq	$24, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	retq
.LBB9_9:
	.cfi_def_cfa_offset 48
.Ltmp517:
	.loc	3 39 3 is_stmt 1
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp518:
.Lfunc_end9:
	.size	command_line_arguments.Reverser.ResetGatewayOSX, .Lfunc_end9-command_line_arguments.Reverser.ResetGatewayOSX
	.cfi_endproc

	.section	.text.command_line_arguments.NewClient,"ax",@progbits
	.globl	command_line_arguments.NewClient
	.p2align	4, 0x90
	.type	command_line_arguments.NewClient,@function
command_line_arguments.NewClient:
.Lfunc_begin10:
	.loc	2 49 0
	.cfi_startproc
	leaq	-840(%rsp), %r11
	cmpq	%fs:112, %r11
	ja	.LBB10_2
	movq	%r10, %rax
	movabsq	$840, %r10
	movabsq	$120, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB10_2:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$792, %rsp
	.cfi_def_cfa_offset 848
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
.Ltmp519:
	movq	%r8, %rbp
	movq	%rcx, %r15
	movq	%rdx, %r12
.Ltmp520:
	movq	%rsi, %r13
.Ltmp521:
	movq	%rdi, %rbx
.Ltmp522:
	.loc	2 52 23 prologue_end
	movq	896(%rsp), %rsi
	movq	904(%rsp), %rdx
	movq	912(%rsp), %rcx
	movq	920(%rsp), %r8
	movaps	928(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	leaq	248(%rsp), %rdi
.Ltmp523:
	callq	github_com_twitchyliquid64_subnet_subnet_conn.TLSConfig
	movq	256(%rsp), %rax
.Ltmp524:
	.loc	2 53 9
	testq	%rax, %rax
	je	.LBB10_4
.Ltmp525:
	.loc	2 52 23
	movq	264(%rsp), %rcx
.Ltmp526:
	.loc	2 54 3
	movq	$0, (%rbx)
	movq	%rax, 8(%rbx)
	movq	%rcx, 16(%rbx)
	jmp	.LBB10_9
.Ltmp527:
.LBB10_4:
	.loc	2 0 3 is_stmt 0
	movq	248(%rsp), %r14
	leaq	464(%rsp), %rdi
.Ltmp528:
	.file	4 "./util.go"
	.loc	4 13 20 is_stmt 1
	movq	%r13, %rsi
	movq	%r12, %rdx
	callq	net.LookupIP
.Ltmp529:
	movq	488(%rsp), %rax
.Ltmp530:
	.loc	4 14 9
	testq	%rax, %rax
	je	.LBB10_10
.Ltmp531:
	.loc	4 13 20
	movq	496(%rsp), %rdx
.Ltmp532:
	.loc	4 0 20 is_stmt 0
	leaq	64(%rsp), %rcx
	.loc	4 15 3 is_stmt 1
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 64(%rsp)
	movq	$0, 80(%rsp)
.Ltmp533:
.LBB10_6:
	.loc	4 0 3 is_stmt 0
	movq	16(%rcx), %rsi
	movq	%rsi, 112(%rsp)
	movups	(%rcx), %xmm0
	movaps	%xmm0, 96(%rsp)
	.loc	2 58 9 is_stmt 1
	testq	%rax, %rax
	jne	.LBB10_7
	jmp	.LBB10_17
.Ltmp534:
.LBB10_10:
	.loc	2 0 9 is_stmt 0
	movq	%r14, 32(%rsp)
	movq	472(%rsp), %r14
.Ltmp535:
	.loc	4 17 16 is_stmt 1
	testq	%r14, %r14
	je	.LBB10_11
.Ltmp536:
	.loc	4 0 16 is_stmt 0
	movq	%rbp, 56(%rsp)
	movq	464(%rsp), %rbp
.Ltmp537:
	leaq	440(%rsp), %rdi
	.loc	4 21 17 is_stmt 1
	callq	time.Now
.Ltmp538:
	.loc	4 0 17 is_stmt 0
	movq	456(%rsp), %rax
	movq	%rax, 384(%rsp)
	movups	440(%rsp), %xmm0
	movaps	%xmm0, 368(%rsp)
	leaq	368(%rsp), %rdi
	.loc	4 21 22
	callq	time.Time.Unix
	.loc	4 21 7
	movq	%rax, %rdi
	callq	math_rand.Seed
	.loc	4 22 20 is_stmt 1
	callq	math_rand.Int
	.loc	4 22 25 is_stmt 0
	cmpq	$-1, %r14
	je	.LBB10_13
.Ltmp539:
	cqto
	idivq	%r14
	.loc	4 22 14
	cmpq	%r14, %rdx
	jge	.LBB10_24
.Ltmp540:
.LBB10_15:
	.loc	4 0 14
	testq	%rdx, %rdx
	js	.LBB10_24
.Ltmp541:
	.loc	4 22 14
	leaq	(%rdx,%rdx,2), %rax
	.loc	4 22 2
	movq	16(%rbp,%rax,8), %rcx
	movq	%rcx, 80(%rsp)
	movups	(%rbp,%rax,8), %xmm0
	movaps	%xmm0, 64(%rsp)
	movq	80(%rsp), %rax
	movq	%rax, 112(%rsp)
	movaps	64(%rsp), %xmm0
	movaps	%xmm0, 96(%rsp)
	movq	56(%rsp), %rbp
	movq	32(%rsp), %r14
.Ltmp542:
.LBB10_17:
	.loc	4 0 2
	leaq	848(%rsp), %rax
	.loc	2 62 34 is_stmt 1
	movq	(%rax), %rsi
	movq	8(%rax), %rdx
	leaq	392(%rsp), %rdi
.Ltmp543:
	callq	net.ParseCIDR
.Ltmp544:
	movq	416(%rsp), %rdx
	movq	424(%rsp), %rax
.Ltmp545:
	movq	432(%rsp), %rdi
.Ltmp546:
	.loc	2 0 34 is_stmt 0
	movups	392(%rsp), %xmm0
	movaps	%xmm0, 192(%rsp)
	movq	408(%rsp), %rcx
	movq	%rcx, 208(%rsp)
	.loc	2 63 9 is_stmt 1
	testq	%rax, %rax
	je	.LBB10_20
.Ltmp547:
	.loc	2 64 65
	callq	*8(%rax)
.Ltmp548:
	.loc	2 64 57 is_stmt 0
	movups	.Lconst.84(%rip), %xmm0
	movaps	%xmm0, 272(%rsp)
	movq	%rax, 288(%rsp)
	movq	%rdx, 296(%rsp)
	movaps	272(%rsp), %xmm0
	movaps	288(%rsp), %xmm1
	jmp	.LBB10_19
.Ltmp549:
.LBB10_20:
	.loc	2 0 57
	movq	%rdx, 56(%rsp)
	leaq	864(%rsp), %rax
	.loc	2 67 21 is_stmt 1
	movq	(%rax), %rsi
	movq	8(%rax), %rdx
	leaq	224(%rsp), %rdi
.Ltmp550:
	callq	github_com_twitchyliquid64_subnet_vendor_github_com_songgao_water.NewTUN
	movq	232(%rsp), %rax
.Ltmp551:
	.loc	2 68 9
	testq	%rax, %rax
	je	.LBB10_22
.Ltmp552:
	.loc	2 67 21
	movq	240(%rsp), %rdi
.Ltmp553:
	.loc	2 69 57
	callq	*8(%rax)
.Ltmp554:
	.loc	2 69 49 is_stmt 0
	movups	.Lconst.87(%rip), %xmm0
	movaps	%xmm0, 304(%rsp)
	movq	%rax, 320(%rsp)
	movq	%rdx, 328(%rsp)
	movaps	304(%rsp), %xmm0
	movaps	320(%rsp), %xmm1
.Ltmp555:
.LBB10_19:
	.loc	2 0 49
	movups	%xmm1, 16(%rsp)
	movups	%xmm0, (%rsp)
	xorl	%edi, %edi
.Ltmp556:
	callq	runtime.concatstring2
.Ltmp557:
	movq	%rax, %rdi
	movq	%rdx, %rsi
	callq	errors.New
.Ltmp558:
.LBB10_7:
	movq	$0, (%rbx)
.Ltmp559:
.LBB10_8:
	movq	%rax, 8(%rbx)
	movq	%rdx, 16(%rbx)
.Ltmp560:
.LBB10_9:
	movq	%rbx, %rax
	addq	$792, %rsp
.Ltmp561:
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
.Ltmp562:
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
.Ltmp563:
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB10_11:
	.cfi_def_cfa_offset 848
.Ltmp564:
	.loc	4 18 44 is_stmt 1
	movups	.Lconst.312(%rip), %xmm0
	movaps	%xmm0, 336(%rsp)
	movq	%r13, 352(%rsp)
	movq	%r12, 360(%rsp)
	movaps	336(%rsp), %xmm0
	movaps	352(%rsp), %xmm1
	movups	%xmm1, 16(%rsp)
	movups	%xmm0, (%rsp)
	xorl	%edi, %edi
	callq	runtime.concatstring2
.Ltmp565:
	.loc	4 18 22 is_stmt 0
	movq	%rax, %rdi
	movq	%rdx, %rsi
	callq	errors.New
.Ltmp566:
	.loc	4 0 22
	leaq	64(%rsp), %rcx
	.loc	4 18 3
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 64(%rsp)
	movq	$0, 80(%rsp)
	movq	32(%rsp), %r14
.Ltmp567:
	.loc	4 0 3
	jmp	.LBB10_6
.Ltmp568:
.LBB10_13:
	xorl	%edx, %edx
	.loc	4 22 14 is_stmt 1
	cmpq	%r14, %rdx
	jl	.LBB10_15
.Ltmp569:
.LBB10_24:
	xorl	%edi, %edi
	callq	__go_runtime_error
.Ltmp570:
.LBB10_22:
	.loc	4 0 14 is_stmt 0
	movq	224(%rsp), %rdi
.Ltmp571:
	.loc	2 72 39 is_stmt 1
	movq	%rdi, 128(%rsp)
.Ltmp572:
	callq	github_com_twitchyliquid64_subnet_vendor_github_com_songgao_water.Interface.Name
.Ltmp573:
	movq	%rax, 48(%rsp)
	movq	%rdx, 40(%rsp)
	.loc	2 72 6 is_stmt 0
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%r14, 32(%rsp)
	movq	%rbp, %r14
	movq	%rax, %rbp
	movq	48(%rsp), %rax
	movq	%rax, 176(%rsp)
	movq	40(%rsp), %rax
	movq	%rax, 184(%rsp)
	leaq	176(%rsp), %rdx
	movl	$string..d, %edi
	movq	%rbp, %rsi
	callq	runtime.typedmemmove
	movq	$string..d, 160(%rsp)
	movq	%rbp, 168(%rsp)
	leaq	160(%rsp), %rax
	movq	%rax, 136(%rsp)
	movq	$1, 144(%rsp)
	movq	$1, 152(%rsp)
	movq	152(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	136(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.88, %edi
	movl	$17, %esi
	callq	log.Printf
	.loc	2 84 20 is_stmt 1
	movl	$type..chan.0.1command_line_arguments.IPPacket, %edi
	movl	$150, %esi
	callq	runtime.makechan
	movq	%rax, 48(%rsp)
	.loc	2 85 20
	movl	$type..chan.0.1command_line_arguments.IPPacket, %edi
	movl	$150, %esi
	callq	runtime.makechan
	movq	%rax, 40(%rsp)
	.loc	2 74 9
	movl	$command_line_arguments.Client..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbp
.Ltmp574:
	.loc	2 74 10 is_stmt 0
	movb	$0, 504(%rsp)
	leaq	880(%rsp), %rax
	movups	(%rax), %xmm0
	movups	%xmm0, 512(%rsp)
	movq	%r13, 528(%rsp)
	movq	%r12, 536(%rsp)
	movq	%r15, 544(%rsp)
	movq	%r14, 552(%rsp)
	xorps	%xmm0, %xmm0
	movups	%xmm0, 560(%rsp)
	movaps	96(%rsp), %xmm1
	movups	%xmm1, 576(%rsp)
	movq	112(%rsp), %rax
	movq	%rax, 592(%rsp)
	movq	208(%rsp), %rax
	movq	%rax, 616(%rsp)
	movaps	192(%rsp), %xmm1
	movups	%xmm1, 600(%rsp)
	leaq	944(%rsp), %rcx
	movq	16(%rcx), %rax
	movq	%rax, 640(%rsp)
	movups	(%rcx), %xmm1
	movups	%xmm1, 624(%rsp)
	movq	56(%rsp), %rax
	movq	%rax, 648(%rsp)
	movb	$0, 656(%rsp)
	movq	48(%rsp), %rax
	movq	%rax, 664(%rsp)
	movq	40(%rsp), %rax
	movq	%rax, 672(%rsp)
	movq	128(%rsp), %rax
	movq	%rax, 680(%rsp)
	movq	32(%rsp), %rax
	movq	%rax, 688(%rsp)
	movq	$0, 724(%rsp)
	movups	%xmm0, 768(%rsp)
	movups	%xmm0, 752(%rsp)
	movups	%xmm0, 736(%rsp)
	movq	$0, 784(%rsp)
	movups	%xmm0, 705(%rsp)
	movups	%xmm0, 696(%rsp)
	leaq	504(%rsp), %rdx
	.loc	2 74 9
	movl	$command_line_arguments.Client..d, %edi
	movq	%rbp, %rsi
	callq	runtime.typedmemmove
	.loc	2 89 17 is_stmt 1
	movq	%rbp, %rdi
	movq	%r13, %rsi
	movq	%r12, %rdx
	movq	%r15, %rcx
	movq	%r14, %r8
	callq	command_line_arguments.Client.init
.Ltmp575:
	.loc	2 89 2 is_stmt 0
	movq	%rbp, (%rbx)
	jmp	.LBB10_8
.Ltmp576:
.Lfunc_end10:
	.size	command_line_arguments.NewClient, .Lfunc_end10-command_line_arguments.NewClient
	.cfi_endproc
	.file	5 "<stdin>"

	.section	.text.command_line_arguments.SetDevIP,"ax",@progbits
	.globl	command_line_arguments.SetDevIP
	.p2align	4, 0x90
	.type	command_line_arguments.SetDevIP,@function
command_line_arguments.SetDevIP:
.Lfunc_begin11:
	.file	6 "./helpers_linux.go"
	.loc	6 26 0 is_stmt 1
	.cfi_startproc
	leaq	-312(%rsp), %r11
	cmpq	%fs:112, %r11
	ja	.LBB11_2
	movq	%r10, %rax
	movabsq	$312, %r10
	movabsq	$24, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB11_2:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$264, %rsp
	.cfi_def_cfa_offset 320
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movl	%ecx, 28(%rsp)
	movq	%rdx, %rbx
	movq	%rsi, %r14
	movq	%rdi, %r15
.Ltmp577:
	leaq	320(%rsp), %rdi
.Ltmp578:
	.loc	6 27 59 prologue_end
	callq	net.IP.String
	movq	%rax, 48(%rsp)
	movq	%rdx, 40(%rsp)
	.loc	6 27 81 is_stmt 0
	testq	%rbx, %rbx
	je	.LBB11_4
.Ltmp579:
	.loc	6 0 81
	movq	40(%rbx), %rax
	movq	%rax, 224(%rsp)
	movups	24(%rbx), %xmm0
	movaps	%xmm0, 208(%rsp)
	leaq	208(%rsp), %rdi
	.loc	6 27 87
	callq	net.IP.String
	movq	%rax, 32(%rsp)
	movq	%rdx, %r13
	.loc	6 27 15
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %r12
	movq	%r15, 112(%rsp)
	movq	%r14, 120(%rsp)
	leaq	112(%rsp), %rdx
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbp
	movq	48(%rsp), %rax
	movq	%rax, 96(%rsp)
	movq	40(%rsp), %rax
	movq	%rax, 104(%rsp)
	leaq	96(%rsp), %rdx
	movl	$string..d, %edi
	movq	%rbp, %rsi
	callq	runtime.typedmemmove
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
.Ltmp580:
	.loc	6 0 15
	movq	32(%rsp), %rax
	movq	%rax, 80(%rsp)
	movq	%r13, 88(%rsp)
	leaq	80(%rsp), %rdx
	.loc	6 27 15
	movl	$string..d, %edi
	movq	%rbx, %rsi
	callq	runtime.typedmemmove
	movq	$string..d, 160(%rsp)
	movq	%r12, 168(%rsp)
	movq	$string..d, 176(%rsp)
	movq	%rbp, 184(%rsp)
	movq	$string..d, 192(%rsp)
	movq	%rbx, 200(%rsp)
	leaq	160(%rsp), %rax
	movq	%rax, 56(%rsp)
	movq	$3, 64(%rsp)
	movq	$3, 72(%rsp)
	movq	72(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	56(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.153, %edi
	movl	$16, %esi
	callq	fmt.Sprintf
.Ltmp581:
	.loc	6 0 15
	leaq	240(%rsp), %rdi
	.loc	6 28 18 is_stmt 1
	movl	$.Lconst.149, %ecx
	movl	$1, %r8d
	movq	%rax, %rsi
	callq	strings.Split
.Ltmp582:
	.loc	6 0 18 is_stmt 0
	movq	256(%rsp), %rax
	movq	%rax, 144(%rsp)
	movups	240(%rsp), %xmm0
	movaps	%xmm0, 128(%rsp)
	.loc	6 29 9 is_stmt 1
	movq	144(%rsp), %rax
	movq	%rax, 16(%rsp)
	movaps	128(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movzbl	28(%rsp), %edx
	movl	$.Lconst.155, %edi
	movl	$8, %esi
	callq	command_line_arguments.commandExec
	.loc	6 29 2 is_stmt 0
	addq	$264, %rsp
.Ltmp583:
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
.Ltmp584:
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB11_4:
	.cfi_def_cfa_offset 320
.Ltmp585:
	.loc	6 27 81 is_stmt 1
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp586:
.Lfunc_end11:
	.size	command_line_arguments.SetDevIP, .Lfunc_end11-command_line_arguments.SetDevIP
	.cfi_endproc

	.section	.text.command_line_arguments.GetNetGateway,"ax",@progbits
	.globl	command_line_arguments.GetNetGateway
	.p2align	4, 0x90
	.type	command_line_arguments.GetNetGateway,@function
command_line_arguments.GetNetGateway:
.Lfunc_begin12:
	.loc	6 55 0
	.cfi_startproc
	.cfi_personality 3, __gccgo_personality_v0
	.cfi_lsda 3, .Lexception3
	leaq	-680(%rsp), %r11
	cmpq	%fs:112, %r11
	ja	.LBB12_2
	movq	%r10, %rax
	movabsq	$680, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB12_2:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$632, %rsp
	.cfi_def_cfa_offset 688
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rdi, 112(%rsp)
	movb	$0, 55(%rsp)
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 96(%rsp)
	movaps	%xmm0, 208(%rsp)
	movq	$0, 224(%rsp)
	xorl	%eax, %eax
.Ltmp662:
	.loc	6 56 18 prologue_end
	movq	%rax, 56(%rsp)
.Ltmp587:
.Ltmp663:
	.loc	6 0 18 is_stmt 0
	leaq	352(%rsp), %rdi
	.loc	6 56 18
	movl	$.Lconst.166, %esi
	movl	$15, %edx
	callq	os.Open
.Ltmp588:
	movq	360(%rsp), %rbx
.Ltmp664:
	movq	368(%rsp), %rax
.Ltmp665:
	.loc	6 57 9 is_stmt 1
	movq	%rax, 56(%rsp)
	testq	%rbx, %rbx
	je	.LBB12_12
.Ltmp666:
	.loc	6 58 3
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 96(%rsp)
	movb	$1, %r13b
.Ltmp667:
.LBB12_10:
	.loc	6 0 3 is_stmt 0
	xorl	%r14d, %r14d
	xorl	%r12d, %r12d
.Ltmp668:
	leaq	55(%rsp), %rbp
	jmp	.LBB12_75
.Ltmp669:
.LBB12_12:
	movq	352(%rsp), %rbx
.Ltmp670:
	.loc	6 61 2 is_stmt 1
	movq	%rbx, 200(%rsp)
.Ltmp589:
	leaq	55(%rsp), %rdi
	leaq	200(%rsp), %rdx
	movl	$command_line_arguments.command_line_arguments..thunk7, %esi
	callq	runtime.deferproc
.Ltmp590:
.Ltmp671:
.Ltmp591:
	.loc	6 62 14
	movl	$pimt..interface.4Read.0func.8.6.7uint8.9.8int.3error.9.5..os.File, %edi
	movq	%rbx, %rsi
	callq	bufio.NewReader
	movq	%rax, 144(%rsp)
.Ltmp592:
.Ltmp672:
	.p2align	4, 0x90
.LBB12_15:
.Ltmp593:
	.loc	6 70 28
	leaq	448(%rsp), %rdi
	movq	144(%rsp), %rsi
	callq	bufio.Reader.ReadLine
.Ltmp594:
.Ltmp673:
	movb	472(%rsp), %cl
.Ltmp674:
	movq	480(%rsp), %rbx
.Ltmp675:
	movq	488(%rsp), %rax
.Ltmp676:
	.loc	6 0 28 is_stmt 0
	movups	448(%rsp), %xmm0
	movaps	%xmm0, 304(%rsp)
	movq	464(%rsp), %rdx
	movq	%rdx, 320(%rsp)
	.loc	6 72 10 is_stmt 1
	testq	%rbx, %rbx
	jne	.LBB12_17
.Ltmp677:
	.loc	6 75 3
	testb	$1, %cl
	jne	.LBB12_19
.Ltmp678:
.Ltmp597:
	.loc	6 78 16
	movq	320(%rsp), %rax
.Ltmp679:
	movq	%rax, 16(%rsp)
	movaps	304(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	callq	bytes.NewBuffer
.Ltmp680:
.Ltmp598:
.Ltmp599:
	.loc	6 79 20
	movl	$pimt..interface.4Read.0func.8.6.7uint8.9.8int.3error.9.5..bytes.Buffer, %edi
	movq	%rax, %rsi
	callq	bufio.NewScanner
.Ltmp681:
.Ltmp600:
	.loc	6 0 20 is_stmt 0
	movq	%rax, %rbp
.Ltmp601:
.Ltmp682:
	.loc	6 80 10 is_stmt 1
	movl	$bufio.ScanWords..f, %esi
	movq	%rax, %rdi
	callq	bufio.Scanner.Split
.Ltmp602:
.Ltmp683:
	.loc	6 0 10 is_stmt 0
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 608(%rsp)
	movaps	%xmm0, 592(%rsp)
	movaps	%xmm0, 576(%rsp)
	movaps	%xmm0, 560(%rsp)
	movaps	%xmm0, 544(%rsp)
	movaps	%xmm0, 528(%rsp)
	movaps	%xmm0, 512(%rsp)
	movaps	%xmm0, 496(%rsp)
.Ltmp684:
	leaq	496(%rsp), %r12
	xorl	%r14d, %r14d
	movl	$8, %ebx
.Ltmp685:
	jmp	.LBB12_25
.Ltmp686:
	.p2align	4, 0x90
.LBB12_42:
	.loc	6 84 11 is_stmt 1
	movq	72(%rsp), %r12
.Ltmp687:
	.loc	6 0 11 is_stmt 0
	movq	%r14, 160(%rsp)
	.loc	6 84 11
	movq	80(%rsp), %r14
.Ltmp688:
	movq	88(%rsp), %rbx
.Ltmp689:
	.loc	6 0 11
	movq	64(%rsp), %rax
	movq	%rax, 136(%rsp)
	movq	%rbp, 128(%rsp)
	movq	%r15, 120(%rsp)
	movq	%r13, %rbp
.Ltmp690:
.LBB12_25:
.Ltmp603:
	movq	%rbp, %r13
	.loc	6 83 14 is_stmt 1
	movq	%rbp, %rdi
	callq	bufio.Scanner.Scan
.Ltmp604:
.Ltmp691:
	testb	$1, %al
	je	.LBB12_43
.Ltmp692:
.Ltmp605:
	.loc	6 84 35
	movq	%r13, %rdi
	callq	bufio.Scanner.Text
.Ltmp606:
.Ltmp693:
	.loc	6 0 35 is_stmt 0
	movq	%rax, 184(%rsp)
	movq	%rdx, 192(%rsp)
	movq	%r12, 72(%rsp)
	movq	%r14, 80(%rsp)
	movq	%rbx, 88(%rsp)
	.loc	6 84 13
	leaq	1(%r14), %rbp
.Ltmp694:
	cmpq	%rbx, %rbp
	jbe	.LBB12_38
.Ltmp695:
.Ltmp609:
	movq	88(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	72(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$string..d, %esi
	leaq	328(%rsp), %rdi
	movq	%rbp, %rdx
	callq	runtime.growslice
.Ltmp610:
.Ltmp696:
	.loc	6 0 13
	movq	328(%rsp), %r12
	movq	336(%rsp), %rax
	movq	344(%rsp), %rbx
	movq	136(%rsp), %rcx
	movq	%rcx, 64(%rsp)
	movq	128(%rsp), %rbp
	movq	120(%rsp), %r15
	jmp	.LBB12_31
	.p2align	4, 0x90
.LBB12_38:
.Ltmp697:
	.loc	6 84 13
	cmpq	%rbx, %rbp
	jg	.LBB12_40
.Ltmp698:
	.loc	6 0 13
	movq	%rbp, %rax
	orq	%rbx, %rax
	movq	%r12, 64(%rsp)
	movq	%rbx, %r15
	movq	%rbp, %rax
	jns	.LBB12_31
.LBB12_40:
.Ltmp607:
	.loc	6 84 13
	movl	$3, %edi
	callq	__go_runtime_error
.Ltmp608:
	movq	136(%rsp), %r12
	movq	%r12, 64(%rsp)
	movq	128(%rsp), %rcx
	movq	%rcx, %rbp
	movq	120(%rsp), %rbx
	movq	%rbx, %r15
	movq	%rcx, %rax
.LBB12_31:
	movq	%r12, 72(%rsp)
	movq	%rax, 80(%rsp)
	movq	%rbx, 88(%rsp)
	testq	%r14, %r14
	js	.LBB12_33
	.loc	6 0 13
	cmpq	%rax, %r14
	jl	.LBB12_34
.LBB12_33:
.Ltmp611:
	.loc	6 84 13
	xorl	%edi, %edi
	callq	__go_runtime_error
.Ltmp612:
	movq	160(%rsp), %r14
.LBB12_34:
	movq	%r14, %rax
	shlq	$4, %rax
	addq	%rax, %r12
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB12_35
.Ltmp613:
	movl	$string..d, %edi
	movq	%r12, %rsi
	leaq	184(%rsp), %rdx
	callq	runtime.typedmemmove
.Ltmp614:
	jmp	.LBB12_42
	.p2align	4, 0x90
.LBB12_35:
	testq	%r12, %r12
	jne	.LBB12_37
.Ltmp615:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp616:
	movq	152(%rsp), %r12
.LBB12_37:
	movups	184(%rsp), %xmm0
	movups	%xmm0, (%r12)
	movq	%r12, 152(%rsp)
	jmp	.LBB12_42
	.p2align	4, 0x90
.LBB12_43:
.Ltmp699:
	.loc	6 87 18 is_stmt 1
	testq	%r14, %r14
	jle	.LBB12_44
.Ltmp700:
	.loc	6 0 18 is_stmt 0
	movups	(%r12), %xmm0
	movaps	%xmm0, 288(%rsp)
	.loc	6 88 17 is_stmt 1
	cmpq	$1, %r14
	je	.LBB12_47
.Ltmp701:
	.loc	6 0 17 is_stmt 0
	movq	16(%r12), %rax
.Ltmp702:
	movq	24(%r12), %r13
.Ltmp703:
	.loc	6 89 15 is_stmt 1
	cmpq	$2, %r14
	jg	.LBB12_53
.Ltmp704:
	.loc	6 0 15 is_stmt 0
	movq	%rax, %r14
	jmp	.LBB12_51
	.p2align	4, 0x90
.LBB12_44:
.Ltmp705:
.Ltmp618:
	.loc	6 87 18 is_stmt 1
	xorl	%edi, %edi
	callq	__go_runtime_error
.Ltmp619:
.Ltmp706:
	.loc	6 0 18 is_stmt 0
	movups	(%r12), %xmm0
	movaps	%xmm0, 288(%rsp)
.LBB12_47:
.Ltmp620:
	.loc	6 88 17 is_stmt 1
	xorl	%edi, %edi
	callq	__go_runtime_error
.Ltmp621:
	.loc	6 0 17 is_stmt 0
	movq	16(%r12), %r14
	movq	24(%r12), %r13
.LBB12_51:
.Ltmp622:
	.loc	6 89 15 is_stmt 1
	xorl	%edi, %edi
	callq	__go_runtime_error
.Ltmp623:
	.loc	6 0 15 is_stmt 0
	movq	32(%r12), %rax
	movq	%rax, 64(%rsp)
	movq	40(%r12), %r15
.LBB12_54:
.Ltmp624:
	.loc	6 90 17 is_stmt 1
	xorl	%edi, %edi
	callq	__go_runtime_error
.Ltmp625:
.LBB12_55:
	.loc	6 0 17 is_stmt 0
	movq	112(%r12), %rbx
.Ltmp707:
	movq	120(%r12), %rbp
.Ltmp708:
	movabsq	$3472328296227680304, %rax
	movq	%rax, 176(%rsp)
.Ltmp626:
	.loc	6 92 24 is_stmt 1
	xorl	%esi, %esi
	leaq	424(%rsp), %rdi
	movq	%r14, %rdx
	movq	%r13, %rcx
	callq	runtime.stringtoslicebyte
.Ltmp627:
.Ltmp709:
	.loc	6 92 38 is_stmt 0
	leaq	176(%rsp), %rax
	movq	%rax, 240(%rsp)
	movq	$8, 248(%rsp)
	movq	$8, 256(%rsp)
.Ltmp628:
	.loc	6 92 12
	movq	256(%rsp), %rax
	movq	%rax, 40(%rsp)
	movups	240(%rsp), %xmm0
	movups	%xmm0, 24(%rsp)
	movq	440(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	424(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	callq	bytes.Equal
.Ltmp629:
.Ltmp710:
	.loc	6 92 52
	testb	$1, %al
	je	.LBB12_60
.Ltmp711:
	.loc	6 0 52
	movabsq	$3472328296227680304, %rax
	movq	%rax, 168(%rsp)
.Ltmp630:
	.loc	6 93 22 is_stmt 1
	xorl	%esi, %esi
	leaq	400(%rsp), %rdi
	movq	%rbx, %rdx
	movq	%rbp, %rcx
	callq	runtime.stringtoslicebyte
.Ltmp631:
.Ltmp712:
	.loc	6 93 36 is_stmt 0
	leaq	168(%rsp), %rax
	movq	%rax, 264(%rsp)
	movq	$8, 272(%rsp)
	movq	$8, 280(%rsp)
.Ltmp632:
	.loc	6 93 10
	movq	280(%rsp), %rax
	movq	%rax, 40(%rsp)
	movups	264(%rsp), %xmm0
	movups	%xmm0, 24(%rsp)
	movq	416(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	400(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	callq	bytes.Equal
.Ltmp633:
.Ltmp713:
.LBB12_60:
	.loc	6 92 3 is_stmt 1
	testb	$1, %al
	je	.LBB12_15
	jmp	.LBB12_61
.Ltmp714:
.LBB12_53:
	.loc	6 0 3 is_stmt 0
	movq	32(%r12), %rcx
.Ltmp715:
	movq	%rcx, 64(%rsp)
	movq	40(%r12), %r15
.Ltmp716:
	.loc	6 90 17 is_stmt 1
	cmpq	$7, %r14
	movq	%rax, %r14
	jle	.LBB12_54
	jmp	.LBB12_55
.Ltmp717:
.LBB12_17:
	.loc	6 73 4
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 96(%rsp)
	movb	$1, %r13b
.Ltmp718:
	.loc	6 0 4 is_stmt 0
	xorl	%r14d, %r14d
	movq	%rax, 56(%rsp)
	xorl	%r12d, %r12d
.Ltmp719:
	leaq	55(%rsp), %rbp
	jmp	.LBB12_75
.Ltmp720:
.LBB12_19:
.Ltmp595:
	.loc	6 76 26 is_stmt 1
	movl	$.Lconst.170, %edi
	movl	$26, %esi
	callq	errors.New
.Ltmp721:
.Ltmp596:
	.loc	6 0 26 is_stmt 0
	movq	%rax, %rbx
.Ltmp722:
	.loc	6 76 4
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 96(%rsp)
	movb	$1, %r13b
	xorl	%r14d, %r14d
.Ltmp723:
	.loc	6 0 4
	movq	%rdx, 56(%rsp)
	xorl	%r12d, %r12d
.Ltmp724:
	leaq	55(%rsp), %rbp
	jmp	.LBB12_75
.Ltmp725:
.LBB12_61:
.Ltmp635:
	.loc	6 94 18 is_stmt 1
	movl	$6, %edx
	movl	$8, %ecx
	movq	64(%rsp), %rbx
	movq	%rbx, %rdi
	movq	%r15, %rbp
.Ltmp726:
	movq	%r15, %rsi
	callq	__go_string_slice
.Ltmp636:
.Ltmp637:
	.loc	6 94 9 is_stmt 0
	movl	$command_line_arguments.GetNetGateway..func1..f, %r10d
	movq	%rax, %rdi
	movq	%rdx, %rsi
	callq	command_line_arguments.GetNetGateway..func1
.Ltmp638:
	.loc	6 0 9
	movl	%eax, %r14d
.Ltmp639:
	.loc	6 95 18 is_stmt 1
	movl	$4, %edx
	movl	$6, %ecx
	movq	%rbx, %rdi
	movq	%rbp, %rsi
	callq	__go_string_slice
.Ltmp640:
.Ltmp641:
	.loc	6 95 9 is_stmt 0
	movl	$command_line_arguments.GetNetGateway..func1..f, %r10d
	movq	%rax, %rdi
	movq	%rdx, %rsi
	callq	command_line_arguments.GetNetGateway..func1
.Ltmp642:
	.loc	6 0 9
	movl	%eax, %r15d
.Ltmp643:
	.loc	6 96 18 is_stmt 1
	movl	$2, %edx
	movl	$4, %ecx
	movq	%rbx, %rdi
	movq	%rbp, %rsi
	callq	__go_string_slice
.Ltmp644:
.Ltmp645:
	.loc	6 96 9 is_stmt 0
	movl	$command_line_arguments.GetNetGateway..func1..f, %r10d
	movq	%rax, %rdi
	movq	%rdx, %rsi
	callq	command_line_arguments.GetNetGateway..func1
.Ltmp646:
	.loc	6 0 9
	movl	%eax, %r12d
.Ltmp647:
	.loc	6 97 18 is_stmt 1
	xorl	%edx, %edx
	movl	$2, %ecx
	movq	%rbx, %rdi
	movq	%rbp, %rsi
	callq	__go_string_slice
.Ltmp648:
.Ltmp649:
	.loc	6 97 9 is_stmt 0
	movl	$command_line_arguments.GetNetGateway..func1..f, %r10d
	movq	%rax, %rdi
	movq	%rdx, %rsi
	callq	command_line_arguments.GetNetGateway..func1
.Ltmp650:
.Ltmp651:
.Ltmp727:
	.loc	6 99 14 is_stmt 1
	movzbl	%r14b, %esi
.Ltmp728:
	movzbl	%r15b, %edx
.Ltmp729:
	movzbl	%r12b, %ecx
.Ltmp730:
	movzbl	%al, %r8d
	leaq	376(%rsp), %rdi
	callq	net.IPv4
.Ltmp652:
	.loc	6 0 14 is_stmt 0
	movq	392(%rsp), %rax
	movq	%rax, 224(%rsp)
	movups	376(%rsp), %xmm0
	movaps	%xmm0, 208(%rsp)
.Ltmp653:
	leaq	208(%rsp), %rdi
	.loc	6 101 13 is_stmt 1
	callq	net.IP.String
.Ltmp654:
.Ltmp731:
	.loc	6 0 13 is_stmt 0
	movq	%rax, %r14
	movq	%rdx, %r12
.Ltmp732:
	movaps	288(%rsp), %xmm0
	movaps	%xmm0, 96(%rsp)
	movb	$1, %r13b
	xorl	%ebx, %ebx
.Ltmp733:
	xorl	%eax, %eax
	movq	%rax, 56(%rsp)
.Ltmp734:
	leaq	55(%rsp), %rbp
	jmp	.LBB12_75
.Ltmp735:
.LBB12_7:
.Ltmp655:
	jmp	.LBB12_8
.LBB12_6:
.Ltmp634:
	jmp	.LBB12_8
.LBB12_5:
.Ltmp617:
.LBB12_8:
.Ltmp656:
.Ltmp736:
	leaq	55(%rsp), %rdi
	.loc	6 105 1 is_stmt 1
	callq	runtime.checkdefer
.Ltmp657:
.Ltmp737:
	.loc	6 0 1 is_stmt 0
	movb	$1, %r13b
	xorl	%ebx, %ebx
	jmp	.LBB12_10
.Ltmp738:
.LBB12_72:
.Ltmp658:
	movq	%rax, %r15
	xorl	%ebx, %ebx
	xorl	%r14d, %r14d
	xorl	%r12d, %r12d
	xorl	%r13d, %r13d
.Ltmp739:
	leaq	55(%rsp), %rbp
	jmp	.LBB12_75
.Ltmp740:
.LBB12_74:
.Ltmp661:
	.loc	6 105 1
	movq	%rbp, %rdi
	callq	runtime.checkdefer
.Ltmp741:
	.p2align	4, 0x90
.LBB12_75:
.Ltmp659:
	movq	%rbp, %rdi
	callq	runtime.deferreturn
.Ltmp660:
.Ltmp742:
	testb	$1, 55(%rsp)
	jne	.LBB12_78
.Ltmp743:
	.loc	6 0 1
	testb	%r13b, %r13b
	je	.LBB12_79
.Ltmp744:
.LBB12_78:
	movq	112(%rsp), %rax
	movq	%r14, (%rax)
	movq	%r12, 8(%rax)
	movaps	96(%rsp), %xmm0
	movups	%xmm0, 16(%rax)
	movq	%rbx, 32(%rax)
	movq	56(%rsp), %rcx
	movq	%rcx, 40(%rax)
	addq	$632, %rsp
.Ltmp745:
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
.Ltmp746:
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB12_79:
	.cfi_def_cfa_offset 688
.Ltmp747:
	movq	%r15, %rdi
	callq	_Unwind_Resume
.Lfunc_end12:
	.size	command_line_arguments.GetNetGateway, .Lfunc_end12-command_line_arguments.GetNetGateway
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table12:
.Lexception3:
	.byte	255
	.byte	3
	.uleb128 .Lttbase3-.Lttbaseref3
.Lttbaseref3:
	.byte	1
	.uleb128 .Lcst_end3-.Lcst_begin3
.Lcst_begin3:
	.uleb128 .Lfunc_begin12-.Lfunc_begin12
	.uleb128 .Ltmp587-.Lfunc_begin12
	.byte	0
	.byte	0
	.uleb128 .Ltmp587-.Lfunc_begin12
	.uleb128 .Ltmp592-.Ltmp587
	.uleb128 .Ltmp655-.Lfunc_begin12
	.byte	1
	.uleb128 .Ltmp593-.Lfunc_begin12
	.uleb128 .Ltmp602-.Ltmp593
	.uleb128 .Ltmp634-.Lfunc_begin12
	.byte	1
	.uleb128 .Ltmp603-.Lfunc_begin12
	.uleb128 .Ltmp616-.Ltmp603
	.uleb128 .Ltmp617-.Lfunc_begin12
	.byte	1
	.uleb128 .Ltmp618-.Lfunc_begin12
	.uleb128 .Ltmp633-.Ltmp618
	.uleb128 .Ltmp634-.Lfunc_begin12
	.byte	1
	.uleb128 .Ltmp595-.Lfunc_begin12
	.uleb128 .Ltmp654-.Ltmp595
	.uleb128 .Ltmp655-.Lfunc_begin12
	.byte	1
	.uleb128 .Ltmp656-.Lfunc_begin12
	.uleb128 .Ltmp657-.Ltmp656
	.uleb128 .Ltmp658-.Lfunc_begin12
	.byte	0
	.uleb128 .Ltmp657-.Lfunc_begin12
	.uleb128 .Ltmp659-.Ltmp657
	.byte	0
	.byte	0
	.uleb128 .Ltmp659-.Lfunc_begin12
	.uleb128 .Ltmp660-.Ltmp659
	.uleb128 .Ltmp661-.Lfunc_begin12
	.byte	1
	.uleb128 .Ltmp660-.Lfunc_begin12
	.uleb128 .Lfunc_end12-.Ltmp660
	.byte	0
	.byte	0
.Lcst_end3:
	.byte	1
	.byte	0
	.p2align	2
	.long	0
.Lttbase3:
	.p2align	2

	.section	.text.command_line_arguments.AddRoute,"ax",@progbits
	.globl	command_line_arguments.AddRoute
	.p2align	4, 0x90
	.type	command_line_arguments.AddRoute,@function
command_line_arguments.AddRoute:
.Lfunc_begin13:
	.loc	6 40 0 is_stmt 1
	.cfi_startproc
	leaq	-264(%rsp), %r11
	cmpq	%fs:112, %r11
	ja	.LBB13_2
	movq	%r10, %rax
	movabsq	$264, %r10
	movabsq	$48, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB13_2:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$216, %rsp
	.cfi_def_cfa_offset 272
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movl	%edx, 28(%rsp)
	movq	%rsi, 32(%rsp)
	movq	%rdi, %r12
.Ltmp748:
	leaq	272(%rsp), %rdi
.Ltmp749:
	.loc	6 41 50 prologue_end
	callq	net.IP.String
	movq	%rax, %rbp
	movq	%rdx, %rbx
	leaq	296(%rsp), %rdi
	.loc	6 41 68 is_stmt 0
	callq	net.IP.String
	movq	%rax, %r14
	movq	%rdx, %r15
	.loc	6 41 15
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %r13
	movq	%rbp, 96(%rsp)
	movq	%rbx, 104(%rsp)
	leaq	96(%rsp), %rdx
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
	movq	%r14, 80(%rsp)
	movq	%r15, 88(%rsp)
	leaq	80(%rsp), %rdx
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbp
	movq	%r12, 64(%rsp)
	movq	32(%rsp), %rax
	movq	%rax, 72(%rsp)
	leaq	64(%rsp), %rdx
	movl	$string..d, %edi
	movq	%rbp, %rsi
	callq	runtime.typedmemmove
	movq	$string..d, 144(%rsp)
	movq	%r13, 152(%rsp)
	movq	$string..d, 160(%rsp)
	movq	%rbx, 168(%rsp)
	movq	$string..d, 176(%rsp)
	movq	%rbp, 184(%rsp)
	leaq	144(%rsp), %rax
	movq	%rax, 40(%rsp)
	movq	$3, 48(%rsp)
	movq	$3, 56(%rsp)
	movq	56(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	40(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.161, %edi
	movl	$19, %esi
	callq	fmt.Sprintf
.Ltmp750:
	.loc	6 0 15
	leaq	192(%rsp), %rdi
	.loc	6 42 18 is_stmt 1
	movl	$.Lconst.149, %ecx
	movl	$1, %r8d
	movq	%rax, %rsi
	callq	strings.Split
.Ltmp751:
	.loc	6 0 18 is_stmt 0
	movq	208(%rsp), %rax
	movq	%rax, 128(%rsp)
	movups	192(%rsp), %xmm0
	movaps	%xmm0, 112(%rsp)
	.loc	6 43 9 is_stmt 1
	movq	128(%rsp), %rax
	movq	%rax, 16(%rsp)
	movaps	112(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.159, %edi
	movl	$5, %esi
	movl	28(%rsp), %edx
.Ltmp752:
	callq	command_line_arguments.commandExec
.Ltmp753:
	.loc	6 43 2 is_stmt 0
	addq	$216, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
.Ltmp754:
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp755:
.Lfunc_end13:
	.size	command_line_arguments.AddRoute, .Lfunc_end13-command_line_arguments.AddRoute
	.cfi_endproc

	.section	.text.command_line_arguments.SetDefaultGateway,"ax",@progbits
	.globl	command_line_arguments.SetDefaultGateway
	.p2align	4, 0x90
	.type	command_line_arguments.SetDefaultGateway,@function
command_line_arguments.SetDefaultGateway:
.Lfunc_begin14:
	.loc	6 33 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB14_2
	movq	%r10, %rax
	movabsq	$216, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB14_2:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$168, %rsp
	.cfi_def_cfa_offset 224
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movl	%r8d, %r14d
	movq	%rcx, %r15
	movq	%rdx, %r12
	movq	%rsi, %r13
	movq	%rdi, %rbp
.Ltmp756:
	.loc	6 34 15 prologue_end
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
	movq	%rbp, 64(%rsp)
	movq	%r13, 72(%rsp)
	leaq	64(%rsp), %rdx
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbp
.Ltmp757:
	.loc	6 0 15 is_stmt 0
	movq	%r12, 48(%rsp)
	movq	%r15, 56(%rsp)
	leaq	48(%rsp), %rdx
	.loc	6 34 15
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movq	$string..d, 112(%rsp)
	movq	%rbx, 120(%rsp)
	movq	$string..d, 128(%rsp)
	movq	%rbp, 136(%rsp)
	leaq	112(%rsp), %rax
	movq	%rax, 24(%rsp)
	movq	$2, 32(%rsp)
	movq	$2, 40(%rsp)
	movq	40(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	24(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.157, %edi
	movl	$24, %esi
	callq	fmt.Sprintf
.Ltmp758:
	.loc	6 0 15
	leaq	144(%rsp), %rdi
	.loc	6 35 18 is_stmt 1
	movl	$.Lconst.149, %ecx
	movl	$1, %r8d
	movq	%rax, %rsi
	callq	strings.Split
.Ltmp759:
	.loc	6 0 18 is_stmt 0
	movq	160(%rsp), %rax
	movq	%rax, 96(%rsp)
	movups	144(%rsp), %xmm0
	movaps	%xmm0, 80(%rsp)
	.loc	6 36 9 is_stmt 1
	movq	96(%rsp), %rax
	movq	%rax, 16(%rsp)
	movaps	80(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.159, %edi
	movl	$5, %esi
	movl	%r14d, %edx
.Ltmp760:
	callq	command_line_arguments.commandExec
.Ltmp761:
	.loc	6 36 2 is_stmt 0
	addq	$168, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
.Ltmp762:
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp763:
.Lfunc_end14:
	.size	command_line_arguments.SetDefaultGateway, .Lfunc_end14-command_line_arguments.SetDefaultGateway
	.cfi_endproc

	.section	.text.command_line_arguments.SetInterfaceStatus,"ax",@progbits
	.globl	command_line_arguments.SetInterfaceStatus
	.p2align	4, 0x90
	.type	command_line_arguments.SetInterfaceStatus,@function
command_line_arguments.SetInterfaceStatus:
.Lfunc_begin15:
	.loc	6 15 0 is_stmt 1
	.cfi_startproc
	leaq	-264(%rsp), %r11
	cmpq	%fs:112, %r11
	ja	.LBB15_2
	movq	%r10, %rax
	movabsq	$264, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB15_2:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	subq	$224, %rsp
	.cfi_def_cfa_offset 272
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movl	%ecx, %r14d
.Ltmp764:
	movq	%rsi, %r15
	movq	%rdi, %rbp
	movups	.Lconst.144(%rip), %xmm0
	movaps	%xmm0, 48(%rsp)
.Ltmp765:
	.loc	6 17 2 prologue_end
	testb	$1, %dl
	je	.LBB15_4
.Ltmp766:
	.loc	6 18 16
	movups	.Lconst.146(%rip), %xmm0
	movaps	%xmm0, 48(%rsp)
.Ltmp767:
.LBB15_4:
	.loc	6 20 15
	movl	$string..d, %edi
	callq	runtime.newobject
.Ltmp768:
	movq	%rax, %r12
	movq	%rbp, 64(%rsp)
	movq	%r15, 72(%rsp)
	leaq	64(%rsp), %rdx
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbp
.Ltmp769:
	.loc	6 0 15 is_stmt 0
	movaps	48(%rsp), %xmm0
	movaps	%xmm0, 176(%rsp)
	leaq	176(%rsp), %rdx
	.loc	6 20 15
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movl	$int..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
	movq	$1500, (%rax)
	movl	$int..d, %edi
	callq	runtime.newobject
	movq	$300, (%rax)
	movq	$string..d, 112(%rsp)
	movq	%r12, 120(%rsp)
	movq	$string..d, 128(%rsp)
	movq	%rbp, 136(%rsp)
	movq	$int..d, 144(%rsp)
	movq	%rbx, 152(%rsp)
	movq	$int..d, 160(%rsp)
	movq	%rax, 168(%rsp)
	leaq	112(%rsp), %rax
	movq	%rax, 24(%rsp)
	movq	$4, 32(%rsp)
	movq	$4, 40(%rsp)
	movq	40(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	24(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.147, %edi
	movl	$33, %esi
	callq	fmt.Sprintf
.Ltmp770:
	.loc	6 0 15
	leaq	200(%rsp), %rdi
	.loc	6 21 18 is_stmt 1
	movl	$.Lconst.149, %ecx
	movl	$1, %r8d
	movq	%rax, %rsi
	callq	strings.Split
.Ltmp771:
	.loc	6 0 18 is_stmt 0
	movq	216(%rsp), %rax
	movq	%rax, 96(%rsp)
	movups	200(%rsp), %xmm0
	movaps	%xmm0, 80(%rsp)
	.loc	6 22 9 is_stmt 1
	movq	96(%rsp), %rax
	movq	%rax, 16(%rsp)
	movaps	80(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movzbl	%r14b, %edx
	movl	$.Lconst.151, %edi
	movl	$2, %esi
	callq	command_line_arguments.commandExec
	.loc	6 22 2 is_stmt 0
	addq	$224, %rsp
	.cfi_def_cfa_offset 48
	popq	%rbx
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r14
.Ltmp772:
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp773:
.Lfunc_end15:
	.size	command_line_arguments.SetInterfaceStatus, .Lfunc_end15-command_line_arguments.SetInterfaceStatus
	.cfi_endproc

	.section	.text.command_line_arguments.command_line_arguments..thunk0,"ax",@progbits
	.p2align	4, 0x90
	.type	command_line_arguments.command_line_arguments..thunk0,@function
command_line_arguments.command_line_arguments..thunk0:
.Lfunc_begin16:
	.loc	2 156 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB16_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB16_2:
	pushq	%rax
	.cfi_def_cfa_offset 16
.Ltmp774:
	.loc	2 156 2 prologue_end
	movq	(%rdi), %rdi
.Ltmp775:
	callq	command_line_arguments.Client.netSendRoutine
	popq	%rax
	.cfi_def_cfa_offset 8
	retq
.Ltmp776:
.Lfunc_end16:
	.size	command_line_arguments.command_line_arguments..thunk0, .Lfunc_end16-command_line_arguments.command_line_arguments..thunk0
	.cfi_endproc

	.section	.text.command_line_arguments.command_line_arguments..thunk1,"ax",@progbits
	.p2align	4, 0x90
	.type	command_line_arguments.command_line_arguments..thunk1,@function
command_line_arguments.command_line_arguments..thunk1:
.Lfunc_begin17:
	.loc	2 157 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB17_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB17_2:
	pushq	%rax
	.cfi_def_cfa_offset 16
.Ltmp777:
	.loc	2 157 2 prologue_end
	movq	(%rdi), %rdi
.Ltmp778:
	callq	command_line_arguments.Client.netRecvRoutine
	popq	%rax
	.cfi_def_cfa_offset 8
	retq
.Ltmp779:
.Lfunc_end17:
	.size	command_line_arguments.command_line_arguments..thunk1, .Lfunc_end17-command_line_arguments.command_line_arguments..thunk1
	.cfi_endproc

	.section	.text.command_line_arguments.command_line_arguments..thunk2,"ax",@progbits
	.p2align	4, 0x90
	.type	command_line_arguments.command_line_arguments..thunk2,@function
command_line_arguments.command_line_arguments..thunk2:
.Lfunc_begin18:
	.loc	2 158 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB18_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB18_2:
	pushq	%rax
	.cfi_def_cfa_offset 16
.Ltmp780:
	.loc	2 158 2 prologue_end
	movq	(%rdi), %rax
	movq	8(%rdi), %rsi
	movq	16(%rdi), %rdx
	movq	24(%rdi), %rcx
	movq	%rax, %rdi
.Ltmp781:
	callq	command_line_arguments.devReadRoutine
	popq	%rax
	.cfi_def_cfa_offset 8
	retq
.Ltmp782:
.Lfunc_end18:
	.size	command_line_arguments.command_line_arguments..thunk2, .Lfunc_end18-command_line_arguments.command_line_arguments..thunk2
	.cfi_endproc

	.section	.text.command_line_arguments.command_line_arguments..thunk3,"ax",@progbits
	.p2align	4, 0x90
	.type	command_line_arguments.command_line_arguments..thunk3,@function
command_line_arguments.command_line_arguments..thunk3:
.Lfunc_begin19:
	.loc	2 159 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB19_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB19_2:
	pushq	%rax
	.cfi_def_cfa_offset 16
.Ltmp783:
	.loc	2 159 2 prologue_end
	movq	(%rdi), %rax
	movq	8(%rdi), %rsi
	movq	16(%rdi), %rdx
	movq	24(%rdi), %rcx
	movq	%rax, %rdi
.Ltmp784:
	callq	command_line_arguments.devWriteRoutine
	popq	%rax
	.cfi_def_cfa_offset 8
	retq
.Ltmp785:
.Lfunc_end19:
	.size	command_line_arguments.command_line_arguments..thunk3, .Lfunc_end19-command_line_arguments.command_line_arguments..thunk3
	.cfi_endproc

	.section	.text.command_line_arguments.command_line_arguments..thunk4,"ax",@progbits
	.p2align	4, 0x90
	.type	command_line_arguments.command_line_arguments..thunk4,@function
command_line_arguments.command_line_arguments..thunk4:
.Lfunc_begin20:
	.loc	2 164 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB20_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB20_2:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
.Ltmp786:
	.loc	2 164 2 prologue_end
	movl	$.Ltmp787, %edi
	callq	runtime.setdeferretaddr
	testb	$1, %al
	jne	.LBB20_4
.Ltmp788:
	movq	(%rbx), %rdi
	callq	sync.WaitGroup.Done
.Ltmp789:
.Ltmp787:
.LBB20_4:
	xorl	%eax, %eax
	popq	%rbx
.Ltmp790:
	.cfi_def_cfa_offset 8
	retq
.Ltmp791:
.Lfunc_end20:
	.size	command_line_arguments.command_line_arguments..thunk4, .Lfunc_end20-command_line_arguments.command_line_arguments..thunk4
	.cfi_endproc

	.section	.text.command_line_arguments.command_line_arguments..thunk5,"ax",@progbits
	.p2align	4, 0x90
	.type	command_line_arguments.command_line_arguments..thunk5,@function
command_line_arguments.command_line_arguments..thunk5:
.Lfunc_begin21:
	.loc	2 214 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB21_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB21_2:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
.Ltmp792:
	.loc	2 214 2 prologue_end
	movl	$.Ltmp793, %edi
	callq	runtime.setdeferretaddr
	testb	$1, %al
	jne	.LBB21_4
.Ltmp794:
	movq	(%rbx), %rdi
	callq	sync.WaitGroup.Done
.Ltmp795:
.Ltmp793:
.LBB21_4:
	xorl	%eax, %eax
	popq	%rbx
.Ltmp796:
	.cfi_def_cfa_offset 8
	retq
.Ltmp797:
.Lfunc_end21:
	.size	command_line_arguments.command_line_arguments..thunk5, .Lfunc_end21-command_line_arguments.command_line_arguments..thunk5
	.cfi_endproc

	.section	.text.command_line_arguments.command_line_arguments..thunk6,"ax",@progbits
	.p2align	4, 0x90
	.type	command_line_arguments.command_line_arguments..thunk6,@function
command_line_arguments.command_line_arguments..thunk6:
.Lfunc_begin22:
	.loc	2 260 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB22_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB22_2:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
.Ltmp798:
	.loc	2 260 2 prologue_end
	movl	$.Ltmp799, %edi
	callq	runtime.setdeferretaddr
	testb	$1, %al
	jne	.LBB22_4
.Ltmp800:
	movq	(%rbx), %rdi
	callq	sync.Mutex.Unlock
.Ltmp801:
.Ltmp799:
.LBB22_4:
	xorl	%eax, %eax
	popq	%rbx
.Ltmp802:
	.cfi_def_cfa_offset 8
	retq
.Ltmp803:
.Lfunc_end22:
	.size	command_line_arguments.command_line_arguments..thunk6, .Lfunc_end22-command_line_arguments.command_line_arguments..thunk6
	.cfi_endproc

	.section	.text.command_line_arguments.commandExec,"ax",@progbits
	.p2align	4, 0x90
	.type	command_line_arguments.commandExec,@function
command_line_arguments.commandExec:
.Lfunc_begin23:
	.loc	4 25 0
	.cfi_startproc
	leaq	-312(%rsp), %r11
	cmpq	%fs:112, %r11
	ja	.LBB23_2
	movabsq	$312, %r10
	movabsq	$24, %r11
	callq	__morestack
	retq
.LBB23_2:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	subq	$272, %rsp
	.cfi_def_cfa_offset 320
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movl	%edx, %ebp
.Ltmp804:
	movq	%rsi, %r15
	movq	%rdi, %rbx
.Ltmp805:
	.loc	4 26 14 prologue_end
	movq	336(%rsp), %rax
	movq	%rax, 16(%rsp)
	movaps	320(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	callq	os_exec.Command
	movq	%rax, %r14
.Ltmp806:
	.loc	4 27 2
	testb	$1, %bpl
	je	.LBB23_4
.Ltmp807:
	.loc	4 0 2 is_stmt 0
	leaq	320(%rsp), %r12
	.loc	4 28 20 is_stmt 1
	movups	.Lconst.314(%rip), %xmm0
	movaps	%xmm0, 176(%rsp)
	movq	%rbx, 192(%rsp)
	movq	%r15, 200(%rsp)
	movups	.Lconst.316(%rip), %xmm0
	movaps	%xmm0, 208(%rsp)
	movaps	176(%rsp), %xmm0
	movaps	192(%rsp), %xmm1
	movaps	208(%rsp), %xmm2
	movups	%xmm2, 32(%rsp)
	movups	%xmm1, 16(%rsp)
	movups	%xmm0, (%rsp)
	xorl	%edi, %edi
	callq	runtime.concatstring3
	movq	%rax, %rbx
.Ltmp808:
	movq	%rdx, %rbp
.Ltmp809:
	.loc	4 28 7 is_stmt 0
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %r15
	movq	%rbx, 96(%rsp)
	movq	%rbp, 104(%rsp)
	leaq	96(%rsp), %rdx
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movl	$type...6.7string, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
	movups	(%r12), %xmm0
	movaps	%xmm0, 240(%rsp)
	movq	16(%r12), %rax
	movq	%rax, 256(%rsp)
	leaq	240(%rsp), %rdx
	movl	$type...6.7string, %edi
	movq	%rbx, %rsi
	callq	runtime.typedmemmove
	movq	$string..d, 144(%rsp)
	movq	%r15, 152(%rsp)
	movq	$type...6.7string, 160(%rsp)
	movq	%rbx, 168(%rsp)
	leaq	144(%rsp), %rax
	movq	%rax, 48(%rsp)
	movq	$2, 56(%rsp)
	movq	$2, 64(%rsp)
	movq	64(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	48(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	callq	log.Println
.Ltmp810:
.LBB23_4:
	.loc	4 30 10 is_stmt 1
	movq	%r14, %rdi
	callq	os_exec.Cmd.Run
	movq	%rax, %rbx
.Ltmp811:
	movq	%rdx, %r14
.Ltmp812:
	.loc	4 31 7
	testq	%rax, %rax
	je	.LBB23_6
.Ltmp813:
	.loc	4 32 7
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbp
	movups	.Lconst.318(%rip), %xmm0
	movaps	%xmm0, 224(%rsp)
	leaq	224(%rsp), %rdx
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	.loc	4 32 35 is_stmt 0
	movq	(%rbx), %rax
	.loc	4 32 7
	movq	$string..d, 112(%rsp)
	movq	%rbp, 120(%rsp)
	movq	%rax, 128(%rsp)
	movq	%r14, 136(%rsp)
	leaq	112(%rsp), %rax
	movq	%rax, 72(%rsp)
	movq	$2, 80(%rsp)
	movq	$2, 88(%rsp)
	movq	88(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	72(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	callq	log.Println
.Ltmp814:
.LBB23_6:
	.loc	4 34 2 is_stmt 1
	movq	%rbx, %rax
	movq	%r14, %rdx
	addq	$272, %rsp
	.cfi_def_cfa_offset 48
	popq	%rbx
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp815:
.Lfunc_end23:
	.size	command_line_arguments.commandExec, .Lfunc_end23-command_line_arguments.commandExec
	.cfi_endproc

	.section	.text.command_line_arguments.DelRoute,"ax",@progbits
	.globl	command_line_arguments.DelRoute
	.p2align	4, 0x90
	.type	command_line_arguments.DelRoute,@function
command_line_arguments.DelRoute:
.Lfunc_begin24:
	.loc	6 47 0
	.cfi_startproc
	leaq	-264(%rsp), %r11
	cmpq	%fs:112, %r11
	ja	.LBB24_2
	movq	%r10, %rax
	movabsq	$264, %r10
	movabsq	$48, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB24_2:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$216, %rsp
	.cfi_def_cfa_offset 272
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movl	%edx, 28(%rsp)
	movq	%rsi, 32(%rsp)
	movq	%rdi, %r12
.Ltmp816:
	leaq	272(%rsp), %rdi
.Ltmp817:
	.loc	6 48 50 prologue_end
	callq	net.IP.String
	movq	%rax, %rbp
	movq	%rdx, %rbx
	leaq	296(%rsp), %rdi
	.loc	6 48 68 is_stmt 0
	callq	net.IP.String
	movq	%rax, %r14
	movq	%rdx, %r15
	.loc	6 48 15
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %r13
	movq	%rbp, 96(%rsp)
	movq	%rbx, 104(%rsp)
	leaq	96(%rsp), %rdx
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
	movq	%r14, 80(%rsp)
	movq	%r15, 88(%rsp)
	leaq	80(%rsp), %rdx
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbp
	movq	%r12, 64(%rsp)
	movq	32(%rsp), %rax
	movq	%rax, 72(%rsp)
	leaq	64(%rsp), %rdx
	movl	$string..d, %edi
	movq	%rbp, %rsi
	callq	runtime.typedmemmove
	movq	$string..d, 144(%rsp)
	movq	%r13, 152(%rsp)
	movq	$string..d, 160(%rsp)
	movq	%rbx, 168(%rsp)
	movq	$string..d, 176(%rsp)
	movq	%rbp, 184(%rsp)
	leaq	144(%rsp), %rax
	movq	%rax, 40(%rsp)
	movq	$3, 48(%rsp)
	movq	$3, 56(%rsp)
	movq	56(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	40(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.163, %edi
	movl	$19, %esi
	callq	fmt.Sprintf
.Ltmp818:
	.loc	6 0 15
	leaq	192(%rsp), %rdi
	.loc	6 49 18 is_stmt 1
	movl	$.Lconst.149, %ecx
	movl	$1, %r8d
	movq	%rax, %rsi
	callq	strings.Split
.Ltmp819:
	.loc	6 0 18 is_stmt 0
	movq	208(%rsp), %rax
	movq	%rax, 128(%rsp)
	movups	192(%rsp), %xmm0
	movaps	%xmm0, 112(%rsp)
	.loc	6 50 9 is_stmt 1
	movq	128(%rsp), %rax
	movq	%rax, 16(%rsp)
	movaps	112(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.159, %edi
	movl	$5, %esi
	movl	28(%rsp), %edx
.Ltmp820:
	callq	command_line_arguments.commandExec
.Ltmp821:
	.loc	6 50 2 is_stmt 0
	addq	$216, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
.Ltmp822:
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp823:
.Lfunc_end24:
	.size	command_line_arguments.DelRoute, .Lfunc_end24-command_line_arguments.DelRoute
	.cfi_endproc

	.section	.text.command_line_arguments.command_line_arguments..thunk7,"ax",@progbits
	.p2align	4, 0x90
	.type	command_line_arguments.command_line_arguments..thunk7,@function
command_line_arguments.command_line_arguments..thunk7:
.Lfunc_begin25:
	.loc	6 61 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB25_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB25_2:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
.Ltmp824:
	.loc	6 61 2 prologue_end
	movl	$.Ltmp825, %edi
	callq	runtime.setdeferretaddr
	testb	$1, %al
	jne	.LBB25_4
.Ltmp826:
	movq	(%rbx), %rdi
	callq	os.File.Close
.Ltmp827:
.Ltmp825:
.LBB25_4:
	xorl	%eax, %eax
	popq	%rbx
.Ltmp828:
	.cfi_def_cfa_offset 8
	retq
.Ltmp829:
.Lfunc_end25:
	.size	command_line_arguments.command_line_arguments..thunk7, .Lfunc_end25-command_line_arguments.command_line_arguments..thunk7
	.cfi_endproc

	.section	.text.command_line_arguments.GetNetGateway..func1,"ax",@progbits
	.p2align	4, 0x90
	.type	command_line_arguments.GetNetGateway..func1,@function
command_line_arguments.GetNetGateway..func1:
.Lfunc_begin26:
	.loc	6 64 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB26_2
	movq	%r10, %rax
	movabsq	$24, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB26_2:
	subq	$24, %rsp
	.cfi_def_cfa_offset 32
	movq	%rsi, %rax
	movq	%rdi, %rdx
.Ltmp830:
	movq	%rsp, %rdi
.Ltmp831:
	.loc	6 65 19 prologue_end
	movl	$16, %ecx
	movl	$8, %r8d
	movq	%rdx, %rsi
.Ltmp832:
	movq	%rax, %rdx
.Ltmp833:
	callq	strconv.ParseUint
.Ltmp834:
	movb	(%rsp), %al
.Ltmp835:
	.loc	6 66 3
	addq	$24, %rsp
	.cfi_def_cfa_offset 8
	retq
.Ltmp836:
.Lfunc_end26:
	.size	command_line_arguments.GetNetGateway..func1, .Lfunc_end26-command_line_arguments.GetNetGateway..func1
	.cfi_endproc

	.section	.text.command_line_arguments.serverConn.hadError,"ax",@progbits
	.globl	command_line_arguments.serverConn.hadError
	.p2align	4, 0x90
	.type	command_line_arguments.serverConn.hadError,@function
command_line_arguments.serverConn.hadError:
.Lfunc_begin27:
	.file	7 "./server_conn.go"
	.loc	7 105 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB27_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB27_2:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
.Ltmp837:
	.loc	7 106 5 prologue_end
	testb	%sil, %sil
	je	.LBB27_3
.Ltmp838:
	.loc	7 0 0 is_stmt 0
	testq	%rbx, %rbx
	jne	.LBB27_6
	jmp	.LBB27_7
.Ltmp839:
.LBB27_3:
	testq	%rbx, %rbx
	je	.LBB27_7
.Ltmp840:
	movq	(%rbx), %rax
	movq	8(%rbx), %rdi
	.loc	7 107 9 is_stmt 1
	callq	*8(%rax)
.Ltmp841:
.LBB27_6:
	.loc	7 109 17
	movb	$0, 72(%rbx)
	.loc	7 110 29
	movq	16(%rbx), %rsi
	.loc	7 110 3 is_stmt 0
	movq	32(%rbx), %rdi
	.loc	7 110 10
	callq	command_line_arguments.Server.removeClientConn
	popq	%rbx
.Ltmp842:
	.cfi_def_cfa_offset 8
	.loc	7 0 10
	retq
.Ltmp843:
.LBB27_7:
	.cfi_def_cfa_offset 16
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp844:
.Lfunc_end27:
	.size	command_line_arguments.serverConn.hadError, .Lfunc_end27-command_line_arguments.serverConn.hadError
	.cfi_endproc

	.section	.text.command_line_arguments.Server.Close,"ax",@progbits
	.globl	command_line_arguments.Server.Close
	.p2align	4, 0x90
	.type	command_line_arguments.Server.Close,@function
command_line_arguments.Server.Close:
.Lfunc_begin28:
	.file	8 "./server.go"
	.loc	8 195 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB28_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB28_2:
.Ltmp845:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	.loc	8 196 3 prologue_end
	testq	%rdi, %rdi
	je	.LBB28_6
.Ltmp846:
	.loc	8 0 3 is_stmt 0
	movq	%rdi, %rbx
.Ltmp847:
	.loc	8 196 19
	movb	$1, 56(%rdi)
	.loc	8 197 3 is_stmt 1
	subq	$-128, %rdi
	.loc	8 197 12 is_stmt 0
	callq	command_line_arguments.Reverser.Close
	movq	8(%rbx), %rax
	movq	16(%rbx), %rdi
	.loc	8 199 22 is_stmt 1
	callq	*24(%rax)
.Ltmp848:
	.loc	8 200 9
	testq	%rax, %rax
	je	.LBB28_4
.Ltmp849:
	.loc	8 201 3
	popq	%rbx
.Ltmp850:
	.cfi_def_cfa_offset 8
	retq
.Ltmp851:
.LBB28_4:
	.cfi_def_cfa_offset 16
	.loc	8 203 9
	movq	120(%rbx), %rdi
	.loc	8 203 14 is_stmt 0
	callq	github_com_twitchyliquid64_subnet_vendor_github_com_songgao_water.Interface.Close..stub
.Ltmp852:
	.loc	8 204 9 is_stmt 1
	testq	%rax, %rax
	cmoveq	%rax, %rdx
	cmoveq	%rax, %rax
.Ltmp853:
	.loc	8 201 3
	popq	%rbx
.Ltmp854:
	.cfi_def_cfa_offset 8
	retq
.LBB28_6:
	.cfi_def_cfa_offset 16
.Ltmp855:
	.loc	8 196 3
	movl	$6, %edi
.Ltmp856:
	callq	__go_runtime_error
.Ltmp857:
.Lfunc_end28:
	.size	command_line_arguments.Server.Close, .Lfunc_end28-command_line_arguments.Server.Close
	.cfi_endproc

	.section	.text.command_line_arguments.Server.Init,"ax",@progbits
	.globl	command_line_arguments.Server.Init
	.p2align	4, 0x90
	.type	command_line_arguments.Server.Init,@function
command_line_arguments.Server.Init:
.Lfunc_begin29:
	.loc	8 74 0
	.cfi_startproc
	leaq	-376(%rsp), %r11
	cmpq	%fs:112, %r11
	ja	.LBB29_2
	movq	%r10, %rax
	movabsq	$376, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB29_2:
.Ltmp858:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$328, %rsp
	.cfi_def_cfa_offset 384
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	.loc	8 75 52 prologue_end
	testq	%rdi, %rdi
	je	.LBB29_12
.Ltmp859:
	.loc	8 0 52 is_stmt 0
	movq	%rdx, %r12
.Ltmp860:
	movq	%rsi, %r13
.Ltmp861:
	movq	%rdi, %rbx
.Ltmp862:
	.loc	8 75 52
	movq	(%rdi), %r9
	leaq	296(%rsp), %rdi
	.loc	8 75 27
	movl	$.Lconst.98, %esi
	movl	$3, %edx
	movq	%r13, %rcx
	movq	%r12, %r8
	callq	crypto_tls.Listen
	movq	312(%rsp), %rbp
.Ltmp863:
	movq	320(%rsp), %r14
.Ltmp864:
	.loc	8 0 27
	movups	296(%rsp), %xmm0
	movaps	%xmm0, 96(%rsp)
	.loc	8 75 3
	leaq	8(%rbx), %rsi
	.loc	8 75 21
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB29_13
.Ltmp865:
	.loc	8 0 21
	leaq	96(%rsp), %rdx
	.loc	8 75 21
	movl	$net.Listener..d, %edi
	callq	runtime.typedmemmove
	.loc	8 76 9 is_stmt 1
	testq	%rbp, %rbp
	je	.LBB29_7
.Ltmp866:
.LBB29_6:
	.loc	8 77 3
	movq	%rbp, %rax
	movq	%r14, %rdx
	jmp	.LBB29_9
.Ltmp867:
.LBB29_13:
	.loc	8 75 21
	movaps	96(%rsp), %xmm0
	movups	%xmm0, (%rsi)
	.loc	8 76 9
	testq	%rbp, %rbp
	jne	.LBB29_6
.Ltmp868:
.LBB29_7:
	.loc	8 79 21
	movq	120(%rbx), %rdi
	.loc	8 79 26 is_stmt 0
	callq	github_com_twitchyliquid64_subnet_vendor_github_com_songgao_water.Interface.Name
	.loc	8 79 49
	movq	48(%rbx), %rbp
	.loc	8 79 11
	movq	40(%rbx), %rcx
	movq	%rcx, 16(%rsp)
	movups	24(%rbx), %xmm0
	movups	%xmm0, (%rsp)
	xorl	%ecx, %ecx
	movq	%rax, %rdi
	movq	%rdx, %rsi
	movq	%rbp, %rdx
	callq	command_line_arguments.SetDevIP
	movq	%rax, %r15
.Ltmp869:
	.loc	8 79 76
	testq	%rax, %rax
	je	.LBB29_10
.Ltmp870:
	.loc	8 80 3 is_stmt 1
	movq	%r15, %rax
	jmp	.LBB29_9
.Ltmp871:
.LBB29_10:
	.loc	8 0 3 is_stmt 0
	movq	%rdx, 64(%rsp)
	leaq	24(%rbx), %rbp
	.loc	8 83 14 is_stmt 1
	movq	120(%rbx), %rdi
	.loc	8 83 19 is_stmt 0
	callq	github_com_twitchyliquid64_subnet_vendor_github_com_songgao_water.Interface.Name
	movq	%rax, 48(%rsp)
	movq	%rdx, 40(%rsp)
	movups	(%rbp), %xmm0
	movaps	%xmm0, 272(%rsp)
	movq	16(%rbp), %rax
	movq	%rax, 288(%rsp)
	leaq	272(%rsp), %rdi
	.loc	8 83 39
	callq	net.IP.String
	movq	%rax, %rbp
	movq	%rdx, 56(%rsp)
	.loc	8 83 58
	movq	48(%rbx), %rax
	.loc	8 83 71
	testq	%rax, %rax
	je	.LBB29_12
.Ltmp872:
	.loc	8 0 71
	movq	40(%rax), %rcx
	movq	%rcx, 256(%rsp)
	movups	24(%rax), %xmm0
	movaps	%xmm0, 240(%rsp)
	leaq	240(%rsp), %rdi
	.loc	8 83 77
	callq	net.IP.String
	movq	%rax, 32(%rsp)
	movq	%rdx, 24(%rsp)
	.loc	8 82 6 is_stmt 1
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %r14
	movq	%r13, 160(%rsp)
	movq	%r12, 168(%rsp)
	leaq	160(%rsp), %rdx
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %r12
	movq	48(%rsp), %rax
	movq	%rax, 144(%rsp)
	movq	40(%rsp), %rax
	movq	%rax, 152(%rsp)
	leaq	144(%rsp), %rdx
	movl	$string..d, %edi
	movq	%r12, %rsi
	callq	runtime.typedmemmove
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
.Ltmp873:
	.loc	8 0 6 is_stmt 0
	movq	%rbp, 128(%rsp)
	movq	56(%rsp), %rax
	movq	%rax, 136(%rsp)
	leaq	128(%rsp), %rdx
	.loc	8 82 6
	movl	$string..d, %edi
	movq	%rbx, %rsi
	callq	runtime.typedmemmove
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbp
	movq	32(%rsp), %rax
	movq	%rax, 112(%rsp)
	movq	24(%rsp), %rax
	movq	%rax, 120(%rsp)
	leaq	112(%rsp), %rdx
	movl	$string..d, %edi
	movq	%rbp, %rsi
	callq	runtime.typedmemmove
	movq	$string..d, 176(%rsp)
	movq	%r14, 184(%rsp)
	movq	$string..d, 192(%rsp)
	movq	%r12, 200(%rsp)
	movq	$string..d, 208(%rsp)
	movq	%rbx, 216(%rsp)
	movq	$string..d, 224(%rsp)
	movq	%rbp, 232(%rsp)
	leaq	176(%rsp), %rax
	movq	%rax, 72(%rsp)
	movq	$4, 80(%rsp)
	movq	$4, 88(%rsp)
	movq	88(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	72(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.293, %edi
	movl	$55, %esi
	callq	log.Printf
	.loc	8 84 2 is_stmt 1
	movq	%r15, %rax
	movq	64(%rsp), %rdx
.Ltmp874:
.LBB29_9:
	.loc	8 0 2 is_stmt 0
	addq	$328, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
.Ltmp875:
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB29_12:
	.cfi_def_cfa_offset 384
	movl	$6, %edi
	callq	__go_runtime_error
.Lfunc_end29:
	.size	command_line_arguments.Server.Init, .Lfunc_end29-command_line_arguments.Server.Init
	.cfi_endproc

	.section	.text.command_line_arguments.Server.Run,"ax",@progbits
	.globl	command_line_arguments.Server.Run
	.p2align	4, 0x90
	.type	command_line_arguments.Server.Run,@function
command_line_arguments.Server.Run:
.Lfunc_begin30:
	.loc	8 88 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB30_2
	movq	%r10, %rax
	movabsq	$136, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB30_2:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$88, %rsp
	.cfi_def_cfa_offset 144
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rdi, %rbx
.Ltmp876:
	.loc	8 89 2 prologue_end
	movl	$type..struct.4.4x.5a0.0.1command_line_arguments.Server.5, %edi
	callq	runtime.newobject
	movq	%rax, %r14
	movq	%rbx, 16(%rsp)
	leaq	16(%rsp), %rdx
	movl	$type..struct.4.4x.5a0.0.1command_line_arguments.Server.5, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movl	$command_line_arguments.command_line_arguments..thunk10, %edi
	movq	%r14, %rsi
	callq	__go_go
	.loc	8 90 2
	movl	$type..struct.4.4x.5a0.0.1command_line_arguments.Server.5, %edi
	callq	runtime.newobject
	movq	%rax, %r14
	movq	%rbx, 8(%rsp)
	leaq	8(%rsp), %rdx
	movl	$type..struct.4.4x.5a0.0.1command_line_arguments.Server.5, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movl	$command_line_arguments.command_line_arguments..thunk11, %edi
	movq	%r14, %rsi
	callq	__go_go
	.loc	8 91 22
	testq	%rbx, %rbx
	je	.LBB30_4
.Ltmp877:
	.loc	8 91 30 is_stmt 0
	movq	112(%rbx), %r13
	.loc	8 91 22
	movq	120(%rbx), %rbp
	.loc	8 91 50
	leaq	184(%rbx), %r15
	.loc	8 91 57
	leaq	56(%rbx), %r12
	.loc	8 91 2
	movl	$type..struct.4.4x.5a0.0.1github_com_twitchyliquid64_subnet_vendor_github_com_songgao_water.Interface.2a1.0chan.0.1command_line_arguments.IPPacket.2a2.0.1sync.WaitGroup.2a3.0.1bool.5, %edi
	callq	runtime.newobject
	movq	%rax, %r14
	movq	%rbp, 56(%rsp)
	movq	%r13, 64(%rsp)
	movq	%r15, 72(%rsp)
	movq	%r12, 80(%rsp)
	leaq	56(%rsp), %rdx
	movl	$type..struct.4.4x.5a0.0.1github_com_twitchyliquid64_subnet_vendor_github_com_songgao_water.Interface.2a1.0chan.0.1command_line_arguments.IPPacket.2a2.0.1sync.WaitGroup.2a3.0.1bool.5, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movl	$command_line_arguments.command_line_arguments..thunk12, %edi
	movq	%r14, %rsi
	callq	__go_go
	.loc	8 92 29 is_stmt 1
	movq	104(%rbx), %r14
	.loc	8 92 21 is_stmt 0
	movq	120(%rbx), %rbp
	.loc	8 92 2
	movl	$type..struct.4.4x.5a0.0.1github_com_twitchyliquid64_subnet_vendor_github_com_songgao_water.Interface.2a1.0chan.0.1command_line_arguments.IPPacket.2a2.0.1sync.WaitGroup.2a3.0.1bool.5, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
.Ltmp878:
	movq	%rbp, 24(%rsp)
	movq	%r14, 32(%rsp)
	movq	%r15, 40(%rsp)
	movq	%r12, 48(%rsp)
	leaq	24(%rsp), %rdx
	movl	$type..struct.4.4x.5a0.0.1github_com_twitchyliquid64_subnet_vendor_github_com_songgao_water.Interface.2a1.0chan.0.1command_line_arguments.IPPacket.2a2.0.1sync.WaitGroup.2a3.0.1bool.5, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movl	$command_line_arguments.command_line_arguments..thunk13, %edi
	movq	%rbx, %rsi
	callq	__go_go
	addq	$88, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB30_4:
	.cfi_def_cfa_offset 144
.Ltmp879:
	.loc	8 91 22 is_stmt 1
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp880:
.Lfunc_end30:
	.size	command_line_arguments.Server.Run, .Lfunc_end30-command_line_arguments.Server.Run
	.cfi_endproc

	.section	.text.command_line_arguments.Server.acceptRoutine,"ax",@progbits
	.globl	command_line_arguments.Server.acceptRoutine
	.p2align	4, 0x90
	.type	command_line_arguments.Server.acceptRoutine,@function
command_line_arguments.Server.acceptRoutine:
.Lfunc_begin31:
	.loc	8 95 0
	.cfi_startproc
	.cfi_personality 3, __gccgo_personality_v0
	.cfi_lsda 3, .Lexception4
	leaq	-280(%rsp), %r11
	cmpq	%fs:112, %r11
	ja	.LBB31_2
	movq	%r10, %rax
	movabsq	$280, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB31_2:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$232, %rsp
	.cfi_def_cfa_offset 288
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rdi, %rbx
	movb	$0, 31(%rsp)
.Ltmp915:
	.loc	8 97 20 prologue_end
	testq	%rdi, %rdi
	jne	.LBB31_4
.Ltmp916:
.Ltmp881:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp882:
.Ltmp917:
.LBB31_4:
	.loc	8 97 17 is_stmt 0
	movq	8(%rbx), %rsi
	movq	16(%rbx), %rdx
.Ltmp883:
	movl	$type...1net.TCPListener, %edi
	callq	runtime.ifaceI2T2P
.Ltmp884:
.Ltmp918:
	.loc	8 0 17
	movq	%rax, %r14
	.loc	8 98 3 is_stmt 1
	leaq	184(%rbx), %rbp
.Ltmp885:
	.loc	8 98 6 is_stmt 0
	movl	$1, %esi
	movq	%rbp, %rdi
	callq	sync.WaitGroup.Add
.Ltmp886:
.Ltmp919:
	.loc	8 99 2 is_stmt 1
	movq	%rbp, 32(%rsp)
.Ltmp887:
	leaq	31(%rsp), %rdi
	leaq	32(%rsp), %rdx
	movl	$command_line_arguments.command_line_arguments..thunk14, %esi
	callq	runtime.deferproc
.Ltmp888:
.Ltmp920:
	.loc	8 0 2 is_stmt 0
	leaq	128(%rsp), %r15
	leaq	184(%rsp), %r13
	leaq	160(%rsp), %rbp
.Ltmp921:
	.p2align	4, 0x90
.LBB31_8:
	movb	$1, %r12b
	.loc	8 101 6 is_stmt 1
	cmpb	$0, 56(%rbx)
	jne	.LBB31_9
.Ltmp922:
	.loc	8 0 6 is_stmt 0
	testq	%r14, %r14
	je	.LBB31_18
.Ltmp923:
.Ltmp889:
	.loc	8 103 33 is_stmt 1
	leaq	208(%rsp), %rdi
	callq	time.Now
.Ltmp890:
.Ltmp924:
	.loc	8 0 33 is_stmt 0
	movq	224(%rsp), %rax
	movq	%rax, 176(%rsp)
	movups	208(%rsp), %xmm0
	movaps	%xmm0, 160(%rsp)
.Ltmp891:
	.loc	8 103 38
	movl	$300000000, %edx
	movq	%r13, %rdi
	movq	%rbp, %rsi
	callq	time.Time.Add
.Ltmp892:
.Ltmp925:
	.loc	8 0 38
	movq	200(%rsp), %rax
	movq	%rax, 112(%rsp)
	movups	184(%rsp), %xmm0
	movaps	%xmm0, 96(%rsp)
.Ltmp893:
	.loc	8 103 15
	movq	112(%rsp), %rax
	movq	%rax, 16(%rsp)
	movaps	96(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movq	%r14, %rdi
	callq	net.TCPListener.SetDeadline
.Ltmp894:
.Ltmp926:
.LBB31_18:
	.loc	8 0 15
	movq	8(%rbx), %rax
	movq	16(%rbx), %rsi
.Ltmp895:
	.loc	8 105 29 is_stmt 1
	movq	%r15, %rdi
	callq	*8(%rax)
.Ltmp896:
.Ltmp927:
	movq	144(%rsp), %rcx
.Ltmp928:
	.loc	8 106 10
	testq	%rcx, %rcx
	jne	.LBB31_21
.Ltmp929:
	.loc	8 105 29
	movq	128(%rsp), %rsi
.Ltmp930:
	movq	136(%rsp), %rdx
.Ltmp931:
.Ltmp906:
	.loc	8 112 4
	movq	%rbx, %rdi
	callq	command_line_arguments.Server.handleClient
.Ltmp932:
.Ltmp907:
	jmp	.LBB31_8
.Ltmp933:
.LBB31_9:
	.loc	8 0 4 is_stmt 0
	leaq	31(%rsp), %rbp
	jmp	.LBB31_30
.Ltmp934:
.LBB31_21:
	.loc	8 107 7 is_stmt 1
	cmpb	$0, 56(%rbx)
	je	.LBB31_23
.Ltmp935:
	.loc	8 0 7 is_stmt 0
	leaq	31(%rsp), %rbp
	jmp	.LBB31_30
.Ltmp936:
.LBB31_23:
	movq	152(%rsp), %rdi
.Ltmp937:
.Ltmp897:
	.loc	8 108 41 is_stmt 1
	callq	*8(%rcx)
.Ltmp938:
.Ltmp898:
	.loc	8 0 41 is_stmt 0
	movq	%rax, %rbp
	movq	%rdx, %r14
.Ltmp939:
.Ltmp899:
	.loc	8 108 9
	movl	$string..d, %edi
	callq	runtime.newobject
.Ltmp900:
.Ltmp940:
	.loc	8 0 9
	movq	%rax, %rbx
.Ltmp941:
	movq	%rbp, 80(%rsp)
	movq	%r14, 88(%rsp)
.Ltmp901:
	leaq	80(%rsp), %rdx
	.loc	8 108 9
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
.Ltmp902:
	movq	$string..d, 64(%rsp)
	movq	%rbx, 72(%rsp)
	leaq	64(%rsp), %rax
	movq	%rax, 40(%rsp)
	movq	$1, 48(%rsp)
	movq	$1, 56(%rsp)
.Ltmp903:
	movq	56(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	40(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.297, %edi
	movl	$17, %esi
	callq	log.Printf
.Ltmp904:
.Ltmp942:
	.loc	8 0 9
	leaq	31(%rsp), %rbp
	jmp	.LBB31_30
.LBB31_11:
.Ltmp905:
	jmp	.LBB31_12
.LBB31_10:
.Ltmp943:
.Ltmp908:
.LBB31_12:
.Ltmp909:
	leaq	31(%rsp), %rdi
	.loc	8 114 1 is_stmt 1
	callq	runtime.checkdefer
.Ltmp910:
	.loc	8 0 1 is_stmt 0
	movb	$1, %r12b
	leaq	31(%rsp), %rbp
	jmp	.LBB31_30
.LBB31_28:
.Ltmp911:
	movq	%rax, %rbx
	xorl	%r12d, %r12d
	leaq	31(%rsp), %rbp
	jmp	.LBB31_30
.LBB31_29:
.Ltmp914:
	.loc	8 114 1
	movq	%rbp, %rdi
	callq	runtime.checkdefer
	.p2align	4, 0x90
.LBB31_30:
.Ltmp912:
	movq	%rbp, %rdi
	callq	runtime.deferreturn
.Ltmp913:
	.loc	8 0 1
	testb	%r12b, %r12b
	je	.LBB31_33
	.loc	8 110 4 is_stmt 1
	addq	$232, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp944:
.LBB31_33:
	.cfi_def_cfa_offset 288
	.loc	8 0 4 is_stmt 0
	movq	%rbx, %rdi
	callq	_Unwind_Resume
.Lfunc_end31:
	.size	command_line_arguments.Server.acceptRoutine, .Lfunc_end31-command_line_arguments.Server.acceptRoutine
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table31:
.Lexception4:
	.byte	255
	.byte	3
	.uleb128 .Lttbase4-.Lttbaseref4
.Lttbaseref4:
	.byte	1
	.uleb128 .Lcst_end4-.Lcst_begin4
.Lcst_begin4:
	.uleb128 .Lfunc_begin31-.Lfunc_begin31
	.uleb128 .Ltmp881-.Lfunc_begin31
	.byte	0
	.byte	0
	.uleb128 .Ltmp881-.Lfunc_begin31
	.uleb128 .Ltmp888-.Ltmp881
	.uleb128 .Ltmp905-.Lfunc_begin31
	.byte	1
	.uleb128 .Ltmp889-.Lfunc_begin31
	.uleb128 .Ltmp907-.Ltmp889
	.uleb128 .Ltmp908-.Lfunc_begin31
	.byte	1
	.uleb128 .Ltmp897-.Lfunc_begin31
	.uleb128 .Ltmp904-.Ltmp897
	.uleb128 .Ltmp905-.Lfunc_begin31
	.byte	1
	.uleb128 .Ltmp909-.Lfunc_begin31
	.uleb128 .Ltmp910-.Ltmp909
	.uleb128 .Ltmp911-.Lfunc_begin31
	.byte	0
	.uleb128 .Ltmp910-.Lfunc_begin31
	.uleb128 .Ltmp912-.Ltmp910
	.byte	0
	.byte	0
	.uleb128 .Ltmp912-.Lfunc_begin31
	.uleb128 .Ltmp913-.Ltmp912
	.uleb128 .Ltmp914-.Lfunc_begin31
	.byte	1
	.uleb128 .Ltmp913-.Lfunc_begin31
	.uleb128 .Lfunc_end31-.Ltmp913
	.byte	0
	.byte	0
.Lcst_end4:
	.byte	1
	.byte	0
	.p2align	2
	.long	0
.Lttbase4:
	.p2align	2

	.section	.text.command_line_arguments.Server.dispatchRoutine,"ax",@progbits
	.globl	command_line_arguments.Server.dispatchRoutine
	.p2align	4, 0x90
	.type	command_line_arguments.Server.dispatchRoutine,@function
command_line_arguments.Server.dispatchRoutine:
.Lfunc_begin32:
	.loc	8 158 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB32_2
	movq	%r10, %rax
	movabsq	$184, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB32_2:
.Ltmp945:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r12
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	subq	$152, %rsp
	.cfi_def_cfa_offset 192
	.cfi_offset %rbx, -40
	.cfi_offset %r12, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	.loc	8 159 8 prologue_end
	testq	%rdi, %rdi
	je	.LBB32_10
.Ltmp946:
	.loc	8 0 8 is_stmt 0
	movq	%rdi, %rbx
.Ltmp947:
	.loc	8 159 6
	cmpb	$0, 56(%rdi)
	jne	.LBB32_11
.Ltmp948:
	.loc	8 0 6
	leaq	16(%rsp), %r14
	leaq	8(%rsp), %r15
	movq	%rsp, %r12
.Ltmp949:
	.p2align	4, 0x90
.LBB32_8:
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 128(%rsp)
	movaps	%xmm0, 112(%rsp)
	movaps	%xmm0, 96(%rsp)
	movaps	%xmm0, 80(%rsp)
	movaps	%xmm0, 64(%rsp)
	movaps	%xmm0, 48(%rsp)
	movaps	%xmm0, 32(%rsp)
	movaps	%xmm0, 16(%rsp)
	.loc	8 160 3 is_stmt 1
	movl	$128, %esi
	movl	$2, %edx
	movq	%r14, %rdi
	callq	runtime.newselect
	.loc	8 161 18
	movq	96(%rbx), %rsi
	movq	$0, 8(%rsp)
	.loc	8 161 3 is_stmt 0
	xorl	%ecx, %ecx
	movq	%r14, %rdi
	movq	%r15, %rdx
	callq	runtime.selectrecv
	.loc	8 164 18 is_stmt 1
	movq	104(%rbx), %rsi
	movq	$0, (%rsp)
	.loc	8 164 3 is_stmt 0
	xorl	%ecx, %ecx
	movq	%r14, %rdi
	movq	%r12, %rdx
	callq	runtime.selectrecv
	.loc	8 160 3 is_stmt 1
	movq	%r14, %rdi
	callq	runtime.selectgo
	testq	%rax, %rax
	je	.LBB32_9
.Ltmp950:
	.loc	8 164 3
	movq	(%rsp), %rsi
	jmp	.LBB32_7
.Ltmp951:
	.p2align	4, 0x90
.LBB32_9:
	.loc	8 161 3
	movq	8(%rsp), %rax
.Ltmp952:
	.loc	8 163 15
	testq	%rax, %rax
	je	.LBB32_10
.Ltmp953:
	movq	(%rax), %rsi
.Ltmp954:
.LBB32_7:
	.loc	8 0 15 is_stmt 0
	movq	%rbx, %rdi
	callq	command_line_arguments.Server.route
	.loc	8 159 6 is_stmt 1
	cmpb	$0, 56(%rbx)
	je	.LBB32_8
.Ltmp955:
.LBB32_11:
	.loc	8 0 6 is_stmt 0
	addq	$152, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
.Ltmp956:
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB32_10:
	.cfi_def_cfa_offset 192
	movl	$6, %edi
	callq	__go_runtime_error
.Lfunc_end32:
	.size	command_line_arguments.Server.dispatchRoutine, .Lfunc_end32-command_line_arguments.Server.dispatchRoutine
	.cfi_endproc

	.section	.text.command_line_arguments.Server.enrollClientConn,"ax",@progbits
	.globl	command_line_arguments.Server.enrollClientConn
	.p2align	4, 0x90
	.type	command_line_arguments.Server.enrollClientConn,@function
command_line_arguments.Server.enrollClientConn:
.Lfunc_begin33:
	.loc	8 125 0 is_stmt 1
	.cfi_startproc
	.cfi_personality 3, __gccgo_personality_v0
	.cfi_lsda 3, .Lexception5
	cmpq	%fs:112, %rsp
	ja	.LBB33_2
	movq	%r10, %rax
	movabsq	$56, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB33_2:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	subq	$24, %rsp
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rsi, %r14
	movq	%rdi, %r15
	movb	$0, 7(%rsp)
.Ltmp988:
	.loc	8 126 3 prologue_end
	testq	%rdi, %rdi
	jne	.LBB33_4
.Ltmp989:
.Ltmp957:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp958:
.Ltmp990:
.LBB33_4:
	leaq	80(%r15), %rbx
.Ltmp959:
	.loc	8 126 15 is_stmt 0
	movq	%rbx, %rdi
	callq	sync.Mutex.Lock
.Ltmp960:
.Ltmp991:
	.loc	8 126 3
	testq	%r15, %r15
	jne	.LBB33_7
.Ltmp992:
.Ltmp961:
	.loc	8 127 9 is_stmt 1
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp962:
.Ltmp993:
.LBB33_7:
	.loc	8 127 2 is_stmt 0
	movq	%rbx, 16(%rsp)
.Ltmp963:
	leaq	7(%rsp), %rdi
	leaq	16(%rsp), %rdx
	movl	$command_line_arguments.command_line_arguments..thunk15, %esi
	callq	runtime.deferproc
.Ltmp964:
.Ltmp994:
	.loc	8 128 3 is_stmt 1
	testq	%r14, %r14
	jne	.LBB33_10
.Ltmp995:
.Ltmp965:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp966:
.Ltmp996:
.LBB33_10:
	.loc	8 126 3
	testq	%r15, %r15
	je	.LBB33_11
.Ltmp997:
	.loc	8 128 10
	movq	88(%r15), %rax
	.loc	8 128 7 is_stmt 0
	movq	%rax, 16(%r14)
	.loc	8 129 3 is_stmt 1
	addq	$1, 88(%r15)
	.loc	8 130 13
	movq	16(%r14), %rax
	movq	%rax, 8(%rsp)
	jmp	.LBB33_18
.Ltmp998:
.LBB33_11:
.Ltmp967:
	.loc	8 128 10
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp968:
.Ltmp999:
	movq	88, %rax
	.loc	8 128 7 is_stmt 0
	movq	%rax, 16(%r14)
.Ltmp969:
	.loc	8 129 3 is_stmt 1
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp970:
.Ltmp1000:
.Ltmp971:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp972:
.Ltmp1001:
	addq	$1, 88
	.loc	8 130 13
	movq	16(%r14), %rax
	movq	%rax, 8(%rsp)
.Ltmp973:
	.loc	8 130 3 is_stmt 0
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp974:
.Ltmp1002:
.LBB33_18:
	movq	72(%r15), %rsi
.Ltmp975:
	leaq	8(%rsp), %rdx
	.loc	8 130 18
	movl	$type..map.6int.7.1command_line_arguments.serverConn, %edi
	callq	runtime.mapassign
.Ltmp976:
.Ltmp1003:
	movq	%rax, %rbx
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB33_20
.Ltmp1004:
.Ltmp977:
	movq	%rbx, %rdi
	movq	%r14, %rsi
	callq	runtime.writebarrierptr
.Ltmp978:
.Ltmp1005:
.LBB33_16:
	.loc	8 0 18
	movb	$1, %bpl
.Ltmp1006:
	leaq	7(%rsp), %rbx
	jmp	.LBB33_27
.Ltmp1007:
.LBB33_20:
	.loc	8 130 18
	testq	%rbx, %rbx
	jne	.LBB33_22
.Ltmp1008:
.Ltmp979:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp980:
.Ltmp1009:
.LBB33_22:
	movq	%r14, (%rbx)
	movb	$1, %bpl
.Ltmp1010:
	.loc	8 0 18
	leaq	7(%rsp), %rbx
	jmp	.LBB33_27
.Ltmp1011:
.LBB33_15:
.Ltmp981:
.Ltmp982:
	leaq	7(%rsp), %rdi
	.loc	8 131 1 is_stmt 1
	callq	runtime.checkdefer
.Ltmp983:
	jmp	.LBB33_16
.Ltmp1012:
.LBB33_24:
.Ltmp984:
	.loc	8 0 1 is_stmt 0
	movq	%rax, %r14
.Ltmp1013:
	xorl	%ebp, %ebp
	leaq	7(%rsp), %rbx
	jmp	.LBB33_27
.Ltmp1014:
.LBB33_26:
.Ltmp987:
	.loc	8 131 1
	movq	%rbx, %rdi
	callq	runtime.checkdefer
.Ltmp1015:
	.p2align	4, 0x90
.LBB33_27:
.Ltmp985:
	movq	%rbx, %rdi
	callq	runtime.deferreturn
.Ltmp986:
.Ltmp1016:
	.loc	8 0 1
	testb	%bpl, %bpl
	je	.LBB33_30
.Ltmp1017:
	addq	$24, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
.Ltmp1018:
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB33_30:
	.cfi_def_cfa_offset 64
.Ltmp1019:
	movq	%r14, %rdi
	callq	_Unwind_Resume
.Lfunc_end33:
	.size	command_line_arguments.Server.enrollClientConn, .Lfunc_end33-command_line_arguments.Server.enrollClientConn
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table33:
.Lexception5:
	.byte	255
	.byte	3
	.uleb128 .Lttbase5-.Lttbaseref5
.Lttbaseref5:
	.byte	1
	.uleb128 .Lcst_end5-.Lcst_begin5
.Lcst_begin5:
	.uleb128 .Lfunc_begin33-.Lfunc_begin33
	.uleb128 .Ltmp957-.Lfunc_begin33
	.byte	0
	.byte	0
	.uleb128 .Ltmp957-.Lfunc_begin33
	.uleb128 .Ltmp980-.Ltmp957
	.uleb128 .Ltmp981-.Lfunc_begin33
	.byte	1
	.uleb128 .Ltmp982-.Lfunc_begin33
	.uleb128 .Ltmp983-.Ltmp982
	.uleb128 .Ltmp984-.Lfunc_begin33
	.byte	0
	.uleb128 .Ltmp983-.Lfunc_begin33
	.uleb128 .Ltmp985-.Ltmp983
	.byte	0
	.byte	0
	.uleb128 .Ltmp985-.Lfunc_begin33
	.uleb128 .Ltmp986-.Ltmp985
	.uleb128 .Ltmp987-.Lfunc_begin33
	.byte	1
	.uleb128 .Ltmp986-.Lfunc_begin33
	.uleb128 .Lfunc_end33-.Ltmp986
	.byte	0
	.byte	0
.Lcst_end5:
	.byte	1
	.byte	0
	.p2align	2
	.long	0
.Lttbase5:
	.p2align	2

	.section	.text.command_line_arguments.Server.handleClient,"ax",@progbits
	.globl	command_line_arguments.Server.handleClient
	.p2align	4, 0x90
	.type	command_line_arguments.Server.handleClient,@function
command_line_arguments.Server.handleClient:
.Lfunc_begin34:
	.loc	8 116 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB34_2
	movq	%r10, %rax
	movabsq	$120, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB34_2:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r12
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	subq	$88, %rsp
	.cfi_def_cfa_offset 128
	.cfi_offset %rbx, -40
	.cfi_offset %r12, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdx, %r15
	movq	%rsi, %r12
	movq	%rdi, %r14
.Ltmp1020:
	.loc	8 117 2 prologue_end
	movl	$command_line_arguments..command_line_arguments.serverConn..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
.Ltmp1021:
	.loc	8 117 7 is_stmt 0
	movq	%r12, 8(%rsp)
	movq	%r15, 16(%rsp)
	xorps	%xmm0, %xmm0
	movups	%xmm0, 24(%rsp)
	movq	$0, 40(%rsp)
	movb	$1, 48(%rsp)
	movups	%xmm0, 65(%rsp)
	movups	%xmm0, 56(%rsp)
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB34_3
.Ltmp1022:
	.loc	8 0 7
	leaq	8(%rsp), %rdx
	.loc	8 117 7
	movl	$command_line_arguments..command_line_arguments.serverConn..d, %edi
	movq	%rbx, %rsi
	callq	runtime.typedmemmove
	jmp	.LBB34_6
.Ltmp1023:
.LBB34_3:
	testq	%rbx, %rbx
	je	.LBB34_4
.Ltmp1024:
	movups	72(%rsp), %xmm0
	movups	%xmm0, 64(%rbx)
	movups	8(%rsp), %xmm0
	movups	24(%rsp), %xmm1
	movups	40(%rsp), %xmm2
	movups	56(%rsp), %xmm3
	movups	%xmm3, 48(%rbx)
	movups	%xmm2, 32(%rbx)
	movups	%xmm1, 16(%rbx)
	movups	%xmm0, (%rbx)
.Ltmp1025:
.LBB34_6:
	.loc	8 121 3 is_stmt 1
	movq	%r14, %rdi
	movq	%rbx, %rsi
	callq	command_line_arguments.Server.enrollClientConn
	.loc	8 122 3
	movq	%rbx, %rdi
	movq	%r14, %rsi
	callq	command_line_arguments.serverConn.initClient
	addq	$88, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
.Ltmp1026:
	.cfi_def_cfa_offset 32
	.loc	8 0 3 is_stmt 0
	popq	%r12
.Ltmp1027:
	.cfi_def_cfa_offset 24
	popq	%r14
.Ltmp1028:
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB34_4:
	.cfi_def_cfa_offset 128
.Ltmp1029:
	.loc	8 117 7 is_stmt 1
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp1030:
.Lfunc_end34:
	.size	command_line_arguments.Server.handleClient, .Lfunc_end34-command_line_arguments.Server.handleClient
	.cfi_endproc

	.section	.text.command_line_arguments.Server.removeClientConn,"ax",@progbits
	.globl	command_line_arguments.Server.removeClientConn
	.p2align	4, 0x90
	.type	command_line_arguments.Server.removeClientConn,@function
command_line_arguments.Server.removeClientConn:
.Lfunc_begin35:
	.loc	8 140 0
	.cfi_startproc
	.cfi_personality 3, __gccgo_personality_v0
	.cfi_lsda 3, .Lexception6
	leaq	-344(%rsp), %r11
	cmpq	%fs:112, %r11
	ja	.LBB35_2
	movq	%r10, %rax
	movabsq	$344, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB35_2:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$296, %rsp
	.cfi_def_cfa_offset 352
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rsi, 96(%rsp)
	movb	$0, 31(%rsp)
	movq	%rdi, 32(%rsp)
.Ltmp1072:
	.loc	8 141 3 prologue_end
	testq	%rdi, %rdi
	jne	.LBB35_4
.Ltmp1073:
.Ltmp1031:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp1032:
.Ltmp1074:
.LBB35_4:
	movq	32(%rsp), %rax
	leaq	80(%rax), %rbp
.Ltmp1033:
	.loc	8 141 15 is_stmt 0
	movq	%rbp, %rdi
	callq	sync.Mutex.Lock
.Ltmp1034:
.Ltmp1075:
	.loc	8 141 3
	cmpq	$0, 32(%rsp)
	jne	.LBB35_7
.Ltmp1076:
.Ltmp1035:
	.loc	8 142 9 is_stmt 1
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp1036:
.Ltmp1077:
.LBB35_7:
	.loc	8 142 2 is_stmt 0
	movq	%rbp, 128(%rsp)
.Ltmp1037:
	leaq	31(%rsp), %rdi
	leaq	128(%rsp), %rdx
	movl	$command_line_arguments.command_line_arguments..thunk17, %esi
	callq	runtime.deferproc
.Ltmp1038:
.Ltmp1078:
	.loc	8 0 2
	xorps	%xmm0, %xmm0
.Ltmp1079:
	movaps	%xmm0, 64(%rsp)
	.loc	8 141 3 is_stmt 1
	cmpq	$0, 32(%rsp)
	jne	.LBB35_10
.Ltmp1080:
.Ltmp1039:
	.loc	8 146 29
	movl	$6, %edi
	callq	__go_runtime_error
	xorps	%xmm0, %xmm0
.Ltmp1040:
.Ltmp1081:
.LBB35_10:
	movq	32(%rsp), %rax
	movq	64(%rax), %rsi
	movaps	%xmm0, 176(%rsp)
	movaps	%xmm0, 272(%rsp)
	movaps	%xmm0, 256(%rsp)
	movaps	%xmm0, 240(%rsp)
	movaps	%xmm0, 224(%rsp)
	movaps	%xmm0, 208(%rsp)
	movaps	%xmm0, 192(%rsp)
.Ltmp1041:
	leaq	192(%rsp), %rdx
	.loc	8 146 2 is_stmt 0
	movl	$type..map.6string.7int, %edi
	callq	runtime.mapiterinit
.Ltmp1042:
.Ltmp1082:
	.loc	8 0 2
	xorl	%r13d, %r13d
.Ltmp1083:
	movl	$0, %r12d
	movl	$0, %r14d
.Ltmp1084:
	.p2align	4, 0x90
.LBB35_12:
	.loc	8 146 2
	movq	192(%rsp), %rax
	testq	%rax, %rax
	je	.LBB35_35
.Ltmp1085:
	movups	(%rax), %xmm0
	movaps	%xmm0, 176(%rsp)
	movq	200(%rsp), %rax
	movq	(%rax), %rax
.Ltmp1086:
	.loc	8 0 2
	movaps	%xmm0, 64(%rsp)
	.loc	8 147 13 is_stmt 1
	cmpq	96(%rsp), %rax
	jne	.LBB35_34
.Ltmp1087:
	.loc	8 0 13 is_stmt 0
	movq	%r13, 40(%rsp)
	movq	%r12, 48(%rsp)
	movq	%r14, 56(%rsp)
	.loc	8 148 20 is_stmt 1
	leaq	1(%r12), %rbp
	cmpq	%r14, %rbp
	jbe	.LBB35_29
.Ltmp1088:
.Ltmp1045:
	movq	56(%rsp), %rax
.Ltmp1089:
	movq	%rax, 16(%rsp)
	movups	40(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$string..d, %esi
	leaq	136(%rsp), %rdi
	movq	%rbp, %rdx
	callq	runtime.growslice
.Ltmp1046:
.Ltmp1090:
	.loc	8 0 20 is_stmt 0
	movq	136(%rsp), %r15
	movq	144(%rsp), %rax
	movq	152(%rsp), %rcx
	movq	88(%rsp), %r13
.Ltmp1091:
	movq	%rbx, %rbp
	movq	80(%rsp), %r14
	jmp	.LBB35_17
.Ltmp1092:
	.p2align	4, 0x90
.LBB35_29:
	.loc	8 148 20
	cmpq	%r14, %rbp
	jg	.LBB35_31
.Ltmp1093:
	.loc	8 0 20
	movq	%rbp, %rax
	orq	%r14, %rax
	movq	%r13, %r15
	movq	%rbp, %rax
	movq	%r14, %rcx
	jns	.LBB35_17
.Ltmp1094:
.LBB35_31:
.Ltmp1043:
	.loc	8 148 20
	movl	$3, %edi
	callq	__go_runtime_error
.Ltmp1044:
	movq	88(%rsp), %r15
	movq	%r15, %r13
.Ltmp1095:
	.loc	8 0 20
	movq	%rbx, %rbp
	movq	80(%rsp), %rcx
	movq	%rcx, %r14
	movq	%rbx, %rax
.Ltmp1096:
.LBB35_17:
	.loc	8 148 20
	movq	%r15, 40(%rsp)
	movq	%rax, 48(%rsp)
	movq	%rcx, 56(%rsp)
	testq	%r12, %r12
	js	.LBB35_19
.Ltmp1097:
	.loc	8 0 20
	cmpq	%rax, %r12
	jl	.LBB35_20
.Ltmp1098:
.LBB35_19:
.Ltmp1047:
	.loc	8 148 20
	xorl	%edi, %edi
	callq	__go_runtime_error
.Ltmp1048:
	movq	112(%rsp), %r12
.Ltmp1099:
.LBB35_20:
	movq	%r12, %rax
	shlq	$4, %rax
	addq	%rax, %r15
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB35_21
.Ltmp1100:
.Ltmp1049:
	movl	$string..d, %edi
	movq	%r15, %rsi
	leaq	64(%rsp), %rdx
	callq	runtime.typedmemmove
.Ltmp1050:
	jmp	.LBB35_33
.Ltmp1101:
.LBB35_21:
	testq	%r15, %r15
	jne	.LBB35_23
.Ltmp1102:
.Ltmp1051:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp1052:
	movq	104(%rsp), %r15
.Ltmp1103:
.LBB35_23:
	movaps	64(%rsp), %xmm0
	movups	%xmm0, (%r15)
	movq	%r15, 104(%rsp)
.Ltmp1104:
.LBB35_33:
	.loc	8 0 20
	movq	%r13, 88(%rsp)
	.loc	8 148 18
	movq	40(%rsp), %r13
.Ltmp1105:
	.loc	8 0 18
	movq	%r12, 112(%rsp)
	.loc	8 148 18
	movq	48(%rsp), %r12
.Ltmp1106:
	.loc	8 0 18
	movq	%r14, 80(%rsp)
	.loc	8 148 18
	movq	56(%rsp), %r14
.Ltmp1107:
	.loc	8 0 18
	movq	%rbp, %rbx
.Ltmp1108:
.LBB35_34:
.Ltmp1053:
	.loc	8 146 2 is_stmt 1
	leaq	192(%rsp), %rdi
	callq	runtime.mapiternext
.Ltmp1054:
	jmp	.LBB35_12
.Ltmp1109:
.LBB35_35:
	.loc	8 0 2 is_stmt 0
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 64(%rsp)
.Ltmp1110:
	.loc	8 151 2 is_stmt 1
	testq	%r12, %r12
	jle	.LBB35_42
.Ltmp1111:
	.loc	8 0 2 is_stmt 0
	xorl	%ebx, %ebx
	leaq	160(%rsp), %r14
.Ltmp1112:
	.p2align	4, 0x90
.LBB35_37:
	movups	(%r13), %xmm0
	movaps	%xmm0, 64(%rsp)
	movq	32(%rsp), %rax
	movq	%rax, %rbp
	.loc	8 141 3 is_stmt 1
	testq	%rax, %rax
	jne	.LBB35_40
.Ltmp1113:
.Ltmp1056:
	.loc	8 152 11
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp1057:
.Ltmp1114:
	.loc	8 0 11 is_stmt 0
	movq	%r15, %rbp
.Ltmp1115:
.LBB35_40:
	.loc	8 152 11
	movq	64(%rbp), %rsi
	movaps	64(%rsp), %xmm0
	movaps	%xmm0, 160(%rsp)
.Ltmp1058:
	.loc	8 152 3
	movl	$type..map.6string.7int, %edi
	movq	%r14, %rdx
	callq	runtime.mapdelete
.Ltmp1059:
.Ltmp1116:
	.loc	8 151 2 is_stmt 1
	addq	$1, %rbx
	addq	$16, %r13
.Ltmp1117:
	.loc	8 0 2 is_stmt 0
	movq	%rbp, %r15
	.loc	8 151 2
	cmpq	%r12, %rbx
	jl	.LBB35_37
.Ltmp1118:
.LBB35_42:
	.loc	8 141 3 is_stmt 1
	cmpq	$0, 32(%rsp)
	jne	.LBB35_44
.Ltmp1119:
.Ltmp1061:
	.loc	8 154 10
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp1062:
.Ltmp1120:
.LBB35_44:
	movq	32(%rsp), %rax
	movq	72(%rax), %rsi
	movq	96(%rsp), %rax
	movq	%rax, 120(%rsp)
.Ltmp1063:
	leaq	120(%rsp), %rdx
	.loc	8 154 2 is_stmt 0
	movl	$type..map.6int.7.1command_line_arguments.serverConn, %edi
	callq	runtime.mapdelete
.Ltmp1064:
.Ltmp1121:
.LBB35_28:
	.loc	8 0 2
	movb	$1, %bl
	leaq	31(%rsp), %rbp
	jmp	.LBB35_48
.Ltmp1122:
.LBB35_26:
.Ltmp1065:
	jmp	.LBB35_27
.Ltmp1123:
.LBB35_24:
.Ltmp1060:
	jmp	.LBB35_27
.Ltmp1124:
.LBB35_25:
.Ltmp1055:
.LBB35_27:
.Ltmp1066:
	leaq	31(%rsp), %rdi
	.loc	8 155 1 is_stmt 1
	callq	runtime.checkdefer
.Ltmp1067:
	jmp	.LBB35_28
.Ltmp1125:
.LBB35_45:
.Ltmp1068:
	.loc	8 0 1 is_stmt 0
	movq	%rax, %r14
	xorl	%ebx, %ebx
	leaq	31(%rsp), %rbp
	jmp	.LBB35_48
.Ltmp1126:
.LBB35_47:
.Ltmp1071:
	.loc	8 155 1
	movq	%rbp, %rdi
	callq	runtime.checkdefer
.Ltmp1127:
	.p2align	4, 0x90
.LBB35_48:
.Ltmp1069:
	movq	%rbp, %rdi
	callq	runtime.deferreturn
.Ltmp1070:
.Ltmp1128:
	.loc	8 0 1
	testb	%bl, %bl
	je	.LBB35_51
.Ltmp1129:
	addq	$296, %rsp
.Ltmp1130:
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB35_51:
	.cfi_def_cfa_offset 352
.Ltmp1131:
	movq	%r14, %rdi
	callq	_Unwind_Resume
.Lfunc_end35:
	.size	command_line_arguments.Server.removeClientConn, .Lfunc_end35-command_line_arguments.Server.removeClientConn
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table35:
.Lexception6:
	.byte	255
	.byte	3
	.uleb128 .Lttbase6-.Lttbaseref6
.Lttbaseref6:
	.byte	1
	.uleb128 .Lcst_end6-.Lcst_begin6
.Lcst_begin6:
	.uleb128 .Lfunc_begin35-.Lfunc_begin35
	.uleb128 .Ltmp1031-.Lfunc_begin35
	.byte	0
	.byte	0
	.uleb128 .Ltmp1031-.Lfunc_begin35
	.uleb128 .Ltmp1042-.Ltmp1031
	.uleb128 .Ltmp1065-.Lfunc_begin35
	.byte	1
	.uleb128 .Ltmp1045-.Lfunc_begin35
	.uleb128 .Ltmp1054-.Ltmp1045
	.uleb128 .Ltmp1055-.Lfunc_begin35
	.byte	1
	.uleb128 .Ltmp1056-.Lfunc_begin35
	.uleb128 .Ltmp1059-.Ltmp1056
	.uleb128 .Ltmp1060-.Lfunc_begin35
	.byte	1
	.uleb128 .Ltmp1061-.Lfunc_begin35
	.uleb128 .Ltmp1064-.Ltmp1061
	.uleb128 .Ltmp1065-.Lfunc_begin35
	.byte	1
	.uleb128 .Ltmp1066-.Lfunc_begin35
	.uleb128 .Ltmp1067-.Ltmp1066
	.uleb128 .Ltmp1068-.Lfunc_begin35
	.byte	0
	.uleb128 .Ltmp1067-.Lfunc_begin35
	.uleb128 .Ltmp1069-.Ltmp1067
	.byte	0
	.byte	0
	.uleb128 .Ltmp1069-.Lfunc_begin35
	.uleb128 .Ltmp1070-.Ltmp1069
	.uleb128 .Ltmp1071-.Lfunc_begin35
	.byte	1
	.uleb128 .Ltmp1070-.Lfunc_begin35
	.uleb128 .Lfunc_end35-.Ltmp1070
	.byte	0
	.byte	0
.Lcst_end6:
	.byte	1
	.byte	0
	.p2align	2
	.long	0
.Lttbase6:
	.p2align	2

	.section	.text.command_line_arguments.Server.route,"ax",@progbits
	.globl	command_line_arguments.Server.route
	.p2align	4, 0x90
	.type	command_line_arguments.Server.route,@function
command_line_arguments.Server.route:
.Lfunc_begin36:
	.loc	8 171 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB36_2
	movq	%r10, %rax
	movabsq	$200, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB36_2:
.Ltmp1132:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	subq	$160, %rsp
	.cfi_def_cfa_offset 208
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	.loc	8 172 8 prologue_end
	testq	%rsi, %rsi
	je	.LBB36_12
.Ltmp1133:
	.loc	8 0 8 is_stmt 0
	movq	%rsi, %rbx
.Ltmp1134:
	movq	%rdi, %r14
.Ltmp1135:
	movq	40(%rsi), %rax
	movq	%rax, 144(%rsp)
	movups	24(%rsi), %xmm0
	movaps	%xmm0, 128(%rsp)
	leaq	128(%rsp), %rdi
	.loc	8 172 13
	callq	net.IP.IsMulticast
	.loc	8 172 2
	testb	$1, %al
	jne	.LBB36_11
.Ltmp1136:
	.loc	8 176 3 is_stmt 1
	testq	%r14, %r14
	je	.LBB36_12
.Ltmp1137:
	.loc	8 0 3 is_stmt 0
	leaq	24(%rbx), %rbp
	.loc	8 176 3
	leaq	80(%r14), %r15
	.loc	8 176 15
	movq	%r15, %rdi
	callq	sync.Mutex.Lock
.Ltmp1138:
	.loc	8 0 15
	movq	16(%rbp), %rax
	movq	%rax, 112(%rsp)
	movups	(%rbp), %xmm0
	movaps	%xmm0, 96(%rsp)
	leaq	96(%rsp), %rdi
	.loc	8 177 64 is_stmt 1
	callq	net.IP.String
	movq	%rax, 80(%rsp)
	movq	%rdx, 88(%rsp)
	.loc	8 177 37 is_stmt 0
	movq	64(%r14), %rsi
	leaq	80(%rsp), %rdx
	.loc	8 177 2
	movl	$type..map.6string.7int, %edi
	callq	runtime.mapaccess2
	movl	%edx, %ebp
.Ltmp1139:
	.loc	8 178 2 is_stmt 1
	testb	$1, %dl
	je	.LBB36_9
.Ltmp1140:
	.loc	8 0 2 is_stmt 0
	movq	(%rax), %r12
.Ltmp1141:
	movq	%r12, 32(%rsp)
.Ltmp1142:
	.loc	8 179 32 is_stmt 1
	movq	72(%r14), %rsi
	leaq	32(%rsp), %rdx
	.loc	8 179 3 is_stmt 0
	movl	$type..map.6int.7.1command_line_arguments.serverConn, %edi
	callq	runtime.mapaccess2
.Ltmp1143:
	.loc	8 180 3 is_stmt 1
	testb	$1, %dl
	jne	.LBB36_7
.Ltmp1144:
	.loc	8 184 8
	movl	$int..d, %edi
	callq	runtime.newobject
.Ltmp1145:
	movq	%r12, (%rax)
	movq	$int..d, 64(%rsp)
	movq	%rax, 72(%rsp)
	leaq	64(%rsp), %rax
	movq	%rax, 40(%rsp)
	movq	$1, 48(%rsp)
	movq	$1, 56(%rsp)
	movq	56(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	40(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.302, %edi
	movl	$80, %esi
	callq	log.Printf
	jmp	.LBB36_9
.Ltmp1146:
.LBB36_7:
	.loc	8 179 3
	movq	(%rax), %rdi
.Ltmp1147:
	.loc	8 181 14
	movq	%rbx, %rsi
	callq	command_line_arguments.serverConn.queueIP
.Ltmp1148:
.LBB36_9:
	.loc	8 187 15
	movq	%r15, %rdi
	callq	sync.Mutex.Unlock
	.loc	8 188 5
	testb	%bpl, %bpl
	jne	.LBB36_11
.Ltmp1149:
	.loc	8 0 5 is_stmt 0
	movq	%rbx, 24(%rsp)
	.loc	8 189 4 is_stmt 1
	movq	112(%r14), %rdi
	leaq	24(%rsp), %rsi
	.loc	8 189 21 is_stmt 0
	callq	runtime.chansend1
.Ltmp1150:
.LBB36_11:
	.loc	8 173 3 is_stmt 1
	addq	$160, %rsp
	.cfi_def_cfa_offset 48
	popq	%rbx
.Ltmp1151:
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r14
.Ltmp1152:
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp1153:
.LBB36_12:
	.cfi_def_cfa_offset 208
	.loc	8 0 3 is_stmt 0
	movl	$6, %edi
	callq	__go_runtime_error
.Lfunc_end36:
	.size	command_line_arguments.Server.route, .Lfunc_end36-command_line_arguments.Server.route
	.cfi_endproc

	.section	.text.command_line_arguments.Server.setAddrForClient,"ax",@progbits
	.globl	command_line_arguments.Server.setAddrForClient
	.p2align	4, 0x90
	.type	command_line_arguments.Server.setAddrForClient,@function
command_line_arguments.Server.setAddrForClient:
.Lfunc_begin37:
	.loc	8 133 0 is_stmt 1
	.cfi_startproc
	.cfi_personality 3, __gccgo_personality_v0
	.cfi_lsda 3, .Lexception7
	cmpq	%fs:112, %rsp
	ja	.LBB37_2
	movq	%r10, %rax
	movabsq	$72, %r10
	movabsq	$24, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB37_2:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	subq	$40, %rsp
	.cfi_def_cfa_offset 80
	.cfi_offset %rbx, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rsi, %r14
	movq	%rdi, %r15
	movb	$0, 15(%rsp)
.Ltmp1175:
	.loc	8 134 3 prologue_end
	testq	%rdi, %rdi
	jne	.LBB37_4
.Ltmp1176:
.Ltmp1154:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp1155:
.Ltmp1177:
.LBB37_4:
	leaq	80(%r15), %rbx
.Ltmp1156:
	.loc	8 134 15 is_stmt 0
	movq	%rbx, %rdi
	callq	sync.Mutex.Lock
.Ltmp1157:
.Ltmp1178:
	.loc	8 134 3
	testq	%r15, %r15
	jne	.LBB37_7
.Ltmp1179:
.Ltmp1158:
	.loc	8 135 9 is_stmt 1
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp1159:
.Ltmp1180:
.LBB37_7:
	.loc	8 135 2 is_stmt 0
	movq	%rbx, 16(%rsp)
.Ltmp1160:
	leaq	15(%rsp), %rdi
	leaq	16(%rsp), %rdx
	movl	$command_line_arguments.command_line_arguments..thunk16, %esi
	callq	runtime.deferproc
.Ltmp1161:
.Ltmp1181:
	.loc	8 0 2
	leaq	80(%rsp), %rdi
.Ltmp1162:
	.loc	8 137 26 is_stmt 1
	callq	net.IP.String
.Ltmp1163:
.Ltmp1182:
	.loc	8 0 26 is_stmt 0
	movq	%rax, 24(%rsp)
	movq	%rdx, 32(%rsp)
	.loc	8 134 3 is_stmt 1
	testq	%r15, %r15
	jne	.LBB37_11
.Ltmp1183:
.Ltmp1164:
	.loc	8 137 3
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp1165:
.Ltmp1184:
.LBB37_11:
	movq	64(%r15), %rsi
.Ltmp1166:
	leaq	24(%rsp), %rdx
	.loc	8 137 37 is_stmt 0
	movl	$type..map.6string.7int, %edi
	callq	runtime.mapassign
.Ltmp1167:
.Ltmp1185:
	movq	%r14, (%rax)
	movb	$1, %bpl
.Ltmp1186:
	.loc	8 0 37
	leaq	15(%rsp), %rbx
	jmp	.LBB37_18
.Ltmp1187:
.LBB37_13:
.Ltmp1168:
.Ltmp1169:
	leaq	15(%rsp), %rdi
	.loc	8 138 1 is_stmt 1
	callq	runtime.checkdefer
.Ltmp1170:
.Ltmp1188:
	.loc	8 0 1 is_stmt 0
	movb	$1, %bpl
.Ltmp1189:
	leaq	15(%rsp), %rbx
	jmp	.LBB37_18
.Ltmp1190:
.LBB37_15:
.Ltmp1171:
	movq	%rax, %r14
.Ltmp1191:
	xorl	%ebp, %ebp
	leaq	15(%rsp), %rbx
	jmp	.LBB37_18
.Ltmp1192:
.LBB37_17:
.Ltmp1174:
	.loc	8 138 1
	movq	%rbx, %rdi
	callq	runtime.checkdefer
.Ltmp1193:
	.p2align	4, 0x90
.LBB37_18:
.Ltmp1172:
	movq	%rbx, %rdi
	callq	runtime.deferreturn
.Ltmp1173:
.Ltmp1194:
	.loc	8 0 1
	testb	%bpl, %bpl
	je	.LBB37_21
.Ltmp1195:
	addq	$40, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
.Ltmp1196:
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB37_21:
	.cfi_def_cfa_offset 80
.Ltmp1197:
	movq	%r14, %rdi
	callq	_Unwind_Resume
.Lfunc_end37:
	.size	command_line_arguments.Server.setAddrForClient, .Lfunc_end37-command_line_arguments.Server.setAddrForClient
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table37:
.Lexception7:
	.byte	255
	.byte	3
	.uleb128 .Lttbase7-.Lttbaseref7
.Lttbaseref7:
	.byte	1
	.uleb128 .Lcst_end7-.Lcst_begin7
.Lcst_begin7:
	.uleb128 .Lfunc_begin37-.Lfunc_begin37
	.uleb128 .Ltmp1154-.Lfunc_begin37
	.byte	0
	.byte	0
	.uleb128 .Ltmp1154-.Lfunc_begin37
	.uleb128 .Ltmp1167-.Ltmp1154
	.uleb128 .Ltmp1168-.Lfunc_begin37
	.byte	1
	.uleb128 .Ltmp1169-.Lfunc_begin37
	.uleb128 .Ltmp1170-.Ltmp1169
	.uleb128 .Ltmp1171-.Lfunc_begin37
	.byte	0
	.uleb128 .Ltmp1170-.Lfunc_begin37
	.uleb128 .Ltmp1172-.Ltmp1170
	.byte	0
	.byte	0
	.uleb128 .Ltmp1172-.Lfunc_begin37
	.uleb128 .Ltmp1173-.Ltmp1172
	.uleb128 .Ltmp1174-.Lfunc_begin37
	.byte	1
	.uleb128 .Ltmp1173-.Lfunc_begin37
	.uleb128 .Lfunc_end37-.Ltmp1173
	.byte	0
	.byte	0
.Lcst_end7:
	.byte	1
	.byte	0
	.p2align	2
	.long	0
.Lttbase7:
	.p2align	2

	.section	.text.command_line_arguments.serverConn.initClient,"ax",@progbits
	.globl	command_line_arguments.serverConn.initClient
	.p2align	4, 0x90
	.type	command_line_arguments.serverConn.initClient,@function
command_line_arguments.serverConn.initClient:
.Lfunc_begin38:
	.loc	7 24 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB38_2
	movq	%r10, %rax
	movabsq	$184, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB38_2:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$136, %rsp
	.cfi_def_cfa_offset 192
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rsi, %r14
	movq	%rdi, %r13
.Ltmp1198:
	.loc	7 25 21 prologue_end
	movl	$type..chan.0.1command_line_arguments.IPPacket, %edi
	movl	$200, %esi
	callq	runtime.makechan
	.loc	7 25 3 is_stmt 0
	testq	%r13, %r13
	je	.LBB38_10
.Ltmp1199:
	.loc	7 25 19
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB38_4
.Ltmp1200:
	.loc	7 0 19
	leaq	24(%r13), %rdi
	.loc	7 25 19
	movq	%rax, %rsi
	callq	runtime.writebarrierptr
	.loc	7 27 3 is_stmt 1
	leaq	32(%r13), %rdi
	.loc	7 27 11 is_stmt 0
	cmpl	$0, runtime.writeBarrier(%rip)
	.loc	7 26 17 is_stmt 1
	movb	$1, 72(%r13)
	je	.LBB38_5
.Ltmp1201:
	.loc	7 27 11
	movq	%r14, %rsi
	callq	runtime.writebarrierptr
	jmp	.LBB38_8
.Ltmp1202:
.LBB38_4:
	.loc	7 25 19
	movq	%rax, 24(%r13)
	.loc	7 26 17
	movb	$1, 72(%r13)
	.loc	7 27 3
	leaq	32(%r13), %rdi
.Ltmp1203:
.LBB38_5:
	.loc	7 27 11 is_stmt 0
	movq	%r14, (%rdi)
.Ltmp1204:
.LBB38_8:
	.loc	7 0 11
	movq	(%r13), %rax
	movq	8(%r13), %rdi
	.loc	7 28 52 is_stmt 1
	callq	*32(%rax)
	.loc	7 28 65 is_stmt 0
	movq	%rdx, %rdi
	callq	*16(%rax)
	movq	%rax, %r15
	movq	%rdx, %r12
	.loc	7 28 77
	movq	16(%r13), %rbp
	.loc	7 28 6
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
	movq	%r15, 64(%rsp)
	movq	%r12, 72(%rsp)
	leaq	64(%rsp), %rdx
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movl	$int..d, %edi
	callq	runtime.newobject
	movq	%rbp, (%rax)
	movq	$string..d, 104(%rsp)
	movq	%rbx, 112(%rsp)
	movq	$int..d, 120(%rsp)
	movq	%rax, 128(%rsp)
	leaq	104(%rsp), %rax
	movq	%rax, 24(%rsp)
	movq	$2, 32(%rsp)
	movq	$2, 40(%rsp)
	movq	40(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	24(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.278, %edi
	movl	$28, %esi
	callq	log.Printf
	.loc	7 29 21 is_stmt 1
	testq	%r14, %r14
	je	.LBB38_10
.Ltmp1205:
	.loc	7 29 39 is_stmt 0
	movq	96(%r14), %rbp
	.loc	7 29 21
	addq	$56, %r14
.Ltmp1206:
	.loc	7 29 2
	movl	$type..struct.4.4x.5a0.0.1command_line_arguments.serverConn.2a1.0.1bool.2a2.0chan.0.1command_line_arguments.inboundIPPkt.5, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
	movq	%r13, 80(%rsp)
	movq	%r14, 88(%rsp)
	movq	%rbp, 96(%rsp)
	leaq	80(%rsp), %rdx
	movl	$type..struct.4.4x.5a0.0.1command_line_arguments.serverConn.2a1.0.1bool.2a2.0chan.0.1command_line_arguments.inboundIPPkt.5, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movl	$command_line_arguments.command_line_arguments..thunk8, %edi
	movq	%rbx, %rsi
	callq	__go_go
	.loc	7 30 2 is_stmt 1
	movl	$type..struct.4.4x.5a0.0.1command_line_arguments.serverConn.2a1.0.1bool.5, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
	movq	%r13, 48(%rsp)
	movq	%r14, 56(%rsp)
	leaq	48(%rsp), %rdx
	movl	$type..struct.4.4x.5a0.0.1command_line_arguments.serverConn.2a1.0.1bool.5, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movl	$command_line_arguments.command_line_arguments..thunk9, %edi
	movq	%rbx, %rsi
	callq	__go_go
	addq	$136, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
.Ltmp1207:
	.cfi_def_cfa_offset 32
	.loc	7 0 2 is_stmt 0
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp1208:
.LBB38_10:
	.cfi_def_cfa_offset 192
	movl	$6, %edi
	callq	__go_runtime_error
.Lfunc_end38:
	.size	command_line_arguments.serverConn.initClient, .Lfunc_end38-command_line_arguments.serverConn.initClient
	.cfi_endproc

	.section	.text.command_line_arguments.serverConn.queueIP,"ax",@progbits
	.globl	command_line_arguments.serverConn.queueIP
	.p2align	4, 0x90
	.type	command_line_arguments.serverConn.queueIP,@function
command_line_arguments.serverConn.queueIP:
.Lfunc_begin39:
	.loc	7 90 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB39_2
	movq	%r10, %rax
	movabsq	$248, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB39_2:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	subq	$224, %rsp
	.cfi_def_cfa_offset 256
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rsi, %r14
	movq	%rdi, %r15
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 208(%rsp)
	movaps	%xmm0, 192(%rsp)
	movaps	%xmm0, 176(%rsp)
	movaps	%xmm0, 160(%rsp)
	movaps	%xmm0, 144(%rsp)
	movaps	%xmm0, 128(%rsp)
	movaps	%xmm0, 112(%rsp)
	movaps	%xmm0, 96(%rsp)
.Ltmp1209:
	leaq	96(%rsp), %rdi
.Ltmp1210:
	.loc	7 91 2 prologue_end
	movl	$128, %esi
	movl	$2, %edx
	callq	runtime.newselect
	.loc	7 92 8
	testq	%r15, %r15
	je	.LBB39_6
.Ltmp1211:
	movq	24(%r15), %rsi
	movq	%r14, 32(%rsp)
	leaq	96(%rsp), %rbx
	leaq	32(%rsp), %rdx
	.loc	7 92 2 is_stmt 0
	movq	%rbx, %rdi
	callq	runtime.selectsend
	.loc	7 93 2 is_stmt 1
	movq	%rbx, %rdi
	callq	runtime.selectdefault
	.loc	7 91 2
	movq	%rbx, %rdi
	callq	runtime.selectgo
	testq	%rax, %rax
	je	.LBB39_5
.Ltmp1212:
	.loc	7 94 84
	movq	%r15, %rdi
	callq	command_line_arguments.serverConn.remoteAddressStr
	movq	%rax, %r15
.Ltmp1213:
	movq	%rdx, %r14
.Ltmp1214:
	.loc	7 94 7 is_stmt 0
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
	movq	%r15, 80(%rsp)
	movq	%r14, 88(%rsp)
	leaq	80(%rsp), %rdx
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movq	$string..d, 64(%rsp)
	movq	%rbx, 72(%rsp)
	leaq	64(%rsp), %rax
	movq	%rax, 40(%rsp)
	movq	$1, 48(%rsp)
	movq	$1, 56(%rsp)
	movq	56(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	40(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.289, %edi
	movl	$64, %esi
	callq	log.Printf
.LBB39_5:
	.loc	7 0 7
	addq	$224, %rsp
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB39_6:
	.cfi_def_cfa_offset 256
.Ltmp1215:
	.loc	7 92 8 is_stmt 1
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp1216:
.Lfunc_end39:
	.size	command_line_arguments.serverConn.queueIP, .Lfunc_end39-command_line_arguments.serverConn.queueIP
	.cfi_endproc

	.section	.text.command_line_arguments.serverConn.readRoutine,"ax",@progbits
	.globl	command_line_arguments.serverConn.readRoutine
	.p2align	4, 0x90
	.type	command_line_arguments.serverConn.readRoutine,@function
command_line_arguments.serverConn.readRoutine:
.Lfunc_begin40:
	.loc	7 50 0
	.cfi_startproc
	leaq	-360(%rsp), %r11
	cmpq	%fs:112, %r11
	ja	.LBB40_2
	movq	%r10, %rax
	movabsq	$360, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB40_2:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$312, %rsp
	.cfi_def_cfa_offset 368
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rdx, 64(%rsp)
.Ltmp1217:
	.loc	7 51 29 prologue_end
	testq	%rdi, %rdi
	je	.LBB40_41
.Ltmp1218:
	.loc	7 0 29 is_stmt 0
	movq	%rsi, %rbx
.Ltmp1219:
	movq	%rdi, %r13
.Ltmp1220:
	movq	(%rdi), %rax
	movq	8(%rdi), %rbp
	.loc	7 51 29
	testq	%rax, %rax
	je	.LBB40_4
.Ltmp1221:
	movq	(%rax), %rsi
	jmp	.LBB40_5
.Ltmp1222:
.LBB40_4:
	.loc	7 0 29
	xorl	%esi, %esi
.Ltmp1223:
.LBB40_5:
	.loc	7 51 29
	movl	$io.Reader..d, %edi
	callq	runtime.requireitab
	.loc	7 51 17
	movq	%rax, %rdi
	movq	%rbp, %rsi
	callq	encoding_gob.NewDecoder
	.loc	7 53 7 is_stmt 1
	testq	%rbx, %rbx
	je	.LBB40_41
.Ltmp1224:
	.loc	7 53 6 is_stmt 0
	cmpb	$0, (%rbx)
	jne	.LBB40_18
.Ltmp1225:
	.loc	7 0 6
	movq	%rax, %r12
.Ltmp1226:
	leaq	48(%r13), %r14
	movq	%rbx, 24(%rsp)
.Ltmp1227:
	.p2align	4, 0x90
.LBB40_36:
	.loc	7 53 23
	testb	$1, 72(%r13)
	je	.LBB40_18
.Ltmp1228:
	.loc	7 54 7 is_stmt 1
	movl	$github_com_twitchyliquid64_subnet_subnet_conn.PktType..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbp
.Ltmp1229:
	.loc	7 55 17
	movl	$type...1github_com_twitchyliquid64_subnet_subnet_conn.PktType, %esi
	movq	%r12, %rdi
	movq	%rax, %rdx
	callq	encoding_gob.Decoder.Decode
.Ltmp1230:
	.loc	7 56 10
	testq	%rax, %rax
	jne	.LBB40_14
.Ltmp1231:
	.loc	7 64 10
	movzbl	(%rbp), %eax
.Ltmp1232:
	.loc	7 0 10 is_stmt 0
	cmpb	$1, %al
	je	.LBB40_39
.Ltmp1233:
	cmpb	$2, %al
	jne	.LBB40_35
.Ltmp1234:
	.loc	7 66 8 is_stmt 1
	movl	$net.IP..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbp
.Ltmp1235:
	.loc	7 67 18
	movl	$type...1net.IP, %esi
	movq	%r12, %rdi
	movq	%rax, %rdx
	callq	encoding_gob.Decoder.Decode
.Ltmp1236:
	.loc	7 68 11
	testq	%rax, %rax
	jne	.LBB40_12
.Ltmp1237:
	.loc	7 0 11 is_stmt 0
	movups	(%r14), %xmm0
	movaps	%xmm0, 32(%rsp)
	movq	16(%r14), %rax
.Ltmp1238:
	movq	%rax, 48(%rsp)
	.loc	7 73 20 is_stmt 1
	movq	40(%rsp), %rbx
.Ltmp1239:
	leaq	1(%rbx), %rdx
	cmpq	%rax, %rdx
	jbe	.LBB40_24
.Ltmp1240:
	movq	48(%rsp), %rax
	movq	%rax, 16(%rsp)
	movaps	32(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$net.IP..d, %esi
	leaq	288(%rsp), %rdi
	callq	runtime.growslice
	movq	288(%rsp), %rcx
	movq	296(%rsp), %rdx
	movq	304(%rsp), %rax
	jmp	.LBB40_21
.Ltmp1241:
	.p2align	4, 0x90
.LBB40_39:
	.loc	7 77 8
	movl	$command_line_arguments.IPPacket..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbp
.Ltmp1242:
	.loc	7 78 18
	movl	$type...1command_line_arguments.IPPacket, %esi
	movq	%r12, %rdi
	movq	%rax, %rdx
	callq	encoding_gob.Decoder.Decode
.Ltmp1243:
	.loc	7 79 11
	testq	%rax, %rax
	jne	.LBB40_38
.Ltmp1244:
	.loc	7 85 58
	movq	16(%r13), %rbx
.Ltmp1245:
	.loc	7 85 20 is_stmt 0
	movl	$command_line_arguments..command_line_arguments.inboundIPPkt..d, %edi
	callq	runtime.newobject
.Ltmp1246:
	movq	%rax, %r15
	.loc	7 85 21
	movq	%rbp, 176(%rsp)
	movq	%rbx, 184(%rsp)
	movq	24(%rsp), %rbx
	.loc	7 85 20
	movl	$command_line_arguments..command_line_arguments.inboundIPPkt..d, %edi
	movq	%rax, %rsi
	leaq	176(%rsp), %rdx
	callq	runtime.typedmemmove
	movq	%r15, 72(%rsp)
	.loc	7 85 17
	movq	64(%rsp), %rdi
	leaq	72(%rsp), %rsi
	callq	runtime.chansend1
.Ltmp1247:
.LBB40_35:
	.loc	7 53 6 is_stmt 1
	cmpb	$0, (%rbx)
	je	.LBB40_36
	jmp	.LBB40_18
.Ltmp1248:
.LBB40_24:
	.loc	7 73 20
	cmpq	%rax, %rdx
	jg	.LBB40_42
.Ltmp1249:
	.loc	7 0 20 is_stmt 0
	movq	%rdx, %rcx
	orq	%rax, %rcx
	js	.LBB40_42
.Ltmp1250:
	.loc	7 73 20
	movq	32(%rsp), %rcx
.Ltmp1251:
.LBB40_21:
	movq	%rcx, 32(%rsp)
	movq	%rdx, 40(%rsp)
	movq	%rax, 48(%rsp)
	testq	%rbx, %rbx
	js	.LBB40_23
.Ltmp1252:
	.loc	7 0 20
	cmpq	%rdx, %rbx
	jge	.LBB40_23
.Ltmp1253:
	.loc	7 73 20
	leaq	(%rbx,%rbx,2), %rax
	leaq	(%rcx,%rax,8), %rsi
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB40_28
.Ltmp1254:
	movl	$net.IP..d, %edi
	movq	%rbp, %rdx
	callq	runtime.typedmemmove
	movq	24(%rsp), %rbx
	jmp	.LBB40_31
.Ltmp1255:
.LBB40_28:
	testq	%rsi, %rsi
	movq	24(%rsp), %rbx
	je	.LBB40_41
.Ltmp1256:
	movq	16(%rbp), %rax
	movq	%rax, 16(%rsi)
	movups	(%rbp), %xmm0
	movups	%xmm0, (%rsi)
.Ltmp1257:
.LBB40_31:
	.loc	7 0 20
	movq	48(%rsp), %rax
	movq	%rax, 96(%rsp)
	movaps	32(%rsp), %xmm0
	movaps	%xmm0, 80(%rsp)
	.loc	7 73 18
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB40_33
.Ltmp1258:
	movl	$type...6.7net.IP, %edi
	movq	%r14, %rsi
	leaq	80(%rsp), %rdx
	callq	runtime.typedmemmove
	jmp	.LBB40_34
.Ltmp1259:
.LBB40_33:
	movq	96(%rsp), %rax
	movq	%rax, 16(%r14)
	movaps	80(%rsp), %xmm0
	movups	%xmm0, (%r14)
.Ltmp1260:
.LBB40_34:
	.loc	7 74 31 is_stmt 1
	movq	16(%r13), %rsi
	.loc	7 74 5 is_stmt 0
	movq	32(%r13), %rdi
	.loc	7 74 12
	movq	16(%rbp), %rax
	movq	%rax, 16(%rsp)
	movups	(%rbp), %xmm0
	movups	%xmm0, (%rsp)
	callq	command_line_arguments.Server.setAddrForClient
.Ltmp1261:
	.loc	7 53 6 is_stmt 1
	cmpb	$0, (%rbx)
	je	.LBB40_36
	jmp	.LBB40_18
.Ltmp1262:
.LBB40_14:
	.loc	7 57 7
	cmpb	$0, (%rbx)
	jne	.LBB40_16
.Ltmp1263:
	.loc	7 58 46
	movq	%rdx, %rdi
	callq	*8(%rax)
.Ltmp1264:
	movq	%rax, %r15
	movq	%rdx, %r14
	.loc	7 58 9 is_stmt 0
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbp
.Ltmp1265:
	.loc	7 0 9
	movq	%r15, 272(%rsp)
	movq	%r14, 280(%rsp)
	leaq	272(%rsp), %rdx
	.loc	7 58 9
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movq	$string..d, 256(%rsp)
	movq	%rbp, 264(%rsp)
	leaq	256(%rsp), %rax
	movq	%rax, 104(%rsp)
	movq	$1, 112(%rsp)
	movq	$1, 120(%rsp)
	movq	120(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	104(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.285, %edi
	movl	$22, %esi
	callq	log.Printf
.Ltmp1266:
.LBB40_16:
	.loc	7 60 5 is_stmt 1
	movl	$1, %esi
	jmp	.LBB40_17
.Ltmp1267:
.LBB40_12:
	.loc	7 69 50
	movq	%rdx, %rdi
	callq	*8(%rax)
.Ltmp1268:
	movq	%rax, %r15
	movq	%rdx, %r14
	.loc	7 69 9 is_stmt 0
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbp
.Ltmp1269:
	.loc	7 0 9
	movq	%r15, 240(%rsp)
	movq	%r14, 248(%rsp)
	leaq	240(%rsp), %rdx
	.loc	7 69 9
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movq	$string..d, 224(%rsp)
	movq	%rbp, 232(%rsp)
	leaq	224(%rsp), %rax
	movq	%rax, 128(%rsp)
	movq	$1, 136(%rsp)
	movq	$1, 144(%rsp)
	movq	144(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	128(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.287, %edi
	movl	$27, %esi
	jmp	.LBB40_13
.Ltmp1270:
.LBB40_38:
	.loc	7 80 52 is_stmt 1
	movq	%rdx, %rdi
	callq	*8(%rax)
.Ltmp1271:
	movq	%rax, %r15
	movq	%rdx, %r14
	.loc	7 80 9 is_stmt 0
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbp
.Ltmp1272:
	.loc	7 0 9
	movq	%r15, 208(%rsp)
	movq	%r14, 216(%rsp)
	leaq	208(%rsp), %rdx
	.loc	7 80 9
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movq	$string..d, 192(%rsp)
	movq	%rbp, 200(%rsp)
	leaq	192(%rsp), %rax
	movq	%rax, 152(%rsp)
	movq	$1, 160(%rsp)
	movq	$1, 168(%rsp)
	movq	168(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	152(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.126, %edi
	movl	$29, %esi
.Ltmp1273:
.LBB40_13:
	.loc	7 0 9
	callq	log.Printf
	xorl	%esi, %esi
.Ltmp1274:
.LBB40_17:
	movq	%r13, %rdi
	callq	command_line_arguments.serverConn.hadError
.Ltmp1275:
.LBB40_18:
	addq	$312, %rsp
.Ltmp1276:
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
.Ltmp1277:
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB40_41:
	.cfi_def_cfa_offset 368
.Ltmp1278:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp1279:
.LBB40_23:
	.loc	7 73 20 is_stmt 1
	xorl	%edi, %edi
	callq	__go_runtime_error
.Ltmp1280:
.LBB40_42:
	movl	$3, %edi
	callq	__go_runtime_error
.Ltmp1281:
.Lfunc_end40:
	.size	command_line_arguments.serverConn.readRoutine, .Lfunc_end40-command_line_arguments.serverConn.readRoutine
	.cfi_endproc

	.section	.text.command_line_arguments.serverConn.remoteAddressStr,"ax",@progbits
	.globl	command_line_arguments.serverConn.remoteAddressStr
	.p2align	4, 0x90
	.type	command_line_arguments.serverConn.remoteAddressStr,@function
command_line_arguments.serverConn.remoteAddressStr:
.Lfunc_begin41:
	.loc	7 98 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB41_2
	movq	%r10, %rax
	movabsq	$24, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB41_2:
	subq	$24, %rsp
	.cfi_def_cfa_offset 32
.Ltmp1282:
	.loc	7 99 10 prologue_end
	testq	%rdi, %rdi
	je	.LBB41_6
.Ltmp1283:
	movq	56(%rdi), %rax
	.loc	7 99 24 is_stmt 0
	testq	%rax, %rax
	je	.LBB41_7
.Ltmp1284:
	.loc	7 0 24
	jle	.LBB41_8
.Ltmp1285:
	movq	48(%rdi), %rax
	movq	16(%rax), %rcx
	movq	%rcx, 16(%rsp)
	movups	(%rax), %xmm0
	movaps	%xmm0, (%rsp)
	movq	%rsp, %rdi
.Ltmp1286:
	.loc	7 102 25 is_stmt 1
	callq	net.IP.String
	.loc	7 102 2 is_stmt 0
	addq	$24, %rsp
	.cfi_def_cfa_offset 8
	retq
.LBB41_7:
	.cfi_def_cfa_offset 32
.Ltmp1287:
	.loc	7 100 3 is_stmt 1
	xorl	%eax, %eax
	xorl	%edx, %edx
	addq	$24, %rsp
	.cfi_def_cfa_offset 8
	retq
.Ltmp1288:
.LBB41_6:
	.cfi_def_cfa_offset 32
	.loc	7 99 10
	movl	$6, %edi
.Ltmp1289:
	callq	__go_runtime_error
.LBB41_8:
.Ltmp1290:
	.loc	7 102 22
	xorl	%edi, %edi
.Ltmp1291:
	callq	__go_runtime_error
.Ltmp1292:
.Lfunc_end41:
	.size	command_line_arguments.serverConn.remoteAddressStr, .Lfunc_end41-command_line_arguments.serverConn.remoteAddressStr
	.cfi_endproc

	.section	.text.command_line_arguments.serverConn.writeRoutine,"ax",@progbits
	.globl	command_line_arguments.serverConn.writeRoutine
	.p2align	4, 0x90
	.type	command_line_arguments.serverConn.writeRoutine,@function
command_line_arguments.serverConn.writeRoutine:
.Lfunc_begin42:
	.loc	7 33 0
	.cfi_startproc
	leaq	-264(%rsp), %r11
	cmpq	%fs:112, %r11
	ja	.LBB42_2
	movq	%r10, %rax
	movabsq	$264, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB42_2:
.Ltmp1293:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$216, %rsp
	.cfi_def_cfa_offset 272
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	.loc	7 34 29 prologue_end
	testq	%rdi, %rdi
	je	.LBB42_12
.Ltmp1294:
	.loc	7 0 29 is_stmt 0
	movq	%rsi, %r14
.Ltmp1295:
	movq	%rdi, %r15
.Ltmp1296:
	movq	(%rdi), %rax
	movq	8(%rdi), %rbx
	.loc	7 34 29
	testq	%rax, %rax
	je	.LBB42_4
.Ltmp1297:
	movq	(%rax), %rsi
	jmp	.LBB42_5
.Ltmp1298:
.LBB42_4:
	.loc	7 0 29
	xorl	%esi, %esi
.Ltmp1299:
.LBB42_5:
	.loc	7 34 29
	movl	$io.Writer..d, %edi
	callq	runtime.requireitab
	.loc	7 34 17
	movq	%rax, %rdi
	movq	%rbx, %rsi
	callq	encoding_gob.NewEncoder
	testq	%r14, %r14
	je	.LBB42_12
.Ltmp1300:
	.loc	7 0 17
	movq	%rax, %rbx
.Ltmp1301:
	leaq	128(%rsp), %r12
.Ltmp1302:
	.p2align	4, 0x90
.LBB42_7:
	.loc	7 36 6 is_stmt 1
	cmpb	$0, (%r14)
	jne	.LBB42_11
.Ltmp1303:
	.loc	7 36 23 is_stmt 0
	testb	$1, 72(%r15)
	je	.LBB42_11
.Ltmp1304:
	.loc	7 0 23
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 192(%rsp)
	movaps	%xmm0, 176(%rsp)
	movaps	%xmm0, 160(%rsp)
	movaps	%xmm0, 144(%rsp)
	movaps	%xmm0, 128(%rsp)
	.loc	7 37 3 is_stmt 1
	movl	$80, %esi
	movl	$1, %edx
	movq	%r12, %rdi
	callq	runtime.newselect
	.loc	7 38 18
	movq	24(%r15), %rsi
	movq	$0, 32(%rsp)
.Ltmp1305:
	.loc	7 38 3 is_stmt 0
	xorl	%ecx, %ecx
	movq	%r12, %rdi
	leaq	32(%rsp), %rdx
	callq	runtime.selectrecv
	.loc	7 37 3 is_stmt 1
	movq	%r12, %rdi
	callq	runtime.selectgo
.Ltmp1306:
	.loc	7 38 3
	movq	32(%rsp), %rbp
	.loc	7 39 24
	movl	$github_com_twitchyliquid64_subnet_subnet_conn.PktType..d, %edi
	callq	runtime.newobject
	movb	$1, (%rax)
	.loc	7 39 11 is_stmt 0
	movl	$github_com_twitchyliquid64_subnet_subnet_conn.PktType..d, %esi
	movq	%rbx, %rdi
	movq	%rax, %rdx
	callq	encoding_gob.Encoder.Encode
	.loc	7 40 18 is_stmt 1
	movl	$type...1command_line_arguments.IPPacket, %esi
	movq	%rbx, %rdi
	movq	%rbp, %rdx
	callq	encoding_gob.Encoder.Encode
	.loc	7 41 11
	testq	%rax, %rax
	je	.LBB42_7
.Ltmp1307:
	.loc	7 0 11 is_stmt 0
	movq	%rax, %rbp
.Ltmp1308:
	movq	%rdx, %r13
.Ltmp1309:
	movq	(%r15), %rax
	movq	8(%r15), %rdi
	.loc	7 42 50 is_stmt 1
	callq	*32(%rax)
	.loc	7 42 63 is_stmt 0
	movq	%rdx, %rdi
	callq	*16(%rax)
	movq	%rax, %rbx
.Ltmp1310:
	movq	%rdx, %r14
.Ltmp1311:
	.loc	7 42 77
	movq	%r13, %rdi
	callq	*8(%rbp)
	movq	%rax, %r13
.Ltmp1312:
	movq	%rdx, %r12
	.loc	7 42 9
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbp
	movq	%rbx, 80(%rsp)
	movq	%r14, 88(%rsp)
	leaq	80(%rsp), %rdx
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
	movq	%r13, 64(%rsp)
	movq	%r12, 72(%rsp)
	leaq	64(%rsp), %rdx
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movq	$string..d, 96(%rsp)
	movq	%rbp, 104(%rsp)
	movq	$string..d, 112(%rsp)
	movq	%rbx, 120(%rsp)
	leaq	96(%rsp), %rax
	movq	%rax, 40(%rsp)
	movq	$2, 48(%rsp)
	movq	$2, 56(%rsp)
	movq	56(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	40(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.283, %edi
	movl	$23, %esi
	callq	log.Printf
	.loc	7 43 6 is_stmt 1
	xorl	%esi, %esi
	movq	%r15, %rdi
	callq	command_line_arguments.serverConn.hadError
.Ltmp1313:
.LBB42_11:
	.loc	7 0 6 is_stmt 0
	addq	$216, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
.Ltmp1314:
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB42_12:
	.cfi_def_cfa_offset 272
	movl	$6, %edi
	callq	__go_runtime_error
.Lfunc_end42:
	.size	command_line_arguments.serverConn.writeRoutine, .Lfunc_end42-command_line_arguments.serverConn.writeRoutine
	.cfi_endproc

	.section	.text.command_line_arguments.command_line_arguments..thunk8,"ax",@progbits
	.p2align	4, 0x90
	.type	command_line_arguments.command_line_arguments..thunk8,@function
command_line_arguments.command_line_arguments..thunk8:
.Lfunc_begin43:
	.loc	7 29 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB43_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB43_2:
	pushq	%rax
	.cfi_def_cfa_offset 16
.Ltmp1315:
	.loc	7 29 2 prologue_end
	movq	(%rdi), %rax
	movq	8(%rdi), %rsi
	movq	16(%rdi), %rdx
	movq	%rax, %rdi
.Ltmp1316:
	callq	command_line_arguments.serverConn.readRoutine
	popq	%rax
	.cfi_def_cfa_offset 8
	retq
.Ltmp1317:
.Lfunc_end43:
	.size	command_line_arguments.command_line_arguments..thunk8, .Lfunc_end43-command_line_arguments.command_line_arguments..thunk8
	.cfi_endproc

	.section	.text.command_line_arguments.command_line_arguments..thunk9,"ax",@progbits
	.p2align	4, 0x90
	.type	command_line_arguments.command_line_arguments..thunk9,@function
command_line_arguments.command_line_arguments..thunk9:
.Lfunc_begin44:
	.loc	7 30 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB44_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB44_2:
	pushq	%rax
	.cfi_def_cfa_offset 16
.Ltmp1318:
	.loc	7 30 2 prologue_end
	movq	(%rdi), %rax
	movq	8(%rdi), %rsi
	movq	%rax, %rdi
.Ltmp1319:
	callq	command_line_arguments.serverConn.writeRoutine
	popq	%rax
	.cfi_def_cfa_offset 8
	retq
.Ltmp1320:
.Lfunc_end44:
	.size	command_line_arguments.command_line_arguments..thunk9, .Lfunc_end44-command_line_arguments.command_line_arguments..thunk9
	.cfi_endproc

	.section	.text.command_line_arguments.NewServer,"ax",@progbits
	.globl	command_line_arguments.NewServer
	.p2align	4, 0x90
	.type	command_line_arguments.NewServer,@function
command_line_arguments.NewServer:
.Lfunc_begin45:
	.loc	8 39 0
	.cfi_startproc
	leaq	-664(%rsp), %r11
	cmpq	%fs:112, %r11
	ja	.LBB45_2
	movq	%r10, %rax
	movabsq	$664, %r10
	movabsq	$80, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB45_2:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$616, %rsp
	.cfi_def_cfa_offset 672
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%r8, %r14
	movq	%rcx, %r15
	movq	%rdx, %r12
	movq	%rsi, %r13
	movq	%rdi, %rbx
.Ltmp1321:
	.loc	8 41 23 prologue_end
	movq	704(%rsp), %rsi
	movq	712(%rsp), %rdx
	movq	720(%rsp), %rcx
	movq	728(%rsp), %r8
	movaps	736(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	leaq	232(%rsp), %rdi
.Ltmp1322:
	callq	github_com_twitchyliquid64_subnet_subnet_conn.TLSConfig
	movq	240(%rsp), %rax
.Ltmp1323:
	.loc	8 42 9
	testq	%rax, %rax
	je	.LBB45_4
.Ltmp1324:
	.loc	8 41 23
	movq	248(%rsp), %rcx
.Ltmp1325:
	.loc	8 43 3
	movq	$0, (%rbx)
	movq	%rax, 8(%rbx)
	movq	%rcx, 16(%rbx)
	jmp	.LBB45_8
.Ltmp1326:
.LBB45_4:
	.loc	8 0 3 is_stmt 0
	leaq	672(%rsp), %rax
.Ltmp1327:
	movq	232(%rsp), %rbp
	.loc	8 46 34 is_stmt 1
	movq	(%rax), %rsi
	movq	8(%rax), %rdx
	leaq	368(%rsp), %rdi
.Ltmp1328:
	callq	net.ParseCIDR
.Ltmp1329:
	movq	392(%rsp), %rdx
	movq	400(%rsp), %rax
.Ltmp1330:
	movq	408(%rsp), %rdi
.Ltmp1331:
	.loc	8 0 34 is_stmt 0
	movups	368(%rsp), %xmm0
	movaps	%xmm0, 176(%rsp)
	movq	384(%rsp), %rcx
	movq	%rcx, 192(%rsp)
	.loc	8 47 9 is_stmt 1
	testq	%rax, %rax
	je	.LBB45_9
.Ltmp1332:
	.loc	8 48 65
	callq	*8(%rax)
.Ltmp1333:
	.loc	8 48 57 is_stmt 0
	movups	.Lconst.84(%rip), %xmm0
	movaps	%xmm0, 304(%rsp)
	movq	%rax, 320(%rsp)
	movq	%rdx, 328(%rsp)
	movaps	304(%rsp), %xmm0
	movaps	320(%rsp), %xmm1
	jmp	.LBB45_6
.Ltmp1334:
.LBB45_9:
	.loc	8 0 57
	movq	%rdx, 112(%rsp)
	leaq	688(%rsp), %rax
	.loc	8 51 21 is_stmt 1
	movq	(%rax), %rsi
	movq	8(%rax), %rdx
	leaq	208(%rsp), %rdi
.Ltmp1335:
	callq	github_com_twitchyliquid64_subnet_vendor_github_com_songgao_water.NewTUN
	movq	216(%rsp), %rax
.Ltmp1336:
	.loc	8 52 9
	testq	%rax, %rax
	je	.LBB45_11
.Ltmp1337:
	.loc	8 51 21
	movq	224(%rsp), %rdi
.Ltmp1338:
	.loc	8 53 57
	callq	*8(%rax)
.Ltmp1339:
	.loc	8 53 49 is_stmt 0
	movups	.Lconst.87(%rip), %xmm0
	movaps	%xmm0, 336(%rsp)
	movq	%rax, 352(%rsp)
	movq	%rdx, 360(%rsp)
	movaps	336(%rsp), %xmm0
	movaps	352(%rsp), %xmm1
.Ltmp1340:
.LBB45_6:
	.loc	8 0 49
	movups	%xmm1, 16(%rsp)
	movups	%xmm0, (%rsp)
	xorl	%edi, %edi
.Ltmp1341:
	callq	runtime.concatstring2
.Ltmp1342:
	movq	%rax, %rdi
	movq	%rdx, %rsi
	callq	errors.New
.Ltmp1343:
	movq	$0, (%rbx)
.Ltmp1344:
.LBB45_7:
	movq	%rax, 8(%rbx)
	movq	%rdx, 16(%rbx)
.Ltmp1345:
.LBB45_8:
	movq	%rbx, %rax
	addq	$616, %rsp
.Ltmp1346:
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
.Ltmp1347:
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
.Ltmp1348:
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB45_11:
	.cfi_def_cfa_offset 672
.Ltmp1349:
	movq	208(%rsp), %rdi
.Ltmp1350:
	.loc	8 56 39 is_stmt 1
	movq	%rdi, 104(%rsp)
.Ltmp1351:
	callq	github_com_twitchyliquid64_subnet_vendor_github_com_songgao_water.Interface.Name
.Ltmp1352:
	movq	%rax, 64(%rsp)
	movq	%rdx, 56(%rsp)
	.loc	8 56 6 is_stmt 0
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rbp, 96(%rsp)
	movq	%rax, %rbp
	movq	64(%rsp), %rax
	movq	%rax, 160(%rsp)
	movq	56(%rsp), %rax
	movq	%rax, 168(%rsp)
	leaq	160(%rsp), %rdx
	movl	$string..d, %edi
	movq	%rbp, %rsi
	callq	runtime.typedmemmove
	movq	$string..d, 144(%rsp)
	movq	%rbp, 152(%rsp)
	leaq	144(%rsp), %rax
	movq	%rax, 120(%rsp)
	movq	$1, 128(%rsp)
	movq	$1, 136(%rsp)
	movq	136(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	120(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.88, %edi
	movl	$17, %esi
	callq	log.Printf
	.loc	8 63 22 is_stmt 1
	movl	$type..chan.0.1command_line_arguments.inboundIPPkt, %edi
	movl	$400, %esi
	callq	runtime.makechan
	movq	%rax, 64(%rsp)
	.loc	8 64 22
	movl	$type..chan.0.1command_line_arguments.IPPacket, %edi
	movl	$150, %esi
	callq	runtime.makechan
	movq	%rax, 56(%rsp)
	.loc	8 65 22
	movl	$type..chan.0.1command_line_arguments.IPPacket, %edi
	movl	$150, %esi
	callq	runtime.makechan
	movq	%rax, 88(%rsp)
	.loc	8 66 22
	movl	$type..map.6string.7int, %edi
	xorl	%esi, %esi
	movl	$24, %edx
	movl	$16, %ecx
	xorl	%r8d, %r8d
	callq	__go_construct_map
	movq	%rax, 80(%rsp)
	.loc	8 67 22
	movl	$type..map.6int.7.1command_line_arguments.serverConn, %edi
	xorl	%esi, %esi
	movl	$16, %edx
	movl	$8, %ecx
	xorl	%r8d, %r8d
	callq	__go_construct_map
	movq	%rax, 72(%rsp)
	.loc	8 58 7
	movl	$command_line_arguments.Server..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbp
.Ltmp1353:
	.loc	8 58 8 is_stmt 0
	movq	96(%rsp), %rax
	movq	%rax, 416(%rsp)
	xorps	%xmm0, %xmm0
	movups	%xmm0, 424(%rsp)
	movaps	176(%rsp), %xmm1
	movups	%xmm1, 440(%rsp)
	movq	192(%rsp), %rax
	movq	%rax, 456(%rsp)
	movq	112(%rsp), %rax
	movq	%rax, 464(%rsp)
	movb	$0, 472(%rsp)
	movq	80(%rsp), %rax
	movq	%rax, 480(%rsp)
	movq	72(%rsp), %rax
	movq	%rax, 488(%rsp)
	movups	%xmm0, 496(%rsp)
	movq	64(%rsp), %rax
	movq	%rax, 512(%rsp)
	movq	56(%rsp), %rax
	movq	%rax, 520(%rsp)
	movq	88(%rsp), %rax
	movq	%rax, 528(%rsp)
	movq	104(%rsp), %rax
	movq	%rax, 536(%rsp)
	movups	%xmm0, 592(%rsp)
	movups	%xmm0, 576(%rsp)
	movups	%xmm0, 560(%rsp)
	movups	%xmm0, 544(%rsp)
	movq	$0, 608(%rsp)
	leaq	416(%rsp), %rdx
	.loc	8 58 7
	movl	$command_line_arguments.Server..d, %edi
	movq	%rbp, %rsi
	callq	runtime.typedmemmove
	.loc	8 70 19 is_stmt 1
	movq	%r13, 256(%rsp)
	movq	%r12, 264(%rsp)
	movups	.Lconst.97(%rip), %xmm0
	movups	%xmm0, 272(%rsp)
	movq	%r15, 288(%rsp)
	movq	%r14, 296(%rsp)
	movups	256(%rsp), %xmm0
	movups	272(%rsp), %xmm1
	movups	288(%rsp), %xmm2
	movups	%xmm2, 32(%rsp)
	movups	%xmm1, 16(%rsp)
	movups	%xmm0, (%rsp)
	xorl	%edi, %edi
	callq	runtime.concatstring3
	.loc	8 70 13 is_stmt 0
	movq	%rbp, %rdi
	movq	%rax, %rsi
	callq	command_line_arguments.Server.Init
.Ltmp1354:
	.loc	8 70 2
	movq	%rbp, (%rbx)
	jmp	.LBB45_7
.Ltmp1355:
.Lfunc_end45:
	.size	command_line_arguments.NewServer, .Lfunc_end45-command_line_arguments.NewServer
	.cfi_endproc

	.section	.text.command_line_arguments.command_line_arguments..thunk10,"ax",@progbits
	.p2align	4, 0x90
	.type	command_line_arguments.command_line_arguments..thunk10,@function
command_line_arguments.command_line_arguments..thunk10:
.Lfunc_begin46:
	.loc	8 89 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB46_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB46_2:
	pushq	%rax
	.cfi_def_cfa_offset 16
.Ltmp1356:
	.loc	8 89 2 prologue_end
	movq	(%rdi), %rdi
.Ltmp1357:
	callq	command_line_arguments.Server.acceptRoutine
	popq	%rax
	.cfi_def_cfa_offset 8
	retq
.Ltmp1358:
.Lfunc_end46:
	.size	command_line_arguments.command_line_arguments..thunk10, .Lfunc_end46-command_line_arguments.command_line_arguments..thunk10
	.cfi_endproc

	.section	.text.command_line_arguments.command_line_arguments..thunk11,"ax",@progbits
	.p2align	4, 0x90
	.type	command_line_arguments.command_line_arguments..thunk11,@function
command_line_arguments.command_line_arguments..thunk11:
.Lfunc_begin47:
	.loc	8 90 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB47_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB47_2:
	pushq	%rax
	.cfi_def_cfa_offset 16
.Ltmp1359:
	.loc	8 90 2 prologue_end
	movq	(%rdi), %rdi
.Ltmp1360:
	callq	command_line_arguments.Server.dispatchRoutine
	popq	%rax
	.cfi_def_cfa_offset 8
	retq
.Ltmp1361:
.Lfunc_end47:
	.size	command_line_arguments.command_line_arguments..thunk11, .Lfunc_end47-command_line_arguments.command_line_arguments..thunk11
	.cfi_endproc

	.section	.text.command_line_arguments.command_line_arguments..thunk12,"ax",@progbits
	.p2align	4, 0x90
	.type	command_line_arguments.command_line_arguments..thunk12,@function
command_line_arguments.command_line_arguments..thunk12:
.Lfunc_begin48:
	.loc	8 91 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB48_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB48_2:
	pushq	%rax
	.cfi_def_cfa_offset 16
.Ltmp1362:
	.loc	8 91 2 prologue_end
	movq	(%rdi), %rax
	movq	8(%rdi), %rsi
	movq	16(%rdi), %rdx
	movq	24(%rdi), %rcx
	movq	%rax, %rdi
.Ltmp1363:
	callq	command_line_arguments.devWriteRoutine
	popq	%rax
	.cfi_def_cfa_offset 8
	retq
.Ltmp1364:
.Lfunc_end48:
	.size	command_line_arguments.command_line_arguments..thunk12, .Lfunc_end48-command_line_arguments.command_line_arguments..thunk12
	.cfi_endproc

	.section	.text.command_line_arguments.command_line_arguments..thunk13,"ax",@progbits
	.p2align	4, 0x90
	.type	command_line_arguments.command_line_arguments..thunk13,@function
command_line_arguments.command_line_arguments..thunk13:
.Lfunc_begin49:
	.loc	8 92 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB49_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB49_2:
	pushq	%rax
	.cfi_def_cfa_offset 16
.Ltmp1365:
	.loc	8 92 2 prologue_end
	movq	(%rdi), %rax
	movq	8(%rdi), %rsi
	movq	16(%rdi), %rdx
	movq	24(%rdi), %rcx
	movq	%rax, %rdi
.Ltmp1366:
	callq	command_line_arguments.devReadRoutine
	popq	%rax
	.cfi_def_cfa_offset 8
	retq
.Ltmp1367:
.Lfunc_end49:
	.size	command_line_arguments.command_line_arguments..thunk13, .Lfunc_end49-command_line_arguments.command_line_arguments..thunk13
	.cfi_endproc

	.section	.text.command_line_arguments.command_line_arguments..thunk14,"ax",@progbits
	.p2align	4, 0x90
	.type	command_line_arguments.command_line_arguments..thunk14,@function
command_line_arguments.command_line_arguments..thunk14:
.Lfunc_begin50:
	.loc	8 99 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB50_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB50_2:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
.Ltmp1368:
	.loc	8 99 2 prologue_end
	movl	$.Ltmp1369, %edi
	callq	runtime.setdeferretaddr
	testb	$1, %al
	jne	.LBB50_4
.Ltmp1370:
	movq	(%rbx), %rdi
	callq	sync.WaitGroup.Done
.Ltmp1371:
.Ltmp1369:
.LBB50_4:
	xorl	%eax, %eax
	popq	%rbx
.Ltmp1372:
	.cfi_def_cfa_offset 8
	retq
.Ltmp1373:
.Lfunc_end50:
	.size	command_line_arguments.command_line_arguments..thunk14, .Lfunc_end50-command_line_arguments.command_line_arguments..thunk14
	.cfi_endproc

	.section	.text.command_line_arguments.command_line_arguments..thunk15,"ax",@progbits
	.p2align	4, 0x90
	.type	command_line_arguments.command_line_arguments..thunk15,@function
command_line_arguments.command_line_arguments..thunk15:
.Lfunc_begin51:
	.loc	8 127 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB51_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB51_2:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
.Ltmp1374:
	.loc	8 127 2 prologue_end
	movl	$.Ltmp1375, %edi
	callq	runtime.setdeferretaddr
	testb	$1, %al
	jne	.LBB51_4
.Ltmp1376:
	movq	(%rbx), %rdi
	callq	sync.Mutex.Unlock
.Ltmp1377:
.Ltmp1375:
.LBB51_4:
	xorl	%eax, %eax
	popq	%rbx
.Ltmp1378:
	.cfi_def_cfa_offset 8
	retq
.Ltmp1379:
.Lfunc_end51:
	.size	command_line_arguments.command_line_arguments..thunk15, .Lfunc_end51-command_line_arguments.command_line_arguments..thunk15
	.cfi_endproc

	.section	.text.command_line_arguments.command_line_arguments..thunk16,"ax",@progbits
	.p2align	4, 0x90
	.type	command_line_arguments.command_line_arguments..thunk16,@function
command_line_arguments.command_line_arguments..thunk16:
.Lfunc_begin52:
	.loc	8 135 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB52_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB52_2:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
.Ltmp1380:
	.loc	8 135 2 prologue_end
	movl	$.Ltmp1381, %edi
	callq	runtime.setdeferretaddr
	testb	$1, %al
	jne	.LBB52_4
.Ltmp1382:
	movq	(%rbx), %rdi
	callq	sync.Mutex.Unlock
.Ltmp1383:
.Ltmp1381:
.LBB52_4:
	xorl	%eax, %eax
	popq	%rbx
.Ltmp1384:
	.cfi_def_cfa_offset 8
	retq
.Ltmp1385:
.Lfunc_end52:
	.size	command_line_arguments.command_line_arguments..thunk16, .Lfunc_end52-command_line_arguments.command_line_arguments..thunk16
	.cfi_endproc

	.section	.text.command_line_arguments.command_line_arguments..thunk17,"ax",@progbits
	.p2align	4, 0x90
	.type	command_line_arguments.command_line_arguments..thunk17,@function
command_line_arguments.command_line_arguments..thunk17:
.Lfunc_begin53:
	.loc	8 142 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB53_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB53_2:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
.Ltmp1386:
	.loc	8 142 2 prologue_end
	movl	$.Ltmp1387, %edi
	callq	runtime.setdeferretaddr
	testb	$1, %al
	jne	.LBB53_4
.Ltmp1388:
	movq	(%rbx), %rdi
	callq	sync.Mutex.Unlock
.Ltmp1389:
.Ltmp1387:
.LBB53_4:
	xorl	%eax, %eax
	popq	%rbx
.Ltmp1390:
	.cfi_def_cfa_offset 8
	retq
.Ltmp1391:
.Lfunc_end53:
	.size	command_line_arguments.command_line_arguments..thunk17, .Lfunc_end53-command_line_arguments.command_line_arguments..thunk17
	.cfi_endproc

	.section	.text.command_line_arguments.devReadRoutine,"ax",@progbits
	.p2align	4, 0x90
	.type	command_line_arguments.devReadRoutine,@function
command_line_arguments.devReadRoutine:
.Lfunc_begin54:
	.file	9 "./tun_service_routines.go"
	.loc	9 11 0
	.cfi_startproc
	.cfi_personality 3, __gccgo_personality_v0
	.cfi_lsda 3, .Lexception8
	leaq	-456(%rsp), %r11
	cmpq	%fs:112, %r11
	ja	.LBB54_2
	movabsq	$456, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
.LBB54_2:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$408, %rsp
	.cfi_def_cfa_offset 464
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rcx, %r15
	movq	%rdx, %rbp
	movq	%rsi, 80(%rsp)
	movq	%rdi, 88(%rsp)
	movb	$0, 39(%rsp)
.Ltmp1392:
.Ltmp1444:
	.loc	9 12 4 prologue_end
	movl	$1, %esi
	movq	%rdx, %rdi
	callq	sync.WaitGroup.Add
.Ltmp1393:
.Ltmp1445:
	.loc	9 13 2
	movq	%rbp, 112(%rsp)
.Ltmp1394:
	leaq	39(%rsp), %rdi
	leaq	112(%rsp), %rdx
	movl	$command_line_arguments.command_line_arguments..thunk18, %esi
	callq	runtime.deferproc
.Ltmp1395:
.Ltmp1446:
	.loc	9 0 2 is_stmt 0
	jmp	.LBB54_5
.Ltmp1447:
	.p2align	4, 0x90
.LBB54_38:
	movq	%r14, %rbx
.Ltmp1448:
.LBB54_5:
	movq	%r15, %r14
	testq	%r15, %r15
	jne	.LBB54_7
.Ltmp1449:
.Ltmp1396:
	.loc	9 15 7 is_stmt 1
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp1397:
	movq	%rbx, %r14
.Ltmp1450:
.LBB54_7:
	.loc	9 0 7 is_stmt 0
	movb	$1, %r12b
	.loc	9 15 6
	cmpb	$0, (%r14)
	jne	.LBB54_8
.Ltmp1451:
.Ltmp1398:
	.loc	9 16 13 is_stmt 1
	movl	$uint8..d, %esi
	movl	$4096, %edx
	movl	$4096, %ecx
	leaq	328(%rsp), %rdi
	callq	runtime.makeslice
.Ltmp1399:
.Ltmp1452:
	.loc	9 0 13 is_stmt 0
	movq	344(%rsp), %rax
	movq	%rax, 64(%rsp)
	movups	328(%rsp), %xmm0
	movaps	%xmm0, 48(%rsp)
.Ltmp1400:
	.loc	9 17 16 is_stmt 1
	movq	64(%rsp), %rax
	movq	%rax, 16(%rsp)
	movaps	48(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	leaq	248(%rsp), %rdi
	movq	88(%rsp), %rsi
	callq	github_com_twitchyliquid64_subnet_vendor_github_com_songgao_water.Interface.Read..stub
.Ltmp1401:
.Ltmp1453:
	movq	256(%rsp), %rbx
.Ltmp1454:
	.loc	9 18 10
	testq	%rbx, %rbx
	jne	.LBB54_16
.Ltmp1455:
	.loc	9 0 10 is_stmt 0
	movq	248(%rsp), %r12
.Ltmp1456:
	.loc	9 27 46 is_stmt 1
	movq	%r12, %rbx
.Ltmp1457:
	shrq	$63, %rbx
	.loc	9 27 40 is_stmt 0
	movq	64(%rsp), %rax
	.loc	9 27 46
	cmpq	%rax, %r12
	setg	%cl
	orb	%bl, %cl
	movq	%rax, %rdx
	shrq	$63, %rdx
	orl	%ebx, %edx
	orb	%cl, %dl
	je	.LBB54_40
.Ltmp1458:
.Ltmp1421:
	movl	$3, %edi
	callq	__go_runtime_error
.Ltmp1422:
	jmp	.LBB54_29
.Ltmp1459:
	.p2align	4, 0x90
.LBB54_40:
	.loc	9 27 40
	movq	48(%rsp), %rcx
	movq	%rcx, 144(%rsp)
	movq	%r12, 152(%rsp)
	movq	%rax, 160(%rsp)
.Ltmp1460:
.LBB54_29:
.Ltmp1423:
	.loc	9 27 24
	movq	160(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	144(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	leaq	304(%rsp), %rdi
	callq	github_com_twitchyliquid64_subnet_vendor_github_com_songgao_water_waterutil.IPv4Destination
.Ltmp1424:
.Ltmp1461:
	.loc	9 0 24
	movq	320(%rsp), %rax
	movq	%rax, 240(%rsp)
	movups	304(%rsp), %xmm0
	movaps	%xmm0, 224(%rsp)
	.loc	9 28 37 is_stmt 1
	movq	64(%rsp), %rax
	.loc	9 28 43 is_stmt 0
	cmpq	%rax, %r12
	setg	%cl
	orb	%bl, %cl
	movq	%rax, %rdx
	shrq	$63, %rdx
	orl	%ebx, %edx
	orb	%cl, %dl
	je	.LBB54_41
.Ltmp1462:
.Ltmp1425:
	movl	$3, %edi
	callq	__go_runtime_error
.Ltmp1426:
	jmp	.LBB54_32
.Ltmp1463:
	.p2align	4, 0x90
.LBB54_41:
	.loc	9 28 37
	movq	48(%rsp), %rcx
	movq	%rcx, 120(%rsp)
	movq	%r12, 128(%rsp)
	movq	%rax, 136(%rsp)
.Ltmp1464:
.LBB54_32:
.Ltmp1427:
	.loc	9 28 24
	movq	136(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	120(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	callq	github_com_twitchyliquid64_subnet_vendor_github_com_songgao_water_waterutil.IPv4Protocol
.Ltmp1428:
.Ltmp1465:
	.loc	9 0 24
	movl	%eax, %ebp
.Ltmp1466:
	.loc	9 26 14 is_stmt 1
	movq	64(%rsp), %rax
	.loc	9 26 20 is_stmt 0
	cmpq	%rax, %r12
	setg	%cl
	orb	%bl, %cl
	movq	%rax, %rdx
	shrq	$63, %rdx
	orl	%ebx, %edx
	orb	%cl, %dl
	je	.LBB54_42
.Ltmp1467:
.Ltmp1429:
	movl	$3, %edi
	callq	__go_runtime_error
.Ltmp1430:
	jmp	.LBB54_35
.Ltmp1468:
	.p2align	4, 0x90
.LBB54_42:
	.loc	9 26 14
	movq	48(%rsp), %rcx
	movq	%rcx, 40(%rsp)
	movq	%r12, 96(%rsp)
.Ltmp1469:
	.loc	9 0 14
	movq	%rax, %r13
.Ltmp1470:
.LBB54_35:
.Ltmp1431:
	.loc	9 25 8 is_stmt 1
	movl	$command_line_arguments.IPPacket..d, %edi
	callq	runtime.newobject
.Ltmp1432:
.Ltmp1471:
	.loc	9 0 8 is_stmt 0
	movq	%rax, %r12
	.loc	9 25 9
	movq	40(%rsp), %rax
	movq	%rax, 352(%rsp)
	movq	96(%rsp), %rax
	movq	%rax, 360(%rsp)
	movq	%r13, 368(%rsp)
	movq	240(%rsp), %rax
	leaq	376(%rsp), %rcx
	movq	%rax, 16(%rcx)
	movaps	224(%rsp), %xmm0
	movups	%xmm0, (%rcx)
	movb	%bpl, 400(%rsp)
.Ltmp1433:
	.loc	9 25 8
	movl	$command_line_arguments.IPPacket..d, %edi
	movq	%r12, %rsi
	leaq	352(%rsp), %rdx
	callq	runtime.typedmemmove
.Ltmp1434:
.Ltmp1472:
	.loc	9 0 8
	movq	%r12, 104(%rsp)
.Ltmp1435:
	.loc	9 30 13 is_stmt 1
	movq	80(%rsp), %rdi
	leaq	104(%rsp), %rsi
	callq	runtime.chansend1
.Ltmp1436:
	jmp	.LBB54_38
.Ltmp1473:
.LBB54_8:
	.loc	9 0 13 is_stmt 0
	leaq	39(%rsp), %rbp
.Ltmp1474:
	jmp	.LBB54_45
.Ltmp1475:
.LBB54_16:
	movq	264(%rsp), %rbp
.Ltmp1476:
	testq	%r15, %r15
	jne	.LBB54_18
.Ltmp1477:
.Ltmp1402:
	.loc	9 19 8 is_stmt 1
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp1403:
.Ltmp1478:
.LBB54_18:
	.loc	9 19 7 is_stmt 0
	cmpb	$0, (%r15)
	jne	.LBB54_26
.Ltmp1479:
.Ltmp1404:
	.loc	9 20 40 is_stmt 1
	movq	88(%rsp), %rdi
	callq	github_com_twitchyliquid64_subnet_vendor_github_com_songgao_water.Interface.Name
.Ltmp1405:
.Ltmp1480:
	.loc	9 0 40 is_stmt 0
	movq	%rax, %r15
.Ltmp1481:
	movq	%rdx, %r13
.Ltmp1406:
	.loc	9 20 52
	movq	%rbp, %rdi
	callq	*8(%rbx)
	movq	%rdx, 40(%rsp)
.Ltmp1407:
.Ltmp1482:
	.loc	9 0 52
	movq	%rax, %r14
.Ltmp1408:
	.loc	9 20 9
	movl	$string..d, %edi
	callq	runtime.newobject
.Ltmp1409:
.Ltmp1483:
	.loc	9 0 9
	movq	%rax, %rbx
	movq	%r15, 208(%rsp)
	movq	%r13, 216(%rsp)
.Ltmp1410:
	leaq	208(%rsp), %rdx
	.loc	9 20 9
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
.Ltmp1411:
.Ltmp1484:
.Ltmp1412:
	movl	$string..d, %edi
	callq	runtime.newobject
.Ltmp1413:
.Ltmp1485:
	.loc	9 0 9
	movq	%rax, %rbp
.Ltmp1486:
	movq	%r14, 192(%rsp)
	movq	40(%rsp), %rax
	movq	%rax, 200(%rsp)
.Ltmp1414:
	leaq	192(%rsp), %rdx
	.loc	9 20 9
	movl	$string..d, %edi
	movq	%rbp, %rsi
	callq	runtime.typedmemmove
.Ltmp1415:
.Ltmp1487:
	movq	$string..d, 272(%rsp)
	movq	%rbx, 280(%rsp)
	movq	$string..d, 288(%rsp)
	movq	%rbp, 296(%rsp)
	leaq	272(%rsp), %rax
	movq	%rax, 168(%rsp)
	movq	$2, 176(%rsp)
	movq	$2, 184(%rsp)
.Ltmp1416:
	movq	184(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	168(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.304, %edi
	movl	$16, %esi
	callq	log.Printf
.Ltmp1417:
.Ltmp1488:
.LBB54_26:
.Ltmp1418:
	.loc	9 22 4 is_stmt 1
	movq	80(%rsp), %rdi
	callq	runtime.closechan
.Ltmp1419:
.Ltmp1489:
	.loc	9 0 4 is_stmt 0
	leaq	39(%rsp), %rbp
	jmp	.LBB54_45
.Ltmp1490:
.LBB54_10:
.Ltmp1420:
	jmp	.LBB54_11
.Ltmp1491:
.LBB54_9:
.Ltmp1437:
.LBB54_11:
.Ltmp1438:
	leaq	39(%rsp), %rdi
	.loc	9 33 1 is_stmt 1
	callq	runtime.checkdefer
.Ltmp1439:
.Ltmp1492:
	.loc	9 0 1 is_stmt 0
	movb	$1, %r12b
	leaq	39(%rsp), %rbp
	jmp	.LBB54_45
.Ltmp1493:
.LBB54_43:
.Ltmp1440:
	movq	%rax, %rbx
	xorl	%r12d, %r12d
	leaq	39(%rsp), %rbp
	jmp	.LBB54_45
.Ltmp1494:
.LBB54_44:
.Ltmp1443:
	.loc	9 33 1
	movq	%rbp, %rdi
	callq	runtime.checkdefer
.Ltmp1495:
	.p2align	4, 0x90
.LBB54_45:
.Ltmp1441:
	movq	%rbp, %rdi
	callq	runtime.deferreturn
.Ltmp1442:
.Ltmp1496:
	.loc	9 0 1
	testb	%r12b, %r12b
	je	.LBB54_48
.Ltmp1497:
	.loc	9 23 4 is_stmt 1
	addq	$408, %rsp
.Ltmp1498:
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp1499:
.LBB54_48:
	.cfi_def_cfa_offset 464
	.loc	9 0 4 is_stmt 0
	movq	%rbx, %rdi
	callq	_Unwind_Resume
.Lfunc_end54:
	.size	command_line_arguments.devReadRoutine, .Lfunc_end54-command_line_arguments.devReadRoutine
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table54:
.Lexception8:
	.byte	255
	.byte	3
	.uleb128 .Lttbase8-.Lttbaseref8
.Lttbaseref8:
	.byte	1
	.uleb128 .Lcst_end8-.Lcst_begin8
.Lcst_begin8:
	.uleb128 .Lfunc_begin54-.Lfunc_begin54
	.uleb128 .Ltmp1392-.Lfunc_begin54
	.byte	0
	.byte	0
	.uleb128 .Ltmp1392-.Lfunc_begin54
	.uleb128 .Ltmp1395-.Ltmp1392
	.uleb128 .Ltmp1420-.Lfunc_begin54
	.byte	1
	.uleb128 .Ltmp1396-.Lfunc_begin54
	.uleb128 .Ltmp1436-.Ltmp1396
	.uleb128 .Ltmp1437-.Lfunc_begin54
	.byte	1
	.uleb128 .Ltmp1402-.Lfunc_begin54
	.uleb128 .Ltmp1419-.Ltmp1402
	.uleb128 .Ltmp1420-.Lfunc_begin54
	.byte	1
	.uleb128 .Ltmp1438-.Lfunc_begin54
	.uleb128 .Ltmp1439-.Ltmp1438
	.uleb128 .Ltmp1440-.Lfunc_begin54
	.byte	0
	.uleb128 .Ltmp1439-.Lfunc_begin54
	.uleb128 .Ltmp1441-.Ltmp1439
	.byte	0
	.byte	0
	.uleb128 .Ltmp1441-.Lfunc_begin54
	.uleb128 .Ltmp1442-.Ltmp1441
	.uleb128 .Ltmp1443-.Lfunc_begin54
	.byte	1
	.uleb128 .Ltmp1442-.Lfunc_begin54
	.uleb128 .Lfunc_end54-.Ltmp1442
	.byte	0
	.byte	0
.Lcst_end8:
	.byte	1
	.byte	0
	.p2align	2
	.long	0
.Lttbase8:
	.p2align	2

	.section	.text.command_line_arguments.command_line_arguments..thunk18,"ax",@progbits
	.p2align	4, 0x90
	.type	command_line_arguments.command_line_arguments..thunk18,@function
command_line_arguments.command_line_arguments..thunk18:
.Lfunc_begin55:
	.loc	9 13 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB55_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB55_2:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
.Ltmp1500:
	.loc	9 13 2 prologue_end
	movl	$.Ltmp1501, %edi
	callq	runtime.setdeferretaddr
	testb	$1, %al
	jne	.LBB55_4
.Ltmp1502:
	movq	(%rbx), %rdi
	callq	sync.WaitGroup.Done
.Ltmp1503:
.Ltmp1501:
.LBB55_4:
	xorl	%eax, %eax
	popq	%rbx
.Ltmp1504:
	.cfi_def_cfa_offset 8
	retq
.Ltmp1505:
.Lfunc_end55:
	.size	command_line_arguments.command_line_arguments..thunk18, .Lfunc_end55-command_line_arguments.command_line_arguments..thunk18
	.cfi_endproc

	.section	.text.command_line_arguments.devWriteRoutine,"ax",@progbits
	.p2align	4, 0x90
	.type	command_line_arguments.devWriteRoutine,@function
command_line_arguments.devWriteRoutine:
.Lfunc_begin56:
	.loc	9 35 0
	.cfi_startproc
	.cfi_personality 3, __gccgo_personality_v0
	.cfi_lsda 3, .Lexception9
	leaq	-360(%rsp), %r11
	cmpq	%fs:112, %r11
	ja	.LBB56_2
	movabsq	$360, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
.LBB56_2:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$312, %rsp
	.cfi_def_cfa_offset 368
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rcx, 96(%rsp)
	movq	%rdx, %rbp
	movq	%rsi, 88(%rsp)
	movq	%rdi, 56(%rsp)
	movb	$0, 39(%rsp)
.Ltmp1506:
.Ltmp1557:
	.loc	9 36 4 prologue_end
	movl	$1, %esi
	movq	%rdx, %rdi
	callq	sync.WaitGroup.Add
.Ltmp1507:
.Ltmp1558:
	.loc	9 37 2
	movq	%rbp, 104(%rsp)
.Ltmp1508:
	leaq	39(%rsp), %rdi
	leaq	104(%rsp), %rdx
	movl	$command_line_arguments.command_line_arguments..thunk19, %esi
	callq	runtime.deferproc
.Ltmp1509:
.Ltmp1559:
.LBB56_5:
	.loc	9 0 2 is_stmt 0
	movq	%r14, %r15
	movq	%rbx, %rbp
.Ltmp1560:
	.p2align	4, 0x90
.LBB56_6:
	movq	96(%rsp), %rcx
	movq	%rcx, %rax
	testq	%rcx, %rcx
	jne	.LBB56_8
.Ltmp1561:
.Ltmp1510:
	.loc	9 39 7 is_stmt 1
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp1511:
	movq	%r12, %rax
.Ltmp1562:
.LBB56_8:
	.loc	9 0 7 is_stmt 0
	movq	%rax, %r12
	movb	$1, %al
	.loc	9 39 6
	movl	%eax, 40(%rsp)
	cmpb	$0, (%r12)
	jne	.LBB56_9
.Ltmp1563:
	.loc	9 0 6
	movq	$0, 64(%rsp)
.Ltmp1512:
.Ltmp1564:
	.loc	9 40 10 is_stmt 1
	movq	88(%rsp), %rdi
	leaq	64(%rsp), %rsi
	callq	runtime.chanrecv1
.Ltmp1513:
.Ltmp1565:
	movq	64(%rsp), %r13
.Ltmp1566:
	.loc	9 0 10 is_stmt 0
	movq	%r13, %r14
	.loc	9 41 26 is_stmt 1
	testq	%r13, %r13
	jne	.LBB56_18
.Ltmp1567:
.Ltmp1514:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp1515:
	movq	%r15, %r14
.Ltmp1568:
.LBB56_18:
.Ltmp1516:
	.loc	9 41 16 is_stmt 0
	movq	16(%r14), %rax
	movq	%rax, 16(%rsp)
	movups	(%r14), %xmm0
	movups	%xmm0, (%rsp)
	leaq	208(%rsp), %rdi
	movq	56(%rsp), %rsi
	callq	github_com_twitchyliquid64_subnet_vendor_github_com_songgao_water.Interface.Write..stub
.Ltmp1517:
.Ltmp1569:
	movq	216(%rsp), %rbx
.Ltmp1570:
	.loc	9 42 10 is_stmt 1
	testq	%rbx, %rbx
	jne	.LBB56_20
.Ltmp1571:
	.loc	9 0 10 is_stmt 0
	movq	208(%rsp), %rax
.Ltmp1572:
	movq	%r13, %rbx
.Ltmp1573:
	.loc	9 41 26 is_stmt 1
	testq	%r13, %r13
	jne	.LBB56_30
.Ltmp1574:
.Ltmp1533:
	.loc	9 46 18
	movl	$6, %edi
	movq	%rax, %rbx
.Ltmp1575:
	callq	__go_runtime_error
	movq	%rbx, %rax
.Ltmp1534:
	movq	%rbp, %rbx
.Ltmp1576:
.LBB56_30:
	.loc	9 0 18 is_stmt 0
	movq	%r14, %r15
	movq	%rbx, %rbp
	.loc	9 46 8
	cmpq	8(%rbx), %rax
	je	.LBB56_6
.Ltmp1577:
.Ltmp1536:
	.loc	9 0 8
	movq	%rax, %r15
	.loc	9 47 70 is_stmt 1
	movq	56(%rsp), %rdi
	callq	github_com_twitchyliquid64_subnet_vendor_github_com_songgao_water.Interface.Name
	movq	%rax, 48(%rsp)
	movq	%rdx, 80(%rsp)
.Ltmp1537:
.Ltmp1578:
	.loc	9 41 26
	testq	%r13, %r13
	jne	.LBB56_34
.Ltmp1579:
.Ltmp1538:
	.loc	9 47 89
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp1539:
	movq	72(%rsp), %r13
.Ltmp1580:
.LBB56_34:
	movq	8(%r13), %rbp
.Ltmp1540:
	.loc	9 47 8 is_stmt 0
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, 40(%rsp)
.Ltmp1541:
.Ltmp1581:
	.loc	9 0 8
	movq	48(%rsp), %rax
	movq	%rax, 160(%rsp)
	movq	80(%rsp), %rax
	movq	%rax, 168(%rsp)
.Ltmp1542:
	.loc	9 47 8
	movl	$string..d, %edi
	movq	40(%rsp), %rsi
	leaq	160(%rsp), %rdx
	callq	runtime.typedmemmove
.Ltmp1543:
.Ltmp1582:
.Ltmp1544:
	movl	$int..d, %edi
	callq	runtime.newobject
	movq	%rax, 48(%rsp)
.Ltmp1545:
.Ltmp1583:
	movq	48(%rsp), %rax
	movq	%r15, (%rax)
.Ltmp1546:
	movl	$int..d, %edi
	callq	runtime.newobject
.Ltmp1547:
.Ltmp1584:
	movq	%rbp, (%rax)
	movq	$string..d, 264(%rsp)
	movq	40(%rsp), %rcx
	movq	%rcx, 272(%rsp)
	movq	$int..d, 280(%rsp)
	movq	48(%rsp), %rcx
	movq	%rcx, 288(%rsp)
	movq	$int..d, 296(%rsp)
	movq	%rax, 304(%rsp)
	leaq	264(%rsp), %rax
	movq	%rax, 136(%rsp)
	movq	$3, 144(%rsp)
	movq	$3, 152(%rsp)
.Ltmp1548:
	movq	152(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	136(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.308, %edi
	movl	$47, %esi
	callq	log.Printf
.Ltmp1549:
	movq	%r13, 72(%rsp)
	jmp	.LBB56_5
.Ltmp1585:
.LBB56_9:
	.loc	9 0 8
	leaq	39(%rsp), %rbp
	jmp	.LBB56_41
.Ltmp1586:
.LBB56_20:
	movq	224(%rsp), %rbp
.Ltmp1587:
.Ltmp1518:
	.loc	9 43 46 is_stmt 1
	movq	56(%rsp), %rdi
	callq	github_com_twitchyliquid64_subnet_vendor_github_com_songgao_water.Interface.Name
.Ltmp1519:
.Ltmp1588:
	.loc	9 0 46 is_stmt 0
	movq	%rax, %r13
.Ltmp1589:
	movq	%rdx, %r12
.Ltmp1520:
	.loc	9 43 58
	movq	%rbp, %rdi
	callq	*8(%rbx)
.Ltmp1521:
.Ltmp1590:
	.loc	9 0 58
	movq	%rax, %r15
	movq	%rdx, %rbx
.Ltmp1522:
	.loc	9 43 8
	movl	$string..d, %edi
	callq	runtime.newobject
.Ltmp1523:
.Ltmp1591:
	.loc	9 0 8
	movq	%rax, %r14
	movq	%r13, 192(%rsp)
	movq	%r12, 200(%rsp)
.Ltmp1524:
	leaq	192(%rsp), %rdx
	.loc	9 43 8
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
.Ltmp1525:
.Ltmp1592:
.Ltmp1526:
	movl	$string..d, %edi
	callq	runtime.newobject
.Ltmp1527:
.Ltmp1593:
	.loc	9 0 8
	movq	%rax, %rbp
.Ltmp1594:
	movq	%r15, 176(%rsp)
	movq	%rbx, 184(%rsp)
.Ltmp1528:
	leaq	176(%rsp), %rdx
	.loc	9 43 8
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
.Ltmp1529:
.Ltmp1595:
	movq	$string..d, 232(%rsp)
	movq	%r14, 240(%rsp)
	movq	$string..d, 248(%rsp)
	movq	%rbp, 256(%rsp)
	leaq	232(%rsp), %rax
	movq	%rax, 112(%rsp)
	movq	$2, 120(%rsp)
	movq	$2, 128(%rsp)
.Ltmp1530:
	movq	128(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	112(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.306, %edi
	movl	$23, %esi
	callq	log.Printf
.Ltmp1531:
.Ltmp1596:
	.loc	9 0 8
	leaq	39(%rsp), %rbp
	jmp	.LBB56_41
.Ltmp1597:
.LBB56_11:
.Ltmp1550:
	jmp	.LBB56_13
.Ltmp1598:
.LBB56_12:
.Ltmp1532:
	jmp	.LBB56_13
.Ltmp1599:
.LBB56_10:
.Ltmp1535:
.LBB56_13:
.Ltmp1551:
	leaq	39(%rsp), %rdi
	.loc	9 50 1 is_stmt 1
	callq	runtime.checkdefer
.Ltmp1552:
.Ltmp1600:
	.loc	9 0 1 is_stmt 0
	movb	$1, %al
	movl	%eax, 40(%rsp)
	leaq	39(%rsp), %rbp
	jmp	.LBB56_41
.Ltmp1601:
.LBB56_39:
.Ltmp1553:
	movq	%rax, %r14
	movl	$0, 40(%rsp)
	leaq	39(%rsp), %rbp
	jmp	.LBB56_41
.Ltmp1602:
.LBB56_40:
.Ltmp1556:
	.loc	9 50 1
	movq	%rbp, %rdi
	callq	runtime.checkdefer
.Ltmp1603:
	.p2align	4, 0x90
.LBB56_41:
.Ltmp1554:
	movq	%rbp, %rdi
	callq	runtime.deferreturn
.Ltmp1555:
.Ltmp1604:
	.loc	9 0 1
	cmpb	$0, 40(%rsp)
	je	.LBB56_44
.Ltmp1605:
	.loc	9 44 4 is_stmt 1
	addq	$312, %rsp
.Ltmp1606:
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp1607:
.LBB56_44:
	.cfi_def_cfa_offset 368
	.loc	9 0 4 is_stmt 0
	movq	%r14, %rdi
	callq	_Unwind_Resume
.Lfunc_end56:
	.size	command_line_arguments.devWriteRoutine, .Lfunc_end56-command_line_arguments.devWriteRoutine
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table56:
.Lexception9:
	.byte	255
	.byte	3
	.uleb128 .Lttbase9-.Lttbaseref9
.Lttbaseref9:
	.byte	1
	.uleb128 .Lcst_end9-.Lcst_begin9
.Lcst_begin9:
	.uleb128 .Lfunc_begin56-.Lfunc_begin56
	.uleb128 .Ltmp1506-.Lfunc_begin56
	.byte	0
	.byte	0
	.uleb128 .Ltmp1506-.Lfunc_begin56
	.uleb128 .Ltmp1509-.Ltmp1506
	.uleb128 .Ltmp1532-.Lfunc_begin56
	.byte	1
	.uleb128 .Ltmp1510-.Lfunc_begin56
	.uleb128 .Ltmp1534-.Ltmp1510
	.uleb128 .Ltmp1535-.Lfunc_begin56
	.byte	1
	.uleb128 .Ltmp1536-.Lfunc_begin56
	.uleb128 .Ltmp1549-.Ltmp1536
	.uleb128 .Ltmp1550-.Lfunc_begin56
	.byte	1
	.uleb128 .Ltmp1518-.Lfunc_begin56
	.uleb128 .Ltmp1531-.Ltmp1518
	.uleb128 .Ltmp1532-.Lfunc_begin56
	.byte	1
	.uleb128 .Ltmp1551-.Lfunc_begin56
	.uleb128 .Ltmp1552-.Ltmp1551
	.uleb128 .Ltmp1553-.Lfunc_begin56
	.byte	0
	.uleb128 .Ltmp1552-.Lfunc_begin56
	.uleb128 .Ltmp1554-.Ltmp1552
	.byte	0
	.byte	0
	.uleb128 .Ltmp1554-.Lfunc_begin56
	.uleb128 .Ltmp1555-.Ltmp1554
	.uleb128 .Ltmp1556-.Lfunc_begin56
	.byte	1
	.uleb128 .Ltmp1555-.Lfunc_begin56
	.uleb128 .Lfunc_end56-.Ltmp1555
	.byte	0
	.byte	0
.Lcst_end9:
	.byte	1
	.byte	0
	.p2align	2
	.long	0
.Lttbase9:
	.p2align	2

	.section	.text.command_line_arguments.command_line_arguments..thunk19,"ax",@progbits
	.p2align	4, 0x90
	.type	command_line_arguments.command_line_arguments..thunk19,@function
command_line_arguments.command_line_arguments..thunk19:
.Lfunc_begin57:
	.loc	9 37 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB57_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB57_2:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
.Ltmp1608:
	.loc	9 37 2 prologue_end
	movl	$.Ltmp1609, %edi
	callq	runtime.setdeferretaddr
	testb	$1, %al
	jne	.LBB57_4
.Ltmp1610:
	movq	(%rbx), %rdi
	callq	sync.WaitGroup.Done
.Ltmp1611:
.Ltmp1609:
.LBB57_4:
	xorl	%eax, %eax
	popq	%rbx
.Ltmp1612:
	.cfi_def_cfa_offset 8
	retq
.Ltmp1613:
.Lfunc_end57:
	.size	command_line_arguments.command_line_arguments..thunk19, .Lfunc_end57-command_line_arguments.command_line_arguments..thunk19
	.cfi_endproc

	.section	.text.command_line_arguments.struct.4Size.0uint32.2Mallocs.0uint64.2Frees.0uint64.5..hash,"ax",@progbits
	.globl	command_line_arguments.struct.4Size.0uint32.2Mallocs.0uint64.2Frees.0uint64.5..hash
	.p2align	4, 0x90
	.type	command_line_arguments.struct.4Size.0uint32.2Mallocs.0uint64.2Frees.0uint64.5..hash,@function
command_line_arguments.struct.4Size.0uint32.2Mallocs.0uint64.2Frees.0uint64.5..hash:
.Lfunc_begin58:
	.loc	1 1 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB58_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB58_2:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
.Ltmp1614:
	.loc	1 1 1 prologue_end
	callq	runtime.memhash32
	leaq	8(%rbx), %rdi
	movq	%rax, %rsi
	callq	runtime.memhash64
	addq	$16, %rbx
.Ltmp1615:
	movq	%rbx, %rdi
	movq	%rax, %rsi
	callq	runtime.memhash64
.Ltmp1616:
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.Ltmp1617:
.Lfunc_end58:
	.size	command_line_arguments.struct.4Size.0uint32.2Mallocs.0uint64.2Frees.0uint64.5..hash, .Lfunc_end58-command_line_arguments.struct.4Size.0uint32.2Mallocs.0uint64.2Frees.0uint64.5..hash
	.cfi_endproc

	.section	.text.command_line_arguments.struct.4Size.0uint32.2Mallocs.0uint64.2Frees.0uint64.5..eq,"ax",@progbits
	.globl	command_line_arguments.struct.4Size.0uint32.2Mallocs.0uint64.2Frees.0uint64.5..eq
	.p2align	4, 0x90
	.type	command_line_arguments.struct.4Size.0uint32.2Mallocs.0uint64.2Frees.0uint64.5..eq,@function
command_line_arguments.struct.4Size.0uint32.2Mallocs.0uint64.2Frees.0uint64.5..eq:
.Lfunc_begin59:
	.loc	1 1 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB59_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB59_2:
	pushq	%rax
	.cfi_def_cfa_offset 16
.Ltmp1618:
	.loc	1 1 1 prologue_end
	testq	%rdi, %rdi
	je	.LBB59_7
.Ltmp1619:
	testq	%rsi, %rsi
	je	.LBB59_7
.Ltmp1620:
	movl	(%rdi), %eax
	cmpl	(%rsi), %eax
	jne	.LBB59_8
.Ltmp1621:
	movq	8(%rdi), %rax
	cmpq	8(%rsi), %rax
	jne	.LBB59_8
.Ltmp1622:
	movq	16(%rdi), %rax
	cmpq	16(%rsi), %rax
	sete	%al
	popq	%rcx
	.cfi_def_cfa_offset 8
	retq
.Ltmp1623:
.LBB59_8:
	.cfi_def_cfa_offset 16
	xorl	%eax, %eax
	popq	%rcx
	.cfi_def_cfa_offset 8
	retq
.Ltmp1624:
.LBB59_7:
	.cfi_def_cfa_offset 16
	movl	$6, %edi
.Ltmp1625:
	callq	__go_runtime_error
.Ltmp1626:
.Lfunc_end59:
	.size	command_line_arguments.struct.4Size.0uint32.2Mallocs.0uint64.2Frees.0uint64.5..eq, .Lfunc_end59-command_line_arguments.struct.4Size.0uint32.2Mallocs.0uint64.2Frees.0uint64.5..eq
	.cfi_endproc

	.section	.text.command_line_arguments..import,"ax",@progbits
	.globl	command_line_arguments..import
	.p2align	4, 0x90
	.type	command_line_arguments..import,@function
command_line_arguments..import:
.Lfunc_begin60:
	.loc	2 1 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB60_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB60_2:
	pushq	%rax
	.cfi_def_cfa_offset 16
.Ltmp1627:
	.loc	1 1 1 prologue_end
	movl	$go..C0, %edi
	callq	runtime.registerGCRoots
	popq	%rax
	.cfi_def_cfa_offset 8
	retq
.Ltmp1628:
.Lfunc_end60:
	.size	command_line_arguments..import, .Lfunc_end60-command_line_arguments..import
	.cfi_endproc

	.type	imt..interface.4Align.0func.8.9.8int.9.2AssignableTo.0func.8reflect.Type.9.8bool.9.2Bits.0func.8.9.8int.9.2ChanDir.0func.8.9.8reflect.ChanDir.9.2Comparable.0func.8.9.8bool.9.2ConvertibleTo.0func.8reflect.Type.9.8bool.9.2Elem.0func.8.9.8reflect.Type.9.2Field.0func.8int.9.8reflect.StructField.9.2FieldAlign.0func.8.9.8int.9.2FieldByIndex.0func.8.6.7int.9.8reflect.StructField.9.2FieldByName.0func.8string.9.8reflect.StructField.3bool.9.2FieldByNameFunc.0func.8func.8string.9.8bool.9.9.8reflect.StructField.3bool.9.2Implements.0func.8reflect.Type.9.8bool.9.2In.0func.8int.9.8reflect.Type.9.2IsVariadic.0func.8.9.8bool.9.2Key.0func.8.9.8reflect.Type.9.2Kind.0func.8.9.8reflect.Kind.9.2Len.0func.8.9.8int.9.2Method.0func.8int.9.8reflect.Method.9.2MethodByName.0func.8string.9.8reflect.Method.3bool.9.2Name.0func.8.9.8string.9.2NumField.0func.8.9.8int.9.2NumIn.0func.8.9.8int.9.2NumMethod.0func.8.9.8int.9.2NumOut.0func.8.9.8int.9.2Out.0func.8int.9.8reflect.Type.9.2PkgPath.0func.8.9.8string.9.2Size.0func.8.9.8uintptr.9.2String.0func.8.9.8string.9.2.reflect.common.0func.8.9.8.1reflect.rtype.9.2.reflect.rawString.0func.8.9.8string.9.2.reflect.uncommon.0func.8.9.8.1reflect.uncommonType.9.5..reflect.rtype,@object
	.section	.rodata.imt..interface.4Align.0func.8.9.8int.9.2AssignableTo.0func.8reflect.Type.9.8bool.9.2Bits.0func.8.9.8int.9.2ChanDir.0func.8.9.8reflect.ChanDir.9.2Comparable.0func.8.9.8bool.9.2ConvertibleTo.0func.8reflect.Type.9.8bool.9.2Elem.0func.8.9.8reflect.Type.9.2Field.0func.8int.9.8reflect.StructField.9.2FieldAlign.0func.8.9.8int.9.2FieldByIndex.0func.8.6.7int.9.8reflect.StructField.9.2FieldByName.0func.8string.9.8reflect.StructField.3bool.9.2FieldByNameFunc.0func.8func.8string.9.8bool.9.9.8reflect.StructField.3bool.9.2Implements.0func.8reflect.Type.9.8bool.9.2In.0func.8int.9.8reflect.Type.9.2IsVariadic.0func.8.9.8bool.9.2Key.0func.8.9.8reflect.Type.9.2Kind.0func.8.9.8reflect.Kind.9.2Len.0func.8.9.8int.9.2Method.0func.8int.9.8reflect.Method.9.2MethodByName.0func.8string.9.8reflect.Method.3bool.9.2Name.0func.8.9.8string.9.2NumField.0func.8.9.8int.9.2NumIn.0func.8.9.8int.9.2NumMethod.0func.8.9.8int.9.2NumOut.0func.8.9.8int.9.2Out.0func.8int.9.8reflect.Type.9.2PkgPath.0func.8.9.8string.9.2Size.0func.8.9.8uintptr.9.2String.0func.8.9.8string.9.2.reflect.common.0func.8.9.8.1reflect.rtype.9.2.reflect.rawString.0func.8.9.8string.9.2.reflect.uncommon.0func.8.9.8.1reflect.uncommonType.9.5..reflect.rtype,"aG",@progbits,imt..interface.4Align.0func.8.9.8int.9.2AssignableTo.0func.8reflect.Type.9.8bool.9.2Bits.0func.8.9.8int.9.2ChanDir.0func.8.9.8reflect.ChanDir.9.2Comparable.0func.8.9.8bool.9.2ConvertibleTo.0func.8reflect.Type.9.8bool.9.2Elem.0func.8.9.8reflect.Type.9.2Field.0func.8int.9.8reflect.StructField.9.2FieldAlign.0func.8.9.8int.9.2FieldByIndex.0func.8.6.7int.9.8reflect.StructField.9.2FieldByName.0func.8string.9.8reflect.StructField.3bool.9.2FieldByNameFunc.0func.8func.8string.9.8bool.9.9.8reflect.StructField.3bool.9.2Implements.0func.8reflect.Type.9.8bool.9.2In.0func.8int.9.8reflect.Type.9.2IsVariadic.0func.8.9.8bool.9.2Key.0func.8.9.8reflect.Type.9.2Kind.0func.8.9.8reflect.Kind.9.2Len.0func.8.9.8int.9.2Method.0func.8int.9.8reflect.Method.9.2MethodByName.0func.8string.9.8reflect.Method.3bool.9.2Name.0func.8.9.8string.9.2NumField.0func.8.9.8int.9.2NumIn.0func.8.9.8int.9.2NumMethod.0func.8.9.8int.9.2NumOut.0func.8.9.8int.9.2Out.0func.8int.9.8reflect.Type.9.2PkgPath.0func.8.9.8string.9.2Size.0func.8.9.8uintptr.9.2String.0func.8.9.8string.9.2.reflect.common.0func.8.9.8.1reflect.rtype.9.2.reflect.rawString.0func.8.9.8string.9.2.reflect.uncommon.0func.8.9.8.1reflect.uncommonType.9.5..reflect.rtype,comdat
	.weak	imt..interface.4Align.0func.8.9.8int.9.2AssignableTo.0func.8reflect.Type.9.8bool.9.2Bits.0func.8.9.8int.9.2ChanDir.0func.8.9.8reflect.ChanDir.9.2Comparable.0func.8.9.8bool.9.2ConvertibleTo.0func.8reflect.Type.9.8bool.9.2Elem.0func.8.9.8reflect.Type.9.2Field.0func.8int.9.8reflect.StructField.9.2FieldAlign.0func.8.9.8int.9.2FieldByIndex.0func.8.6.7int.9.8reflect.StructField.9.2FieldByName.0func.8string.9.8reflect.StructField.3bool.9.2FieldByNameFunc.0func.8func.8string.9.8bool.9.9.8reflect.StructField.3bool.9.2Implements.0func.8reflect.Type.9.8bool.9.2In.0func.8int.9.8reflect.Type.9.2IsVariadic.0func.8.9.8bool.9.2Key.0func.8.9.8reflect.Type.9.2Kind.0func.8.9.8reflect.Kind.9.2Len.0func.8.9.8int.9.2Method.0func.8int.9.8reflect.Method.9.2MethodByName.0func.8string.9.8reflect.Method.3bool.9.2Name.0func.8.9.8string.9.2NumField.0func.8.9.8int.9.2NumIn.0func.8.9.8int.9.2NumMethod.0func.8.9.8int.9.2NumOut.0func.8.9.8int.9.2Out.0func.8int.9.8reflect.Type.9.2PkgPath.0func.8.9.8string.9.2Size.0func.8.9.8uintptr.9.2String.0func.8.9.8string.9.2.reflect.common.0func.8.9.8.1reflect.rtype.9.2.reflect.rawString.0func.8.9.8string.9.2.reflect.uncommon.0func.8.9.8.1reflect.uncommonType.9.5..reflect.rtype
	.p2align	4
imt..interface.4Align.0func.8.9.8int.9.2AssignableTo.0func.8reflect.Type.9.8bool.9.2Bits.0func.8.9.8int.9.2ChanDir.0func.8.9.8reflect.ChanDir.9.2Comparable.0func.8.9.8bool.9.2ConvertibleTo.0func.8reflect.Type.9.8bool.9.2Elem.0func.8.9.8reflect.Type.9.2Field.0func.8int.9.8reflect.StructField.9.2FieldAlign.0func.8.9.8int.9.2FieldByIndex.0func.8.6.7int.9.8reflect.StructField.9.2FieldByName.0func.8string.9.8reflect.StructField.3bool.9.2FieldByNameFunc.0func.8func.8string.9.8bool.9.9.8reflect.StructField.3bool.9.2Implements.0func.8reflect.Type.9.8bool.9.2In.0func.8int.9.8reflect.Type.9.2IsVariadic.0func.8.9.8bool.9.2Key.0func.8.9.8reflect.Type.9.2Kind.0func.8.9.8reflect.Kind.9.2Len.0func.8.9.8int.9.2Method.0func.8int.9.8reflect.Method.9.2MethodByName.0func.8string.9.8reflect.Method.3bool.9.2Name.0func.8.9.8string.9.2NumField.0func.8.9.8int.9.2NumIn.0func.8.9.8int.9.2NumMethod.0func.8.9.8int.9.2NumOut.0func.8.9.8int.9.2Out.0func.8int.9.8reflect.Type.9.2PkgPath.0func.8.9.8string.9.2Size.0func.8.9.8uintptr.9.2String.0func.8.9.8string.9.2.reflect.common.0func.8.9.8.1reflect.rtype.9.2.reflect.rawString.0func.8.9.8string.9.2.reflect.uncommon.0func.8.9.8.1reflect.uncommonType.9.5..reflect.rtype:
	.quad	reflect..reflect.rtype..d
	.quad	reflect.rtype.Align
	.quad	reflect.rtype.AssignableTo
	.quad	reflect.rtype.Bits
	.quad	reflect.rtype.ChanDir
	.quad	reflect.rtype.Comparable
	.quad	reflect.rtype.ConvertibleTo
	.quad	reflect.rtype.Elem
	.quad	reflect.rtype.Field
	.quad	reflect.rtype.FieldAlign
	.quad	reflect.rtype.FieldByIndex
	.quad	reflect.rtype.FieldByName
	.quad	reflect.rtype.FieldByNameFunc
	.quad	reflect.rtype.Implements
	.quad	reflect.rtype.In
	.quad	reflect.rtype.IsVariadic
	.quad	reflect.rtype.Key
	.quad	reflect.rtype.Kind
	.quad	reflect.rtype.Len
	.quad	reflect.rtype.Method
	.quad	reflect.rtype.MethodByName
	.quad	reflect.rtype.Name
	.quad	reflect.rtype.NumField
	.quad	reflect.rtype.NumIn
	.quad	reflect.rtype.NumMethod
	.quad	reflect.rtype.NumOut
	.quad	reflect.rtype.Out
	.quad	reflect.rtype.PkgPath
	.quad	reflect.rtype.Size
	.quad	reflect.rtype.String
	.quad	reflect.rtype.common
	.quad	reflect.rtype.rawString
	.quad	reflect.rtype.uncommon..stub
	.size	imt..interface.4Align.0func.8.9.8int.9.2AssignableTo.0func.8reflect.Type.9.8bool.9.2Bits.0func.8.9.8int.9.2ChanDir.0func.8.9.8reflect.ChanDir.9.2Comparable.0func.8.9.8bool.9.2ConvertibleTo.0func.8reflect.Type.9.8bool.9.2Elem.0func.8.9.8reflect.Type.9.2Field.0func.8int.9.8reflect.StructField.9.2FieldAlign.0func.8.9.8int.9.2FieldByIndex.0func.8.6.7int.9.8reflect.StructField.9.2FieldByName.0func.8string.9.8reflect.StructField.3bool.9.2FieldByNameFunc.0func.8func.8string.9.8bool.9.9.8reflect.StructField.3bool.9.2Implements.0func.8reflect.Type.9.8bool.9.2In.0func.8int.9.8reflect.Type.9.2IsVariadic.0func.8.9.8bool.9.2Key.0func.8.9.8reflect.Type.9.2Kind.0func.8.9.8reflect.Kind.9.2Len.0func.8.9.8int.9.2Method.0func.8int.9.8reflect.Method.9.2MethodByName.0func.8string.9.8reflect.Method.3bool.9.2Name.0func.8.9.8string.9.2NumField.0func.8.9.8int.9.2NumIn.0func.8.9.8int.9.2NumMethod.0func.8.9.8int.9.2NumOut.0func.8.9.8int.9.2Out.0func.8int.9.8reflect.Type.9.2PkgPath.0func.8.9.8string.9.2Size.0func.8.9.8uintptr.9.2String.0func.8.9.8string.9.2.reflect.common.0func.8.9.8.1reflect.rtype.9.2.reflect.rawString.0func.8.9.8string.9.2.reflect.uncommon.0func.8.9.8.1reflect.uncommonType.9.5..reflect.rtype, 264

	.type	pimt..interface.4Align.0func.8.9.8int.9.2AssignableTo.0func.8reflect.Type.9.8bool.9.2Bits.0func.8.9.8int.9.2ChanDir.0func.8.9.8reflect.ChanDir.9.2Comparable.0func.8.9.8bool.9.2ConvertibleTo.0func.8reflect.Type.9.8bool.9.2Elem.0func.8.9.8reflect.Type.9.2Field.0func.8int.9.8reflect.StructField.9.2FieldAlign.0func.8.9.8int.9.2FieldByIndex.0func.8.6.7int.9.8reflect.StructField.9.2FieldByName.0func.8string.9.8reflect.StructField.3bool.9.2FieldByNameFunc.0func.8func.8string.9.8bool.9.9.8reflect.StructField.3bool.9.2Implements.0func.8reflect.Type.9.8bool.9.2In.0func.8int.9.8reflect.Type.9.2IsVariadic.0func.8.9.8bool.9.2Key.0func.8.9.8reflect.Type.9.2Kind.0func.8.9.8reflect.Kind.9.2Len.0func.8.9.8int.9.2Method.0func.8int.9.8reflect.Method.9.2MethodByName.0func.8string.9.8reflect.Method.3bool.9.2Name.0func.8.9.8string.9.2NumField.0func.8.9.8int.9.2NumIn.0func.8.9.8int.9.2NumMethod.0func.8.9.8int.9.2NumOut.0func.8.9.8int.9.2Out.0func.8int.9.8reflect.Type.9.2PkgPath.0func.8.9.8string.9.2Size.0func.8.9.8uintptr.9.2String.0func.8.9.8string.9.2.reflect.common.0func.8.9.8.1reflect.rtype.9.2.reflect.rawString.0func.8.9.8string.9.2.reflect.uncommon.0func.8.9.8.1reflect.uncommonType.9.5..reflect.rtype,@object
	.section	.rodata.pimt..interface.4Align.0func.8.9.8int.9.2AssignableTo.0func.8reflect.Type.9.8bool.9.2Bits.0func.8.9.8int.9.2ChanDir.0func.8.9.8reflect.ChanDir.9.2Comparable.0func.8.9.8bool.9.2ConvertibleTo.0func.8reflect.Type.9.8bool.9.2Elem.0func.8.9.8reflect.Type.9.2Field.0func.8int.9.8reflect.StructField.9.2FieldAlign.0func.8.9.8int.9.2FieldByIndex.0func.8.6.7int.9.8reflect.StructField.9.2FieldByName.0func.8string.9.8reflect.StructField.3bool.9.2FieldByNameFunc.0func.8func.8string.9.8bool.9.9.8reflect.StructField.3bool.9.2Implements.0func.8reflect.Type.9.8bool.9.2In.0func.8int.9.8reflect.Type.9.2IsVariadic.0func.8.9.8bool.9.2Key.0func.8.9.8reflect.Type.9.2Kind.0func.8.9.8reflect.Kind.9.2Len.0func.8.9.8int.9.2Method.0func.8int.9.8reflect.Method.9.2MethodByName.0func.8string.9.8reflect.Method.3bool.9.2Name.0func.8.9.8string.9.2NumField.0func.8.9.8int.9.2NumIn.0func.8.9.8int.9.2NumMethod.0func.8.9.8int.9.2NumOut.0func.8.9.8int.9.2Out.0func.8int.9.8reflect.Type.9.2PkgPath.0func.8.9.8string.9.2Size.0func.8.9.8uintptr.9.2String.0func.8.9.8string.9.2.reflect.common.0func.8.9.8.1reflect.rtype.9.2.reflect.rawString.0func.8.9.8string.9.2.reflect.uncommon.0func.8.9.8.1reflect.uncommonType.9.5..reflect.rtype,"aG",@progbits,pimt..interface.4Align.0func.8.9.8int.9.2AssignableTo.0func.8reflect.Type.9.8bool.9.2Bits.0func.8.9.8int.9.2ChanDir.0func.8.9.8reflect.ChanDir.9.2Comparable.0func.8.9.8bool.9.2ConvertibleTo.0func.8reflect.Type.9.8bool.9.2Elem.0func.8.9.8reflect.Type.9.2Field.0func.8int.9.8reflect.StructField.9.2FieldAlign.0func.8.9.8int.9.2FieldByIndex.0func.8.6.7int.9.8reflect.StructField.9.2FieldByName.0func.8string.9.8reflect.StructField.3bool.9.2FieldByNameFunc.0func.8func.8string.9.8bool.9.9.8reflect.StructField.3bool.9.2Implements.0func.8reflect.Type.9.8bool.9.2In.0func.8int.9.8reflect.Type.9.2IsVariadic.0func.8.9.8bool.9.2Key.0func.8.9.8reflect.Type.9.2Kind.0func.8.9.8reflect.Kind.9.2Len.0func.8.9.8int.9.2Method.0func.8int.9.8reflect.Method.9.2MethodByName.0func.8string.9.8reflect.Method.3bool.9.2Name.0func.8.9.8string.9.2NumField.0func.8.9.8int.9.2NumIn.0func.8.9.8int.9.2NumMethod.0func.8.9.8int.9.2NumOut.0func.8.9.8int.9.2Out.0func.8int.9.8reflect.Type.9.2PkgPath.0func.8.9.8string.9.2Size.0func.8.9.8uintptr.9.2String.0func.8.9.8string.9.2.reflect.common.0func.8.9.8.1reflect.rtype.9.2.reflect.rawString.0func.8.9.8string.9.2.reflect.uncommon.0func.8.9.8.1reflect.uncommonType.9.5..reflect.rtype,comdat
	.weak	pimt..interface.4Align.0func.8.9.8int.9.2AssignableTo.0func.8reflect.Type.9.8bool.9.2Bits.0func.8.9.8int.9.2ChanDir.0func.8.9.8reflect.ChanDir.9.2Comparable.0func.8.9.8bool.9.2ConvertibleTo.0func.8reflect.Type.9.8bool.9.2Elem.0func.8.9.8reflect.Type.9.2Field.0func.8int.9.8reflect.StructField.9.2FieldAlign.0func.8.9.8int.9.2FieldByIndex.0func.8.6.7int.9.8reflect.StructField.9.2FieldByName.0func.8string.9.8reflect.StructField.3bool.9.2FieldByNameFunc.0func.8func.8string.9.8bool.9.9.8reflect.StructField.3bool.9.2Implements.0func.8reflect.Type.9.8bool.9.2In.0func.8int.9.8reflect.Type.9.2IsVariadic.0func.8.9.8bool.9.2Key.0func.8.9.8reflect.Type.9.2Kind.0func.8.9.8reflect.Kind.9.2Len.0func.8.9.8int.9.2Method.0func.8int.9.8reflect.Method.9.2MethodByName.0func.8string.9.8reflect.Method.3bool.9.2Name.0func.8.9.8string.9.2NumField.0func.8.9.8int.9.2NumIn.0func.8.9.8int.9.2NumMethod.0func.8.9.8int.9.2NumOut.0func.8.9.8int.9.2Out.0func.8int.9.8reflect.Type.9.2PkgPath.0func.8.9.8string.9.2Size.0func.8.9.8uintptr.9.2String.0func.8.9.8string.9.2.reflect.common.0func.8.9.8.1reflect.rtype.9.2.reflect.rawString.0func.8.9.8string.9.2.reflect.uncommon.0func.8.9.8.1reflect.uncommonType.9.5..reflect.rtype
	.p2align	4
pimt..interface.4Align.0func.8.9.8int.9.2AssignableTo.0func.8reflect.Type.9.8bool.9.2Bits.0func.8.9.8int.9.2ChanDir.0func.8.9.8reflect.ChanDir.9.2Comparable.0func.8.9.8bool.9.2ConvertibleTo.0func.8reflect.Type.9.8bool.9.2Elem.0func.8.9.8reflect.Type.9.2Field.0func.8int.9.8reflect.StructField.9.2FieldAlign.0func.8.9.8int.9.2FieldByIndex.0func.8.6.7int.9.8reflect.StructField.9.2FieldByName.0func.8string.9.8reflect.StructField.3bool.9.2FieldByNameFunc.0func.8func.8string.9.8bool.9.9.8reflect.StructField.3bool.9.2Implements.0func.8reflect.Type.9.8bool.9.2In.0func.8int.9.8reflect.Type.9.2IsVariadic.0func.8.9.8bool.9.2Key.0func.8.9.8reflect.Type.9.2Kind.0func.8.9.8reflect.Kind.9.2Len.0func.8.9.8int.9.2Method.0func.8int.9.8reflect.Method.9.2MethodByName.0func.8string.9.8reflect.Method.3bool.9.2Name.0func.8.9.8string.9.2NumField.0func.8.9.8int.9.2NumIn.0func.8.9.8int.9.2NumMethod.0func.8.9.8int.9.2NumOut.0func.8.9.8int.9.2Out.0func.8int.9.8reflect.Type.9.2PkgPath.0func.8.9.8string.9.2Size.0func.8.9.8uintptr.9.2String.0func.8.9.8string.9.2.reflect.common.0func.8.9.8.1reflect.rtype.9.2.reflect.rawString.0func.8.9.8string.9.2.reflect.uncommon.0func.8.9.8.1reflect.uncommonType.9.5..reflect.rtype:
	.quad	type...1reflect.rtype
	.quad	reflect.rtype.Align
	.quad	reflect.rtype.AssignableTo
	.quad	reflect.rtype.Bits
	.quad	reflect.rtype.ChanDir
	.quad	reflect.rtype.Comparable
	.quad	reflect.rtype.ConvertibleTo
	.quad	reflect.rtype.Elem
	.quad	reflect.rtype.Field
	.quad	reflect.rtype.FieldAlign
	.quad	reflect.rtype.FieldByIndex
	.quad	reflect.rtype.FieldByName
	.quad	reflect.rtype.FieldByNameFunc
	.quad	reflect.rtype.Implements
	.quad	reflect.rtype.In
	.quad	reflect.rtype.IsVariadic
	.quad	reflect.rtype.Key
	.quad	reflect.rtype.Kind
	.quad	reflect.rtype.Len
	.quad	reflect.rtype.Method
	.quad	reflect.rtype.MethodByName
	.quad	reflect.rtype.Name
	.quad	reflect.rtype.NumField
	.quad	reflect.rtype.NumIn
	.quad	reflect.rtype.NumMethod
	.quad	reflect.rtype.NumOut
	.quad	reflect.rtype.Out
	.quad	reflect.rtype.PkgPath
	.quad	reflect.rtype.Size
	.quad	reflect.rtype.String
	.quad	reflect.rtype.common
	.quad	reflect.rtype.rawString
	.quad	reflect.rtype.uncommon..stub
	.size	pimt..interface.4Align.0func.8.9.8int.9.2AssignableTo.0func.8reflect.Type.9.8bool.9.2Bits.0func.8.9.8int.9.2ChanDir.0func.8.9.8reflect.ChanDir.9.2Comparable.0func.8.9.8bool.9.2ConvertibleTo.0func.8reflect.Type.9.8bool.9.2Elem.0func.8.9.8reflect.Type.9.2Field.0func.8int.9.8reflect.StructField.9.2FieldAlign.0func.8.9.8int.9.2FieldByIndex.0func.8.6.7int.9.8reflect.StructField.9.2FieldByName.0func.8string.9.8reflect.StructField.3bool.9.2FieldByNameFunc.0func.8func.8string.9.8bool.9.9.8reflect.StructField.3bool.9.2Implements.0func.8reflect.Type.9.8bool.9.2In.0func.8int.9.8reflect.Type.9.2IsVariadic.0func.8.9.8bool.9.2Key.0func.8.9.8reflect.Type.9.2Kind.0func.8.9.8reflect.Kind.9.2Len.0func.8.9.8int.9.2Method.0func.8int.9.8reflect.Method.9.2MethodByName.0func.8string.9.8reflect.Method.3bool.9.2Name.0func.8.9.8string.9.2NumField.0func.8.9.8int.9.2NumIn.0func.8.9.8int.9.2NumMethod.0func.8.9.8int.9.2NumOut.0func.8.9.8int.9.2Out.0func.8int.9.8reflect.Type.9.2PkgPath.0func.8.9.8string.9.2Size.0func.8.9.8uintptr.9.2String.0func.8.9.8string.9.2.reflect.common.0func.8.9.8.1reflect.rtype.9.2.reflect.rawString.0func.8.9.8string.9.2.reflect.uncommon.0func.8.9.8.1reflect.uncommonType.9.5..reflect.rtype, 264

	.type	imt..interface.4Network.0func.8.9.8string.9.2String.0func.8.9.8string.9.2.net.family.0func.8.9.8int.9.2.net.isWildcard.0func.8.9.8bool.9.2.net.sockaddr.0func.8int.9.8syscall.Sockaddr.3error.9.2.net.toLocal.0func.8string.9.8net.sockaddr.9.5..net.IPAddr,@object
	.section	.rodata.imt..interface.4Network.0func.8.9.8string.9.2String.0func.8.9.8string.9.2.net.family.0func.8.9.8int.9.2.net.isWildcard.0func.8.9.8bool.9.2.net.sockaddr.0func.8int.9.8syscall.Sockaddr.3error.9.2.net.toLocal.0func.8string.9.8net.sockaddr.9.5..net.IPAddr,"aG",@progbits,imt..interface.4Network.0func.8.9.8string.9.2String.0func.8.9.8string.9.2.net.family.0func.8.9.8int.9.2.net.isWildcard.0func.8.9.8bool.9.2.net.sockaddr.0func.8int.9.8syscall.Sockaddr.3error.9.2.net.toLocal.0func.8string.9.8net.sockaddr.9.5..net.IPAddr,comdat
	.weak	imt..interface.4Network.0func.8.9.8string.9.2String.0func.8.9.8string.9.2.net.family.0func.8.9.8int.9.2.net.isWildcard.0func.8.9.8bool.9.2.net.sockaddr.0func.8int.9.8syscall.Sockaddr.3error.9.2.net.toLocal.0func.8string.9.8net.sockaddr.9.5..net.IPAddr
	.p2align	4
imt..interface.4Network.0func.8.9.8string.9.2String.0func.8.9.8string.9.2.net.family.0func.8.9.8int.9.2.net.isWildcard.0func.8.9.8bool.9.2.net.sockaddr.0func.8int.9.8syscall.Sockaddr.3error.9.2.net.toLocal.0func.8string.9.8net.sockaddr.9.5..net.IPAddr:
	.quad	net.IPAddr..d
	.quad	net.IPAddr.Network
	.quad	net.IPAddr.String
	.quad	net.IPAddr.family
	.quad	net.IPAddr.isWildcard
	.quad	net.IPAddr.sockaddr
	.quad	net.IPAddr.toLocal
	.size	imt..interface.4Network.0func.8.9.8string.9.2String.0func.8.9.8string.9.2.net.family.0func.8.9.8int.9.2.net.isWildcard.0func.8.9.8bool.9.2.net.sockaddr.0func.8int.9.8syscall.Sockaddr.3error.9.2.net.toLocal.0func.8string.9.8net.sockaddr.9.5..net.IPAddr, 56

	.type	pimt..interface.4Network.0func.8.9.8string.9.2String.0func.8.9.8string.9.2.net.family.0func.8.9.8int.9.2.net.isWildcard.0func.8.9.8bool.9.2.net.sockaddr.0func.8int.9.8syscall.Sockaddr.3error.9.2.net.toLocal.0func.8string.9.8net.sockaddr.9.5..net.IPAddr,@object
	.section	.rodata.pimt..interface.4Network.0func.8.9.8string.9.2String.0func.8.9.8string.9.2.net.family.0func.8.9.8int.9.2.net.isWildcard.0func.8.9.8bool.9.2.net.sockaddr.0func.8int.9.8syscall.Sockaddr.3error.9.2.net.toLocal.0func.8string.9.8net.sockaddr.9.5..net.IPAddr,"aG",@progbits,pimt..interface.4Network.0func.8.9.8string.9.2String.0func.8.9.8string.9.2.net.family.0func.8.9.8int.9.2.net.isWildcard.0func.8.9.8bool.9.2.net.sockaddr.0func.8int.9.8syscall.Sockaddr.3error.9.2.net.toLocal.0func.8string.9.8net.sockaddr.9.5..net.IPAddr,comdat
	.weak	pimt..interface.4Network.0func.8.9.8string.9.2String.0func.8.9.8string.9.2.net.family.0func.8.9.8int.9.2.net.isWildcard.0func.8.9.8bool.9.2.net.sockaddr.0func.8int.9.8syscall.Sockaddr.3error.9.2.net.toLocal.0func.8string.9.8net.sockaddr.9.5..net.IPAddr
	.p2align	4
pimt..interface.4Network.0func.8.9.8string.9.2String.0func.8.9.8string.9.2.net.family.0func.8.9.8int.9.2.net.isWildcard.0func.8.9.8bool.9.2.net.sockaddr.0func.8int.9.8syscall.Sockaddr.3error.9.2.net.toLocal.0func.8string.9.8net.sockaddr.9.5..net.IPAddr:
	.quad	type...1net.IPAddr
	.quad	net.IPAddr.Network
	.quad	net.IPAddr.String
	.quad	net.IPAddr.family
	.quad	net.IPAddr.isWildcard
	.quad	net.IPAddr.sockaddr
	.quad	net.IPAddr.toLocal
	.size	pimt..interface.4Network.0func.8.9.8string.9.2String.0func.8.9.8string.9.2.net.family.0func.8.9.8int.9.2.net.isWildcard.0func.8.9.8bool.9.2.net.sockaddr.0func.8int.9.8syscall.Sockaddr.3error.9.2.net.toLocal.0func.8string.9.8net.sockaddr.9.5..net.IPAddr, 56

	.type	imt..interface.4Network.0func.8.9.8string.9.2String.0func.8.9.8string.9.2.net.family.0func.8.9.8int.9.2.net.isWildcard.0func.8.9.8bool.9.2.net.sockaddr.0func.8int.9.8syscall.Sockaddr.3error.9.2.net.toLocal.0func.8string.9.8net.sockaddr.9.5..net.TCPAddr,@object
	.section	.rodata.imt..interface.4Network.0func.8.9.8string.9.2String.0func.8.9.8string.9.2.net.family.0func.8.9.8int.9.2.net.isWildcard.0func.8.9.8bool.9.2.net.sockaddr.0func.8int.9.8syscall.Sockaddr.3error.9.2.net.toLocal.0func.8string.9.8net.sockaddr.9.5..net.TCPAddr,"aG",@progbits,imt..interface.4Network.0func.8.9.8string.9.2String.0func.8.9.8string.9.2.net.family.0func.8.9.8int.9.2.net.isWildcard.0func.8.9.8bool.9.2.net.sockaddr.0func.8int.9.8syscall.Sockaddr.3error.9.2.net.toLocal.0func.8string.9.8net.sockaddr.9.5..net.TCPAddr,comdat
	.weak	imt..interface.4Network.0func.8.9.8string.9.2String.0func.8.9.8string.9.2.net.family.0func.8.9.8int.9.2.net.isWildcard.0func.8.9.8bool.9.2.net.sockaddr.0func.8int.9.8syscall.Sockaddr.3error.9.2.net.toLocal.0func.8string.9.8net.sockaddr.9.5..net.TCPAddr
	.p2align	4
imt..interface.4Network.0func.8.9.8string.9.2String.0func.8.9.8string.9.2.net.family.0func.8.9.8int.9.2.net.isWildcard.0func.8.9.8bool.9.2.net.sockaddr.0func.8int.9.8syscall.Sockaddr.3error.9.2.net.toLocal.0func.8string.9.8net.sockaddr.9.5..net.TCPAddr:
	.quad	net.TCPAddr..d
	.quad	net.TCPAddr.Network
	.quad	net.TCPAddr.String
	.quad	net.TCPAddr.family
	.quad	net.TCPAddr.isWildcard
	.quad	net.TCPAddr.sockaddr
	.quad	net.TCPAddr.toLocal
	.size	imt..interface.4Network.0func.8.9.8string.9.2String.0func.8.9.8string.9.2.net.family.0func.8.9.8int.9.2.net.isWildcard.0func.8.9.8bool.9.2.net.sockaddr.0func.8int.9.8syscall.Sockaddr.3error.9.2.net.toLocal.0func.8string.9.8net.sockaddr.9.5..net.TCPAddr, 56

	.type	pimt..interface.4Network.0func.8.9.8string.9.2String.0func.8.9.8string.9.2.net.family.0func.8.9.8int.9.2.net.isWildcard.0func.8.9.8bool.9.2.net.sockaddr.0func.8int.9.8syscall.Sockaddr.3error.9.2.net.toLocal.0func.8string.9.8net.sockaddr.9.5..net.TCPAddr,@object
	.section	.rodata.pimt..interface.4Network.0func.8.9.8string.9.2String.0func.8.9.8string.9.2.net.family.0func.8.9.8int.9.2.net.isWildcard.0func.8.9.8bool.9.2.net.sockaddr.0func.8int.9.8syscall.Sockaddr.3error.9.2.net.toLocal.0func.8string.9.8net.sockaddr.9.5..net.TCPAddr,"aG",@progbits,pimt..interface.4Network.0func.8.9.8string.9.2String.0func.8.9.8string.9.2.net.family.0func.8.9.8int.9.2.net.isWildcard.0func.8.9.8bool.9.2.net.sockaddr.0func.8int.9.8syscall.Sockaddr.3error.9.2.net.toLocal.0func.8string.9.8net.sockaddr.9.5..net.TCPAddr,comdat
	.weak	pimt..interface.4Network.0func.8.9.8string.9.2String.0func.8.9.8string.9.2.net.family.0func.8.9.8int.9.2.net.isWildcard.0func.8.9.8bool.9.2.net.sockaddr.0func.8int.9.8syscall.Sockaddr.3error.9.2.net.toLocal.0func.8string.9.8net.sockaddr.9.5..net.TCPAddr
	.p2align	4
pimt..interface.4Network.0func.8.9.8string.9.2String.0func.8.9.8string.9.2.net.family.0func.8.9.8int.9.2.net.isWildcard.0func.8.9.8bool.9.2.net.sockaddr.0func.8int.9.8syscall.Sockaddr.3error.9.2.net.toLocal.0func.8string.9.8net.sockaddr.9.5..net.TCPAddr:
	.quad	type...1net.TCPAddr
	.quad	net.TCPAddr.Network
	.quad	net.TCPAddr.String
	.quad	net.TCPAddr.family
	.quad	net.TCPAddr.isWildcard
	.quad	net.TCPAddr.sockaddr
	.quad	net.TCPAddr.toLocal
	.size	pimt..interface.4Network.0func.8.9.8string.9.2String.0func.8.9.8string.9.2.net.family.0func.8.9.8int.9.2.net.isWildcard.0func.8.9.8bool.9.2.net.sockaddr.0func.8int.9.8syscall.Sockaddr.3error.9.2.net.toLocal.0func.8string.9.8net.sockaddr.9.5..net.TCPAddr, 56

	.type	imt..interface.4Network.0func.8.9.8string.9.2String.0func.8.9.8string.9.2.net.family.0func.8.9.8int.9.2.net.isWildcard.0func.8.9.8bool.9.2.net.sockaddr.0func.8int.9.8syscall.Sockaddr.3error.9.2.net.toLocal.0func.8string.9.8net.sockaddr.9.5..net.UDPAddr,@object
	.section	.rodata.imt..interface.4Network.0func.8.9.8string.9.2String.0func.8.9.8string.9.2.net.family.0func.8.9.8int.9.2.net.isWildcard.0func.8.9.8bool.9.2.net.sockaddr.0func.8int.9.8syscall.Sockaddr.3error.9.2.net.toLocal.0func.8string.9.8net.sockaddr.9.5..net.UDPAddr,"aG",@progbits,imt..interface.4Network.0func.8.9.8string.9.2String.0func.8.9.8string.9.2.net.family.0func.8.9.8int.9.2.net.isWildcard.0func.8.9.8bool.9.2.net.sockaddr.0func.8int.9.8syscall.Sockaddr.3error.9.2.net.toLocal.0func.8string.9.8net.sockaddr.9.5..net.UDPAddr,comdat
	.weak	imt..interface.4Network.0func.8.9.8string.9.2String.0func.8.9.8string.9.2.net.family.0func.8.9.8int.9.2.net.isWildcard.0func.8.9.8bool.9.2.net.sockaddr.0func.8int.9.8syscall.Sockaddr.3error.9.2.net.toLocal.0func.8string.9.8net.sockaddr.9.5..net.UDPAddr
	.p2align	4
imt..interface.4Network.0func.8.9.8string.9.2String.0func.8.9.8string.9.2.net.family.0func.8.9.8int.9.2.net.isWildcard.0func.8.9.8bool.9.2.net.sockaddr.0func.8int.9.8syscall.Sockaddr.3error.9.2.net.toLocal.0func.8string.9.8net.sockaddr.9.5..net.UDPAddr:
	.quad	net.UDPAddr..d
	.quad	net.UDPAddr.Network
	.quad	net.UDPAddr.String
	.quad	net.UDPAddr.family
	.quad	net.UDPAddr.isWildcard
	.quad	net.UDPAddr.sockaddr
	.quad	net.UDPAddr.toLocal
	.size	imt..interface.4Network.0func.8.9.8string.9.2String.0func.8.9.8string.9.2.net.family.0func.8.9.8int.9.2.net.isWildcard.0func.8.9.8bool.9.2.net.sockaddr.0func.8int.9.8syscall.Sockaddr.3error.9.2.net.toLocal.0func.8string.9.8net.sockaddr.9.5..net.UDPAddr, 56

	.type	pimt..interface.4Network.0func.8.9.8string.9.2String.0func.8.9.8string.9.2.net.family.0func.8.9.8int.9.2.net.isWildcard.0func.8.9.8bool.9.2.net.sockaddr.0func.8int.9.8syscall.Sockaddr.3error.9.2.net.toLocal.0func.8string.9.8net.sockaddr.9.5..net.UDPAddr,@object
	.section	.rodata.pimt..interface.4Network.0func.8.9.8string.9.2String.0func.8.9.8string.9.2.net.family.0func.8.9.8int.9.2.net.isWildcard.0func.8.9.8bool.9.2.net.sockaddr.0func.8int.9.8syscall.Sockaddr.3error.9.2.net.toLocal.0func.8string.9.8net.sockaddr.9.5..net.UDPAddr,"aG",@progbits,pimt..interface.4Network.0func.8.9.8string.9.2String.0func.8.9.8string.9.2.net.family.0func.8.9.8int.9.2.net.isWildcard.0func.8.9.8bool.9.2.net.sockaddr.0func.8int.9.8syscall.Sockaddr.3error.9.2.net.toLocal.0func.8string.9.8net.sockaddr.9.5..net.UDPAddr,comdat
	.weak	pimt..interface.4Network.0func.8.9.8string.9.2String.0func.8.9.8string.9.2.net.family.0func.8.9.8int.9.2.net.isWildcard.0func.8.9.8bool.9.2.net.sockaddr.0func.8int.9.8syscall.Sockaddr.3error.9.2.net.toLocal.0func.8string.9.8net.sockaddr.9.5..net.UDPAddr
	.p2align	4
pimt..interface.4Network.0func.8.9.8string.9.2String.0func.8.9.8string.9.2.net.family.0func.8.9.8int.9.2.net.isWildcard.0func.8.9.8bool.9.2.net.sockaddr.0func.8int.9.8syscall.Sockaddr.3error.9.2.net.toLocal.0func.8string.9.8net.sockaddr.9.5..net.UDPAddr:
	.quad	type...1net.UDPAddr
	.quad	net.UDPAddr.Network
	.quad	net.UDPAddr.String
	.quad	net.UDPAddr.family
	.quad	net.UDPAddr.isWildcard
	.quad	net.UDPAddr.sockaddr
	.quad	net.UDPAddr.toLocal
	.size	pimt..interface.4Network.0func.8.9.8string.9.2String.0func.8.9.8string.9.2.net.family.0func.8.9.8int.9.2.net.isWildcard.0func.8.9.8bool.9.2.net.sockaddr.0func.8int.9.8syscall.Sockaddr.3error.9.2.net.toLocal.0func.8string.9.8net.sockaddr.9.5..net.UDPAddr, 56

	.type	imt..interface.4Network.0func.8.9.8string.9.2String.0func.8.9.8string.9.2.net.family.0func.8.9.8int.9.2.net.isWildcard.0func.8.9.8bool.9.2.net.sockaddr.0func.8int.9.8syscall.Sockaddr.3error.9.2.net.toLocal.0func.8string.9.8net.sockaddr.9.5..net.UnixAddr,@object
	.section	.rodata.imt..interface.4Network.0func.8.9.8string.9.2String.0func.8.9.8string.9.2.net.family.0func.8.9.8int.9.2.net.isWildcard.0func.8.9.8bool.9.2.net.sockaddr.0func.8int.9.8syscall.Sockaddr.3error.9.2.net.toLocal.0func.8string.9.8net.sockaddr.9.5..net.UnixAddr,"aG",@progbits,imt..interface.4Network.0func.8.9.8string.9.2String.0func.8.9.8string.9.2.net.family.0func.8.9.8int.9.2.net.isWildcard.0func.8.9.8bool.9.2.net.sockaddr.0func.8int.9.8syscall.Sockaddr.3error.9.2.net.toLocal.0func.8string.9.8net.sockaddr.9.5..net.UnixAddr,comdat
	.weak	imt..interface.4Network.0func.8.9.8string.9.2String.0func.8.9.8string.9.2.net.family.0func.8.9.8int.9.2.net.isWildcard.0func.8.9.8bool.9.2.net.sockaddr.0func.8int.9.8syscall.Sockaddr.3error.9.2.net.toLocal.0func.8string.9.8net.sockaddr.9.5..net.UnixAddr
	.p2align	4
imt..interface.4Network.0func.8.9.8string.9.2String.0func.8.9.8string.9.2.net.family.0func.8.9.8int.9.2.net.isWildcard.0func.8.9.8bool.9.2.net.sockaddr.0func.8int.9.8syscall.Sockaddr.3error.9.2.net.toLocal.0func.8string.9.8net.sockaddr.9.5..net.UnixAddr:
	.quad	net.UnixAddr..d
	.quad	net.UnixAddr.Network
	.quad	net.UnixAddr.String
	.quad	net.UnixAddr.family
	.quad	net.UnixAddr.isWildcard
	.quad	net.UnixAddr.sockaddr
	.quad	net.UnixAddr.toLocal
	.size	imt..interface.4Network.0func.8.9.8string.9.2String.0func.8.9.8string.9.2.net.family.0func.8.9.8int.9.2.net.isWildcard.0func.8.9.8bool.9.2.net.sockaddr.0func.8int.9.8syscall.Sockaddr.3error.9.2.net.toLocal.0func.8string.9.8net.sockaddr.9.5..net.UnixAddr, 56

	.type	pimt..interface.4Network.0func.8.9.8string.9.2String.0func.8.9.8string.9.2.net.family.0func.8.9.8int.9.2.net.isWildcard.0func.8.9.8bool.9.2.net.sockaddr.0func.8int.9.8syscall.Sockaddr.3error.9.2.net.toLocal.0func.8string.9.8net.sockaddr.9.5..net.UnixAddr,@object
	.section	.rodata.pimt..interface.4Network.0func.8.9.8string.9.2String.0func.8.9.8string.9.2.net.family.0func.8.9.8int.9.2.net.isWildcard.0func.8.9.8bool.9.2.net.sockaddr.0func.8int.9.8syscall.Sockaddr.3error.9.2.net.toLocal.0func.8string.9.8net.sockaddr.9.5..net.UnixAddr,"aG",@progbits,pimt..interface.4Network.0func.8.9.8string.9.2String.0func.8.9.8string.9.2.net.family.0func.8.9.8int.9.2.net.isWildcard.0func.8.9.8bool.9.2.net.sockaddr.0func.8int.9.8syscall.Sockaddr.3error.9.2.net.toLocal.0func.8string.9.8net.sockaddr.9.5..net.UnixAddr,comdat
	.weak	pimt..interface.4Network.0func.8.9.8string.9.2String.0func.8.9.8string.9.2.net.family.0func.8.9.8int.9.2.net.isWildcard.0func.8.9.8bool.9.2.net.sockaddr.0func.8int.9.8syscall.Sockaddr.3error.9.2.net.toLocal.0func.8string.9.8net.sockaddr.9.5..net.UnixAddr
	.p2align	4
pimt..interface.4Network.0func.8.9.8string.9.2String.0func.8.9.8string.9.2.net.family.0func.8.9.8int.9.2.net.isWildcard.0func.8.9.8bool.9.2.net.sockaddr.0func.8int.9.8syscall.Sockaddr.3error.9.2.net.toLocal.0func.8string.9.8net.sockaddr.9.5..net.UnixAddr:
	.quad	type...1net.UnixAddr
	.quad	net.UnixAddr.Network
	.quad	net.UnixAddr.String
	.quad	net.UnixAddr.family
	.quad	net.UnixAddr.isWildcard
	.quad	net.UnixAddr.sockaddr
	.quad	net.UnixAddr.toLocal
	.size	pimt..interface.4Network.0func.8.9.8string.9.2String.0func.8.9.8string.9.2.net.family.0func.8.9.8int.9.2.net.isWildcard.0func.8.9.8bool.9.2.net.sockaddr.0func.8int.9.8syscall.Sockaddr.3error.9.2.net.toLocal.0func.8string.9.8net.sockaddr.9.5..net.UnixAddr, 56

	.type	command_line_arguments.Client..d,@object
	.section	.rodata.command_line_arguments.Client..d,"a",@progbits
	.globl	command_line_arguments.Client..d
	.p2align	4
command_line_arguments.Client..d:
	.quad	288
	.quad	288
	.long	2393802025
	.byte	25
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..krejGtib
	.quad	go..C1
	.quad	go..C5
	.quad	type...1command_line_arguments.Client
	.quad	go..C171
	.quad	19
	.quad	19
	.size	command_line_arguments.Client..d, 96

	.type	gcbits..krejGtib,@object
	.section	.rodata.gcbits..krejGtib,"aG",@progbits,gcbits..krejGtib,comdat
	.weak	gcbits..krejGtib
gcbits..krejGtib:
	.ascii	"*\222\364'\n"
	.size	gcbits..krejGtib, 5

	.type	.Lconst.0,@object
	.section	.rodata..Lconst.0,"a",@progbits
.Lconst.0:
	.asciz	"\tcommand_line_arguments\tsubnet.Client"
	.size	.Lconst.0, 38

	.type	go..C1,@object
	.section	.rodata.go..C1,"a",@progbits
	.p2align	3
go..C1:
	.quad	.Lconst.0
	.quad	37
	.size	go..C1, 16

	.type	.Lconst.1,@object
	.section	.rodata..Lconst.1,"a",@progbits
.Lconst.1:
	.asciz	"Client"
	.size	.Lconst.1, 7

	.type	go..C2,@object
	.section	.rodata.go..C2,"a",@progbits
	.p2align	3
go..C2:
	.quad	.Lconst.1
	.quad	6
	.size	go..C2, 16

	.type	.Lconst.2,@object
	.section	.rodata..Lconst.2,"a",@progbits
.Lconst.2:
	.asciz	"command-line-arguments"
	.size	.Lconst.2, 23

	.type	go..C3,@object
	.section	.rodata.go..C3,"a",@progbits
	.p2align	3
go..C3:
	.quad	.Lconst.2
	.quad	22
	.size	go..C3, 16

	.type	go..C4,@object
	.section	.bss.go..C4,"aw",@nobits
	.p2align	4
go..C4:
	.zero	40
	.size	go..C4, 40

	.type	go..C5,@object
	.section	.rodata.go..C5,"a",@progbits
	.p2align	4
go..C5:
	.quad	go..C2
	.quad	go..C3
	.quad	go..C4
	.quad	0
	.quad	0
	.size	go..C5, 40

	.type	type...1command_line_arguments.Client,@object
	.section	.rodata.type...1command_line_arguments.Client,"aG",@progbits,type...1command_line_arguments.Client,comdat
	.weak	type...1command_line_arguments.Client
	.p2align	4
type...1command_line_arguments.Client:
	.quad	8
	.quad	8
	.long	3941094041
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C6
	.quad	go..C59
	.quad	type...1.1command_line_arguments.Client
	.quad	command_line_arguments.Client..d
	.size	type...1command_line_arguments.Client, 80

	.type	gcbits..ba,@object
	.section	.rodata.gcbits..ba,"aG",@progbits,gcbits..ba,comdat
	.weak	gcbits..ba
gcbits..ba:
	.byte	1
	.size	gcbits..ba, 1

	.type	.Lconst.3,@object
	.section	.rodata..Lconst.3,"a",@progbits
.Lconst.3:
	.asciz	"*\tcommand_line_arguments\tsubnet.Client"
	.size	.Lconst.3, 39

	.type	go..C6,@object
	.section	.rodata.go..C6,"a",@progbits
	.p2align	3
go..C6:
	.quad	.Lconst.3
	.quad	38
	.size	go..C6, 16

	.type	.Lconst.4,@object
	.section	.rodata..Lconst.4,"a",@progbits
.Lconst.4:
	.asciz	"Close"
	.size	.Lconst.4, 6

	.type	go..C7,@object
	.section	.rodata.go..C7,"a",@progbits
	.p2align	3
go..C7:
	.quad	.Lconst.4
	.quad	5
	.size	go..C7, 16

	.type	type..func.8.9.8error.9,@object
	.section	.rodata.type..func.8.9.8error.9,"aG",@progbits,type..func.8.9.8error.9,comdat
	.weak	type..func.8.9.8error.9
	.p2align	4
type..func.8.9.8error.9:
	.quad	8
	.quad	8
	.long	1188738504
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C8
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C9
	.quad	0
	.quad	0
	.quad	go..C25
	.quad	1
	.quad	1
	.size	type..func.8.9.8error.9, 128

	.type	.Lconst.5,@object
	.section	.rodata..Lconst.5,"a",@progbits
.Lconst.5:
	.asciz	"func() error"
	.size	.Lconst.5, 13

	.type	go..C8,@object
	.section	.rodata.go..C8,"a",@progbits
	.p2align	3
go..C8:
	.quad	.Lconst.5
	.quad	12
	.size	go..C8, 16

	.type	go..C9,@object
	.section	.bss.go..C9,"aw",@nobits
	.p2align	3
go..C9:
	.zero	8
	.size	go..C9, 8

	.type	error..d,@object
	.section	.rodata.error..d,"aG",@progbits,error..d,comdat
	.weak	error..d
	.p2align	4
error..d:
	.quad	16
	.quad	16
	.long	2166057687
	.byte	20
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.interhash..f
	.quad	runtime.interequal..f
	.quad	gcbits..da
	.quad	go..C10
	.quad	go..C13
	.quad	type...1error
	.quad	go..C24
	.quad	1
	.quad	1
	.size	error..d, 96

	.type	gcbits..da,@object
	.section	.rodata.gcbits..da,"aG",@progbits,gcbits..da,comdat
	.weak	gcbits..da
gcbits..da:
	.byte	3
	.size	gcbits..da, 1

	.type	.Lconst.6,@object
	.section	.rodata..Lconst.6,"a",@progbits
.Lconst.6:
	.asciz	"error"
	.size	.Lconst.6, 6

	.type	go..C10,@object
	.section	.rodata.go..C10,"a",@progbits
	.p2align	3
go..C10:
	.quad	.Lconst.6
	.quad	5
	.size	go..C10, 16

	.type	go..C11,@object
	.section	.rodata.go..C11,"a",@progbits
	.p2align	3
go..C11:
	.quad	.Lconst.6
	.quad	5
	.size	go..C11, 16

	.type	go..C12,@object
	.section	.bss.go..C12,"aw",@nobits
	.p2align	4
go..C12:
	.zero	40
	.size	go..C12, 40

	.type	go..C13,@object
	.section	.rodata.go..C13,"a",@progbits
	.p2align	4
go..C13:
	.quad	go..C11
	.quad	0
	.quad	go..C12
	.quad	0
	.quad	0
	.size	go..C13, 40

	.type	type...1error,@object
	.section	.rodata.type...1error,"aG",@progbits,type...1error,comdat
	.weak	type...1error
	.p2align	4
type...1error:
	.quad	8
	.quad	8
	.long	297184633
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C14
	.quad	0
	.quad	0
	.quad	error..d
	.size	type...1error, 80

	.type	.Lconst.7,@object
	.section	.rodata..Lconst.7,"a",@progbits
.Lconst.7:
	.asciz	"*error"
	.size	.Lconst.7, 7

	.type	go..C14,@object
	.section	.rodata.go..C14,"a",@progbits
	.p2align	3
go..C14:
	.quad	.Lconst.7
	.quad	6
	.size	go..C14, 16

	.type	.Lconst.8,@object
	.section	.rodata..Lconst.8,"a",@progbits
.Lconst.8:
	.asciz	"Error"
	.size	.Lconst.8, 6

	.type	go..C15,@object
	.section	.rodata.go..C15,"a",@progbits
	.p2align	3
go..C15:
	.quad	.Lconst.8
	.quad	5
	.size	go..C15, 16

	.type	type..func.8.9.8string.9,@object
	.section	.rodata.type..func.8.9.8string.9,"aG",@progbits,type..func.8.9.8string.9,comdat
	.weak	type..func.8.9.8string.9
	.p2align	4
type..func.8.9.8string.9:
	.quad	8
	.quad	8
	.long	916039304
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C16
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C17
	.quad	0
	.quad	0
	.quad	go..C23
	.quad	1
	.quad	1
	.size	type..func.8.9.8string.9, 128

	.type	.Lconst.9,@object
	.section	.rodata..Lconst.9,"a",@progbits
.Lconst.9:
	.asciz	"func() string"
	.size	.Lconst.9, 14

	.type	go..C16,@object
	.section	.rodata.go..C16,"a",@progbits
	.p2align	3
go..C16:
	.quad	.Lconst.9
	.quad	13
	.size	go..C16, 16

	.type	go..C17,@object
	.section	.bss.go..C17,"aw",@nobits
	.p2align	3
go..C17:
	.zero	8
	.size	go..C17, 8

	.type	string..d,@object
	.section	.rodata.string..d,"aG",@progbits,string..d,comdat
	.weak	string..d
	.p2align	4
string..d:
	.quad	16
	.quad	8
	.long	2296014490
	.byte	24
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.strhash..f
	.quad	runtime.strequal..f
	.quad	gcbits..ba
	.quad	go..C18
	.quad	go..C21
	.quad	type...1string
	.size	string..d, 72

	.type	.Lconst.10,@object
	.section	.rodata..Lconst.10,"a",@progbits
.Lconst.10:
	.asciz	"string"
	.size	.Lconst.10, 7

	.type	go..C18,@object
	.section	.rodata.go..C18,"a",@progbits
	.p2align	3
go..C18:
	.quad	.Lconst.10
	.quad	6
	.size	go..C18, 16

	.type	go..C19,@object
	.section	.rodata.go..C19,"a",@progbits
	.p2align	3
go..C19:
	.quad	.Lconst.10
	.quad	6
	.size	go..C19, 16

	.type	go..C20,@object
	.section	.bss.go..C20,"aw",@nobits
	.p2align	4
go..C20:
	.zero	40
	.size	go..C20, 40

	.type	go..C21,@object
	.section	.rodata.go..C21,"a",@progbits
	.p2align	4
go..C21:
	.quad	go..C19
	.quad	0
	.quad	go..C20
	.quad	0
	.quad	0
	.size	go..C21, 40

	.type	type...1string,@object
	.section	.rodata.type...1string,"aG",@progbits,type...1string,comdat
	.weak	type...1string
	.p2align	4
type...1string:
	.quad	8
	.quad	8
	.long	2376493481
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C22
	.quad	0
	.quad	0
	.quad	string..d
	.size	type...1string, 80

	.type	.Lconst.11,@object
	.section	.rodata..Lconst.11,"a",@progbits
.Lconst.11:
	.asciz	"*string"
	.size	.Lconst.11, 8

	.type	go..C22,@object
	.section	.rodata.go..C22,"a",@progbits
	.p2align	3
go..C22:
	.quad	.Lconst.11
	.quad	7
	.size	go..C22, 16

	.type	go..C23,@object
	.section	.data.go..C23,"aw",@progbits
	.p2align	3
go..C23:
	.quad	string..d
	.size	go..C23, 8

	.type	go..C24,@object
	.section	.data.go..C24,"aw",@progbits
	.p2align	4
go..C24:
	.quad	go..C15
	.quad	0
	.quad	type..func.8.9.8string.9
	.size	go..C24, 24

	.type	go..C25,@object
	.section	.data.go..C25,"aw",@progbits
	.p2align	3
go..C25:
	.quad	error..d
	.size	go..C25, 8

	.type	type..func.8.1command_line_arguments.Client.9.8error.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.Client.9.8error.9,"aG",@progbits,type..func.8.1command_line_arguments.Client.9.8error.9,comdat
	.weak	type..func.8.1command_line_arguments.Client.9.8error.9
	.p2align	4
type..func.8.1command_line_arguments.Client.9.8error.9:
	.quad	8
	.quad	8
	.long	2749696232
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C26
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C27
	.quad	1
	.quad	1
	.quad	go..C28
	.quad	1
	.quad	1
	.size	type..func.8.1command_line_arguments.Client.9.8error.9, 128

	.type	.Lconst.12,@object
	.section	.rodata..Lconst.12,"a",@progbits
.Lconst.12:
	.asciz	"func(*\tcommand_line_arguments\tsubnet.Client) error"
	.size	.Lconst.12, 51

	.type	go..C26,@object
	.section	.rodata.go..C26,"a",@progbits
	.p2align	3
go..C26:
	.quad	.Lconst.12
	.quad	50
	.size	go..C26, 16

	.type	go..C27,@object
	.section	.data.go..C27,"aw",@progbits
	.p2align	3
go..C27:
	.quad	type...1command_line_arguments.Client
	.size	go..C27, 8

	.type	go..C28,@object
	.section	.data.go..C28,"aw",@progbits
	.p2align	3
go..C28:
	.quad	error..d
	.size	go..C28, 8

	.type	.Lconst.13,@object
	.section	.rodata..Lconst.13,"a",@progbits
.Lconst.13:
	.asciz	"Run"
	.size	.Lconst.13, 4

	.type	go..C29,@object
	.section	.rodata.go..C29,"a",@progbits
	.p2align	3
go..C29:
	.quad	.Lconst.13
	.quad	3
	.size	go..C29, 16

	.type	type..func.8.9.8.9,@object
	.section	.rodata.type..func.8.9.8.9,"aG",@progbits,type..func.8.9.8.9,comdat
	.weak	type..func.8.9.8.9
	.p2align	4
type..func.8.9.8.9:
	.quad	8
	.quad	8
	.long	8
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C30
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C31
	.quad	0
	.quad	0
	.quad	go..C32
	.quad	0
	.quad	0
	.size	type..func.8.9.8.9, 128

	.type	.Lconst.14,@object
	.section	.rodata..Lconst.14,"a",@progbits
.Lconst.14:
	.asciz	"func()"
	.size	.Lconst.14, 7

	.type	go..C30,@object
	.section	.rodata.go..C30,"a",@progbits
	.p2align	3
go..C30:
	.quad	.Lconst.14
	.quad	6
	.size	go..C30, 16

	.type	go..C31,@object
	.section	.bss.go..C31,"aw",@nobits
	.p2align	3
go..C31:
	.zero	8
	.size	go..C31, 8

	.type	go..C32,@object
	.section	.bss.go..C32,"aw",@nobits
	.p2align	3
go..C32:
	.zero	8
	.size	go..C32, 8

	.type	type..func.8.1command_line_arguments.Client.9.8.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.Client.9.8.9,"aG",@progbits,type..func.8.1command_line_arguments.Client.9.8.9,comdat
	.weak	type..func.8.1command_line_arguments.Client.9.8.9
	.p2align	4
type..func.8.1command_line_arguments.Client.9.8.9:
	.quad	8
	.quad	8
	.long	1560957736
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C33
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C34
	.quad	1
	.quad	1
	.quad	go..C35
	.quad	0
	.quad	0
	.size	type..func.8.1command_line_arguments.Client.9.8.9, 128

	.type	.Lconst.15,@object
	.section	.rodata..Lconst.15,"a",@progbits
.Lconst.15:
	.asciz	"func(*\tcommand_line_arguments\tsubnet.Client)"
	.size	.Lconst.15, 45

	.type	go..C33,@object
	.section	.rodata.go..C33,"a",@progbits
	.p2align	3
go..C33:
	.quad	.Lconst.15
	.quad	44
	.size	go..C33, 16

	.type	go..C34,@object
	.section	.data.go..C34,"aw",@progbits
	.p2align	3
go..C34:
	.quad	type...1command_line_arguments.Client
	.size	go..C34, 8

	.type	go..C35,@object
	.section	.bss.go..C35,"aw",@nobits
	.p2align	3
go..C35:
	.zero	8
	.size	go..C35, 8

	.type	.Lconst.16,@object
	.section	.rodata..Lconst.16,"a",@progbits
.Lconst.16:
	.asciz	"connectionProblem"
	.size	.Lconst.16, 18

	.type	go..C36,@object
	.section	.rodata.go..C36,"a",@progbits
	.p2align	3
go..C36:
	.quad	.Lconst.16
	.quad	17
	.size	go..C36, 16

	.type	go..C37,@object
	.section	.rodata.go..C37,"a",@progbits
	.p2align	3
go..C37:
	.quad	.Lconst.2
	.quad	22
	.size	go..C37, 16

	.type	.Lconst.17,@object
	.section	.rodata..Lconst.17,"a",@progbits
.Lconst.17:
	.asciz	"init"
	.size	.Lconst.17, 5

	.type	go..C38,@object
	.section	.rodata.go..C38,"a",@progbits
	.p2align	3
go..C38:
	.quad	.Lconst.17
	.quad	4
	.size	go..C38, 16

	.type	go..C39,@object
	.section	.rodata.go..C39,"a",@progbits
	.p2align	3
go..C39:
	.quad	.Lconst.2
	.quad	22
	.size	go..C39, 16

	.type	type..func.8string.3string.9.8error.9,@object
	.section	.rodata.type..func.8string.3string.9.8error.9,"aG",@progbits,type..func.8string.3string.9.8error.9,comdat
	.weak	type..func.8string.3string.9.8error.9
	.p2align	4
type..func.8string.3string.9.8error.9:
	.quad	8
	.quad	8
	.long	2562797448
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C40
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C41
	.quad	2
	.quad	2
	.quad	go..C42
	.quad	1
	.quad	1
	.size	type..func.8string.3string.9.8error.9, 128

	.type	.Lconst.18,@object
	.section	.rodata..Lconst.18,"a",@progbits
.Lconst.18:
	.asciz	"func(string, string) error"
	.size	.Lconst.18, 27

	.type	go..C40,@object
	.section	.rodata.go..C40,"a",@progbits
	.p2align	3
go..C40:
	.quad	.Lconst.18
	.quad	26
	.size	go..C40, 16

	.type	go..C41,@object
	.section	.data.go..C41,"aw",@progbits
	.p2align	3
go..C41:
	.quad	string..d
	.quad	string..d
	.size	go..C41, 16

	.type	go..C42,@object
	.section	.data.go..C42,"aw",@progbits
	.p2align	3
go..C42:
	.quad	error..d
	.size	go..C42, 8

	.type	type..func.8.1command_line_arguments.Client.3string.3string.9.8error.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.Client.3string.3string.9.8error.9,"aG",@progbits,type..func.8.1command_line_arguments.Client.3string.3string.9.8error.9,comdat
	.weak	type..func.8.1command_line_arguments.Client.3string.3string.9.8error.9
	.p2align	4
type..func.8.1command_line_arguments.Client.3string.3string.9.8error.9:
	.quad	8
	.quad	8
	.long	1202846824
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C43
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C44
	.quad	3
	.quad	3
	.quad	go..C45
	.quad	1
	.quad	1
	.size	type..func.8.1command_line_arguments.Client.3string.3string.9.8error.9, 128

	.type	.Lconst.19,@object
	.section	.rodata..Lconst.19,"a",@progbits
.Lconst.19:
	.asciz	"func(*\tcommand_line_arguments\tsubnet.Client, string, string) error"
	.size	.Lconst.19, 67

	.type	go..C43,@object
	.section	.rodata.go..C43,"a",@progbits
	.p2align	3
go..C43:
	.quad	.Lconst.19
	.quad	66
	.size	go..C43, 16

	.type	go..C44,@object
	.section	.data.go..C44,"aw",@progbits
	.p2align	4
go..C44:
	.quad	type...1command_line_arguments.Client
	.quad	string..d
	.quad	string..d
	.size	go..C44, 24

	.type	go..C45,@object
	.section	.data.go..C45,"aw",@progbits
	.p2align	3
go..C45:
	.quad	error..d
	.size	go..C45, 8

	.type	.Lconst.20,@object
	.section	.rodata..Lconst.20,"a",@progbits
.Lconst.20:
	.asciz	"netRecvRoutine"
	.size	.Lconst.20, 15

	.type	go..C46,@object
	.section	.rodata.go..C46,"a",@progbits
	.p2align	3
go..C46:
	.quad	.Lconst.20
	.quad	14
	.size	go..C46, 16

	.type	go..C47,@object
	.section	.rodata.go..C47,"a",@progbits
	.p2align	3
go..C47:
	.quad	.Lconst.2
	.quad	22
	.size	go..C47, 16

	.type	.Lconst.21,@object
	.section	.rodata..Lconst.21,"a",@progbits
.Lconst.21:
	.asciz	"netSendRoutine"
	.size	.Lconst.21, 15

	.type	go..C48,@object
	.section	.rodata.go..C48,"a",@progbits
	.p2align	3
go..C48:
	.quad	.Lconst.21
	.quad	14
	.size	go..C48, 16

	.type	go..C49,@object
	.section	.rodata.go..C49,"a",@progbits
	.p2align	3
go..C49:
	.quad	.Lconst.2
	.quad	22
	.size	go..C49, 16

	.type	.Lconst.22,@object
	.section	.rodata..Lconst.22,"a",@progbits
.Lconst.22:
	.asciz	"sendLocalAddr"
	.size	.Lconst.22, 14

	.type	go..C50,@object
	.section	.rodata.go..C50,"a",@progbits
	.p2align	3
go..C50:
	.quad	.Lconst.22
	.quad	13
	.size	go..C50, 16

	.type	go..C51,@object
	.section	.rodata.go..C51,"a",@progbits
	.p2align	3
go..C51:
	.quad	.Lconst.2
	.quad	22
	.size	go..C51, 16

	.type	type..func.8.1encoding_gob.Encoder.9.8error.9,@object
	.section	.rodata.type..func.8.1encoding_gob.Encoder.9.8error.9,"aG",@progbits,type..func.8.1encoding_gob.Encoder.9.8error.9,comdat
	.weak	type..func.8.1encoding_gob.Encoder.9.8error.9
	.p2align	4
type..func.8.1encoding_gob.Encoder.9.8error.9:
	.quad	8
	.quad	8
	.long	2166074600
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C52
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C53
	.quad	1
	.quad	1
	.quad	go..C54
	.quad	1
	.quad	1
	.size	type..func.8.1encoding_gob.Encoder.9.8error.9, 128

	.type	.Lconst.23,@object
	.section	.rodata..Lconst.23,"a",@progbits
.Lconst.23:
	.asciz	"func(*\tencoding_gob\tgob.Encoder) error"
	.size	.Lconst.23, 39

	.type	go..C52,@object
	.section	.rodata.go..C52,"a",@progbits
	.p2align	3
go..C52:
	.quad	.Lconst.23
	.quad	38
	.size	go..C52, 16

	.type	go..C53,@object
	.section	.data.go..C53,"aw",@progbits
	.p2align	3
go..C53:
	.quad	type...1encoding_gob.Encoder
	.size	go..C53, 8

	.type	go..C54,@object
	.section	.data.go..C54,"aw",@progbits
	.p2align	3
go..C54:
	.quad	error..d
	.size	go..C54, 8

	.type	type..func.8.1command_line_arguments.Client.3.1encoding_gob.Encoder.9.8error.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.Client.3.1encoding_gob.Encoder.9.8error.9,"aG",@progbits,type..func.8.1command_line_arguments.Client.3.1encoding_gob.Encoder.9.8error.9,comdat
	.weak	type..func.8.1command_line_arguments.Client.3.1encoding_gob.Encoder.9.8error.9
	.p2align	4
type..func.8.1command_line_arguments.Client.3.1encoding_gob.Encoder.9.8error.9:
	.quad	8
	.quad	8
	.long	409401128
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C55
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C56
	.quad	2
	.quad	2
	.quad	go..C57
	.quad	1
	.quad	1
	.size	type..func.8.1command_line_arguments.Client.3.1encoding_gob.Encoder.9.8error.9, 128

	.type	.Lconst.24,@object
	.section	.rodata..Lconst.24,"a",@progbits
.Lconst.24:
	.asciz	"func(*\tcommand_line_arguments\tsubnet.Client, *\tencoding_gob\tgob.Encoder) error"
	.size	.Lconst.24, 79

	.type	go..C55,@object
	.section	.rodata.go..C55,"a",@progbits
	.p2align	3
go..C55:
	.quad	.Lconst.24
	.quad	78
	.size	go..C55, 16

	.type	go..C56,@object
	.section	.data.go..C56,"aw",@progbits
	.p2align	3
go..C56:
	.quad	type...1command_line_arguments.Client
	.quad	type...1encoding_gob.Encoder
	.size	go..C56, 16

	.type	go..C57,@object
	.section	.data.go..C57,"aw",@progbits
	.p2align	3
go..C57:
	.quad	error..d
	.size	go..C57, 8

	.type	go..C58,@object
	.section	.data.go..C58,"aw",@progbits
	.p2align	4
go..C58:
	.quad	go..C7
	.quad	0
	.quad	type..func.8.9.8error.9
	.quad	type..func.8.1command_line_arguments.Client.9.8error.9
	.quad	command_line_arguments.Client.Close
	.quad	go..C29
	.quad	0
	.quad	type..func.8.9.8.9
	.quad	type..func.8.1command_line_arguments.Client.9.8.9
	.quad	command_line_arguments.Client.Run
	.quad	go..C36
	.quad	go..C37
	.quad	type..func.8.9.8.9
	.quad	type..func.8.1command_line_arguments.Client.9.8.9
	.quad	command_line_arguments.Client.connectionProblem
	.quad	go..C38
	.quad	go..C39
	.quad	type..func.8string.3string.9.8error.9
	.quad	type..func.8.1command_line_arguments.Client.3string.3string.9.8error.9
	.quad	command_line_arguments.Client.init
	.quad	go..C46
	.quad	go..C47
	.quad	type..func.8.9.8.9
	.quad	type..func.8.1command_line_arguments.Client.9.8.9
	.quad	command_line_arguments.Client.netRecvRoutine
	.quad	go..C48
	.quad	go..C49
	.quad	type..func.8.9.8.9
	.quad	type..func.8.1command_line_arguments.Client.9.8.9
	.quad	command_line_arguments.Client.netSendRoutine
	.quad	go..C50
	.quad	go..C51
	.quad	type..func.8.1encoding_gob.Encoder.9.8error.9
	.quad	type..func.8.1command_line_arguments.Client.3.1encoding_gob.Encoder.9.8error.9
	.quad	command_line_arguments.Client.sendLocalAddr
	.size	go..C58, 280

	.type	go..C59,@object
	.section	.rodata.go..C59,"a",@progbits
	.p2align	4
go..C59:
	.quad	0
	.quad	0
	.quad	go..C58
	.quad	7
	.quad	7
	.size	go..C59, 40

	.type	type...1.1command_line_arguments.Client,@object
	.section	.rodata.type...1.1command_line_arguments.Client,"aG",@progbits,type...1.1command_line_arguments.Client,comdat
	.weak	type...1.1command_line_arguments.Client
	.p2align	4
type...1.1command_line_arguments.Client:
	.quad	8
	.quad	8
	.long	2927962521
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C60
	.quad	0
	.quad	0
	.quad	type...1command_line_arguments.Client
	.size	type...1.1command_line_arguments.Client, 80

	.type	.Lconst.25,@object
	.section	.rodata..Lconst.25,"a",@progbits
.Lconst.25:
	.asciz	"**\tcommand_line_arguments\tsubnet.Client"
	.size	.Lconst.25, 40

	.type	go..C60,@object
	.section	.rodata.go..C60,"a",@progbits
	.p2align	3
go..C60:
	.quad	.Lconst.25
	.quad	39
	.size	go..C60, 16

	.type	.Lconst.26,@object
	.section	.rodata..Lconst.26,"a",@progbits
.Lconst.26:
	.asciz	"debugMessages"
	.size	.Lconst.26, 14

	.type	go..C61,@object
	.section	.rodata.go..C61,"a",@progbits
	.p2align	3
go..C61:
	.quad	.Lconst.26
	.quad	13
	.size	go..C61, 16

	.type	go..C62,@object
	.section	.rodata.go..C62,"a",@progbits
	.p2align	3
go..C62:
	.quad	.Lconst.2
	.quad	22
	.size	go..C62, 16

	.type	bool..d,@object
	.section	.rodata.bool..d,"aG",@progbits,bool..d,comdat
	.weak	bool..d
	.p2align	4
bool..d:
	.quad	1
	.quad	0
	.long	1537849745
	.byte	129
	.byte	1
	.byte	1
	.zero	1
	.quad	runtime.memhash8..f
	.quad	runtime.memequal8..f
	.quad	0
	.quad	go..C63
	.quad	go..C66
	.quad	type...1bool
	.size	bool..d, 72

	.type	.Lconst.27,@object
	.section	.rodata..Lconst.27,"a",@progbits
.Lconst.27:
	.asciz	"bool"
	.size	.Lconst.27, 5

	.type	go..C63,@object
	.section	.rodata.go..C63,"a",@progbits
	.p2align	3
go..C63:
	.quad	.Lconst.27
	.quad	4
	.size	go..C63, 16

	.type	go..C64,@object
	.section	.rodata.go..C64,"a",@progbits
	.p2align	3
go..C64:
	.quad	.Lconst.27
	.quad	4
	.size	go..C64, 16

	.type	go..C65,@object
	.section	.bss.go..C65,"aw",@nobits
	.p2align	4
go..C65:
	.zero	40
	.size	go..C65, 40

	.type	go..C66,@object
	.section	.rodata.go..C66,"a",@progbits
	.p2align	4
go..C66:
	.quad	go..C64
	.quad	0
	.quad	go..C65
	.quad	0
	.quad	0
	.size	go..C66, 40

	.type	type...1bool,@object
	.section	.rodata.type...1bool,"aG",@progbits,type...1bool,comdat
	.weak	type...1bool
	.p2align	4
type...1bool:
	.quad	8
	.quad	8
	.long	3130759449
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C67
	.quad	0
	.quad	0
	.quad	bool..d
	.size	type...1bool, 80

	.type	.Lconst.28,@object
	.section	.rodata..Lconst.28,"a",@progbits
.Lconst.28:
	.asciz	"*bool"
	.size	.Lconst.28, 6

	.type	go..C67,@object
	.section	.rodata.go..C67,"a",@progbits
	.p2align	3
go..C67:
	.quad	.Lconst.28
	.quad	5
	.size	go..C67, 16

	.type	.Lconst.29,@object
	.section	.rodata..Lconst.29,"a",@progbits
.Lconst.29:
	.asciz	"newGateway"
	.size	.Lconst.29, 11

	.type	go..C68,@object
	.section	.rodata.go..C68,"a",@progbits
	.p2align	3
go..C68:
	.quad	.Lconst.29
	.quad	10
	.size	go..C68, 16

	.type	go..C69,@object
	.section	.rodata.go..C69,"a",@progbits
	.p2align	3
go..C69:
	.quad	.Lconst.2
	.quad	22
	.size	go..C69, 16

	.type	.Lconst.30,@object
	.section	.rodata..Lconst.30,"a",@progbits
.Lconst.30:
	.asciz	"serverAddr"
	.size	.Lconst.30, 11

	.type	go..C70,@object
	.section	.rodata.go..C70,"a",@progbits
	.p2align	3
go..C70:
	.quad	.Lconst.30
	.quad	10
	.size	go..C70, 16

	.type	go..C71,@object
	.section	.rodata.go..C71,"a",@progbits
	.p2align	3
go..C71:
	.quad	.Lconst.2
	.quad	22
	.size	go..C71, 16

	.type	.Lconst.31,@object
	.section	.rodata..Lconst.31,"a",@progbits
.Lconst.31:
	.asciz	"port"
	.size	.Lconst.31, 5

	.type	go..C72,@object
	.section	.rodata.go..C72,"a",@progbits
	.p2align	3
go..C72:
	.quad	.Lconst.31
	.quad	4
	.size	go..C72, 16

	.type	go..C73,@object
	.section	.rodata.go..C73,"a",@progbits
	.p2align	3
go..C73:
	.quad	.Lconst.2
	.quad	22
	.size	go..C73, 16

	.type	.Lconst.32,@object
	.section	.rodata..Lconst.32,"a",@progbits
.Lconst.32:
	.asciz	"wg"
	.size	.Lconst.32, 3

	.type	go..C74,@object
	.section	.rodata.go..C74,"a",@progbits
	.p2align	3
go..C74:
	.quad	.Lconst.32
	.quad	2
	.size	go..C74, 16

	.type	go..C75,@object
	.section	.rodata.go..C75,"a",@progbits
	.p2align	3
go..C75:
	.quad	.Lconst.2
	.quad	22
	.size	go..C75, 16

	.type	.Lconst.33,@object
	.section	.rodata..Lconst.33,"a",@progbits
.Lconst.33:
	.asciz	"serverIP"
	.size	.Lconst.33, 9

	.type	go..C76,@object
	.section	.rodata.go..C76,"a",@progbits
	.p2align	3
go..C76:
	.quad	.Lconst.33
	.quad	8
	.size	go..C76, 16

	.type	go..C77,@object
	.section	.rodata.go..C77,"a",@progbits
	.p2align	3
go..C77:
	.quad	.Lconst.2
	.quad	22
	.size	go..C77, 16

	.type	.Lconst.34,@object
	.section	.rodata..Lconst.34,"a",@progbits
.Lconst.34:
	.asciz	"localAddr"
	.size	.Lconst.34, 10

	.type	go..C78,@object
	.section	.rodata.go..C78,"a",@progbits
	.p2align	3
go..C78:
	.quad	.Lconst.34
	.quad	9
	.size	go..C78, 16

	.type	go..C79,@object
	.section	.rodata.go..C79,"a",@progbits
	.p2align	3
go..C79:
	.quad	.Lconst.2
	.quad	22
	.size	go..C79, 16

	.type	.Lconst.35,@object
	.section	.rodata..Lconst.35,"a",@progbits
.Lconst.35:
	.asciz	"additionalAddrs"
	.size	.Lconst.35, 16

	.type	go..C80,@object
	.section	.rodata.go..C80,"a",@progbits
	.p2align	3
go..C80:
	.quad	.Lconst.35
	.quad	15
	.size	go..C80, 16

	.type	go..C81,@object
	.section	.rodata.go..C81,"a",@progbits
	.p2align	3
go..C81:
	.quad	.Lconst.2
	.quad	22
	.size	go..C81, 16

	.type	type...6.7net.IP,@object
	.section	.rodata.type...6.7net.IP,"aG",@progbits,type...6.7net.IP,comdat
	.weak	type...6.7net.IP
	.p2align	4
type...6.7net.IP:
	.quad	24
	.quad	8
	.long	778256691
	.byte	23
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C82
	.quad	0
	.quad	0
	.quad	net.IP..d
	.size	type...6.7net.IP, 80

	.type	.Lconst.36,@object
	.section	.rodata..Lconst.36,"a",@progbits
.Lconst.36:
	.asciz	"[]\tnet\tnet.IP"
	.size	.Lconst.36, 14

	.type	go..C82,@object
	.section	.rodata.go..C82,"a",@progbits
	.p2align	3
go..C82:
	.quad	.Lconst.36
	.quad	13
	.size	go..C82, 16

	.type	.Lconst.37,@object
	.section	.rodata..Lconst.37,"a",@progbits
.Lconst.37:
	.asciz	"localNetMask"
	.size	.Lconst.37, 13

	.type	go..C83,@object
	.section	.rodata.go..C83,"a",@progbits
	.p2align	3
go..C83:
	.quad	.Lconst.37
	.quad	12
	.size	go..C83, 16

	.type	go..C84,@object
	.section	.rodata.go..C84,"a",@progbits
	.p2align	3
go..C84:
	.quad	.Lconst.2
	.quad	22
	.size	go..C84, 16

	.type	.Lconst.38,@object
	.section	.rodata..Lconst.38,"a",@progbits
.Lconst.38:
	.asciz	"isShuttingDown"
	.size	.Lconst.38, 15

	.type	go..C85,@object
	.section	.rodata.go..C85,"a",@progbits
	.p2align	3
go..C85:
	.quad	.Lconst.38
	.quad	14
	.size	go..C85, 16

	.type	go..C86,@object
	.section	.rodata.go..C86,"a",@progbits
	.p2align	3
go..C86:
	.quad	.Lconst.2
	.quad	22
	.size	go..C86, 16

	.type	.Lconst.39,@object
	.section	.rodata..Lconst.39,"a",@progbits
.Lconst.39:
	.asciz	"packetsIn"
	.size	.Lconst.39, 10

	.type	go..C87,@object
	.section	.rodata.go..C87,"a",@progbits
	.p2align	3
go..C87:
	.quad	.Lconst.39
	.quad	9
	.size	go..C87, 16

	.type	go..C88,@object
	.section	.rodata.go..C88,"a",@progbits
	.p2align	3
go..C88:
	.quad	.Lconst.2
	.quad	22
	.size	go..C88, 16

	.type	type..chan.0.1command_line_arguments.IPPacket,@object
	.section	.rodata.type..chan.0.1command_line_arguments.IPPacket,"aG",@progbits,type..chan.0.1command_line_arguments.IPPacket,comdat
	.weak	type..chan.0.1command_line_arguments.IPPacket
	.p2align	4
type..chan.0.1command_line_arguments.IPPacket:
	.quad	8
	.quad	8
	.long	666730311
	.byte	18
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C89
	.quad	0
	.quad	0
	.quad	type...1command_line_arguments.IPPacket
	.quad	3
	.size	type..chan.0.1command_line_arguments.IPPacket, 88

	.type	.Lconst.40,@object
	.section	.rodata..Lconst.40,"a",@progbits
.Lconst.40:
	.asciz	"chan *\tcommand_line_arguments\tsubnet.IPPacket"
	.size	.Lconst.40, 46

	.type	go..C89,@object
	.section	.rodata.go..C89,"a",@progbits
	.p2align	3
go..C89:
	.quad	.Lconst.40
	.quad	45
	.size	go..C89, 16

	.type	type...1command_line_arguments.IPPacket,@object
	.section	.rodata.type...1command_line_arguments.IPPacket,"aG",@progbits,type...1command_line_arguments.IPPacket,comdat
	.weak	type...1command_line_arguments.IPPacket
	.p2align	4
type...1command_line_arguments.IPPacket:
	.quad	8
	.quad	8
	.long	3376278521
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C90
	.quad	0
	.quad	0
	.quad	command_line_arguments.IPPacket..d
	.size	type...1command_line_arguments.IPPacket, 80

	.type	.Lconst.41,@object
	.section	.rodata..Lconst.41,"a",@progbits
.Lconst.41:
	.asciz	"*\tcommand_line_arguments\tsubnet.IPPacket"
	.size	.Lconst.41, 41

	.type	go..C90,@object
	.section	.rodata.go..C90,"a",@progbits
	.p2align	3
go..C90:
	.quad	.Lconst.41
	.quad	40
	.size	go..C90, 16

	.type	command_line_arguments.IPPacket..d,@object
	.section	.rodata.command_line_arguments.IPPacket..d,"a",@progbits
	.globl	command_line_arguments.IPPacket..d
	.p2align	4
command_line_arguments.IPPacket..d:
	.quad	56
	.quad	32
	.long	2358501055
	.byte	25
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ja
	.quad	go..C91
	.quad	go..C95
	.quad	type...1command_line_arguments.IPPacket
	.quad	go..C105
	.quad	3
	.quad	3
	.size	command_line_arguments.IPPacket..d, 96

	.type	gcbits..ja,@object
	.section	.rodata.gcbits..ja,"aG",@progbits,gcbits..ja,comdat
	.weak	gcbits..ja
gcbits..ja:
	.byte	9
	.size	gcbits..ja, 1

	.type	.Lconst.42,@object
	.section	.rodata..Lconst.42,"a",@progbits
.Lconst.42:
	.asciz	"\tcommand_line_arguments\tsubnet.IPPacket"
	.size	.Lconst.42, 40

	.type	go..C91,@object
	.section	.rodata.go..C91,"a",@progbits
	.p2align	3
go..C91:
	.quad	.Lconst.42
	.quad	39
	.size	go..C91, 16

	.type	.Lconst.43,@object
	.section	.rodata..Lconst.43,"a",@progbits
.Lconst.43:
	.asciz	"IPPacket"
	.size	.Lconst.43, 9

	.type	go..C92,@object
	.section	.rodata.go..C92,"a",@progbits
	.p2align	3
go..C92:
	.quad	.Lconst.43
	.quad	8
	.size	go..C92, 16

	.type	go..C93,@object
	.section	.rodata.go..C93,"a",@progbits
	.p2align	3
go..C93:
	.quad	.Lconst.2
	.quad	22
	.size	go..C93, 16

	.type	go..C94,@object
	.section	.bss.go..C94,"aw",@nobits
	.p2align	4
go..C94:
	.zero	40
	.size	go..C94, 40

	.type	go..C95,@object
	.section	.rodata.go..C95,"a",@progbits
	.p2align	4
go..C95:
	.quad	go..C92
	.quad	go..C93
	.quad	go..C94
	.quad	0
	.quad	0
	.size	go..C95, 40

	.type	.Lconst.44,@object
	.section	.rodata..Lconst.44,"a",@progbits
.Lconst.44:
	.asciz	"Raw"
	.size	.Lconst.44, 4

	.type	go..C96,@object
	.section	.rodata.go..C96,"a",@progbits
	.p2align	3
go..C96:
	.quad	.Lconst.44
	.quad	3
	.size	go..C96, 16

	.type	type...6.7uint8,@object
	.section	.rodata.type...6.7uint8,"aG",@progbits,type...6.7uint8,comdat
	.weak	type...6.7uint8
	.p2align	4
type...6.7uint8:
	.quad	24
	.quad	8
	.long	264632103
	.byte	23
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C97
	.quad	0
	.quad	0
	.quad	uint8..d
	.size	type...6.7uint8, 80

	.type	.Lconst.45,@object
	.section	.rodata..Lconst.45,"a",@progbits
.Lconst.45:
	.asciz	"[]uint8"
	.size	.Lconst.45, 8

	.type	go..C97,@object
	.section	.rodata.go..C97,"a",@progbits
	.p2align	3
go..C97:
	.quad	.Lconst.45
	.quad	7
	.size	go..C97, 16

	.type	uint8..d,@object
	.section	.rodata.uint8..d,"aG",@progbits,uint8..d,comdat
	.weak	uint8..d
	.p2align	4
uint8..d:
	.quad	1
	.quad	0
	.long	264632089
	.byte	136
	.byte	1
	.byte	1
	.zero	1
	.quad	runtime.memhash8..f
	.quad	runtime.memequal8..f
	.quad	0
	.quad	go..C98
	.quad	go..C101
	.quad	type...1uint8
	.size	uint8..d, 72

	.type	.Lconst.46,@object
	.section	.rodata..Lconst.46,"a",@progbits
.Lconst.46:
	.asciz	"uint8"
	.size	.Lconst.46, 6

	.type	go..C98,@object
	.section	.rodata.go..C98,"a",@progbits
	.p2align	3
go..C98:
	.quad	.Lconst.46
	.quad	5
	.size	go..C98, 16

	.type	go..C99,@object
	.section	.rodata.go..C99,"a",@progbits
	.p2align	3
go..C99:
	.quad	.Lconst.46
	.quad	5
	.size	go..C99, 16

	.type	go..C100,@object
	.section	.bss.go..C100,"aw",@nobits
	.p2align	4
go..C100:
	.zero	40
	.size	go..C100, 40

	.type	go..C101,@object
	.section	.rodata.go..C101,"a",@progbits
	.p2align	4
go..C101:
	.quad	go..C99
	.quad	0
	.quad	go..C100
	.quad	0
	.quad	0
	.size	go..C101, 40

	.type	type...1uint8,@object
	.section	.rodata.type...1uint8,"aG",@progbits,type...1uint8,comdat
	.weak	type...1uint8
	.p2align	4
type...1uint8:
	.quad	8
	.quad	8
	.long	4234113433
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C102
	.quad	0
	.quad	0
	.quad	uint8..d
	.size	type...1uint8, 80

	.type	.Lconst.47,@object
	.section	.rodata..Lconst.47,"a",@progbits
.Lconst.47:
	.asciz	"*uint8"
	.size	.Lconst.47, 7

	.type	go..C102,@object
	.section	.rodata.go..C102,"a",@progbits
	.p2align	3
go..C102:
	.quad	.Lconst.47
	.quad	6
	.size	go..C102, 16

	.type	.Lconst.48,@object
	.section	.rodata..Lconst.48,"a",@progbits
.Lconst.48:
	.asciz	"Dest"
	.size	.Lconst.48, 5

	.type	go..C103,@object
	.section	.rodata.go..C103,"a",@progbits
	.p2align	3
go..C103:
	.quad	.Lconst.48
	.quad	4
	.size	go..C103, 16

	.type	.Lconst.49,@object
	.section	.rodata..Lconst.49,"a",@progbits
.Lconst.49:
	.asciz	"Protocol"
	.size	.Lconst.49, 9

	.type	go..C104,@object
	.section	.rodata.go..C104,"a",@progbits
	.p2align	3
go..C104:
	.quad	.Lconst.49
	.quad	8
	.size	go..C104, 16

	.type	go..C105,@object
	.section	.data.go..C105,"aw",@progbits
	.p2align	4
go..C105:
	.quad	go..C96
	.quad	0
	.quad	type...6.7uint8
	.quad	0
	.quad	0
	.quad	go..C103
	.quad	0
	.quad	net.IP..d
	.quad	0
	.quad	48
	.quad	go..C104
	.quad	0
	.quad	github_com_twitchyliquid64_subnet_vendor_github_com_songgao_water_waterutil.IPProtocol..d
	.quad	0
	.quad	96
	.size	go..C105, 120

	.type	.Lconst.50,@object
	.section	.rodata..Lconst.50,"a",@progbits
.Lconst.50:
	.asciz	"packetsDevOut"
	.size	.Lconst.50, 14

	.type	go..C106,@object
	.section	.rodata.go..C106,"a",@progbits
	.p2align	3
go..C106:
	.quad	.Lconst.50
	.quad	13
	.size	go..C106, 16

	.type	go..C107,@object
	.section	.rodata.go..C107,"a",@progbits
	.p2align	3
go..C107:
	.quad	.Lconst.2
	.quad	22
	.size	go..C107, 16

	.type	.Lconst.51,@object
	.section	.rodata..Lconst.51,"a",@progbits
.Lconst.51:
	.asciz	"intf"
	.size	.Lconst.51, 5

	.type	go..C108,@object
	.section	.rodata.go..C108,"a",@progbits
	.p2align	3
go..C108:
	.quad	.Lconst.51
	.quad	4
	.size	go..C108, 16

	.type	go..C109,@object
	.section	.rodata.go..C109,"a",@progbits
	.p2align	3
go..C109:
	.quad	.Lconst.2
	.quad	22
	.size	go..C109, 16

	.type	.Lconst.52,@object
	.section	.rodata..Lconst.52,"a",@progbits
.Lconst.52:
	.asciz	"tlsConf"
	.size	.Lconst.52, 8

	.type	go..C110,@object
	.section	.rodata.go..C110,"a",@progbits
	.p2align	3
go..C110:
	.quad	.Lconst.52
	.quad	7
	.size	go..C110, 16

	.type	go..C111,@object
	.section	.rodata.go..C111,"a",@progbits
	.p2align	3
go..C111:
	.quad	.Lconst.2
	.quad	22
	.size	go..C111, 16

	.type	.Lconst.53,@object
	.section	.rodata..Lconst.53,"a",@progbits
.Lconst.53:
	.asciz	"tlsConn"
	.size	.Lconst.53, 8

	.type	go..C112,@object
	.section	.rodata.go..C112,"a",@progbits
	.p2align	3
go..C112:
	.quad	.Lconst.53
	.quad	7
	.size	go..C112, 16

	.type	go..C113,@object
	.section	.rodata.go..C113,"a",@progbits
	.p2align	3
go..C113:
	.quad	.Lconst.2
	.quad	22
	.size	go..C113, 16

	.type	.Lconst.54,@object
	.section	.rodata..Lconst.54,"a",@progbits
.Lconst.54:
	.asciz	"tcpConn"
	.size	.Lconst.54, 8

	.type	go..C114,@object
	.section	.rodata.go..C114,"a",@progbits
	.p2align	3
go..C114:
	.quad	.Lconst.54
	.quad	7
	.size	go..C114, 16

	.type	go..C115,@object
	.section	.rodata.go..C115,"a",@progbits
	.p2align	3
go..C115:
	.quad	.Lconst.2
	.quad	22
	.size	go..C115, 16

	.type	.Lconst.55,@object
	.section	.rodata..Lconst.55,"a",@progbits
.Lconst.55:
	.asciz	"connectionOk"
	.size	.Lconst.55, 13

	.type	go..C116,@object
	.section	.rodata.go..C116,"a",@progbits
	.p2align	3
go..C116:
	.quad	.Lconst.55
	.quad	12
	.size	go..C116, 16

	.type	go..C117,@object
	.section	.rodata.go..C117,"a",@progbits
	.p2align	3
go..C117:
	.quad	.Lconst.2
	.quad	22
	.size	go..C117, 16

	.type	.Lconst.56,@object
	.section	.rodata..Lconst.56,"a",@progbits
.Lconst.56:
	.asciz	"connResetLock"
	.size	.Lconst.56, 14

	.type	go..C118,@object
	.section	.rodata.go..C118,"a",@progbits
	.p2align	3
go..C118:
	.quad	.Lconst.56
	.quad	13
	.size	go..C118, 16

	.type	go..C119,@object
	.section	.rodata.go..C119,"a",@progbits
	.p2align	3
go..C119:
	.quad	.Lconst.2
	.quad	22
	.size	go..C119, 16

	.type	.Lconst.57,@object
	.section	.rodata..Lconst.57,"a",@progbits
.Lconst.57:
	.asciz	"reverser"
	.size	.Lconst.57, 9

	.type	go..C120,@object
	.section	.rodata.go..C120,"a",@progbits
	.p2align	3
go..C120:
	.quad	.Lconst.57
	.quad	8
	.size	go..C120, 16

	.type	go..C121,@object
	.section	.rodata.go..C121,"a",@progbits
	.p2align	3
go..C121:
	.quad	.Lconst.2
	.quad	22
	.size	go..C121, 16

	.type	command_line_arguments.Reverser..d,@object
	.section	.rodata.command_line_arguments.Reverser..d,"a",@progbits
	.globl	command_line_arguments.Reverser..d
	.p2align	4
command_line_arguments.Reverser..d:
	.quad	56
	.quad	56
	.long	176221240
	.byte	25
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..rc
	.quad	go..C122
	.quad	go..C126
	.quad	type...1command_line_arguments.Reverser
	.quad	go..C170
	.quad	4
	.quad	4
	.size	command_line_arguments.Reverser..d, 96

	.type	gcbits..rc,@object
	.section	.rodata.gcbits..rc,"aG",@progbits,gcbits..rc,comdat
	.weak	gcbits..rc
gcbits..rc:
	.byte	81
	.size	gcbits..rc, 1

	.type	.Lconst.58,@object
	.section	.rodata..Lconst.58,"a",@progbits
.Lconst.58:
	.asciz	"\tcommand_line_arguments\tsubnet.Reverser"
	.size	.Lconst.58, 40

	.type	go..C122,@object
	.section	.rodata.go..C122,"a",@progbits
	.p2align	3
go..C122:
	.quad	.Lconst.58
	.quad	39
	.size	go..C122, 16

	.type	.Lconst.59,@object
	.section	.rodata..Lconst.59,"a",@progbits
.Lconst.59:
	.asciz	"Reverser"
	.size	.Lconst.59, 9

	.type	go..C123,@object
	.section	.rodata.go..C123,"a",@progbits
	.p2align	3
go..C123:
	.quad	.Lconst.59
	.quad	8
	.size	go..C123, 16

	.type	go..C124,@object
	.section	.rodata.go..C124,"a",@progbits
	.p2align	3
go..C124:
	.quad	.Lconst.2
	.quad	22
	.size	go..C124, 16

	.type	go..C125,@object
	.section	.bss.go..C125,"aw",@nobits
	.p2align	4
go..C125:
	.zero	40
	.size	go..C125, 40

	.type	go..C126,@object
	.section	.rodata.go..C126,"a",@progbits
	.p2align	4
go..C126:
	.quad	go..C123
	.quad	go..C124
	.quad	go..C125
	.quad	0
	.quad	0
	.size	go..C126, 40

	.type	type...1command_line_arguments.Reverser,@object
	.section	.rodata.type...1command_line_arguments.Reverser,"aG",@progbits,type...1command_line_arguments.Reverser,comdat
	.weak	type...1command_line_arguments.Reverser
	.p2align	4
type...1command_line_arguments.Reverser:
	.quad	8
	.quad	8
	.long	2819539849
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C127
	.quad	go..C147
	.quad	type...1.1command_line_arguments.Reverser
	.quad	command_line_arguments.Reverser..d
	.size	type...1command_line_arguments.Reverser, 80

	.type	.Lconst.60,@object
	.section	.rodata..Lconst.60,"a",@progbits
.Lconst.60:
	.asciz	"*\tcommand_line_arguments\tsubnet.Reverser"
	.size	.Lconst.60, 41

	.type	go..C127,@object
	.section	.rodata.go..C127,"a",@progbits
	.p2align	3
go..C127:
	.quad	.Lconst.60
	.quad	40
	.size	go..C127, 16

	.type	.Lconst.61,@object
	.section	.rodata..Lconst.61,"a",@progbits
.Lconst.61:
	.asciz	"AddRouteEntry"
	.size	.Lconst.61, 14

	.type	go..C128,@object
	.section	.rodata.go..C128,"a",@progbits
	.p2align	3
go..C128:
	.quad	.Lconst.61
	.quad	13
	.size	go..C128, 16

	.type	type..func.8net.IP.3net.IP.3string.9.8.9,@object
	.section	.rodata.type..func.8net.IP.3net.IP.3string.9.8.9,"aG",@progbits,type..func.8net.IP.3net.IP.3string.9.8.9,comdat
	.weak	type..func.8net.IP.3net.IP.3string.9.8.9
	.p2align	4
type..func.8net.IP.3net.IP.3string.9.8.9:
	.quad	8
	.quad	8
	.long	3530275560
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C129
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C130
	.quad	3
	.quad	3
	.quad	go..C131
	.quad	0
	.quad	0
	.size	type..func.8net.IP.3net.IP.3string.9.8.9, 128

	.type	.Lconst.62,@object
	.section	.rodata..Lconst.62,"a",@progbits
.Lconst.62:
	.asciz	"func(\tnet\tnet.IP, \tnet\tnet.IP, string)"
	.size	.Lconst.62, 39

	.type	go..C129,@object
	.section	.rodata.go..C129,"a",@progbits
	.p2align	3
go..C129:
	.quad	.Lconst.62
	.quad	38
	.size	go..C129, 16

	.type	go..C130,@object
	.section	.data.go..C130,"aw",@progbits
	.p2align	4
go..C130:
	.quad	net.IP..d
	.quad	net.IP..d
	.quad	string..d
	.size	go..C130, 24

	.type	go..C131,@object
	.section	.bss.go..C131,"aw",@nobits
	.p2align	3
go..C131:
	.zero	8
	.size	go..C131, 8

	.type	type..func.8.1command_line_arguments.Reverser.3net.IP.3net.IP.3string.9.8.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.Reverser.3net.IP.3net.IP.3string.9.8.9,"aG",@progbits,type..func.8.1command_line_arguments.Reverser.3net.IP.3net.IP.3string.9.8.9,comdat
	.weak	type..func.8.1command_line_arguments.Reverser.3net.IP.3net.IP.3string.9.8.9
	.p2align	4
type..func.8.1command_line_arguments.Reverser.3net.IP.3net.IP.3string.9.8.9:
	.quad	8
	.quad	8
	.long	2796545768
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C132
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C133
	.quad	4
	.quad	4
	.quad	go..C134
	.quad	0
	.quad	0
	.size	type..func.8.1command_line_arguments.Reverser.3net.IP.3net.IP.3string.9.8.9, 128

	.type	.Lconst.63,@object
	.section	.rodata..Lconst.63,"a",@progbits
.Lconst.63:
	.asciz	"func(*\tcommand_line_arguments\tsubnet.Reverser, \tnet\tnet.IP, \tnet\tnet.IP, string)"
	.size	.Lconst.63, 81

	.type	go..C132,@object
	.section	.rodata.go..C132,"a",@progbits
	.p2align	3
go..C132:
	.quad	.Lconst.63
	.quad	80
	.size	go..C132, 16

	.type	go..C133,@object
	.section	.data.go..C133,"aw",@progbits
	.p2align	4
go..C133:
	.quad	type...1command_line_arguments.Reverser
	.quad	net.IP..d
	.quad	net.IP..d
	.quad	string..d
	.size	go..C133, 32

	.type	go..C134,@object
	.section	.bss.go..C134,"aw",@nobits
	.p2align	3
go..C134:
	.zero	8
	.size	go..C134, 8

	.type	go..C135,@object
	.section	.rodata.go..C135,"a",@progbits
	.p2align	3
go..C135:
	.quad	.Lconst.4
	.quad	5
	.size	go..C135, 16

	.type	type..func.8.1command_line_arguments.Reverser.9.8.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.Reverser.9.8.9,"aG",@progbits,type..func.8.1command_line_arguments.Reverser.9.8.9,comdat
	.weak	type..func.8.1command_line_arguments.Reverser.9.8.9
	.p2align	4
type..func.8.1command_line_arguments.Reverser.9.8.9:
	.quad	8
	.quad	8
	.long	30961960
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C136
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C137
	.quad	1
	.quad	1
	.quad	go..C138
	.quad	0
	.quad	0
	.size	type..func.8.1command_line_arguments.Reverser.9.8.9, 128

	.type	.Lconst.64,@object
	.section	.rodata..Lconst.64,"a",@progbits
.Lconst.64:
	.asciz	"func(*\tcommand_line_arguments\tsubnet.Reverser)"
	.size	.Lconst.64, 47

	.type	go..C136,@object
	.section	.rodata.go..C136,"a",@progbits
	.p2align	3
go..C136:
	.quad	.Lconst.64
	.quad	46
	.size	go..C136, 16

	.type	go..C137,@object
	.section	.data.go..C137,"aw",@progbits
	.p2align	3
go..C137:
	.quad	type...1command_line_arguments.Reverser
	.size	go..C137, 8

	.type	go..C138,@object
	.section	.bss.go..C138,"aw",@nobits
	.p2align	3
go..C138:
	.zero	8
	.size	go..C138, 8

	.type	.Lconst.65,@object
	.section	.rodata..Lconst.65,"a",@progbits
.Lconst.65:
	.asciz	"ResetGatewayOSX"
	.size	.Lconst.65, 16

	.type	go..C139,@object
	.section	.rodata.go..C139,"a",@progbits
	.p2align	3
go..C139:
	.quad	.Lconst.65
	.quad	15
	.size	go..C139, 16

	.type	type..func.8.1github_com_twitchyliquid64_subnet_vendor_github_com_songgao_water.Interface.3string.9.8.9,@object
	.section	.rodata.type..func.8.1github_com_twitchyliquid64_subnet_vendor_github_com_songgao_water.Interface.3string.9.8.9,"aG",@progbits,type..func.8.1github_com_twitchyliquid64_subnet_vendor_github_com_songgao_water.Interface.3string.9.8.9,comdat
	.weak	type..func.8.1github_com_twitchyliquid64_subnet_vendor_github_com_songgao_water.Interface.3string.9.8.9
	.p2align	4
type..func.8.1github_com_twitchyliquid64_subnet_vendor_github_com_songgao_water.Interface.3string.9.8.9:
	.quad	8
	.quad	8
	.long	814934952
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C140
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C141
	.quad	2
	.quad	2
	.quad	go..C142
	.quad	0
	.quad	0
	.size	type..func.8.1github_com_twitchyliquid64_subnet_vendor_github_com_songgao_water.Interface.3string.9.8.9, 128

	.type	.Lconst.66,@object
	.section	.rodata..Lconst.66,"a",@progbits
.Lconst.66:
	.asciz	"func(*\tgithub_com_twitchyliquid64_subnet_vendor_github_com_songgao_water\twater.Interface, string)"
	.size	.Lconst.66, 98

	.type	go..C140,@object
	.section	.rodata.go..C140,"a",@progbits
	.p2align	3
go..C140:
	.quad	.Lconst.66
	.quad	97
	.size	go..C140, 16

	.type	go..C141,@object
	.section	.data.go..C141,"aw",@progbits
	.p2align	3
go..C141:
	.quad	type...1github_com_twitchyliquid64_subnet_vendor_github_com_songgao_water.Interface
	.quad	string..d
	.size	go..C141, 16

	.type	go..C142,@object
	.section	.bss.go..C142,"aw",@nobits
	.p2align	3
go..C142:
	.zero	8
	.size	go..C142, 8

	.type	type..func.8.1command_line_arguments.Reverser.3.1github_com_twitchyliquid64_subnet_vendor_github_com_songgao_water.Interface.3string.9.8.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.Reverser.3.1github_com_twitchyliquid64_subnet_vendor_github_com_songgao_water.Interface.3string.9.8.9,"aG",@progbits,type..func.8.1command_line_arguments.Reverser.3.1github_com_twitchyliquid64_subnet_vendor_github_com_songgao_water.Interface.3string.9.8.9,comdat
	.weak	type..func.8.1command_line_arguments.Reverser.3.1github_com_twitchyliquid64_subnet_vendor_github_com_songgao_water.Interface.3string.9.8.9
	.p2align	4
type..func.8.1command_line_arguments.Reverser.3.1github_com_twitchyliquid64_subnet_vendor_github_com_songgao_water.Interface.3string.9.8.9:
	.quad	8
	.quad	8
	.long	1660831848
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C143
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C144
	.quad	3
	.quad	3
	.quad	go..C145
	.quad	0
	.quad	0
	.size	type..func.8.1command_line_arguments.Reverser.3.1github_com_twitchyliquid64_subnet_vendor_github_com_songgao_water.Interface.3string.9.8.9, 128

	.type	.Lconst.67,@object
	.section	.rodata..Lconst.67,"a",@progbits
.Lconst.67:
	.asciz	"func(*\tcommand_line_arguments\tsubnet.Reverser, *\tgithub_com_twitchyliquid64_subnet_vendor_github_com_songgao_water\twater.Interface, string)"
	.size	.Lconst.67, 140

	.type	go..C143,@object
	.section	.rodata.go..C143,"a",@progbits
	.p2align	3
go..C143:
	.quad	.Lconst.67
	.quad	139
	.size	go..C143, 16

	.type	go..C144,@object
	.section	.data.go..C144,"aw",@progbits
	.p2align	4
go..C144:
	.quad	type...1command_line_arguments.Reverser
	.quad	type...1github_com_twitchyliquid64_subnet_vendor_github_com_songgao_water.Interface
	.quad	string..d
	.size	go..C144, 24

	.type	go..C145,@object
	.section	.bss.go..C145,"aw",@nobits
	.p2align	3
go..C145:
	.zero	8
	.size	go..C145, 8

	.type	go..C146,@object
	.section	.data.go..C146,"aw",@progbits
	.p2align	4
go..C146:
	.quad	go..C128
	.quad	0
	.quad	type..func.8net.IP.3net.IP.3string.9.8.9
	.quad	type..func.8.1command_line_arguments.Reverser.3net.IP.3net.IP.3string.9.8.9
	.quad	command_line_arguments.Reverser.AddRouteEntry
	.quad	go..C135
	.quad	0
	.quad	type..func.8.9.8.9
	.quad	type..func.8.1command_line_arguments.Reverser.9.8.9
	.quad	command_line_arguments.Reverser.Close
	.quad	go..C139
	.quad	0
	.quad	type..func.8.1github_com_twitchyliquid64_subnet_vendor_github_com_songgao_water.Interface.3string.9.8.9
	.quad	type..func.8.1command_line_arguments.Reverser.3.1github_com_twitchyliquid64_subnet_vendor_github_com_songgao_water.Interface.3string.9.8.9
	.quad	command_line_arguments.Reverser.ResetGatewayOSX
	.size	go..C146, 120

	.type	go..C147,@object
	.section	.rodata.go..C147,"a",@progbits
	.p2align	4
go..C147:
	.quad	0
	.quad	0
	.quad	go..C146
	.quad	3
	.quad	3
	.size	go..C147, 40

	.type	type...1.1command_line_arguments.Reverser,@object
	.section	.rodata.type...1.1command_line_arguments.Reverser,"aG",@progbits,type...1.1command_line_arguments.Reverser,comdat
	.weak	type...1.1command_line_arguments.Reverser
	.p2align	4
type...1.1command_line_arguments.Reverser:
	.quad	8
	.quad	8
	.long	2162964633
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C148
	.quad	0
	.quad	0
	.quad	type...1command_line_arguments.Reverser
	.size	type...1.1command_line_arguments.Reverser, 80

	.type	.Lconst.68,@object
	.section	.rodata..Lconst.68,"a",@progbits
.Lconst.68:
	.asciz	"**\tcommand_line_arguments\tsubnet.Reverser"
	.size	.Lconst.68, 42

	.type	go..C148,@object
	.section	.rodata.go..C148,"a",@progbits
	.p2align	3
go..C148:
	.quad	.Lconst.68
	.quad	41
	.size	go..C148, 16

	.type	.Lconst.69,@object
	.section	.rodata..Lconst.69,"a",@progbits
.Lconst.69:
	.asciz	"RouteDeletions"
	.size	.Lconst.69, 15

	.type	go..C149,@object
	.section	.rodata.go..C149,"a",@progbits
	.p2align	3
go..C149:
	.quad	.Lconst.69
	.quad	14
	.size	go..C149, 16

	.type	type...6.7command_line_arguments.routeEntries,@object
	.section	.rodata.type...6.7command_line_arguments.routeEntries,"aG",@progbits,type...6.7command_line_arguments.routeEntries,comdat
	.weak	type...6.7command_line_arguments.routeEntries
	.p2align	4
type...6.7command_line_arguments.routeEntries:
	.quad	24
	.quad	8
	.long	3226280905
	.byte	23
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C150
	.quad	0
	.quad	0
	.quad	command_line_arguments..command_line_arguments.routeEntries..d
	.size	type...6.7command_line_arguments.routeEntries, 80

	.type	.Lconst.70,@object
	.section	.rodata..Lconst.70,"a",@progbits
.Lconst.70:
	.asciz	"[]\tcommand_line_arguments\tsubnet.routeEntries"
	.size	.Lconst.70, 46

	.type	go..C150,@object
	.section	.rodata.go..C150,"a",@progbits
	.p2align	3
go..C150:
	.quad	.Lconst.70
	.quad	45
	.size	go..C150, 16

	.type	command_line_arguments..command_line_arguments.routeEntries..d,@object
	.section	.rodata.command_line_arguments..command_line_arguments.routeEntries..d,"a",@progbits
	.globl	command_line_arguments..command_line_arguments.routeEntries..d
	.p2align	4
command_line_arguments..command_line_arguments.routeEntries..d:
	.quad	64
	.quad	56
	.long	3226280891
	.byte	25
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..jc
	.quad	go..C151
	.quad	go..C155
	.quad	type...1command_line_arguments.routeEntries
	.quad	go..C163
	.quad	3
	.quad	3
	.size	command_line_arguments..command_line_arguments.routeEntries..d, 96

	.type	gcbits..jc,@object
	.section	.rodata.gcbits..jc,"aG",@progbits,gcbits..jc,comdat
	.weak	gcbits..jc
gcbits..jc:
	.byte	73
	.size	gcbits..jc, 1

	.type	.Lconst.71,@object
	.section	.rodata..Lconst.71,"a",@progbits
.Lconst.71:
	.asciz	"\tcommand_line_arguments\tsubnet.routeEntries"
	.size	.Lconst.71, 44

	.type	go..C151,@object
	.section	.rodata.go..C151,"a",@progbits
	.p2align	3
go..C151:
	.quad	.Lconst.71
	.quad	43
	.size	go..C151, 16

	.type	.Lconst.72,@object
	.section	.rodata..Lconst.72,"a",@progbits
.Lconst.72:
	.asciz	"routeEntries"
	.size	.Lconst.72, 13

	.type	go..C152,@object
	.section	.rodata.go..C152,"a",@progbits
	.p2align	3
go..C152:
	.quad	.Lconst.72
	.quad	12
	.size	go..C152, 16

	.type	go..C153,@object
	.section	.rodata.go..C153,"a",@progbits
	.p2align	3
go..C153:
	.quad	.Lconst.2
	.quad	22
	.size	go..C153, 16

	.type	go..C154,@object
	.section	.bss.go..C154,"aw",@nobits
	.p2align	4
go..C154:
	.zero	40
	.size	go..C154, 40

	.type	go..C155,@object
	.section	.rodata.go..C155,"a",@progbits
	.p2align	4
go..C155:
	.quad	go..C152
	.quad	go..C153
	.quad	go..C154
	.quad	0
	.quad	0
	.size	go..C155, 40

	.type	type...1command_line_arguments.routeEntries,@object
	.section	.rodata.type...1command_line_arguments.routeEntries,"aG",@progbits,type...1command_line_arguments.routeEntries,comdat
	.weak	type...1command_line_arguments.routeEntries
	.p2align	4
type...1command_line_arguments.routeEntries:
	.quad	8
	.quad	8
	.long	80886713
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C156
	.quad	0
	.quad	0
	.quad	command_line_arguments..command_line_arguments.routeEntries..d
	.size	type...1command_line_arguments.routeEntries, 80

	.type	.Lconst.73,@object
	.section	.rodata..Lconst.73,"a",@progbits
.Lconst.73:
	.asciz	"*\tcommand_line_arguments\tsubnet.routeEntries"
	.size	.Lconst.73, 45

	.type	go..C156,@object
	.section	.rodata.go..C156,"a",@progbits
	.p2align	3
go..C156:
	.quad	.Lconst.73
	.quad	44
	.size	go..C156, 16

	.type	.Lconst.74,@object
	.section	.rodata..Lconst.74,"a",@progbits
.Lconst.74:
	.asciz	"dest"
	.size	.Lconst.74, 5

	.type	go..C157,@object
	.section	.rodata.go..C157,"a",@progbits
	.p2align	3
go..C157:
	.quad	.Lconst.74
	.quad	4
	.size	go..C157, 16

	.type	go..C158,@object
	.section	.rodata.go..C158,"a",@progbits
	.p2align	3
go..C158:
	.quad	.Lconst.2
	.quad	22
	.size	go..C158, 16

	.type	.Lconst.75,@object
	.section	.rodata..Lconst.75,"a",@progbits
.Lconst.75:
	.asciz	"via"
	.size	.Lconst.75, 4

	.type	go..C159,@object
	.section	.rodata.go..C159,"a",@progbits
	.p2align	3
go..C159:
	.quad	.Lconst.75
	.quad	3
	.size	go..C159, 16

	.type	go..C160,@object
	.section	.rodata.go..C160,"a",@progbits
	.p2align	3
go..C160:
	.quad	.Lconst.2
	.quad	22
	.size	go..C160, 16

	.type	.Lconst.76,@object
	.section	.rodata..Lconst.76,"a",@progbits
.Lconst.76:
	.asciz	"dev"
	.size	.Lconst.76, 4

	.type	go..C161,@object
	.section	.rodata.go..C161,"a",@progbits
	.p2align	3
go..C161:
	.quad	.Lconst.76
	.quad	3
	.size	go..C161, 16

	.type	go..C162,@object
	.section	.rodata.go..C162,"a",@progbits
	.p2align	3
go..C162:
	.quad	.Lconst.2
	.quad	22
	.size	go..C162, 16

	.type	go..C163,@object
	.section	.data.go..C163,"aw",@progbits
	.p2align	4
go..C163:
	.quad	go..C157
	.quad	go..C158
	.quad	net.IP..d
	.quad	0
	.quad	0
	.quad	go..C159
	.quad	go..C160
	.quad	net.IP..d
	.quad	0
	.quad	48
	.quad	go..C161
	.quad	go..C162
	.quad	string..d
	.quad	0
	.quad	96
	.size	go..C163, 120

	.type	.Lconst.77,@object
	.section	.rodata..Lconst.77,"a",@progbits
.Lconst.77:
	.asciz	"updateGateway"
	.size	.Lconst.77, 14

	.type	go..C164,@object
	.section	.rodata.go..C164,"a",@progbits
	.p2align	3
go..C164:
	.quad	.Lconst.77
	.quad	13
	.size	go..C164, 16

	.type	go..C165,@object
	.section	.rodata.go..C165,"a",@progbits
	.p2align	3
go..C165:
	.quad	.Lconst.2
	.quad	22
	.size	go..C165, 16

	.type	.Lconst.78,@object
	.section	.rodata..Lconst.78,"a",@progbits
.Lconst.78:
	.asciz	"newGW"
	.size	.Lconst.78, 6

	.type	go..C166,@object
	.section	.rodata.go..C166,"a",@progbits
	.p2align	3
go..C166:
	.quad	.Lconst.78
	.quad	5
	.size	go..C166, 16

	.type	go..C167,@object
	.section	.rodata.go..C167,"a",@progbits
	.p2align	3
go..C167:
	.quad	.Lconst.2
	.quad	22
	.size	go..C167, 16

	.type	.Lconst.79,@object
	.section	.rodata..Lconst.79,"a",@progbits
.Lconst.79:
	.asciz	"interfaceToClose"
	.size	.Lconst.79, 17

	.type	go..C168,@object
	.section	.rodata.go..C168,"a",@progbits
	.p2align	3
go..C168:
	.quad	.Lconst.79
	.quad	16
	.size	go..C168, 16

	.type	go..C169,@object
	.section	.rodata.go..C169,"a",@progbits
	.p2align	3
go..C169:
	.quad	.Lconst.2
	.quad	22
	.size	go..C169, 16

	.type	go..C170,@object
	.section	.data.go..C170,"aw",@progbits
	.p2align	4
go..C170:
	.quad	go..C149
	.quad	0
	.quad	type...6.7command_line_arguments.routeEntries
	.quad	0
	.quad	0
	.quad	go..C164
	.quad	go..C165
	.quad	bool..d
	.quad	0
	.quad	48
	.quad	go..C166
	.quad	go..C167
	.quad	string..d
	.quad	0
	.quad	64
	.quad	go..C168
	.quad	go..C169
	.quad	type...1github_com_twitchyliquid64_subnet_vendor_github_com_songgao_water.Interface
	.quad	0
	.quad	96
	.size	go..C170, 160

	.type	go..C171,@object
	.section	.data.go..C171,"aw",@progbits
	.p2align	4
go..C171:
	.quad	go..C61
	.quad	go..C62
	.quad	bool..d
	.quad	0
	.quad	0
	.quad	go..C68
	.quad	go..C69
	.quad	string..d
	.quad	0
	.quad	16
	.quad	go..C70
	.quad	go..C71
	.quad	string..d
	.quad	0
	.quad	48
	.quad	go..C72
	.quad	go..C73
	.quad	string..d
	.quad	0
	.quad	80
	.quad	go..C74
	.quad	go..C75
	.quad	sync.WaitGroup..d
	.quad	0
	.quad	112
	.quad	go..C76
	.quad	go..C77
	.quad	net.IP..d
	.quad	0
	.quad	144
	.quad	go..C78
	.quad	go..C79
	.quad	net.IP..d
	.quad	0
	.quad	192
	.quad	go..C80
	.quad	go..C81
	.quad	type...6.7net.IP
	.quad	0
	.quad	240
	.quad	go..C83
	.quad	go..C84
	.quad	type...1net.IPNet
	.quad	0
	.quad	288
	.quad	go..C85
	.quad	go..C86
	.quad	bool..d
	.quad	0
	.quad	304
	.quad	go..C87
	.quad	go..C88
	.quad	type..chan.0.1command_line_arguments.IPPacket
	.quad	0
	.quad	320
	.quad	go..C106
	.quad	go..C107
	.quad	type..chan.0.1command_line_arguments.IPPacket
	.quad	0
	.quad	336
	.quad	go..C108
	.quad	go..C109
	.quad	type...1github_com_twitchyliquid64_subnet_vendor_github_com_songgao_water.Interface
	.quad	0
	.quad	352
	.quad	go..C110
	.quad	go..C111
	.quad	type...1crypto_tls.Config
	.quad	0
	.quad	368
	.quad	go..C112
	.quad	go..C113
	.quad	type...1crypto_tls.Conn
	.quad	0
	.quad	384
	.quad	go..C114
	.quad	go..C115
	.quad	net.Conn..d
	.quad	0
	.quad	400
	.quad	go..C116
	.quad	go..C117
	.quad	bool..d
	.quad	0
	.quad	432
	.quad	go..C118
	.quad	go..C119
	.quad	sync.Mutex..d
	.quad	0
	.quad	440
	.quad	go..C120
	.quad	go..C121
	.quad	command_line_arguments.Reverser..d
	.quad	0
	.quad	464
	.size	go..C171, 760

	.type	.Lconst.83,@object
	.section	.rodata..Lconst.83,"a",@progbits
.Lconst.83:
	.asciz	"invalid network address/mask - "
	.size	.Lconst.83, 32

	.type	.Lconst.84,@object
	.section	.rodata..Lconst.84,"a",@progbits
	.p2align	3
.Lconst.84:
	.quad	.Lconst.83
	.quad	31
	.size	.Lconst.84, 16

	.type	.Lconst.86,@object
	.section	.rodata..Lconst.86,"a",@progbits
.Lconst.86:
	.asciz	"Could not create TUN - "
	.size	.Lconst.86, 24

	.type	.Lconst.87,@object
	.section	.rodata..Lconst.87,"a",@progbits
	.p2align	3
.Lconst.87:
	.quad	.Lconst.86
	.quad	23
	.size	.Lconst.87, 16

	.type	.Lconst.88,@object
	.section	.rodata..Lconst.88,"a",@progbits
.Lconst.88:
	.asciz	"Created iface %s\n"
	.size	.Lconst.88, 18

	.type	command_line_arguments.NewClient..f,@object
	.section	.rodata.command_line_arguments.NewClient..f,"a",@progbits
	.globl	command_line_arguments.NewClient..f
	.p2align	3
command_line_arguments.NewClient..f:
	.quad	command_line_arguments.NewClient
	.size	command_line_arguments.NewClient..f, 8

	.type	.Lconst.96,@object
	.section	.rodata..Lconst.96,"a",@progbits
.Lconst.96:
	.asciz	":"
	.size	.Lconst.96, 2

	.type	.Lconst.97,@object
	.section	.rodata..Lconst.97,"a",@progbits
	.p2align	3
.Lconst.97:
	.quad	.Lconst.96
	.quad	1
	.size	.Lconst.97, 16

	.type	.Lconst.98,@object
	.section	.rodata..Lconst.98,"a",@progbits
.Lconst.98:
	.asciz	"tcp"
	.size	.Lconst.98, 4

	.type	.Lconst.100,@object
	.section	.rodata..Lconst.100,"a",@progbits
.Lconst.100:
	.asciz	"IP of %s set to %s, localNetMask %s\n"
	.size	.Lconst.100, 37

	.type	.Lconst.103,@object
	.section	.rodata..Lconst.103,"a",@progbits
.Lconst.103:
	.asciz	"Default gateway is %s on %s\n"
	.size	.Lconst.103, 29

	.type	.Lconst.105,@object
	.section	.rodata..Lconst.105,"a",@progbits
.Lconst.105:
	.asciz	"Traffic to %s now routed via %s on %s.\n"
	.size	.Lconst.105, 40

	.type	.Lconst.108,@object
	.section	.rodata..Lconst.108,"a",@progbits
.Lconst.108:
	.asciz	"Could set gateway: %s\n"
	.size	.Lconst.108, 23

	.type	.Lconst.110,@object
	.section	.rodata..Lconst.110,"a",@progbits
.Lconst.110:
	.asciz	"Could not bring up interface %s: %s\n"
	.size	.Lconst.110, 37

	.type	type..struct.4.4x.5a0.0.1command_line_arguments.Client.5,@object
	.section	.rodata.type..struct.4.4x.5a0.0.1command_line_arguments.Client.5,"aG",@progbits,type..struct.4.4x.5a0.0.1command_line_arguments.Client.5,comdat
	.weak	type..struct.4.4x.5a0.0.1command_line_arguments.Client.5
	.p2align	4
type..struct.4.4x.5a0.0.1command_line_arguments.Client.5:
	.quad	8
	.quad	8
	.long	1463981268
	.byte	25
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C172
	.quad	0
	.quad	0
	.quad	go..C174
	.quad	1
	.quad	1
	.size	type..struct.4.4x.5a0.0.1command_line_arguments.Client.5, 96

	.type	.Lconst.112,@object
	.section	.rodata..Lconst.112,"a",@progbits
.Lconst.112:
	.asciz	"struct { a0 *\tcommand_line_arguments\tsubnet.Client }"
	.size	.Lconst.112, 53

	.type	go..C172,@object
	.section	.rodata.go..C172,"a",@progbits
	.p2align	3
go..C172:
	.quad	.Lconst.112
	.quad	52
	.size	go..C172, 16

	.type	.Lconst.113,@object
	.section	.rodata..Lconst.113,"a",@progbits
.Lconst.113:
	.asciz	"a0"
	.size	.Lconst.113, 3

	.type	go..C173,@object
	.section	.rodata.go..C173,"a",@progbits
	.p2align	3
go..C173:
	.quad	.Lconst.113
	.quad	2
	.size	go..C173, 16

	.type	go..C174,@object
	.section	.data.go..C174,"aw",@progbits
	.p2align	4
go..C174:
	.quad	go..C173
	.quad	0
	.quad	type...1command_line_arguments.Client
	.quad	0
	.quad	0
	.size	go..C174, 40

	.type	type..struct.4.4x.5a0.0.1github_com_twitchyliquid64_subnet_vendor_github_com_songgao_water.Interface.2a1.0chan.0.1command_line_arguments.IPPacket.2a2.0.1sync.WaitGroup.2a3.0.1bool.5,@object
	.section	.rodata.type..struct.4.4x.5a0.0.1github_com_twitchyliquid64_subnet_vendor_github_com_songgao_water.Interface.2a1.0chan.0.1command_line_arguments.IPPacket.2a2.0.1sync.WaitGroup.2a3.0.1bool.5,"aG",@progbits,type..struct.4.4x.5a0.0.1github_com_twitchyliquid64_subnet_vendor_github_com_songgao_water.Interface.2a1.0chan.0.1command_line_arguments.IPPacket.2a2.0.1sync.WaitGroup.2a3.0.1bool.5,comdat
	.weak	type..struct.4.4x.5a0.0.1github_com_twitchyliquid64_subnet_vendor_github_com_songgao_water.Interface.2a1.0chan.0.1command_line_arguments.IPPacket.2a2.0.1sync.WaitGroup.2a3.0.1bool.5
	.p2align	4
type..struct.4.4x.5a0.0.1github_com_twitchyliquid64_subnet_vendor_github_com_songgao_water.Interface.2a1.0chan.0.1command_line_arguments.IPPacket.2a2.0.1sync.WaitGroup.2a3.0.1bool.5:
	.quad	32
	.quad	32
	.long	931446916
	.byte	25
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..pa
	.quad	go..C175
	.quad	0
	.quad	0
	.quad	go..C180
	.quad	4
	.quad	4
	.size	type..struct.4.4x.5a0.0.1github_com_twitchyliquid64_subnet_vendor_github_com_songgao_water.Interface.2a1.0chan.0.1command_line_arguments.IPPacket.2a2.0.1sync.WaitGroup.2a3.0.1bool.5, 96

	.type	gcbits..pa,@object
	.section	.rodata.gcbits..pa,"aG",@progbits,gcbits..pa,comdat
	.weak	gcbits..pa
gcbits..pa:
	.byte	15
	.size	gcbits..pa, 1

	.type	.Lconst.114,@object
	.section	.rodata..Lconst.114,"a",@progbits
.Lconst.114:
	.asciz	"struct { a0 *\tgithub_com_twitchyliquid64_subnet_vendor_github_com_songgao_water\twater.Interface; a1 chan *\tcommand_line_arguments\tsubnet.IPPacket; a2 *\tsync\tsync.WaitGroup; a3 *bool }"
	.size	.Lconst.114, 184

	.type	go..C175,@object
	.section	.rodata.go..C175,"a",@progbits
	.p2align	3
go..C175:
	.quad	.Lconst.114
	.quad	183
	.size	go..C175, 16

	.type	go..C176,@object
	.section	.rodata.go..C176,"a",@progbits
	.p2align	3
go..C176:
	.quad	.Lconst.113
	.quad	2
	.size	go..C176, 16

	.type	.Lconst.115,@object
	.section	.rodata..Lconst.115,"a",@progbits
.Lconst.115:
	.asciz	"a1"
	.size	.Lconst.115, 3

	.type	go..C177,@object
	.section	.rodata.go..C177,"a",@progbits
	.p2align	3
go..C177:
	.quad	.Lconst.115
	.quad	2
	.size	go..C177, 16

	.type	.Lconst.116,@object
	.section	.rodata..Lconst.116,"a",@progbits
.Lconst.116:
	.asciz	"a2"
	.size	.Lconst.116, 3

	.type	go..C178,@object
	.section	.rodata.go..C178,"a",@progbits
	.p2align	3
go..C178:
	.quad	.Lconst.116
	.quad	2
	.size	go..C178, 16

	.type	.Lconst.117,@object
	.section	.rodata..Lconst.117,"a",@progbits
.Lconst.117:
	.asciz	"a3"
	.size	.Lconst.117, 3

	.type	go..C179,@object
	.section	.rodata.go..C179,"a",@progbits
	.p2align	3
go..C179:
	.quad	.Lconst.117
	.quad	2
	.size	go..C179, 16

	.type	go..C180,@object
	.section	.data.go..C180,"aw",@progbits
	.p2align	4
go..C180:
	.quad	go..C176
	.quad	0
	.quad	type...1github_com_twitchyliquid64_subnet_vendor_github_com_songgao_water.Interface
	.quad	0
	.quad	0
	.quad	go..C177
	.quad	0
	.quad	type..chan.0.1command_line_arguments.IPPacket
	.quad	0
	.quad	16
	.quad	go..C178
	.quad	0
	.quad	type...1sync.WaitGroup
	.quad	0
	.quad	32
	.quad	go..C179
	.quad	0
	.quad	type...1bool
	.quad	0
	.quad	48
	.size	go..C180, 160

	.type	pimt..interface.4Write.0func.8.6.7uint8.9.8int.3error.9.5..crypto_tls.Conn,@object
	.section	.rodata.pimt..interface.4Write.0func.8.6.7uint8.9.8int.3error.9.5..crypto_tls.Conn,"aG",@progbits,pimt..interface.4Write.0func.8.6.7uint8.9.8int.3error.9.5..crypto_tls.Conn,comdat
	.weak	pimt..interface.4Write.0func.8.6.7uint8.9.8int.3error.9.5..crypto_tls.Conn
	.p2align	3
pimt..interface.4Write.0func.8.6.7uint8.9.8int.3error.9.5..crypto_tls.Conn:
	.quad	type...1crypto_tls.Conn
	.quad	crypto_tls.Conn.Write
	.size	pimt..interface.4Write.0func.8.6.7uint8.9.8int.3error.9.5..crypto_tls.Conn, 16

	.type	.Lconst.119,@object
	.section	.rodata..Lconst.119,"a",@progbits
.Lconst.119:
	.asciz	"Encode error: "
	.size	.Lconst.119, 15

	.type	.Lconst.120,@object
	.section	.rodata..Lconst.120,"a",@progbits
	.p2align	3
.Lconst.120:
	.quad	.Lconst.119
	.quad	14
	.size	.Lconst.120, 16

	.type	pimt..interface.4Read.0func.8.6.7uint8.9.8int.3error.9.5..crypto_tls.Conn,@object
	.section	.rodata.pimt..interface.4Read.0func.8.6.7uint8.9.8int.3error.9.5..crypto_tls.Conn,"aG",@progbits,pimt..interface.4Read.0func.8.6.7uint8.9.8int.3error.9.5..crypto_tls.Conn,comdat
	.weak	pimt..interface.4Read.0func.8.6.7uint8.9.8int.3error.9.5..crypto_tls.Conn
	.p2align	3
pimt..interface.4Read.0func.8.6.7uint8.9.8int.3error.9.5..crypto_tls.Conn:
	.quad	type...1crypto_tls.Conn
	.quad	crypto_tls.Conn.Read
	.size	pimt..interface.4Read.0func.8.6.7uint8.9.8int.3error.9.5..crypto_tls.Conn, 16

	.type	.Lconst.122,@object
	.section	.rodata..Lconst.122,"a",@progbits
.Lconst.122:
	.asciz	"Net read error: %s\n"
	.size	.Lconst.122, 20

	.type	.Lconst.124,@object
	.section	.rodata..Lconst.124,"a",@progbits
.Lconst.124:
	.asciz	"Got unexpected packet type: "
	.size	.Lconst.124, 29

	.type	.Lconst.125,@object
	.section	.rodata..Lconst.125,"a",@progbits
	.p2align	3
.Lconst.125:
	.quad	.Lconst.124
	.quad	28
	.size	.Lconst.125, 16

	.type	.Lconst.126,@object
	.section	.rodata..Lconst.126,"a",@progbits
.Lconst.126:
	.asciz	"Could not decode IPPacket: %s"
	.size	.Lconst.126, 30

	.type	.Lconst.129,@object
	.section	.rodata..Lconst.129,"a",@progbits
.Lconst.129:
	.asciz	"Connection problem detected. Re-connecting."
	.size	.Lconst.129, 44

	.type	.Lconst.130,@object
	.section	.rodata..Lconst.130,"a",@progbits
	.p2align	3
.Lconst.130:
	.quad	.Lconst.129
	.quad	43
	.size	.Lconst.130, 16

	.type	.Lconst.131,@object
	.section	.rodata..Lconst.131,"a",@progbits
.Lconst.131:
	.asciz	"Connection re-established."
	.size	.Lconst.131, 27

	.type	.Lconst.132,@object
	.section	.rodata..Lconst.132,"a",@progbits
	.p2align	3
.Lconst.132:
	.quad	.Lconst.131
	.quad	26
	.size	.Lconst.132, 16

	.type	int..d,@object
	.section	.rodata.int..d,"aG",@progbits,int..d,comdat
	.weak	int..d
	.p2align	4
int..d:
	.quad	8
	.quad	0
	.long	876704034
	.byte	130
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	0
	.quad	go..C181
	.quad	go..C184
	.quad	type...1int
	.size	int..d, 72

	.type	.Lconst.133,@object
	.section	.rodata..Lconst.133,"a",@progbits
.Lconst.133:
	.asciz	"int"
	.size	.Lconst.133, 4

	.type	go..C181,@object
	.section	.rodata.go..C181,"a",@progbits
	.p2align	3
go..C181:
	.quad	.Lconst.133
	.quad	3
	.size	go..C181, 16

	.type	go..C182,@object
	.section	.rodata.go..C182,"a",@progbits
	.p2align	3
go..C182:
	.quad	.Lconst.133
	.quad	3
	.size	go..C182, 16

	.type	go..C183,@object
	.section	.bss.go..C183,"aw",@nobits
	.p2align	4
go..C183:
	.zero	40
	.size	go..C183, 40

	.type	go..C184,@object
	.section	.rodata.go..C184,"a",@progbits
	.p2align	4
go..C184:
	.quad	go..C182
	.quad	0
	.quad	go..C183
	.quad	0
	.quad	0
	.size	go..C184, 40

	.type	type...1int,@object
	.section	.rodata.type...1int,"aG",@progbits,type...1int,comdat
	.weak	type...1int
	.p2align	4
type...1int:
	.quad	8
	.quad	8
	.long	1142362665
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C185
	.quad	0
	.quad	0
	.quad	int..d
	.size	type...1int, 80

	.type	.Lconst.134,@object
	.section	.rodata..Lconst.134,"a",@progbits
.Lconst.134:
	.asciz	"*int"
	.size	.Lconst.134, 5

	.type	go..C185,@object
	.section	.rodata.go..C185,"a",@progbits
	.p2align	3
go..C185:
	.quad	.Lconst.134
	.quad	4
	.size	go..C185, 16

	.type	.Lconst.135,@object
	.section	.rodata..Lconst.135,"a",@progbits
.Lconst.135:
	.asciz	"Reconnect failure: %s. Retrying in %d seconds.\n"
	.size	.Lconst.135, 48

	.type	command_line_arguments..command_line_arguments.inboundIPPkt..d,@object
	.section	.rodata.command_line_arguments..command_line_arguments.inboundIPPkt..d,"a",@progbits
	.globl	command_line_arguments..command_line_arguments.inboundIPPkt..d
	.p2align	4
command_line_arguments..command_line_arguments.inboundIPPkt..d:
	.quad	16
	.quad	8
	.long	2669063431
	.byte	25
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash128..f
	.quad	runtime.memequal128..f
	.quad	gcbits..ba
	.quad	go..C186
	.quad	go..C190
	.quad	type...1command_line_arguments.inboundIPPkt
	.quad	go..C196
	.quad	2
	.quad	2
	.size	command_line_arguments..command_line_arguments.inboundIPPkt..d, 96

	.type	.Lconst.138,@object
	.section	.rodata..Lconst.138,"a",@progbits
.Lconst.138:
	.asciz	"\tcommand_line_arguments\tsubnet.inboundIPPkt"
	.size	.Lconst.138, 44

	.type	go..C186,@object
	.section	.rodata.go..C186,"a",@progbits
	.p2align	3
go..C186:
	.quad	.Lconst.138
	.quad	43
	.size	go..C186, 16

	.type	.Lconst.139,@object
	.section	.rodata..Lconst.139,"a",@progbits
.Lconst.139:
	.asciz	"inboundIPPkt"
	.size	.Lconst.139, 13

	.type	go..C187,@object
	.section	.rodata.go..C187,"a",@progbits
	.p2align	3
go..C187:
	.quad	.Lconst.139
	.quad	12
	.size	go..C187, 16

	.type	go..C188,@object
	.section	.rodata.go..C188,"a",@progbits
	.p2align	3
go..C188:
	.quad	.Lconst.2
	.quad	22
	.size	go..C188, 16

	.type	go..C189,@object
	.section	.bss.go..C189,"aw",@nobits
	.p2align	4
go..C189:
	.zero	40
	.size	go..C189, 40

	.type	go..C190,@object
	.section	.rodata.go..C190,"a",@progbits
	.p2align	4
go..C190:
	.quad	go..C187
	.quad	go..C188
	.quad	go..C189
	.quad	0
	.quad	0
	.size	go..C190, 40

	.type	type...1command_line_arguments.inboundIPPkt,@object
	.section	.rodata.type...1command_line_arguments.inboundIPPkt,"aG",@progbits,type...1command_line_arguments.inboundIPPkt,comdat
	.weak	type...1command_line_arguments.inboundIPPkt
	.p2align	4
type...1command_line_arguments.inboundIPPkt:
	.quad	8
	.quad	8
	.long	4050309241
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C191
	.quad	0
	.quad	0
	.quad	command_line_arguments..command_line_arguments.inboundIPPkt..d
	.size	type...1command_line_arguments.inboundIPPkt, 80

	.type	.Lconst.140,@object
	.section	.rodata..Lconst.140,"a",@progbits
.Lconst.140:
	.asciz	"*\tcommand_line_arguments\tsubnet.inboundIPPkt"
	.size	.Lconst.140, 45

	.type	go..C191,@object
	.section	.rodata.go..C191,"a",@progbits
	.p2align	3
go..C191:
	.quad	.Lconst.140
	.quad	44
	.size	go..C191, 16

	.type	.Lconst.141,@object
	.section	.rodata..Lconst.141,"a",@progbits
.Lconst.141:
	.asciz	"pkt"
	.size	.Lconst.141, 4

	.type	go..C192,@object
	.section	.rodata.go..C192,"a",@progbits
	.p2align	3
go..C192:
	.quad	.Lconst.141
	.quad	3
	.size	go..C192, 16

	.type	go..C193,@object
	.section	.rodata.go..C193,"a",@progbits
	.p2align	3
go..C193:
	.quad	.Lconst.2
	.quad	22
	.size	go..C193, 16

	.type	.Lconst.142,@object
	.section	.rodata..Lconst.142,"a",@progbits
.Lconst.142:
	.asciz	"clientID"
	.size	.Lconst.142, 9

	.type	go..C194,@object
	.section	.rodata.go..C194,"a",@progbits
	.p2align	3
go..C194:
	.quad	.Lconst.142
	.quad	8
	.size	go..C194, 16

	.type	go..C195,@object
	.section	.rodata.go..C195,"a",@progbits
	.p2align	3
go..C195:
	.quad	.Lconst.2
	.quad	22
	.size	go..C195, 16

	.type	go..C196,@object
	.section	.data.go..C196,"aw",@progbits
	.p2align	4
go..C196:
	.quad	go..C192
	.quad	go..C193
	.quad	type...1command_line_arguments.IPPacket
	.quad	0
	.quad	0
	.quad	go..C194
	.quad	go..C195
	.quad	int..d
	.quad	0
	.quad	16
	.size	go..C196, 80

	.type	.Lconst.143,@object
	.section	.rodata..Lconst.143,"a",@progbits
.Lconst.143:
	.asciz	"down"
	.size	.Lconst.143, 5

	.type	.Lconst.144,@object
	.section	.rodata..Lconst.144,"a",@progbits
	.p2align	3
.Lconst.144:
	.quad	.Lconst.143
	.quad	4
	.size	.Lconst.144, 16

	.type	.Lconst.145,@object
	.section	.rodata..Lconst.145,"a",@progbits
.Lconst.145:
	.asciz	"up"
	.size	.Lconst.145, 3

	.type	.Lconst.146,@object
	.section	.rodata..Lconst.146,"a",@progbits
	.p2align	3
.Lconst.146:
	.quad	.Lconst.145
	.quad	2
	.size	.Lconst.146, 16

	.type	.Lconst.147,@object
	.section	.rodata..Lconst.147,"a",@progbits
.Lconst.147:
	.asciz	"link set dev %s %s mtu %d qlen %d"
	.size	.Lconst.147, 34

	.type	.Lconst.149,@object
	.section	.rodata..Lconst.149,"a",@progbits
.Lconst.149:
	.asciz	" "
	.size	.Lconst.149, 2

	.type	.Lconst.151,@object
	.section	.rodata..Lconst.151,"a",@progbits
.Lconst.151:
	.asciz	"ip"
	.size	.Lconst.151, 3

	.type	command_line_arguments.SetInterfaceStatus..f,@object
	.section	.rodata.command_line_arguments.SetInterfaceStatus..f,"a",@progbits
	.globl	command_line_arguments.SetInterfaceStatus..f
	.p2align	3
command_line_arguments.SetInterfaceStatus..f:
	.quad	command_line_arguments.SetInterfaceStatus
	.size	command_line_arguments.SetInterfaceStatus..f, 8

	.type	.Lconst.153,@object
	.section	.rodata..Lconst.153,"a",@progbits
.Lconst.153:
	.asciz	"%s %s netmask %s"
	.size	.Lconst.153, 17

	.type	.Lconst.155,@object
	.section	.rodata..Lconst.155,"a",@progbits
.Lconst.155:
	.asciz	"ifconfig"
	.size	.Lconst.155, 9

	.type	command_line_arguments.SetDevIP..f,@object
	.section	.rodata.command_line_arguments.SetDevIP..f,"a",@progbits
	.globl	command_line_arguments.SetDevIP..f
	.p2align	3
command_line_arguments.SetDevIP..f:
	.quad	command_line_arguments.SetDevIP
	.size	command_line_arguments.SetDevIP..f, 8

	.type	.Lconst.157,@object
	.section	.rodata..Lconst.157,"a",@progbits
.Lconst.157:
	.asciz	"add default gw %s dev %s"
	.size	.Lconst.157, 25

	.type	.Lconst.159,@object
	.section	.rodata..Lconst.159,"a",@progbits
.Lconst.159:
	.asciz	"route"
	.size	.Lconst.159, 6

	.type	command_line_arguments.SetDefaultGateway..f,@object
	.section	.rodata.command_line_arguments.SetDefaultGateway..f,"a",@progbits
	.globl	command_line_arguments.SetDefaultGateway..f
	.p2align	3
command_line_arguments.SetDefaultGateway..f:
	.quad	command_line_arguments.SetDefaultGateway
	.size	command_line_arguments.SetDefaultGateway..f, 8

	.type	.Lconst.161,@object
	.section	.rodata..Lconst.161,"a",@progbits
.Lconst.161:
	.asciz	"add %s gw %s dev %s"
	.size	.Lconst.161, 20

	.type	command_line_arguments.AddRoute..f,@object
	.section	.rodata.command_line_arguments.AddRoute..f,"a",@progbits
	.globl	command_line_arguments.AddRoute..f
	.p2align	3
command_line_arguments.AddRoute..f:
	.quad	command_line_arguments.AddRoute
	.size	command_line_arguments.AddRoute..f, 8

	.type	.Lconst.163,@object
	.section	.rodata..Lconst.163,"a",@progbits
.Lconst.163:
	.asciz	"del %s gw %s dev %s"
	.size	.Lconst.163, 20

	.type	command_line_arguments.DelRoute..f,@object
	.section	.rodata.command_line_arguments.DelRoute..f,"a",@progbits
	.globl	command_line_arguments.DelRoute..f
	.p2align	3
command_line_arguments.DelRoute..f:
	.quad	command_line_arguments.DelRoute
	.size	command_line_arguments.DelRoute..f, 8

	.type	.Lconst.166,@object
	.section	.rodata..Lconst.166,"a",@progbits
.Lconst.166:
	.asciz	"/proc/net/route"
	.size	.Lconst.166, 16

	.type	pimt..interface.4Read.0func.8.6.7uint8.9.8int.3error.9.5..os.File,@object
	.section	.rodata.pimt..interface.4Read.0func.8.6.7uint8.9.8int.3error.9.5..os.File,"aG",@progbits,pimt..interface.4Read.0func.8.6.7uint8.9.8int.3error.9.5..os.File,comdat
	.weak	pimt..interface.4Read.0func.8.6.7uint8.9.8int.3error.9.5..os.File
	.p2align	3
pimt..interface.4Read.0func.8.6.7uint8.9.8int.3error.9.5..os.File:
	.quad	type...1os.File
	.quad	os.File.Read
	.size	pimt..interface.4Read.0func.8.6.7uint8.9.8int.3error.9.5..os.File, 16

	.type	command_line_arguments.GetNetGateway..func1..f,@object
	.section	.rodata.command_line_arguments.GetNetGateway..func1..f,"a",@progbits
	.p2align	3
command_line_arguments.GetNetGateway..func1..f:
	.quad	command_line_arguments.GetNetGateway..func1
	.size	command_line_arguments.GetNetGateway..func1..f, 8

	.type	.Lconst.170,@object
	.section	.rodata..Lconst.170,"a",@progbits
.Lconst.170:
	.asciz	"Parse error: Line too long"
	.size	.Lconst.170, 27

	.type	pimt..interface.4Read.0func.8.6.7uint8.9.8int.3error.9.5..bytes.Buffer,@object
	.section	.rodata.pimt..interface.4Read.0func.8.6.7uint8.9.8int.3error.9.5..bytes.Buffer,"aG",@progbits,pimt..interface.4Read.0func.8.6.7uint8.9.8int.3error.9.5..bytes.Buffer,comdat
	.weak	pimt..interface.4Read.0func.8.6.7uint8.9.8int.3error.9.5..bytes.Buffer
	.p2align	3
pimt..interface.4Read.0func.8.6.7uint8.9.8int.3error.9.5..bytes.Buffer:
	.quad	type...1bytes.Buffer
	.quad	bytes.Buffer.Read
	.size	pimt..interface.4Read.0func.8.6.7uint8.9.8int.3error.9.5..bytes.Buffer, 16

	.type	command_line_arguments.GetNetGateway..f,@object
	.section	.rodata.command_line_arguments.GetNetGateway..f,"a",@progbits
	.globl	command_line_arguments.GetNetGateway..f
	.p2align	3
command_line_arguments.GetNetGateway..f:
	.quad	command_line_arguments.GetNetGateway
	.size	command_line_arguments.GetNetGateway..f, 8

	.type	.Lconst.176,@object
	.section	.rodata..Lconst.176,"a",@progbits
.Lconst.176:
	.asciz	"Deleted route to %s via %s on %s\n"
	.size	.Lconst.176, 34

	.type	.Lconst.178,@object
	.section	.rodata..Lconst.178,"a",@progbits
.Lconst.178:
	.asciz	"Error: Route delete %s (%s on %s) - %s\n"
	.size	.Lconst.178, 40

	.type	.Lconst.180,@object
	.section	.rodata..Lconst.180,"a",@progbits
.Lconst.180:
	.asciz	"add"
	.size	.Lconst.180, 4

	.type	.Lconst.181,@object
	.section	.rodata..Lconst.181,"a",@progbits
	.p2align	3
.Lconst.181:
	.quad	.Lconst.180
	.quad	3
	.size	.Lconst.181, 16

	.type	.Lconst.182,@object
	.section	.rodata..Lconst.182,"a",@progbits
.Lconst.182:
	.asciz	"default"
	.size	.Lconst.182, 8

	.type	.Lconst.183,@object
	.section	.rodata..Lconst.183,"a",@progbits
	.p2align	3
.Lconst.183:
	.quad	.Lconst.182
	.quad	7
	.size	.Lconst.183, 16

	.type	type...63x.7string,@object
	.section	.rodata.type...63x.7string,"aG",@progbits,type...63x.7string,comdat
	.weak	type...63x.7string
	.p2align	4
type...63x.7string:
	.quad	48
	.quad	40
	.long	297061699
	.byte	17
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..wa
	.quad	go..C197
	.quad	0
	.quad	0
	.quad	string..d
	.quad	type...6.7string
	.quad	3
	.size	type...63x.7string, 96

	.type	gcbits..wa,@object
	.section	.rodata.gcbits..wa,"aG",@progbits,gcbits..wa,comdat
	.weak	gcbits..wa
gcbits..wa:
	.byte	21
	.size	gcbits..wa, 1

	.type	.Lconst.184,@object
	.section	.rodata..Lconst.184,"a",@progbits
.Lconst.184:
	.asciz	"[3]string"
	.size	.Lconst.184, 10

	.type	go..C197,@object
	.section	.rodata.go..C197,"a",@progbits
	.p2align	3
go..C197:
	.quad	.Lconst.184
	.quad	9
	.size	go..C197, 16

	.type	type...6.7string,@object
	.section	.rodata.type...6.7string,"aG",@progbits,type...6.7string,comdat
	.weak	type...6.7string
	.p2align	4
type...6.7string:
	.quad	24
	.quad	8
	.long	2296014504
	.byte	23
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C198
	.quad	0
	.quad	0
	.quad	string..d
	.size	type...6.7string, 80

	.type	.Lconst.185,@object
	.section	.rodata..Lconst.185,"a",@progbits
.Lconst.185:
	.asciz	"[]string"
	.size	.Lconst.185, 9

	.type	go..C198,@object
	.section	.rodata.go..C198,"a",@progbits
	.p2align	3
go..C198:
	.quad	.Lconst.185
	.quad	8
	.size	go..C198, 16

	.type	command_line_arguments..command_line_arguments.serverConn..d,@object
	.section	.rodata.command_line_arguments..command_line_arguments.serverConn..d,"a",@progbits
	.globl	command_line_arguments..command_line_arguments.serverConn..d
	.p2align	4
command_line_arguments..command_line_arguments.serverConn..d:
	.quad	80
	.quad	56
	.long	3761808973
	.byte	25
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..Cc
	.quad	go..C199
	.quad	go..C203
	.quad	type...1command_line_arguments.serverConn
	.quad	go..C420
	.quad	7
	.quad	7
	.size	command_line_arguments..command_line_arguments.serverConn..d, 96

	.type	gcbits..Cc,@object
	.section	.rodata.gcbits..Cc,"aG",@progbits,gcbits..Cc,comdat
	.weak	gcbits..Cc
gcbits..Cc:
	.byte	91
	.size	gcbits..Cc, 1

	.type	.Lconst.186,@object
	.section	.rodata..Lconst.186,"a",@progbits
.Lconst.186:
	.asciz	"\tcommand_line_arguments\tsubnet.serverConn"
	.size	.Lconst.186, 42

	.type	go..C199,@object
	.section	.rodata.go..C199,"a",@progbits
	.p2align	3
go..C199:
	.quad	.Lconst.186
	.quad	41
	.size	go..C199, 16

	.type	.Lconst.187,@object
	.section	.rodata..Lconst.187,"a",@progbits
.Lconst.187:
	.asciz	"serverConn"
	.size	.Lconst.187, 11

	.type	go..C200,@object
	.section	.rodata.go..C200,"a",@progbits
	.p2align	3
go..C200:
	.quad	.Lconst.187
	.quad	10
	.size	go..C200, 16

	.type	go..C201,@object
	.section	.rodata.go..C201,"a",@progbits
	.p2align	3
go..C201:
	.quad	.Lconst.2
	.quad	22
	.size	go..C201, 16

	.type	go..C202,@object
	.section	.bss.go..C202,"aw",@nobits
	.p2align	4
go..C202:
	.zero	40
	.size	go..C202, 40

	.type	go..C203,@object
	.section	.rodata.go..C203,"a",@progbits
	.p2align	4
go..C203:
	.quad	go..C200
	.quad	go..C201
	.quad	go..C202
	.quad	0
	.quad	0
	.size	go..C203, 40

	.type	type...1command_line_arguments.serverConn,@object
	.section	.rodata.type...1command_line_arguments.serverConn,"aG",@progbits,type...1command_line_arguments.serverConn,comdat
	.weak	type...1command_line_arguments.serverConn
	.p2align	4
type...1command_line_arguments.serverConn:
	.quad	8
	.quad	8
	.long	59401433
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C204
	.quad	go..C404
	.quad	type...1.1command_line_arguments.serverConn
	.quad	command_line_arguments..command_line_arguments.serverConn..d
	.size	type...1command_line_arguments.serverConn, 80

	.type	.Lconst.188,@object
	.section	.rodata..Lconst.188,"a",@progbits
.Lconst.188:
	.asciz	"*\tcommand_line_arguments\tsubnet.serverConn"
	.size	.Lconst.188, 43

	.type	go..C204,@object
	.section	.rodata.go..C204,"a",@progbits
	.p2align	3
go..C204:
	.quad	.Lconst.188
	.quad	42
	.size	go..C204, 16

	.type	.Lconst.189,@object
	.section	.rodata..Lconst.189,"a",@progbits
.Lconst.189:
	.asciz	"hadError"
	.size	.Lconst.189, 9

	.type	go..C205,@object
	.section	.rodata.go..C205,"a",@progbits
	.p2align	3
go..C205:
	.quad	.Lconst.189
	.quad	8
	.size	go..C205, 16

	.type	go..C206,@object
	.section	.rodata.go..C206,"a",@progbits
	.p2align	3
go..C206:
	.quad	.Lconst.2
	.quad	22
	.size	go..C206, 16

	.type	type..func.8bool.9.8.9,@object
	.section	.rodata.type..func.8bool.9.8.9,"aG",@progbits,type..func.8bool.9.8.9,comdat
	.weak	type..func.8bool.9.8.9
	.p2align	4
type..func.8bool.9.8.9:
	.quad	8
	.quad	8
	.long	1966551592
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C207
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C208
	.quad	1
	.quad	1
	.quad	go..C209
	.quad	0
	.quad	0
	.size	type..func.8bool.9.8.9, 128

	.type	.Lconst.190,@object
	.section	.rodata..Lconst.190,"a",@progbits
.Lconst.190:
	.asciz	"func(bool)"
	.size	.Lconst.190, 11

	.type	go..C207,@object
	.section	.rodata.go..C207,"a",@progbits
	.p2align	3
go..C207:
	.quad	.Lconst.190
	.quad	10
	.size	go..C207, 16

	.type	go..C208,@object
	.section	.data.go..C208,"aw",@progbits
	.p2align	3
go..C208:
	.quad	bool..d
	.size	go..C208, 8

	.type	go..C209,@object
	.section	.bss.go..C209,"aw",@nobits
	.p2align	3
go..C209:
	.zero	8
	.size	go..C209, 8

	.type	type..func.8.1command_line_arguments.serverConn.3bool.9.8.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.serverConn.3bool.9.8.9,"aG",@progbits,type..func.8.1command_line_arguments.serverConn.3bool.9.8.9,comdat
	.weak	type..func.8.1command_line_arguments.serverConn.3bool.9.8.9
	.p2align	4
type..func.8.1command_line_arguments.serverConn.3bool.9.8.9:
	.quad	8
	.quad	8
	.long	1538981736
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C210
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C211
	.quad	2
	.quad	2
	.quad	go..C212
	.quad	0
	.quad	0
	.size	type..func.8.1command_line_arguments.serverConn.3bool.9.8.9, 128

	.type	.Lconst.191,@object
	.section	.rodata..Lconst.191,"a",@progbits
.Lconst.191:
	.asciz	"func(*\tcommand_line_arguments\tsubnet.serverConn, bool)"
	.size	.Lconst.191, 55

	.type	go..C210,@object
	.section	.rodata.go..C210,"a",@progbits
	.p2align	3
go..C210:
	.quad	.Lconst.191
	.quad	54
	.size	go..C210, 16

	.type	go..C211,@object
	.section	.data.go..C211,"aw",@progbits
	.p2align	3
go..C211:
	.quad	type...1command_line_arguments.serverConn
	.quad	bool..d
	.size	go..C211, 16

	.type	go..C212,@object
	.section	.bss.go..C212,"aw",@nobits
	.p2align	3
go..C212:
	.zero	8
	.size	go..C212, 8

	.type	.Lconst.192,@object
	.section	.rodata..Lconst.192,"a",@progbits
.Lconst.192:
	.asciz	"initClient"
	.size	.Lconst.192, 11

	.type	go..C213,@object
	.section	.rodata.go..C213,"a",@progbits
	.p2align	3
go..C213:
	.quad	.Lconst.192
	.quad	10
	.size	go..C213, 16

	.type	go..C214,@object
	.section	.rodata.go..C214,"a",@progbits
	.p2align	3
go..C214:
	.quad	.Lconst.2
	.quad	22
	.size	go..C214, 16

	.type	type..func.8.1command_line_arguments.Server.9.8.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.Server.9.8.9,"aG",@progbits,type..func.8.1command_line_arguments.Server.9.8.9,comdat
	.weak	type..func.8.1command_line_arguments.Server.9.8.9
	.p2align	4
type..func.8.1command_line_arguments.Server.9.8.9:
	.quad	8
	.quad	8
	.long	1126558504
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C215
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C372
	.quad	1
	.quad	1
	.quad	go..C373
	.quad	0
	.quad	0
	.size	type..func.8.1command_line_arguments.Server.9.8.9, 128

	.type	.Lconst.193,@object
	.section	.rodata..Lconst.193,"a",@progbits
.Lconst.193:
	.asciz	"func(*\tcommand_line_arguments\tsubnet.Server)"
	.size	.Lconst.193, 45

	.type	go..C215,@object
	.section	.rodata.go..C215,"a",@progbits
	.p2align	3
go..C215:
	.quad	.Lconst.193
	.quad	44
	.size	go..C215, 16

	.type	type...1command_line_arguments.Server,@object
	.section	.rodata.type...1command_line_arguments.Server,"aG",@progbits,type...1command_line_arguments.Server,comdat
	.weak	type...1command_line_arguments.Server
	.p2align	4
type...1command_line_arguments.Server:
	.quad	8
	.quad	8
	.long	2451124057
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C216
	.quad	go..C274
	.quad	type...1.1command_line_arguments.Server
	.quad	command_line_arguments.Server..d
	.size	type...1command_line_arguments.Server, 80

	.type	.Lconst.194,@object
	.section	.rodata..Lconst.194,"a",@progbits
.Lconst.194:
	.asciz	"*\tcommand_line_arguments\tsubnet.Server"
	.size	.Lconst.194, 39

	.type	go..C216,@object
	.section	.rodata.go..C216,"a",@progbits
	.p2align	3
go..C216:
	.quad	.Lconst.194
	.quad	38
	.size	go..C216, 16

	.type	go..C217,@object
	.section	.rodata.go..C217,"a",@progbits
	.p2align	3
go..C217:
	.quad	.Lconst.4
	.quad	5
	.size	go..C217, 16

	.type	type..func.8.1command_line_arguments.Server.9.8error.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.Server.9.8error.9,"aG",@progbits,type..func.8.1command_line_arguments.Server.9.8error.9,comdat
	.weak	type..func.8.1command_line_arguments.Server.9.8error.9
	.p2align	4
type..func.8.1command_line_arguments.Server.9.8error.9:
	.quad	8
	.quad	8
	.long	2315297000
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C218
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C219
	.quad	1
	.quad	1
	.quad	go..C220
	.quad	1
	.quad	1
	.size	type..func.8.1command_line_arguments.Server.9.8error.9, 128

	.type	.Lconst.195,@object
	.section	.rodata..Lconst.195,"a",@progbits
.Lconst.195:
	.asciz	"func(*\tcommand_line_arguments\tsubnet.Server) error"
	.size	.Lconst.195, 51

	.type	go..C218,@object
	.section	.rodata.go..C218,"a",@progbits
	.p2align	3
go..C218:
	.quad	.Lconst.195
	.quad	50
	.size	go..C218, 16

	.type	go..C219,@object
	.section	.data.go..C219,"aw",@progbits
	.p2align	3
go..C219:
	.quad	type...1command_line_arguments.Server
	.size	go..C219, 8

	.type	go..C220,@object
	.section	.data.go..C220,"aw",@progbits
	.p2align	3
go..C220:
	.quad	error..d
	.size	go..C220, 8

	.type	.Lconst.196,@object
	.section	.rodata..Lconst.196,"a",@progbits
.Lconst.196:
	.asciz	"Init"
	.size	.Lconst.196, 5

	.type	go..C221,@object
	.section	.rodata.go..C221,"a",@progbits
	.p2align	3
go..C221:
	.quad	.Lconst.196
	.quad	4
	.size	go..C221, 16

	.type	type..func.8string.9.8error.9,@object
	.section	.rodata.type..func.8string.9.8error.9,"aG",@progbits,type..func.8string.9.8error.9,comdat
	.weak	type..func.8string.9.8error.9
	.p2align	4
type..func.8string.9.8error.9:
	.quad	8
	.quad	8
	.long	1646758152
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C222
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C223
	.quad	1
	.quad	1
	.quad	go..C224
	.quad	1
	.quad	1
	.size	type..func.8string.9.8error.9, 128

	.type	.Lconst.197,@object
	.section	.rodata..Lconst.197,"a",@progbits
.Lconst.197:
	.asciz	"func(string) error"
	.size	.Lconst.197, 19

	.type	go..C222,@object
	.section	.rodata.go..C222,"a",@progbits
	.p2align	3
go..C222:
	.quad	.Lconst.197
	.quad	18
	.size	go..C222, 16

	.type	go..C223,@object
	.section	.data.go..C223,"aw",@progbits
	.p2align	3
go..C223:
	.quad	string..d
	.size	go..C223, 8

	.type	go..C224,@object
	.section	.data.go..C224,"aw",@progbits
	.p2align	3
go..C224:
	.quad	error..d
	.size	go..C224, 8

	.type	type..func.8.1command_line_arguments.Server.3string.9.8error.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.Server.3string.9.8error.9,"aG",@progbits,type..func.8.1command_line_arguments.Server.3string.9.8error.9,comdat
	.weak	type..func.8.1command_line_arguments.Server.3string.9.8error.9
	.p2align	4
type..func.8.1command_line_arguments.Server.3string.9.8error.9:
	.quad	8
	.quad	8
	.long	3231336296
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C225
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C226
	.quad	2
	.quad	2
	.quad	go..C227
	.quad	1
	.quad	1
	.size	type..func.8.1command_line_arguments.Server.3string.9.8error.9, 128

	.type	.Lconst.198,@object
	.section	.rodata..Lconst.198,"a",@progbits
.Lconst.198:
	.asciz	"func(*\tcommand_line_arguments\tsubnet.Server, string) error"
	.size	.Lconst.198, 59

	.type	go..C225,@object
	.section	.rodata.go..C225,"a",@progbits
	.p2align	3
go..C225:
	.quad	.Lconst.198
	.quad	58
	.size	go..C225, 16

	.type	go..C226,@object
	.section	.data.go..C226,"aw",@progbits
	.p2align	3
go..C226:
	.quad	type...1command_line_arguments.Server
	.quad	string..d
	.size	go..C226, 16

	.type	go..C227,@object
	.section	.data.go..C227,"aw",@progbits
	.p2align	3
go..C227:
	.quad	error..d
	.size	go..C227, 8

	.type	go..C228,@object
	.section	.rodata.go..C228,"a",@progbits
	.p2align	3
go..C228:
	.quad	.Lconst.13
	.quad	3
	.size	go..C228, 16

	.type	.Lconst.199,@object
	.section	.rodata..Lconst.199,"a",@progbits
.Lconst.199:
	.asciz	"acceptRoutine"
	.size	.Lconst.199, 14

	.type	go..C229,@object
	.section	.rodata.go..C229,"a",@progbits
	.p2align	3
go..C229:
	.quad	.Lconst.199
	.quad	13
	.size	go..C229, 16

	.type	go..C230,@object
	.section	.rodata.go..C230,"a",@progbits
	.p2align	3
go..C230:
	.quad	.Lconst.2
	.quad	22
	.size	go..C230, 16

	.type	.Lconst.200,@object
	.section	.rodata..Lconst.200,"a",@progbits
.Lconst.200:
	.asciz	"dispatchRoutine"
	.size	.Lconst.200, 16

	.type	go..C231,@object
	.section	.rodata.go..C231,"a",@progbits
	.p2align	3
go..C231:
	.quad	.Lconst.200
	.quad	15
	.size	go..C231, 16

	.type	go..C232,@object
	.section	.rodata.go..C232,"a",@progbits
	.p2align	3
go..C232:
	.quad	.Lconst.2
	.quad	22
	.size	go..C232, 16

	.type	.Lconst.201,@object
	.section	.rodata..Lconst.201,"a",@progbits
.Lconst.201:
	.asciz	"enrollClientConn"
	.size	.Lconst.201, 17

	.type	go..C233,@object
	.section	.rodata.go..C233,"a",@progbits
	.p2align	3
go..C233:
	.quad	.Lconst.201
	.quad	16
	.size	go..C233, 16

	.type	go..C234,@object
	.section	.rodata.go..C234,"a",@progbits
	.p2align	3
go..C234:
	.quad	.Lconst.2
	.quad	22
	.size	go..C234, 16

	.type	type..func.8.1command_line_arguments.serverConn.9.8.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.serverConn.9.8.9,"aG",@progbits,type..func.8.1command_line_arguments.serverConn.9.8.9,comdat
	.weak	type..func.8.1command_line_arguments.serverConn.9.8.9
	.p2align	4
type..func.8.1command_line_arguments.serverConn.9.8.9:
	.quad	8
	.quad	8
	.long	1900845864
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C235
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C236
	.quad	1
	.quad	1
	.quad	go..C237
	.quad	0
	.quad	0
	.size	type..func.8.1command_line_arguments.serverConn.9.8.9, 128

	.type	.Lconst.202,@object
	.section	.rodata..Lconst.202,"a",@progbits
.Lconst.202:
	.asciz	"func(*\tcommand_line_arguments\tsubnet.serverConn)"
	.size	.Lconst.202, 49

	.type	go..C235,@object
	.section	.rodata.go..C235,"a",@progbits
	.p2align	3
go..C235:
	.quad	.Lconst.202
	.quad	48
	.size	go..C235, 16

	.type	go..C236,@object
	.section	.data.go..C236,"aw",@progbits
	.p2align	3
go..C236:
	.quad	type...1command_line_arguments.serverConn
	.size	go..C236, 8

	.type	go..C237,@object
	.section	.bss.go..C237,"aw",@nobits
	.p2align	3
go..C237:
	.zero	8
	.size	go..C237, 8

	.type	type..func.8.1command_line_arguments.Server.3.1command_line_arguments.serverConn.9.8.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.Server.3.1command_line_arguments.serverConn.9.8.9,"aG",@progbits,type..func.8.1command_line_arguments.Server.3.1command_line_arguments.serverConn.9.8.9,comdat
	.weak	type..func.8.1command_line_arguments.Server.3.1command_line_arguments.serverConn.9.8.9
	.p2align	4
type..func.8.1command_line_arguments.Server.3.1command_line_arguments.serverConn.9.8.9:
	.quad	8
	.quad	8
	.long	633282920
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C238
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C239
	.quad	2
	.quad	2
	.quad	go..C240
	.quad	0
	.quad	0
	.size	type..func.8.1command_line_arguments.Server.3.1command_line_arguments.serverConn.9.8.9, 128

	.type	.Lconst.203,@object
	.section	.rodata..Lconst.203,"a",@progbits
.Lconst.203:
	.asciz	"func(*\tcommand_line_arguments\tsubnet.Server, *\tcommand_line_arguments\tsubnet.serverConn)"
	.size	.Lconst.203, 89

	.type	go..C238,@object
	.section	.rodata.go..C238,"a",@progbits
	.p2align	3
go..C238:
	.quad	.Lconst.203
	.quad	88
	.size	go..C238, 16

	.type	go..C239,@object
	.section	.data.go..C239,"aw",@progbits
	.p2align	3
go..C239:
	.quad	type...1command_line_arguments.Server
	.quad	type...1command_line_arguments.serverConn
	.size	go..C239, 16

	.type	go..C240,@object
	.section	.bss.go..C240,"aw",@nobits
	.p2align	3
go..C240:
	.zero	8
	.size	go..C240, 8

	.type	.Lconst.204,@object
	.section	.rodata..Lconst.204,"a",@progbits
.Lconst.204:
	.asciz	"handleClient"
	.size	.Lconst.204, 13

	.type	go..C241,@object
	.section	.rodata.go..C241,"a",@progbits
	.p2align	3
go..C241:
	.quad	.Lconst.204
	.quad	12
	.size	go..C241, 16

	.type	go..C242,@object
	.section	.rodata.go..C242,"a",@progbits
	.p2align	3
go..C242:
	.quad	.Lconst.2
	.quad	22
	.size	go..C242, 16

	.type	type..func.8net.Conn.9.8.9,@object
	.section	.rodata.type..func.8net.Conn.9.8.9,"aG",@progbits,type..func.8net.Conn.9.8.9,comdat
	.weak	type..func.8net.Conn.9.8.9
	.p2align	4
type..func.8net.Conn.9.8.9:
	.quad	8
	.quad	8
	.long	3401797192
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C243
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C244
	.quad	1
	.quad	1
	.quad	go..C245
	.quad	0
	.quad	0
	.size	type..func.8net.Conn.9.8.9, 128

	.type	.Lconst.205,@object
	.section	.rodata..Lconst.205,"a",@progbits
.Lconst.205:
	.asciz	"func(\tnet\tnet.Conn)"
	.size	.Lconst.205, 20

	.type	go..C243,@object
	.section	.rodata.go..C243,"a",@progbits
	.p2align	3
go..C243:
	.quad	.Lconst.205
	.quad	19
	.size	go..C243, 16

	.type	go..C244,@object
	.section	.data.go..C244,"aw",@progbits
	.p2align	3
go..C244:
	.quad	net.Conn..d
	.size	go..C244, 8

	.type	go..C245,@object
	.section	.bss.go..C245,"aw",@nobits
	.p2align	3
go..C245:
	.zero	8
	.size	go..C245, 8

	.type	type..func.8.1command_line_arguments.Server.3net.Conn.9.8.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.Server.3net.Conn.9.8.9,"aG",@progbits,type..func.8.1command_line_arguments.Server.3net.Conn.9.8.9,comdat
	.weak	type..func.8.1command_line_arguments.Server.3net.Conn.9.8.9
	.p2align	4
type..func.8.1command_line_arguments.Server.3net.Conn.9.8.9:
	.quad	8
	.quad	8
	.long	3635185576
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C246
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C247
	.quad	2
	.quad	2
	.quad	go..C248
	.quad	0
	.quad	0
	.size	type..func.8.1command_line_arguments.Server.3net.Conn.9.8.9, 128

	.type	.Lconst.206,@object
	.section	.rodata..Lconst.206,"a",@progbits
.Lconst.206:
	.asciz	"func(*\tcommand_line_arguments\tsubnet.Server, \tnet\tnet.Conn)"
	.size	.Lconst.206, 60

	.type	go..C246,@object
	.section	.rodata.go..C246,"a",@progbits
	.p2align	3
go..C246:
	.quad	.Lconst.206
	.quad	59
	.size	go..C246, 16

	.type	go..C247,@object
	.section	.data.go..C247,"aw",@progbits
	.p2align	3
go..C247:
	.quad	type...1command_line_arguments.Server
	.quad	net.Conn..d
	.size	go..C247, 16

	.type	go..C248,@object
	.section	.bss.go..C248,"aw",@nobits
	.p2align	3
go..C248:
	.zero	8
	.size	go..C248, 8

	.type	.Lconst.207,@object
	.section	.rodata..Lconst.207,"a",@progbits
.Lconst.207:
	.asciz	"removeClientConn"
	.size	.Lconst.207, 17

	.type	go..C249,@object
	.section	.rodata.go..C249,"a",@progbits
	.p2align	3
go..C249:
	.quad	.Lconst.207
	.quad	16
	.size	go..C249, 16

	.type	go..C250,@object
	.section	.rodata.go..C250,"a",@progbits
	.p2align	3
go..C250:
	.quad	.Lconst.2
	.quad	22
	.size	go..C250, 16

	.type	type..func.8int.9.8.9,@object
	.section	.rodata.type..func.8int.9.8.9,"aG",@progbits,type..func.8int.9.8.9,comdat
	.weak	type..func.8int.9.8.9
	.p2align	4
type..func.8int.9.8.9:
	.quad	8
	.quad	8
	.long	2284725320
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C251
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C252
	.quad	1
	.quad	1
	.quad	go..C253
	.quad	0
	.quad	0
	.size	type..func.8int.9.8.9, 128

	.type	.Lconst.208,@object
	.section	.rodata..Lconst.208,"a",@progbits
.Lconst.208:
	.asciz	"func(int)"
	.size	.Lconst.208, 10

	.type	go..C251,@object
	.section	.rodata.go..C251,"a",@progbits
	.p2align	3
go..C251:
	.quad	.Lconst.208
	.quad	9
	.size	go..C251, 16

	.type	go..C252,@object
	.section	.data.go..C252,"aw",@progbits
	.p2align	3
go..C252:
	.quad	int..d
	.size	go..C252, 8

	.type	go..C253,@object
	.section	.bss.go..C253,"aw",@nobits
	.p2align	3
go..C253:
	.zero	8
	.size	go..C253, 8

	.type	type..func.8.1command_line_arguments.Server.3int.9.8.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.Server.3int.9.8.9,"aG",@progbits,type..func.8.1command_line_arguments.Server.3int.9.8.9,comdat
	.weak	type..func.8.1command_line_arguments.Server.3int.9.8.9
	.p2align	4
type..func.8.1command_line_arguments.Server.3int.9.8.9:
	.quad	8
	.quad	8
	.long	1401041832
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C254
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C255
	.quad	2
	.quad	2
	.quad	go..C256
	.quad	0
	.quad	0
	.size	type..func.8.1command_line_arguments.Server.3int.9.8.9, 128

	.type	.Lconst.209,@object
	.section	.rodata..Lconst.209,"a",@progbits
.Lconst.209:
	.asciz	"func(*\tcommand_line_arguments\tsubnet.Server, int)"
	.size	.Lconst.209, 50

	.type	go..C254,@object
	.section	.rodata.go..C254,"a",@progbits
	.p2align	3
go..C254:
	.quad	.Lconst.209
	.quad	49
	.size	go..C254, 16

	.type	go..C255,@object
	.section	.data.go..C255,"aw",@progbits
	.p2align	3
go..C255:
	.quad	type...1command_line_arguments.Server
	.quad	int..d
	.size	go..C255, 16

	.type	go..C256,@object
	.section	.bss.go..C256,"aw",@nobits
	.p2align	3
go..C256:
	.zero	8
	.size	go..C256, 8

	.type	go..C257,@object
	.section	.rodata.go..C257,"a",@progbits
	.p2align	3
go..C257:
	.quad	.Lconst.159
	.quad	5
	.size	go..C257, 16

	.type	go..C258,@object
	.section	.rodata.go..C258,"a",@progbits
	.p2align	3
go..C258:
	.quad	.Lconst.2
	.quad	22
	.size	go..C258, 16

	.type	type..func.8.1command_line_arguments.IPPacket.9.8.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.IPPacket.9.8.9,"aG",@progbits,type..func.8.1command_line_arguments.IPPacket.9.8.9,comdat
	.weak	type..func.8.1command_line_arguments.IPPacket.9.8.9
	.p2align	4
type..func.8.1command_line_arguments.IPPacket.9.8.9:
	.quad	8
	.quad	8
	.long	666730280
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C259
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C260
	.quad	1
	.quad	1
	.quad	go..C261
	.quad	0
	.quad	0
	.size	type..func.8.1command_line_arguments.IPPacket.9.8.9, 128

	.type	.Lconst.210,@object
	.section	.rodata..Lconst.210,"a",@progbits
.Lconst.210:
	.asciz	"func(*\tcommand_line_arguments\tsubnet.IPPacket)"
	.size	.Lconst.210, 47

	.type	go..C259,@object
	.section	.rodata.go..C259,"a",@progbits
	.p2align	3
go..C259:
	.quad	.Lconst.210
	.quad	46
	.size	go..C259, 16

	.type	go..C260,@object
	.section	.data.go..C260,"aw",@progbits
	.p2align	3
go..C260:
	.quad	type...1command_line_arguments.IPPacket
	.size	go..C260, 8

	.type	go..C261,@object
	.section	.bss.go..C261,"aw",@nobits
	.p2align	3
go..C261:
	.zero	8
	.size	go..C261, 8

	.type	type..func.8.1command_line_arguments.Server.3.1command_line_arguments.IPPacket.9.8.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.Server.3.1command_line_arguments.IPPacket.9.8.9,"aG",@progbits,type..func.8.1command_line_arguments.Server.3.1command_line_arguments.IPPacket.9.8.9,comdat
	.weak	type..func.8.1command_line_arguments.Server.3.1command_line_arguments.IPPacket.9.8.9
	.p2align	4
type..func.8.1command_line_arguments.Server.3.1command_line_arguments.IPPacket.9.8.9:
	.quad	8
	.quad	8
	.long	2460019048
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C262
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C263
	.quad	2
	.quad	2
	.quad	go..C264
	.quad	0
	.quad	0
	.size	type..func.8.1command_line_arguments.Server.3.1command_line_arguments.IPPacket.9.8.9, 128

	.type	.Lconst.211,@object
	.section	.rodata..Lconst.211,"a",@progbits
.Lconst.211:
	.asciz	"func(*\tcommand_line_arguments\tsubnet.Server, *\tcommand_line_arguments\tsubnet.IPPacket)"
	.size	.Lconst.211, 87

	.type	go..C262,@object
	.section	.rodata.go..C262,"a",@progbits
	.p2align	3
go..C262:
	.quad	.Lconst.211
	.quad	86
	.size	go..C262, 16

	.type	go..C263,@object
	.section	.data.go..C263,"aw",@progbits
	.p2align	3
go..C263:
	.quad	type...1command_line_arguments.Server
	.quad	type...1command_line_arguments.IPPacket
	.size	go..C263, 16

	.type	go..C264,@object
	.section	.bss.go..C264,"aw",@nobits
	.p2align	3
go..C264:
	.zero	8
	.size	go..C264, 8

	.type	.Lconst.212,@object
	.section	.rodata..Lconst.212,"a",@progbits
.Lconst.212:
	.asciz	"setAddrForClient"
	.size	.Lconst.212, 17

	.type	go..C265,@object
	.section	.rodata.go..C265,"a",@progbits
	.p2align	3
go..C265:
	.quad	.Lconst.212
	.quad	16
	.size	go..C265, 16

	.type	go..C266,@object
	.section	.rodata.go..C266,"a",@progbits
	.p2align	3
go..C266:
	.quad	.Lconst.2
	.quad	22
	.size	go..C266, 16

	.type	type..func.8int.3net.IP.9.8.9,@object
	.section	.rodata.type..func.8int.3net.IP.9.8.9,"aG",@progbits,type..func.8int.3net.IP.9.8.9,comdat
	.weak	type..func.8int.3net.IP.9.8.9
	.p2align	4
type..func.8int.3net.IP.9.8.9:
	.quad	8
	.quad	8
	.long	553545096
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C267
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C268
	.quad	2
	.quad	2
	.quad	go..C269
	.quad	0
	.quad	0
	.size	type..func.8int.3net.IP.9.8.9, 128

	.type	.Lconst.213,@object
	.section	.rodata..Lconst.213,"a",@progbits
.Lconst.213:
	.asciz	"func(int, \tnet\tnet.IP)"
	.size	.Lconst.213, 23

	.type	go..C267,@object
	.section	.rodata.go..C267,"a",@progbits
	.p2align	3
go..C267:
	.quad	.Lconst.213
	.quad	22
	.size	go..C267, 16

	.type	go..C268,@object
	.section	.data.go..C268,"aw",@progbits
	.p2align	3
go..C268:
	.quad	int..d
	.quad	net.IP..d
	.size	go..C268, 16

	.type	go..C269,@object
	.section	.bss.go..C269,"aw",@nobits
	.p2align	3
go..C269:
	.zero	8
	.size	go..C269, 8

	.type	type..func.8.1command_line_arguments.Server.3int.3net.IP.9.8.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.Server.3int.3net.IP.9.8.9,"aG",@progbits,type..func.8.1command_line_arguments.Server.3int.3net.IP.9.8.9,comdat
	.weak	type..func.8.1command_line_arguments.Server.3int.3net.IP.9.8.9
	.p2align	4
type..func.8.1command_line_arguments.Server.3int.3net.IP.9.8.9:
	.quad	8
	.quad	8
	.long	2233648680
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C270
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C271
	.quad	3
	.quad	3
	.quad	go..C272
	.quad	0
	.quad	0
	.size	type..func.8.1command_line_arguments.Server.3int.3net.IP.9.8.9, 128

	.type	.Lconst.214,@object
	.section	.rodata..Lconst.214,"a",@progbits
.Lconst.214:
	.asciz	"func(*\tcommand_line_arguments\tsubnet.Server, int, \tnet\tnet.IP)"
	.size	.Lconst.214, 63

	.type	go..C270,@object
	.section	.rodata.go..C270,"a",@progbits
	.p2align	3
go..C270:
	.quad	.Lconst.214
	.quad	62
	.size	go..C270, 16

	.type	go..C271,@object
	.section	.data.go..C271,"aw",@progbits
	.p2align	4
go..C271:
	.quad	type...1command_line_arguments.Server
	.quad	int..d
	.quad	net.IP..d
	.size	go..C271, 24

	.type	go..C272,@object
	.section	.bss.go..C272,"aw",@nobits
	.p2align	3
go..C272:
	.zero	8
	.size	go..C272, 8

	.type	go..C273,@object
	.section	.data.go..C273,"aw",@progbits
	.p2align	4
go..C273:
	.quad	go..C217
	.quad	0
	.quad	type..func.8.9.8error.9
	.quad	type..func.8.1command_line_arguments.Server.9.8error.9
	.quad	command_line_arguments.Server.Close
	.quad	go..C221
	.quad	0
	.quad	type..func.8string.9.8error.9
	.quad	type..func.8.1command_line_arguments.Server.3string.9.8error.9
	.quad	command_line_arguments.Server.Init
	.quad	go..C228
	.quad	0
	.quad	type..func.8.9.8.9
	.quad	type..func.8.1command_line_arguments.Server.9.8.9
	.quad	command_line_arguments.Server.Run
	.quad	go..C229
	.quad	go..C230
	.quad	type..func.8.9.8.9
	.quad	type..func.8.1command_line_arguments.Server.9.8.9
	.quad	command_line_arguments.Server.acceptRoutine
	.quad	go..C231
	.quad	go..C232
	.quad	type..func.8.9.8.9
	.quad	type..func.8.1command_line_arguments.Server.9.8.9
	.quad	command_line_arguments.Server.dispatchRoutine
	.quad	go..C233
	.quad	go..C234
	.quad	type..func.8.1command_line_arguments.serverConn.9.8.9
	.quad	type..func.8.1command_line_arguments.Server.3.1command_line_arguments.serverConn.9.8.9
	.quad	command_line_arguments.Server.enrollClientConn
	.quad	go..C241
	.quad	go..C242
	.quad	type..func.8net.Conn.9.8.9
	.quad	type..func.8.1command_line_arguments.Server.3net.Conn.9.8.9
	.quad	command_line_arguments.Server.handleClient
	.quad	go..C249
	.quad	go..C250
	.quad	type..func.8int.9.8.9
	.quad	type..func.8.1command_line_arguments.Server.3int.9.8.9
	.quad	command_line_arguments.Server.removeClientConn
	.quad	go..C257
	.quad	go..C258
	.quad	type..func.8.1command_line_arguments.IPPacket.9.8.9
	.quad	type..func.8.1command_line_arguments.Server.3.1command_line_arguments.IPPacket.9.8.9
	.quad	command_line_arguments.Server.route
	.quad	go..C265
	.quad	go..C266
	.quad	type..func.8int.3net.IP.9.8.9
	.quad	type..func.8.1command_line_arguments.Server.3int.3net.IP.9.8.9
	.quad	command_line_arguments.Server.setAddrForClient
	.size	go..C273, 400

	.type	go..C274,@object
	.section	.rodata.go..C274,"a",@progbits
	.p2align	4
go..C274:
	.quad	0
	.quad	0
	.quad	go..C273
	.quad	10
	.quad	10
	.size	go..C274, 40

	.type	type...1.1command_line_arguments.Server,@object
	.section	.rodata.type...1.1command_line_arguments.Server,"aG",@progbits,type...1.1command_line_arguments.Server,comdat
	.weak	type...1.1command_line_arguments.Server
	.p2align	4
type...1.1command_line_arguments.Server:
	.quad	8
	.quad	8
	.long	563279257
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C275
	.quad	0
	.quad	0
	.quad	type...1command_line_arguments.Server
	.size	type...1.1command_line_arguments.Server, 80

	.type	.Lconst.215,@object
	.section	.rodata..Lconst.215,"a",@progbits
.Lconst.215:
	.asciz	"**\tcommand_line_arguments\tsubnet.Server"
	.size	.Lconst.215, 40

	.type	go..C275,@object
	.section	.rodata.go..C275,"a",@progbits
	.p2align	3
go..C275:
	.quad	.Lconst.215
	.quad	39
	.size	go..C275, 16

	.type	command_line_arguments.Server..d,@object
	.section	.rodata.command_line_arguments.Server..d,"a",@progbits
	.globl	command_line_arguments.Server..d
	.p2align	4
command_line_arguments.Server..d:
	.quad	200
	.quad	184
	.long	4179727093
	.byte	25
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..pBDdf
	.quad	go..C276
	.quad	go..C280
	.quad	type...1command_line_arguments.Server
	.quad	go..C371
	.quad	15
	.quad	15
	.size	command_line_arguments.Server..d, 96

	.type	gcbits..pBDdf,@object
	.section	.rodata.gcbits..pBDdf,"aG",@progbits,gcbits..pBDdf,comdat
	.weak	gcbits..pBDdf
gcbits..pBDdf:
	.ascii	"O\363Q"
	.size	gcbits..pBDdf, 3

	.type	.Lconst.216,@object
	.section	.rodata..Lconst.216,"a",@progbits
.Lconst.216:
	.asciz	"\tcommand_line_arguments\tsubnet.Server"
	.size	.Lconst.216, 38

	.type	go..C276,@object
	.section	.rodata.go..C276,"a",@progbits
	.p2align	3
go..C276:
	.quad	.Lconst.216
	.quad	37
	.size	go..C276, 16

	.type	.Lconst.217,@object
	.section	.rodata..Lconst.217,"a",@progbits
.Lconst.217:
	.asciz	"Server"
	.size	.Lconst.217, 7

	.type	go..C277,@object
	.section	.rodata.go..C277,"a",@progbits
	.p2align	3
go..C277:
	.quad	.Lconst.217
	.quad	6
	.size	go..C277, 16

	.type	go..C278,@object
	.section	.rodata.go..C278,"a",@progbits
	.p2align	3
go..C278:
	.quad	.Lconst.2
	.quad	22
	.size	go..C278, 16

	.type	go..C279,@object
	.section	.bss.go..C279,"aw",@nobits
	.p2align	4
go..C279:
	.zero	40
	.size	go..C279, 40

	.type	go..C280,@object
	.section	.rodata.go..C280,"a",@progbits
	.p2align	4
go..C280:
	.quad	go..C277
	.quad	go..C278
	.quad	go..C279
	.quad	0
	.quad	0
	.size	go..C280, 40

	.type	go..C281,@object
	.section	.rodata.go..C281,"a",@progbits
	.p2align	3
go..C281:
	.quad	.Lconst.52
	.quad	7
	.size	go..C281, 16

	.type	go..C282,@object
	.section	.rodata.go..C282,"a",@progbits
	.p2align	3
go..C282:
	.quad	.Lconst.2
	.quad	22
	.size	go..C282, 16

	.type	.Lconst.218,@object
	.section	.rodata..Lconst.218,"a",@progbits
.Lconst.218:
	.asciz	"tlsListener"
	.size	.Lconst.218, 12

	.type	go..C283,@object
	.section	.rodata.go..C283,"a",@progbits
	.p2align	3
go..C283:
	.quad	.Lconst.218
	.quad	11
	.size	go..C283, 16

	.type	go..C284,@object
	.section	.rodata.go..C284,"a",@progbits
	.p2align	3
go..C284:
	.quad	.Lconst.2
	.quad	22
	.size	go..C284, 16

	.type	go..C285,@object
	.section	.rodata.go..C285,"a",@progbits
	.p2align	3
go..C285:
	.quad	.Lconst.34
	.quad	9
	.size	go..C285, 16

	.type	go..C286,@object
	.section	.rodata.go..C286,"a",@progbits
	.p2align	3
go..C286:
	.quad	.Lconst.2
	.quad	22
	.size	go..C286, 16

	.type	go..C287,@object
	.section	.rodata.go..C287,"a",@progbits
	.p2align	3
go..C287:
	.quad	.Lconst.37
	.quad	12
	.size	go..C287, 16

	.type	go..C288,@object
	.section	.rodata.go..C288,"a",@progbits
	.p2align	3
go..C288:
	.quad	.Lconst.2
	.quad	22
	.size	go..C288, 16

	.type	go..C289,@object
	.section	.rodata.go..C289,"a",@progbits
	.p2align	3
go..C289:
	.quad	.Lconst.38
	.quad	14
	.size	go..C289, 16

	.type	go..C290,@object
	.section	.rodata.go..C290,"a",@progbits
	.p2align	3
go..C290:
	.quad	.Lconst.2
	.quad	22
	.size	go..C290, 16

	.type	.Lconst.219,@object
	.section	.rodata..Lconst.219,"a",@progbits
.Lconst.219:
	.asciz	"clientIDByAddress"
	.size	.Lconst.219, 18

	.type	go..C291,@object
	.section	.rodata.go..C291,"a",@progbits
	.p2align	3
go..C291:
	.quad	.Lconst.219
	.quad	17
	.size	go..C291, 16

	.type	go..C292,@object
	.section	.rodata.go..C292,"a",@progbits
	.p2align	3
go..C292:
	.quad	.Lconst.2
	.quad	22
	.size	go..C292, 16

	.type	type..map.6string.7int,@object
	.section	.rodata.type..map.6string.7int,"aG",@progbits,type..map.6string.7int,comdat
	.weak	type..map.6string.7int
	.p2align	4
type..map.6string.7int:
	.quad	8
	.quad	8
	.long	3172718540
	.byte	21
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C293
	.quad	0
	.quad	0
	.quad	string..d
	.quad	int..d
	.quad	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7int.2overflow.0.1.4void.5.5
	.quad	type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7int.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7int.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5
	.byte	16
	.byte	0
	.byte	8
	.byte	0
	.short	208
	.byte	1
	.byte	1
	.size	type..map.6string.7int, 112

	.type	.Lconst.220,@object
	.section	.rodata..Lconst.220,"a",@progbits
.Lconst.220:
	.asciz	"map[string]int"
	.size	.Lconst.220, 15

	.type	go..C293,@object
	.section	.rodata.go..C293,"a",@progbits
	.p2align	3
go..C293:
	.quad	.Lconst.220
	.quad	14
	.size	go..C293, 16

	.type	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7int.2overflow.0.1.4void.5.5,@object
	.section	.rodata.type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7int.2overflow.0.1.4void.5.5,"aG",@progbits,type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7int.2overflow.0.1.4void.5.5,comdat
	.weak	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7int.2overflow.0.1.4void.5.5
	.p2align	4
type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7int.2overflow.0.1.4void.5.5:
	.quad	208
	.quad	208
	.long	2713935524
	.byte	25
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..kwkbaba
	.quad	go..C294
	.quad	0
	.quad	0
	.quad	go..C303
	.quad	4
	.quad	4
	.size	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7int.2overflow.0.1.4void.5.5, 96

	.type	gcbits..kwkbaba,@object
	.section	.rodata.gcbits..kwkbaba,"aG",@progbits,gcbits..kwkbaba,comdat
	.weak	gcbits..kwkbaba
gcbits..kwkbaba:
	.ascii	"\252\252\000\002"
	.size	gcbits..kwkbaba, 4

	.type	.Lconst.221,@object
	.section	.rodata..Lconst.221,"a",@progbits
.Lconst.221:
	.asciz	"struct { topbits [8]uint8; keys [8]string; values [8]int; overflow * }"
	.size	.Lconst.221, 71

	.type	go..C294,@object
	.section	.rodata.go..C294,"a",@progbits
	.p2align	3
go..C294:
	.quad	.Lconst.221
	.quad	70
	.size	go..C294, 16

	.type	.Lconst.222,@object
	.section	.rodata..Lconst.222,"a",@progbits
.Lconst.222:
	.asciz	"topbits"
	.size	.Lconst.222, 8

	.type	go..C295,@object
	.section	.rodata.go..C295,"a",@progbits
	.p2align	3
go..C295:
	.quad	.Lconst.222
	.quad	7
	.size	go..C295, 16

	.type	type...68x.7uint8,@object
	.section	.rodata.type...68x.7uint8,"aG",@progbits,type...68x.7uint8,comdat
	.weak	type...68x.7uint8
	.p2align	4
type...68x.7uint8:
	.quad	8
	.quad	0
	.long	529264193
	.byte	145
	.byte	1
	.byte	1
	.zero	1
	.quad	0
	.quad	0
	.quad	0
	.quad	go..C296
	.quad	0
	.quad	0
	.quad	uint8..d
	.quad	type...6.7uint8
	.quad	8
	.size	type...68x.7uint8, 96

	.type	.Lconst.223,@object
	.section	.rodata..Lconst.223,"a",@progbits
.Lconst.223:
	.asciz	"[8]uint8"
	.size	.Lconst.223, 9

	.type	go..C296,@object
	.section	.rodata.go..C296,"a",@progbits
	.p2align	3
go..C296:
	.quad	.Lconst.223
	.quad	8
	.size	go..C296, 16

	.type	.Lconst.224,@object
	.section	.rodata..Lconst.224,"a",@progbits
.Lconst.224:
	.asciz	"keys"
	.size	.Lconst.224, 5

	.type	go..C297,@object
	.section	.rodata.go..C297,"a",@progbits
	.p2align	3
go..C297:
	.quad	.Lconst.224
	.quad	4
	.size	go..C297, 16

	.type	type...68x.7string,@object
	.section	.rodata.type...68x.7string,"aG",@progbits,type...68x.7string,comdat
	.weak	type...68x.7string
	.p2align	4
type...68x.7string:
	.quad	128
	.quad	120
	.long	297061699
	.byte	17
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..wkwa
	.quad	go..C298
	.quad	0
	.quad	0
	.quad	string..d
	.quad	type...6.7string
	.quad	8
	.size	type...68x.7string, 96

	.type	gcbits..wkwa,@object
	.section	.rodata.gcbits..wkwa,"aG",@progbits,gcbits..wkwa,comdat
	.weak	gcbits..wkwa
gcbits..wkwa:
	.zero	2,85
	.size	gcbits..wkwa, 2

	.type	.Lconst.225,@object
	.section	.rodata..Lconst.225,"a",@progbits
.Lconst.225:
	.asciz	"[8]string"
	.size	.Lconst.225, 10

	.type	go..C298,@object
	.section	.rodata.go..C298,"a",@progbits
	.p2align	3
go..C298:
	.quad	.Lconst.225
	.quad	9
	.size	go..C298, 16

	.type	.Lconst.226,@object
	.section	.rodata..Lconst.226,"a",@progbits
.Lconst.226:
	.asciz	"values"
	.size	.Lconst.226, 7

	.type	go..C299,@object
	.section	.rodata.go..C299,"a",@progbits
	.p2align	3
go..C299:
	.quad	.Lconst.226
	.quad	6
	.size	go..C299, 16

	.type	type...68x.7int,@object
	.section	.rodata.type...68x.7int,"aG",@progbits,type...68x.7int,comdat
	.weak	type...68x.7int
	.p2align	4
type...68x.7int:
	.quad	64
	.quad	0
	.long	1753408083
	.byte	145
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	0
	.quad	go..C300
	.quad	0
	.quad	0
	.quad	int..d
	.quad	type...6.7int
	.quad	8
	.size	type...68x.7int, 96

	.type	.Lconst.227,@object
	.section	.rodata..Lconst.227,"a",@progbits
.Lconst.227:
	.asciz	"[8]int"
	.size	.Lconst.227, 7

	.type	go..C300,@object
	.section	.rodata.go..C300,"a",@progbits
	.p2align	3
go..C300:
	.quad	.Lconst.227
	.quad	6
	.size	go..C300, 16

	.type	type...6.7int,@object
	.section	.rodata.type...6.7int,"aG",@progbits,type...6.7int,comdat
	.weak	type...6.7int
	.p2align	4
type...6.7int:
	.quad	24
	.quad	8
	.long	876704048
	.byte	23
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C301
	.quad	0
	.quad	0
	.quad	int..d
	.size	type...6.7int, 80

	.type	.Lconst.228,@object
	.section	.rodata..Lconst.228,"a",@progbits
.Lconst.228:
	.asciz	"[]int"
	.size	.Lconst.228, 6

	.type	go..C301,@object
	.section	.rodata.go..C301,"a",@progbits
	.p2align	3
go..C301:
	.quad	.Lconst.228
	.quad	5
	.size	go..C301, 16

	.type	.Lconst.229,@object
	.section	.rodata..Lconst.229,"a",@progbits
.Lconst.229:
	.asciz	"overflow"
	.size	.Lconst.229, 9

	.type	go..C302,@object
	.section	.rodata.go..C302,"a",@progbits
	.p2align	3
go..C302:
	.quad	.Lconst.229
	.quad	8
	.size	go..C302, 16

	.type	go..C303,@object
	.section	.data.go..C303,"aw",@progbits
	.p2align	4
go..C303:
	.quad	go..C295
	.quad	0
	.quad	type...68x.7uint8
	.quad	0
	.quad	0
	.quad	go..C297
	.quad	0
	.quad	type...68x.7string
	.quad	0
	.quad	16
	.quad	go..C299
	.quad	0
	.quad	type...68x.7int
	.quad	0
	.quad	272
	.quad	go..C302
	.quad	0
	.quad	unsafe.Pointer..d
	.quad	0
	.quad	400
	.size	go..C303, 160

	.type	type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7int.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7int.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5,@object
	.section	.rodata.type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7int.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7int.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5,"aG",@progbits,type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7int.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7int.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5,comdat
	.weak	type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7int.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7int.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5
	.p2align	4
type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7int.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7int.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5:
	.quad	48
	.quad	48
	.long	2530630116
	.byte	25
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..mb
	.quad	go..C304
	.quad	0
	.quad	0
	.quad	go..C330
	.quad	9
	.quad	9
	.size	type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7int.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7int.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5, 96

	.type	gcbits..mb,@object
	.section	.rodata.gcbits..mb,"aG",@progbits,gcbits..mb,comdat
	.weak	gcbits..mb
gcbits..mb:
	.byte	44
	.size	gcbits..mb, 1

	.type	.Lconst.230,@object
	.section	.rodata..Lconst.230,"a",@progbits
.Lconst.230:
	.asciz	"struct { count int; flags uint8; B uint8; noverflow uint16; hash0 uint32; buckets *struct { topbits [8]uint8; keys [8]string; values [8]int; overflow * }; oldbuckets *struct { topbits [8]uint8; keys [8]string; values [8]int; overflow * }; nevacuate uintptr; extra * }"
	.size	.Lconst.230, 268

	.type	go..C304,@object
	.section	.rodata.go..C304,"a",@progbits
	.p2align	3
go..C304:
	.quad	.Lconst.230
	.quad	267
	.size	go..C304, 16

	.type	.Lconst.231,@object
	.section	.rodata..Lconst.231,"a",@progbits
.Lconst.231:
	.asciz	"count"
	.size	.Lconst.231, 6

	.type	go..C305,@object
	.section	.rodata.go..C305,"a",@progbits
	.p2align	3
go..C305:
	.quad	.Lconst.231
	.quad	5
	.size	go..C305, 16

	.type	.Lconst.232,@object
	.section	.rodata..Lconst.232,"a",@progbits
.Lconst.232:
	.asciz	"flags"
	.size	.Lconst.232, 6

	.type	go..C306,@object
	.section	.rodata.go..C306,"a",@progbits
	.p2align	3
go..C306:
	.quad	.Lconst.232
	.quad	5
	.size	go..C306, 16

	.type	.Lconst.233,@object
	.section	.rodata..Lconst.233,"a",@progbits
.Lconst.233:
	.asciz	"B"
	.size	.Lconst.233, 2

	.type	go..C307,@object
	.section	.rodata.go..C307,"a",@progbits
	.p2align	3
go..C307:
	.quad	.Lconst.233
	.quad	1
	.size	go..C307, 16

	.type	.Lconst.234,@object
	.section	.rodata..Lconst.234,"a",@progbits
.Lconst.234:
	.asciz	"noverflow"
	.size	.Lconst.234, 10

	.type	go..C308,@object
	.section	.rodata.go..C308,"a",@progbits
	.p2align	3
go..C308:
	.quad	.Lconst.234
	.quad	9
	.size	go..C308, 16

	.type	uint16..d,@object
	.section	.rodata.uint16..d,"aG",@progbits,uint16..d,comdat
	.weak	uint16..d
	.p2align	4
uint16..d:
	.quad	2
	.quad	0
	.long	76732288
	.byte	137
	.byte	2
	.byte	2
	.zero	1
	.quad	runtime.memhash16..f
	.quad	runtime.memequal16..f
	.quad	0
	.quad	go..C309
	.quad	go..C312
	.quad	type...1uint16
	.size	uint16..d, 72

	.type	.Lconst.235,@object
	.section	.rodata..Lconst.235,"a",@progbits
.Lconst.235:
	.asciz	"uint16"
	.size	.Lconst.235, 7

	.type	go..C309,@object
	.section	.rodata.go..C309,"a",@progbits
	.p2align	3
go..C309:
	.quad	.Lconst.235
	.quad	6
	.size	go..C309, 16

	.type	go..C310,@object
	.section	.rodata.go..C310,"a",@progbits
	.p2align	3
go..C310:
	.quad	.Lconst.235
	.quad	6
	.size	go..C310, 16

	.type	go..C311,@object
	.section	.bss.go..C311,"aw",@nobits
	.p2align	4
go..C311:
	.zero	40
	.size	go..C311, 40

	.type	go..C312,@object
	.section	.rodata.go..C312,"a",@progbits
	.p2align	4
go..C312:
	.quad	go..C310
	.quad	0
	.quad	go..C311
	.quad	0
	.quad	0
	.size	go..C312, 40

	.type	type...1uint16,@object
	.section	.rodata.type...1uint16,"aG",@progbits,type...1uint16,comdat
	.weak	type...1uint16
	.p2align	4
type...1uint16:
	.quad	8
	.quad	8
	.long	1227716617
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C313
	.quad	0
	.quad	0
	.quad	uint16..d
	.size	type...1uint16, 80

	.type	.Lconst.236,@object
	.section	.rodata..Lconst.236,"a",@progbits
.Lconst.236:
	.asciz	"*uint16"
	.size	.Lconst.236, 8

	.type	go..C313,@object
	.section	.rodata.go..C313,"a",@progbits
	.p2align	3
go..C313:
	.quad	.Lconst.236
	.quad	7
	.size	go..C313, 16

	.type	.Lconst.237,@object
	.section	.rodata..Lconst.237,"a",@progbits
.Lconst.237:
	.asciz	"hash0"
	.size	.Lconst.237, 6

	.type	go..C314,@object
	.section	.rodata.go..C314,"a",@progbits
	.p2align	3
go..C314:
	.quad	.Lconst.237
	.quad	5
	.size	go..C314, 16

	.type	uint32..d,@object
	.section	.rodata.uint32..d,"aG",@progbits,uint32..d,comdat
	.weak	uint32..d
	.p2align	4
uint32..d:
	.quad	4
	.quad	0
	.long	278357906
	.byte	138
	.byte	4
	.byte	4
	.zero	1
	.quad	runtime.memhash32..f
	.quad	runtime.memequal32..f
	.quad	0
	.quad	go..C315
	.quad	go..C318
	.quad	type...1uint32
	.size	uint32..d, 72

	.type	.Lconst.238,@object
	.section	.rodata..Lconst.238,"a",@progbits
.Lconst.238:
	.asciz	"uint32"
	.size	.Lconst.238, 7

	.type	go..C315,@object
	.section	.rodata.go..C315,"a",@progbits
	.p2align	3
go..C315:
	.quad	.Lconst.238
	.quad	6
	.size	go..C315, 16

	.type	go..C316,@object
	.section	.rodata.go..C316,"a",@progbits
	.p2align	3
go..C316:
	.quad	.Lconst.238
	.quad	6
	.size	go..C316, 16

	.type	go..C317,@object
	.section	.bss.go..C317,"aw",@nobits
	.p2align	4
go..C317:
	.zero	40
	.size	go..C317, 40

	.type	go..C318,@object
	.section	.rodata.go..C318,"a",@progbits
	.p2align	4
go..C318:
	.quad	go..C316
	.quad	0
	.quad	go..C317
	.quad	0
	.quad	0
	.size	go..C318, 40

	.type	type...1uint32,@object
	.section	.rodata.type...1uint32,"aG",@progbits,type...1uint32,comdat
	.weak	type...1uint32
	.p2align	4
type...1uint32:
	.quad	8
	.quad	8
	.long	158759209
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C319
	.quad	0
	.quad	0
	.quad	uint32..d
	.size	type...1uint32, 80

	.type	.Lconst.239,@object
	.section	.rodata..Lconst.239,"a",@progbits
.Lconst.239:
	.asciz	"*uint32"
	.size	.Lconst.239, 8

	.type	go..C319,@object
	.section	.rodata.go..C319,"a",@progbits
	.p2align	3
go..C319:
	.quad	.Lconst.239
	.quad	7
	.size	go..C319, 16

	.type	.Lconst.240,@object
	.section	.rodata..Lconst.240,"a",@progbits
.Lconst.240:
	.asciz	"buckets"
	.size	.Lconst.240, 8

	.type	go..C320,@object
	.section	.rodata.go..C320,"a",@progbits
	.p2align	3
go..C320:
	.quad	.Lconst.240
	.quad	7
	.size	go..C320, 16

	.type	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7int.2overflow.0.1.4void.5.5,@object
	.section	.rodata.type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7int.2overflow.0.1.4void.5.5,"aG",@progbits,type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7int.2overflow.0.1.4void.5.5,comdat
	.weak	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7int.2overflow.0.1.4void.5.5
	.p2align	4
type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7int.2overflow.0.1.4void.5.5:
	.quad	8
	.quad	8
	.long	473295433
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C321
	.quad	0
	.quad	0
	.quad	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7int.2overflow.0.1.4void.5.5
	.size	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7int.2overflow.0.1.4void.5.5, 80

	.type	.Lconst.241,@object
	.section	.rodata..Lconst.241,"a",@progbits
.Lconst.241:
	.asciz	"*struct { topbits [8]uint8; keys [8]string; values [8]int; overflow * }"
	.size	.Lconst.241, 72

	.type	go..C321,@object
	.section	.rodata.go..C321,"a",@progbits
	.p2align	3
go..C321:
	.quad	.Lconst.241
	.quad	71
	.size	go..C321, 16

	.type	.Lconst.242,@object
	.section	.rodata..Lconst.242,"a",@progbits
.Lconst.242:
	.asciz	"oldbuckets"
	.size	.Lconst.242, 11

	.type	go..C322,@object
	.section	.rodata.go..C322,"a",@progbits
	.p2align	3
go..C322:
	.quad	.Lconst.242
	.quad	10
	.size	go..C322, 16

	.type	.Lconst.243,@object
	.section	.rodata..Lconst.243,"a",@progbits
.Lconst.243:
	.asciz	"nevacuate"
	.size	.Lconst.243, 10

	.type	go..C323,@object
	.section	.rodata.go..C323,"a",@progbits
	.p2align	3
go..C323:
	.quad	.Lconst.243
	.quad	9
	.size	go..C323, 16

	.type	uintptr..d,@object
	.section	.rodata.uintptr..d,"aG",@progbits,uintptr..d,comdat
	.weak	uintptr..d
	.p2align	4
uintptr..d:
	.quad	8
	.quad	0
	.long	2806773995
	.byte	140
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	0
	.quad	go..C324
	.quad	go..C327
	.quad	type...1uintptr
	.size	uintptr..d, 72

	.type	.Lconst.244,@object
	.section	.rodata..Lconst.244,"a",@progbits
.Lconst.244:
	.asciz	"uintptr"
	.size	.Lconst.244, 8

	.type	go..C324,@object
	.section	.rodata.go..C324,"a",@progbits
	.p2align	3
go..C324:
	.quad	.Lconst.244
	.quad	7
	.size	go..C324, 16

	.type	go..C325,@object
	.section	.rodata.go..C325,"a",@progbits
	.p2align	3
go..C325:
	.quad	.Lconst.244
	.quad	7
	.size	go..C325, 16

	.type	go..C326,@object
	.section	.bss.go..C326,"aw",@nobits
	.p2align	4
go..C326:
	.zero	40
	.size	go..C326, 40

	.type	go..C327,@object
	.section	.rodata.go..C327,"a",@progbits
	.p2align	4
go..C327:
	.quad	go..C325
	.quad	0
	.quad	go..C326
	.quad	0
	.quad	0
	.size	go..C327, 40

	.type	type...1uintptr,@object
	.section	.rodata.type...1uintptr,"aG",@progbits,type...1uintptr,comdat
	.weak	type...1uintptr
	.p2align	4
type...1uintptr:
	.quad	8
	.quad	8
	.long	1958710969
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C328
	.quad	0
	.quad	0
	.quad	uintptr..d
	.size	type...1uintptr, 80

	.type	.Lconst.245,@object
	.section	.rodata..Lconst.245,"a",@progbits
.Lconst.245:
	.asciz	"*uintptr"
	.size	.Lconst.245, 9

	.type	go..C328,@object
	.section	.rodata.go..C328,"a",@progbits
	.p2align	3
go..C328:
	.quad	.Lconst.245
	.quad	8
	.size	go..C328, 16

	.type	.Lconst.246,@object
	.section	.rodata..Lconst.246,"a",@progbits
.Lconst.246:
	.asciz	"extra"
	.size	.Lconst.246, 6

	.type	go..C329,@object
	.section	.rodata.go..C329,"a",@progbits
	.p2align	3
go..C329:
	.quad	.Lconst.246
	.quad	5
	.size	go..C329, 16

	.type	go..C330,@object
	.section	.data.go..C330,"aw",@progbits
	.p2align	4
go..C330:
	.quad	go..C305
	.quad	0
	.quad	int..d
	.quad	0
	.quad	0
	.quad	go..C306
	.quad	0
	.quad	uint8..d
	.quad	0
	.quad	16
	.quad	go..C307
	.quad	0
	.quad	uint8..d
	.quad	0
	.quad	18
	.quad	go..C308
	.quad	0
	.quad	uint16..d
	.quad	0
	.quad	20
	.quad	go..C314
	.quad	0
	.quad	uint32..d
	.quad	0
	.quad	24
	.quad	go..C320
	.quad	0
	.quad	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7int.2overflow.0.1.4void.5.5
	.quad	0
	.quad	32
	.quad	go..C322
	.quad	0
	.quad	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7int.2overflow.0.1.4void.5.5
	.quad	0
	.quad	48
	.quad	go..C323
	.quad	0
	.quad	uintptr..d
	.quad	0
	.quad	64
	.quad	go..C329
	.quad	0
	.quad	unsafe.Pointer..d
	.quad	0
	.quad	80
	.size	go..C330, 360

	.type	.Lconst.247,@object
	.section	.rodata..Lconst.247,"a",@progbits
.Lconst.247:
	.asciz	"clients"
	.size	.Lconst.247, 8

	.type	go..C331,@object
	.section	.rodata.go..C331,"a",@progbits
	.p2align	3
go..C331:
	.quad	.Lconst.247
	.quad	7
	.size	go..C331, 16

	.type	go..C332,@object
	.section	.rodata.go..C332,"a",@progbits
	.p2align	3
go..C332:
	.quad	.Lconst.2
	.quad	22
	.size	go..C332, 16

	.type	type..map.6int.7.1command_line_arguments.serverConn,@object
	.section	.rodata.type..map.6int.7.1command_line_arguments.serverConn,"aG",@progbits,type..map.6int.7.1command_line_arguments.serverConn,comdat
	.weak	type..map.6int.7.1command_line_arguments.serverConn
	.p2align	4
type..map.6int.7.1command_line_arguments.serverConn:
	.quad	8
	.quad	8
	.long	936105483
	.byte	21
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C333
	.quad	0
	.quad	0
	.quad	int..d
	.quad	type...1command_line_arguments.serverConn
	.quad	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7int.2values.0.68x.7.1command_line_arguments.serverConn.2overflow.0.1.4void.5.5
	.quad	type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7int.2values.0.68x.7.1command_line_arguments.serverConn.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7int.2values.0.68x.7.1command_line_arguments.serverConn.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5
	.byte	8
	.byte	0
	.byte	8
	.byte	0
	.short	144
	.byte	1
	.byte	0
	.size	type..map.6int.7.1command_line_arguments.serverConn, 112

	.type	.Lconst.248,@object
	.section	.rodata..Lconst.248,"a",@progbits
.Lconst.248:
	.asciz	"map[int]*\tcommand_line_arguments\tsubnet.serverConn"
	.size	.Lconst.248, 51

	.type	go..C333,@object
	.section	.rodata.go..C333,"a",@progbits
	.p2align	3
go..C333:
	.quad	.Lconst.248
	.quad	50
	.size	go..C333, 16

	.type	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7int.2values.0.68x.7.1command_line_arguments.serverConn.2overflow.0.1.4void.5.5,@object
	.section	.rodata.type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7int.2values.0.68x.7.1command_line_arguments.serverConn.2overflow.0.1.4void.5.5,"aG",@progbits,type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7int.2values.0.68x.7.1command_line_arguments.serverConn.2overflow.0.1.4void.5.5,comdat
	.weak	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7int.2values.0.68x.7.1command_line_arguments.serverConn.2overflow.0.1.4void.5.5
	.p2align	4
type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7int.2values.0.68x.7.1command_line_arguments.serverConn.2overflow.0.1.4void.5.5:
	.quad	144
	.quad	144
	.long	1688500100
	.byte	25
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..aqGha
	.quad	go..C334
	.quad	0
	.quad	0
	.quad	go..C341
	.quad	4
	.quad	4
	.size	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7int.2values.0.68x.7.1command_line_arguments.serverConn.2overflow.0.1.4void.5.5, 96

	.type	gcbits..aqGha,@object
	.section	.rodata.gcbits..aqGha,"aG",@progbits,gcbits..aqGha,comdat
	.weak	gcbits..aqGha
gcbits..aqGha:
	.ascii	"\000\376\003"
	.size	gcbits..aqGha, 3

	.type	.Lconst.249,@object
	.section	.rodata..Lconst.249,"a",@progbits
.Lconst.249:
	.asciz	"struct { topbits [8]uint8; keys [8]int; values [8]*\tcommand_line_arguments\tsubnet.serverConn; overflow * }"
	.size	.Lconst.249, 107

	.type	go..C334,@object
	.section	.rodata.go..C334,"a",@progbits
	.p2align	3
go..C334:
	.quad	.Lconst.249
	.quad	106
	.size	go..C334, 16

	.type	go..C335,@object
	.section	.rodata.go..C335,"a",@progbits
	.p2align	3
go..C335:
	.quad	.Lconst.222
	.quad	7
	.size	go..C335, 16

	.type	go..C336,@object
	.section	.rodata.go..C336,"a",@progbits
	.p2align	3
go..C336:
	.quad	.Lconst.224
	.quad	4
	.size	go..C336, 16

	.type	go..C337,@object
	.section	.rodata.go..C337,"a",@progbits
	.p2align	3
go..C337:
	.quad	.Lconst.226
	.quad	6
	.size	go..C337, 16

	.type	type...68x.7.1command_line_arguments.serverConn,@object
	.section	.rodata.type...68x.7.1command_line_arguments.serverConn,"aG",@progbits,type...68x.7.1command_line_arguments.serverConn,comdat
	.weak	type...68x.7.1command_line_arguments.serverConn
	.p2align	4
type...68x.7.1command_line_arguments.serverConn:
	.quad	64
	.quad	64
	.long	118802881
	.byte	17
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..Gh
	.quad	go..C338
	.quad	0
	.quad	0
	.quad	type...1command_line_arguments.serverConn
	.quad	type...6.7.1command_line_arguments.serverConn
	.quad	8
	.size	type...68x.7.1command_line_arguments.serverConn, 96

	.type	gcbits..Gh,@object
	.section	.rodata.gcbits..Gh,"aG",@progbits,gcbits..Gh,comdat
	.weak	gcbits..Gh
gcbits..Gh:
	.byte	255
	.size	gcbits..Gh, 1

	.type	.Lconst.250,@object
	.section	.rodata..Lconst.250,"a",@progbits
.Lconst.250:
	.asciz	"[8]*\tcommand_line_arguments\tsubnet.serverConn"
	.size	.Lconst.250, 46

	.type	go..C338,@object
	.section	.rodata.go..C338,"a",@progbits
	.p2align	3
go..C338:
	.quad	.Lconst.250
	.quad	45
	.size	go..C338, 16

	.type	type...6.7.1command_line_arguments.serverConn,@object
	.section	.rodata.type...6.7.1command_line_arguments.serverConn,"aG",@progbits,type...6.7.1command_line_arguments.serverConn,comdat
	.weak	type...6.7.1command_line_arguments.serverConn
	.p2align	4
type...6.7.1command_line_arguments.serverConn:
	.quad	24
	.quad	8
	.long	59401447
	.byte	23
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C339
	.quad	0
	.quad	0
	.quad	type...1command_line_arguments.serverConn
	.size	type...6.7.1command_line_arguments.serverConn, 80

	.type	.Lconst.251,@object
	.section	.rodata..Lconst.251,"a",@progbits
.Lconst.251:
	.asciz	"[]*\tcommand_line_arguments\tsubnet.serverConn"
	.size	.Lconst.251, 45

	.type	go..C339,@object
	.section	.rodata.go..C339,"a",@progbits
	.p2align	3
go..C339:
	.quad	.Lconst.251
	.quad	44
	.size	go..C339, 16

	.type	go..C340,@object
	.section	.rodata.go..C340,"a",@progbits
	.p2align	3
go..C340:
	.quad	.Lconst.229
	.quad	8
	.size	go..C340, 16

	.type	go..C341,@object
	.section	.data.go..C341,"aw",@progbits
	.p2align	4
go..C341:
	.quad	go..C335
	.quad	0
	.quad	type...68x.7uint8
	.quad	0
	.quad	0
	.quad	go..C336
	.quad	0
	.quad	type...68x.7int
	.quad	0
	.quad	16
	.quad	go..C337
	.quad	0
	.quad	type...68x.7.1command_line_arguments.serverConn
	.quad	0
	.quad	144
	.quad	go..C340
	.quad	0
	.quad	unsafe.Pointer..d
	.quad	0
	.quad	272
	.size	go..C341, 160

	.type	type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7int.2values.0.68x.7.1command_line_arguments.serverConn.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7int.2values.0.68x.7.1command_line_arguments.serverConn.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5,@object
	.section	.rodata.type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7int.2values.0.68x.7.1command_line_arguments.serverConn.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7int.2values.0.68x.7.1command_line_arguments.serverConn.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5,"aG",@progbits,type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7int.2values.0.68x.7.1command_line_arguments.serverConn.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7int.2values.0.68x.7.1command_line_arguments.serverConn.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5,comdat
	.weak	type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7int.2values.0.68x.7.1command_line_arguments.serverConn.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7int.2values.0.68x.7.1command_line_arguments.serverConn.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5
	.p2align	4
type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7int.2values.0.68x.7.1command_line_arguments.serverConn.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7int.2values.0.68x.7.1command_line_arguments.serverConn.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5:
	.quad	48
	.quad	48
	.long	3714816484
	.byte	25
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..mb
	.quad	go..C342
	.quad	0
	.quad	0
	.quad	go..C353
	.quad	9
	.quad	9
	.size	type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7int.2values.0.68x.7.1command_line_arguments.serverConn.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7int.2values.0.68x.7.1command_line_arguments.serverConn.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5, 96

	.type	.Lconst.252,@object
	.section	.rodata..Lconst.252,"a",@progbits
.Lconst.252:
	.asciz	"struct { count int; flags uint8; B uint8; noverflow uint16; hash0 uint32; buckets *struct { topbits [8]uint8; keys [8]int; values [8]*\tcommand_line_arguments\tsubnet.serverConn; overflow * }; oldbuckets *struct { topbits [8]uint8; keys [8]int; values [8]*\tcommand_line_arguments\tsubnet.serverConn; overflow * }; nevacuate uintptr; extra * }"
	.size	.Lconst.252, 340

	.type	go..C342,@object
	.section	.rodata.go..C342,"a",@progbits
	.p2align	3
go..C342:
	.quad	.Lconst.252
	.quad	339
	.size	go..C342, 16

	.type	go..C343,@object
	.section	.rodata.go..C343,"a",@progbits
	.p2align	3
go..C343:
	.quad	.Lconst.231
	.quad	5
	.size	go..C343, 16

	.type	go..C344,@object
	.section	.rodata.go..C344,"a",@progbits
	.p2align	3
go..C344:
	.quad	.Lconst.232
	.quad	5
	.size	go..C344, 16

	.type	go..C345,@object
	.section	.rodata.go..C345,"a",@progbits
	.p2align	3
go..C345:
	.quad	.Lconst.233
	.quad	1
	.size	go..C345, 16

	.type	go..C346,@object
	.section	.rodata.go..C346,"a",@progbits
	.p2align	3
go..C346:
	.quad	.Lconst.234
	.quad	9
	.size	go..C346, 16

	.type	go..C347,@object
	.section	.rodata.go..C347,"a",@progbits
	.p2align	3
go..C347:
	.quad	.Lconst.237
	.quad	5
	.size	go..C347, 16

	.type	go..C348,@object
	.section	.rodata.go..C348,"a",@progbits
	.p2align	3
go..C348:
	.quad	.Lconst.240
	.quad	7
	.size	go..C348, 16

	.type	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7int.2values.0.68x.7.1command_line_arguments.serverConn.2overflow.0.1.4void.5.5,@object
	.section	.rodata.type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7int.2values.0.68x.7.1command_line_arguments.serverConn.2overflow.0.1.4void.5.5,"aG",@progbits,type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7int.2values.0.68x.7.1command_line_arguments.serverConn.2overflow.0.1.4void.5.5,comdat
	.weak	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7int.2values.0.68x.7.1command_line_arguments.serverConn.2overflow.0.1.4void.5.5
	.p2align	4
type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7int.2values.0.68x.7.1command_line_arguments.serverConn.2overflow.0.1.4void.5.5:
	.quad	8
	.quad	8
	.long	1246197833
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C349
	.quad	0
	.quad	0
	.quad	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7int.2values.0.68x.7.1command_line_arguments.serverConn.2overflow.0.1.4void.5.5
	.size	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7int.2values.0.68x.7.1command_line_arguments.serverConn.2overflow.0.1.4void.5.5, 80

	.type	.Lconst.253,@object
	.section	.rodata..Lconst.253,"a",@progbits
.Lconst.253:
	.asciz	"*struct { topbits [8]uint8; keys [8]int; values [8]*\tcommand_line_arguments\tsubnet.serverConn; overflow * }"
	.size	.Lconst.253, 108

	.type	go..C349,@object
	.section	.rodata.go..C349,"a",@progbits
	.p2align	3
go..C349:
	.quad	.Lconst.253
	.quad	107
	.size	go..C349, 16

	.type	go..C350,@object
	.section	.rodata.go..C350,"a",@progbits
	.p2align	3
go..C350:
	.quad	.Lconst.242
	.quad	10
	.size	go..C350, 16

	.type	go..C351,@object
	.section	.rodata.go..C351,"a",@progbits
	.p2align	3
go..C351:
	.quad	.Lconst.243
	.quad	9
	.size	go..C351, 16

	.type	go..C352,@object
	.section	.rodata.go..C352,"a",@progbits
	.p2align	3
go..C352:
	.quad	.Lconst.246
	.quad	5
	.size	go..C352, 16

	.type	go..C353,@object
	.section	.data.go..C353,"aw",@progbits
	.p2align	4
go..C353:
	.quad	go..C343
	.quad	0
	.quad	int..d
	.quad	0
	.quad	0
	.quad	go..C344
	.quad	0
	.quad	uint8..d
	.quad	0
	.quad	16
	.quad	go..C345
	.quad	0
	.quad	uint8..d
	.quad	0
	.quad	18
	.quad	go..C346
	.quad	0
	.quad	uint16..d
	.quad	0
	.quad	20
	.quad	go..C347
	.quad	0
	.quad	uint32..d
	.quad	0
	.quad	24
	.quad	go..C348
	.quad	0
	.quad	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7int.2values.0.68x.7.1command_line_arguments.serverConn.2overflow.0.1.4void.5.5
	.quad	0
	.quad	32
	.quad	go..C350
	.quad	0
	.quad	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7int.2values.0.68x.7.1command_line_arguments.serverConn.2overflow.0.1.4void.5.5
	.quad	0
	.quad	48
	.quad	go..C351
	.quad	0
	.quad	uintptr..d
	.quad	0
	.quad	64
	.quad	go..C352
	.quad	0
	.quad	unsafe.Pointer..d
	.quad	0
	.quad	80
	.size	go..C353, 360

	.type	.Lconst.254,@object
	.section	.rodata..Lconst.254,"a",@progbits
.Lconst.254:
	.asciz	"clientsLock"
	.size	.Lconst.254, 12

	.type	go..C354,@object
	.section	.rodata.go..C354,"a",@progbits
	.p2align	3
go..C354:
	.quad	.Lconst.254
	.quad	11
	.size	go..C354, 16

	.type	go..C355,@object
	.section	.rodata.go..C355,"a",@progbits
	.p2align	3
go..C355:
	.quad	.Lconst.2
	.quad	22
	.size	go..C355, 16

	.type	.Lconst.255,@object
	.section	.rodata..Lconst.255,"a",@progbits
.Lconst.255:
	.asciz	"lastClientID"
	.size	.Lconst.255, 13

	.type	go..C356,@object
	.section	.rodata.go..C356,"a",@progbits
	.p2align	3
go..C356:
	.quad	.Lconst.255
	.quad	12
	.size	go..C356, 16

	.type	go..C357,@object
	.section	.rodata.go..C357,"a",@progbits
	.p2align	3
go..C357:
	.quad	.Lconst.2
	.quad	22
	.size	go..C357, 16

	.type	.Lconst.256,@object
	.section	.rodata..Lconst.256,"a",@progbits
.Lconst.256:
	.asciz	"inboundIPPkts"
	.size	.Lconst.256, 14

	.type	go..C358,@object
	.section	.rodata.go..C358,"a",@progbits
	.p2align	3
go..C358:
	.quad	.Lconst.256
	.quad	13
	.size	go..C358, 16

	.type	go..C359,@object
	.section	.rodata.go..C359,"a",@progbits
	.p2align	3
go..C359:
	.quad	.Lconst.2
	.quad	22
	.size	go..C359, 16

	.type	type..chan.0.1command_line_arguments.inboundIPPkt,@object
	.section	.rodata.type..chan.0.1command_line_arguments.inboundIPPkt,"aG",@progbits,type..chan.0.1command_line_arguments.inboundIPPkt,comdat
	.weak	type..chan.0.1command_line_arguments.inboundIPPkt
	.p2align	4
type..chan.0.1command_line_arguments.inboundIPPkt:
	.quad	8
	.quad	8
	.long	760876871
	.byte	18
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C360
	.quad	0
	.quad	0
	.quad	type...1command_line_arguments.inboundIPPkt
	.quad	3
	.size	type..chan.0.1command_line_arguments.inboundIPPkt, 88

	.type	.Lconst.257,@object
	.section	.rodata..Lconst.257,"a",@progbits
.Lconst.257:
	.asciz	"chan *\tcommand_line_arguments\tsubnet.inboundIPPkt"
	.size	.Lconst.257, 50

	.type	go..C360,@object
	.section	.rodata.go..C360,"a",@progbits
	.p2align	3
go..C360:
	.quad	.Lconst.257
	.quad	49
	.size	go..C360, 16

	.type	.Lconst.258,@object
	.section	.rodata..Lconst.258,"a",@progbits
.Lconst.258:
	.asciz	"inboundDevPkts"
	.size	.Lconst.258, 15

	.type	go..C361,@object
	.section	.rodata.go..C361,"a",@progbits
	.p2align	3
go..C361:
	.quad	.Lconst.258
	.quad	14
	.size	go..C361, 16

	.type	go..C362,@object
	.section	.rodata.go..C362,"a",@progbits
	.p2align	3
go..C362:
	.quad	.Lconst.2
	.quad	22
	.size	go..C362, 16

	.type	.Lconst.259,@object
	.section	.rodata..Lconst.259,"a",@progbits
.Lconst.259:
	.asciz	"outboundDevPkts"
	.size	.Lconst.259, 16

	.type	go..C363,@object
	.section	.rodata.go..C363,"a",@progbits
	.p2align	3
go..C363:
	.quad	.Lconst.259
	.quad	15
	.size	go..C363, 16

	.type	go..C364,@object
	.section	.rodata.go..C364,"a",@progbits
	.p2align	3
go..C364:
	.quad	.Lconst.2
	.quad	22
	.size	go..C364, 16

	.type	go..C365,@object
	.section	.rodata.go..C365,"a",@progbits
	.p2align	3
go..C365:
	.quad	.Lconst.51
	.quad	4
	.size	go..C365, 16

	.type	go..C366,@object
	.section	.rodata.go..C366,"a",@progbits
	.p2align	3
go..C366:
	.quad	.Lconst.2
	.quad	22
	.size	go..C366, 16

	.type	go..C367,@object
	.section	.rodata.go..C367,"a",@progbits
	.p2align	3
go..C367:
	.quad	.Lconst.57
	.quad	8
	.size	go..C367, 16

	.type	go..C368,@object
	.section	.rodata.go..C368,"a",@progbits
	.p2align	3
go..C368:
	.quad	.Lconst.2
	.quad	22
	.size	go..C368, 16

	.type	go..C369,@object
	.section	.rodata.go..C369,"a",@progbits
	.p2align	3
go..C369:
	.quad	.Lconst.32
	.quad	2
	.size	go..C369, 16

	.type	go..C370,@object
	.section	.rodata.go..C370,"a",@progbits
	.p2align	3
go..C370:
	.quad	.Lconst.2
	.quad	22
	.size	go..C370, 16

	.type	go..C371,@object
	.section	.data.go..C371,"aw",@progbits
	.p2align	4
go..C371:
	.quad	go..C281
	.quad	go..C282
	.quad	type...1crypto_tls.Config
	.quad	0
	.quad	0
	.quad	go..C283
	.quad	go..C284
	.quad	net.Listener..d
	.quad	0
	.quad	16
	.quad	go..C285
	.quad	go..C286
	.quad	net.IP..d
	.quad	0
	.quad	48
	.quad	go..C287
	.quad	go..C288
	.quad	type...1net.IPNet
	.quad	0
	.quad	96
	.quad	go..C289
	.quad	go..C290
	.quad	bool..d
	.quad	0
	.quad	112
	.quad	go..C291
	.quad	go..C292
	.quad	type..map.6string.7int
	.quad	0
	.quad	128
	.quad	go..C331
	.quad	go..C332
	.quad	type..map.6int.7.1command_line_arguments.serverConn
	.quad	0
	.quad	144
	.quad	go..C354
	.quad	go..C355
	.quad	sync.Mutex..d
	.quad	0
	.quad	160
	.quad	go..C356
	.quad	go..C357
	.quad	int..d
	.quad	0
	.quad	176
	.quad	go..C358
	.quad	go..C359
	.quad	type..chan.0.1command_line_arguments.inboundIPPkt
	.quad	0
	.quad	192
	.quad	go..C361
	.quad	go..C362
	.quad	type..chan.0.1command_line_arguments.IPPacket
	.quad	0
	.quad	208
	.quad	go..C363
	.quad	go..C364
	.quad	type..chan.0.1command_line_arguments.IPPacket
	.quad	0
	.quad	224
	.quad	go..C365
	.quad	go..C366
	.quad	type...1github_com_twitchyliquid64_subnet_vendor_github_com_songgao_water.Interface
	.quad	0
	.quad	240
	.quad	go..C367
	.quad	go..C368
	.quad	command_line_arguments.Reverser..d
	.quad	0
	.quad	256
	.quad	go..C369
	.quad	go..C370
	.quad	sync.WaitGroup..d
	.quad	0
	.quad	368
	.size	go..C371, 600

	.type	go..C372,@object
	.section	.data.go..C372,"aw",@progbits
	.p2align	3
go..C372:
	.quad	type...1command_line_arguments.Server
	.size	go..C372, 8

	.type	go..C373,@object
	.section	.bss.go..C373,"aw",@nobits
	.p2align	3
go..C373:
	.zero	8
	.size	go..C373, 8

	.type	type..func.8.1command_line_arguments.serverConn.3.1command_line_arguments.Server.9.8.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.serverConn.3.1command_line_arguments.Server.9.8.9,"aG",@progbits,type..func.8.1command_line_arguments.serverConn.3.1command_line_arguments.Server.9.8.9,comdat
	.weak	type..func.8.1command_line_arguments.serverConn.3.1command_line_arguments.Server.9.8.9
	.p2align	4
type..func.8.1command_line_arguments.serverConn.3.1command_line_arguments.Server.9.8.9:
	.quad	8
	.quad	8
	.long	4153962856
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C374
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C375
	.quad	2
	.quad	2
	.quad	go..C376
	.quad	0
	.quad	0
	.size	type..func.8.1command_line_arguments.serverConn.3.1command_line_arguments.Server.9.8.9, 128

	.type	.Lconst.260,@object
	.section	.rodata..Lconst.260,"a",@progbits
.Lconst.260:
	.asciz	"func(*\tcommand_line_arguments\tsubnet.serverConn, *\tcommand_line_arguments\tsubnet.Server)"
	.size	.Lconst.260, 89

	.type	go..C374,@object
	.section	.rodata.go..C374,"a",@progbits
	.p2align	3
go..C374:
	.quad	.Lconst.260
	.quad	88
	.size	go..C374, 16

	.type	go..C375,@object
	.section	.data.go..C375,"aw",@progbits
	.p2align	3
go..C375:
	.quad	type...1command_line_arguments.serverConn
	.quad	type...1command_line_arguments.Server
	.size	go..C375, 16

	.type	go..C376,@object
	.section	.bss.go..C376,"aw",@nobits
	.p2align	3
go..C376:
	.zero	8
	.size	go..C376, 8

	.type	.Lconst.261,@object
	.section	.rodata..Lconst.261,"a",@progbits
.Lconst.261:
	.asciz	"queueIP"
	.size	.Lconst.261, 8

	.type	go..C377,@object
	.section	.rodata.go..C377,"a",@progbits
	.p2align	3
go..C377:
	.quad	.Lconst.261
	.quad	7
	.size	go..C377, 16

	.type	go..C378,@object
	.section	.rodata.go..C378,"a",@progbits
	.p2align	3
go..C378:
	.quad	.Lconst.2
	.quad	22
	.size	go..C378, 16

	.type	type..func.8.1command_line_arguments.serverConn.3.1command_line_arguments.IPPacket.9.8.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.serverConn.3.1command_line_arguments.IPPacket.9.8.9,"aG",@progbits,type..func.8.1command_line_arguments.serverConn.3.1command_line_arguments.IPPacket.9.8.9,comdat
	.weak	type..func.8.1command_line_arguments.serverConn.3.1command_line_arguments.IPPacket.9.8.9
	.p2align	4
type..func.8.1command_line_arguments.serverConn.3.1command_line_arguments.IPPacket.9.8.9:
	.quad	8
	.quad	8
	.long	3234306408
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C379
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C380
	.quad	2
	.quad	2
	.quad	go..C381
	.quad	0
	.quad	0
	.size	type..func.8.1command_line_arguments.serverConn.3.1command_line_arguments.IPPacket.9.8.9, 128

	.type	.Lconst.262,@object
	.section	.rodata..Lconst.262,"a",@progbits
.Lconst.262:
	.asciz	"func(*\tcommand_line_arguments\tsubnet.serverConn, *\tcommand_line_arguments\tsubnet.IPPacket)"
	.size	.Lconst.262, 91

	.type	go..C379,@object
	.section	.rodata.go..C379,"a",@progbits
	.p2align	3
go..C379:
	.quad	.Lconst.262
	.quad	90
	.size	go..C379, 16

	.type	go..C380,@object
	.section	.data.go..C380,"aw",@progbits
	.p2align	3
go..C380:
	.quad	type...1command_line_arguments.serverConn
	.quad	type...1command_line_arguments.IPPacket
	.size	go..C380, 16

	.type	go..C381,@object
	.section	.bss.go..C381,"aw",@nobits
	.p2align	3
go..C381:
	.zero	8
	.size	go..C381, 8

	.type	.Lconst.263,@object
	.section	.rodata..Lconst.263,"a",@progbits
.Lconst.263:
	.asciz	"readRoutine"
	.size	.Lconst.263, 12

	.type	go..C382,@object
	.section	.rodata.go..C382,"a",@progbits
	.p2align	3
go..C382:
	.quad	.Lconst.263
	.quad	11
	.size	go..C382, 16

	.type	go..C383,@object
	.section	.rodata.go..C383,"a",@progbits
	.p2align	3
go..C383:
	.quad	.Lconst.2
	.quad	22
	.size	go..C383, 16

	.type	type..func.8.1bool.3chan.0.1command_line_arguments.inboundIPPkt.9.8.9,@object
	.section	.rodata.type..func.8.1bool.3chan.0.1command_line_arguments.inboundIPPkt.9.8.9,"aG",@progbits,type..func.8.1bool.3chan.0.1command_line_arguments.inboundIPPkt.9.8.9,comdat
	.weak	type..func.8.1bool.3chan.0.1command_line_arguments.inboundIPPkt.9.8.9
	.p2align	4
type..func.8.1bool.3chan.0.1command_line_arguments.inboundIPPkt.9.8.9:
	.quad	8
	.quad	8
	.long	2851534056
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C384
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C385
	.quad	2
	.quad	2
	.quad	go..C386
	.quad	0
	.quad	0
	.size	type..func.8.1bool.3chan.0.1command_line_arguments.inboundIPPkt.9.8.9, 128

	.type	.Lconst.264,@object
	.section	.rodata..Lconst.264,"a",@progbits
.Lconst.264:
	.asciz	"func(*bool, chan *\tcommand_line_arguments\tsubnet.inboundIPPkt)"
	.size	.Lconst.264, 63

	.type	go..C384,@object
	.section	.rodata.go..C384,"a",@progbits
	.p2align	3
go..C384:
	.quad	.Lconst.264
	.quad	62
	.size	go..C384, 16

	.type	go..C385,@object
	.section	.data.go..C385,"aw",@progbits
	.p2align	3
go..C385:
	.quad	type...1bool
	.quad	type..chan.0.1command_line_arguments.inboundIPPkt
	.size	go..C385, 16

	.type	go..C386,@object
	.section	.bss.go..C386,"aw",@nobits
	.p2align	3
go..C386:
	.zero	8
	.size	go..C386, 8

	.type	type..func.8.1command_line_arguments.serverConn.3.1bool.3chan.0.1command_line_arguments.inboundIPPkt.9.8.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.serverConn.3.1bool.3chan.0.1command_line_arguments.inboundIPPkt.9.8.9,"aG",@progbits,type..func.8.1command_line_arguments.serverConn.3.1bool.3chan.0.1command_line_arguments.inboundIPPkt.9.8.9,comdat
	.weak	type..func.8.1command_line_arguments.serverConn.3.1bool.3chan.0.1command_line_arguments.inboundIPPkt.9.8.9
	.p2align	4
type..func.8.1command_line_arguments.serverConn.3.1bool.3chan.0.1command_line_arguments.inboundIPPkt.9.8.9:
	.quad	8
	.quad	8
	.long	3308946664
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C387
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C388
	.quad	3
	.quad	3
	.quad	go..C389
	.quad	0
	.quad	0
	.size	type..func.8.1command_line_arguments.serverConn.3.1bool.3chan.0.1command_line_arguments.inboundIPPkt.9.8.9, 128

	.type	.Lconst.265,@object
	.section	.rodata..Lconst.265,"a",@progbits
.Lconst.265:
	.asciz	"func(*\tcommand_line_arguments\tsubnet.serverConn, *bool, chan *\tcommand_line_arguments\tsubnet.inboundIPPkt)"
	.size	.Lconst.265, 107

	.type	go..C387,@object
	.section	.rodata.go..C387,"a",@progbits
	.p2align	3
go..C387:
	.quad	.Lconst.265
	.quad	106
	.size	go..C387, 16

	.type	go..C388,@object
	.section	.data.go..C388,"aw",@progbits
	.p2align	4
go..C388:
	.quad	type...1command_line_arguments.serverConn
	.quad	type...1bool
	.quad	type..chan.0.1command_line_arguments.inboundIPPkt
	.size	go..C388, 24

	.type	go..C389,@object
	.section	.bss.go..C389,"aw",@nobits
	.p2align	3
go..C389:
	.zero	8
	.size	go..C389, 8

	.type	.Lconst.266,@object
	.section	.rodata..Lconst.266,"a",@progbits
.Lconst.266:
	.asciz	"remoteAddressStr"
	.size	.Lconst.266, 17

	.type	go..C390,@object
	.section	.rodata.go..C390,"a",@progbits
	.p2align	3
go..C390:
	.quad	.Lconst.266
	.quad	16
	.size	go..C390, 16

	.type	go..C391,@object
	.section	.rodata.go..C391,"a",@progbits
	.p2align	3
go..C391:
	.quad	.Lconst.2
	.quad	22
	.size	go..C391, 16

	.type	type..func.8.1command_line_arguments.serverConn.9.8string.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.serverConn.9.8string.9,"aG",@progbits,type..func.8.1command_line_arguments.serverConn.9.8string.9,comdat
	.weak	type..func.8.1command_line_arguments.serverConn.9.8string.9
	.p2align	4
type..func.8.1command_line_arguments.serverConn.9.8string.9:
	.quad	8
	.quad	8
	.long	2816885160
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C392
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C393
	.quad	1
	.quad	1
	.quad	go..C394
	.quad	1
	.quad	1
	.size	type..func.8.1command_line_arguments.serverConn.9.8string.9, 128

	.type	.Lconst.267,@object
	.section	.rodata..Lconst.267,"a",@progbits
.Lconst.267:
	.asciz	"func(*\tcommand_line_arguments\tsubnet.serverConn) string"
	.size	.Lconst.267, 56

	.type	go..C392,@object
	.section	.rodata.go..C392,"a",@progbits
	.p2align	3
go..C392:
	.quad	.Lconst.267
	.quad	55
	.size	go..C392, 16

	.type	go..C393,@object
	.section	.data.go..C393,"aw",@progbits
	.p2align	3
go..C393:
	.quad	type...1command_line_arguments.serverConn
	.size	go..C393, 8

	.type	go..C394,@object
	.section	.data.go..C394,"aw",@progbits
	.p2align	3
go..C394:
	.quad	string..d
	.size	go..C394, 8

	.type	.Lconst.268,@object
	.section	.rodata..Lconst.268,"a",@progbits
.Lconst.268:
	.asciz	"writeRoutine"
	.size	.Lconst.268, 13

	.type	go..C395,@object
	.section	.rodata.go..C395,"a",@progbits
	.p2align	3
go..C395:
	.quad	.Lconst.268
	.quad	12
	.size	go..C395, 16

	.type	go..C396,@object
	.section	.rodata.go..C396,"a",@progbits
	.p2align	3
go..C396:
	.quad	.Lconst.2
	.quad	22
	.size	go..C396, 16

	.type	type..func.8.1bool.9.8.9,@object
	.section	.rodata.type..func.8.1bool.9.8.9,"aG",@progbits,type..func.8.1bool.9.8.9,comdat
	.weak	type..func.8.1bool.9.8.9
	.p2align	4
type..func.8.1bool.9.8.9:
	.quad	8
	.quad	8
	.long	1400054568
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C397
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C398
	.quad	1
	.quad	1
	.quad	go..C399
	.quad	0
	.quad	0
	.size	type..func.8.1bool.9.8.9, 128

	.type	.Lconst.269,@object
	.section	.rodata..Lconst.269,"a",@progbits
.Lconst.269:
	.asciz	"func(*bool)"
	.size	.Lconst.269, 12

	.type	go..C397,@object
	.section	.rodata.go..C397,"a",@progbits
	.p2align	3
go..C397:
	.quad	.Lconst.269
	.quad	11
	.size	go..C397, 16

	.type	go..C398,@object
	.section	.data.go..C398,"aw",@progbits
	.p2align	3
go..C398:
	.quad	type...1bool
	.size	go..C398, 8

	.type	go..C399,@object
	.section	.bss.go..C399,"aw",@nobits
	.p2align	3
go..C399:
	.zero	8
	.size	go..C399, 8

	.type	type..func.8.1command_line_arguments.serverConn.3.1bool.9.8.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.serverConn.3.1bool.9.8.9,"aG",@progbits,type..func.8.1command_line_arguments.serverConn.3.1bool.9.8.9,comdat
	.weak	type..func.8.1command_line_arguments.serverConn.3.1bool.9.8.9
	.p2align	4
type..func.8.1command_line_arguments.serverConn.3.1bool.9.8.9:
	.quad	8
	.quad	8
	.long	405987688
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C400
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C401
	.quad	2
	.quad	2
	.quad	go..C402
	.quad	0
	.quad	0
	.size	type..func.8.1command_line_arguments.serverConn.3.1bool.9.8.9, 128

	.type	.Lconst.270,@object
	.section	.rodata..Lconst.270,"a",@progbits
.Lconst.270:
	.asciz	"func(*\tcommand_line_arguments\tsubnet.serverConn, *bool)"
	.size	.Lconst.270, 56

	.type	go..C400,@object
	.section	.rodata.go..C400,"a",@progbits
	.p2align	3
go..C400:
	.quad	.Lconst.270
	.quad	55
	.size	go..C400, 16

	.type	go..C401,@object
	.section	.data.go..C401,"aw",@progbits
	.p2align	3
go..C401:
	.quad	type...1command_line_arguments.serverConn
	.quad	type...1bool
	.size	go..C401, 16

	.type	go..C402,@object
	.section	.bss.go..C402,"aw",@nobits
	.p2align	3
go..C402:
	.zero	8
	.size	go..C402, 8

	.type	go..C403,@object
	.section	.data.go..C403,"aw",@progbits
	.p2align	4
go..C403:
	.quad	go..C205
	.quad	go..C206
	.quad	type..func.8bool.9.8.9
	.quad	type..func.8.1command_line_arguments.serverConn.3bool.9.8.9
	.quad	command_line_arguments.serverConn.hadError
	.quad	go..C213
	.quad	go..C214
	.quad	type..func.8.1command_line_arguments.Server.9.8.9
	.quad	type..func.8.1command_line_arguments.serverConn.3.1command_line_arguments.Server.9.8.9
	.quad	command_line_arguments.serverConn.initClient
	.quad	go..C377
	.quad	go..C378
	.quad	type..func.8.1command_line_arguments.IPPacket.9.8.9
	.quad	type..func.8.1command_line_arguments.serverConn.3.1command_line_arguments.IPPacket.9.8.9
	.quad	command_line_arguments.serverConn.queueIP
	.quad	go..C382
	.quad	go..C383
	.quad	type..func.8.1bool.3chan.0.1command_line_arguments.inboundIPPkt.9.8.9
	.quad	type..func.8.1command_line_arguments.serverConn.3.1bool.3chan.0.1command_line_arguments.inboundIPPkt.9.8.9
	.quad	command_line_arguments.serverConn.readRoutine
	.quad	go..C390
	.quad	go..C391
	.quad	type..func.8.9.8string.9
	.quad	type..func.8.1command_line_arguments.serverConn.9.8string.9
	.quad	command_line_arguments.serverConn.remoteAddressStr
	.quad	go..C395
	.quad	go..C396
	.quad	type..func.8.1bool.9.8.9
	.quad	type..func.8.1command_line_arguments.serverConn.3.1bool.9.8.9
	.quad	command_line_arguments.serverConn.writeRoutine
	.size	go..C403, 240

	.type	go..C404,@object
	.section	.rodata.go..C404,"a",@progbits
	.p2align	4
go..C404:
	.quad	0
	.quad	0
	.quad	go..C403
	.quad	6
	.quad	6
	.size	go..C404, 40

	.type	type...1.1command_line_arguments.serverConn,@object
	.section	.rodata.type...1.1command_line_arguments.serverConn,"aG",@progbits,type...1.1command_line_arguments.serverConn,comdat
	.weak	type...1.1command_line_arguments.serverConn
	.p2align	4
type...1.1command_line_arguments.serverConn:
	.quad	8
	.quad	8
	.long	950422937
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C405
	.quad	0
	.quad	0
	.quad	type...1command_line_arguments.serverConn
	.size	type...1.1command_line_arguments.serverConn, 80

	.type	.Lconst.271,@object
	.section	.rodata..Lconst.271,"a",@progbits
.Lconst.271:
	.asciz	"**\tcommand_line_arguments\tsubnet.serverConn"
	.size	.Lconst.271, 44

	.type	go..C405,@object
	.section	.rodata.go..C405,"a",@progbits
	.p2align	3
go..C405:
	.quad	.Lconst.271
	.quad	43
	.size	go..C405, 16

	.type	.Lconst.272,@object
	.section	.rodata..Lconst.272,"a",@progbits
.Lconst.272:
	.asciz	"conn"
	.size	.Lconst.272, 5

	.type	go..C406,@object
	.section	.rodata.go..C406,"a",@progbits
	.p2align	3
go..C406:
	.quad	.Lconst.272
	.quad	4
	.size	go..C406, 16

	.type	go..C407,@object
	.section	.rodata.go..C407,"a",@progbits
	.p2align	3
go..C407:
	.quad	.Lconst.2
	.quad	22
	.size	go..C407, 16

	.type	.Lconst.273,@object
	.section	.rodata..Lconst.273,"a",@progbits
.Lconst.273:
	.asciz	"id"
	.size	.Lconst.273, 3

	.type	go..C408,@object
	.section	.rodata.go..C408,"a",@progbits
	.p2align	3
go..C408:
	.quad	.Lconst.273
	.quad	2
	.size	go..C408, 16

	.type	go..C409,@object
	.section	.rodata.go..C409,"a",@progbits
	.p2align	3
go..C409:
	.quad	.Lconst.2
	.quad	22
	.size	go..C409, 16

	.type	.Lconst.274,@object
	.section	.rodata..Lconst.274,"a",@progbits
.Lconst.274:
	.asciz	"outboundIPPkts"
	.size	.Lconst.274, 15

	.type	go..C410,@object
	.section	.rodata.go..C410,"a",@progbits
	.p2align	3
go..C410:
	.quad	.Lconst.274
	.quad	14
	.size	go..C410, 16

	.type	go..C411,@object
	.section	.rodata.go..C411,"a",@progbits
	.p2align	3
go..C411:
	.quad	.Lconst.2
	.quad	22
	.size	go..C411, 16

	.type	.Lconst.275,@object
	.section	.rodata..Lconst.275,"a",@progbits
.Lconst.275:
	.asciz	"server"
	.size	.Lconst.275, 7

	.type	go..C412,@object
	.section	.rodata.go..C412,"a",@progbits
	.p2align	3
go..C412:
	.quad	.Lconst.275
	.quad	6
	.size	go..C412, 16

	.type	go..C413,@object
	.section	.rodata.go..C413,"a",@progbits
	.p2align	3
go..C413:
	.quad	.Lconst.2
	.quad	22
	.size	go..C413, 16

	.type	.Lconst.276,@object
	.section	.rodata..Lconst.276,"a",@progbits
.Lconst.276:
	.asciz	"canSendIP"
	.size	.Lconst.276, 10

	.type	go..C414,@object
	.section	.rodata.go..C414,"a",@progbits
	.p2align	3
go..C414:
	.quad	.Lconst.276
	.quad	9
	.size	go..C414, 16

	.type	go..C415,@object
	.section	.rodata.go..C415,"a",@progbits
	.p2align	3
go..C415:
	.quad	.Lconst.2
	.quad	22
	.size	go..C415, 16

	.type	.Lconst.277,@object
	.section	.rodata..Lconst.277,"a",@progbits
.Lconst.277:
	.asciz	"remoteAddrs"
	.size	.Lconst.277, 12

	.type	go..C416,@object
	.section	.rodata.go..C416,"a",@progbits
	.p2align	3
go..C416:
	.quad	.Lconst.277
	.quad	11
	.size	go..C416, 16

	.type	go..C417,@object
	.section	.rodata.go..C417,"a",@progbits
	.p2align	3
go..C417:
	.quad	.Lconst.2
	.quad	22
	.size	go..C417, 16

	.type	go..C418,@object
	.section	.rodata.go..C418,"a",@progbits
	.p2align	3
go..C418:
	.quad	.Lconst.55
	.quad	12
	.size	go..C418, 16

	.type	go..C419,@object
	.section	.rodata.go..C419,"a",@progbits
	.p2align	3
go..C419:
	.quad	.Lconst.2
	.quad	22
	.size	go..C419, 16

	.type	go..C420,@object
	.section	.data.go..C420,"aw",@progbits
	.p2align	4
go..C420:
	.quad	go..C406
	.quad	go..C407
	.quad	net.Conn..d
	.quad	0
	.quad	0
	.quad	go..C408
	.quad	go..C409
	.quad	int..d
	.quad	0
	.quad	32
	.quad	go..C410
	.quad	go..C411
	.quad	type..chan.0.1command_line_arguments.IPPacket
	.quad	0
	.quad	48
	.quad	go..C412
	.quad	go..C413
	.quad	type...1command_line_arguments.Server
	.quad	0
	.quad	64
	.quad	go..C414
	.quad	go..C415
	.quad	bool..d
	.quad	0
	.quad	80
	.quad	go..C416
	.quad	go..C417
	.quad	type...6.7net.IP
	.quad	0
	.quad	96
	.quad	go..C418
	.quad	go..C419
	.quad	bool..d
	.quad	0
	.quad	144
	.size	go..C420, 280

	.type	.Lconst.278,@object
	.section	.rodata..Lconst.278,"a",@progbits
.Lconst.278:
	.asciz	"New connection from %s (%d)\n"
	.size	.Lconst.278, 29

	.type	type..struct.4.4x.5a0.0.1command_line_arguments.serverConn.2a1.0.1bool.2a2.0chan.0.1command_line_arguments.inboundIPPkt.5,@object
	.section	.rodata.type..struct.4.4x.5a0.0.1command_line_arguments.serverConn.2a1.0.1bool.2a2.0chan.0.1command_line_arguments.inboundIPPkt.5,"aG",@progbits,type..struct.4.4x.5a0.0.1command_line_arguments.serverConn.2a1.0.1bool.2a2.0chan.0.1command_line_arguments.inboundIPPkt.5,comdat
	.weak	type..struct.4.4x.5a0.0.1command_line_arguments.serverConn.2a1.0.1bool.2a2.0chan.0.1command_line_arguments.inboundIPPkt.5
	.p2align	4
type..struct.4.4x.5a0.0.1command_line_arguments.serverConn.2a1.0.1bool.2a2.0chan.0.1command_line_arguments.inboundIPPkt.5:
	.quad	24
	.quad	24
	.long	2245437172
	.byte	25
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ha
	.quad	go..C421
	.quad	0
	.quad	0
	.quad	go..C425
	.quad	3
	.quad	3
	.size	type..struct.4.4x.5a0.0.1command_line_arguments.serverConn.2a1.0.1bool.2a2.0chan.0.1command_line_arguments.inboundIPPkt.5, 96

	.type	gcbits..ha,@object
	.section	.rodata.gcbits..ha,"aG",@progbits,gcbits..ha,comdat
	.weak	gcbits..ha
gcbits..ha:
	.byte	7
	.size	gcbits..ha, 1

	.type	.Lconst.280,@object
	.section	.rodata..Lconst.280,"a",@progbits
.Lconst.280:
	.asciz	"struct { a0 *\tcommand_line_arguments\tsubnet.serverConn; a1 *bool; a2 chan *\tcommand_line_arguments\tsubnet.inboundIPPkt }"
	.size	.Lconst.280, 121

	.type	go..C421,@object
	.section	.rodata.go..C421,"a",@progbits
	.p2align	3
go..C421:
	.quad	.Lconst.280
	.quad	120
	.size	go..C421, 16

	.type	go..C422,@object
	.section	.rodata.go..C422,"a",@progbits
	.p2align	3
go..C422:
	.quad	.Lconst.113
	.quad	2
	.size	go..C422, 16

	.type	go..C423,@object
	.section	.rodata.go..C423,"a",@progbits
	.p2align	3
go..C423:
	.quad	.Lconst.115
	.quad	2
	.size	go..C423, 16

	.type	go..C424,@object
	.section	.rodata.go..C424,"a",@progbits
	.p2align	3
go..C424:
	.quad	.Lconst.116
	.quad	2
	.size	go..C424, 16

	.type	go..C425,@object
	.section	.data.go..C425,"aw",@progbits
	.p2align	4
go..C425:
	.quad	go..C422
	.quad	0
	.quad	type...1command_line_arguments.serverConn
	.quad	0
	.quad	0
	.quad	go..C423
	.quad	0
	.quad	type...1bool
	.quad	0
	.quad	16
	.quad	go..C424
	.quad	0
	.quad	type..chan.0.1command_line_arguments.inboundIPPkt
	.quad	0
	.quad	32
	.size	go..C425, 120

	.type	type..struct.4.4x.5a0.0.1command_line_arguments.serverConn.2a1.0.1bool.5,@object
	.section	.rodata.type..struct.4.4x.5a0.0.1command_line_arguments.serverConn.2a1.0.1bool.5,"aG",@progbits,type..struct.4.4x.5a0.0.1command_line_arguments.serverConn.2a1.0.1bool.5,comdat
	.weak	type..struct.4.4x.5a0.0.1command_line_arguments.serverConn.2a1.0.1bool.5
	.p2align	4
type..struct.4.4x.5a0.0.1command_line_arguments.serverConn.2a1.0.1bool.5:
	.quad	16
	.quad	16
	.long	226694756
	.byte	25
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..da
	.quad	go..C426
	.quad	0
	.quad	0
	.quad	go..C429
	.quad	2
	.quad	2
	.size	type..struct.4.4x.5a0.0.1command_line_arguments.serverConn.2a1.0.1bool.5, 96

	.type	.Lconst.281,@object
	.section	.rodata..Lconst.281,"a",@progbits
.Lconst.281:
	.asciz	"struct { a0 *\tcommand_line_arguments\tsubnet.serverConn; a1 *bool }"
	.size	.Lconst.281, 67

	.type	go..C426,@object
	.section	.rodata.go..C426,"a",@progbits
	.p2align	3
go..C426:
	.quad	.Lconst.281
	.quad	66
	.size	go..C426, 16

	.type	go..C427,@object
	.section	.rodata.go..C427,"a",@progbits
	.p2align	3
go..C427:
	.quad	.Lconst.113
	.quad	2
	.size	go..C427, 16

	.type	go..C428,@object
	.section	.rodata.go..C428,"a",@progbits
	.p2align	3
go..C428:
	.quad	.Lconst.115
	.quad	2
	.size	go..C428, 16

	.type	go..C429,@object
	.section	.data.go..C429,"aw",@progbits
	.p2align	4
go..C429:
	.quad	go..C427
	.quad	0
	.quad	type...1command_line_arguments.serverConn
	.quad	0
	.quad	0
	.quad	go..C428
	.quad	0
	.quad	type...1bool
	.quad	0
	.quad	16
	.size	go..C429, 80

	.type	.Lconst.283,@object
	.section	.rodata..Lconst.283,"a",@progbits
.Lconst.283:
	.asciz	"Write error for %s: %s\n"
	.size	.Lconst.283, 24

	.type	.Lconst.285,@object
	.section	.rodata..Lconst.285,"a",@progbits
.Lconst.285:
	.asciz	"Client read error: %s\n"
	.size	.Lconst.285, 23

	.type	.Lconst.287,@object
	.section	.rodata..Lconst.287,"a",@progbits
.Lconst.287:
	.asciz	"Could not decode net.IP: %s"
	.size	.Lconst.287, 28

	.type	.Lconst.289,@object
	.section	.rodata..Lconst.289,"a",@progbits
.Lconst.289:
	.asciz	"Warning: Dropping packets for %s as outbound msg queue is full.\n"
	.size	.Lconst.289, 65

	.type	command_line_arguments.NewServer..f,@object
	.section	.rodata.command_line_arguments.NewServer..f,"a",@progbits
	.globl	command_line_arguments.NewServer..f
	.p2align	3
command_line_arguments.NewServer..f:
	.quad	command_line_arguments.NewServer
	.size	command_line_arguments.NewServer..f, 8

	.type	.Lconst.293,@object
	.section	.rodata..Lconst.293,"a",@progbits
.Lconst.293:
	.asciz	"Listen for TLS on %s, IP %s set to %s, localNetMask %s\n"
	.size	.Lconst.293, 56

	.type	type..struct.4.4x.5a0.0.1command_line_arguments.Server.5,@object
	.section	.rodata.type..struct.4.4x.5a0.0.1command_line_arguments.Server.5,"aG",@progbits,type..struct.4.4x.5a0.0.1command_line_arguments.Server.5,comdat
	.weak	type..struct.4.4x.5a0.0.1command_line_arguments.Server.5
	.p2align	4
type..struct.4.4x.5a0.0.1command_line_arguments.Server.5:
	.quad	8
	.quad	8
	.long	2429123284
	.byte	25
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C430
	.quad	0
	.quad	0
	.quad	go..C432
	.quad	1
	.quad	1
	.size	type..struct.4.4x.5a0.0.1command_line_arguments.Server.5, 96

	.type	.Lconst.295,@object
	.section	.rodata..Lconst.295,"a",@progbits
.Lconst.295:
	.asciz	"struct { a0 *\tcommand_line_arguments\tsubnet.Server }"
	.size	.Lconst.295, 53

	.type	go..C430,@object
	.section	.rodata.go..C430,"a",@progbits
	.p2align	3
go..C430:
	.quad	.Lconst.295
	.quad	52
	.size	go..C430, 16

	.type	go..C431,@object
	.section	.rodata.go..C431,"a",@progbits
	.p2align	3
go..C431:
	.quad	.Lconst.113
	.quad	2
	.size	go..C431, 16

	.type	go..C432,@object
	.section	.data.go..C432,"aw",@progbits
	.p2align	4
go..C432:
	.quad	go..C431
	.quad	0
	.quad	type...1command_line_arguments.Server
	.quad	0
	.quad	0
	.size	go..C432, 40

	.type	.Lconst.297,@object
	.section	.rodata..Lconst.297,"a",@progbits
.Lconst.297:
	.asciz	"Listener err: %s\n"
	.size	.Lconst.297, 18

	.type	.Lconst.302,@object
	.section	.rodata..Lconst.302,"a",@progbits
.Lconst.302:
	.asciz	"WARN: Attempted to route packet to clientID %d, which does not exist. Dropping.\n"
	.size	.Lconst.302, 81

	.type	.Lconst.304,@object
	.section	.rodata..Lconst.304,"a",@progbits
.Lconst.304:
	.asciz	"%s read err: %s\n"
	.size	.Lconst.304, 17

	.type	.Lconst.306,@object
	.section	.rodata..Lconst.306,"a",@progbits
.Lconst.306:
	.asciz	"Write to %s failed: %s\n"
	.size	.Lconst.306, 24

	.type	.Lconst.308,@object
	.section	.rodata..Lconst.308,"a",@progbits
.Lconst.308:
	.asciz	"WARN: Write to %s has mismatched len: %d != %d\n"
	.size	.Lconst.308, 48

	.type	.Lconst.311,@object
	.section	.rodata..Lconst.311,"a",@progbits
.Lconst.311:
	.asciz	"Could not resolve "
	.size	.Lconst.311, 19

	.type	.Lconst.312,@object
	.section	.rodata..Lconst.312,"a",@progbits
	.p2align	3
.Lconst.312:
	.quad	.Lconst.311
	.quad	18
	.size	.Lconst.312, 16

	.type	.Lconst.313,@object
	.section	.rodata..Lconst.313,"a",@progbits
.Lconst.313:
	.asciz	"exec "
	.size	.Lconst.313, 6

	.type	.Lconst.314,@object
	.section	.rodata..Lconst.314,"a",@progbits
	.p2align	3
.Lconst.314:
	.quad	.Lconst.313
	.quad	5
	.size	.Lconst.314, 16

	.type	.Lconst.315,@object
	.section	.rodata..Lconst.315,"a",@progbits
.Lconst.315:
	.asciz	": "
	.size	.Lconst.315, 3

	.type	.Lconst.316,@object
	.section	.rodata..Lconst.316,"a",@progbits
	.p2align	3
.Lconst.316:
	.quad	.Lconst.315
	.quad	2
	.size	.Lconst.316, 16

	.type	.Lconst.317,@object
	.section	.rodata..Lconst.317,"a",@progbits
.Lconst.317:
	.asciz	"Command failed: "
	.size	.Lconst.317, 17

	.type	.Lconst.318,@object
	.section	.rodata..Lconst.318,"a",@progbits
	.p2align	3
.Lconst.318:
	.quad	.Lconst.317
	.quad	16
	.size	.Lconst.318, 16

	.type	command_line_arguments.struct.4Size.0uint32.2Mallocs.0uint64.2Frees.0uint64.5..hash..f,@object
	.section	.rodata.command_line_arguments.struct.4Size.0uint32.2Mallocs.0uint64.2Frees.0uint64.5..hash..f,"a",@progbits
	.globl	command_line_arguments.struct.4Size.0uint32.2Mallocs.0uint64.2Frees.0uint64.5..hash..f
	.p2align	3
command_line_arguments.struct.4Size.0uint32.2Mallocs.0uint64.2Frees.0uint64.5..hash..f:
	.quad	command_line_arguments.struct.4Size.0uint32.2Mallocs.0uint64.2Frees.0uint64.5..hash
	.size	command_line_arguments.struct.4Size.0uint32.2Mallocs.0uint64.2Frees.0uint64.5..hash..f, 8

	.type	command_line_arguments.struct.4Size.0uint32.2Mallocs.0uint64.2Frees.0uint64.5..eq..f,@object
	.section	.rodata.command_line_arguments.struct.4Size.0uint32.2Mallocs.0uint64.2Frees.0uint64.5..eq..f,"a",@progbits
	.globl	command_line_arguments.struct.4Size.0uint32.2Mallocs.0uint64.2Frees.0uint64.5..eq..f
	.p2align	3
command_line_arguments.struct.4Size.0uint32.2Mallocs.0uint64.2Frees.0uint64.5..eq..f:
	.quad	command_line_arguments.struct.4Size.0uint32.2Mallocs.0uint64.2Frees.0uint64.5..eq
	.size	command_line_arguments.struct.4Size.0uint32.2Mallocs.0uint64.2Frees.0uint64.5..eq..f, 8

	.type	gcbits..GGGGGGGa,@object
	.section	.rodata.gcbits..GGGGGGGa,"aG",@progbits,gcbits..GGGGGGGa,comdat
	.weak	gcbits..GGGGGGGa
gcbits..GGGGGGGa:
	.ascii	"\377\377\377\377\007"
	.size	gcbits..GGGGGGGa, 5

	.type	gcbits..pppa,@object
	.section	.rodata.gcbits..pppa,"aG",@progbits,gcbits..pppa,comdat
	.weak	gcbits..pppa
gcbits..pppa:
	.ascii	"\357="
	.size	gcbits..pppa, 2

	.type	gcbits..GGGa,@object
	.section	.rodata.gcbits..GGGa,"aG",@progbits,gcbits..GGGa,comdat
	.weak	gcbits..GGGa
gcbits..GGGa:
	.ascii	"\377\177"
	.size	gcbits..GGGa, 2

	.type	gcbits..ppppa,@object
	.section	.rodata.gcbits..ppppa,"aG",@progbits,gcbits..ppppa,comdat
	.weak	gcbits..ppppa
gcbits..ppppa:
	.ascii	"\357\275\007"
	.size	gcbits..ppppa, 3

	.type	gcbits..pppppppppppppppppppa,@object
	.section	.rodata.gcbits..pppppppppppppppppppa,"aG",@progbits,gcbits..pppppppppppppppppppa,comdat
	.weak	gcbits..pppppppppppppppppppa
gcbits..pppppppppppppppppppa:
	.ascii	"\357\275\367\336{\357\275\367\336{\357="
	.size	gcbits..pppppppppppppppppppa, 12

	.type	gcbits..ppaa,@object
	.section	.rodata.gcbits..ppaa,"aG",@progbits,gcbits..ppaa,comdat
	.weak	gcbits..ppaa
gcbits..ppaa:
	.ascii	"\357\001"
	.size	gcbits..ppaa, 2

	.type	gcbits..GGGGGGGGGGaa,@object
	.section	.rodata.gcbits..GGGGGGGGGGaa,"aG",@progbits,gcbits..GGGGGGGGGGaa,comdat
	.weak	gcbits..GGGGGGGGGGaa
gcbits..GGGGGGGGGGaa:
	.ascii	"\377\377\377\377\377\377\003"
	.size	gcbits..GGGGGGGGGGaa, 7

	.type	gcbits..pppppppppa,@object
	.section	.rodata.gcbits..pppppppppa,"aG",@progbits,gcbits..pppppppppa,comdat
	.weak	gcbits..pppppppppa
gcbits..pppppppppa:
	.ascii	"\357\275\367\336{\017"
	.size	gcbits..pppppppppa, 6

	.type	gcbits..pppppppppppppppa,@object
	.section	.rodata.gcbits..pppppppppppppppa,"aG",@progbits,gcbits..pppppppppppppppa,comdat
	.weak	gcbits..pppppppppppppppa
gcbits..pppppppppppppppa:
	.ascii	"\357\275\367\336{\357\275\367\336\003"
	.size	gcbits..pppppppppppppppa, 10

	.type	gcbits..GGGGGGa,@object
	.section	.rodata.gcbits..GGGGGGa,"aG",@progbits,gcbits..GGGGGGa,comdat
	.weak	gcbits..GGGGGGa
gcbits..GGGGGGa:
	.ascii	"\377\377\377?"
	.size	gcbits..GGGGGGa, 4

	.type	gcbits..pppppppa,@object
	.section	.rodata.gcbits..pppppppa,"aG",@progbits,gcbits..pppppppa,comdat
	.weak	gcbits..pppppppa
gcbits..pppppppa:
	.ascii	"\357\275\367\336\003"
	.size	gcbits..pppppppa, 5

	.type	go..C0,@object
	.section	.data.go..C0,"aw",@progbits
	.p2align	4
go..C0:
	.quad	0
	.quad	66
	.quad	go..C23
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C24
	.quad	24
	.quad	24
	.quad	gcbits..ha
	.quad	go..C25
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C27
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C28
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C34
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C41
	.quad	16
	.quad	16
	.quad	gcbits..da
	.quad	go..C42
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C44
	.quad	24
	.quad	24
	.quad	gcbits..ha
	.quad	go..C45
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C53
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C54
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C56
	.quad	16
	.quad	16
	.quad	gcbits..da
	.quad	go..C57
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C58
	.quad	280
	.quad	280
	.quad	gcbits..GGGGGGGa
	.quad	go..C105
	.quad	120
	.quad	112
	.quad	gcbits..pppa
	.quad	go..C130
	.quad	24
	.quad	24
	.quad	gcbits..ha
	.quad	go..C133
	.quad	32
	.quad	32
	.quad	gcbits..pa
	.quad	go..C137
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C141
	.quad	16
	.quad	16
	.quad	gcbits..da
	.quad	go..C144
	.quad	24
	.quad	24
	.quad	gcbits..ha
	.quad	go..C146
	.quad	120
	.quad	120
	.quad	gcbits..GGGa
	.quad	go..C163
	.quad	120
	.quad	112
	.quad	gcbits..pppa
	.quad	go..C170
	.quad	160
	.quad	152
	.quad	gcbits..ppppa
	.quad	go..C171
	.quad	760
	.quad	752
	.quad	gcbits..pppppppppppppppppppa
	.quad	go..C174
	.quad	40
	.quad	32
	.quad	gcbits..pa
	.quad	go..C180
	.quad	160
	.quad	152
	.quad	gcbits..ppppa
	.quad	go..C196
	.quad	80
	.quad	72
	.quad	gcbits..ppaa
	.quad	go..C208
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C211
	.quad	16
	.quad	16
	.quad	gcbits..da
	.quad	go..C219
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C220
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C223
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C224
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C226
	.quad	16
	.quad	16
	.quad	gcbits..da
	.quad	go..C227
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C236
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C239
	.quad	16
	.quad	16
	.quad	gcbits..da
	.quad	go..C244
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C247
	.quad	16
	.quad	16
	.quad	gcbits..da
	.quad	go..C252
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C255
	.quad	16
	.quad	16
	.quad	gcbits..da
	.quad	go..C260
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C263
	.quad	16
	.quad	16
	.quad	gcbits..da
	.quad	go..C268
	.quad	16
	.quad	16
	.quad	gcbits..da
	.quad	go..C271
	.quad	24
	.quad	24
	.quad	gcbits..ha
	.quad	go..C273
	.quad	400
	.quad	400
	.quad	gcbits..GGGGGGGGGGaa
	.quad	go..C303
	.quad	160
	.quad	152
	.quad	gcbits..ppppa
	.quad	go..C330
	.quad	360
	.quad	352
	.quad	gcbits..pppppppppa
	.quad	go..C341
	.quad	160
	.quad	152
	.quad	gcbits..ppppa
	.quad	go..C353
	.quad	360
	.quad	352
	.quad	gcbits..pppppppppa
	.quad	go..C371
	.quad	600
	.quad	592
	.quad	gcbits..pppppppppppppppa
	.quad	go..C372
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C375
	.quad	16
	.quad	16
	.quad	gcbits..da
	.quad	go..C380
	.quad	16
	.quad	16
	.quad	gcbits..da
	.quad	go..C385
	.quad	16
	.quad	16
	.quad	gcbits..da
	.quad	go..C388
	.quad	24
	.quad	24
	.quad	gcbits..ha
	.quad	go..C393
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C394
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C398
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C401
	.quad	16
	.quad	16
	.quad	gcbits..da
	.quad	go..C403
	.quad	240
	.quad	240
	.quad	gcbits..GGGGGGa
	.quad	go..C420
	.quad	280
	.quad	272
	.quad	gcbits..pppppppa
	.quad	go..C425
	.quad	120
	.quad	112
	.quad	gcbits..pppa
	.quad	go..C429
	.quad	80
	.quad	72
	.quad	gcbits..ppaa
	.quad	go..C432
	.quad	40
	.quad	32
	.quad	gcbits..pa
	.size	go..C0, 2128

	.file	10 "./dev_packet.go"
	.section	.debug_str,"MS",@progbits,1
.Linfo_string0:
	.asciz	"llvm-goc"
.Linfo_string1:
	.asciz	"./client.go"
.Linfo_string2:
	.asciz	"/home/wangcong/go_path/src/github.com/twitchyliquid64/subnet/subnet"
.Linfo_string3:
	.asciz	"runtime.writeBarrier"
.Linfo_string4:
	.asciz	"uint32"
.Linfo_string5:
	.asciz	"subnet.dropSendBuffer"
.Linfo_string6:
	.asciz	"void"
.Linfo_string7:
	.asciz	"buffer"
.Linfo_string8:
	.asciz	"__go_channel"
.Linfo_string9:
	.asciz	"subnet.hostToIP"
.Linfo_string10:
	.asciz	"UNNAMED"
.Linfo_string11:
	.asciz	"__values"
.Linfo_string12:
	.asciz	"uint8"
.Linfo_string13:
	.asciz	"__count"
.Linfo_string14:
	.asciz	"int"
.Linfo_string15:
	.asciz	"__capacity"
.Linfo_string16:
	.asciz	"IP"
.Linfo_string17:
	.asciz	"__methods"
.Linfo_string18:
	.asciz	"__type_descriptor"
.Linfo_string19:
	.asciz	"size"
.Linfo_string20:
	.asciz	"uintptr"
.Linfo_string21:
	.asciz	"ptrdata"
.Linfo_string22:
	.asciz	"hash"
.Linfo_string23:
	.asciz	"kind"
.Linfo_string24:
	.asciz	"align"
.Linfo_string25:
	.asciz	"fieldAlign"
.Linfo_string26:
	.asciz	"hashfn"
.Linfo_string27:
	.asciz	"code"
.Linfo_string28:
	.asciz	"__go_descriptor"
.Linfo_string29:
	.asciz	"equalfn"
.Linfo_string30:
	.asciz	"bool"
.Linfo_string31:
	.asciz	"gcdata"
.Linfo_string32:
	.asciz	"string"
.Linfo_string33:
	.asciz	"__data"
.Linfo_string34:
	.asciz	"__length"
.Linfo_string35:
	.asciz	"uncommonType"
.Linfo_string36:
	.asciz	"name"
.Linfo_string37:
	.asciz	"pkgPath"
.Linfo_string38:
	.asciz	"methods"
.Linfo_string39:
	.asciz	"mtyp"
.Linfo_string40:
	.asciz	"typ"
.Linfo_string41:
	.asciz	"tfn"
.Linfo_string42:
	.asciz	"method"
.Linfo_string43:
	.asciz	"struct{*method,int,int}"
.Linfo_string44:
	.asciz	"ptrToThis"
.Linfo_string45:
	.asciz	"_type"
.Linfo_string46:
	.asciz	"Error"
.Linfo_string47:
	.asciz	"struct{*_type,*func(*void)string}"
.Linfo_string48:
	.asciz	"__object"
.Linfo_string49:
	.asciz	"error"
.Linfo_string50:
	.asciz	"struct{IP,error}"
.Linfo_string51:
	.asciz	"addr"
.Linfo_string52:
	.asciz	"$ret16"
.Linfo_string53:
	.asciz	"addrs"
.Linfo_string54:
	.asciz	"struct{*IP,int,int}"
.Linfo_string55:
	.asciz	"err"
.Linfo_string56:
	.asciz	"command_line_arguments.Client.Close"
.Linfo_string57:
	.asciz	"subnet.Close..1command_line_arguments.Client"
.Linfo_string58:
	.asciz	"command_line_arguments.Client.Run"
.Linfo_string59:
	.asciz	"subnet.Run..1command_line_arguments.Client"
.Linfo_string60:
	.asciz	"command_line_arguments.Client.connectionProblem"
.Linfo_string61:
	.asciz	"subnet.connectionProblem..1command_line_arguments.Client"
.Linfo_string62:
	.asciz	"command_line_arguments.Client.init"
.Linfo_string63:
	.asciz	"subnet.init..1command_line_arguments.Client"
.Linfo_string64:
	.asciz	"command_line_arguments.Client.netRecvRoutine"
.Linfo_string65:
	.asciz	"subnet.netRecvRoutine..1command_line_arguments.Client"
.Linfo_string66:
	.asciz	"command_line_arguments.Client.netSendRoutine"
.Linfo_string67:
	.asciz	"subnet.netSendRoutine..1command_line_arguments.Client"
.Linfo_string68:
	.asciz	"command_line_arguments.Client.sendLocalAddr"
.Linfo_string69:
	.asciz	"subnet.sendLocalAddr..1command_line_arguments.Client"
.Linfo_string70:
	.asciz	"command_line_arguments.Reverser.AddRouteEntry"
.Linfo_string71:
	.asciz	"subnet.AddRouteEntry..1command_line_arguments.Reverser"
.Linfo_string72:
	.asciz	"command_line_arguments.Reverser.Close"
.Linfo_string73:
	.asciz	"subnet.Close..1command_line_arguments.Reverser"
.Linfo_string74:
	.asciz	"command_line_arguments.Reverser.ResetGatewayOSX"
.Linfo_string75:
	.asciz	"subnet.ResetGatewayOSX..1command_line_arguments.Reverser"
.Linfo_string76:
	.asciz	"command_line_arguments.NewClient"
.Linfo_string77:
	.asciz	"subnet.NewClient"
.Linfo_string78:
	.asciz	"debugMessages"
.Linfo_string79:
	.asciz	"newGateway"
.Linfo_string80:
	.asciz	"serverAddr"
.Linfo_string81:
	.asciz	"port"
.Linfo_string82:
	.asciz	"wg"
.Linfo_string83:
	.asciz	"noCopy"
.Linfo_string84:
	.asciz	".sync.noCopy"
.Linfo_string85:
	.asciz	"state1"
.Linfo_string86:
	.asciz	"__ARRAY_SIZE_TYPE__"
.Linfo_string87:
	.asciz	"sema"
.Linfo_string88:
	.asciz	"WaitGroup"
.Linfo_string89:
	.asciz	"serverIP"
.Linfo_string90:
	.asciz	"localAddr"
.Linfo_string91:
	.asciz	"additionalAddrs"
.Linfo_string92:
	.asciz	"localNetMask"
.Linfo_string93:
	.asciz	"Mask"
.Linfo_string94:
	.asciz	"IPMask"
.Linfo_string95:
	.asciz	"IPNet"
.Linfo_string96:
	.asciz	"isShuttingDown"
.Linfo_string97:
	.asciz	"packetsIn"
.Linfo_string98:
	.asciz	"packetsDevOut"
.Linfo_string99:
	.asciz	"intf"
.Linfo_string100:
	.asciz	"isTAP"
.Linfo_string101:
	.asciz	"ReadWriteCloser"
.Linfo_string102:
	.asciz	"Close"
.Linfo_string103:
	.asciz	"Read"
.Linfo_string104:
	.asciz	"n"
.Linfo_string105:
	.asciz	"struct{int,error}"
.Linfo_string106:
	.asciz	"struct{*uint8,int,int}"
.Linfo_string107:
	.asciz	"Write"
.Linfo_string108:
	.asciz	"struct{*_type,*func(*void)error,*func(*void,struct{*uint8,int,int})struct{int,error},*func(*void,struct{*uint8,int,int})struct{int,error}}"
.Linfo_string109:
	.asciz	"Interface"
.Linfo_string110:
	.asciz	"tlsConf"
.Linfo_string111:
	.asciz	"Rand"
.Linfo_string112:
	.asciz	"struct{*_type,*func(*void,struct{*uint8,int,int})struct{int,error}}"
.Linfo_string113:
	.asciz	"Reader"
.Linfo_string114:
	.asciz	"Time"
.Linfo_string115:
	.asciz	"wall"
.Linfo_string116:
	.asciz	"uint64"
.Linfo_string117:
	.asciz	"ext"
.Linfo_string118:
	.asciz	"int64"
.Linfo_string119:
	.asciz	"loc"
.Linfo_string120:
	.asciz	"zone"
.Linfo_string121:
	.asciz	"offset"
.Linfo_string122:
	.asciz	"isDST"
.Linfo_string123:
	.asciz	".time.zone"
.Linfo_string124:
	.asciz	"struct{*.time.zone,int,int}"
.Linfo_string125:
	.asciz	"tx"
.Linfo_string126:
	.asciz	"when"
.Linfo_string127:
	.asciz	"index"
.Linfo_string128:
	.asciz	"isstd"
.Linfo_string129:
	.asciz	"isutc"
.Linfo_string130:
	.asciz	".time.zoneTrans"
.Linfo_string131:
	.asciz	"struct{*.time.zoneTrans,int,int}"
.Linfo_string132:
	.asciz	"cacheStart"
.Linfo_string133:
	.asciz	"cacheEnd"
.Linfo_string134:
	.asciz	"cacheZone"
.Linfo_string135:
	.asciz	"Location"
.Linfo_string136:
	.asciz	"Certificates"
.Linfo_string137:
	.asciz	"Certificate"
.Linfo_string138:
	.asciz	"struct{*struct{*uint8,int,int},int,int}"
.Linfo_string139:
	.asciz	"PrivateKey"
.Linfo_string140:
	.asciz	"OCSPStaple"
.Linfo_string141:
	.asciz	"SignedCertificateTimestamps"
.Linfo_string142:
	.asciz	"Leaf"
.Linfo_string143:
	.asciz	"Raw"
.Linfo_string144:
	.asciz	"RawTBSCertificate"
.Linfo_string145:
	.asciz	"RawSubjectPublicKeyInfo"
.Linfo_string146:
	.asciz	"RawSubject"
.Linfo_string147:
	.asciz	"RawIssuer"
.Linfo_string148:
	.asciz	"Signature"
.Linfo_string149:
	.asciz	"SignatureAlgorithm"
.Linfo_string150:
	.asciz	"PublicKeyAlgorithm"
.Linfo_string151:
	.asciz	"PublicKey"
.Linfo_string152:
	.asciz	"Version"
.Linfo_string153:
	.asciz	"SerialNumber"
.Linfo_string154:
	.asciz	"neg"
.Linfo_string155:
	.asciz	"abs"
.Linfo_string156:
	.asciz	"Word"
.Linfo_string157:
	.asciz	".math/big.nat"
.Linfo_string158:
	.asciz	"Int"
.Linfo_string159:
	.asciz	"Issuer"
.Linfo_string160:
	.asciz	"Country"
.Linfo_string161:
	.asciz	"struct{*string,int,int}"
.Linfo_string162:
	.asciz	"Organization"
.Linfo_string163:
	.asciz	"OrganizationalUnit"
.Linfo_string164:
	.asciz	"Locality"
.Linfo_string165:
	.asciz	"Province"
.Linfo_string166:
	.asciz	"StreetAddress"
.Linfo_string167:
	.asciz	"PostalCode"
.Linfo_string168:
	.asciz	"CommonName"
.Linfo_string169:
	.asciz	"Names"
.Linfo_string170:
	.asciz	"Type"
.Linfo_string171:
	.asciz	"ObjectIdentifier"
.Linfo_string172:
	.asciz	"Value"
.Linfo_string173:
	.asciz	"AttributeTypeAndValue"
.Linfo_string174:
	.asciz	"struct{*AttributeTypeAndValue,int,int}"
.Linfo_string175:
	.asciz	"ExtraNames"
.Linfo_string176:
	.asciz	"Name"
.Linfo_string177:
	.asciz	"Subject"
.Linfo_string178:
	.asciz	"NotBefore"
.Linfo_string179:
	.asciz	"NotAfter"
.Linfo_string180:
	.asciz	"KeyUsage"
.Linfo_string181:
	.asciz	"Extensions"
.Linfo_string182:
	.asciz	"Id"
.Linfo_string183:
	.asciz	"Critical"
.Linfo_string184:
	.asciz	"Extension"
.Linfo_string185:
	.asciz	"struct{*Extension,int,int}"
.Linfo_string186:
	.asciz	"ExtraExtensions"
.Linfo_string187:
	.asciz	"UnhandledCriticalExtensions"
.Linfo_string188:
	.asciz	"struct{*ObjectIdentifier,int,int}"
.Linfo_string189:
	.asciz	"ExtKeyUsage"
.Linfo_string190:
	.asciz	"struct{*ExtKeyUsage,int,int}"
.Linfo_string191:
	.asciz	"UnknownExtKeyUsage"
.Linfo_string192:
	.asciz	"BasicConstraintsValid"
.Linfo_string193:
	.asciz	"IsCA"
.Linfo_string194:
	.asciz	"MaxPathLen"
.Linfo_string195:
	.asciz	"MaxPathLenZero"
.Linfo_string196:
	.asciz	"SubjectKeyId"
.Linfo_string197:
	.asciz	"AuthorityKeyId"
.Linfo_string198:
	.asciz	"OCSPServer"
.Linfo_string199:
	.asciz	"IssuingCertificateURL"
.Linfo_string200:
	.asciz	"DNSNames"
.Linfo_string201:
	.asciz	"EmailAddresses"
.Linfo_string202:
	.asciz	"IPAddresses"
.Linfo_string203:
	.asciz	"URIs"
.Linfo_string204:
	.asciz	"Scheme"
.Linfo_string205:
	.asciz	"Opaque"
.Linfo_string206:
	.asciz	"User"
.Linfo_string207:
	.asciz	"username"
.Linfo_string208:
	.asciz	"password"
.Linfo_string209:
	.asciz	"passwordSet"
.Linfo_string210:
	.asciz	"Userinfo"
.Linfo_string211:
	.asciz	"Host"
.Linfo_string212:
	.asciz	"Path"
.Linfo_string213:
	.asciz	"RawPath"
.Linfo_string214:
	.asciz	"ForceQuery"
.Linfo_string215:
	.asciz	"RawQuery"
.Linfo_string216:
	.asciz	"Fragment"
.Linfo_string217:
	.asciz	"URL"
.Linfo_string218:
	.asciz	"struct{**URL,int,int}"
.Linfo_string219:
	.asciz	"PermittedDNSDomainsCritical"
.Linfo_string220:
	.asciz	"PermittedDNSDomains"
.Linfo_string221:
	.asciz	"ExcludedDNSDomains"
.Linfo_string222:
	.asciz	"PermittedIPRanges"
.Linfo_string223:
	.asciz	"struct{**IPNet,int,int}"
.Linfo_string224:
	.asciz	"ExcludedIPRanges"
.Linfo_string225:
	.asciz	"PermittedEmailAddresses"
.Linfo_string226:
	.asciz	"ExcludedEmailAddresses"
.Linfo_string227:
	.asciz	"PermittedURIDomains"
.Linfo_string228:
	.asciz	"ExcludedURIDomains"
.Linfo_string229:
	.asciz	"CRLDistributionPoints"
.Linfo_string230:
	.asciz	"PolicyIdentifiers"
.Linfo_string231:
	.asciz	"struct{*Certificate,int,int}"
.Linfo_string232:
	.asciz	"NameToCertificate"
.Linfo_string233:
	.asciz	"count"
.Linfo_string234:
	.asciz	"flags"
.Linfo_string235:
	.asciz	"B"
.Linfo_string236:
	.asciz	"noverflow"
.Linfo_string237:
	.asciz	"uint16"
.Linfo_string238:
	.asciz	"hash0"
.Linfo_string239:
	.asciz	"buckets"
.Linfo_string240:
	.asciz	"oldbuckets"
.Linfo_string241:
	.asciz	"nevacuate"
.Linfo_string242:
	.asciz	"extra"
.Linfo_string243:
	.asciz	"runtime.hmap"
.Linfo_string244:
	.asciz	"GetCertificate"
.Linfo_string245:
	.asciz	"struct{*Certificate,error}"
.Linfo_string246:
	.asciz	"CipherSuites"
.Linfo_string247:
	.asciz	"struct{*uint16,int,int}"
.Linfo_string248:
	.asciz	"ServerName"
.Linfo_string249:
	.asciz	"SupportedCurves"
.Linfo_string250:
	.asciz	"CurveID"
.Linfo_string251:
	.asciz	"struct{*CurveID,int,int}"
.Linfo_string252:
	.asciz	"SupportedPoints"
.Linfo_string253:
	.asciz	"SignatureSchemes"
.Linfo_string254:
	.asciz	"SignatureScheme"
.Linfo_string255:
	.asciz	"struct{*SignatureScheme,int,int}"
.Linfo_string256:
	.asciz	"SupportedProtos"
.Linfo_string257:
	.asciz	"SupportedVersions"
.Linfo_string258:
	.asciz	"Conn"
.Linfo_string259:
	.asciz	"LocalAddr"
.Linfo_string260:
	.asciz	"Network"
.Linfo_string261:
	.asciz	"String"
.Linfo_string262:
	.asciz	"struct{*_type,*func(*void)string,*func(*void)string}"
.Linfo_string263:
	.asciz	"Addr"
.Linfo_string264:
	.asciz	"RemoteAddr"
.Linfo_string265:
	.asciz	"SetDeadline"
.Linfo_string266:
	.asciz	"SetReadDeadline"
.Linfo_string267:
	.asciz	"SetWriteDeadline"
.Linfo_string268:
	.asciz	"struct{*_type,*func(*void)error,*func(*void)Addr,*func(*void,struct{*uint8,int,int})struct{int,error},*func(*void)Addr,*func(*void,Time)error,*func(*void,Time)error,*func(*void,Time)error,*func(*void,struct{*uint8,int,int})struct{int,error}}"
.Linfo_string269:
	.asciz	"ClientHelloInfo"
.Linfo_string270:
	.asciz	"GetClientCertificate"
.Linfo_string271:
	.asciz	"AcceptableCAs"
.Linfo_string272:
	.asciz	"CertificateRequestInfo"
.Linfo_string273:
	.asciz	"GetConfigForClient"
.Linfo_string274:
	.asciz	"struct{*Config,error}"
.Linfo_string275:
	.asciz	"VerifyPeerCertificate"
.Linfo_string276:
	.asciz	"struct{**Certificate,int,int}"
.Linfo_string277:
	.asciz	"struct{*struct{**Certificate,int,int},int,int}"
.Linfo_string278:
	.asciz	"RootCAs"
.Linfo_string279:
	.asciz	"bySubjectKeyId"
.Linfo_string280:
	.asciz	"byName"
.Linfo_string281:
	.asciz	"certs"
.Linfo_string282:
	.asciz	"CertPool"
.Linfo_string283:
	.asciz	"NextProtos"
.Linfo_string284:
	.asciz	"ClientAuth"
.Linfo_string285:
	.asciz	"ClientAuthType"
.Linfo_string286:
	.asciz	"ClientCAs"
.Linfo_string287:
	.asciz	"InsecureSkipVerify"
.Linfo_string288:
	.asciz	"PreferServerCipherSuites"
.Linfo_string289:
	.asciz	"SessionTicketsDisabled"
.Linfo_string290:
	.asciz	"SessionTicketKey"
.Linfo_string291:
	.asciz	"ClientSessionCache"
.Linfo_string292:
	.asciz	"Get"
.Linfo_string293:
	.asciz	"session"
.Linfo_string294:
	.asciz	"sessionTicket"
.Linfo_string295:
	.asciz	"vers"
.Linfo_string296:
	.asciz	"cipherSuite"
.Linfo_string297:
	.asciz	"masterSecret"
.Linfo_string298:
	.asciz	"serverCertificates"
.Linfo_string299:
	.asciz	"verifiedChains"
.Linfo_string300:
	.asciz	"ClientSessionState"
.Linfo_string301:
	.asciz	"ok"
.Linfo_string302:
	.asciz	"struct{*ClientSessionState,bool}"
.Linfo_string303:
	.asciz	"Put"
.Linfo_string304:
	.asciz	"struct{*_type,*func(*void,string)struct{*ClientSessionState,bool},*func(*void,string,*ClientSessionState)void}"
.Linfo_string305:
	.asciz	"MinVersion"
.Linfo_string306:
	.asciz	"MaxVersion"
.Linfo_string307:
	.asciz	"CurvePreferences"
.Linfo_string308:
	.asciz	"DynamicRecordSizingDisabled"
.Linfo_string309:
	.asciz	"Renegotiation"
.Linfo_string310:
	.asciz	"RenegotiationSupport"
.Linfo_string311:
	.asciz	"KeyLogWriter"
.Linfo_string312:
	.asciz	"Writer"
.Linfo_string313:
	.asciz	"serverInitOnce"
.Linfo_string314:
	.asciz	"m"
.Linfo_string315:
	.asciz	"state"
.Linfo_string316:
	.asciz	"int32"
.Linfo_string317:
	.asciz	"Mutex"
.Linfo_string318:
	.asciz	"done"
.Linfo_string319:
	.asciz	"Once"
.Linfo_string320:
	.asciz	"mutex"
.Linfo_string321:
	.asciz	"w"
.Linfo_string322:
	.asciz	"writerSem"
.Linfo_string323:
	.asciz	"readerSem"
.Linfo_string324:
	.asciz	"readerCount"
.Linfo_string325:
	.asciz	"readerWait"
.Linfo_string326:
	.asciz	"RWMutex"
.Linfo_string327:
	.asciz	"sessionTicketKeys"
.Linfo_string328:
	.asciz	"keyName"
.Linfo_string329:
	.asciz	"aesKey"
.Linfo_string330:
	.asciz	"hmacKey"
.Linfo_string331:
	.asciz	".crypto/tls.ticketKey"
.Linfo_string332:
	.asciz	"struct{*.crypto/tls.ticketKey,int,int}"
.Linfo_string333:
	.asciz	"Config"
.Linfo_string334:
	.asciz	"tlsConn"
.Linfo_string335:
	.asciz	"conn"
.Linfo_string336:
	.asciz	"isClient"
.Linfo_string337:
	.asciz	"handshakeMutex"
.Linfo_string338:
	.asciz	"handshakeCond"
.Linfo_string339:
	.asciz	"L"
.Linfo_string340:
	.asciz	"Lock"
.Linfo_string341:
	.asciz	"Unlock"
.Linfo_string342:
	.asciz	"struct{*_type,*func(*void)void,*func(*void)void}"
.Linfo_string343:
	.asciz	"Locker"
.Linfo_string344:
	.asciz	"notify"
.Linfo_string345:
	.asciz	"wait"
.Linfo_string346:
	.asciz	"lock"
.Linfo_string347:
	.asciz	"head"
.Linfo_string348:
	.asciz	"tail"
.Linfo_string349:
	.asciz	".sync.notifyList"
.Linfo_string350:
	.asciz	"checker"
.Linfo_string351:
	.asciz	".sync.copyChecker"
.Linfo_string352:
	.asciz	"Cond"
.Linfo_string353:
	.asciz	"handshakeErr"
.Linfo_string354:
	.asciz	"haveVers"
.Linfo_string355:
	.asciz	"config"
.Linfo_string356:
	.asciz	"handshakeComplete"
.Linfo_string357:
	.asciz	"handshakes"
.Linfo_string358:
	.asciz	"didResume"
.Linfo_string359:
	.asciz	"ocspResponse"
.Linfo_string360:
	.asciz	"scts"
.Linfo_string361:
	.asciz	"peerCertificates"
.Linfo_string362:
	.asciz	"serverName"
.Linfo_string363:
	.asciz	"secureRenegotiation"
.Linfo_string364:
	.asciz	"clientFinishedIsFirst"
.Linfo_string365:
	.asciz	"closeNotifyErr"
.Linfo_string366:
	.asciz	"closeNotifySent"
.Linfo_string367:
	.asciz	"clientFinished"
.Linfo_string368:
	.asciz	"serverFinished"
.Linfo_string369:
	.asciz	"clientProtocol"
.Linfo_string370:
	.asciz	"clientProtocolFallback"
.Linfo_string371:
	.asciz	"in"
.Linfo_string372:
	.asciz	"version"
.Linfo_string373:
	.asciz	"cipher"
.Linfo_string374:
	.asciz	"mac"
.Linfo_string375:
	.asciz	"MAC"
.Linfo_string376:
	.asciz	"Size"
.Linfo_string377:
	.asciz	"struct{*_type,*func(*void,struct{*uint8,int,int},struct{*uint8,int,int},struct{*uint8,int,int},struct{*uint8,int,int},struct{*uint8,int,int})struct{*uint8,int,int},*func(*void)int}"
.Linfo_string378:
	.asciz	".crypto/tls.macFunction"
.Linfo_string379:
	.asciz	"seq"
.Linfo_string380:
	.asciz	"bfree"
.Linfo_string381:
	.asciz	"data"
.Linfo_string382:
	.asciz	"off"
.Linfo_string383:
	.asciz	"link"
.Linfo_string384:
	.asciz	".crypto/tls.block"
.Linfo_string385:
	.asciz	"additionalData"
.Linfo_string386:
	.asciz	"nextCipher"
.Linfo_string387:
	.asciz	"nextMac"
.Linfo_string388:
	.asciz	"inDigestBuf"
.Linfo_string389:
	.asciz	"outDigestBuf"
.Linfo_string390:
	.asciz	".crypto/tls.halfConn"
.Linfo_string391:
	.asciz	"out"
.Linfo_string392:
	.asciz	"rawInput"
.Linfo_string393:
	.asciz	"input"
.Linfo_string394:
	.asciz	"hand"
.Linfo_string395:
	.asciz	"buf"
.Linfo_string396:
	.asciz	"bootstrap"
.Linfo_string397:
	.asciz	"lastRead"
.Linfo_string398:
	.asciz	".bytes.readOp"
.Linfo_string399:
	.asciz	"Buffer"
.Linfo_string400:
	.asciz	"buffering"
.Linfo_string401:
	.asciz	"sendBuf"
.Linfo_string402:
	.asciz	"bytesSent"
.Linfo_string403:
	.asciz	"packetsSent"
.Linfo_string404:
	.asciz	"warnCount"
.Linfo_string405:
	.asciz	"activeCall"
.Linfo_string406:
	.asciz	"tmp"
.Linfo_string407:
	.asciz	"tcpConn"
.Linfo_string408:
	.asciz	"connectionOk"
.Linfo_string409:
	.asciz	"connResetLock"
.Linfo_string410:
	.asciz	"reverser"
.Linfo_string411:
	.asciz	"RouteDeletions"
.Linfo_string412:
	.asciz	"dest"
.Linfo_string413:
	.asciz	"via"
.Linfo_string414:
	.asciz	"dev"
.Linfo_string415:
	.asciz	".command-line-arguments.routeEntries"
.Linfo_string416:
	.asciz	"struct{*.command-line-arguments.routeEntries,int,int}"
.Linfo_string417:
	.asciz	"updateGateway"
.Linfo_string418:
	.asciz	"newGW"
.Linfo_string419:
	.asciz	"interfaceToClose"
.Linfo_string420:
	.asciz	"Reverser"
.Linfo_string421:
	.asciz	"Client"
.Linfo_string422:
	.asciz	"struct{*Client,error}"
.Linfo_string423:
	.asciz	"command_line_arguments.SetDevIP"
.Linfo_string424:
	.asciz	"subnet.SetDevIP"
.Linfo_string425:
	.asciz	"command_line_arguments.GetNetGateway"
.Linfo_string426:
	.asciz	"subnet.GetNetGateway"
.Linfo_string427:
	.asciz	"gw"
.Linfo_string428:
	.asciz	"struct{string,string,error}"
.Linfo_string429:
	.asciz	"command_line_arguments.AddRoute"
.Linfo_string430:
	.asciz	"subnet.AddRoute"
.Linfo_string431:
	.asciz	"command_line_arguments.SetDefaultGateway"
.Linfo_string432:
	.asciz	"subnet.SetDefaultGateway"
.Linfo_string433:
	.asciz	"command_line_arguments.SetInterfaceStatus"
.Linfo_string434:
	.asciz	"subnet.SetInterfaceStatus"
.Linfo_string435:
	.asciz	"subnet.command_line_arguments..thunk0"
.Linfo_string436:
	.asciz	"subnet.command_line_arguments..thunk1"
.Linfo_string437:
	.asciz	"subnet.command_line_arguments..thunk2"
.Linfo_string438:
	.asciz	"subnet.command_line_arguments..thunk3"
.Linfo_string439:
	.asciz	"subnet.command_line_arguments..thunk4"
.Linfo_string440:
	.asciz	"subnet.command_line_arguments..thunk5"
.Linfo_string441:
	.asciz	"subnet.command_line_arguments..thunk6"
.Linfo_string442:
	.asciz	"subnet.commandExec"
.Linfo_string443:
	.asciz	"command_line_arguments.DelRoute"
.Linfo_string444:
	.asciz	"subnet.DelRoute"
.Linfo_string445:
	.asciz	"subnet.command_line_arguments..thunk7"
.Linfo_string446:
	.asciz	"subnet.GetNetGateway..func1"
.Linfo_string447:
	.asciz	"command_line_arguments.serverConn.hadError"
.Linfo_string448:
	.asciz	"subnet.hadError..1command_line_arguments.serverConn"
.Linfo_string449:
	.asciz	"command_line_arguments.Server.Close"
.Linfo_string450:
	.asciz	"subnet.Close..1command_line_arguments.Server"
.Linfo_string451:
	.asciz	"command_line_arguments.Server.Init"
.Linfo_string452:
	.asciz	"subnet.Init..1command_line_arguments.Server"
.Linfo_string453:
	.asciz	"command_line_arguments.Server.Run"
.Linfo_string454:
	.asciz	"subnet.Run..1command_line_arguments.Server"
.Linfo_string455:
	.asciz	"command_line_arguments.Server.acceptRoutine"
.Linfo_string456:
	.asciz	"subnet.acceptRoutine..1command_line_arguments.Server"
.Linfo_string457:
	.asciz	"command_line_arguments.Server.dispatchRoutine"
.Linfo_string458:
	.asciz	"subnet.dispatchRoutine..1command_line_arguments.Server"
.Linfo_string459:
	.asciz	"command_line_arguments.Server.enrollClientConn"
.Linfo_string460:
	.asciz	"subnet.enrollClientConn..1command_line_arguments.Server"
.Linfo_string461:
	.asciz	"command_line_arguments.Server.handleClient"
.Linfo_string462:
	.asciz	"subnet.handleClient..1command_line_arguments.Server"
.Linfo_string463:
	.asciz	"command_line_arguments.Server.removeClientConn"
.Linfo_string464:
	.asciz	"subnet.removeClientConn..1command_line_arguments.Server"
.Linfo_string465:
	.asciz	"command_line_arguments.Server.route"
.Linfo_string466:
	.asciz	"subnet.route..1command_line_arguments.Server"
.Linfo_string467:
	.asciz	"command_line_arguments.Server.setAddrForClient"
.Linfo_string468:
	.asciz	"subnet.setAddrForClient..1command_line_arguments.Server"
.Linfo_string469:
	.asciz	"command_line_arguments.serverConn.initClient"
.Linfo_string470:
	.asciz	"subnet.initClient..1command_line_arguments.serverConn"
.Linfo_string471:
	.asciz	"command_line_arguments.serverConn.queueIP"
.Linfo_string472:
	.asciz	"subnet.queueIP..1command_line_arguments.serverConn"
.Linfo_string473:
	.asciz	"command_line_arguments.serverConn.readRoutine"
.Linfo_string474:
	.asciz	"subnet.readRoutine..1command_line_arguments.serverConn"
.Linfo_string475:
	.asciz	"command_line_arguments.serverConn.remoteAddressStr"
.Linfo_string476:
	.asciz	"subnet.remoteAddressStr..1command_line_arguments.serverConn"
.Linfo_string477:
	.asciz	"command_line_arguments.serverConn.writeRoutine"
.Linfo_string478:
	.asciz	"subnet.writeRoutine..1command_line_arguments.serverConn"
.Linfo_string479:
	.asciz	"subnet.command_line_arguments..thunk8"
.Linfo_string480:
	.asciz	"subnet.command_line_arguments..thunk9"
.Linfo_string481:
	.asciz	"command_line_arguments.NewServer"
.Linfo_string482:
	.asciz	"subnet.NewServer"
.Linfo_string483:
	.asciz	"tlsListener"
.Linfo_string484:
	.asciz	"Accept"
.Linfo_string485:
	.asciz	"struct{Conn,error}"
.Linfo_string486:
	.asciz	"struct{*_type,*func(*void)struct{Conn,error},*func(*void)Addr,*func(*void)error}"
.Linfo_string487:
	.asciz	"Listener"
.Linfo_string488:
	.asciz	"clientIDByAddress"
.Linfo_string489:
	.asciz	"clients"
.Linfo_string490:
	.asciz	"clientsLock"
.Linfo_string491:
	.asciz	"lastClientID"
.Linfo_string492:
	.asciz	"inboundIPPkts"
.Linfo_string493:
	.asciz	"inboundDevPkts"
.Linfo_string494:
	.asciz	"outboundDevPkts"
.Linfo_string495:
	.asciz	"Server"
.Linfo_string496:
	.asciz	"struct{*Server,error}"
.Linfo_string497:
	.asciz	"subnet.command_line_arguments..thunk10"
.Linfo_string498:
	.asciz	"subnet.command_line_arguments..thunk11"
.Linfo_string499:
	.asciz	"subnet.command_line_arguments..thunk12"
.Linfo_string500:
	.asciz	"subnet.command_line_arguments..thunk13"
.Linfo_string501:
	.asciz	"subnet.command_line_arguments..thunk14"
.Linfo_string502:
	.asciz	"subnet.command_line_arguments..thunk15"
.Linfo_string503:
	.asciz	"subnet.command_line_arguments..thunk16"
.Linfo_string504:
	.asciz	"subnet.command_line_arguments..thunk17"
.Linfo_string505:
	.asciz	"subnet.devReadRoutine"
.Linfo_string506:
	.asciz	"subnet.command_line_arguments..thunk18"
.Linfo_string507:
	.asciz	"subnet.devWriteRoutine"
.Linfo_string508:
	.asciz	"subnet.command_line_arguments..thunk19"
.Linfo_string509:
	.asciz	"command_line_arguments.struct.4Size.0uint32.2Mallocs.0uint64.2Frees.0uint64.5..hash"
.Linfo_string510:
	.asciz	"subnet.struct.4Size.0uint32.2Mallocs.0uint64.2Frees.0uint64.5..hash"
.Linfo_string511:
	.asciz	"command_line_arguments.struct.4Size.0uint32.2Mallocs.0uint64.2Frees.0uint64.5..eq"
.Linfo_string512:
	.asciz	"subnet.struct.4Size.0uint32.2Mallocs.0uint64.2Frees.0uint64.5..eq"
.Linfo_string513:
	.asciz	"command_line_arguments..import"
.Linfo_string514:
	.asciz	"subnet.command_line_arguments..import"
.Linfo_string515:
	.asciz	"c"
.Linfo_string516:
	.asciz	"$ret4"
.Linfo_string517:
	.asciz	"e"
.Linfo_string518:
	.asciz	"i"
.Linfo_string519:
	.asciz	"$ret2"
.Linfo_string520:
	.asciz	"gatewayDevice"
.Linfo_string521:
	.asciz	"pktType"
.Linfo_string522:
	.asciz	"PktType"
.Linfo_string523:
	.asciz	"ipPkt"
.Linfo_string524:
	.asciz	"Dest"
.Linfo_string525:
	.asciz	"Protocol"
.Linfo_string526:
	.asciz	"IPProtocol"
.Linfo_string527:
	.asciz	"IPPacket"
.Linfo_string528:
	.asciz	"connOK"
.Linfo_string529:
	.asciz	"pkt"
.Linfo_string530:
	.asciz	"encoder"
.Linfo_string531:
	.asciz	"struct{*Writer,int,int}"
.Linfo_string532:
	.asciz	"sent"
.Linfo_string533:
	.asciz	"countState"
.Linfo_string534:
	.asciz	"enc"
.Linfo_string535:
	.asciz	"b"
.Linfo_string536:
	.asciz	"scratch"
.Linfo_string537:
	.asciz	".encoding/gob.encBuffer"
.Linfo_string538:
	.asciz	"sendZero"
.Linfo_string539:
	.asciz	"fieldnum"
.Linfo_string540:
	.asciz	"next"
.Linfo_string541:
	.asciz	".encoding/gob.encoderState"
.Linfo_string542:
	.asciz	"freeList"
.Linfo_string543:
	.asciz	"byteBuf"
.Linfo_string544:
	.asciz	"Encoder"
.Linfo_string545:
	.asciz	"$ret3"
.Linfo_string546:
	.asciz	"destination"
.Linfo_string547:
	.asciz	"r"
.Linfo_string548:
	.asciz	"additionalAddresses"
.Linfo_string549:
	.asciz	"caCertPath"
.Linfo_string550:
	.asciz	"keyPemPath"
.Linfo_string551:
	.asciz	"certPemPath"
.Linfo_string552:
	.asciz	"iName"
.Linfo_string553:
	.asciz	"network"
.Linfo_string554:
	.asciz	"servAddr"
.Linfo_string555:
	.asciz	"$ret1"
.Linfo_string556:
	.asciz	"$ret0"
.Linfo_string557:
	.asciz	"ret"
.Linfo_string558:
	.asciz	"debug"
.Linfo_string559:
	.asciz	"sargs"
.Linfo_string560:
	.asciz	"file"
.Linfo_string561:
	.asciz	"pfd"
.Linfo_string562:
	.asciz	"fdmu"
.Linfo_string563:
	.asciz	"rsema"
.Linfo_string564:
	.asciz	"wsema"
.Linfo_string565:
	.asciz	".internal/poll.fdMutex"
.Linfo_string566:
	.asciz	"Sysfd"
.Linfo_string567:
	.asciz	"pd"
.Linfo_string568:
	.asciz	"runtimeCtx"
.Linfo_string569:
	.asciz	".internal/poll.pollDesc"
.Linfo_string570:
	.asciz	"iovecs"
.Linfo_string571:
	.asciz	"Base"
.Linfo_string572:
	.asciz	"Len"
.Linfo_string573:
	.asciz	"Iovec_len_t"
.Linfo_string574:
	.asciz	"Iovec"
.Linfo_string575:
	.asciz	"struct{*Iovec,int,int}"
.Linfo_string576:
	.asciz	"csema"
.Linfo_string577:
	.asciz	"IsStream"
.Linfo_string578:
	.asciz	"ZeroReadIsEOF"
.Linfo_string579:
	.asciz	"isFile"
.Linfo_string580:
	.asciz	"isBlocking"
.Linfo_string581:
	.asciz	"FD"
.Linfo_string582:
	.asciz	"dirinfo"
.Linfo_string583:
	.asciz	"dir"
.Linfo_string584:
	.asciz	"DIR"
.Linfo_string585:
	.asciz	".os.dirInfo"
.Linfo_string586:
	.asciz	"nonblock"
.Linfo_string587:
	.asciz	"stdoutOrErr"
.Linfo_string588:
	.asciz	".os.file"
.Linfo_string589:
	.asciz	"File"
.Linfo_string590:
	.asciz	"isPrefix"
.Linfo_string591:
	.asciz	"scanner"
.Linfo_string592:
	.asciz	"split"
.Linfo_string593:
	.asciz	"advance"
.Linfo_string594:
	.asciz	"token"
.Linfo_string595:
	.asciz	"struct{int,struct{*uint8,int,int},error}"
.Linfo_string596:
	.asciz	"maxTokenSize"
.Linfo_string597:
	.asciz	"start"
.Linfo_string598:
	.asciz	"end"
.Linfo_string599:
	.asciz	"empties"
.Linfo_string600:
	.asciz	"scanCalled"
.Linfo_string601:
	.asciz	"Scanner"
.Linfo_string602:
	.asciz	"tokens"
.Linfo_string603:
	.asciz	"mask"
.Linfo_string604:
	.asciz	"a"
.Linfo_string605:
	.asciz	"d"
.Linfo_string606:
	.asciz	"viaAddr"
.Linfo_string607:
	.asciz	"up"
.Linfo_string608:
	.asciz	"__go_thunk_parameter"
.Linfo_string609:
	.asciz	"a0"
.Linfo_string610:
	.asciz	"struct{*Client}"
.Linfo_string611:
	.asciz	"a1"
.Linfo_string612:
	.asciz	"a2"
.Linfo_string613:
	.asciz	"a3"
.Linfo_string614:
	.asciz	"struct{*Interface,*__go_channel,*WaitGroup,*bool}"
.Linfo_string615:
	.asciz	"struct{*WaitGroup}"
.Linfo_string616:
	.asciz	"$ret18"
.Linfo_string617:
	.asciz	"$ret19"
.Linfo_string618:
	.asciz	"struct{*Mutex}"
.Linfo_string619:
	.asciz	"$ret20"
.Linfo_string620:
	.asciz	"args"
.Linfo_string621:
	.asciz	"command"
.Linfo_string622:
	.asciz	"cmd"
.Linfo_string623:
	.asciz	"Args"
.Linfo_string624:
	.asciz	"Env"
.Linfo_string625:
	.asciz	"Dir"
.Linfo_string626:
	.asciz	"Stdin"
.Linfo_string627:
	.asciz	"Stdout"
.Linfo_string628:
	.asciz	"Stderr"
.Linfo_string629:
	.asciz	"ExtraFiles"
.Linfo_string630:
	.asciz	"struct{**File,int,int}"
.Linfo_string631:
	.asciz	"SysProcAttr"
.Linfo_string632:
	.asciz	"Chroot"
.Linfo_string633:
	.asciz	"Credential"
.Linfo_string634:
	.asciz	"Uid"
.Linfo_string635:
	.asciz	"Gid"
.Linfo_string636:
	.asciz	"Groups"
.Linfo_string637:
	.asciz	"struct{*uint32,int,int}"
.Linfo_string638:
	.asciz	"NoSetGroups"
.Linfo_string639:
	.asciz	"Ptrace"
.Linfo_string640:
	.asciz	"Setsid"
.Linfo_string641:
	.asciz	"Setpgid"
.Linfo_string642:
	.asciz	"Setctty"
.Linfo_string643:
	.asciz	"Noctty"
.Linfo_string644:
	.asciz	"Ctty"
.Linfo_string645:
	.asciz	"Foreground"
.Linfo_string646:
	.asciz	"Pgid"
.Linfo_string647:
	.asciz	"Pdeathsig"
.Linfo_string648:
	.asciz	"Signal"
.Linfo_string649:
	.asciz	"Cloneflags"
.Linfo_string650:
	.asciz	"Unshareflags"
.Linfo_string651:
	.asciz	"UidMappings"
.Linfo_string652:
	.asciz	"ContainerID"
.Linfo_string653:
	.asciz	"HostID"
.Linfo_string654:
	.asciz	"SysProcIDMap"
.Linfo_string655:
	.asciz	"struct{*SysProcIDMap,int,int}"
.Linfo_string656:
	.asciz	"GidMappings"
.Linfo_string657:
	.asciz	"GidMappingsEnableSetgroups"
.Linfo_string658:
	.asciz	"AmbientCaps"
.Linfo_string659:
	.asciz	"struct{*uintptr,int,int}"
.Linfo_string660:
	.asciz	"Process"
.Linfo_string661:
	.asciz	"Pid"
.Linfo_string662:
	.asciz	"handle"
.Linfo_string663:
	.asciz	"isdone"
.Linfo_string664:
	.asciz	"sigMu"
.Linfo_string665:
	.asciz	"ProcessState"
.Linfo_string666:
	.asciz	"pid"
.Linfo_string667:
	.asciz	"status"
.Linfo_string668:
	.asciz	"WaitStatus"
.Linfo_string669:
	.asciz	"rusage"
.Linfo_string670:
	.asciz	"Utime"
.Linfo_string671:
	.asciz	"Sec"
.Linfo_string672:
	.asciz	"Timeval_sec_t"
.Linfo_string673:
	.asciz	"Usec"
.Linfo_string674:
	.asciz	"Timeval_usec_t"
.Linfo_string675:
	.asciz	"Timeval"
.Linfo_string676:
	.asciz	"Stime"
.Linfo_string677:
	.asciz	"Maxrss"
.Linfo_string678:
	.asciz	"Ixrss"
.Linfo_string679:
	.asciz	"Idrss"
.Linfo_string680:
	.asciz	"Isrss"
.Linfo_string681:
	.asciz	"Minflt"
.Linfo_string682:
	.asciz	"Majflt"
.Linfo_string683:
	.asciz	"Nswap"
.Linfo_string684:
	.asciz	"Inblock"
.Linfo_string685:
	.asciz	"Oublock"
.Linfo_string686:
	.asciz	"Msgsnd"
.Linfo_string687:
	.asciz	"Msgrcv"
.Linfo_string688:
	.asciz	"Nsignals"
.Linfo_string689:
	.asciz	"Nvcsw"
.Linfo_string690:
	.asciz	"Nivcsw"
.Linfo_string691:
	.asciz	"Rusage"
.Linfo_string692:
	.asciz	"ctx"
.Linfo_string693:
	.asciz	"Deadline"
.Linfo_string694:
	.asciz	"deadline"
.Linfo_string695:
	.asciz	"struct{Time,bool}"
.Linfo_string696:
	.asciz	"Done"
.Linfo_string697:
	.asciz	"Err"
.Linfo_string698:
	.asciz	"struct{*_type,*func(*void)struct{Time,bool},*func(*void)*__go_channel,*func(*void)error,*func(*void,PrivateKey)PrivateKey}"
.Linfo_string699:
	.asciz	"Context"
.Linfo_string700:
	.asciz	"lookPathErr"
.Linfo_string701:
	.asciz	"finished"
.Linfo_string702:
	.asciz	"childFiles"
.Linfo_string703:
	.asciz	"closeAfterStart"
.Linfo_string704:
	.asciz	"struct{*_type,*func(*void)error}"
.Linfo_string705:
	.asciz	"Closer"
.Linfo_string706:
	.asciz	"struct{*Closer,int,int}"
.Linfo_string707:
	.asciz	"closeAfterWait"
.Linfo_string708:
	.asciz	"goroutine"
.Linfo_string709:
	.asciz	"struct{**__go_descriptor,int,int}"
.Linfo_string710:
	.asciz	"errch"
.Linfo_string711:
	.asciz	"waitDone"
.Linfo_string712:
	.asciz	"Cmd"
.Linfo_string713:
	.asciz	"$ret17"
.Linfo_string714:
	.asciz	"struct{*File}"
.Linfo_string715:
	.asciz	"$ret21"
.Linfo_string716:
	.asciz	"s"
.Linfo_string717:
	.asciz	"$ret10"
.Linfo_string718:
	.asciz	"id"
.Linfo_string719:
	.asciz	"outboundIPPkts"
.Linfo_string720:
	.asciz	"server"
.Linfo_string721:
	.asciz	"canSendIP"
.Linfo_string722:
	.asciz	"remoteAddrs"
.Linfo_string723:
	.asciz	".command-line-arguments.serverConn"
.Linfo_string724:
	.asciz	"errInRead"
.Linfo_string725:
	.asciz	"$ret14"
.Linfo_string726:
	.asciz	"servHost"
.Linfo_string727:
	.asciz	"tcpListener"
.Linfo_string728:
	.asciz	"fd"
.Linfo_string729:
	.asciz	"family"
.Linfo_string730:
	.asciz	"sotype"
.Linfo_string731:
	.asciz	"isConnected"
.Linfo_string732:
	.asciz	"net"
.Linfo_string733:
	.asciz	"laddr"
.Linfo_string734:
	.asciz	"raddr"
.Linfo_string735:
	.asciz	".net.netFD"
.Linfo_string736:
	.asciz	"TCPListener"
.Linfo_string737:
	.asciz	"clientID"
.Linfo_string738:
	.asciz	".command-line-arguments.inboundIPPkt"
.Linfo_string739:
	.asciz	"toDeleteAddrs"
.Linfo_string740:
	.asciz	"itemID"
.Linfo_string741:
	.asciz	"canRouteDirectly"
.Linfo_string742:
	.asciz	"destClientID"
.Linfo_string743:
	.asciz	"clientExists"
.Linfo_string744:
	.asciz	"destClient"
.Linfo_string745:
	.asciz	"ipPacketSink"
.Linfo_string746:
	.asciz	"decoder"
.Linfo_string747:
	.asciz	".encoding/gob.decBuffer"
.Linfo_string748:
	.asciz	"wireType"
.Linfo_string749:
	.asciz	"decoderCache"
.Linfo_string750:
	.asciz	"ignorerCache"
.Linfo_string751:
	.asciz	"dec"
.Linfo_string752:
	.asciz	".encoding/gob.decoderState"
.Linfo_string753:
	.asciz	"countBuf"
.Linfo_string754:
	.asciz	"Decoder"
.Linfo_string755:
	.asciz	"$ret11"
.Linfo_string756:
	.asciz	"struct{*.command-line-arguments.serverConn,*bool,*__go_channel}"
.Linfo_string757:
	.asciz	"struct{*.command-line-arguments.serverConn,*bool}"
.Linfo_string758:
	.asciz	"$ret13"
.Linfo_string759:
	.asciz	"$ret12"
.Linfo_string760:
	.asciz	"struct{*Server}"
.Linfo_string761:
	.asciz	"$ret22"
.Linfo_string762:
	.asciz	"$ret23"
.Linfo_string763:
	.asciz	"$ret24"
.Linfo_string764:
	.asciz	"$ret25"
.Linfo_string765:
	.asciz	"p"
.Linfo_string766:
	.asciz	"$ret26"
.Linfo_string767:
	.asciz	"packetsOut"
.Linfo_string768:
	.asciz	"$ret27"
.Linfo_string769:
	.asciz	"key"
.Linfo_string770:
	.asciz	"seed"
.Linfo_string771:
	.asciz	"$ret50"
.Linfo_string772:
	.asciz	"key1"
.Linfo_string773:
	.asciz	"key2"
.Linfo_string774:
	.asciz	"$ret51"
	.section	.debug_loc,"",@progbits
.Ldebug_loc0:
	.quad	.Lfunc_begin0
	.quad	.Ltmp2
	.short	1
	.byte	85
	.quad	.Ltmp2
	.quad	.Ltmp5
	.short	1
	.byte	83
	.quad	.Ltmp6
	.quad	.Ltmp7
	.short	1
	.byte	85
	.quad	0
	.quad	0
.Ldebug_loc1:
	.quad	.Ltmp3
	.quad	.Ltmp3
	.short	10
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp3
	.quad	.Ltmp4
	.short	8
	.byte	80
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc2:
	.quad	.Ltmp3
	.quad	.Ltmp4
	.short	3
	.byte	80
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc3:
	.quad	.Lfunc_begin1
	.quad	.Ltmp11
	.short	1
	.byte	85
	.quad	.Ltmp11
	.quad	.Ltmp16
	.short	1
	.byte	83
	.quad	.Ltmp17
	.quad	.Ltmp22
	.short	1
	.byte	83
	.quad	.Ltmp23
	.quad	.Ltmp24
	.short	1
	.byte	83
	.quad	.Ltmp25
	.quad	.Ltmp26
	.short	1
	.byte	85
	.quad	0
	.quad	0
.Ldebug_loc4:
	.quad	.Ltmp13
	.quad	.Ltmp14
	.short	3
	.byte	80
	.byte	147
	.byte	8
	.quad	.Ltmp14
	.quad	.Ltmp15
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc5:
	.quad	.Ltmp19
	.quad	.Ltmp20
	.short	3
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp20
	.quad	.Ltmp21
	.short	6
	.byte	94
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc6:
	.quad	.Lfunc_begin2
	.quad	.Ltmp90
	.short	1
	.byte	85
	.quad	.Ltmp90
	.quad	.Ltmp98
	.short	1
	.byte	86
	.quad	.Ltmp99
	.quad	.Ltmp100
	.short	1
	.byte	86
	.quad	.Ltmp101
	.quad	.Ltmp102
	.short	1
	.byte	86
	.quad	.Ltmp103
	.quad	.Ltmp109
	.short	1
	.byte	86
	.quad	.Ltmp109
	.quad	.Ltmp146
	.short	3
	.byte	119
	.byte	224
	.byte	0
	.quad	.Ltmp147
	.quad	.Ltmp147
	.short	3
	.byte	119
	.byte	224
	.byte	0
	.quad	0
	.quad	0
.Ldebug_loc7:
	.quad	.Ltmp110
	.quad	.Ltmp143
	.short	1
	.byte	94
	.quad	.Ltmp147
	.quad	.Ltmp147
	.short	1
	.byte	94
	.quad	0
	.quad	0
.Ldebug_loc8:
	.quad	.Ltmp115
	.quad	.Ltmp116
	.short	3
	.byte	82
	.byte	147
	.byte	8
	.quad	.Ltmp116
	.quad	.Ltmp119
	.short	6
	.byte	82
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc9:
	.quad	.Lfunc_begin3
	.quad	.Ltmp149
	.short	1
	.byte	85
	.quad	.Ltmp149
	.quad	.Ltmp180
	.short	1
	.byte	92
	.quad	.Ltmp181
	.quad	.Ltmp194
	.short	1
	.byte	92
	.quad	.Ltmp195
	.quad	.Ltmp197
	.short	1
	.byte	92
	.quad	.Ltmp198
	.quad	.Lfunc_end3
	.short	1
	.byte	92
	.quad	0
	.quad	0
.Ldebug_loc10:
	.quad	.Lfunc_begin3
	.quad	.Ltmp150
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc11:
	.quad	.Lfunc_begin3
	.quad	.Ltmp150
	.short	6
	.byte	82
	.byte	147
	.byte	8
	.byte	88
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc12:
	.quad	.Ltmp151
	.quad	.Ltmp152
	.short	8
	.byte	147
	.byte	8
	.byte	117
	.byte	24
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp153
	.quad	.Ltmp160
	.short	9
	.byte	80
	.byte	147
	.byte	8
	.byte	117
	.byte	24
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc13:
	.quad	.Ltmp154
	.quad	.Ltmp159
	.short	5
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp172
	.quad	.Ltmp175
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp176
	.quad	.Ltmp178
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp180
	.quad	.Ltmp180
	.short	8
	.byte	80
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp180
	.quad	.Ltmp193
	.short	10
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp193
	.quad	.Ltmp196
	.short	8
	.byte	80
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc14:
	.quad	.Ltmp172
	.quad	.Ltmp175
	.short	3
	.byte	80
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc15:
	.quad	.Ltmp176
	.quad	.Ltmp178
	.short	3
	.byte	80
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc16:
	.quad	.Ltmp183
	.quad	.Ltmp191
	.short	3
	.byte	80
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc17:
	.quad	.Ltmp186
	.quad	.Ltmp187
	.short	3
	.byte	93
	.byte	147
	.byte	8
	.quad	.Ltmp187
	.quad	.Ltmp190
	.short	6
	.byte	93
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp190
	.quad	.Ltmp194
	.short	7
	.byte	93
	.byte	147
	.byte	8
	.byte	119
	.byte	56
	.byte	147
	.byte	8
	.quad	.Ltmp195
	.quad	.Ltmp198
	.short	7
	.byte	93
	.byte	147
	.byte	8
	.byte	119
	.byte	56
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc18:
	.quad	.Ltmp188
	.quad	.Ltmp189
	.short	3
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp189
	.quad	.Ltmp194
	.short	6
	.byte	94
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.quad	.Ltmp195
	.quad	.Ltmp198
	.short	6
	.byte	94
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc19:
	.quad	.Ltmp193
	.quad	.Ltmp194
	.short	3
	.byte	80
	.byte	147
	.byte	8
	.quad	.Ltmp195
	.quad	.Ltmp196
	.short	3
	.byte	80
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc20:
	.quad	.Lfunc_begin4
	.quad	.Ltmp269
	.short	1
	.byte	85
	.quad	.Ltmp269
	.quad	.Ltmp330
	.short	2
	.byte	119
	.byte	40
	.quad	.Ltmp331
	.quad	.Lfunc_end4
	.short	2
	.byte	119
	.byte	40
	.quad	0
	.quad	0
.Ldebug_loc21:
	.quad	.Ltmp289
	.quad	.Ltmp291
	.short	1
	.byte	94
	.quad	0
	.quad	0
.Ldebug_loc22:
	.quad	.Ltmp294
	.quad	.Ltmp299
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc23:
	.quad	.Ltmp296
	.quad	.Ltmp297
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc24:
	.quad	.Ltmp312
	.quad	.Ltmp317
	.short	3
	.byte	93
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc25:
	.quad	.Lfunc_begin5
	.quad	.Ltmp396
	.short	1
	.byte	85
	.quad	.Ltmp396
	.quad	.Ltmp403
	.short	1
	.byte	93
	.quad	.Ltmp404
	.quad	.Ltmp420
	.short	1
	.byte	93
	.quad	.Ltmp425
	.quad	.Ltmp428
	.short	1
	.byte	93
	.quad	.Ltmp443
	.quad	.Ltmp444
	.short	1
	.byte	93
	.quad	0
	.quad	0
.Ldebug_loc26:
	.quad	.Ltmp411
	.quad	.Ltmp413
	.short	1
	.byte	80
	.quad	.Ltmp425
	.quad	.Ltmp426
	.short	1
	.byte	80
	.quad	0
	.quad	0
.Ldebug_loc27:
	.quad	.Ltmp416
	.quad	.Ltmp418
	.short	3
	.byte	16
	.byte	0
	.byte	159
	.quad	0
	.quad	0
.Ldebug_loc28:
	.quad	.Ltmp420
	.quad	.Ltmp423
	.short	1
	.byte	93
	.quad	0
	.quad	0
.Ldebug_loc29:
	.quad	.Ltmp430
	.quad	.Ltmp432
	.short	3
	.byte	86
	.byte	147
	.byte	8
	.quad	.Ltmp433
	.quad	.Ltmp435
	.short	3
	.byte	86
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc30:
	.quad	.Ltmp436
	.quad	.Ltmp442
	.short	1
	.byte	86
	.quad	0
	.quad	0
.Ldebug_loc31:
	.quad	.Lfunc_begin6
	.quad	.Ltmp446
	.short	1
	.byte	85
	.quad	.Ltmp446
	.quad	.Ltmp457
	.short	1
	.byte	94
	.quad	.Ltmp468
	.quad	.Lfunc_end6
	.short	1
	.byte	94
	.quad	0
	.quad	0
.Ldebug_loc32:
	.quad	.Lfunc_begin6
	.quad	.Ltmp446
	.short	1
	.byte	84
	.quad	.Ltmp446
	.quad	.Ltmp467
	.short	1
	.byte	92
	.quad	.Ltmp468
	.quad	.Lfunc_end6
	.short	1
	.byte	92
	.quad	0
	.quad	0
.Ldebug_loc33:
	.quad	.Ltmp448
	.quad	.Ltmp449
	.short	3
	.byte	83
	.byte	147
	.byte	8
	.quad	.Ltmp449
	.quad	.Ltmp450
	.short	6
	.byte	83
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.quad	.Ltmp452
	.quad	.Ltmp454
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.quad	.Ltmp460
	.quad	.Ltmp461
	.short	6
	.byte	83
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.quad	.Ltmp461
	.quad	.Ltmp462
	.short	6
	.byte	83
	.byte	147
	.byte	8
	.byte	93
	.byte	147
	.byte	8
	.quad	.Ltmp463
	.quad	.Ltmp465
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	93
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc34:
	.quad	.Ltmp452
	.quad	.Ltmp454
	.short	3
	.byte	80
	.byte	147
	.byte	8
	.quad	.Ltmp463
	.quad	.Ltmp465
	.short	3
	.byte	80
	.byte	147
	.byte	8
	.quad	.Ltmp465
	.quad	.Lfunc_end6
	.short	10
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc35:
	.quad	.Lfunc_begin7
	.quad	.Ltmp473
	.short	1
	.byte	85
	.quad	.Ltmp473
	.quad	.Ltmp489
	.short	1
	.byte	94
	.quad	.Ltmp490
	.quad	.Ltmp491
	.short	1
	.byte	94
	.quad	.Ltmp492
	.quad	.Lfunc_end7
	.short	1
	.byte	94
	.quad	0
	.quad	0
.Ldebug_loc36:
	.quad	.Lfunc_begin7
	.quad	.Ltmp475
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp476
	.quad	.Ltmp479
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp492
	.quad	.Ltmp493
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc37:
	.quad	.Lfunc_begin8
	.quad	.Ltmp496
	.short	1
	.byte	85
	.quad	.Ltmp496
	.quad	.Ltmp509
	.short	2
	.byte	119
	.byte	56
	.quad	.Ltmp510
	.quad	.Ltmp511
	.short	1
	.byte	85
	.quad	0
	.quad	0
.Ldebug_loc38:
	.quad	.Ltmp501
	.quad	.Ltmp502
	.short	3
	.byte	86
	.byte	147
	.byte	8
	.quad	.Ltmp502
	.quad	.Ltmp503
	.short	6
	.byte	86
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc39:
	.quad	.Lfunc_begin9
	.quad	.Ltmp513
	.short	1
	.byte	85
	.quad	.Ltmp513
	.quad	.Ltmp516
	.short	1
	.byte	83
	.quad	.Ltmp517
	.quad	.Lfunc_end9
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc40:
	.quad	.Lfunc_begin9
	.quad	.Ltmp513
	.short	1
	.byte	84
	.quad	.Ltmp513
	.quad	.Ltmp515
	.short	1
	.byte	94
	.quad	.Ltmp517
	.quad	.Lfunc_end9
	.short	1
	.byte	94
	.quad	0
	.quad	0
.Ldebug_loc41:
	.quad	.Lfunc_begin10
	.quad	.Ltmp522
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp522
	.quad	.Ltmp522
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.quad	.Ltmp522
	.quad	.Ltmp562
	.short	6
	.byte	93
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.quad	.Ltmp564
	.quad	.Lfunc_end10
	.short	6
	.byte	93
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc42:
	.quad	.Lfunc_begin10
	.quad	.Ltmp522
	.short	6
	.byte	82
	.byte	147
	.byte	8
	.byte	88
	.byte	147
	.byte	8
	.quad	.Ltmp522
	.quad	.Ltmp522
	.short	6
	.byte	82
	.byte	147
	.byte	8
	.byte	86
	.byte	147
	.byte	8
	.quad	.Ltmp522
	.quad	.Ltmp563
	.short	6
	.byte	95
	.byte	147
	.byte	8
	.byte	86
	.byte	147
	.byte	8
	.quad	.Ltmp564
	.quad	.Lfunc_end10
	.short	6
	.byte	95
	.byte	147
	.byte	8
	.byte	86
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc43:
	.quad	.Ltmp519
	.quad	.Ltmp520
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp520
	.quad	.Ltmp521
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.quad	.Ltmp521
	.quad	.Ltmp525
	.short	6
	.byte	93
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.quad	.Ltmp527
	.quad	.Ltmp533
	.short	6
	.byte	93
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.quad	.Ltmp534
	.quad	.Ltmp540
	.short	6
	.byte	93
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.quad	.Ltmp564
	.quad	.Ltmp569
	.short	6
	.byte	93
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc44:
	.quad	.Ltmp523
	.quad	.Ltmp561
	.short	3
	.byte	119
	.byte	248
	.byte	1
	.quad	.Ltmp564
	.quad	.Lfunc_end10
	.short	3
	.byte	119
	.byte	248
	.byte	1
	.quad	0
	.quad	0
.Ldebug_loc45:
	.quad	.Ltmp524
	.quad	.Ltmp529
	.short	3
	.byte	80
	.byte	147
	.byte	8
	.quad	.Ltmp533
	.quad	.Ltmp533
	.short	3
	.byte	80
	.byte	147
	.byte	8
	.quad	.Ltmp545
	.quad	.Ltmp546
	.short	3
	.byte	80
	.byte	147
	.byte	8
	.quad	.Ltmp546
	.quad	.Ltmp548
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	85
	.byte	147
	.byte	8
	.quad	.Ltmp549
	.quad	.Ltmp550
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	85
	.byte	147
	.byte	8
	.quad	.Ltmp551
	.quad	.Ltmp554
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	85
	.byte	147
	.byte	8
	.quad	.Ltmp570
	.quad	.Ltmp573
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	85
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc46:
	.quad	.Ltmp526
	.quad	.Ltmp527
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	82
	.byte	147
	.byte	8
	.quad	.Ltmp533
	.quad	.Ltmp534
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp575
	.quad	.Lfunc_end10
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc47:
	.quad	.Ltmp528
	.quad	.Ltmp533
	.short	11
	.byte	147
	.byte	16
	.byte	119
	.byte	208
	.byte	3
	.byte	35
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp534
	.quad	.Ltmp535
	.short	11
	.byte	147
	.byte	16
	.byte	119
	.byte	208
	.byte	3
	.byte	35
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp535
	.quad	.Ltmp537
	.short	14
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.byte	119
	.byte	208
	.byte	3
	.byte	35
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp537
	.quad	.Ltmp540
	.short	15
	.byte	86
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.byte	119
	.byte	208
	.byte	3
	.byte	35
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp564
	.quad	.Ltmp567
	.short	15
	.byte	86
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.byte	119
	.byte	208
	.byte	3
	.byte	35
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp568
	.quad	.Ltmp569
	.short	15
	.byte	86
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.byte	119
	.byte	208
	.byte	3
	.byte	35
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc48:
	.quad	.Ltmp530
	.quad	.Ltmp533
	.short	3
	.byte	80
	.byte	147
	.byte	8
	.quad	.Ltmp534
	.quad	.Ltmp538
	.short	3
	.byte	80
	.byte	147
	.byte	8
	.quad	.Ltmp564
	.quad	.Ltmp565
	.short	3
	.byte	80
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc49:
	.quad	.Ltmp532
	.quad	.Ltmp533
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp541
	.quad	.Ltmp541
	.short	8
	.byte	80
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp541
	.quad	.Ltmp566
	.short	10
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp566
	.quad	.Ltmp566
	.short	8
	.byte	80
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp566
	.quad	.Ltmp568
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc50:
	.quad	.Ltmp543
	.quad	.Ltmp544
	.short	4
	.byte	117
	.byte	24
	.byte	6
	.byte	159
	.quad	0
	.quad	0
.Ldebug_loc51:
	.quad	.Ltmp556
	.quad	.Ltmp557
	.short	1
	.byte	85
	.quad	.Ltmp574
	.quad	.Lfunc_end10
	.short	1
	.byte	86
	.quad	0
	.quad	0
.Ldebug_loc52:
	.quad	.Ltmp571
	.quad	.Ltmp572
	.short	1
	.byte	85
	.quad	.Ltmp572
	.quad	.Lfunc_end10
	.short	3
	.byte	119
	.byte	128
	.byte	1
	.quad	0
	.quad	0
.Ldebug_loc53:
	.quad	.Ltmp574
	.quad	.Lfunc_end10
	.short	1
	.byte	86
	.quad	0
	.quad	0
.Ldebug_loc54:
	.quad	.Lfunc_begin11
	.quad	.Ltmp577
	.short	6
	.byte	85
	.byte	147
	.byte	8
	.byte	84
	.byte	147
	.byte	8
	.quad	.Ltmp577
	.quad	.Ltmp577
	.short	6
	.byte	85
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp577
	.quad	.Ltmp584
	.short	6
	.byte	95
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp585
	.quad	.Lfunc_end11
	.short	6
	.byte	95
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc55:
	.quad	.Lfunc_begin11
	.quad	.Ltmp577
	.short	1
	.byte	81
	.quad	.Ltmp577
	.quad	.Ltmp580
	.short	1
	.byte	83
	.quad	.Ltmp585
	.quad	.Lfunc_end11
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc56:
	.quad	.Lfunc_begin11
	.quad	.Ltmp577
	.short	1
	.byte	82
	.quad	.Ltmp577
	.quad	.Ltmp583
	.short	2
	.byte	119
	.byte	28
	.quad	.Ltmp585
	.quad	.Lfunc_end11
	.short	2
	.byte	119
	.byte	28
	.quad	0
	.quad	0
.Ldebug_loc57:
	.quad	.Ltmp581
	.quad	.Ltmp582
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc58:
	.quad	.Ltmp663
	.quad	.Ltmp664
	.short	10
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp664
	.quad	.Ltmp665
	.short	8
	.byte	83
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp665
	.quad	.Ltmp676
	.short	7
	.byte	83
	.byte	147
	.byte	8
	.byte	119
	.byte	56
	.byte	147
	.byte	8
	.quad	.Ltmp676
	.quad	.Ltmp679
	.short	6
	.byte	83
	.byte	147
	.byte	8
	.byte	80
	.byte	147
	.byte	8
	.quad	.Ltmp717
	.quad	.Ltmp719
	.short	6
	.byte	83
	.byte	147
	.byte	8
	.byte	80
	.byte	147
	.byte	8
	.quad	.Ltmp719
	.quad	.Ltmp720
	.short	7
	.byte	83
	.byte	147
	.byte	8
	.byte	119
	.byte	56
	.byte	147
	.byte	8
	.quad	.Ltmp720
	.quad	.Ltmp721
	.short	6
	.byte	83
	.byte	147
	.byte	8
	.byte	80
	.byte	147
	.byte	8
	.quad	.Ltmp722
	.quad	.Ltmp722
	.short	6
	.byte	83
	.byte	147
	.byte	8
	.byte	80
	.byte	147
	.byte	8
	.quad	.Ltmp722
	.quad	.Ltmp723
	.short	6
	.byte	83
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp723
	.quad	.Ltmp725
	.short	7
	.byte	83
	.byte	147
	.byte	8
	.byte	119
	.byte	56
	.byte	147
	.byte	8
	.quad	.Ltmp733
	.quad	.Ltmp733
	.short	8
	.byte	83
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp733
	.quad	.Ltmp734
	.short	10
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp734
	.quad	.Ltmp734
	.short	8
	.byte	83
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp734
	.quad	.Ltmp735
	.short	7
	.byte	83
	.byte	147
	.byte	8
	.byte	119
	.byte	56
	.byte	147
	.byte	8
	.quad	.Ltmp736
	.quad	.Ltmp739
	.short	9
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	119
	.byte	56
	.byte	147
	.byte	8
	.quad	.Ltmp739
	.quad	.Ltmp745
	.short	7
	.byte	83
	.byte	147
	.byte	8
	.byte	119
	.byte	56
	.byte	147
	.byte	8
	.quad	.Ltmp747
	.quad	.Lfunc_end12
	.short	7
	.byte	83
	.byte	147
	.byte	8
	.byte	119
	.byte	56
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc59:
	.quad	.Ltmp663
	.quad	.Ltmp668
	.short	10
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp668
	.quad	.Ltmp668
	.short	8
	.byte	94
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp668
	.quad	.Ltmp669
	.short	6
	.byte	94
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.quad	.Ltmp717
	.quad	.Ltmp717
	.short	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.quad	.Ltmp717
	.quad	.Ltmp719
	.short	10
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp719
	.quad	.Ltmp719
	.short	8
	.byte	94
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp719
	.quad	.Ltmp720
	.short	6
	.byte	94
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.quad	.Ltmp722
	.quad	.Ltmp722
	.short	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.quad	.Ltmp722
	.quad	.Ltmp724
	.short	10
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp724
	.quad	.Ltmp724
	.short	8
	.byte	94
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp724
	.quad	.Ltmp725
	.short	6
	.byte	94
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.quad	.Ltmp732
	.quad	.Ltmp735
	.short	6
	.byte	94
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.quad	.Ltmp739
	.quad	.Ltmp746
	.short	6
	.byte	94
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.quad	.Ltmp747
	.quad	.Lfunc_end12
	.short	6
	.byte	94
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc60:
	.quad	.Ltmp670
	.quad	.Ltmp675
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc61:
	.quad	.Ltmp672
	.quad	.Ltmp675
	.short	11
	.byte	147
	.byte	8
	.byte	119
	.byte	192
	.byte	3
	.byte	35
	.byte	40
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp675
	.quad	.Ltmp685
	.short	12
	.byte	83
	.byte	147
	.byte	8
	.byte	119
	.byte	192
	.byte	3
	.byte	35
	.byte	40
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp717
	.quad	.Ltmp722
	.short	12
	.byte	83
	.byte	147
	.byte	8
	.byte	119
	.byte	192
	.byte	3
	.byte	35
	.byte	40
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc62:
	.quad	.Ltmp674
	.quad	.Ltmp680
	.short	1
	.byte	82
	.quad	.Ltmp717
	.quad	.Ltmp721
	.short	1
	.byte	82
	.quad	0
	.quad	0
.Ldebug_loc63:
	.quad	.Ltmp680
	.quad	.Ltmp681
	.short	1
	.byte	80
	.quad	0
	.quad	0
.Ldebug_loc64:
	.quad	.Ltmp682
	.quad	.Ltmp686
	.short	1
	.byte	86
	.quad	.Ltmp690
	.quad	.Ltmp694
	.short	1
	.byte	86
	.quad	.Ltmp699
	.quad	.Ltmp704
	.short	1
	.byte	86
	.quad	.Ltmp705
	.quad	.Ltmp706
	.short	1
	.byte	86
	.quad	.Ltmp714
	.quad	.Ltmp717
	.short	1
	.byte	86
	.quad	0
	.quad	0
.Ldebug_loc65:
	.quad	.Ltmp683
	.quad	.Ltmp684
	.short	5
	.byte	119
	.byte	240
	.byte	3
	.byte	147
	.byte	8
	.quad	.Ltmp684
	.quad	.Ltmp687
	.short	15
	.byte	119
	.byte	240
	.byte	3
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	8
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp687
	.quad	.Ltmp688
	.short	13
	.byte	92
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	8
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp688
	.quad	.Ltmp689
	.short	11
	.byte	92
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.byte	16
	.byte	8
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp689
	.quad	.Ltmp696
	.short	9
	.byte	92
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.byte	83
	.byte	147
	.byte	8
	.quad	.Ltmp697
	.quad	.Ltmp698
	.short	9
	.byte	92
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.byte	83
	.byte	147
	.byte	8
	.quad	.Ltmp699
	.quad	.Ltmp704
	.short	9
	.byte	92
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.byte	83
	.byte	147
	.byte	8
	.quad	.Ltmp705
	.quad	.Ltmp706
	.short	9
	.byte	92
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.byte	83
	.byte	147
	.byte	8
	.quad	.Ltmp714
	.quad	.Ltmp717
	.short	9
	.byte	92
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.byte	83
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc66:
	.quad	.Ltmp702
	.quad	.Ltmp703
	.short	3
	.byte	80
	.byte	147
	.byte	8
	.quad	.Ltmp703
	.quad	.Ltmp704
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	93
	.byte	147
	.byte	8
	.quad	.Ltmp714
	.quad	.Ltmp717
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	93
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc67:
	.quad	.Ltmp707
	.quad	.Ltmp708
	.short	3
	.byte	83
	.byte	147
	.byte	8
	.quad	.Ltmp708
	.quad	.Ltmp714
	.short	6
	.byte	83
	.byte	147
	.byte	8
	.byte	86
	.byte	147
	.byte	8
	.quad	.Ltmp725
	.quad	.Ltmp726
	.short	6
	.byte	83
	.byte	147
	.byte	8
	.byte	86
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc68:
	.quad	.Ltmp715
	.quad	.Ltmp716
	.short	5
	.byte	119
	.byte	192
	.byte	0
	.byte	147
	.byte	8
	.quad	.Ltmp716
	.quad	.Ltmp717
	.short	8
	.byte	119
	.byte	192
	.byte	0
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc69:
	.quad	.Lfunc_begin13
	.quad	.Ltmp748
	.short	6
	.byte	85
	.byte	147
	.byte	8
	.byte	84
	.byte	147
	.byte	8
	.quad	.Ltmp748
	.quad	.Ltmp748
	.short	7
	.byte	85
	.byte	147
	.byte	8
	.byte	119
	.byte	32
	.byte	147
	.byte	8
	.quad	.Ltmp748
	.quad	.Ltmp754
	.short	7
	.byte	92
	.byte	147
	.byte	8
	.byte	119
	.byte	32
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc70:
	.quad	.Lfunc_begin13
	.quad	.Ltmp748
	.short	1
	.byte	81
	.quad	.Ltmp748
	.quad	.Ltmp752
	.short	2
	.byte	119
	.byte	28
	.quad	.Ltmp752
	.quad	.Ltmp753
	.short	1
	.byte	81
	.quad	0
	.quad	0
.Ldebug_loc71:
	.quad	.Ltmp750
	.quad	.Ltmp751
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc72:
	.quad	.Lfunc_begin14
	.quad	.Ltmp756
	.short	6
	.byte	85
	.byte	147
	.byte	8
	.byte	84
	.byte	147
	.byte	8
	.quad	.Ltmp756
	.quad	.Ltmp756
	.short	6
	.byte	85
	.byte	147
	.byte	8
	.byte	93
	.byte	147
	.byte	8
	.quad	.Ltmp756
	.quad	.Ltmp757
	.short	6
	.byte	86
	.byte	147
	.byte	8
	.byte	93
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc73:
	.quad	.Lfunc_begin14
	.quad	.Ltmp756
	.short	6
	.byte	81
	.byte	147
	.byte	8
	.byte	82
	.byte	147
	.byte	8
	.quad	.Ltmp756
	.quad	.Ltmp756
	.short	6
	.byte	81
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.quad	.Ltmp756
	.quad	.Ltmp762
	.short	6
	.byte	92
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc74:
	.quad	.Lfunc_begin14
	.quad	.Ltmp756
	.short	1
	.byte	88
	.quad	.Ltmp756
	.quad	.Ltmp760
	.short	1
	.byte	94
	.quad	.Ltmp760
	.quad	.Ltmp761
	.short	1
	.byte	81
	.quad	0
	.quad	0
.Ldebug_loc75:
	.quad	.Ltmp758
	.quad	.Ltmp759
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc76:
	.quad	.Lfunc_begin15
	.quad	.Ltmp765
	.short	6
	.byte	85
	.byte	147
	.byte	8
	.byte	84
	.byte	147
	.byte	8
	.quad	.Ltmp765
	.quad	.Ltmp765
	.short	6
	.byte	85
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.quad	.Ltmp765
	.quad	.Ltmp769
	.short	6
	.byte	86
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc77:
	.quad	.Lfunc_begin15
	.quad	.Ltmp765
	.short	1
	.byte	81
	.quad	.Ltmp765
	.quad	.Ltmp768
	.short	1
	.byte	81
	.quad	0
	.quad	0
.Ldebug_loc78:
	.quad	.Lfunc_begin15
	.quad	.Ltmp764
	.short	1
	.byte	82
	.quad	.Ltmp764
	.quad	.Ltmp765
	.short	1
	.byte	94
	.quad	.Ltmp765
	.quad	.Ltmp772
	.short	1
	.byte	94
	.quad	0
	.quad	0
.Ldebug_loc79:
	.quad	.Ltmp770
	.quad	.Ltmp771
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc80:
	.quad	.Lfunc_begin16
	.quad	.Ltmp775
	.short	1
	.byte	85
	.quad	0
	.quad	0
.Ldebug_loc81:
	.quad	.Lfunc_begin17
	.quad	.Ltmp778
	.short	1
	.byte	85
	.quad	0
	.quad	0
.Ldebug_loc82:
	.quad	.Lfunc_begin18
	.quad	.Ltmp781
	.short	1
	.byte	85
	.quad	0
	.quad	0
.Ldebug_loc83:
	.quad	.Lfunc_begin19
	.quad	.Ltmp784
	.short	1
	.byte	85
	.quad	0
	.quad	0
.Ldebug_loc84:
	.quad	.Lfunc_begin20
	.quad	.Ltmp786
	.short	1
	.byte	85
	.quad	.Ltmp786
	.quad	.Ltmp790
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc85:
	.quad	.Lfunc_begin21
	.quad	.Ltmp792
	.short	1
	.byte	85
	.quad	.Ltmp792
	.quad	.Ltmp796
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc86:
	.quad	.Lfunc_begin22
	.quad	.Ltmp798
	.short	1
	.byte	85
	.quad	.Ltmp798
	.quad	.Ltmp802
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc87:
	.quad	.Lfunc_begin23
	.quad	.Ltmp805
	.short	6
	.byte	85
	.byte	147
	.byte	8
	.byte	84
	.byte	147
	.byte	8
	.quad	.Ltmp805
	.quad	.Ltmp805
	.short	6
	.byte	85
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.quad	.Ltmp805
	.quad	.Ltmp808
	.short	6
	.byte	83
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc88:
	.quad	.Lfunc_begin23
	.quad	.Ltmp804
	.short	1
	.byte	81
	.quad	.Ltmp804
	.quad	.Ltmp805
	.short	1
	.byte	86
	.quad	.Ltmp805
	.quad	.Ltmp809
	.short	1
	.byte	86
	.quad	0
	.quad	0
.Ldebug_loc89:
	.quad	.Ltmp806
	.quad	.Ltmp812
	.short	1
	.byte	94
	.quad	0
	.quad	0
.Ldebug_loc90:
	.quad	.Ltmp811
	.quad	.Ltmp813
	.short	3
	.byte	83
	.byte	147
	.byte	8
	.quad	.Ltmp813
	.quad	.Ltmp814
	.short	6
	.byte	83
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc91:
	.quad	.Ltmp811
	.quad	.Ltmp813
	.short	3
	.byte	83
	.byte	147
	.byte	8
	.quad	.Ltmp813
	.quad	.Ltmp814
	.short	6
	.byte	83
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc92:
	.quad	.Lfunc_begin24
	.quad	.Ltmp816
	.short	6
	.byte	85
	.byte	147
	.byte	8
	.byte	84
	.byte	147
	.byte	8
	.quad	.Ltmp816
	.quad	.Ltmp816
	.short	7
	.byte	85
	.byte	147
	.byte	8
	.byte	119
	.byte	32
	.byte	147
	.byte	8
	.quad	.Ltmp816
	.quad	.Ltmp822
	.short	7
	.byte	92
	.byte	147
	.byte	8
	.byte	119
	.byte	32
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc93:
	.quad	.Lfunc_begin24
	.quad	.Ltmp816
	.short	1
	.byte	81
	.quad	.Ltmp816
	.quad	.Ltmp820
	.short	2
	.byte	119
	.byte	28
	.quad	.Ltmp820
	.quad	.Ltmp821
	.short	1
	.byte	81
	.quad	0
	.quad	0
.Ldebug_loc94:
	.quad	.Ltmp818
	.quad	.Ltmp819
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc95:
	.quad	.Lfunc_begin25
	.quad	.Ltmp824
	.short	1
	.byte	85
	.quad	.Ltmp824
	.quad	.Ltmp828
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc96:
	.quad	.Lfunc_begin26
	.quad	.Ltmp830
	.short	6
	.byte	85
	.byte	147
	.byte	8
	.byte	84
	.byte	147
	.byte	8
	.quad	.Ltmp830
	.quad	.Ltmp830
	.short	6
	.byte	85
	.byte	147
	.byte	8
	.byte	80
	.byte	147
	.byte	8
	.quad	.Ltmp830
	.quad	.Ltmp832
	.short	6
	.byte	81
	.byte	147
	.byte	8
	.byte	80
	.byte	147
	.byte	8
	.quad	.Ltmp832
	.quad	.Ltmp833
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	80
	.byte	147
	.byte	8
	.quad	.Ltmp833
	.quad	.Ltmp834
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc97:
	.quad	.Ltmp830
	.quad	.Ltmp835
	.short	3
	.byte	16
	.byte	0
	.byte	159
	.quad	.Ltmp835
	.quad	.Lfunc_end26
	.short	1
	.byte	80
	.quad	0
	.quad	0
.Ldebug_loc98:
	.quad	.Lfunc_begin27
	.quad	.Ltmp837
	.short	1
	.byte	85
	.quad	.Ltmp837
	.quad	.Ltmp842
	.short	1
	.byte	83
	.quad	.Ltmp843
	.quad	.Lfunc_end27
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc99:
	.quad	.Lfunc_begin27
	.quad	.Ltmp837
	.short	1
	.byte	84
	.quad	.Ltmp837
	.quad	.Ltmp841
	.short	1
	.byte	84
	.quad	.Ltmp843
	.quad	.Ltmp844
	.short	1
	.byte	84
	.quad	0
	.quad	0
.Ldebug_loc100:
	.quad	.Lfunc_begin28
	.quad	.Ltmp847
	.short	1
	.byte	85
	.quad	.Ltmp847
	.quad	.Ltmp850
	.short	1
	.byte	83
	.quad	.Ltmp851
	.quad	.Ltmp854
	.short	1
	.byte	83
	.quad	.Ltmp855
	.quad	.Ltmp856
	.short	1
	.byte	85
	.quad	0
	.quad	0
.Ldebug_loc101:
	.quad	.Ltmp848
	.quad	.Ltmp853
	.short	3
	.byte	80
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc102:
	.quad	.Ltmp848
	.quad	.Ltmp852
	.short	3
	.byte	80
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc103:
	.quad	.Lfunc_begin29
	.quad	.Ltmp862
	.short	1
	.byte	85
	.quad	.Ltmp862
	.quad	.Ltmp873
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc104:
	.quad	.Lfunc_begin29
	.quad	.Ltmp860
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp860
	.quad	.Ltmp861
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.quad	.Ltmp861
	.quad	.Ltmp875
	.short	6
	.byte	93
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc105:
	.quad	.Ltmp863
	.quad	.Ltmp864
	.short	3
	.byte	86
	.byte	147
	.byte	8
	.quad	.Ltmp864
	.quad	.Ltmp869
	.short	6
	.byte	86
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp869
	.quad	.Ltmp874
	.short	6
	.byte	95
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc106:
	.quad	.Lfunc_begin30
	.quad	.Ltmp876
	.short	1
	.byte	85
	.quad	.Ltmp876
	.quad	.Ltmp878
	.short	1
	.byte	83
	.quad	.Ltmp879
	.quad	.Lfunc_end30
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc107:
	.quad	.Lfunc_begin31
	.quad	.Ltmp915
	.short	1
	.byte	85
	.quad	.Ltmp915
	.quad	.Ltmp933
	.short	1
	.byte	83
	.quad	.Ltmp934
	.quad	.Ltmp935
	.short	1
	.byte	83
	.quad	.Ltmp936
	.quad	.Ltmp941
	.short	1
	.byte	83
	.quad	.Ltmp943
	.quad	.Ltmp943
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc108:
	.quad	.Ltmp920
	.quad	.Ltmp939
	.short	1
	.byte	94
	.quad	.Ltmp943
	.quad	.Ltmp943
	.short	1
	.byte	94
	.quad	0
	.quad	0
.Ldebug_loc109:
	.quad	.Ltmp928
	.quad	.Ltmp932
	.short	3
	.byte	82
	.byte	147
	.byte	8
	.quad	.Ltmp934
	.quad	.Ltmp935
	.short	3
	.byte	82
	.byte	147
	.byte	8
	.quad	.Ltmp936
	.quad	.Ltmp937
	.short	3
	.byte	82
	.byte	147
	.byte	8
	.quad	.Ltmp937
	.quad	.Ltmp938
	.short	6
	.byte	82
	.byte	147
	.byte	8
	.byte	85
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc110:
	.quad	.Ltmp930
	.quad	.Ltmp931
	.short	3
	.byte	84
	.byte	147
	.byte	8
	.quad	.Ltmp931
	.quad	.Ltmp932
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc111:
	.quad	.Lfunc_begin32
	.quad	.Ltmp947
	.short	1
	.byte	85
	.quad	.Ltmp947
	.quad	.Ltmp956
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc112:
	.quad	.Ltmp952
	.quad	.Ltmp954
	.short	1
	.byte	80
	.quad	0
	.quad	0
.Ldebug_loc113:
	.quad	.Lfunc_begin33
	.quad	.Ltmp988
	.short	1
	.byte	85
	.quad	.Ltmp988
	.quad	.Ltmp1018
	.short	1
	.byte	95
	.quad	.Ltmp1019
	.quad	.Lfunc_end33
	.short	1
	.byte	95
	.quad	0
	.quad	0
.Ldebug_loc114:
	.quad	.Lfunc_begin33
	.quad	.Ltmp988
	.short	1
	.byte	84
	.quad	.Ltmp988
	.quad	.Ltmp1006
	.short	1
	.byte	94
	.quad	.Ltmp1007
	.quad	.Ltmp1010
	.short	1
	.byte	94
	.quad	.Ltmp1011
	.quad	.Ltmp1013
	.short	1
	.byte	94
	.quad	0
	.quad	0
.Ldebug_loc115:
	.quad	.Lfunc_begin34
	.quad	.Ltmp1020
	.short	1
	.byte	85
	.quad	.Ltmp1020
	.quad	.Ltmp1028
	.short	1
	.byte	94
	.quad	.Ltmp1029
	.quad	.Lfunc_end34
	.short	1
	.byte	94
	.quad	0
	.quad	0
.Ldebug_loc116:
	.quad	.Lfunc_begin34
	.quad	.Ltmp1020
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp1020
	.quad	.Ltmp1020
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.quad	.Ltmp1020
	.quad	.Ltmp1027
	.short	6
	.byte	92
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.quad	.Ltmp1029
	.quad	.Lfunc_end34
	.short	6
	.byte	92
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc117:
	.quad	.Ltmp1021
	.quad	.Ltmp1026
	.short	1
	.byte	83
	.quad	.Ltmp1029
	.quad	.Lfunc_end34
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc118:
	.quad	.Lfunc_begin35
	.quad	.Ltmp1072
	.short	1
	.byte	85
	.quad	.Ltmp1072
	.quad	.Ltmp1130
	.short	2
	.byte	119
	.byte	32
	.quad	.Ltmp1131
	.quad	.Lfunc_end35
	.short	2
	.byte	119
	.byte	32
	.quad	0
	.quad	0
.Ldebug_loc119:
	.quad	.Lfunc_begin35
	.quad	.Ltmp1072
	.short	1
	.byte	84
	.quad	.Ltmp1072
	.quad	.Ltmp1130
	.short	3
	.byte	119
	.byte	224
	.byte	0
	.quad	.Ltmp1131
	.quad	.Lfunc_end35
	.short	3
	.byte	119
	.byte	224
	.byte	0
	.quad	0
	.quad	0
.Ldebug_loc120:
	.quad	.Ltmp1078
	.quad	.Ltmp1083
	.short	12
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp1083
	.quad	.Ltmp1084
	.short	13
	.byte	93
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp1084
	.quad	.Ltmp1084
	.short	11
	.byte	93
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp1084
	.quad	.Ltmp1091
	.short	9
	.byte	93
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp1092
	.quad	.Ltmp1095
	.short	9
	.byte	93
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp1109
	.quad	.Ltmp1117
	.short	3
	.byte	93
	.byte	147
	.byte	8
	.quad	.Ltmp1123
	.quad	.Ltmp1124
	.short	3
	.byte	93
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc121:
	.quad	.Ltmp1079
	.quad	.Ltmp1086
	.short	3
	.byte	17
	.byte	0
	.byte	159
	.quad	.Ltmp1086
	.quad	.Ltmp1089
	.short	1
	.byte	80
	.quad	.Ltmp1092
	.quad	.Ltmp1093
	.short	1
	.byte	80
	.quad	0
	.quad	0
.Ldebug_loc122:
	.quad	.Lfunc_begin36
	.quad	.Ltmp1135
	.short	1
	.byte	85
	.quad	.Ltmp1135
	.quad	.Ltmp1152
	.short	1
	.byte	94
	.quad	0
	.quad	0
.Ldebug_loc123:
	.quad	.Lfunc_begin36
	.quad	.Ltmp1134
	.short	1
	.byte	84
	.quad	.Ltmp1134
	.quad	.Ltmp1151
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc124:
	.quad	.Ltmp1138
	.quad	.Ltmp1139
	.short	3
	.byte	16
	.byte	0
	.byte	159
	.quad	.Ltmp1139
	.quad	.Ltmp1150
	.short	1
	.byte	86
	.quad	0
	.quad	0
.Ldebug_loc125:
	.quad	.Ltmp1138
	.quad	.Ltmp1141
	.short	3
	.byte	17
	.byte	0
	.byte	159
	.quad	.Ltmp1141
	.quad	.Ltmp1148
	.short	1
	.byte	92
	.quad	0
	.quad	0
.Ldebug_loc126:
	.quad	.Ltmp1141
	.quad	.Ltmp1143
	.short	3
	.byte	16
	.byte	0
	.byte	159
	.quad	.Ltmp1143
	.quad	.Ltmp1145
	.short	1
	.byte	81
	.quad	.Ltmp1146
	.quad	.Ltmp1148
	.short	1
	.byte	81
	.quad	0
	.quad	0
.Ldebug_loc127:
	.quad	.Ltmp1147
	.quad	.Ltmp1148
	.short	1
	.byte	85
	.quad	0
	.quad	0
.Ldebug_loc128:
	.quad	.Lfunc_begin37
	.quad	.Ltmp1175
	.short	1
	.byte	85
	.quad	.Ltmp1175
	.quad	.Ltmp1196
	.short	1
	.byte	95
	.quad	.Ltmp1197
	.quad	.Lfunc_end37
	.short	1
	.byte	95
	.quad	0
	.quad	0
.Ldebug_loc129:
	.quad	.Lfunc_begin37
	.quad	.Ltmp1175
	.short	1
	.byte	84
	.quad	.Ltmp1175
	.quad	.Ltmp1186
	.short	1
	.byte	94
	.quad	.Ltmp1187
	.quad	.Ltmp1189
	.short	1
	.byte	94
	.quad	.Ltmp1190
	.quad	.Ltmp1191
	.short	1
	.byte	94
	.quad	0
	.quad	0
.Ldebug_loc130:
	.quad	.Lfunc_begin38
	.quad	.Ltmp1198
	.short	1
	.byte	85
	.quad	.Ltmp1198
	.quad	.Ltmp1207
	.short	1
	.byte	93
	.quad	.Ltmp1208
	.quad	.Lfunc_end38
	.short	1
	.byte	93
	.quad	0
	.quad	0
.Ldebug_loc131:
	.quad	.Lfunc_begin38
	.quad	.Ltmp1198
	.short	1
	.byte	84
	.quad	.Ltmp1198
	.quad	.Ltmp1206
	.short	1
	.byte	94
	.quad	.Ltmp1208
	.quad	.Lfunc_end38
	.short	1
	.byte	94
	.quad	0
	.quad	0
.Ldebug_loc132:
	.quad	.Lfunc_begin39
	.quad	.Ltmp1209
	.short	1
	.byte	85
	.quad	.Ltmp1209
	.quad	.Ltmp1213
	.short	1
	.byte	95
	.quad	.Ltmp1215
	.quad	.Lfunc_end39
	.short	1
	.byte	95
	.quad	0
	.quad	0
.Ldebug_loc133:
	.quad	.Lfunc_begin39
	.quad	.Ltmp1209
	.short	1
	.byte	84
	.quad	.Ltmp1209
	.quad	.Ltmp1214
	.short	1
	.byte	94
	.quad	.Ltmp1215
	.quad	.Lfunc_end39
	.short	1
	.byte	94
	.quad	0
	.quad	0
.Ldebug_loc134:
	.quad	.Lfunc_begin40
	.quad	.Ltmp1220
	.short	1
	.byte	85
	.quad	.Ltmp1220
	.quad	.Ltmp1277
	.short	1
	.byte	93
	.quad	.Ltmp1279
	.quad	.Lfunc_end40
	.short	1
	.byte	93
	.quad	0
	.quad	0
.Ldebug_loc135:
	.quad	.Lfunc_begin40
	.quad	.Ltmp1219
	.short	1
	.byte	84
	.quad	.Ltmp1219
	.quad	.Ltmp1239
	.short	1
	.byte	83
	.quad	.Ltmp1241
	.quad	.Ltmp1245
	.short	1
	.byte	83
	.quad	.Ltmp1262
	.quad	.Ltmp1275
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc136:
	.quad	.Lfunc_begin40
	.quad	.Ltmp1217
	.short	1
	.byte	81
	.quad	.Ltmp1217
	.quad	.Ltmp1276
	.short	3
	.byte	119
	.byte	192
	.byte	0
	.quad	.Ltmp1278
	.quad	.Lfunc_end40
	.short	3
	.byte	119
	.byte	192
	.byte	0
	.quad	0
	.quad	0
.Ldebug_loc137:
	.quad	.Ltmp1226
	.quad	.Ltmp1275
	.short	1
	.byte	92
	.quad	.Ltmp1279
	.quad	.Lfunc_end40
	.short	1
	.byte	92
	.quad	0
	.quad	0
.Ldebug_loc138:
	.quad	.Ltmp1229
	.quad	.Ltmp1233
	.short	1
	.byte	86
	.quad	.Ltmp1241
	.quad	.Ltmp1242
	.short	1
	.byte	86
	.quad	.Ltmp1262
	.quad	.Ltmp1265
	.short	1
	.byte	86
	.quad	0
	.quad	0
.Ldebug_loc139:
	.quad	.Ltmp1230
	.quad	.Ltmp1232
	.short	3
	.byte	80
	.byte	147
	.byte	8
	.quad	.Ltmp1262
	.quad	.Ltmp1264
	.short	3
	.byte	80
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc140:
	.quad	.Ltmp1235
	.quad	.Ltmp1241
	.short	1
	.byte	86
	.quad	.Ltmp1248
	.quad	.Ltmp1249
	.short	1
	.byte	86
	.quad	.Ltmp1267
	.quad	.Ltmp1269
	.short	1
	.byte	86
	.quad	0
	.quad	0
.Ldebug_loc141:
	.quad	.Ltmp1236
	.quad	.Ltmp1238
	.short	3
	.byte	80
	.byte	147
	.byte	8
	.quad	.Ltmp1267
	.quad	.Ltmp1268
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc142:
	.quad	.Ltmp1242
	.quad	.Ltmp1247
	.short	1
	.byte	86
	.quad	.Ltmp1270
	.quad	.Ltmp1272
	.short	1
	.byte	86
	.quad	0
	.quad	0
.Ldebug_loc143:
	.quad	.Ltmp1243
	.quad	.Ltmp1246
	.short	3
	.byte	80
	.byte	147
	.byte	8
	.quad	.Ltmp1270
	.quad	.Ltmp1271
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc144:
	.quad	.Lfunc_begin41
	.quad	.Ltmp1286
	.short	1
	.byte	85
	.quad	.Ltmp1287
	.quad	.Ltmp1289
	.short	1
	.byte	85
	.quad	.Ltmp1290
	.quad	.Ltmp1291
	.short	1
	.byte	85
	.quad	0
	.quad	0
.Ldebug_loc145:
	.quad	.Ltmp1287
	.quad	.Lfunc_end41
	.short	10
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc146:
	.quad	.Lfunc_begin42
	.quad	.Ltmp1296
	.short	1
	.byte	85
	.quad	.Ltmp1296
	.quad	.Ltmp1314
	.short	1
	.byte	95
	.quad	0
	.quad	0
.Ldebug_loc147:
	.quad	.Lfunc_begin42
	.quad	.Ltmp1295
	.short	1
	.byte	84
	.quad	.Ltmp1295
	.quad	.Ltmp1311
	.short	1
	.byte	94
	.quad	0
	.quad	0
.Ldebug_loc148:
	.quad	.Ltmp1301
	.quad	.Ltmp1310
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc149:
	.quad	.Ltmp1305
	.quad	.Ltmp1313
	.short	2
	.byte	119
	.byte	32
	.quad	0
	.quad	0
.Ldebug_loc150:
	.quad	.Ltmp1308
	.quad	.Ltmp1309
	.short	3
	.byte	86
	.byte	147
	.byte	8
	.quad	.Ltmp1309
	.quad	.Ltmp1312
	.short	6
	.byte	86
	.byte	147
	.byte	8
	.byte	93
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc151:
	.quad	.Lfunc_begin43
	.quad	.Ltmp1316
	.short	1
	.byte	85
	.quad	0
	.quad	0
.Ldebug_loc152:
	.quad	.Lfunc_begin44
	.quad	.Ltmp1319
	.short	1
	.byte	85
	.quad	0
	.quad	0
.Ldebug_loc153:
	.quad	.Lfunc_begin45
	.quad	.Ltmp1321
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp1321
	.quad	.Ltmp1321
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.quad	.Ltmp1321
	.quad	.Ltmp1347
	.short	6
	.byte	93
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.quad	.Ltmp1349
	.quad	.Lfunc_end45
	.short	6
	.byte	93
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc154:
	.quad	.Lfunc_begin45
	.quad	.Ltmp1321
	.short	6
	.byte	82
	.byte	147
	.byte	8
	.byte	88
	.byte	147
	.byte	8
	.quad	.Ltmp1321
	.quad	.Ltmp1321
	.short	6
	.byte	82
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp1321
	.quad	.Ltmp1348
	.short	6
	.byte	95
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp1349
	.quad	.Lfunc_end45
	.short	6
	.byte	95
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc155:
	.quad	.Ltmp1322
	.quad	.Ltmp1346
	.short	3
	.byte	119
	.byte	232
	.byte	1
	.quad	.Ltmp1349
	.quad	.Lfunc_end45
	.short	3
	.byte	119
	.byte	232
	.byte	1
	.quad	0
	.quad	0
.Ldebug_loc156:
	.quad	.Ltmp1323
	.quad	.Ltmp1327
	.short	3
	.byte	80
	.byte	147
	.byte	8
	.quad	.Ltmp1330
	.quad	.Ltmp1331
	.short	3
	.byte	80
	.byte	147
	.byte	8
	.quad	.Ltmp1331
	.quad	.Ltmp1333
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	85
	.byte	147
	.byte	8
	.quad	.Ltmp1334
	.quad	.Ltmp1335
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	85
	.byte	147
	.byte	8
	.quad	.Ltmp1336
	.quad	.Ltmp1339
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	85
	.byte	147
	.byte	8
	.quad	.Ltmp1349
	.quad	.Ltmp1352
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	85
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc157:
	.quad	.Ltmp1325
	.quad	.Ltmp1326
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	82
	.byte	147
	.byte	8
	.quad	.Ltmp1343
	.quad	.Ltmp1343
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	82
	.byte	147
	.byte	8
	.quad	.Ltmp1343
	.quad	.Ltmp1345
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp1354
	.quad	.Lfunc_end45
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc158:
	.quad	.Ltmp1328
	.quad	.Ltmp1329
	.short	4
	.byte	117
	.byte	24
	.byte	6
	.byte	159
	.quad	0
	.quad	0
.Ldebug_loc159:
	.quad	.Ltmp1341
	.quad	.Ltmp1342
	.short	1
	.byte	85
	.quad	.Ltmp1353
	.quad	.Lfunc_end45
	.short	1
	.byte	86
	.quad	0
	.quad	0
.Ldebug_loc160:
	.quad	.Ltmp1350
	.quad	.Ltmp1351
	.short	1
	.byte	85
	.quad	.Ltmp1351
	.quad	.Lfunc_end45
	.short	3
	.byte	119
	.byte	232
	.byte	0
	.quad	0
	.quad	0
.Ldebug_loc161:
	.quad	.Ltmp1353
	.quad	.Lfunc_end45
	.short	1
	.byte	86
	.quad	0
	.quad	0
.Ldebug_loc162:
	.quad	.Lfunc_begin46
	.quad	.Ltmp1357
	.short	1
	.byte	85
	.quad	0
	.quad	0
.Ldebug_loc163:
	.quad	.Lfunc_begin47
	.quad	.Ltmp1360
	.short	1
	.byte	85
	.quad	0
	.quad	0
.Ldebug_loc164:
	.quad	.Lfunc_begin48
	.quad	.Ltmp1363
	.short	1
	.byte	85
	.quad	0
	.quad	0
.Ldebug_loc165:
	.quad	.Lfunc_begin49
	.quad	.Ltmp1366
	.short	1
	.byte	85
	.quad	0
	.quad	0
.Ldebug_loc166:
	.quad	.Lfunc_begin50
	.quad	.Ltmp1368
	.short	1
	.byte	85
	.quad	.Ltmp1368
	.quad	.Ltmp1372
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc167:
	.quad	.Lfunc_begin51
	.quad	.Ltmp1374
	.short	1
	.byte	85
	.quad	.Ltmp1374
	.quad	.Ltmp1378
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc168:
	.quad	.Lfunc_begin52
	.quad	.Ltmp1380
	.short	1
	.byte	85
	.quad	.Ltmp1380
	.quad	.Ltmp1384
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc169:
	.quad	.Lfunc_begin53
	.quad	.Ltmp1386
	.short	1
	.byte	85
	.quad	.Ltmp1386
	.quad	.Ltmp1390
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc170:
	.quad	.Lfunc_begin54
	.quad	.Ltmp1444
	.short	1
	.byte	85
	.quad	.Ltmp1444
	.quad	.Ltmp1498
	.short	3
	.byte	119
	.byte	216
	.byte	0
	.quad	.Ltmp1499
	.quad	.Lfunc_end54
	.short	3
	.byte	119
	.byte	216
	.byte	0
	.quad	0
	.quad	0
.Ldebug_loc171:
	.quad	.Lfunc_begin54
	.quad	.Ltmp1444
	.short	1
	.byte	84
	.quad	.Ltmp1444
	.quad	.Ltmp1498
	.short	3
	.byte	119
	.byte	208
	.byte	0
	.quad	.Ltmp1499
	.quad	.Lfunc_end54
	.short	3
	.byte	119
	.byte	208
	.byte	0
	.quad	0
	.quad	0
.Ldebug_loc172:
	.quad	.Lfunc_begin54
	.quad	.Ltmp1444
	.short	1
	.byte	81
	.quad	.Ltmp1444
	.quad	.Ltmp1447
	.short	1
	.byte	86
	.quad	.Ltmp1448
	.quad	.Ltmp1466
	.short	1
	.byte	86
	.quad	.Ltmp1473
	.quad	.Ltmp1474
	.short	1
	.byte	86
	.quad	.Ltmp1475
	.quad	.Ltmp1476
	.short	1
	.byte	86
	.quad	0
	.quad	0
.Ldebug_loc173:
	.quad	.Lfunc_begin54
	.quad	.Ltmp1444
	.short	1
	.byte	82
	.quad	.Ltmp1444
	.quad	.Ltmp1481
	.short	1
	.byte	95
	.quad	.Ltmp1491
	.quad	.Ltmp1491
	.short	1
	.byte	95
	.quad	0
	.quad	0
.Ldebug_loc174:
	.quad	.Ltmp1447
	.quad	.Ltmp1448
	.short	1
	.byte	92
	.quad	.Ltmp1472
	.quad	.Ltmp1473
	.short	1
	.byte	92
	.quad	0
	.quad	0
.Ldebug_loc175:
	.quad	.Ltmp1454
	.quad	.Ltmp1457
	.short	3
	.byte	83
	.byte	147
	.byte	8
	.quad	.Ltmp1475
	.quad	.Ltmp1476
	.short	3
	.byte	83
	.byte	147
	.byte	8
	.quad	.Ltmp1476
	.quad	.Ltmp1486
	.short	6
	.byte	83
	.byte	147
	.byte	8
	.byte	86
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc176:
	.quad	.Ltmp1456
	.quad	.Ltmp1469
	.short	1
	.byte	92
	.quad	.Ltmp1469
	.quad	.Ltmp1470
	.short	3
	.byte	119
	.byte	224
	.byte	0
	.quad	0
	.quad	0
.Ldebug_loc177:
	.quad	.Lfunc_begin55
	.quad	.Ltmp1500
	.short	1
	.byte	85
	.quad	.Ltmp1500
	.quad	.Ltmp1504
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc178:
	.quad	.Lfunc_begin56
	.quad	.Ltmp1557
	.short	1
	.byte	85
	.quad	.Ltmp1557
	.quad	.Ltmp1606
	.short	2
	.byte	119
	.byte	56
	.quad	.Ltmp1607
	.quad	.Lfunc_end56
	.short	2
	.byte	119
	.byte	56
	.quad	0
	.quad	0
.Ldebug_loc179:
	.quad	.Lfunc_begin56
	.quad	.Ltmp1557
	.short	1
	.byte	84
	.quad	.Ltmp1557
	.quad	.Ltmp1606
	.short	3
	.byte	119
	.byte	216
	.byte	0
	.quad	.Ltmp1607
	.quad	.Lfunc_end56
	.short	3
	.byte	119
	.byte	216
	.byte	0
	.quad	0
	.quad	0
.Ldebug_loc180:
	.quad	.Lfunc_begin56
	.quad	.Ltmp1557
	.short	1
	.byte	81
	.quad	.Ltmp1557
	.quad	.Ltmp1560
	.short	1
	.byte	86
	.quad	0
	.quad	0
.Ldebug_loc181:
	.quad	.Lfunc_begin56
	.quad	.Ltmp1557
	.short	1
	.byte	82
	.quad	.Ltmp1557
	.quad	.Ltmp1606
	.short	3
	.byte	119
	.byte	224
	.byte	0
	.quad	.Ltmp1607
	.quad	.Lfunc_end56
	.short	3
	.byte	119
	.byte	224
	.byte	0
	.quad	0
	.quad	0
.Ldebug_loc182:
	.quad	.Ltmp1566
	.quad	.Ltmp1580
	.short	1
	.byte	93
	.quad	.Ltmp1586
	.quad	.Ltmp1589
	.short	1
	.byte	93
	.quad	0
	.quad	0
.Ldebug_loc183:
	.quad	.Ltmp1570
	.quad	.Ltmp1573
	.short	3
	.byte	83
	.byte	147
	.byte	8
	.quad	.Ltmp1586
	.quad	.Ltmp1587
	.short	3
	.byte	83
	.byte	147
	.byte	8
	.quad	.Ltmp1587
	.quad	.Ltmp1594
	.short	6
	.byte	83
	.byte	147
	.byte	8
	.byte	86
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc184:
	.quad	.Ltmp1572
	.quad	.Ltmp1575
	.short	1
	.byte	80
	.quad	.Ltmp1575
	.quad	.Ltmp1576
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc185:
	.quad	.Lfunc_begin57
	.quad	.Ltmp1608
	.short	1
	.byte	85
	.quad	.Ltmp1608
	.quad	.Ltmp1612
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc186:
	.quad	.Lfunc_begin58
	.quad	.Ltmp1614
	.short	1
	.byte	85
	.quad	.Ltmp1614
	.quad	.Ltmp1615
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc187:
	.quad	.Ltmp1614
	.quad	.Ltmp1616
	.short	3
	.byte	16
	.byte	0
	.byte	159
	.quad	.Ltmp1616
	.quad	.Lfunc_end58
	.short	1
	.byte	80
	.quad	0
	.quad	0
.Ldebug_loc188:
	.quad	.Lfunc_begin59
	.quad	.Ltmp1625
	.short	1
	.byte	85
	.quad	0
	.quad	0
.Ldebug_loc189:
	.quad	.Lfunc_begin59
	.quad	.Ltmp1626
	.short	1
	.byte	84
	.quad	0
	.quad	0
	.section	.debug_abbrev,"",@progbits
	.byte	1
	.byte	17
	.byte	1
	.byte	37
	.byte	14
	.byte	19
	.byte	5
	.byte	3
	.byte	14
	.byte	16
	.byte	23
	.byte	27
	.byte	14
	.ascii	"\264B"
	.byte	25
	.byte	17
	.byte	1
	.byte	85
	.byte	23
	.byte	0
	.byte	0
	.byte	2
	.byte	52
	.byte	0
	.byte	3
	.byte	14
	.byte	73
	.byte	19
	.byte	63
	.byte	25
	.byte	58
	.byte	11
	.byte	59
	.byte	11
	.byte	110
	.byte	14
	.byte	0
	.byte	0
	.byte	3
	.byte	36
	.byte	0
	.byte	3
	.byte	14
	.byte	62
	.byte	11
	.byte	11
	.byte	11
	.byte	0
	.byte	0
	.byte	4
	.byte	46
	.byte	1
	.byte	17
	.byte	1
	.byte	18
	.byte	6
	.byte	64
	.byte	24
	.byte	110
	.byte	14
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	5
	.byte	73
	.byte	19
	.byte	63
	.byte	25
	.byte	0
	.byte	0
	.byte	5
	.byte	5
	.byte	0
	.byte	2
	.byte	23
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	5
	.byte	73
	.byte	19
	.byte	0
	.byte	0
	.byte	6
	.byte	52
	.byte	0
	.byte	2
	.byte	23
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	5
	.byte	73
	.byte	19
	.byte	0
	.byte	0
	.byte	7
	.byte	11
	.byte	1
	.byte	17
	.byte	1
	.byte	18
	.byte	6
	.byte	0
	.byte	0
	.byte	8
	.byte	46
	.byte	1
	.byte	17
	.byte	1
	.byte	18
	.byte	6
	.byte	64
	.byte	24
	.byte	110
	.byte	14
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	11
	.byte	73
	.byte	19
	.byte	63
	.byte	25
	.byte	0
	.byte	0
	.byte	9
	.byte	5
	.byte	0
	.byte	2
	.byte	23
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	11
	.byte	73
	.byte	19
	.byte	0
	.byte	0
	.byte	10
	.byte	52
	.byte	0
	.byte	2
	.byte	23
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	11
	.byte	73
	.byte	19
	.byte	0
	.byte	0
	.byte	11
	.byte	11
	.byte	1
	.byte	85
	.byte	23
	.byte	0
	.byte	0
	.byte	12
	.byte	46
	.byte	1
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	11
	.byte	73
	.byte	19
	.byte	32
	.byte	11
	.byte	0
	.byte	0
	.byte	13
	.byte	5
	.byte	0
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	11
	.byte	73
	.byte	19
	.byte	0
	.byte	0
	.byte	14
	.byte	15
	.byte	0
	.byte	73
	.byte	19
	.byte	0
	.byte	0
	.byte	15
	.byte	19
	.byte	0
	.byte	3
	.byte	14
	.byte	11
	.byte	11
	.byte	58
	.byte	11
	.byte	59
	.byte	11
	.ascii	"\210\001"
	.byte	15
	.byte	0
	.byte	0
	.byte	16
	.byte	29
	.byte	1
	.byte	49
	.byte	19
	.byte	17
	.byte	1
	.byte	18
	.byte	6
	.byte	88
	.byte	11
	.byte	89
	.byte	11
	.byte	0
	.byte	0
	.byte	17
	.byte	5
	.byte	0
	.byte	2
	.byte	23
	.byte	49
	.byte	19
	.byte	0
	.byte	0
	.byte	18
	.byte	5
	.byte	0
	.byte	2
	.byte	24
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	11
	.byte	73
	.byte	19
	.byte	0
	.byte	0
	.byte	19
	.byte	52
	.byte	0
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	11
	.byte	73
	.byte	19
	.byte	0
	.byte	0
	.byte	20
	.byte	11
	.byte	1
	.byte	0
	.byte	0
	.byte	21
	.byte	19
	.byte	1
	.byte	3
	.byte	14
	.byte	11
	.byte	11
	.ascii	"\210\001"
	.byte	15
	.byte	0
	.byte	0
	.byte	22
	.byte	13
	.byte	0
	.byte	3
	.byte	14
	.byte	73
	.byte	19
	.byte	58
	.byte	11
	.byte	59
	.byte	11
	.ascii	"\210\001"
	.byte	15
	.byte	56
	.byte	11
	.byte	0
	.byte	0
	.byte	23
	.byte	19
	.byte	1
	.byte	3
	.byte	14
	.byte	11
	.byte	11
	.byte	58
	.byte	11
	.byte	59
	.byte	11
	.ascii	"\210\001"
	.byte	15
	.byte	0
	.byte	0
	.byte	24
	.byte	21
	.byte	1
	.byte	73
	.byte	19
	.byte	0
	.byte	0
	.byte	25
	.byte	5
	.byte	0
	.byte	73
	.byte	19
	.byte	0
	.byte	0
	.byte	26
	.byte	29
	.byte	1
	.byte	49
	.byte	19
	.byte	85
	.byte	23
	.byte	88
	.byte	11
	.byte	89
	.byte	11
	.byte	0
	.byte	0
	.byte	27
	.byte	52
	.byte	0
	.byte	2
	.byte	23
	.byte	49
	.byte	19
	.byte	0
	.byte	0
	.byte	28
	.byte	46
	.byte	1
	.byte	17
	.byte	1
	.byte	18
	.byte	6
	.byte	64
	.byte	24
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	11
	.byte	73
	.byte	19
	.byte	0
	.byte	0
	.byte	29
	.byte	52
	.byte	0
	.byte	28
	.byte	15
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	11
	.byte	73
	.byte	19
	.byte	0
	.byte	0
	.byte	30
	.byte	46
	.byte	1
	.byte	17
	.byte	1
	.byte	18
	.byte	6
	.byte	64
	.byte	24
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	5
	.byte	73
	.byte	19
	.byte	0
	.byte	0
	.byte	31
	.byte	52
	.byte	0
	.byte	28
	.byte	15
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	5
	.byte	73
	.byte	19
	.byte	0
	.byte	0
	.byte	32
	.byte	46
	.byte	0
	.byte	17
	.byte	1
	.byte	18
	.byte	6
	.byte	64
	.byte	24
	.byte	110
	.byte	14
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	11
	.byte	73
	.byte	19
	.byte	63
	.byte	25
	.byte	0
	.byte	0
	.byte	33
	.byte	19
	.byte	1
	.byte	3
	.byte	14
	.byte	11
	.byte	5
	.byte	58
	.byte	11
	.byte	59
	.byte	11
	.ascii	"\210\001"
	.byte	15
	.byte	0
	.byte	0
	.byte	34
	.byte	1
	.byte	1
	.byte	73
	.byte	19
	.byte	0
	.byte	0
	.byte	35
	.byte	33
	.byte	0
	.byte	73
	.byte	19
	.byte	34
	.byte	11
	.byte	55
	.byte	11
	.byte	0
	.byte	0
	.byte	36
	.byte	36
	.byte	0
	.byte	3
	.byte	14
	.byte	11
	.byte	11
	.byte	62
	.byte	11
	.byte	0
	.byte	0
	.byte	37
	.byte	13
	.byte	0
	.byte	3
	.byte	14
	.byte	73
	.byte	19
	.byte	58
	.byte	11
	.byte	59
	.byte	11
	.ascii	"\210\001"
	.byte	15
	.byte	56
	.byte	5
	.byte	0
	.byte	0
	.byte	38
	.byte	21
	.byte	0
	.byte	73
	.byte	19
	.byte	0
	.byte	0
	.byte	39
	.byte	13
	.byte	0
	.byte	3
	.byte	14
	.byte	73
	.byte	19
	.byte	58
	.byte	11
	.byte	59
	.byte	5
	.ascii	"\210\001"
	.byte	15
	.byte	56
	.byte	11
	.byte	0
	.byte	0
	.byte	0
	.section	.debug_info,"",@progbits
.Lcu_begin0:
	.long	17233
	.short	4
	.long	.debug_abbrev
	.byte	8
	.byte	1
	.long	.Linfo_string0
	.short	22
	.long	.Linfo_string1
	.long	.Lline_table_start0
	.long	.Linfo_string2

	.quad	0
	.long	.Ldebug_ranges9
	.byte	2
	.long	.Linfo_string3
	.long	57

	.byte	1
	.byte	1
	.long	.Linfo_string3
	.byte	3
	.long	.Linfo_string4
	.byte	7
	.byte	4
	.byte	4
	.quad	.Lfunc_begin0
	.long	.Lfunc_end0-.Lfunc_begin0
	.byte	1
	.byte	87
	.long	.Linfo_string56
	.long	.Linfo_string57
	.byte	2
	.short	314
	.long	1432

	.byte	5
	.long	.Ldebug_loc0
	.long	.Linfo_string515
	.byte	2
	.short	314
	.long	6626
	.byte	6
	.long	.Ldebug_loc1
	.long	.Linfo_string516
	.byte	2
	.short	314
	.long	1432
	.byte	7
	.quad	.Ltmp0
	.long	.Ltmp8-.Ltmp0
	.byte	6
	.long	.Ldebug_loc2
	.long	.Linfo_string517
	.byte	2
	.short	318
	.long	1432
	.byte	0
	.byte	0
	.byte	8
	.quad	.Lfunc_begin1
	.long	.Lfunc_end1-.Lfunc_begin1
	.byte	1
	.byte	87
	.long	.Linfo_string58
	.long	.Linfo_string59
	.byte	2
	.byte	140
	.long	763

	.byte	9
	.long	.Ldebug_loc3
	.long	.Linfo_string515
	.byte	2
	.byte	140
	.long	6626
	.byte	7
	.quad	.Ltmp9
	.long	.Ltmp27-.Ltmp9
	.byte	10
	.long	.Ldebug_loc5
	.long	.Linfo_string55
	.byte	2
	.byte	150
	.long	1432
	.byte	7
	.quad	.Ltmp12
	.long	.Ltmp17-.Ltmp12
	.byte	10
	.long	.Ldebug_loc4
	.long	.Linfo_string55
	.byte	2
	.byte	143
	.long	1432
	.byte	0
	.byte	0
	.byte	0
	.byte	8
	.quad	.Lfunc_begin2
	.long	.Lfunc_end2-.Lfunc_begin2
	.byte	1
	.byte	87
	.long	.Linfo_string60
	.long	.Linfo_string61
	.byte	2
	.byte	251
	.long	763

	.byte	9
	.long	.Ldebug_loc6
	.long	.Linfo_string515
	.byte	2
	.byte	251
	.long	6626
	.byte	7
	.quad	.Ltmp110
	.long	.Ltmp145-.Ltmp110
	.byte	6
	.long	.Ldebug_loc7
	.long	.Linfo_string518
	.byte	2
	.short	268
	.long	1425
	.byte	7
	.quad	.Ltmp112
	.long	.Ltmp145-.Ltmp112
	.byte	6
	.long	.Ldebug_loc8
	.long	.Linfo_string55
	.byte	2
	.short	269
	.long	1432
	.byte	0
	.byte	0
	.byte	0
	.byte	8
	.quad	.Lfunc_begin3
	.long	.Lfunc_end3-.Lfunc_begin3
	.byte	1
	.byte	87
	.long	.Linfo_string62
	.long	.Linfo_string63
	.byte	2
	.byte	94
	.long	1432

	.byte	9
	.long	.Ldebug_loc9
	.long	.Linfo_string515
	.byte	2
	.byte	94
	.long	6626
	.byte	9
	.long	.Ldebug_loc10
	.long	.Linfo_string80
	.byte	2
	.byte	94
	.long	1800
	.byte	9
	.long	.Ldebug_loc11
	.long	.Linfo_string81
	.byte	2
	.byte	94
	.long	1800
	.byte	10
	.long	.Ldebug_loc13
	.long	.Linfo_string519
	.byte	2
	.byte	94
	.long	1432
	.byte	7
	.quad	.Ltmp149
	.long	.Ltmp198-.Ltmp149
	.byte	10
	.long	.Ldebug_loc12
	.long	.Linfo_string55
	.byte	2
	.byte	95
	.long	1432
	.byte	11
	.long	.Ldebug_ranges0
	.byte	10
	.long	.Ldebug_loc14
	.long	.Linfo_string55
	.byte	2
	.byte	105
	.long	1432
	.byte	0
	.byte	7
	.quad	.Ltmp174
	.long	.Ltmp177-.Ltmp174
	.byte	10
	.long	.Ldebug_loc15
	.long	.Linfo_string55
	.byte	2
	.byte	111
	.long	1432
	.byte	0
	.byte	7
	.quad	.Ltmp182
	.long	.Ltmp198-.Ltmp182
	.byte	10
	.long	.Ldebug_loc16
	.long	.Linfo_string55
	.byte	2
	.byte	118
	.long	1432
	.byte	10
	.long	.Ldebug_loc17
	.long	.Linfo_string427
	.byte	2
	.byte	118
	.long	1800
	.byte	10
	.long	.Ldebug_loc18
	.long	.Linfo_string520
	.byte	2
	.byte	118
	.long	1800
	.byte	7
	.quad	.Ltmp192
	.long	.Ltmp194-.Ltmp192
	.byte	10
	.long	.Ldebug_loc19
	.long	.Linfo_string55
	.byte	2
	.byte	126
	.long	1432
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	8
	.quad	.Lfunc_begin4
	.long	.Lfunc_end4-.Lfunc_begin4
	.byte	1
	.byte	87
	.long	.Linfo_string64
	.long	.Linfo_string65
	.byte	2
	.byte	212
	.long	763

	.byte	9
	.long	.Ldebug_loc20
	.long	.Linfo_string515
	.byte	2
	.byte	212
	.long	6626
	.byte	11
	.long	.Ldebug_ranges2
	.byte	10
	.long	.Ldebug_loc21
	.long	.Linfo_string521
	.byte	2
	.byte	220
	.long	13643
	.byte	10
	.long	.Ldebug_loc24
	.long	.Linfo_string55
	.byte	2
	.byte	221
	.long	1432
	.byte	11
	.long	.Ldebug_ranges1
	.byte	10
	.long	.Ldebug_loc22
	.long	.Linfo_string523
	.byte	2
	.byte	236
	.long	13655
	.byte	10
	.long	.Ldebug_loc23
	.long	.Linfo_string55
	.byte	2
	.byte	237
	.long	1432
	.byte	0
	.byte	0
	.byte	0
	.byte	12
	.long	.Linfo_string5
	.byte	2
	.byte	202
	.long	763
	.byte	1
	.byte	13
	.long	.Linfo_string7
	.byte	2
	.byte	202
	.long	770
	.byte	0
	.byte	3
	.long	.Linfo_string6
	.byte	0
	.byte	0
	.byte	14
	.long	775
	.byte	15
	.long	.Linfo_string8
	.byte	0
	.byte	1
	.byte	1
	.byte	1
	.byte	8
	.quad	.Lfunc_begin5
	.long	.Lfunc_end5-.Lfunc_begin5
	.byte	1
	.byte	87
	.long	.Linfo_string66
	.long	.Linfo_string67
	.byte	2
	.byte	162
	.long	763

	.byte	9
	.long	.Ldebug_loc25
	.long	.Linfo_string515
	.byte	2
	.byte	162
	.long	6626
	.byte	7
	.quad	.Ltmp408
	.long	.Ltmp442-.Ltmp408
	.byte	10
	.long	.Ldebug_loc26
	.long	.Linfo_string528
	.byte	2
	.byte	168
	.long	1788
	.byte	11
	.long	.Ldebug_ranges3
	.byte	10
	.long	.Ldebug_loc27
	.long	.Linfo_string301
	.byte	2
	.byte	174
	.long	1788
	.byte	10
	.long	.Ldebug_loc28
	.long	.Linfo_string529
	.byte	2
	.byte	174
	.long	13655
	.byte	10
	.long	.Ldebug_loc29
	.long	.Linfo_string55
	.byte	2
	.byte	184
	.long	1432
	.byte	0
	.byte	16
	.long	739
	.quad	.Ltmp438
	.long	.Ltmp442-.Ltmp438
	.byte	2
	.byte	198
	.byte	17
	.long	.Ldebug_loc30
	.long	751
	.byte	0
	.byte	0
	.byte	0
	.byte	4
	.quad	.Lfunc_begin6
	.long	.Lfunc_end6-.Lfunc_begin6
	.byte	1
	.byte	87
	.long	.Linfo_string68
	.long	.Linfo_string69
	.byte	2
	.short	291
	.long	1432

	.byte	5
	.long	.Ldebug_loc31
	.long	.Linfo_string515
	.byte	2
	.short	291
	.long	6626
	.byte	5
	.long	.Ldebug_loc32
	.long	.Linfo_string530
	.byte	2
	.short	291
	.long	13716
	.byte	6
	.long	.Ldebug_loc34
	.long	.Linfo_string545
	.byte	2
	.short	291
	.long	1432
	.byte	7
	.quad	.Ltmp446
	.long	.Ltmp469-.Ltmp446
	.byte	6
	.long	.Ldebug_loc33
	.long	.Linfo_string55
	.byte	2
	.short	292
	.long	1432
	.byte	0
	.byte	0
	.byte	8
	.quad	.Lfunc_begin7
	.long	.Lfunc_end7-.Lfunc_begin7
	.byte	1
	.byte	87
	.long	.Linfo_string70
	.long	.Linfo_string71
	.byte	3
	.byte	29
	.long	763

	.byte	9
	.long	.Ldebug_loc35
	.long	.Linfo_string547
	.byte	3
	.byte	29
	.long	14021
	.byte	18
	.byte	3
	.byte	145
	.ascii	"\320\001"
	.long	.Linfo_string546
	.byte	3
	.byte	29
	.long	1364
	.byte	18
	.byte	3
	.byte	145
	.ascii	"\350\001"
	.long	.Linfo_string413
	.byte	3
	.byte	29
	.long	1364
	.byte	9
	.long	.Ldebug_loc36
	.long	.Linfo_string414
	.byte	3
	.byte	29
	.long	1800
	.byte	0
	.byte	8
	.quad	.Lfunc_begin8
	.long	.Lfunc_end8-.Lfunc_begin8
	.byte	1
	.byte	87
	.long	.Linfo_string72
	.long	.Linfo_string73
	.byte	3
	.byte	46
	.long	763

	.byte	9
	.long	.Ldebug_loc37
	.long	.Linfo_string547
	.byte	3
	.byte	46
	.long	14021
	.byte	7
	.quad	.Ltmp499
	.long	.Ltmp505-.Ltmp499
	.byte	10
	.long	.Ldebug_loc38
	.long	.Linfo_string517
	.byte	3
	.byte	48
	.long	1432
	.byte	0
	.byte	0
	.byte	8
	.quad	.Lfunc_begin9
	.long	.Lfunc_end9-.Lfunc_begin9
	.byte	1
	.byte	87
	.long	.Linfo_string74
	.long	.Linfo_string75
	.byte	3
	.byte	38
	.long	763

	.byte	9
	.long	.Ldebug_loc39
	.long	.Linfo_string547
	.byte	3
	.byte	38
	.long	14021
	.byte	9
	.long	.Ldebug_loc40
	.long	.Linfo_string99
	.byte	3
	.byte	38
	.long	7057
	.byte	0
	.byte	12
	.long	.Linfo_string9
	.byte	4
	.byte	12
	.long	1330
	.byte	1
	.byte	13
	.long	.Linfo_string51
	.byte	4
	.byte	12
	.long	1800
	.byte	19
	.long	.Linfo_string52
	.byte	4
	.byte	12
	.long	1432
	.byte	20
	.byte	19
	.long	.Linfo_string53
	.byte	4
	.byte	13
	.long	2033
	.byte	19
	.long	.Linfo_string55
	.byte	4
	.byte	13
	.long	1432
	.byte	0
	.byte	0
	.byte	21
	.long	.Linfo_string50
	.byte	40
	.byte	1
	.byte	22
	.long	.Linfo_string10
	.long	1364
	.byte	5
	.byte	12
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string10
	.long	1432
	.byte	5
	.byte	12
	.byte	8
	.byte	24
	.byte	0
	.byte	23
	.long	.Linfo_string16
	.byte	24
	.byte	2
	.byte	4
	.byte	1
	.byte	22
	.long	.Linfo_string11
	.long	1413
	.byte	2
	.byte	1
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string13
	.long	1425
	.byte	2
	.byte	1
	.byte	8
	.byte	8
	.byte	22
	.long	.Linfo_string15
	.long	1425
	.byte	2
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	14
	.long	1418
	.byte	3
	.long	.Linfo_string12
	.byte	7
	.byte	1
	.byte	3
	.long	.Linfo_string14
	.byte	5
	.byte	8
	.byte	23
	.long	.Linfo_string49
	.byte	16
	.byte	1
	.byte	1
	.byte	1
	.byte	22
	.long	.Linfo_string17
	.long	1468
	.byte	1
	.byte	1
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string48
	.long	1734
	.byte	1
	.byte	1
	.byte	8
	.byte	8
	.byte	0
	.byte	14
	.long	1473
	.byte	21
	.long	.Linfo_string47
	.byte	16
	.byte	1
	.byte	22
	.long	.Linfo_string18
	.long	1507
	.byte	5
	.byte	1
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string46
	.long	2017
	.byte	5
	.byte	1
	.byte	8
	.byte	8
	.byte	0
	.byte	14
	.long	1512
	.byte	23
	.long	.Linfo_string45
	.byte	72
	.byte	1
	.byte	1
	.byte	1
	.byte	22
	.long	.Linfo_string19
	.long	1678
	.byte	1
	.byte	1
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string21
	.long	1678
	.byte	1
	.byte	1
	.byte	8
	.byte	8
	.byte	22
	.long	.Linfo_string22
	.long	57
	.byte	1
	.byte	1
	.byte	4
	.byte	16
	.byte	22
	.long	.Linfo_string23
	.long	1418
	.byte	1
	.byte	1
	.byte	1
	.byte	20
	.byte	22
	.long	.Linfo_string24
	.long	1418
	.byte	1
	.byte	1
	.byte	1
	.byte	21
	.byte	22
	.long	.Linfo_string25
	.long	1418
	.byte	1
	.byte	1
	.byte	1
	.byte	22
	.byte	22
	.long	.Linfo_string26
	.long	1685
	.byte	1
	.byte	1
	.byte	8
	.byte	24
	.byte	22
	.long	.Linfo_string29
	.long	1739
	.byte	1
	.byte	1
	.byte	8
	.byte	32
	.byte	22
	.long	.Linfo_string31
	.long	1413
	.byte	1
	.byte	1
	.byte	8
	.byte	40
	.byte	22
	.long	.Linfo_string32
	.long	1795
	.byte	1
	.byte	1
	.byte	8
	.byte	48
	.byte	22
	.long	.Linfo_string35
	.long	1836
	.byte	1
	.byte	1
	.byte	8
	.byte	56
	.byte	22
	.long	.Linfo_string44
	.long	1734
	.byte	1
	.byte	1
	.byte	8
	.byte	64
	.byte	0
	.byte	3
	.long	.Linfo_string20
	.byte	7
	.byte	8
	.byte	14
	.long	1690
	.byte	23
	.long	.Linfo_string28
	.byte	8
	.byte	1
	.byte	1
	.byte	1
	.byte	22
	.long	.Linfo_string27
	.long	1713
	.byte	1
	.byte	1
	.byte	8
	.byte	0
	.byte	0
	.byte	14
	.long	1718
	.byte	24
	.long	1678
	.byte	25
	.long	1734
	.byte	25
	.long	1678
	.byte	0
	.byte	14
	.long	763
	.byte	14
	.long	1744
	.byte	23
	.long	.Linfo_string28
	.byte	8
	.byte	1
	.byte	1
	.byte	1
	.byte	22
	.long	.Linfo_string27
	.long	1767
	.byte	1
	.byte	1
	.byte	8
	.byte	0
	.byte	0
	.byte	14
	.long	1772
	.byte	24
	.long	1788
	.byte	25
	.long	1734
	.byte	25
	.long	1734
	.byte	0
	.byte	3
	.long	.Linfo_string30
	.byte	7
	.byte	1
	.byte	14
	.long	1800
	.byte	23
	.long	.Linfo_string32
	.byte	16
	.byte	1
	.byte	1
	.byte	1
	.byte	22
	.long	.Linfo_string33
	.long	1413
	.byte	1
	.byte	1
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string34
	.long	1425
	.byte	1
	.byte	1
	.byte	8
	.byte	8
	.byte	0
	.byte	14
	.long	1841
	.byte	23
	.long	.Linfo_string35
	.byte	40
	.byte	1
	.byte	1
	.byte	1
	.byte	22
	.long	.Linfo_string36
	.long	1795
	.byte	1
	.byte	1
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string37
	.long	1795
	.byte	1
	.byte	1
	.byte	8
	.byte	8
	.byte	22
	.long	.Linfo_string38
	.long	1890
	.byte	1
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	21
	.long	.Linfo_string43
	.byte	24
	.byte	1
	.byte	22
	.long	.Linfo_string11
	.long	1937
	.byte	5
	.byte	1
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string13
	.long	1425
	.byte	5
	.byte	1
	.byte	8
	.byte	8
	.byte	22
	.long	.Linfo_string15
	.long	1425
	.byte	5
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	14
	.long	1942
	.byte	23
	.long	.Linfo_string42
	.byte	40
	.byte	1
	.byte	1
	.byte	1
	.byte	22
	.long	.Linfo_string36
	.long	1795
	.byte	1
	.byte	1
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string37
	.long	1795
	.byte	1
	.byte	1
	.byte	8
	.byte	8
	.byte	22
	.long	.Linfo_string39
	.long	1734
	.byte	1
	.byte	1
	.byte	8
	.byte	16
	.byte	22
	.long	.Linfo_string40
	.long	1734
	.byte	1
	.byte	1
	.byte	8
	.byte	24
	.byte	22
	.long	.Linfo_string41
	.long	1734
	.byte	1
	.byte	1
	.byte	8
	.byte	32
	.byte	0
	.byte	14
	.long	2022
	.byte	24
	.long	1800
	.byte	25
	.long	1734
	.byte	0
	.byte	21
	.long	.Linfo_string54
	.byte	24
	.byte	1
	.byte	22
	.long	.Linfo_string11
	.long	2080
	.byte	5
	.byte	1
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string13
	.long	1425
	.byte	5
	.byte	1
	.byte	8
	.byte	8
	.byte	22
	.long	.Linfo_string15
	.long	1425
	.byte	5
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	14
	.long	1364
	.byte	8
	.quad	.Lfunc_begin10
	.long	.Lfunc_end10-.Lfunc_begin10
	.byte	1
	.byte	87
	.long	.Linfo_string76
	.long	.Linfo_string77
	.byte	2
	.byte	49
	.long	6592

	.byte	9
	.long	.Ldebug_loc41
	.long	.Linfo_string554
	.byte	2
	.byte	49
	.long	1800
	.byte	9
	.long	.Ldebug_loc42
	.long	.Linfo_string81
	.byte	2
	.byte	49
	.long	1800
	.byte	18
	.byte	3
	.byte	145
	.ascii	"\320\006"
	.long	.Linfo_string553
	.byte	2
	.byte	49
	.long	1800
	.byte	18
	.byte	3
	.byte	145
	.ascii	"\340\006"
	.long	.Linfo_string552
	.byte	2
	.byte	49
	.long	1800
	.byte	18
	.byte	3
	.byte	145
	.ascii	"\360\006"
	.long	.Linfo_string79
	.byte	2
	.byte	49
	.long	1800
	.byte	18
	.byte	3
	.byte	145
	.ascii	"\200\007"
	.long	.Linfo_string551
	.byte	2
	.byte	50
	.long	1800
	.byte	18
	.byte	3
	.byte	145
	.ascii	"\220\007"
	.long	.Linfo_string550
	.byte	2
	.byte	50
	.long	1800
	.byte	18
	.byte	3
	.byte	145
	.ascii	"\240\007"
	.long	.Linfo_string549
	.byte	2
	.byte	50
	.long	1800
	.byte	18
	.byte	3
	.byte	145
	.ascii	"\260\007"
	.long	.Linfo_string548
	.byte	2
	.byte	50
	.long	2033
	.byte	10
	.long	.Ldebug_loc46
	.long	.Linfo_string555
	.byte	2
	.byte	50
	.long	1432
	.byte	10
	.long	.Ldebug_loc51
	.long	.Linfo_string556
	.byte	2
	.byte	50
	.long	6626
	.byte	7
	.quad	.Ltmp522
	.long	.Ltmp576-.Ltmp522
	.byte	10
	.long	.Ldebug_loc44
	.long	.Linfo_string110
	.byte	2
	.byte	52
	.long	7330
	.byte	10
	.long	.Ldebug_loc45
	.long	.Linfo_string55
	.byte	2
	.byte	52
	.long	1432
	.byte	10
	.long	.Ldebug_loc50
	.long	.Linfo_string92
	.byte	2
	.byte	62
	.long	6967
	.byte	10
	.long	.Ldebug_loc52
	.long	.Linfo_string99
	.byte	2
	.byte	67
	.long	7057
	.byte	10
	.long	.Ldebug_loc53
	.long	.Linfo_string557
	.byte	2
	.byte	74
	.long	6626
	.byte	26
	.long	1271
	.long	.Ldebug_ranges4
	.byte	2
	.byte	57
	.byte	17
	.long	.Ldebug_loc43
	.long	1283
	.byte	27
	.long	.Ldebug_loc49
	.long	1294
	.byte	11
	.long	.Ldebug_ranges5
	.byte	27
	.long	.Ldebug_loc47
	.long	1306
	.byte	27
	.long	.Ldebug_loc48
	.long	1317
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	8
	.quad	.Lfunc_begin11
	.long	.Lfunc_end11-.Lfunc_begin11
	.byte	1
	.byte	87
	.long	.Linfo_string423
	.long	.Linfo_string424
	.byte	6
	.byte	26
	.long	1432

	.byte	9
	.long	.Ldebug_loc54
	.long	.Linfo_string552
	.byte	6
	.byte	26
	.long	1800
	.byte	18
	.byte	3
	.byte	145
	.ascii	"\300\002"
	.long	.Linfo_string90
	.byte	6
	.byte	26
	.long	1364
	.byte	9
	.long	.Ldebug_loc55
	.long	.Linfo_string51
	.byte	6
	.byte	26
	.long	6967
	.byte	9
	.long	.Ldebug_loc56
	.long	.Linfo_string558
	.byte	6
	.byte	26
	.long	1788
	.byte	7
	.quad	.Ltmp578
	.long	.Ltmp586-.Ltmp578
	.byte	10
	.long	.Ldebug_loc57
	.long	.Linfo_string559
	.byte	6
	.byte	27
	.long	1800
	.byte	0
	.byte	0
	.byte	8
	.quad	.Lfunc_begin12
	.long	.Lfunc_end12-.Lfunc_begin12
	.byte	1
	.byte	87
	.long	.Linfo_string425
	.long	.Linfo_string426
	.byte	6
	.byte	55
	.long	13201

	.byte	10
	.long	.Ldebug_loc58
	.long	.Linfo_string55
	.byte	6
	.byte	55
	.long	1432
	.byte	10
	.long	.Ldebug_loc59
	.long	.Linfo_string427
	.byte	6
	.byte	55
	.long	1800
	.byte	7
	.quad	.Ltmp662
	.long	.Ltmp735-.Ltmp662
	.byte	10
	.long	.Ldebug_loc60
	.long	.Linfo_string560
	.byte	6
	.byte	56
	.long	14026
	.byte	7
	.quad	.Ltmp672
	.long	.Ltmp731-.Ltmp672
	.byte	10
	.long	.Ldebug_loc61
	.long	.Linfo_string55
	.byte	6
	.byte	70
	.long	1432
	.byte	10
	.long	.Ldebug_loc62
	.long	.Linfo_string590
	.byte	6
	.byte	70
	.long	1788
	.byte	10
	.long	.Ldebug_loc63
	.long	.Linfo_string395
	.byte	6
	.byte	78
	.long	14488
	.byte	10
	.long	.Ldebug_loc64
	.long	.Linfo_string591
	.byte	6
	.byte	79
	.long	14493
	.byte	10
	.long	.Ldebug_loc65
	.long	.Linfo_string602
	.byte	6
	.byte	81
	.long	9304
	.byte	10
	.long	.Ldebug_loc66
	.long	.Linfo_string412
	.byte	6
	.byte	88
	.long	1800
	.byte	10
	.long	.Ldebug_loc67
	.long	.Linfo_string603
	.byte	6
	.byte	90
	.long	1800
	.byte	10
	.long	.Ldebug_loc68
	.long	.Linfo_string427
	.byte	6
	.byte	89
	.long	1800
	.byte	7
	.quad	.Ltmp725
	.long	.Ltmp731-.Ltmp725
	.byte	19
	.long	.Linfo_string604
	.byte	6
	.byte	94
	.long	1418
	.byte	19
	.long	.Linfo_string535
	.byte	6
	.byte	95
	.long	1418
	.byte	19
	.long	.Linfo_string515
	.byte	6
	.byte	96
	.long	1418
	.byte	19
	.long	.Linfo_string605
	.byte	6
	.byte	97
	.long	1418
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	8
	.quad	.Lfunc_begin13
	.long	.Lfunc_end13-.Lfunc_begin13
	.byte	1
	.byte	87
	.long	.Linfo_string429
	.long	.Linfo_string430
	.byte	6
	.byte	40
	.long	1432

	.byte	18
	.byte	3
	.byte	145
	.ascii	"\220\002"
	.long	.Linfo_string51
	.byte	6
	.byte	40
	.long	1364
	.byte	18
	.byte	3
	.byte	145
	.ascii	"\250\002"
	.long	.Linfo_string606
	.byte	6
	.byte	40
	.long	1364
	.byte	9
	.long	.Ldebug_loc69
	.long	.Linfo_string552
	.byte	6
	.byte	40
	.long	1800
	.byte	9
	.long	.Ldebug_loc70
	.long	.Linfo_string558
	.byte	6
	.byte	40
	.long	1788
	.byte	7
	.quad	.Ltmp749
	.long	.Ltmp755-.Ltmp749
	.byte	10
	.long	.Ldebug_loc71
	.long	.Linfo_string559
	.byte	6
	.byte	41
	.long	1800
	.byte	0
	.byte	0
	.byte	8
	.quad	.Lfunc_begin14
	.long	.Lfunc_end14-.Lfunc_begin14
	.byte	1
	.byte	87
	.long	.Linfo_string431
	.long	.Linfo_string432
	.byte	6
	.byte	33
	.long	1432

	.byte	9
	.long	.Ldebug_loc72
	.long	.Linfo_string427
	.byte	6
	.byte	33
	.long	1800
	.byte	9
	.long	.Ldebug_loc73
	.long	.Linfo_string552
	.byte	6
	.byte	33
	.long	1800
	.byte	9
	.long	.Ldebug_loc74
	.long	.Linfo_string558
	.byte	6
	.byte	33
	.long	1788
	.byte	7
	.quad	.Ltmp756
	.long	.Ltmp763-.Ltmp756
	.byte	10
	.long	.Ldebug_loc75
	.long	.Linfo_string559
	.byte	6
	.byte	34
	.long	1800
	.byte	0
	.byte	0
	.byte	8
	.quad	.Lfunc_begin15
	.long	.Lfunc_end15-.Lfunc_begin15
	.byte	1
	.byte	87
	.long	.Linfo_string433
	.long	.Linfo_string434
	.byte	6
	.byte	15
	.long	1432

	.byte	9
	.long	.Ldebug_loc76
	.long	.Linfo_string552
	.byte	6
	.byte	15
	.long	1800
	.byte	9
	.long	.Ldebug_loc77
	.long	.Linfo_string607
	.byte	6
	.byte	15
	.long	1788
	.byte	9
	.long	.Ldebug_loc78
	.long	.Linfo_string558
	.byte	6
	.byte	15
	.long	1788
	.byte	7
	.quad	.Ltmp765
	.long	.Ltmp773-.Ltmp765
	.byte	10
	.long	.Ldebug_loc79
	.long	.Linfo_string559
	.byte	6
	.byte	20
	.long	1800
	.byte	0
	.byte	0
	.byte	28
	.quad	.Lfunc_begin16
	.long	.Lfunc_end16-.Lfunc_begin16
	.byte	1
	.byte	87
	.long	.Linfo_string435
	.byte	2
	.byte	156
	.long	763
	.byte	9
	.long	.Ldebug_loc80
	.long	.Linfo_string608
	.byte	2
	.byte	156
	.long	14747
	.byte	0
	.byte	28
	.quad	.Lfunc_begin17
	.long	.Lfunc_end17-.Lfunc_begin17
	.byte	1
	.byte	87
	.long	.Linfo_string436
	.byte	2
	.byte	157
	.long	763
	.byte	9
	.long	.Ldebug_loc81
	.long	.Linfo_string608
	.byte	2
	.byte	157
	.long	14747
	.byte	0
	.byte	28
	.quad	.Lfunc_begin18
	.long	.Lfunc_end18-.Lfunc_begin18
	.byte	1
	.byte	87
	.long	.Linfo_string437
	.byte	2
	.byte	158
	.long	763
	.byte	9
	.long	.Ldebug_loc82
	.long	.Linfo_string608
	.byte	2
	.byte	158
	.long	14773
	.byte	0
	.byte	28
	.quad	.Lfunc_begin19
	.long	.Lfunc_end19-.Lfunc_begin19
	.byte	1
	.byte	87
	.long	.Linfo_string438
	.byte	2
	.byte	159
	.long	763
	.byte	9
	.long	.Ldebug_loc83
	.long	.Linfo_string608
	.byte	2
	.byte	159
	.long	14773
	.byte	0
	.byte	28
	.quad	.Lfunc_begin20
	.long	.Lfunc_end20-.Lfunc_begin20
	.byte	1
	.byte	87
	.long	.Linfo_string439
	.byte	2
	.byte	164
	.long	1788
	.byte	9
	.long	.Ldebug_loc84
	.long	.Linfo_string608
	.byte	2
	.byte	164
	.long	14848
	.byte	29
	.byte	0
	.long	.Linfo_string616
	.byte	2
	.byte	164
	.long	1788
	.byte	0
	.byte	28
	.quad	.Lfunc_begin21
	.long	.Lfunc_end21-.Lfunc_begin21
	.byte	1
	.byte	87
	.long	.Linfo_string440
	.byte	2
	.byte	214
	.long	1788
	.byte	9
	.long	.Ldebug_loc85
	.long	.Linfo_string608
	.byte	2
	.byte	214
	.long	14848
	.byte	29
	.byte	0
	.long	.Linfo_string617
	.byte	2
	.byte	214
	.long	1788
	.byte	0
	.byte	30
	.quad	.Lfunc_begin22
	.long	.Lfunc_end22-.Lfunc_begin22
	.byte	1
	.byte	87
	.long	.Linfo_string441
	.byte	2
	.short	260
	.long	1788
	.byte	5
	.long	.Ldebug_loc86
	.long	.Linfo_string608
	.byte	2
	.short	260
	.long	14874
	.byte	31
	.byte	0
	.long	.Linfo_string619
	.byte	2
	.short	260
	.long	1788
	.byte	0
	.byte	28
	.quad	.Lfunc_begin23
	.long	.Lfunc_end23-.Lfunc_begin23
	.byte	1
	.byte	87
	.long	.Linfo_string442
	.byte	4
	.byte	25
	.long	1432
	.byte	9
	.long	.Ldebug_loc87
	.long	.Linfo_string621
	.byte	4
	.byte	25
	.long	1800
	.byte	18
	.byte	3
	.byte	145
	.ascii	"\300\002"
	.long	.Linfo_string620
	.byte	4
	.byte	25
	.long	9304
	.byte	9
	.long	.Ldebug_loc88
	.long	.Linfo_string558
	.byte	4
	.byte	25
	.long	1788
	.byte	10
	.long	.Ldebug_loc91
	.long	.Linfo_string713
	.byte	4
	.byte	25
	.long	1432
	.byte	7
	.quad	.Ltmp805
	.long	.Ltmp815-.Ltmp805
	.byte	10
	.long	.Ldebug_loc89
	.long	.Linfo_string622
	.byte	4
	.byte	26
	.long	14906
	.byte	10
	.long	.Ldebug_loc90
	.long	.Linfo_string517
	.byte	4
	.byte	30
	.long	1432
	.byte	0
	.byte	0
	.byte	8
	.quad	.Lfunc_begin24
	.long	.Lfunc_end24-.Lfunc_begin24
	.byte	1
	.byte	87
	.long	.Linfo_string443
	.long	.Linfo_string444
	.byte	6
	.byte	47
	.long	1432

	.byte	18
	.byte	3
	.byte	145
	.ascii	"\220\002"
	.long	.Linfo_string51
	.byte	6
	.byte	47
	.long	1364
	.byte	18
	.byte	3
	.byte	145
	.ascii	"\250\002"
	.long	.Linfo_string606
	.byte	6
	.byte	47
	.long	1364
	.byte	9
	.long	.Ldebug_loc92
	.long	.Linfo_string552
	.byte	6
	.byte	47
	.long	1800
	.byte	9
	.long	.Ldebug_loc93
	.long	.Linfo_string558
	.byte	6
	.byte	47
	.long	1788
	.byte	7
	.quad	.Ltmp817
	.long	.Ltmp823-.Ltmp817
	.byte	10
	.long	.Ldebug_loc94
	.long	.Linfo_string559
	.byte	6
	.byte	48
	.long	1800
	.byte	0
	.byte	0
	.byte	28
	.quad	.Lfunc_begin25
	.long	.Lfunc_end25-.Lfunc_begin25
	.byte	1
	.byte	87
	.long	.Linfo_string445
	.byte	6
	.byte	61
	.long	1788
	.byte	9
	.long	.Ldebug_loc95
	.long	.Linfo_string608
	.byte	6
	.byte	61
	.long	16572
	.byte	29
	.byte	0
	.long	.Linfo_string715
	.byte	6
	.byte	61
	.long	1788
	.byte	0
	.byte	28
	.quad	.Lfunc_begin26
	.long	.Lfunc_end26-.Lfunc_begin26
	.byte	1
	.byte	87
	.long	.Linfo_string446
	.byte	6
	.byte	64
	.long	1418
	.byte	9
	.long	.Ldebug_loc96
	.long	.Linfo_string716
	.byte	6
	.byte	64
	.long	1800
	.byte	10
	.long	.Ldebug_loc97
	.long	.Linfo_string717
	.byte	6
	.byte	64
	.long	1418
	.byte	0
	.byte	8
	.quad	.Lfunc_begin27
	.long	.Lfunc_end27-.Lfunc_begin27
	.byte	1
	.byte	87
	.long	.Linfo_string447
	.long	.Linfo_string448
	.byte	7
	.byte	105
	.long	763

	.byte	9
	.long	.Ldebug_loc98
	.long	.Linfo_string515
	.byte	7
	.byte	105
	.long	16598
	.byte	9
	.long	.Ldebug_loc99
	.long	.Linfo_string724
	.byte	7
	.byte	105
	.long	1788
	.byte	0
	.byte	8
	.quad	.Lfunc_begin28
	.long	.Lfunc_end28-.Lfunc_begin28
	.byte	1
	.byte	87
	.long	.Linfo_string449
	.long	.Linfo_string450
	.byte	8
	.byte	195
	.long	1432

	.byte	9
	.long	.Ldebug_loc100
	.long	.Linfo_string716
	.byte	8
	.byte	195
	.long	13282
	.byte	10
	.long	.Ldebug_loc102
	.long	.Linfo_string725
	.byte	8
	.byte	195
	.long	1432
	.byte	7
	.quad	.Ltmp845
	.long	.Ltmp857-.Ltmp845
	.byte	10
	.long	.Ldebug_loc101
	.long	.Linfo_string55
	.byte	8
	.byte	199
	.long	1432
	.byte	0
	.byte	0
	.byte	8
	.quad	.Lfunc_begin29
	.long	.Lfunc_end29-.Lfunc_begin29
	.byte	1
	.byte	87
	.long	.Linfo_string451
	.long	.Linfo_string452
	.byte	8
	.byte	74
	.long	1432

	.byte	9
	.long	.Ldebug_loc103
	.long	.Linfo_string716
	.byte	8
	.byte	74
	.long	13282
	.byte	9
	.long	.Ldebug_loc104
	.long	.Linfo_string726
	.byte	8
	.byte	74
	.long	1800
	.byte	10
	.long	.Ldebug_loc105
	.long	.Linfo_string55
	.byte	8
	.byte	74
	.long	1432
	.byte	0
	.byte	8
	.quad	.Lfunc_begin30
	.long	.Lfunc_end30-.Lfunc_begin30
	.byte	1
	.byte	87
	.long	.Linfo_string453
	.long	.Linfo_string454
	.byte	8
	.byte	88
	.long	763

	.byte	9
	.long	.Ldebug_loc106
	.long	.Linfo_string716
	.byte	8
	.byte	88
	.long	13282
	.byte	0
	.byte	8
	.quad	.Lfunc_begin31
	.long	.Lfunc_end31-.Lfunc_begin31
	.byte	1
	.byte	87
	.long	.Linfo_string455
	.long	.Linfo_string456
	.byte	8
	.byte	95
	.long	763

	.byte	9
	.long	.Ldebug_loc107
	.long	.Linfo_string716
	.byte	8
	.byte	95
	.long	13282
	.byte	7
	.quad	.Ltmp915
	.long	.Ltmp942-.Ltmp915
	.byte	10
	.long	.Ldebug_loc108
	.long	.Linfo_string727
	.byte	8
	.byte	96
	.long	16704
	.byte	7
	.quad	.Ltmp923
	.long	.Ltmp942-.Ltmp923
	.byte	10
	.long	.Ldebug_loc109
	.long	.Linfo_string55
	.byte	8
	.byte	105
	.long	1432
	.byte	10
	.long	.Ldebug_loc110
	.long	.Linfo_string335
	.byte	8
	.byte	105
	.long	10508
	.byte	0
	.byte	0
	.byte	0
	.byte	8
	.quad	.Lfunc_begin32
	.long	.Lfunc_end32-.Lfunc_begin32
	.byte	1
	.byte	87
	.long	.Linfo_string457
	.long	.Linfo_string458
	.byte	8
	.byte	158
	.long	763

	.byte	9
	.long	.Ldebug_loc111
	.long	.Linfo_string716
	.byte	8
	.byte	158
	.long	13282
	.byte	7
	.quad	.Ltmp951
	.long	.Ltmp954-.Ltmp951
	.byte	10
	.long	.Ldebug_loc112
	.long	.Linfo_string529
	.byte	8
	.byte	161
	.long	16838
	.byte	0
	.byte	0
	.byte	8
	.quad	.Lfunc_begin33
	.long	.Lfunc_end33-.Lfunc_begin33
	.byte	1
	.byte	87
	.long	.Linfo_string459
	.long	.Linfo_string460
	.byte	8
	.byte	125
	.long	763

	.byte	9
	.long	.Ldebug_loc113
	.long	.Linfo_string716
	.byte	8
	.byte	125
	.long	13282
	.byte	9
	.long	.Ldebug_loc114
	.long	.Linfo_string515
	.byte	8
	.byte	125
	.long	16598
	.byte	0
	.byte	8
	.quad	.Lfunc_begin34
	.long	.Lfunc_end34-.Lfunc_begin34
	.byte	1
	.byte	87
	.long	.Linfo_string461
	.long	.Linfo_string462
	.byte	8
	.byte	116
	.long	763

	.byte	9
	.long	.Ldebug_loc115
	.long	.Linfo_string716
	.byte	8
	.byte	116
	.long	13282
	.byte	9
	.long	.Ldebug_loc116
	.long	.Linfo_string335
	.byte	8
	.byte	116
	.long	10508
	.byte	7
	.quad	.Ltmp1020
	.long	.Ltmp1030-.Ltmp1020
	.byte	10
	.long	.Ldebug_loc117
	.long	.Linfo_string515
	.byte	8
	.byte	117
	.long	16598
	.byte	0
	.byte	0
	.byte	8
	.quad	.Lfunc_begin35
	.long	.Lfunc_end35-.Lfunc_begin35
	.byte	1
	.byte	87
	.long	.Linfo_string463
	.long	.Linfo_string464
	.byte	8
	.byte	140
	.long	763

	.byte	9
	.long	.Ldebug_loc118
	.long	.Linfo_string716
	.byte	8
	.byte	140
	.long	13282
	.byte	9
	.long	.Ldebug_loc119
	.long	.Linfo_string718
	.byte	8
	.byte	140
	.long	1425
	.byte	7
	.quad	.Ltmp1072
	.long	.Ltmp1121-.Ltmp1072
	.byte	10
	.long	.Ldebug_loc120
	.long	.Linfo_string739
	.byte	8
	.byte	145
	.long	9304
	.byte	7
	.quad	.Ltmp1080
	.long	.Ltmp1109-.Ltmp1080
	.byte	10
	.long	.Ldebug_loc121
	.long	.Linfo_string740
	.byte	8
	.byte	146
	.long	1425
	.byte	0
	.byte	0
	.byte	0
	.byte	8
	.quad	.Lfunc_begin36
	.long	.Lfunc_end36-.Lfunc_begin36
	.byte	1
	.byte	87
	.long	.Linfo_string465
	.long	.Linfo_string466
	.byte	8
	.byte	171
	.long	763

	.byte	9
	.long	.Ldebug_loc122
	.long	.Linfo_string716
	.byte	8
	.byte	171
	.long	13282
	.byte	9
	.long	.Ldebug_loc123
	.long	.Linfo_string529
	.byte	8
	.byte	171
	.long	13655
	.byte	7
	.quad	.Ltmp1132
	.long	.Ltmp1153-.Ltmp1132
	.byte	10
	.long	.Ldebug_loc124
	.long	.Linfo_string741
	.byte	8
	.byte	177
	.long	1788
	.byte	10
	.long	.Ldebug_loc125
	.long	.Linfo_string742
	.byte	8
	.byte	177
	.long	1425
	.byte	7
	.quad	.Ltmp1142
	.long	.Ltmp1148-.Ltmp1142
	.byte	10
	.long	.Ldebug_loc126
	.long	.Linfo_string743
	.byte	8
	.byte	179
	.long	1788
	.byte	10
	.long	.Ldebug_loc127
	.long	.Linfo_string744
	.byte	8
	.byte	179
	.long	16598
	.byte	0
	.byte	0
	.byte	0
	.byte	8
	.quad	.Lfunc_begin37
	.long	.Lfunc_end37-.Lfunc_begin37
	.byte	1
	.byte	87
	.long	.Linfo_string467
	.long	.Linfo_string468
	.byte	8
	.byte	133
	.long	763

	.byte	9
	.long	.Ldebug_loc128
	.long	.Linfo_string716
	.byte	8
	.byte	133
	.long	13282
	.byte	9
	.long	.Ldebug_loc129
	.long	.Linfo_string718
	.byte	8
	.byte	133
	.long	1425
	.byte	18
	.byte	3
	.byte	145
	.asciz	"\320"
	.long	.Linfo_string51
	.byte	8
	.byte	133
	.long	1364
	.byte	0
	.byte	8
	.quad	.Lfunc_begin38
	.long	.Lfunc_end38-.Lfunc_begin38
	.byte	1
	.byte	87
	.long	.Linfo_string469
	.long	.Linfo_string470
	.byte	7
	.byte	24
	.long	763

	.byte	9
	.long	.Ldebug_loc130
	.long	.Linfo_string515
	.byte	7
	.byte	24
	.long	16598
	.byte	9
	.long	.Ldebug_loc131
	.long	.Linfo_string716
	.byte	7
	.byte	24
	.long	13282
	.byte	0
	.byte	8
	.quad	.Lfunc_begin39
	.long	.Lfunc_end39-.Lfunc_begin39
	.byte	1
	.byte	87
	.long	.Linfo_string471
	.long	.Linfo_string472
	.byte	7
	.byte	90
	.long	763

	.byte	9
	.long	.Ldebug_loc132
	.long	.Linfo_string515
	.byte	7
	.byte	90
	.long	16598
	.byte	9
	.long	.Ldebug_loc133
	.long	.Linfo_string529
	.byte	7
	.byte	90
	.long	13655
	.byte	0
	.byte	8
	.quad	.Lfunc_begin40
	.long	.Lfunc_end40-.Lfunc_begin40
	.byte	1
	.byte	87
	.long	.Linfo_string473
	.long	.Linfo_string474
	.byte	7
	.byte	50
	.long	763

	.byte	9
	.long	.Ldebug_loc134
	.long	.Linfo_string515
	.byte	7
	.byte	50
	.long	16598
	.byte	9
	.long	.Ldebug_loc135
	.long	.Linfo_string96
	.byte	7
	.byte	50
	.long	14843
	.byte	9
	.long	.Ldebug_loc136
	.long	.Linfo_string745
	.byte	7
	.byte	50
	.long	770
	.byte	7
	.quad	.Ltmp1217
	.long	.Ltmp1281-.Ltmp1217
	.byte	10
	.long	.Ldebug_loc137
	.long	.Linfo_string746
	.byte	7
	.byte	51
	.long	16879
	.byte	11
	.long	.Ldebug_ranges8
	.byte	10
	.long	.Ldebug_loc138
	.long	.Linfo_string521
	.byte	7
	.byte	54
	.long	13643
	.byte	10
	.long	.Ldebug_loc139
	.long	.Linfo_string55
	.byte	7
	.byte	55
	.long	1432
	.byte	11
	.long	.Ldebug_ranges6
	.byte	10
	.long	.Ldebug_loc140
	.long	.Linfo_string90
	.byte	7
	.byte	66
	.long	2080
	.byte	10
	.long	.Ldebug_loc141
	.long	.Linfo_string55
	.byte	7
	.byte	67
	.long	1432
	.byte	0
	.byte	11
	.long	.Ldebug_ranges7
	.byte	10
	.long	.Ldebug_loc142
	.long	.Linfo_string523
	.byte	7
	.byte	77
	.long	13655
	.byte	10
	.long	.Ldebug_loc143
	.long	.Linfo_string55
	.byte	7
	.byte	78
	.long	1432
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	8
	.quad	.Lfunc_begin41
	.long	.Lfunc_end41-.Lfunc_begin41
	.byte	1
	.byte	87
	.long	.Linfo_string475
	.long	.Linfo_string476
	.byte	7
	.byte	98
	.long	1800

	.byte	9
	.long	.Ldebug_loc144
	.long	.Linfo_string515
	.byte	7
	.byte	98
	.long	16598
	.byte	10
	.long	.Ldebug_loc145
	.long	.Linfo_string755
	.byte	7
	.byte	98
	.long	1800
	.byte	0
	.byte	8
	.quad	.Lfunc_begin42
	.long	.Lfunc_end42-.Lfunc_begin42
	.byte	1
	.byte	87
	.long	.Linfo_string477
	.long	.Linfo_string478
	.byte	7
	.byte	33
	.long	763

	.byte	9
	.long	.Ldebug_loc146
	.long	.Linfo_string515
	.byte	7
	.byte	33
	.long	16598
	.byte	9
	.long	.Ldebug_loc147
	.long	.Linfo_string96
	.byte	7
	.byte	33
	.long	14843
	.byte	7
	.quad	.Ltmp1293
	.long	.Ltmp1313-.Ltmp1293
	.byte	10
	.long	.Ldebug_loc148
	.long	.Linfo_string530
	.byte	7
	.byte	34
	.long	13716
	.byte	7
	.quad	.Ltmp1306
	.long	.Ltmp1313-.Ltmp1306
	.byte	10
	.long	.Ldebug_loc149
	.long	.Linfo_string529
	.byte	7
	.byte	38
	.long	13655
	.byte	10
	.long	.Ldebug_loc150
	.long	.Linfo_string55
	.byte	7
	.byte	40
	.long	1432
	.byte	0
	.byte	0
	.byte	0
	.byte	28
	.quad	.Lfunc_begin43
	.long	.Lfunc_end43-.Lfunc_begin43
	.byte	1
	.byte	87
	.long	.Linfo_string479
	.byte	7
	.byte	29
	.long	763
	.byte	9
	.long	.Ldebug_loc151
	.long	.Linfo_string608
	.byte	7
	.byte	29
	.long	17119
	.byte	0
	.byte	28
	.quad	.Lfunc_begin44
	.long	.Lfunc_end44-.Lfunc_begin44
	.byte	1
	.byte	87
	.long	.Linfo_string480
	.byte	7
	.byte	30
	.long	763
	.byte	9
	.long	.Ldebug_loc152
	.long	.Linfo_string608
	.byte	7
	.byte	30
	.long	17171
	.byte	0
	.byte	8
	.quad	.Lfunc_begin45
	.long	.Lfunc_end45-.Lfunc_begin45
	.byte	1
	.byte	87
	.long	.Linfo_string481
	.long	.Linfo_string482
	.byte	8
	.byte	39
	.long	13248

	.byte	9
	.long	.Ldebug_loc153
	.long	.Linfo_string726
	.byte	8
	.byte	39
	.long	1800
	.byte	9
	.long	.Ldebug_loc154
	.long	.Linfo_string81
	.byte	8
	.byte	39
	.long	1800
	.byte	18
	.byte	3
	.byte	145
	.ascii	"\240\005"
	.long	.Linfo_string553
	.byte	8
	.byte	39
	.long	1800
	.byte	18
	.byte	3
	.byte	145
	.ascii	"\260\005"
	.long	.Linfo_string552
	.byte	8
	.byte	39
	.long	1800
	.byte	18
	.byte	3
	.byte	145
	.ascii	"\300\005"
	.long	.Linfo_string551
	.byte	8
	.byte	40
	.long	1800
	.byte	18
	.byte	3
	.byte	145
	.ascii	"\320\005"
	.long	.Linfo_string550
	.byte	8
	.byte	40
	.long	1800
	.byte	18
	.byte	3
	.byte	145
	.ascii	"\340\005"
	.long	.Linfo_string549
	.byte	8
	.byte	40
	.long	1800
	.byte	10
	.long	.Ldebug_loc157
	.long	.Linfo_string758
	.byte	8
	.byte	40
	.long	1432
	.byte	10
	.long	.Ldebug_loc159
	.long	.Linfo_string759
	.byte	8
	.byte	40
	.long	13282
	.byte	7
	.quad	.Ltmp1321
	.long	.Ltmp1355-.Ltmp1321
	.byte	10
	.long	.Ldebug_loc155
	.long	.Linfo_string110
	.byte	8
	.byte	41
	.long	7330
	.byte	10
	.long	.Ldebug_loc156
	.long	.Linfo_string55
	.byte	8
	.byte	41
	.long	1432
	.byte	10
	.long	.Ldebug_loc158
	.long	.Linfo_string92
	.byte	8
	.byte	46
	.long	6967
	.byte	10
	.long	.Ldebug_loc160
	.long	.Linfo_string99
	.byte	8
	.byte	51
	.long	7057
	.byte	10
	.long	.Ldebug_loc161
	.long	.Linfo_string716
	.byte	8
	.byte	58
	.long	13282
	.byte	0
	.byte	0
	.byte	28
	.quad	.Lfunc_begin46
	.long	.Lfunc_end46-.Lfunc_begin46
	.byte	1
	.byte	87
	.long	.Linfo_string497
	.byte	8
	.byte	89
	.long	763
	.byte	9
	.long	.Ldebug_loc162
	.long	.Linfo_string608
	.byte	8
	.byte	89
	.long	17210
	.byte	0
	.byte	28
	.quad	.Lfunc_begin47
	.long	.Lfunc_end47-.Lfunc_begin47
	.byte	1
	.byte	87
	.long	.Linfo_string498
	.byte	8
	.byte	90
	.long	763
	.byte	9
	.long	.Ldebug_loc163
	.long	.Linfo_string608
	.byte	8
	.byte	90
	.long	17210
	.byte	0
	.byte	28
	.quad	.Lfunc_begin48
	.long	.Lfunc_end48-.Lfunc_begin48
	.byte	1
	.byte	87
	.long	.Linfo_string499
	.byte	8
	.byte	91
	.long	763
	.byte	9
	.long	.Ldebug_loc164
	.long	.Linfo_string608
	.byte	8
	.byte	91
	.long	14773
	.byte	0
	.byte	28
	.quad	.Lfunc_begin49
	.long	.Lfunc_end49-.Lfunc_begin49
	.byte	1
	.byte	87
	.long	.Linfo_string500
	.byte	8
	.byte	92
	.long	763
	.byte	9
	.long	.Ldebug_loc165
	.long	.Linfo_string608
	.byte	8
	.byte	92
	.long	14773
	.byte	0
	.byte	28
	.quad	.Lfunc_begin50
	.long	.Lfunc_end50-.Lfunc_begin50
	.byte	1
	.byte	87
	.long	.Linfo_string501
	.byte	8
	.byte	99
	.long	1788
	.byte	9
	.long	.Ldebug_loc166
	.long	.Linfo_string608
	.byte	8
	.byte	99
	.long	14848
	.byte	29
	.byte	0
	.long	.Linfo_string761
	.byte	8
	.byte	99
	.long	1788
	.byte	0
	.byte	28
	.quad	.Lfunc_begin51
	.long	.Lfunc_end51-.Lfunc_begin51
	.byte	1
	.byte	87
	.long	.Linfo_string502
	.byte	8
	.byte	127
	.long	1788
	.byte	9
	.long	.Ldebug_loc167
	.long	.Linfo_string608
	.byte	8
	.byte	127
	.long	14874
	.byte	29
	.byte	0
	.long	.Linfo_string762
	.byte	8
	.byte	127
	.long	1788
	.byte	0
	.byte	28
	.quad	.Lfunc_begin52
	.long	.Lfunc_end52-.Lfunc_begin52
	.byte	1
	.byte	87
	.long	.Linfo_string503
	.byte	8
	.byte	135
	.long	1788
	.byte	9
	.long	.Ldebug_loc168
	.long	.Linfo_string608
	.byte	8
	.byte	135
	.long	14874
	.byte	29
	.byte	0
	.long	.Linfo_string763
	.byte	8
	.byte	135
	.long	1788
	.byte	0
	.byte	28
	.quad	.Lfunc_begin53
	.long	.Lfunc_end53-.Lfunc_begin53
	.byte	1
	.byte	87
	.long	.Linfo_string504
	.byte	8
	.byte	142
	.long	1788
	.byte	9
	.long	.Ldebug_loc169
	.long	.Linfo_string608
	.byte	8
	.byte	142
	.long	14874
	.byte	29
	.byte	0
	.long	.Linfo_string764
	.byte	8
	.byte	142
	.long	1788
	.byte	0
	.byte	28
	.quad	.Lfunc_begin54
	.long	.Lfunc_end54-.Lfunc_begin54
	.byte	1
	.byte	87
	.long	.Linfo_string505
	.byte	9
	.byte	11
	.long	763
	.byte	9
	.long	.Ldebug_loc170
	.long	.Linfo_string414
	.byte	9
	.byte	11
	.long	7057
	.byte	9
	.long	.Ldebug_loc171
	.long	.Linfo_string97
	.byte	9
	.byte	11
	.long	770
	.byte	9
	.long	.Ldebug_loc172
	.long	.Linfo_string82
	.byte	9
	.byte	11
	.long	14838
	.byte	9
	.long	.Ldebug_loc173
	.long	.Linfo_string96
	.byte	9
	.byte	11
	.long	14843
	.byte	7
	.quad	.Ltmp1451
	.long	.Ltmp1489-.Ltmp1451
	.byte	10
	.long	.Ldebug_loc174
	.long	.Linfo_string765
	.byte	9
	.byte	25
	.long	13655
	.byte	10
	.long	.Ldebug_loc175
	.long	.Linfo_string55
	.byte	9
	.byte	17
	.long	1432
	.byte	10
	.long	.Ldebug_loc176
	.long	.Linfo_string104
	.byte	9
	.byte	17
	.long	1425
	.byte	0
	.byte	0
	.byte	28
	.quad	.Lfunc_begin55
	.long	.Lfunc_end55-.Lfunc_begin55
	.byte	1
	.byte	87
	.long	.Linfo_string506
	.byte	9
	.byte	13
	.long	1788
	.byte	9
	.long	.Ldebug_loc177
	.long	.Linfo_string608
	.byte	9
	.byte	13
	.long	14848
	.byte	29
	.byte	0
	.long	.Linfo_string766
	.byte	9
	.byte	13
	.long	1788
	.byte	0
	.byte	28
	.quad	.Lfunc_begin56
	.long	.Lfunc_end56-.Lfunc_begin56
	.byte	1
	.byte	87
	.long	.Linfo_string507
	.byte	9
	.byte	35
	.long	763
	.byte	9
	.long	.Ldebug_loc178
	.long	.Linfo_string414
	.byte	9
	.byte	35
	.long	7057
	.byte	9
	.long	.Ldebug_loc179
	.long	.Linfo_string767
	.byte	9
	.byte	35
	.long	770
	.byte	9
	.long	.Ldebug_loc180
	.long	.Linfo_string82
	.byte	9
	.byte	35
	.long	14838
	.byte	9
	.long	.Ldebug_loc181
	.long	.Linfo_string96
	.byte	9
	.byte	35
	.long	14843
	.byte	7
	.quad	.Ltmp1564
	.long	.Ltmp1596-.Ltmp1564
	.byte	10
	.long	.Ldebug_loc182
	.long	.Linfo_string529
	.byte	9
	.byte	40
	.long	13655
	.byte	10
	.long	.Ldebug_loc183
	.long	.Linfo_string55
	.byte	9
	.byte	41
	.long	1432
	.byte	10
	.long	.Ldebug_loc184
	.long	.Linfo_string321
	.byte	9
	.byte	41
	.long	1425
	.byte	0
	.byte	0
	.byte	28
	.quad	.Lfunc_begin57
	.long	.Lfunc_end57-.Lfunc_begin57
	.byte	1
	.byte	87
	.long	.Linfo_string508
	.byte	9
	.byte	37
	.long	1788
	.byte	9
	.long	.Ldebug_loc185
	.long	.Linfo_string608
	.byte	9
	.byte	37
	.long	14848
	.byte	29
	.byte	0
	.long	.Linfo_string768
	.byte	9
	.byte	37
	.long	1788
	.byte	0
	.byte	8
	.quad	.Lfunc_begin58
	.long	.Lfunc_end58-.Lfunc_begin58
	.byte	1
	.byte	87
	.long	.Linfo_string509
	.long	.Linfo_string510
	.byte	1
	.byte	1
	.long	1678

	.byte	9
	.long	.Ldebug_loc186
	.long	.Linfo_string769
	.byte	1
	.byte	1
	.long	1734
	.byte	18
	.byte	1
	.byte	84
	.long	.Linfo_string770
	.byte	1
	.byte	1
	.long	1678
	.byte	10
	.long	.Ldebug_loc187
	.long	.Linfo_string771
	.byte	1
	.byte	1
	.long	1678
	.byte	0
	.byte	8
	.quad	.Lfunc_begin59
	.long	.Lfunc_end59-.Lfunc_begin59
	.byte	1
	.byte	87
	.long	.Linfo_string511
	.long	.Linfo_string512
	.byte	1
	.byte	1
	.long	1788

	.byte	9
	.long	.Ldebug_loc188
	.long	.Linfo_string772
	.byte	1
	.byte	1
	.long	1734
	.byte	9
	.long	.Ldebug_loc189
	.long	.Linfo_string773
	.byte	1
	.byte	1
	.long	1734
	.byte	29
	.byte	0
	.long	.Linfo_string774
	.byte	1
	.byte	1
	.long	1788
	.byte	0
	.byte	32
	.quad	.Lfunc_begin60
	.long	.Lfunc_end60-.Lfunc_begin60
	.byte	1
	.byte	87
	.long	.Linfo_string513
	.long	.Linfo_string514
	.byte	2
	.byte	1
	.long	763

	.byte	21
	.long	.Linfo_string422
	.byte	24
	.byte	1
	.byte	22
	.long	.Linfo_string10
	.long	6626
	.byte	5
	.byte	50
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string10
	.long	1432
	.byte	5
	.byte	50
	.byte	8
	.byte	8
	.byte	0
	.byte	14
	.long	6631
	.byte	33
	.long	.Linfo_string421
	.short	288
	.byte	2
	.byte	19
	.byte	1
	.byte	22
	.long	.Linfo_string78
	.long	1788
	.byte	2
	.byte	20
	.byte	1
	.byte	0
	.byte	22
	.long	.Linfo_string79
	.long	1800
	.byte	2
	.byte	21
	.byte	8
	.byte	8
	.byte	22
	.long	.Linfo_string80
	.long	1800
	.byte	2
	.byte	22
	.byte	8
	.byte	24
	.byte	22
	.long	.Linfo_string81
	.long	1800
	.byte	2
	.byte	23
	.byte	8
	.byte	40
	.byte	22
	.long	.Linfo_string82
	.long	6889
	.byte	2
	.byte	25
	.byte	4
	.byte	56
	.byte	22
	.long	.Linfo_string89
	.long	1364
	.byte	2
	.byte	26
	.byte	8
	.byte	72
	.byte	22
	.long	.Linfo_string90
	.long	1364
	.byte	2
	.byte	27
	.byte	8
	.byte	96
	.byte	22
	.long	.Linfo_string91
	.long	2033
	.byte	2
	.byte	28
	.byte	8
	.byte	120
	.byte	22
	.long	.Linfo_string92
	.long	6967
	.byte	2
	.byte	29
	.byte	8
	.byte	144
	.byte	22
	.long	.Linfo_string96
	.long	1788
	.byte	2
	.byte	30
	.byte	1
	.byte	152
	.byte	22
	.long	.Linfo_string97
	.long	770
	.byte	2
	.byte	33
	.byte	8
	.byte	160
	.byte	22
	.long	.Linfo_string98
	.long	770
	.byte	2
	.byte	34
	.byte	8
	.byte	168
	.byte	22
	.long	.Linfo_string99
	.long	7057
	.byte	2
	.byte	36
	.byte	8
	.byte	176
	.byte	22
	.long	.Linfo_string110
	.long	7330
	.byte	2
	.byte	37
	.byte	8
	.byte	184
	.byte	22
	.long	.Linfo_string334
	.long	11801
	.byte	2
	.byte	38
	.byte	8
	.byte	192
	.byte	22
	.long	.Linfo_string407
	.long	10508
	.byte	2
	.byte	39
	.byte	8
	.byte	200
	.byte	22
	.long	.Linfo_string408
	.long	1788
	.byte	2
	.byte	42
	.byte	1
	.byte	216
	.byte	22
	.long	.Linfo_string409
	.long	11569
	.byte	2
	.byte	43
	.byte	4
	.byte	220
	.byte	22
	.long	.Linfo_string410
	.long	13038
	.byte	2
	.byte	45
	.byte	8
	.byte	232
	.byte	0
	.byte	23
	.long	.Linfo_string88
	.byte	16
	.byte	2
	.byte	10
	.byte	1
	.byte	22
	.long	.Linfo_string83
	.long	6938
	.byte	2
	.byte	10
	.byte	1
	.byte	0
	.byte	22
	.long	.Linfo_string85
	.long	6947
	.byte	2
	.byte	10
	.byte	1
	.byte	0
	.byte	22
	.long	.Linfo_string87
	.long	57
	.byte	2
	.byte	10
	.byte	4
	.byte	12
	.byte	0
	.byte	15
	.long	.Linfo_string84
	.byte	0
	.byte	2
	.byte	4
	.byte	1
	.byte	34
	.long	1418
	.byte	35
	.long	6960
	.byte	0
	.byte	12
	.byte	0
	.byte	36
	.long	.Linfo_string86
	.byte	8
	.byte	7
	.byte	14
	.long	6972
	.byte	23
	.long	.Linfo_string95
	.byte	48
	.byte	2
	.byte	4
	.byte	1
	.byte	22
	.long	.Linfo_string16
	.long	1364
	.byte	2
	.byte	4
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string93
	.long	7008
	.byte	2
	.byte	4
	.byte	8
	.byte	24
	.byte	0
	.byte	23
	.long	.Linfo_string94
	.byte	24
	.byte	2
	.byte	4
	.byte	1
	.byte	22
	.long	.Linfo_string11
	.long	1413
	.byte	2
	.byte	1
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string13
	.long	1425
	.byte	2
	.byte	1
	.byte	8
	.byte	8
	.byte	22
	.long	.Linfo_string15
	.long	1425
	.byte	2
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	14
	.long	7062
	.byte	23
	.long	.Linfo_string109
	.byte	40
	.byte	2
	.byte	15
	.byte	1
	.byte	22
	.long	.Linfo_string100
	.long	1788
	.byte	2
	.byte	15
	.byte	1
	.byte	0
	.byte	22
	.long	.Linfo_string101
	.long	7111
	.byte	2
	.byte	15
	.byte	8
	.byte	8
	.byte	22
	.long	.Linfo_string36
	.long	1800
	.byte	2
	.byte	15
	.byte	8
	.byte	24
	.byte	0
	.byte	23
	.long	.Linfo_string101
	.byte	16
	.byte	2
	.byte	15
	.byte	1
	.byte	22
	.long	.Linfo_string17
	.long	7147
	.byte	2
	.byte	15
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string48
	.long	1734
	.byte	2
	.byte	1
	.byte	8
	.byte	8
	.byte	0
	.byte	14
	.long	7152
	.byte	21
	.long	.Linfo_string108
	.byte	32
	.byte	1
	.byte	22
	.long	.Linfo_string18
	.long	1507
	.byte	5
	.byte	15
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string102
	.long	7212
	.byte	5
	.byte	15
	.byte	8
	.byte	8
	.byte	22
	.long	.Linfo_string103
	.long	7228
	.byte	5
	.byte	15
	.byte	8
	.byte	16
	.byte	22
	.long	.Linfo_string107
	.long	7228
	.byte	5
	.byte	15
	.byte	8
	.byte	24
	.byte	0
	.byte	14
	.long	7217
	.byte	24
	.long	1432
	.byte	25
	.long	1734
	.byte	0
	.byte	14
	.long	7233
	.byte	24
	.long	7249
	.byte	25
	.long	1734
	.byte	25
	.long	7283
	.byte	0
	.byte	21
	.long	.Linfo_string105
	.byte	24
	.byte	1
	.byte	22
	.long	.Linfo_string104
	.long	1425
	.byte	5
	.byte	4
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string55
	.long	1432
	.byte	5
	.byte	4
	.byte	8
	.byte	8
	.byte	0
	.byte	21
	.long	.Linfo_string106
	.byte	24
	.byte	1
	.byte	22
	.long	.Linfo_string11
	.long	1413
	.byte	5
	.byte	1
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string13
	.long	1425
	.byte	5
	.byte	1
	.byte	8
	.byte	8
	.byte	22
	.long	.Linfo_string15
	.long	1425
	.byte	5
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	14
	.long	7335
	.byte	33
	.long	.Linfo_string333
	.short	368
	.byte	2
	.byte	4
	.byte	1
	.byte	22
	.long	.Linfo_string111
	.long	7716
	.byte	2
	.byte	4
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string114
	.long	7791
	.byte	2
	.byte	4
	.byte	8
	.byte	16
	.byte	22
	.long	.Linfo_string136
	.long	8200
	.byte	2
	.byte	4
	.byte	8
	.byte	24
	.byte	22
	.long	.Linfo_string232
	.long	10002
	.byte	2
	.byte	4
	.byte	8
	.byte	48
	.byte	22
	.long	.Linfo_string244
	.long	10141
	.byte	2
	.byte	4
	.byte	8
	.byte	56
	.byte	22
	.long	.Linfo_string270
	.long	10799
	.byte	2
	.byte	4
	.byte	8
	.byte	64
	.byte	22
	.long	.Linfo_string273
	.long	10884
	.byte	2
	.byte	4
	.byte	8
	.byte	72
	.byte	22
	.long	.Linfo_string275
	.long	10962
	.byte	2
	.byte	4
	.byte	8
	.byte	80
	.byte	22
	.long	.Linfo_string278
	.long	11115
	.byte	2
	.byte	4
	.byte	8
	.byte	88
	.byte	22
	.long	.Linfo_string283
	.long	9304
	.byte	2
	.byte	4
	.byte	8
	.byte	96
	.byte	22
	.long	.Linfo_string248
	.long	1800
	.byte	2
	.byte	4
	.byte	8
	.byte	120
	.byte	22
	.long	.Linfo_string284
	.long	11169
	.byte	2
	.byte	4
	.byte	8
	.byte	136
	.byte	22
	.long	.Linfo_string286
	.long	11115
	.byte	2
	.byte	4
	.byte	8
	.byte	144
	.byte	22
	.long	.Linfo_string287
	.long	1788
	.byte	2
	.byte	4
	.byte	1
	.byte	152
	.byte	22
	.long	.Linfo_string246
	.long	10338
	.byte	2
	.byte	4
	.byte	8
	.byte	160
	.byte	22
	.long	.Linfo_string288
	.long	1788
	.byte	2
	.byte	4
	.byte	1
	.byte	184
	.byte	22
	.long	.Linfo_string289
	.long	1788
	.byte	2
	.byte	4
	.byte	1
	.byte	185
	.byte	22
	.long	.Linfo_string290
	.long	11176
	.byte	2
	.byte	4
	.byte	1
	.byte	186
	.byte	22
	.long	.Linfo_string291
	.long	11189
	.byte	2
	.byte	4
	.byte	8
	.byte	224
	.byte	22
	.long	.Linfo_string305
	.long	10134
	.byte	2
	.byte	4
	.byte	2
	.byte	240
	.byte	22
	.long	.Linfo_string306
	.long	10134
	.byte	2
	.byte	4
	.byte	2
	.byte	242
	.byte	22
	.long	.Linfo_string307
	.long	10390
	.byte	2
	.byte	4
	.byte	8
	.byte	248
	.byte	37
	.long	.Linfo_string308
	.long	1788
	.byte	2
	.byte	4
	.byte	1
	.short	272
	.byte	37
	.long	.Linfo_string309
	.long	11451
	.byte	2
	.byte	4
	.byte	8
	.short	280
	.byte	37
	.long	.Linfo_string311
	.long	11458
	.byte	2
	.byte	4
	.byte	8
	.short	288
	.byte	37
	.long	.Linfo_string313
	.long	11533
	.byte	2
	.byte	4
	.byte	4
	.short	304
	.byte	37
	.long	.Linfo_string320
	.long	11612
	.byte	2
	.byte	4
	.byte	4
	.short	316
	.byte	37
	.long	.Linfo_string327
	.long	11687
	.byte	2
	.byte	4
	.byte	8
	.short	344
	.byte	0
	.byte	23
	.long	.Linfo_string113
	.byte	16
	.byte	2
	.byte	4
	.byte	1
	.byte	22
	.long	.Linfo_string17
	.long	7752
	.byte	2
	.byte	4
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string48
	.long	1734
	.byte	2
	.byte	1
	.byte	8
	.byte	8
	.byte	0
	.byte	14
	.long	7757
	.byte	21
	.long	.Linfo_string112
	.byte	16
	.byte	1
	.byte	22
	.long	.Linfo_string18
	.long	1507
	.byte	5
	.byte	4
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string103
	.long	7228
	.byte	5
	.byte	4
	.byte	8
	.byte	8
	.byte	0
	.byte	14
	.long	7796
	.byte	23
	.long	.Linfo_string28
	.byte	8
	.byte	2
	.byte	4
	.byte	1
	.byte	22
	.long	.Linfo_string27
	.long	7819
	.byte	2
	.byte	4
	.byte	8
	.byte	0
	.byte	0
	.byte	14
	.long	7824
	.byte	38
	.long	7829
	.byte	23
	.long	.Linfo_string114
	.byte	24
	.byte	2
	.byte	4
	.byte	1
	.byte	22
	.long	.Linfo_string115
	.long	7878
	.byte	2
	.byte	4
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string117
	.long	7885
	.byte	2
	.byte	4
	.byte	8
	.byte	8
	.byte	22
	.long	.Linfo_string119
	.long	7892
	.byte	2
	.byte	4
	.byte	8
	.byte	16
	.byte	0
	.byte	3
	.long	.Linfo_string116
	.byte	7
	.byte	8
	.byte	3
	.long	.Linfo_string118
	.byte	5
	.byte	8
	.byte	14
	.long	7897
	.byte	23
	.long	.Linfo_string135
	.byte	88
	.byte	2
	.byte	4
	.byte	1
	.byte	22
	.long	.Linfo_string36
	.long	1800
	.byte	2
	.byte	4
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string120
	.long	7985
	.byte	2
	.byte	4
	.byte	8
	.byte	16
	.byte	22
	.long	.Linfo_string125
	.long	8086
	.byte	2
	.byte	4
	.byte	8
	.byte	40
	.byte	22
	.long	.Linfo_string132
	.long	7885
	.byte	2
	.byte	4
	.byte	8
	.byte	64
	.byte	22
	.long	.Linfo_string133
	.long	7885
	.byte	2
	.byte	4
	.byte	8
	.byte	72
	.byte	22
	.long	.Linfo_string134
	.long	8032
	.byte	2
	.byte	4
	.byte	8
	.byte	80
	.byte	0
	.byte	21
	.long	.Linfo_string124
	.byte	24
	.byte	1
	.byte	22
	.long	.Linfo_string11
	.long	8032
	.byte	5
	.byte	1
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string13
	.long	1425
	.byte	5
	.byte	1
	.byte	8
	.byte	8
	.byte	22
	.long	.Linfo_string15
	.long	1425
	.byte	5
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	14
	.long	8037
	.byte	23
	.long	.Linfo_string123
	.byte	32
	.byte	2
	.byte	4
	.byte	1
	.byte	22
	.long	.Linfo_string36
	.long	1800
	.byte	2
	.byte	4
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string121
	.long	1425
	.byte	2
	.byte	4
	.byte	8
	.byte	16
	.byte	22
	.long	.Linfo_string122
	.long	1788
	.byte	2
	.byte	4
	.byte	1
	.byte	24
	.byte	0
	.byte	21
	.long	.Linfo_string131
	.byte	24
	.byte	1
	.byte	22
	.long	.Linfo_string11
	.long	8133
	.byte	5
	.byte	1
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string13
	.long	1425
	.byte	5
	.byte	1
	.byte	8
	.byte	8
	.byte	22
	.long	.Linfo_string15
	.long	1425
	.byte	5
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	14
	.long	8138
	.byte	23
	.long	.Linfo_string130
	.byte	16
	.byte	2
	.byte	4
	.byte	1
	.byte	22
	.long	.Linfo_string126
	.long	7885
	.byte	2
	.byte	4
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string127
	.long	1418
	.byte	2
	.byte	4
	.byte	1
	.byte	8
	.byte	22
	.long	.Linfo_string128
	.long	1788
	.byte	2
	.byte	4
	.byte	1
	.byte	9
	.byte	22
	.long	.Linfo_string129
	.long	1788
	.byte	2
	.byte	4
	.byte	1
	.byte	10
	.byte	0
	.byte	21
	.long	.Linfo_string231
	.byte	24
	.byte	1
	.byte	22
	.long	.Linfo_string11
	.long	8247
	.byte	5
	.byte	1
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string13
	.long	1425
	.byte	5
	.byte	1
	.byte	8
	.byte	8
	.byte	22
	.long	.Linfo_string15
	.long	1425
	.byte	5
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	14
	.long	8252
	.byte	23
	.long	.Linfo_string137
	.byte	96
	.byte	2
	.byte	4
	.byte	1
	.byte	22
	.long	.Linfo_string137
	.long	8327
	.byte	2
	.byte	4
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string139
	.long	8379
	.byte	2
	.byte	4
	.byte	8
	.byte	24
	.byte	22
	.long	.Linfo_string140
	.long	7283
	.byte	2
	.byte	4
	.byte	8
	.byte	40
	.byte	22
	.long	.Linfo_string141
	.long	8327
	.byte	2
	.byte	4
	.byte	8
	.byte	64
	.byte	22
	.long	.Linfo_string142
	.long	8415
	.byte	2
	.byte	4
	.byte	8
	.byte	88
	.byte	0
	.byte	21
	.long	.Linfo_string138
	.byte	24
	.byte	1
	.byte	22
	.long	.Linfo_string11
	.long	8374
	.byte	5
	.byte	1
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string13
	.long	1425
	.byte	5
	.byte	1
	.byte	8
	.byte	8
	.byte	22
	.long	.Linfo_string15
	.long	1425
	.byte	5
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	14
	.long	7283
	.byte	23
	.long	.Linfo_string139
	.byte	16
	.byte	2
	.byte	4
	.byte	1
	.byte	22
	.long	.Linfo_string18
	.long	1507
	.byte	2
	.byte	1
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string48
	.long	1734
	.byte	2
	.byte	1
	.byte	8
	.byte	8
	.byte	0
	.byte	14
	.long	8420
	.byte	33
	.long	.Linfo_string137
	.short	1328
	.byte	2
	.byte	4
	.byte	1
	.byte	22
	.long	.Linfo_string143
	.long	7283
	.byte	2
	.byte	4
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string144
	.long	7283
	.byte	2
	.byte	4
	.byte	8
	.byte	24
	.byte	22
	.long	.Linfo_string145
	.long	7283
	.byte	2
	.byte	4
	.byte	8
	.byte	48
	.byte	22
	.long	.Linfo_string146
	.long	7283
	.byte	2
	.byte	4
	.byte	8
	.byte	72
	.byte	22
	.long	.Linfo_string147
	.long	7283
	.byte	2
	.byte	4
	.byte	8
	.byte	96
	.byte	22
	.long	.Linfo_string148
	.long	7283
	.byte	2
	.byte	4
	.byte	8
	.byte	120
	.byte	22
	.long	.Linfo_string149
	.long	9035
	.byte	2
	.byte	4
	.byte	8
	.byte	144
	.byte	22
	.long	.Linfo_string150
	.long	9042
	.byte	2
	.byte	4
	.byte	8
	.byte	152
	.byte	22
	.long	.Linfo_string151
	.long	8379
	.byte	2
	.byte	4
	.byte	8
	.byte	160
	.byte	22
	.long	.Linfo_string152
	.long	1425
	.byte	2
	.byte	4
	.byte	8
	.byte	176
	.byte	22
	.long	.Linfo_string153
	.long	9049
	.byte	2
	.byte	4
	.byte	8
	.byte	184
	.byte	22
	.long	.Linfo_string159
	.long	9151
	.byte	2
	.byte	4
	.byte	8
	.byte	192
	.byte	37
	.long	.Linfo_string177
	.long	9151
	.byte	2
	.byte	4
	.byte	8
	.short	440
	.byte	37
	.long	.Linfo_string178
	.long	7829
	.byte	2
	.byte	4
	.byte	8
	.short	688
	.byte	37
	.long	.Linfo_string179
	.long	7829
	.byte	2
	.byte	4
	.byte	8
	.short	712
	.byte	37
	.long	.Linfo_string180
	.long	9493
	.byte	2
	.byte	4
	.byte	8
	.short	736
	.byte	37
	.long	.Linfo_string181
	.long	9500
	.byte	2
	.byte	4
	.byte	8
	.short	744
	.byte	37
	.long	.Linfo_string186
	.long	9500
	.byte	2
	.byte	4
	.byte	8
	.short	768
	.byte	37
	.long	.Linfo_string187
	.long	9601
	.byte	2
	.byte	4
	.byte	8
	.short	792
	.byte	37
	.long	.Linfo_string189
	.long	9653
	.byte	2
	.byte	4
	.byte	8
	.short	816
	.byte	37
	.long	.Linfo_string191
	.long	9601
	.byte	2
	.byte	4
	.byte	8
	.short	840
	.byte	37
	.long	.Linfo_string192
	.long	1788
	.byte	2
	.byte	4
	.byte	1
	.short	864
	.byte	37
	.long	.Linfo_string193
	.long	1788
	.byte	2
	.byte	4
	.byte	1
	.short	865
	.byte	37
	.long	.Linfo_string194
	.long	1425
	.byte	2
	.byte	4
	.byte	8
	.short	872
	.byte	37
	.long	.Linfo_string195
	.long	1788
	.byte	2
	.byte	4
	.byte	1
	.short	880
	.byte	37
	.long	.Linfo_string196
	.long	7283
	.byte	2
	.byte	4
	.byte	8
	.short	888
	.byte	37
	.long	.Linfo_string197
	.long	7283
	.byte	2
	.byte	4
	.byte	8
	.short	912
	.byte	37
	.long	.Linfo_string198
	.long	9304
	.byte	2
	.byte	4
	.byte	8
	.short	936
	.byte	37
	.long	.Linfo_string199
	.long	9304
	.byte	2
	.byte	4
	.byte	8
	.short	960
	.byte	37
	.long	.Linfo_string200
	.long	9304
	.byte	2
	.byte	4
	.byte	8
	.short	984
	.byte	37
	.long	.Linfo_string201
	.long	9304
	.byte	2
	.byte	4
	.byte	8
	.short	1008
	.byte	37
	.long	.Linfo_string202
	.long	2033
	.byte	2
	.byte	4
	.byte	8
	.short	1032
	.byte	37
	.long	.Linfo_string203
	.long	9712
	.byte	2
	.byte	4
	.byte	8
	.short	1056
	.byte	37
	.long	.Linfo_string219
	.long	1788
	.byte	2
	.byte	4
	.byte	1
	.short	1080
	.byte	37
	.long	.Linfo_string220
	.long	9304
	.byte	2
	.byte	4
	.byte	8
	.short	1088
	.byte	37
	.long	.Linfo_string221
	.long	9304
	.byte	2
	.byte	4
	.byte	8
	.short	1112
	.byte	37
	.long	.Linfo_string222
	.long	9950
	.byte	2
	.byte	4
	.byte	8
	.short	1136
	.byte	37
	.long	.Linfo_string224
	.long	9950
	.byte	2
	.byte	4
	.byte	8
	.short	1160
	.byte	37
	.long	.Linfo_string225
	.long	9304
	.byte	2
	.byte	4
	.byte	8
	.short	1184
	.byte	37
	.long	.Linfo_string226
	.long	9304
	.byte	2
	.byte	4
	.byte	8
	.short	1208
	.byte	37
	.long	.Linfo_string227
	.long	9304
	.byte	2
	.byte	4
	.byte	8
	.short	1232
	.byte	37
	.long	.Linfo_string228
	.long	9304
	.byte	2
	.byte	4
	.byte	8
	.short	1256
	.byte	37
	.long	.Linfo_string229
	.long	9304
	.byte	2
	.byte	4
	.byte	8
	.short	1280
	.byte	37
	.long	.Linfo_string230
	.long	9601
	.byte	2
	.byte	4
	.byte	8
	.short	1304
	.byte	0
	.byte	3
	.long	.Linfo_string149
	.byte	5
	.byte	8
	.byte	3
	.long	.Linfo_string150
	.byte	5
	.byte	8
	.byte	14
	.long	9054
	.byte	23
	.long	.Linfo_string158
	.byte	32
	.byte	2
	.byte	4
	.byte	1
	.byte	22
	.long	.Linfo_string154
	.long	1788
	.byte	2
	.byte	4
	.byte	1
	.byte	0
	.byte	22
	.long	.Linfo_string155
	.long	9090
	.byte	2
	.byte	4
	.byte	8
	.byte	8
	.byte	0
	.byte	23
	.long	.Linfo_string157
	.byte	24
	.byte	2
	.byte	4
	.byte	1
	.byte	22
	.long	.Linfo_string11
	.long	9139
	.byte	2
	.byte	1
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string13
	.long	1425
	.byte	2
	.byte	1
	.byte	8
	.byte	8
	.byte	22
	.long	.Linfo_string15
	.long	1425
	.byte	2
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	14
	.long	9144
	.byte	3
	.long	.Linfo_string156
	.byte	7
	.byte	8
	.byte	23
	.long	.Linfo_string176
	.byte	248
	.byte	2
	.byte	4
	.byte	1
	.byte	22
	.long	.Linfo_string160
	.long	9304
	.byte	2
	.byte	4
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string162
	.long	9304
	.byte	2
	.byte	4
	.byte	8
	.byte	24
	.byte	22
	.long	.Linfo_string163
	.long	9304
	.byte	2
	.byte	4
	.byte	8
	.byte	48
	.byte	22
	.long	.Linfo_string164
	.long	9304
	.byte	2
	.byte	4
	.byte	8
	.byte	72
	.byte	22
	.long	.Linfo_string165
	.long	9304
	.byte	2
	.byte	4
	.byte	8
	.byte	96
	.byte	22
	.long	.Linfo_string166
	.long	9304
	.byte	2
	.byte	4
	.byte	8
	.byte	120
	.byte	22
	.long	.Linfo_string167
	.long	9304
	.byte	2
	.byte	4
	.byte	8
	.byte	144
	.byte	22
	.long	.Linfo_string153
	.long	1800
	.byte	2
	.byte	4
	.byte	8
	.byte	168
	.byte	22
	.long	.Linfo_string168
	.long	1800
	.byte	2
	.byte	4
	.byte	8
	.byte	184
	.byte	22
	.long	.Linfo_string169
	.long	9351
	.byte	2
	.byte	4
	.byte	8
	.byte	200
	.byte	22
	.long	.Linfo_string175
	.long	9351
	.byte	2
	.byte	4
	.byte	8
	.byte	224
	.byte	0
	.byte	21
	.long	.Linfo_string161
	.byte	24
	.byte	1
	.byte	22
	.long	.Linfo_string11
	.long	1795
	.byte	5
	.byte	1
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string13
	.long	1425
	.byte	5
	.byte	1
	.byte	8
	.byte	8
	.byte	22
	.long	.Linfo_string15
	.long	1425
	.byte	5
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	21
	.long	.Linfo_string174
	.byte	24
	.byte	1
	.byte	22
	.long	.Linfo_string11
	.long	9398
	.byte	5
	.byte	1
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string13
	.long	1425
	.byte	5
	.byte	1
	.byte	8
	.byte	8
	.byte	22
	.long	.Linfo_string15
	.long	1425
	.byte	5
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	14
	.long	9403
	.byte	23
	.long	.Linfo_string173
	.byte	40
	.byte	2
	.byte	4
	.byte	1
	.byte	22
	.long	.Linfo_string170
	.long	9439
	.byte	2
	.byte	4
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string172
	.long	8379
	.byte	2
	.byte	4
	.byte	8
	.byte	24
	.byte	0
	.byte	23
	.long	.Linfo_string171
	.byte	24
	.byte	2
	.byte	4
	.byte	1
	.byte	22
	.long	.Linfo_string11
	.long	9488
	.byte	2
	.byte	1
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string13
	.long	1425
	.byte	2
	.byte	1
	.byte	8
	.byte	8
	.byte	22
	.long	.Linfo_string15
	.long	1425
	.byte	2
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	14
	.long	1425
	.byte	3
	.long	.Linfo_string180
	.byte	5
	.byte	8
	.byte	21
	.long	.Linfo_string185
	.byte	24
	.byte	1
	.byte	22
	.long	.Linfo_string11
	.long	9547
	.byte	5
	.byte	1
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string13
	.long	1425
	.byte	5
	.byte	1
	.byte	8
	.byte	8
	.byte	22
	.long	.Linfo_string15
	.long	1425
	.byte	5
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	14
	.long	9552
	.byte	23
	.long	.Linfo_string184
	.byte	56
	.byte	2
	.byte	4
	.byte	1
	.byte	22
	.long	.Linfo_string182
	.long	9439
	.byte	2
	.byte	4
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string183
	.long	1788
	.byte	2
	.byte	4
	.byte	1
	.byte	24
	.byte	22
	.long	.Linfo_string172
	.long	7283
	.byte	2
	.byte	4
	.byte	8
	.byte	32
	.byte	0
	.byte	21
	.long	.Linfo_string188
	.byte	24
	.byte	1
	.byte	22
	.long	.Linfo_string11
	.long	9648
	.byte	5
	.byte	1
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string13
	.long	1425
	.byte	5
	.byte	1
	.byte	8
	.byte	8
	.byte	22
	.long	.Linfo_string15
	.long	1425
	.byte	5
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	14
	.long	9439
	.byte	21
	.long	.Linfo_string190
	.byte	24
	.byte	1
	.byte	22
	.long	.Linfo_string11
	.long	9700
	.byte	5
	.byte	1
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string13
	.long	1425
	.byte	5
	.byte	1
	.byte	8
	.byte	8
	.byte	22
	.long	.Linfo_string15
	.long	1425
	.byte	5
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	14
	.long	9705
	.byte	3
	.long	.Linfo_string189
	.byte	5
	.byte	8
	.byte	21
	.long	.Linfo_string218
	.byte	24
	.byte	1
	.byte	22
	.long	.Linfo_string11
	.long	9759
	.byte	5
	.byte	1
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string13
	.long	1425
	.byte	5
	.byte	1
	.byte	8
	.byte	8
	.byte	22
	.long	.Linfo_string15
	.long	1425
	.byte	5
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	14
	.long	9764
	.byte	14
	.long	9769
	.byte	23
	.long	.Linfo_string217
	.byte	128
	.byte	2
	.byte	4
	.byte	1
	.byte	22
	.long	.Linfo_string204
	.long	1800
	.byte	2
	.byte	4
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string205
	.long	1800
	.byte	2
	.byte	4
	.byte	8
	.byte	16
	.byte	22
	.long	.Linfo_string206
	.long	9896
	.byte	2
	.byte	4
	.byte	8
	.byte	32
	.byte	22
	.long	.Linfo_string211
	.long	1800
	.byte	2
	.byte	4
	.byte	8
	.byte	40
	.byte	22
	.long	.Linfo_string212
	.long	1800
	.byte	2
	.byte	4
	.byte	8
	.byte	56
	.byte	22
	.long	.Linfo_string213
	.long	1800
	.byte	2
	.byte	4
	.byte	8
	.byte	72
	.byte	22
	.long	.Linfo_string214
	.long	1788
	.byte	2
	.byte	4
	.byte	1
	.byte	88
	.byte	22
	.long	.Linfo_string215
	.long	1800
	.byte	2
	.byte	4
	.byte	8
	.byte	96
	.byte	22
	.long	.Linfo_string216
	.long	1800
	.byte	2
	.byte	4
	.byte	8
	.byte	112
	.byte	0
	.byte	14
	.long	9901
	.byte	23
	.long	.Linfo_string210
	.byte	40
	.byte	2
	.byte	4
	.byte	1
	.byte	22
	.long	.Linfo_string207
	.long	1800
	.byte	2
	.byte	4
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string208
	.long	1800
	.byte	2
	.byte	4
	.byte	8
	.byte	16
	.byte	22
	.long	.Linfo_string209
	.long	1788
	.byte	2
	.byte	4
	.byte	1
	.byte	32
	.byte	0
	.byte	21
	.long	.Linfo_string223
	.byte	24
	.byte	1
	.byte	22
	.long	.Linfo_string11
	.long	9997
	.byte	5
	.byte	1
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string13
	.long	1425
	.byte	5
	.byte	1
	.byte	8
	.byte	8
	.byte	22
	.long	.Linfo_string15
	.long	1425
	.byte	5
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	14
	.long	6967
	.byte	14
	.long	10007
	.byte	23
	.long	.Linfo_string243
	.byte	48
	.byte	1
	.byte	1
	.byte	1
	.byte	22
	.long	.Linfo_string233
	.long	1425
	.byte	1
	.byte	1
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string234
	.long	1418
	.byte	1
	.byte	1
	.byte	1
	.byte	8
	.byte	22
	.long	.Linfo_string235
	.long	1418
	.byte	1
	.byte	1
	.byte	1
	.byte	9
	.byte	22
	.long	.Linfo_string236
	.long	10134
	.byte	1
	.byte	1
	.byte	2
	.byte	10
	.byte	22
	.long	.Linfo_string238
	.long	57
	.byte	1
	.byte	1
	.byte	4
	.byte	12
	.byte	22
	.long	.Linfo_string239
	.long	1734
	.byte	1
	.byte	1
	.byte	8
	.byte	16
	.byte	22
	.long	.Linfo_string240
	.long	1734
	.byte	1
	.byte	1
	.byte	8
	.byte	24
	.byte	22
	.long	.Linfo_string241
	.long	1678
	.byte	1
	.byte	1
	.byte	8
	.byte	32
	.byte	22
	.long	.Linfo_string242
	.long	1734
	.byte	1
	.byte	1
	.byte	8
	.byte	40
	.byte	0
	.byte	3
	.long	.Linfo_string237
	.byte	7
	.byte	2
	.byte	14
	.long	10146
	.byte	23
	.long	.Linfo_string28
	.byte	8
	.byte	2
	.byte	4
	.byte	1
	.byte	22
	.long	.Linfo_string27
	.long	10169
	.byte	2
	.byte	4
	.byte	8
	.byte	0
	.byte	0
	.byte	14
	.long	10174
	.byte	24
	.long	10185
	.byte	25
	.long	10219
	.byte	0
	.byte	21
	.long	.Linfo_string245
	.byte	24
	.byte	1
	.byte	22
	.long	.Linfo_string10
	.long	8247
	.byte	5
	.byte	4
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string10
	.long	1432
	.byte	5
	.byte	4
	.byte	8
	.byte	8
	.byte	0
	.byte	14
	.long	10224
	.byte	23
	.long	.Linfo_string269
	.byte	176
	.byte	2
	.byte	4
	.byte	1
	.byte	22
	.long	.Linfo_string246
	.long	10338
	.byte	2
	.byte	4
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string248
	.long	1800
	.byte	2
	.byte	4
	.byte	8
	.byte	24
	.byte	22
	.long	.Linfo_string249
	.long	10390
	.byte	2
	.byte	4
	.byte	8
	.byte	40
	.byte	22
	.long	.Linfo_string252
	.long	7283
	.byte	2
	.byte	4
	.byte	8
	.byte	64
	.byte	22
	.long	.Linfo_string253
	.long	10449
	.byte	2
	.byte	4
	.byte	8
	.byte	88
	.byte	22
	.long	.Linfo_string256
	.long	9304
	.byte	2
	.byte	4
	.byte	8
	.byte	112
	.byte	22
	.long	.Linfo_string257
	.long	10338
	.byte	2
	.byte	4
	.byte	8
	.byte	136
	.byte	22
	.long	.Linfo_string258
	.long	10508
	.byte	2
	.byte	4
	.byte	8
	.byte	160
	.byte	0
	.byte	21
	.long	.Linfo_string247
	.byte	24
	.byte	1
	.byte	22
	.long	.Linfo_string11
	.long	10385
	.byte	5
	.byte	1
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string13
	.long	1425
	.byte	5
	.byte	1
	.byte	8
	.byte	8
	.byte	22
	.long	.Linfo_string15
	.long	1425
	.byte	5
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	14
	.long	10134
	.byte	21
	.long	.Linfo_string251
	.byte	24
	.byte	1
	.byte	22
	.long	.Linfo_string11
	.long	10437
	.byte	5
	.byte	1
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string13
	.long	1425
	.byte	5
	.byte	1
	.byte	8
	.byte	8
	.byte	22
	.long	.Linfo_string15
	.long	1425
	.byte	5
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	14
	.long	10442
	.byte	3
	.long	.Linfo_string250
	.byte	7
	.byte	2
	.byte	21
	.long	.Linfo_string255
	.byte	24
	.byte	1
	.byte	22
	.long	.Linfo_string11
	.long	10496
	.byte	5
	.byte	1
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string13
	.long	1425
	.byte	5
	.byte	1
	.byte	8
	.byte	8
	.byte	22
	.long	.Linfo_string15
	.long	1425
	.byte	5
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	14
	.long	10501
	.byte	3
	.long	.Linfo_string254
	.byte	7
	.byte	2
	.byte	23
	.long	.Linfo_string258
	.byte	16
	.byte	2
	.byte	4
	.byte	1
	.byte	22
	.long	.Linfo_string17
	.long	10544
	.byte	2
	.byte	4
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string48
	.long	1734
	.byte	2
	.byte	1
	.byte	8
	.byte	8
	.byte	0
	.byte	14
	.long	10549
	.byte	21
	.long	.Linfo_string268
	.byte	72
	.byte	1
	.byte	22
	.long	.Linfo_string18
	.long	1507
	.byte	5
	.byte	4
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string102
	.long	7212
	.byte	5
	.byte	4
	.byte	8
	.byte	8
	.byte	22
	.long	.Linfo_string259
	.long	10674
	.byte	5
	.byte	4
	.byte	8
	.byte	16
	.byte	22
	.long	.Linfo_string103
	.long	7228
	.byte	5
	.byte	4
	.byte	8
	.byte	24
	.byte	22
	.long	.Linfo_string264
	.long	10674
	.byte	5
	.byte	4
	.byte	8
	.byte	32
	.byte	22
	.long	.Linfo_string265
	.long	10778
	.byte	5
	.byte	4
	.byte	8
	.byte	40
	.byte	22
	.long	.Linfo_string266
	.long	10778
	.byte	5
	.byte	4
	.byte	8
	.byte	48
	.byte	22
	.long	.Linfo_string267
	.long	10778
	.byte	5
	.byte	4
	.byte	8
	.byte	56
	.byte	22
	.long	.Linfo_string107
	.long	7228
	.byte	5
	.byte	4
	.byte	8
	.byte	64
	.byte	0
	.byte	14
	.long	10679
	.byte	24
	.long	10690
	.byte	25
	.long	1734
	.byte	0
	.byte	23
	.long	.Linfo_string263
	.byte	16
	.byte	2
	.byte	4
	.byte	1
	.byte	22
	.long	.Linfo_string17
	.long	10726
	.byte	2
	.byte	4
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string48
	.long	1734
	.byte	2
	.byte	1
	.byte	8
	.byte	8
	.byte	0
	.byte	14
	.long	10731
	.byte	21
	.long	.Linfo_string262
	.byte	24
	.byte	1
	.byte	22
	.long	.Linfo_string18
	.long	1507
	.byte	5
	.byte	4
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string260
	.long	2017
	.byte	5
	.byte	4
	.byte	8
	.byte	8
	.byte	22
	.long	.Linfo_string261
	.long	2017
	.byte	5
	.byte	4
	.byte	8
	.byte	16
	.byte	0
	.byte	14
	.long	10783
	.byte	24
	.long	1432
	.byte	25
	.long	1734
	.byte	25
	.long	7829
	.byte	0
	.byte	14
	.long	10804
	.byte	23
	.long	.Linfo_string28
	.byte	8
	.byte	2
	.byte	4
	.byte	1
	.byte	22
	.long	.Linfo_string27
	.long	10827
	.byte	2
	.byte	4
	.byte	8
	.byte	0
	.byte	0
	.byte	14
	.long	10832
	.byte	24
	.long	10185
	.byte	25
	.long	10843
	.byte	0
	.byte	14
	.long	10848
	.byte	23
	.long	.Linfo_string272
	.byte	48
	.byte	2
	.byte	4
	.byte	1
	.byte	22
	.long	.Linfo_string271
	.long	8327
	.byte	2
	.byte	4
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string253
	.long	10449
	.byte	2
	.byte	4
	.byte	8
	.byte	24
	.byte	0
	.byte	14
	.long	10889
	.byte	23
	.long	.Linfo_string28
	.byte	8
	.byte	2
	.byte	4
	.byte	1
	.byte	22
	.long	.Linfo_string27
	.long	10912
	.byte	2
	.byte	4
	.byte	8
	.byte	0
	.byte	0
	.byte	14
	.long	10917
	.byte	24
	.long	10928
	.byte	25
	.long	10219
	.byte	0
	.byte	21
	.long	.Linfo_string274
	.byte	24
	.byte	1
	.byte	22
	.long	.Linfo_string10
	.long	1734
	.byte	5
	.byte	4
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string10
	.long	1432
	.byte	5
	.byte	4
	.byte	8
	.byte	8
	.byte	0
	.byte	14
	.long	10967
	.byte	23
	.long	.Linfo_string28
	.byte	8
	.byte	2
	.byte	4
	.byte	1
	.byte	22
	.long	.Linfo_string27
	.long	10990
	.byte	2
	.byte	4
	.byte	8
	.byte	0
	.byte	0
	.byte	14
	.long	10995
	.byte	24
	.long	1432
	.byte	25
	.long	8327
	.byte	25
	.long	11011
	.byte	0
	.byte	21
	.long	.Linfo_string277
	.byte	24
	.byte	1
	.byte	22
	.long	.Linfo_string11
	.long	11058
	.byte	5
	.byte	1
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string13
	.long	1425
	.byte	5
	.byte	1
	.byte	8
	.byte	8
	.byte	22
	.long	.Linfo_string15
	.long	1425
	.byte	5
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	14
	.long	11063
	.byte	21
	.long	.Linfo_string276
	.byte	24
	.byte	1
	.byte	22
	.long	.Linfo_string11
	.long	11110
	.byte	5
	.byte	1
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string13
	.long	1425
	.byte	5
	.byte	1
	.byte	8
	.byte	8
	.byte	22
	.long	.Linfo_string15
	.long	1425
	.byte	5
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	14
	.long	8415
	.byte	14
	.long	11120
	.byte	23
	.long	.Linfo_string282
	.byte	40
	.byte	2
	.byte	4
	.byte	1
	.byte	22
	.long	.Linfo_string279
	.long	10002
	.byte	2
	.byte	4
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string280
	.long	10002
	.byte	2
	.byte	4
	.byte	8
	.byte	8
	.byte	22
	.long	.Linfo_string281
	.long	11063
	.byte	2
	.byte	4
	.byte	8
	.byte	16
	.byte	0
	.byte	3
	.long	.Linfo_string285
	.byte	5
	.byte	8
	.byte	34
	.long	1418
	.byte	35
	.long	6960
	.byte	0
	.byte	32
	.byte	0
	.byte	23
	.long	.Linfo_string291
	.byte	16
	.byte	2
	.byte	4
	.byte	1
	.byte	22
	.long	.Linfo_string17
	.long	11225
	.byte	2
	.byte	4
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string48
	.long	1734
	.byte	2
	.byte	1
	.byte	8
	.byte	8
	.byte	0
	.byte	14
	.long	11230
	.byte	21
	.long	.Linfo_string304
	.byte	24
	.byte	1
	.byte	22
	.long	.Linfo_string18
	.long	1507
	.byte	5
	.byte	4
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string292
	.long	11277
	.byte	5
	.byte	4
	.byte	8
	.byte	8
	.byte	22
	.long	.Linfo_string303
	.long	11425
	.byte	5
	.byte	4
	.byte	8
	.byte	16
	.byte	0
	.byte	14
	.long	11282
	.byte	24
	.long	11298
	.byte	25
	.long	1734
	.byte	25
	.long	1800
	.byte	0
	.byte	21
	.long	.Linfo_string302
	.byte	16
	.byte	1
	.byte	22
	.long	.Linfo_string293
	.long	11332
	.byte	5
	.byte	4
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string301
	.long	1788
	.byte	5
	.byte	4
	.byte	1
	.byte	8
	.byte	0
	.byte	14
	.long	11337
	.byte	23
	.long	.Linfo_string300
	.byte	104
	.byte	2
	.byte	4
	.byte	1
	.byte	22
	.long	.Linfo_string294
	.long	7283
	.byte	2
	.byte	4
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string295
	.long	10134
	.byte	2
	.byte	4
	.byte	2
	.byte	24
	.byte	22
	.long	.Linfo_string296
	.long	10134
	.byte	2
	.byte	4
	.byte	2
	.byte	26
	.byte	22
	.long	.Linfo_string297
	.long	7283
	.byte	2
	.byte	4
	.byte	8
	.byte	32
	.byte	22
	.long	.Linfo_string298
	.long	11063
	.byte	2
	.byte	4
	.byte	8
	.byte	56
	.byte	22
	.long	.Linfo_string299
	.long	11011
	.byte	2
	.byte	4
	.byte	8
	.byte	80
	.byte	0
	.byte	14
	.long	11430
	.byte	24
	.long	763
	.byte	25
	.long	1734
	.byte	25
	.long	1800
	.byte	25
	.long	11332
	.byte	0
	.byte	3
	.long	.Linfo_string310
	.byte	5
	.byte	8
	.byte	23
	.long	.Linfo_string312
	.byte	16
	.byte	2
	.byte	4
	.byte	1
	.byte	22
	.long	.Linfo_string17
	.long	11494
	.byte	2
	.byte	4
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string48
	.long	1734
	.byte	2
	.byte	1
	.byte	8
	.byte	8
	.byte	0
	.byte	14
	.long	11499
	.byte	21
	.long	.Linfo_string112
	.byte	16
	.byte	1
	.byte	22
	.long	.Linfo_string18
	.long	1507
	.byte	5
	.byte	4
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string107
	.long	7228
	.byte	5
	.byte	4
	.byte	8
	.byte	8
	.byte	0
	.byte	23
	.long	.Linfo_string319
	.byte	12
	.byte	2
	.byte	4
	.byte	1
	.byte	22
	.long	.Linfo_string314
	.long	11569
	.byte	2
	.byte	4
	.byte	4
	.byte	0
	.byte	22
	.long	.Linfo_string318
	.long	57
	.byte	2
	.byte	4
	.byte	4
	.byte	8
	.byte	0
	.byte	23
	.long	.Linfo_string317
	.byte	8
	.byte	2
	.byte	4
	.byte	1
	.byte	22
	.long	.Linfo_string315
	.long	11605
	.byte	2
	.byte	4
	.byte	4
	.byte	0
	.byte	22
	.long	.Linfo_string87
	.long	57
	.byte	2
	.byte	4
	.byte	4
	.byte	4
	.byte	0
	.byte	3
	.long	.Linfo_string316
	.byte	5
	.byte	4
	.byte	23
	.long	.Linfo_string326
	.byte	24
	.byte	2
	.byte	4
	.byte	1
	.byte	22
	.long	.Linfo_string321
	.long	11569
	.byte	2
	.byte	4
	.byte	4
	.byte	0
	.byte	22
	.long	.Linfo_string322
	.long	57
	.byte	2
	.byte	4
	.byte	4
	.byte	8
	.byte	22
	.long	.Linfo_string323
	.long	57
	.byte	2
	.byte	4
	.byte	4
	.byte	12
	.byte	22
	.long	.Linfo_string324
	.long	11605
	.byte	2
	.byte	4
	.byte	4
	.byte	16
	.byte	22
	.long	.Linfo_string325
	.long	11605
	.byte	2
	.byte	4
	.byte	4
	.byte	20
	.byte	0
	.byte	21
	.long	.Linfo_string332
	.byte	24
	.byte	1
	.byte	22
	.long	.Linfo_string11
	.long	11734
	.byte	5
	.byte	1
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string13
	.long	1425
	.byte	5
	.byte	1
	.byte	8
	.byte	8
	.byte	22
	.long	.Linfo_string15
	.long	1425
	.byte	5
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	14
	.long	11739
	.byte	23
	.long	.Linfo_string331
	.byte	48
	.byte	2
	.byte	4
	.byte	1
	.byte	22
	.long	.Linfo_string328
	.long	11788
	.byte	2
	.byte	4
	.byte	1
	.byte	0
	.byte	22
	.long	.Linfo_string329
	.long	11788
	.byte	2
	.byte	4
	.byte	1
	.byte	16
	.byte	22
	.long	.Linfo_string330
	.long	11788
	.byte	2
	.byte	4
	.byte	1
	.byte	32
	.byte	0
	.byte	34
	.long	1418
	.byte	35
	.long	6960
	.byte	0
	.byte	16
	.byte	0
	.byte	14
	.long	11806
	.byte	33
	.long	.Linfo_string258
	.short	840
	.byte	2
	.byte	4
	.byte	1
	.byte	22
	.long	.Linfo_string335
	.long	10508
	.byte	2
	.byte	4
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string336
	.long	1788
	.byte	2
	.byte	4
	.byte	1
	.byte	16
	.byte	22
	.long	.Linfo_string337
	.long	11569
	.byte	2
	.byte	4
	.byte	4
	.byte	20
	.byte	22
	.long	.Linfo_string338
	.long	12312
	.byte	2
	.byte	4
	.byte	8
	.byte	32
	.byte	22
	.long	.Linfo_string353
	.long	1432
	.byte	2
	.byte	4
	.byte	8
	.byte	40
	.byte	22
	.long	.Linfo_string295
	.long	10134
	.byte	2
	.byte	4
	.byte	2
	.byte	56
	.byte	22
	.long	.Linfo_string354
	.long	1788
	.byte	2
	.byte	4
	.byte	1
	.byte	58
	.byte	22
	.long	.Linfo_string355
	.long	7330
	.byte	2
	.byte	4
	.byte	8
	.byte	64
	.byte	22
	.long	.Linfo_string356
	.long	1788
	.byte	2
	.byte	4
	.byte	1
	.byte	72
	.byte	22
	.long	.Linfo_string357
	.long	1425
	.byte	2
	.byte	4
	.byte	8
	.byte	80
	.byte	22
	.long	.Linfo_string358
	.long	1788
	.byte	2
	.byte	4
	.byte	1
	.byte	88
	.byte	22
	.long	.Linfo_string296
	.long	10134
	.byte	2
	.byte	4
	.byte	2
	.byte	90
	.byte	22
	.long	.Linfo_string359
	.long	7283
	.byte	2
	.byte	4
	.byte	8
	.byte	96
	.byte	22
	.long	.Linfo_string360
	.long	8327
	.byte	2
	.byte	4
	.byte	8
	.byte	120
	.byte	22
	.long	.Linfo_string361
	.long	11063
	.byte	2
	.byte	4
	.byte	8
	.byte	144
	.byte	22
	.long	.Linfo_string299
	.long	11011
	.byte	2
	.byte	4
	.byte	8
	.byte	168
	.byte	22
	.long	.Linfo_string362
	.long	1800
	.byte	2
	.byte	4
	.byte	8
	.byte	192
	.byte	22
	.long	.Linfo_string363
	.long	1788
	.byte	2
	.byte	4
	.byte	1
	.byte	208
	.byte	22
	.long	.Linfo_string364
	.long	1788
	.byte	2
	.byte	4
	.byte	1
	.byte	209
	.byte	22
	.long	.Linfo_string365
	.long	1432
	.byte	2
	.byte	4
	.byte	8
	.byte	216
	.byte	22
	.long	.Linfo_string366
	.long	1788
	.byte	2
	.byte	4
	.byte	1
	.byte	232
	.byte	22
	.long	.Linfo_string367
	.long	6947
	.byte	2
	.byte	4
	.byte	1
	.byte	233
	.byte	22
	.long	.Linfo_string368
	.long	6947
	.byte	2
	.byte	4
	.byte	1
	.byte	245
	.byte	37
	.long	.Linfo_string369
	.long	1800
	.byte	2
	.byte	4
	.byte	8
	.short	264
	.byte	37
	.long	.Linfo_string370
	.long	1788
	.byte	2
	.byte	4
	.byte	1
	.short	280
	.byte	37
	.long	.Linfo_string371
	.long	12565
	.byte	2
	.byte	4
	.byte	8
	.short	288
	.byte	37
	.long	.Linfo_string391
	.long	12565
	.byte	2
	.byte	4
	.byte	8
	.short	464
	.byte	37
	.long	.Linfo_string392
	.long	12889
	.byte	2
	.byte	4
	.byte	8
	.short	640
	.byte	37
	.long	.Linfo_string393
	.long	12889
	.byte	2
	.byte	4
	.byte	8
	.short	648
	.byte	37
	.long	.Linfo_string394
	.long	12956
	.byte	2
	.byte	4
	.byte	8
	.short	656
	.byte	37
	.long	.Linfo_string400
	.long	1788
	.byte	2
	.byte	4
	.byte	1
	.short	760
	.byte	37
	.long	.Linfo_string401
	.long	7283
	.byte	2
	.byte	4
	.byte	8
	.short	768
	.byte	37
	.long	.Linfo_string402
	.long	7885
	.byte	2
	.byte	4
	.byte	8
	.short	792
	.byte	37
	.long	.Linfo_string403
	.long	7885
	.byte	2
	.byte	4
	.byte	8
	.short	800
	.byte	37
	.long	.Linfo_string404
	.long	1425
	.byte	2
	.byte	4
	.byte	8
	.short	808
	.byte	37
	.long	.Linfo_string405
	.long	11605
	.byte	2
	.byte	4
	.byte	4
	.short	816
	.byte	37
	.long	.Linfo_string406
	.long	11788
	.byte	2
	.byte	4
	.byte	1
	.short	820
	.byte	0
	.byte	14
	.long	12317
	.byte	23
	.long	.Linfo_string352
	.byte	56
	.byte	2
	.byte	4
	.byte	1
	.byte	22
	.long	.Linfo_string83
	.long	6938
	.byte	2
	.byte	4
	.byte	1
	.byte	0
	.byte	22
	.long	.Linfo_string339
	.long	12379
	.byte	2
	.byte	4
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string344
	.long	12483
	.byte	2
	.byte	4
	.byte	8
	.byte	16
	.byte	22
	.long	.Linfo_string350
	.long	12558
	.byte	2
	.byte	4
	.byte	8
	.byte	48
	.byte	0
	.byte	23
	.long	.Linfo_string343
	.byte	16
	.byte	2
	.byte	4
	.byte	1
	.byte	22
	.long	.Linfo_string17
	.long	12415
	.byte	2
	.byte	4
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string48
	.long	1734
	.byte	2
	.byte	1
	.byte	8
	.byte	8
	.byte	0
	.byte	14
	.long	12420
	.byte	21
	.long	.Linfo_string342
	.byte	24
	.byte	1
	.byte	22
	.long	.Linfo_string18
	.long	1507
	.byte	5
	.byte	4
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string340
	.long	12467
	.byte	5
	.byte	4
	.byte	8
	.byte	8
	.byte	22
	.long	.Linfo_string341
	.long	12467
	.byte	5
	.byte	4
	.byte	8
	.byte	16
	.byte	0
	.byte	14
	.long	12472
	.byte	24
	.long	763
	.byte	25
	.long	1734
	.byte	0
	.byte	23
	.long	.Linfo_string349
	.byte	32
	.byte	2
	.byte	4
	.byte	1
	.byte	22
	.long	.Linfo_string345
	.long	57
	.byte	2
	.byte	4
	.byte	4
	.byte	0
	.byte	22
	.long	.Linfo_string344
	.long	57
	.byte	2
	.byte	4
	.byte	4
	.byte	4
	.byte	22
	.long	.Linfo_string346
	.long	1678
	.byte	2
	.byte	4
	.byte	8
	.byte	8
	.byte	22
	.long	.Linfo_string347
	.long	1734
	.byte	2
	.byte	4
	.byte	8
	.byte	16
	.byte	22
	.long	.Linfo_string348
	.long	1734
	.byte	2
	.byte	4
	.byte	8
	.byte	24
	.byte	0
	.byte	3
	.long	.Linfo_string351
	.byte	7
	.byte	8
	.byte	23
	.long	.Linfo_string390
	.byte	176
	.byte	2
	.byte	4
	.byte	1
	.byte	22
	.long	.Linfo_string317
	.long	11569
	.byte	2
	.byte	4
	.byte	4
	.byte	0
	.byte	22
	.long	.Linfo_string55
	.long	1432
	.byte	2
	.byte	4
	.byte	8
	.byte	8
	.byte	22
	.long	.Linfo_string372
	.long	10134
	.byte	2
	.byte	4
	.byte	2
	.byte	24
	.byte	22
	.long	.Linfo_string373
	.long	8379
	.byte	2
	.byte	4
	.byte	8
	.byte	32
	.byte	22
	.long	.Linfo_string374
	.long	12731
	.byte	2
	.byte	4
	.byte	8
	.byte	48
	.byte	22
	.long	.Linfo_string379
	.long	12876
	.byte	2
	.byte	4
	.byte	1
	.byte	64
	.byte	22
	.long	.Linfo_string380
	.long	12889
	.byte	2
	.byte	4
	.byte	8
	.byte	72
	.byte	22
	.long	.Linfo_string385
	.long	12943
	.byte	2
	.byte	4
	.byte	1
	.byte	80
	.byte	22
	.long	.Linfo_string386
	.long	8379
	.byte	2
	.byte	4
	.byte	8
	.byte	96
	.byte	22
	.long	.Linfo_string387
	.long	12731
	.byte	2
	.byte	4
	.byte	8
	.byte	112
	.byte	22
	.long	.Linfo_string388
	.long	7283
	.byte	2
	.byte	4
	.byte	8
	.byte	128
	.byte	22
	.long	.Linfo_string389
	.long	7283
	.byte	2
	.byte	4
	.byte	8
	.byte	152
	.byte	0
	.byte	23
	.long	.Linfo_string378
	.byte	16
	.byte	2
	.byte	4
	.byte	1
	.byte	22
	.long	.Linfo_string17
	.long	12767
	.byte	2
	.byte	4
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string48
	.long	1734
	.byte	2
	.byte	1
	.byte	8
	.byte	8
	.byte	0
	.byte	14
	.long	12772
	.byte	21
	.long	.Linfo_string377
	.byte	24
	.byte	1
	.byte	22
	.long	.Linfo_string18
	.long	1507
	.byte	5
	.byte	4
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string375
	.long	12819
	.byte	5
	.byte	4
	.byte	8
	.byte	8
	.byte	22
	.long	.Linfo_string376
	.long	12860
	.byte	5
	.byte	4
	.byte	8
	.byte	16
	.byte	0
	.byte	14
	.long	12824
	.byte	24
	.long	7283
	.byte	25
	.long	1734
	.byte	25
	.long	7283
	.byte	25
	.long	7283
	.byte	25
	.long	7283
	.byte	25
	.long	7283
	.byte	25
	.long	7283
	.byte	0
	.byte	14
	.long	12865
	.byte	24
	.long	1425
	.byte	25
	.long	1734
	.byte	0
	.byte	34
	.long	1418
	.byte	35
	.long	6960
	.byte	0
	.byte	8
	.byte	0
	.byte	14
	.long	12894
	.byte	23
	.long	.Linfo_string384
	.byte	40
	.byte	2
	.byte	4
	.byte	1
	.byte	22
	.long	.Linfo_string381
	.long	7283
	.byte	2
	.byte	4
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string382
	.long	1425
	.byte	2
	.byte	4
	.byte	8
	.byte	24
	.byte	22
	.long	.Linfo_string383
	.long	1734
	.byte	2
	.byte	4
	.byte	8
	.byte	32
	.byte	0
	.byte	34
	.long	1418
	.byte	35
	.long	6960
	.byte	0
	.byte	13
	.byte	0
	.byte	23
	.long	.Linfo_string399
	.byte	104
	.byte	2
	.byte	4
	.byte	1
	.byte	22
	.long	.Linfo_string395
	.long	7283
	.byte	2
	.byte	4
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string382
	.long	1425
	.byte	2
	.byte	4
	.byte	8
	.byte	24
	.byte	22
	.long	.Linfo_string396
	.long	13018
	.byte	2
	.byte	4
	.byte	1
	.byte	32
	.byte	22
	.long	.Linfo_string397
	.long	13031
	.byte	2
	.byte	4
	.byte	1
	.byte	96
	.byte	0
	.byte	34
	.long	1418
	.byte	35
	.long	6960
	.byte	0
	.byte	64
	.byte	0
	.byte	3
	.long	.Linfo_string398
	.byte	5
	.byte	1
	.byte	23
	.long	.Linfo_string420
	.byte	56
	.byte	3
	.byte	12
	.byte	1
	.byte	22
	.long	.Linfo_string411
	.long	13100
	.byte	3
	.byte	13
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string417
	.long	1788
	.byte	3
	.byte	15
	.byte	1
	.byte	24
	.byte	22
	.long	.Linfo_string418
	.long	1800
	.byte	3
	.byte	16
	.byte	8
	.byte	32
	.byte	22
	.long	.Linfo_string419
	.long	7057
	.byte	3
	.byte	18
	.byte	8
	.byte	48
	.byte	0
	.byte	21
	.long	.Linfo_string416
	.byte	24
	.byte	1
	.byte	22
	.long	.Linfo_string11
	.long	13147
	.byte	5
	.byte	1
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string13
	.long	1425
	.byte	5
	.byte	1
	.byte	8
	.byte	8
	.byte	22
	.long	.Linfo_string15
	.long	1425
	.byte	5
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	14
	.long	13152
	.byte	23
	.long	.Linfo_string415
	.byte	64
	.byte	3
	.byte	21
	.byte	1
	.byte	22
	.long	.Linfo_string412
	.long	1364
	.byte	3
	.byte	22
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string413
	.long	1364
	.byte	3
	.byte	23
	.byte	8
	.byte	24
	.byte	22
	.long	.Linfo_string414
	.long	1800
	.byte	3
	.byte	24
	.byte	8
	.byte	48
	.byte	0
	.byte	21
	.long	.Linfo_string428
	.byte	48
	.byte	1
	.byte	22
	.long	.Linfo_string427
	.long	1800
	.byte	5
	.byte	55
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string414
	.long	1800
	.byte	5
	.byte	55
	.byte	8
	.byte	16
	.byte	22
	.long	.Linfo_string55
	.long	1432
	.byte	5
	.byte	55
	.byte	8
	.byte	32
	.byte	0
	.byte	21
	.long	.Linfo_string496
	.byte	24
	.byte	1
	.byte	22
	.long	.Linfo_string10
	.long	13282
	.byte	5
	.byte	40
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string10
	.long	1432
	.byte	5
	.byte	40
	.byte	8
	.byte	8
	.byte	0
	.byte	14
	.long	13287
	.byte	23
	.long	.Linfo_string495
	.byte	200
	.byte	8
	.byte	17
	.byte	1
	.byte	22
	.long	.Linfo_string110
	.long	7330
	.byte	8
	.byte	18
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string483
	.long	13492
	.byte	8
	.byte	19
	.byte	8
	.byte	8
	.byte	22
	.long	.Linfo_string90
	.long	1364
	.byte	8
	.byte	20
	.byte	8
	.byte	24
	.byte	22
	.long	.Linfo_string92
	.long	6967
	.byte	8
	.byte	21
	.byte	8
	.byte	48
	.byte	22
	.long	.Linfo_string96
	.long	1788
	.byte	8
	.byte	22
	.byte	1
	.byte	56
	.byte	22
	.long	.Linfo_string488
	.long	10002
	.byte	8
	.byte	24
	.byte	8
	.byte	64
	.byte	22
	.long	.Linfo_string489
	.long	10002
	.byte	8
	.byte	25
	.byte	8
	.byte	72
	.byte	22
	.long	.Linfo_string490
	.long	11569
	.byte	8
	.byte	26
	.byte	4
	.byte	80
	.byte	22
	.long	.Linfo_string491
	.long	1425
	.byte	8
	.byte	27
	.byte	8
	.byte	88
	.byte	22
	.long	.Linfo_string492
	.long	770
	.byte	8
	.byte	29
	.byte	8
	.byte	96
	.byte	22
	.long	.Linfo_string493
	.long	770
	.byte	8
	.byte	30
	.byte	8
	.byte	104
	.byte	22
	.long	.Linfo_string494
	.long	770
	.byte	8
	.byte	31
	.byte	8
	.byte	112
	.byte	22
	.long	.Linfo_string99
	.long	7057
	.byte	8
	.byte	33
	.byte	8
	.byte	120
	.byte	22
	.long	.Linfo_string410
	.long	13038
	.byte	8
	.byte	34
	.byte	8
	.byte	128
	.byte	22
	.long	.Linfo_string82
	.long	6889
	.byte	8
	.byte	35
	.byte	4
	.byte	184
	.byte	0
	.byte	23
	.long	.Linfo_string487
	.byte	16
	.byte	2
	.byte	4
	.byte	1
	.byte	22
	.long	.Linfo_string17
	.long	13528
	.byte	2
	.byte	4
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string48
	.long	1734
	.byte	2
	.byte	1
	.byte	8
	.byte	8
	.byte	0
	.byte	14
	.long	13533
	.byte	21
	.long	.Linfo_string486
	.byte	32
	.byte	1
	.byte	22
	.long	.Linfo_string18
	.long	1507
	.byte	5
	.byte	4
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string484
	.long	13593
	.byte	5
	.byte	4
	.byte	8
	.byte	8
	.byte	22
	.long	.Linfo_string263
	.long	10674
	.byte	5
	.byte	4
	.byte	8
	.byte	16
	.byte	22
	.long	.Linfo_string102
	.long	7212
	.byte	5
	.byte	4
	.byte	8
	.byte	24
	.byte	0
	.byte	14
	.long	13598
	.byte	24
	.long	13609
	.byte	25
	.long	1734
	.byte	0
	.byte	21
	.long	.Linfo_string485
	.byte	32
	.byte	1
	.byte	22
	.long	.Linfo_string10
	.long	10508
	.byte	5
	.byte	4
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string10
	.long	1432
	.byte	5
	.byte	4
	.byte	8
	.byte	16
	.byte	0
	.byte	14
	.long	13648
	.byte	3
	.long	.Linfo_string522
	.byte	7
	.byte	1
	.byte	14
	.long	13660
	.byte	23
	.long	.Linfo_string527
	.byte	56
	.byte	10
	.byte	10
	.byte	1
	.byte	22
	.long	.Linfo_string143
	.long	7283
	.byte	10
	.byte	11
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string524
	.long	1364
	.byte	10
	.byte	12
	.byte	8
	.byte	24
	.byte	22
	.long	.Linfo_string525
	.long	13709
	.byte	10
	.byte	13
	.byte	1
	.byte	48
	.byte	0
	.byte	3
	.long	.Linfo_string526
	.byte	7
	.byte	1
	.byte	14
	.long	13721
	.byte	23
	.long	.Linfo_string544
	.byte	160
	.byte	2
	.byte	5
	.byte	1
	.byte	22
	.long	.Linfo_string320
	.long	11569
	.byte	2
	.byte	5
	.byte	4
	.byte	0
	.byte	22
	.long	.Linfo_string321
	.long	13822
	.byte	2
	.byte	5
	.byte	8
	.byte	8
	.byte	22
	.long	.Linfo_string532
	.long	10002
	.byte	2
	.byte	5
	.byte	8
	.byte	32
	.byte	22
	.long	.Linfo_string533
	.long	13874
	.byte	2
	.byte	5
	.byte	8
	.byte	40
	.byte	22
	.long	.Linfo_string542
	.long	13874
	.byte	2
	.byte	5
	.byte	8
	.byte	48
	.byte	22
	.long	.Linfo_string543
	.long	13972
	.byte	2
	.byte	5
	.byte	8
	.byte	56
	.byte	22
	.long	.Linfo_string55
	.long	1432
	.byte	2
	.byte	5
	.byte	8
	.byte	144
	.byte	0
	.byte	21
	.long	.Linfo_string531
	.byte	24
	.byte	1
	.byte	22
	.long	.Linfo_string11
	.long	13869
	.byte	5
	.byte	1
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string13
	.long	1425
	.byte	5
	.byte	1
	.byte	8
	.byte	8
	.byte	22
	.long	.Linfo_string15
	.long	1425
	.byte	5
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	14
	.long	11458
	.byte	14
	.long	13879
	.byte	23
	.long	.Linfo_string541
	.byte	56
	.byte	2
	.byte	5
	.byte	1
	.byte	22
	.long	.Linfo_string534
	.long	1734
	.byte	2
	.byte	5
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string535
	.long	13967
	.byte	2
	.byte	5
	.byte	8
	.byte	8
	.byte	22
	.long	.Linfo_string538
	.long	1788
	.byte	2
	.byte	5
	.byte	1
	.byte	16
	.byte	22
	.long	.Linfo_string539
	.long	1425
	.byte	2
	.byte	5
	.byte	8
	.byte	24
	.byte	22
	.long	.Linfo_string395
	.long	14008
	.byte	2
	.byte	5
	.byte	1
	.byte	32
	.byte	22
	.long	.Linfo_string540
	.long	1734
	.byte	2
	.byte	5
	.byte	8
	.byte	48
	.byte	0
	.byte	14
	.long	13972
	.byte	23
	.long	.Linfo_string537
	.byte	88
	.byte	2
	.byte	5
	.byte	1
	.byte	22
	.long	.Linfo_string381
	.long	7283
	.byte	2
	.byte	5
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string536
	.long	13018
	.byte	2
	.byte	5
	.byte	1
	.byte	24
	.byte	0
	.byte	34
	.long	1418
	.byte	35
	.long	6960
	.byte	0
	.byte	9
	.byte	0
	.byte	14
	.long	13038
	.byte	14
	.long	14031
	.byte	23
	.long	.Linfo_string589
	.byte	8
	.byte	2
	.byte	8
	.byte	1
	.byte	22
	.long	.Linfo_string560
	.long	14054
	.byte	2
	.byte	8
	.byte	8
	.byte	0
	.byte	0
	.byte	14
	.long	14059
	.byte	23
	.long	.Linfo_string588
	.byte	80
	.byte	2
	.byte	8
	.byte	1
	.byte	22
	.long	.Linfo_string561
	.long	14134
	.byte	2
	.byte	8
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string36
	.long	1800
	.byte	2
	.byte	8
	.byte	8
	.byte	48
	.byte	22
	.long	.Linfo_string582
	.long	14433
	.byte	2
	.byte	8
	.byte	8
	.byte	64
	.byte	22
	.long	.Linfo_string586
	.long	1788
	.byte	2
	.byte	8
	.byte	1
	.byte	72
	.byte	22
	.long	.Linfo_string587
	.long	1788
	.byte	2
	.byte	8
	.byte	1
	.byte	73
	.byte	0
	.byte	23
	.long	.Linfo_string581
	.byte	48
	.byte	2
	.byte	8
	.byte	1
	.byte	22
	.long	.Linfo_string562
	.long	14261
	.byte	2
	.byte	8
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string566
	.long	1425
	.byte	2
	.byte	8
	.byte	8
	.byte	16
	.byte	22
	.long	.Linfo_string567
	.long	14310
	.byte	2
	.byte	8
	.byte	8
	.byte	24
	.byte	22
	.long	.Linfo_string570
	.long	14333
	.byte	2
	.byte	8
	.byte	8
	.byte	32
	.byte	22
	.long	.Linfo_string576
	.long	57
	.byte	2
	.byte	8
	.byte	4
	.byte	40
	.byte	22
	.long	.Linfo_string577
	.long	1788
	.byte	2
	.byte	8
	.byte	1
	.byte	44
	.byte	22
	.long	.Linfo_string578
	.long	1788
	.byte	2
	.byte	8
	.byte	1
	.byte	45
	.byte	22
	.long	.Linfo_string579
	.long	1788
	.byte	2
	.byte	8
	.byte	1
	.byte	46
	.byte	22
	.long	.Linfo_string580
	.long	1788
	.byte	2
	.byte	8
	.byte	1
	.byte	47
	.byte	0
	.byte	23
	.long	.Linfo_string565
	.byte	16
	.byte	2
	.byte	8
	.byte	1
	.byte	22
	.long	.Linfo_string315
	.long	7878
	.byte	2
	.byte	8
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string563
	.long	57
	.byte	2
	.byte	8
	.byte	4
	.byte	8
	.byte	22
	.long	.Linfo_string564
	.long	57
	.byte	2
	.byte	8
	.byte	4
	.byte	12
	.byte	0
	.byte	23
	.long	.Linfo_string569
	.byte	8
	.byte	2
	.byte	8
	.byte	1
	.byte	22
	.long	.Linfo_string568
	.long	1678
	.byte	2
	.byte	8
	.byte	8
	.byte	0
	.byte	0
	.byte	14
	.long	14338
	.byte	21
	.long	.Linfo_string575
	.byte	24
	.byte	1
	.byte	22
	.long	.Linfo_string11
	.long	14385
	.byte	5
	.byte	1
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string13
	.long	1425
	.byte	5
	.byte	1
	.byte	8
	.byte	8
	.byte	22
	.long	.Linfo_string15
	.long	1425
	.byte	5
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	14
	.long	14390
	.byte	23
	.long	.Linfo_string574
	.byte	16
	.byte	2
	.byte	8
	.byte	1
	.byte	22
	.long	.Linfo_string571
	.long	1413
	.byte	2
	.byte	8
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string572
	.long	14426
	.byte	2
	.byte	8
	.byte	8
	.byte	8
	.byte	0
	.byte	3
	.long	.Linfo_string573
	.byte	7
	.byte	8
	.byte	14
	.long	14438
	.byte	23
	.long	.Linfo_string585
	.byte	32
	.byte	2
	.byte	8
	.byte	1
	.byte	22
	.long	.Linfo_string395
	.long	7283
	.byte	2
	.byte	8
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string583
	.long	14474
	.byte	2
	.byte	8
	.byte	8
	.byte	24
	.byte	0
	.byte	14
	.long	14479
	.byte	15
	.long	.Linfo_string584
	.byte	0
	.byte	2
	.byte	8
	.byte	1
	.byte	14
	.long	12956
	.byte	14
	.long	14498
	.byte	23
	.long	.Linfo_string601
	.byte	128
	.byte	6
	.byte	4
	.byte	1
	.byte	22
	.long	.Linfo_string547
	.long	7716
	.byte	6
	.byte	4
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string592
	.long	14651
	.byte	6
	.byte	4
	.byte	8
	.byte	16
	.byte	22
	.long	.Linfo_string596
	.long	1425
	.byte	6
	.byte	4
	.byte	8
	.byte	24
	.byte	22
	.long	.Linfo_string594
	.long	7283
	.byte	6
	.byte	4
	.byte	8
	.byte	32
	.byte	22
	.long	.Linfo_string395
	.long	7283
	.byte	6
	.byte	4
	.byte	8
	.byte	56
	.byte	22
	.long	.Linfo_string597
	.long	1425
	.byte	6
	.byte	4
	.byte	8
	.byte	80
	.byte	22
	.long	.Linfo_string598
	.long	1425
	.byte	6
	.byte	4
	.byte	8
	.byte	88
	.byte	22
	.long	.Linfo_string55
	.long	1432
	.byte	6
	.byte	4
	.byte	8
	.byte	96
	.byte	22
	.long	.Linfo_string599
	.long	1425
	.byte	6
	.byte	4
	.byte	8
	.byte	112
	.byte	22
	.long	.Linfo_string600
	.long	1788
	.byte	6
	.byte	4
	.byte	1
	.byte	120
	.byte	22
	.long	.Linfo_string318
	.long	1788
	.byte	6
	.byte	4
	.byte	1
	.byte	121
	.byte	0
	.byte	14
	.long	14656
	.byte	23
	.long	.Linfo_string28
	.byte	8
	.byte	6
	.byte	4
	.byte	1
	.byte	22
	.long	.Linfo_string27
	.long	14679
	.byte	6
	.byte	4
	.byte	8
	.byte	0
	.byte	0
	.byte	14
	.long	14684
	.byte	24
	.long	14700
	.byte	25
	.long	7283
	.byte	25
	.long	1788
	.byte	0
	.byte	21
	.long	.Linfo_string595
	.byte	48
	.byte	1
	.byte	22
	.long	.Linfo_string593
	.long	1425
	.byte	5
	.byte	4
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string594
	.long	7283
	.byte	5
	.byte	4
	.byte	8
	.byte	8
	.byte	22
	.long	.Linfo_string55
	.long	1432
	.byte	5
	.byte	4
	.byte	8
	.byte	32
	.byte	0
	.byte	14
	.long	14752
	.byte	21
	.long	.Linfo_string610
	.byte	8
	.byte	1
	.byte	22
	.long	.Linfo_string609
	.long	6626
	.byte	5
	.byte	156
	.byte	8
	.byte	0
	.byte	0
	.byte	14
	.long	14778
	.byte	21
	.long	.Linfo_string614
	.byte	32
	.byte	1
	.byte	22
	.long	.Linfo_string609
	.long	7057
	.byte	5
	.byte	158
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string611
	.long	770
	.byte	5
	.byte	158
	.byte	8
	.byte	8
	.byte	22
	.long	.Linfo_string612
	.long	14838
	.byte	5
	.byte	158
	.byte	8
	.byte	16
	.byte	22
	.long	.Linfo_string613
	.long	14843
	.byte	5
	.byte	158
	.byte	8
	.byte	24
	.byte	0
	.byte	14
	.long	6889
	.byte	14
	.long	1788
	.byte	14
	.long	14853
	.byte	21
	.long	.Linfo_string615
	.byte	8
	.byte	1
	.byte	22
	.long	.Linfo_string609
	.long	14838
	.byte	5
	.byte	164
	.byte	8
	.byte	0
	.byte	0
	.byte	14
	.long	14879
	.byte	21
	.long	.Linfo_string618
	.byte	8
	.byte	1
	.byte	39
	.long	.Linfo_string609
	.long	14901
	.byte	5
	.short	260
	.byte	8
	.byte	0
	.byte	0
	.byte	14
	.long	11569
	.byte	14
	.long	14911
	.byte	33
	.long	.Linfo_string712
	.short	328
	.byte	4
	.byte	8
	.byte	1
	.byte	22
	.long	.Linfo_string212
	.long	1800
	.byte	4
	.byte	8
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string623
	.long	9304
	.byte	4
	.byte	8
	.byte	8
	.byte	16
	.byte	22
	.long	.Linfo_string624
	.long	9304
	.byte	4
	.byte	8
	.byte	8
	.byte	40
	.byte	22
	.long	.Linfo_string625
	.long	1800
	.byte	4
	.byte	8
	.byte	8
	.byte	64
	.byte	22
	.long	.Linfo_string626
	.long	7716
	.byte	4
	.byte	8
	.byte	8
	.byte	80
	.byte	22
	.long	.Linfo_string627
	.long	11458
	.byte	4
	.byte	8
	.byte	8
	.byte	96
	.byte	22
	.long	.Linfo_string628
	.long	11458
	.byte	4
	.byte	8
	.byte	8
	.byte	112
	.byte	22
	.long	.Linfo_string629
	.long	15186
	.byte	4
	.byte	8
	.byte	8
	.byte	128
	.byte	22
	.long	.Linfo_string631
	.long	15238
	.byte	4
	.byte	8
	.byte	8
	.byte	152
	.byte	22
	.long	.Linfo_string660
	.long	15753
	.byte	4
	.byte	8
	.byte	8
	.byte	160
	.byte	22
	.long	.Linfo_string665
	.long	15820
	.byte	4
	.byte	8
	.byte	8
	.byte	168
	.byte	22
	.long	.Linfo_string692
	.long	16154
	.byte	4
	.byte	8
	.byte	8
	.byte	176
	.byte	22
	.long	.Linfo_string700
	.long	1432
	.byte	4
	.byte	8
	.byte	8
	.byte	192
	.byte	22
	.long	.Linfo_string701
	.long	1788
	.byte	4
	.byte	8
	.byte	1
	.byte	208
	.byte	22
	.long	.Linfo_string702
	.long	15186
	.byte	4
	.byte	8
	.byte	8
	.byte	216
	.byte	22
	.long	.Linfo_string703
	.long	16355
	.byte	4
	.byte	8
	.byte	8
	.byte	240
	.byte	37
	.long	.Linfo_string707
	.long	16355
	.byte	4
	.byte	8
	.byte	8
	.short	264
	.byte	37
	.long	.Linfo_string708
	.long	16482
	.byte	4
	.byte	8
	.byte	8
	.short	288
	.byte	37
	.long	.Linfo_string710
	.long	770
	.byte	4
	.byte	8
	.byte	8
	.short	312
	.byte	37
	.long	.Linfo_string711
	.long	770
	.byte	4
	.byte	8
	.byte	8
	.short	320
	.byte	0
	.byte	21
	.long	.Linfo_string630
	.byte	24
	.byte	1
	.byte	22
	.long	.Linfo_string11
	.long	15233
	.byte	5
	.byte	1
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string13
	.long	1425
	.byte	5
	.byte	1
	.byte	8
	.byte	8
	.byte	22
	.long	.Linfo_string15
	.long	1425
	.byte	5
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	14
	.long	14026
	.byte	14
	.long	15243
	.byte	23
	.long	.Linfo_string631
	.byte	160
	.byte	6
	.byte	9
	.byte	1
	.byte	22
	.long	.Linfo_string632
	.long	1800
	.byte	6
	.byte	9
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string633
	.long	15474
	.byte	6
	.byte	9
	.byte	8
	.byte	16
	.byte	22
	.long	.Linfo_string639
	.long	1788
	.byte	6
	.byte	9
	.byte	1
	.byte	24
	.byte	22
	.long	.Linfo_string640
	.long	1788
	.byte	6
	.byte	9
	.byte	1
	.byte	25
	.byte	22
	.long	.Linfo_string641
	.long	1788
	.byte	6
	.byte	9
	.byte	1
	.byte	26
	.byte	22
	.long	.Linfo_string642
	.long	1788
	.byte	6
	.byte	9
	.byte	1
	.byte	27
	.byte	22
	.long	.Linfo_string643
	.long	1788
	.byte	6
	.byte	9
	.byte	1
	.byte	28
	.byte	22
	.long	.Linfo_string644
	.long	1425
	.byte	6
	.byte	9
	.byte	8
	.byte	32
	.byte	22
	.long	.Linfo_string645
	.long	1788
	.byte	6
	.byte	9
	.byte	1
	.byte	40
	.byte	22
	.long	.Linfo_string646
	.long	1425
	.byte	6
	.byte	9
	.byte	8
	.byte	48
	.byte	22
	.long	.Linfo_string647
	.long	15593
	.byte	6
	.byte	9
	.byte	8
	.byte	56
	.byte	22
	.long	.Linfo_string649
	.long	1678
	.byte	6
	.byte	9
	.byte	8
	.byte	64
	.byte	22
	.long	.Linfo_string650
	.long	1678
	.byte	6
	.byte	9
	.byte	8
	.byte	72
	.byte	22
	.long	.Linfo_string651
	.long	15600
	.byte	6
	.byte	9
	.byte	8
	.byte	80
	.byte	22
	.long	.Linfo_string656
	.long	15600
	.byte	6
	.byte	9
	.byte	8
	.byte	104
	.byte	22
	.long	.Linfo_string657
	.long	1788
	.byte	6
	.byte	9
	.byte	1
	.byte	128
	.byte	22
	.long	.Linfo_string658
	.long	15701
	.byte	6
	.byte	9
	.byte	8
	.byte	136
	.byte	0
	.byte	14
	.long	15479
	.byte	23
	.long	.Linfo_string633
	.byte	40
	.byte	6
	.byte	9
	.byte	1
	.byte	22
	.long	.Linfo_string634
	.long	57
	.byte	6
	.byte	9
	.byte	4
	.byte	0
	.byte	22
	.long	.Linfo_string635
	.long	57
	.byte	6
	.byte	9
	.byte	4
	.byte	4
	.byte	22
	.long	.Linfo_string636
	.long	15541
	.byte	6
	.byte	9
	.byte	8
	.byte	8
	.byte	22
	.long	.Linfo_string638
	.long	1788
	.byte	6
	.byte	9
	.byte	1
	.byte	32
	.byte	0
	.byte	21
	.long	.Linfo_string637
	.byte	24
	.byte	1
	.byte	22
	.long	.Linfo_string11
	.long	15588
	.byte	5
	.byte	1
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string13
	.long	1425
	.byte	5
	.byte	1
	.byte	8
	.byte	8
	.byte	22
	.long	.Linfo_string15
	.long	1425
	.byte	5
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	14
	.long	57
	.byte	3
	.long	.Linfo_string648
	.byte	5
	.byte	8
	.byte	21
	.long	.Linfo_string655
	.byte	24
	.byte	1
	.byte	22
	.long	.Linfo_string11
	.long	15647
	.byte	5
	.byte	1
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string13
	.long	1425
	.byte	5
	.byte	1
	.byte	8
	.byte	8
	.byte	22
	.long	.Linfo_string15
	.long	1425
	.byte	5
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	14
	.long	15652
	.byte	23
	.long	.Linfo_string654
	.byte	24
	.byte	6
	.byte	9
	.byte	1
	.byte	22
	.long	.Linfo_string652
	.long	1425
	.byte	6
	.byte	9
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string653
	.long	1425
	.byte	6
	.byte	9
	.byte	8
	.byte	8
	.byte	22
	.long	.Linfo_string376
	.long	1425
	.byte	6
	.byte	9
	.byte	8
	.byte	16
	.byte	0
	.byte	21
	.long	.Linfo_string659
	.byte	24
	.byte	1
	.byte	22
	.long	.Linfo_string11
	.long	15748
	.byte	5
	.byte	1
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string13
	.long	1425
	.byte	5
	.byte	1
	.byte	8
	.byte	8
	.byte	22
	.long	.Linfo_string15
	.long	1425
	.byte	5
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	14
	.long	1678
	.byte	14
	.long	15758
	.byte	23
	.long	.Linfo_string660
	.byte	48
	.byte	6
	.byte	9
	.byte	1
	.byte	22
	.long	.Linfo_string661
	.long	1425
	.byte	6
	.byte	9
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string662
	.long	1678
	.byte	6
	.byte	9
	.byte	8
	.byte	8
	.byte	22
	.long	.Linfo_string663
	.long	57
	.byte	6
	.byte	9
	.byte	4
	.byte	16
	.byte	22
	.long	.Linfo_string664
	.long	11612
	.byte	6
	.byte	9
	.byte	4
	.byte	20
	.byte	0
	.byte	14
	.long	15825
	.byte	23
	.long	.Linfo_string665
	.byte	24
	.byte	6
	.byte	9
	.byte	1
	.byte	22
	.long	.Linfo_string666
	.long	1425
	.byte	6
	.byte	9
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string667
	.long	15874
	.byte	6
	.byte	9
	.byte	4
	.byte	8
	.byte	22
	.long	.Linfo_string669
	.long	15881
	.byte	6
	.byte	9
	.byte	8
	.byte	16
	.byte	0
	.byte	3
	.long	.Linfo_string668
	.byte	7
	.byte	4
	.byte	14
	.long	15886
	.byte	23
	.long	.Linfo_string691
	.byte	144
	.byte	6
	.byte	9
	.byte	1
	.byte	22
	.long	.Linfo_string670
	.long	16104
	.byte	6
	.byte	9
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string676
	.long	16104
	.byte	6
	.byte	9
	.byte	8
	.byte	16
	.byte	22
	.long	.Linfo_string677
	.long	7885
	.byte	6
	.byte	9
	.byte	8
	.byte	32
	.byte	22
	.long	.Linfo_string678
	.long	7885
	.byte	6
	.byte	9
	.byte	8
	.byte	40
	.byte	22
	.long	.Linfo_string679
	.long	7885
	.byte	6
	.byte	9
	.byte	8
	.byte	48
	.byte	22
	.long	.Linfo_string680
	.long	7885
	.byte	6
	.byte	9
	.byte	8
	.byte	56
	.byte	22
	.long	.Linfo_string681
	.long	7885
	.byte	6
	.byte	9
	.byte	8
	.byte	64
	.byte	22
	.long	.Linfo_string682
	.long	7885
	.byte	6
	.byte	9
	.byte	8
	.byte	72
	.byte	22
	.long	.Linfo_string683
	.long	7885
	.byte	6
	.byte	9
	.byte	8
	.byte	80
	.byte	22
	.long	.Linfo_string684
	.long	7885
	.byte	6
	.byte	9
	.byte	8
	.byte	88
	.byte	22
	.long	.Linfo_string685
	.long	7885
	.byte	6
	.byte	9
	.byte	8
	.byte	96
	.byte	22
	.long	.Linfo_string686
	.long	7885
	.byte	6
	.byte	9
	.byte	8
	.byte	104
	.byte	22
	.long	.Linfo_string687
	.long	7885
	.byte	6
	.byte	9
	.byte	8
	.byte	112
	.byte	22
	.long	.Linfo_string688
	.long	7885
	.byte	6
	.byte	9
	.byte	8
	.byte	120
	.byte	22
	.long	.Linfo_string689
	.long	7885
	.byte	6
	.byte	9
	.byte	8
	.byte	128
	.byte	22
	.long	.Linfo_string690
	.long	7885
	.byte	6
	.byte	9
	.byte	8
	.byte	136
	.byte	0
	.byte	23
	.long	.Linfo_string675
	.byte	16
	.byte	6
	.byte	9
	.byte	1
	.byte	22
	.long	.Linfo_string671
	.long	16140
	.byte	6
	.byte	9
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string673
	.long	16147
	.byte	6
	.byte	9
	.byte	8
	.byte	8
	.byte	0
	.byte	3
	.long	.Linfo_string672
	.byte	5
	.byte	8
	.byte	3
	.long	.Linfo_string674
	.byte	5
	.byte	8
	.byte	23
	.long	.Linfo_string699
	.byte	16
	.byte	2
	.byte	4
	.byte	1
	.byte	22
	.long	.Linfo_string17
	.long	16190
	.byte	2
	.byte	4
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string48
	.long	1734
	.byte	2
	.byte	1
	.byte	8
	.byte	8
	.byte	0
	.byte	14
	.long	16195
	.byte	21
	.long	.Linfo_string698
	.byte	40
	.byte	1
	.byte	22
	.long	.Linfo_string18
	.long	1507
	.byte	5
	.byte	4
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string693
	.long	16268
	.byte	5
	.byte	4
	.byte	8
	.byte	8
	.byte	22
	.long	.Linfo_string696
	.long	16318
	.byte	5
	.byte	4
	.byte	8
	.byte	16
	.byte	22
	.long	.Linfo_string697
	.long	7212
	.byte	5
	.byte	4
	.byte	8
	.byte	24
	.byte	22
	.long	.Linfo_string172
	.long	16334
	.byte	5
	.byte	4
	.byte	8
	.byte	32
	.byte	0
	.byte	14
	.long	16273
	.byte	24
	.long	16284
	.byte	25
	.long	1734
	.byte	0
	.byte	21
	.long	.Linfo_string695
	.byte	32
	.byte	1
	.byte	22
	.long	.Linfo_string694
	.long	7829
	.byte	5
	.byte	4
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string301
	.long	1788
	.byte	5
	.byte	4
	.byte	1
	.byte	24
	.byte	0
	.byte	14
	.long	16323
	.byte	24
	.long	770
	.byte	25
	.long	1734
	.byte	0
	.byte	14
	.long	16339
	.byte	24
	.long	8379
	.byte	25
	.long	1734
	.byte	25
	.long	8379
	.byte	0
	.byte	21
	.long	.Linfo_string706
	.byte	24
	.byte	1
	.byte	22
	.long	.Linfo_string11
	.long	16402
	.byte	5
	.byte	1
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string13
	.long	1425
	.byte	5
	.byte	1
	.byte	8
	.byte	8
	.byte	22
	.long	.Linfo_string15
	.long	1425
	.byte	5
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	14
	.long	16407
	.byte	23
	.long	.Linfo_string705
	.byte	16
	.byte	2
	.byte	4
	.byte	1
	.byte	22
	.long	.Linfo_string17
	.long	16443
	.byte	2
	.byte	4
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string48
	.long	1734
	.byte	2
	.byte	1
	.byte	8
	.byte	8
	.byte	0
	.byte	14
	.long	16448
	.byte	21
	.long	.Linfo_string704
	.byte	16
	.byte	1
	.byte	22
	.long	.Linfo_string18
	.long	1507
	.byte	5
	.byte	4
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string102
	.long	7212
	.byte	5
	.byte	4
	.byte	8
	.byte	8
	.byte	0
	.byte	21
	.long	.Linfo_string709
	.byte	24
	.byte	1
	.byte	22
	.long	.Linfo_string11
	.long	16529
	.byte	5
	.byte	1
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string13
	.long	1425
	.byte	5
	.byte	1
	.byte	8
	.byte	8
	.byte	22
	.long	.Linfo_string15
	.long	1425
	.byte	5
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	14
	.long	16534
	.byte	14
	.long	16539
	.byte	23
	.long	.Linfo_string28
	.byte	8
	.byte	2
	.byte	4
	.byte	1
	.byte	22
	.long	.Linfo_string27
	.long	16562
	.byte	2
	.byte	4
	.byte	8
	.byte	0
	.byte	0
	.byte	14
	.long	16567
	.byte	38
	.long	1432
	.byte	14
	.long	16577
	.byte	21
	.long	.Linfo_string714
	.byte	8
	.byte	1
	.byte	22
	.long	.Linfo_string609
	.long	14026
	.byte	5
	.byte	61
	.byte	8
	.byte	0
	.byte	0
	.byte	14
	.long	16603
	.byte	23
	.long	.Linfo_string723
	.byte	80
	.byte	7
	.byte	11
	.byte	1
	.byte	22
	.long	.Linfo_string335
	.long	10508
	.byte	7
	.byte	12
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string718
	.long	1425
	.byte	7
	.byte	13
	.byte	8
	.byte	16
	.byte	22
	.long	.Linfo_string719
	.long	770
	.byte	7
	.byte	15
	.byte	8
	.byte	24
	.byte	22
	.long	.Linfo_string720
	.long	13282
	.byte	7
	.byte	17
	.byte	8
	.byte	32
	.byte	22
	.long	.Linfo_string721
	.long	1788
	.byte	7
	.byte	18
	.byte	1
	.byte	40
	.byte	22
	.long	.Linfo_string722
	.long	2033
	.byte	7
	.byte	19
	.byte	8
	.byte	48
	.byte	22
	.long	.Linfo_string408
	.long	1788
	.byte	7
	.byte	21
	.byte	1
	.byte	72
	.byte	0
	.byte	14
	.long	16709
	.byte	23
	.long	.Linfo_string736
	.byte	8
	.byte	2
	.byte	8
	.byte	1
	.byte	22
	.long	.Linfo_string728
	.long	16732
	.byte	2
	.byte	8
	.byte	8
	.byte	0
	.byte	0
	.byte	14
	.long	16737
	.byte	23
	.long	.Linfo_string735
	.byte	120
	.byte	2
	.byte	8
	.byte	1
	.byte	22
	.long	.Linfo_string561
	.long	14134
	.byte	2
	.byte	8
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string729
	.long	1425
	.byte	2
	.byte	8
	.byte	8
	.byte	48
	.byte	22
	.long	.Linfo_string730
	.long	1425
	.byte	2
	.byte	8
	.byte	8
	.byte	56
	.byte	22
	.long	.Linfo_string731
	.long	1788
	.byte	2
	.byte	8
	.byte	1
	.byte	64
	.byte	22
	.long	.Linfo_string732
	.long	1800
	.byte	2
	.byte	8
	.byte	8
	.byte	72
	.byte	22
	.long	.Linfo_string733
	.long	10690
	.byte	2
	.byte	8
	.byte	8
	.byte	88
	.byte	22
	.long	.Linfo_string734
	.long	10690
	.byte	2
	.byte	8
	.byte	8
	.byte	104
	.byte	0
	.byte	14
	.long	16843
	.byte	23
	.long	.Linfo_string738
	.byte	16
	.byte	10
	.byte	16
	.byte	1
	.byte	22
	.long	.Linfo_string529
	.long	13655
	.byte	10
	.byte	17
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string737
	.long	1425
	.byte	10
	.byte	18
	.byte	8
	.byte	8
	.byte	0
	.byte	14
	.long	16884
	.byte	23
	.long	.Linfo_string754
	.byte	128
	.byte	2
	.byte	5
	.byte	1
	.byte	22
	.long	.Linfo_string320
	.long	11569
	.byte	2
	.byte	5
	.byte	4
	.byte	0
	.byte	22
	.long	.Linfo_string547
	.long	7716
	.byte	2
	.byte	5
	.byte	8
	.byte	8
	.byte	22
	.long	.Linfo_string395
	.long	17011
	.byte	2
	.byte	5
	.byte	8
	.byte	24
	.byte	22
	.long	.Linfo_string748
	.long	10002
	.byte	2
	.byte	5
	.byte	8
	.byte	56
	.byte	22
	.long	.Linfo_string749
	.long	10002
	.byte	2
	.byte	5
	.byte	8
	.byte	64
	.byte	22
	.long	.Linfo_string750
	.long	10002
	.byte	2
	.byte	5
	.byte	8
	.byte	72
	.byte	22
	.long	.Linfo_string542
	.long	17047
	.byte	2
	.byte	5
	.byte	8
	.byte	80
	.byte	22
	.long	.Linfo_string753
	.long	7283
	.byte	2
	.byte	5
	.byte	8
	.byte	88
	.byte	22
	.long	.Linfo_string55
	.long	1432
	.byte	2
	.byte	5
	.byte	8
	.byte	112
	.byte	0
	.byte	23
	.long	.Linfo_string747
	.byte	32
	.byte	2
	.byte	5
	.byte	1
	.byte	22
	.long	.Linfo_string381
	.long	7283
	.byte	2
	.byte	5
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string121
	.long	1425
	.byte	2
	.byte	5
	.byte	8
	.byte	24
	.byte	0
	.byte	14
	.long	17052
	.byte	23
	.long	.Linfo_string752
	.byte	32
	.byte	2
	.byte	5
	.byte	1
	.byte	22
	.long	.Linfo_string751
	.long	1734
	.byte	2
	.byte	5
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string535
	.long	17114
	.byte	2
	.byte	5
	.byte	8
	.byte	8
	.byte	22
	.long	.Linfo_string539
	.long	1425
	.byte	2
	.byte	5
	.byte	8
	.byte	16
	.byte	22
	.long	.Linfo_string540
	.long	1734
	.byte	2
	.byte	5
	.byte	8
	.byte	24
	.byte	0
	.byte	14
	.long	17011
	.byte	14
	.long	17124
	.byte	21
	.long	.Linfo_string756
	.byte	24
	.byte	1
	.byte	22
	.long	.Linfo_string609
	.long	16598
	.byte	5
	.byte	29
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string611
	.long	14843
	.byte	5
	.byte	29
	.byte	8
	.byte	8
	.byte	22
	.long	.Linfo_string612
	.long	770
	.byte	5
	.byte	29
	.byte	8
	.byte	16
	.byte	0
	.byte	14
	.long	17176
	.byte	21
	.long	.Linfo_string757
	.byte	16
	.byte	1
	.byte	22
	.long	.Linfo_string609
	.long	16598
	.byte	5
	.byte	30
	.byte	8
	.byte	0
	.byte	22
	.long	.Linfo_string611
	.long	14843
	.byte	5
	.byte	30
	.byte	8
	.byte	8
	.byte	0
	.byte	14
	.long	17215
	.byte	21
	.long	.Linfo_string760
	.byte	8
	.byte	1
	.byte	22
	.long	.Linfo_string609
	.long	13282
	.byte	5
	.byte	89
	.byte	8
	.byte	0
	.byte	0
	.byte	0
	.section	.debug_ranges,"",@progbits
.Ldebug_ranges0:
	.quad	.Ltmp169
	.quad	.Ltmp170
	.quad	.Ltmp171
	.quad	.Ltmp173
	.quad	0
	.quad	0
.Ldebug_ranges1:
	.quad	.Ltmp292
	.quad	.Ltmp302
	.quad	.Ltmp307
	.quad	.Ltmp309
	.quad	0
	.quad	0
.Ldebug_ranges2:
	.quad	.Ltmp287
	.quad	.Ltmp306
	.quad	.Ltmp307
	.quad	.Ltmp309
	.quad	.Ltmp310
	.quad	.Ltmp317
	.quad	0
	.quad	0
.Ldebug_ranges3:
	.quad	.Ltmp417
	.quad	.Ltmp424
	.quad	.Ltmp429
	.quad	.Ltmp435
	.quad	0
	.quad	0
.Ldebug_ranges4:
	.quad	.Ltmp528
	.quad	.Ltmp533
	.quad	.Ltmp535
	.quad	.Ltmp542
	.quad	.Ltmp564
	.quad	.Ltmp570
	.quad	0
	.quad	0
.Ldebug_ranges5:
	.quad	.Ltmp528
	.quad	.Ltmp533
	.quad	.Ltmp535
	.quad	.Ltmp542
	.quad	.Ltmp564
	.quad	.Ltmp570
	.quad	0
	.quad	0
.Ldebug_ranges6:
	.quad	.Ltmp1234
	.quad	.Ltmp1241
	.quad	.Ltmp1248
	.quad	.Ltmp1261
	.quad	.Ltmp1267
	.quad	.Ltmp1270
	.quad	.Ltmp1279
	.quad	.Ltmp1281
	.quad	0
	.quad	0
.Ldebug_ranges7:
	.quad	.Ltmp1241
	.quad	.Ltmp1247
	.quad	.Ltmp1270
	.quad	.Ltmp1273
	.quad	0
	.quad	0
.Ldebug_ranges8:
	.quad	.Ltmp1228
	.quad	.Ltmp1247
	.quad	.Ltmp1248
	.quad	.Ltmp1261
	.quad	.Ltmp1262
	.quad	.Ltmp1281
	.quad	0
	.quad	0
.Ldebug_ranges9:
	.quad	.Lfunc_begin0
	.quad	.Lfunc_end0
	.quad	.Lfunc_begin1
	.quad	.Lfunc_end1
	.quad	.Lfunc_begin2
	.quad	.Lfunc_end2
	.quad	.Lfunc_begin3
	.quad	.Lfunc_end3
	.quad	.Lfunc_begin4
	.quad	.Lfunc_end4
	.quad	.Lfunc_begin5
	.quad	.Lfunc_end5
	.quad	.Lfunc_begin6
	.quad	.Lfunc_end6
	.quad	.Lfunc_begin7
	.quad	.Lfunc_end7
	.quad	.Lfunc_begin8
	.quad	.Lfunc_end8
	.quad	.Lfunc_begin9
	.quad	.Lfunc_end9
	.quad	.Lfunc_begin10
	.quad	.Lfunc_end10
	.quad	.Lfunc_begin11
	.quad	.Lfunc_end11
	.quad	.Lfunc_begin12
	.quad	.Lfunc_end12
	.quad	.Lfunc_begin13
	.quad	.Lfunc_end13
	.quad	.Lfunc_begin14
	.quad	.Lfunc_end14
	.quad	.Lfunc_begin15
	.quad	.Lfunc_end15
	.quad	.Lfunc_begin16
	.quad	.Lfunc_end16
	.quad	.Lfunc_begin17
	.quad	.Lfunc_end17
	.quad	.Lfunc_begin18
	.quad	.Lfunc_end18
	.quad	.Lfunc_begin19
	.quad	.Lfunc_end19
	.quad	.Lfunc_begin20
	.quad	.Lfunc_end20
	.quad	.Lfunc_begin21
	.quad	.Lfunc_end21
	.quad	.Lfunc_begin22
	.quad	.Lfunc_end22
	.quad	.Lfunc_begin23
	.quad	.Lfunc_end23
	.quad	.Lfunc_begin24
	.quad	.Lfunc_end24
	.quad	.Lfunc_begin25
	.quad	.Lfunc_end25
	.quad	.Lfunc_begin26
	.quad	.Lfunc_end26
	.quad	.Lfunc_begin27
	.quad	.Lfunc_end27
	.quad	.Lfunc_begin28
	.quad	.Lfunc_end28
	.quad	.Lfunc_begin29
	.quad	.Lfunc_end29
	.quad	.Lfunc_begin30
	.quad	.Lfunc_end30
	.quad	.Lfunc_begin31
	.quad	.Lfunc_end31
	.quad	.Lfunc_begin32
	.quad	.Lfunc_end32
	.quad	.Lfunc_begin33
	.quad	.Lfunc_end33
	.quad	.Lfunc_begin34
	.quad	.Lfunc_end34
	.quad	.Lfunc_begin35
	.quad	.Lfunc_end35
	.quad	.Lfunc_begin36
	.quad	.Lfunc_end36
	.quad	.Lfunc_begin37
	.quad	.Lfunc_end37
	.quad	.Lfunc_begin38
	.quad	.Lfunc_end38
	.quad	.Lfunc_begin39
	.quad	.Lfunc_end39
	.quad	.Lfunc_begin40
	.quad	.Lfunc_end40
	.quad	.Lfunc_begin41
	.quad	.Lfunc_end41
	.quad	.Lfunc_begin42
	.quad	.Lfunc_end42
	.quad	.Lfunc_begin43
	.quad	.Lfunc_end43
	.quad	.Lfunc_begin44
	.quad	.Lfunc_end44
	.quad	.Lfunc_begin45
	.quad	.Lfunc_end45
	.quad	.Lfunc_begin46
	.quad	.Lfunc_end46
	.quad	.Lfunc_begin47
	.quad	.Lfunc_end47
	.quad	.Lfunc_begin48
	.quad	.Lfunc_end48
	.quad	.Lfunc_begin49
	.quad	.Lfunc_end49
	.quad	.Lfunc_begin50
	.quad	.Lfunc_end50
	.quad	.Lfunc_begin51
	.quad	.Lfunc_end51
	.quad	.Lfunc_begin52
	.quad	.Lfunc_end52
	.quad	.Lfunc_begin53
	.quad	.Lfunc_end53
	.quad	.Lfunc_begin54
	.quad	.Lfunc_end54
	.quad	.Lfunc_begin55
	.quad	.Lfunc_end55
	.quad	.Lfunc_begin56
	.quad	.Lfunc_end56
	.quad	.Lfunc_begin57
	.quad	.Lfunc_end57
	.quad	.Lfunc_begin58
	.quad	.Lfunc_end58
	.quad	.Lfunc_begin59
	.quad	.Lfunc_end59
	.quad	.Lfunc_begin60
	.quad	.Lfunc_end60
	.quad	0
	.quad	0
	.section	.debug_macinfo,"",@progbits
	.byte	0
	.section	.debug_pubnames,"",@progbits
	.long	.LpubNames_end0-.LpubNames_begin0
.LpubNames_begin0:
	.short	2
	.long	.Lcu_begin0
	.long	17237
	.long	3983
	.asciz	"subnet.Init..1command_line_arguments.Server"
	.long	5392
	.asciz	"subnet.NewServer"
	.long	4103
	.asciz	"subnet.acceptRoutine..1command_line_arguments.Server"
	.long	4221
	.asciz	"subnet.dispatchRoutine..1command_line_arguments.Server"
	.long	42
	.asciz	"runtime.writeBarrier"
	.long	938
	.asciz	"subnet.sendLocalAddr..1command_line_arguments.Client"
	.long	365
	.asciz	"subnet.init..1command_line_arguments.Client"
	.long	6220
	.asciz	"subnet.devWriteRoutine"
	.long	3778
	.asciz	"subnet.GetNetGateway..func1"
	.long	6563
	.asciz	"subnet.command_line_arguments..import"
	.long	1137
	.asciz	"subnet.Close..1command_line_arguments.Reverser"
	.long	3476
	.asciz	"subnet.commandExec"
	.long	260
	.asciz	"subnet.connectionProblem..1command_line_arguments.Client"
	.long	4355
	.asciz	"subnet.handleClient..1command_line_arguments.Server"
	.long	4845
	.asciz	"subnet.queueIP..1command_line_arguments.serverConn"
	.long	1271
	.asciz	"subnet.hostToIP"
	.long	4710
	.asciz	"subnet.setAddrForClient..1command_line_arguments.Server"
	.long	6022
	.asciz	"subnet.devReadRoutine"
	.long	5646
	.asciz	"subnet.command_line_arguments..thunk10"
	.long	5687
	.asciz	"subnet.command_line_arguments..thunk11"
	.long	5728
	.asciz	"subnet.command_line_arguments..thunk12"
	.long	5769
	.asciz	"subnet.command_line_arguments..thunk13"
	.long	5117
	.asciz	"subnet.remoteAddressStr..1command_line_arguments.serverConn"
	.long	5810
	.asciz	"subnet.command_line_arguments..thunk14"
	.long	5863
	.asciz	"subnet.command_line_arguments..thunk15"
	.long	5916
	.asciz	"subnet.command_line_arguments..thunk16"
	.long	157
	.asciz	"subnet.Run..1command_line_arguments.Client"
	.long	64
	.asciz	"subnet.Close..1command_line_arguments.Client"
	.long	784
	.asciz	"subnet.netSendRoutine..1command_line_arguments.Client"
	.long	5177
	.asciz	"subnet.writeRoutine..1command_line_arguments.serverConn"
	.long	4785
	.asciz	"subnet.initClient..1command_line_arguments.serverConn"
	.long	5969
	.asciz	"subnet.command_line_arguments..thunk17"
	.long	6167
	.asciz	"subnet.command_line_arguments..thunk18"
	.long	6365
	.asciz	"subnet.command_line_arguments..thunk19"
	.long	622
	.asciz	"subnet.netRecvRoutine..1command_line_arguments.Client"
	.long	1211
	.asciz	"subnet.ResetGatewayOSX..1command_line_arguments.Reverser"
	.long	3834
	.asciz	"subnet.hadError..1command_line_arguments.serverConn"
	.long	739
	.asciz	"subnet.dropSendBuffer"
	.long	2542
	.asciz	"subnet.GetNetGateway"
	.long	4562
	.asciz	"subnet.route..1command_line_arguments.Server"
	.long	4905
	.asciz	"subnet.readRoutine..1command_line_arguments.serverConn"
	.long	3046
	.asciz	"subnet.SetInterfaceStatus"
	.long	4058
	.asciz	"subnet.Run..1command_line_arguments.Server"
	.long	2942
	.asciz	"subnet.SetDefaultGateway"
	.long	2423
	.asciz	"subnet.SetDevIP"
	.long	3606
	.asciz	"subnet.DelRoute"
	.long	3894
	.asciz	"subnet.Close..1command_line_arguments.Server"
	.long	4295
	.asciz	"subnet.enrollClientConn..1command_line_arguments.Server"
	.long	4444
	.asciz	"subnet.removeClientConn..1command_line_arguments.Server"
	.long	2085
	.asciz	"subnet.NewClient"
	.long	6491
	.asciz	"subnet.struct.4Size.0uint32.2Mallocs.0uint64.2Frees.0uint64.5..eq"
	.long	1047
	.asciz	"subnet.AddRouteEntry..1command_line_arguments.Reverser"
	.long	3150
	.asciz	"subnet.command_line_arguments..thunk0"
	.long	3191
	.asciz	"subnet.command_line_arguments..thunk1"
	.long	3232
	.asciz	"subnet.command_line_arguments..thunk2"
	.long	3273
	.asciz	"subnet.command_line_arguments..thunk3"
	.long	3314
	.asciz	"subnet.command_line_arguments..thunk4"
	.long	3367
	.asciz	"subnet.command_line_arguments..thunk5"
	.long	3420
	.asciz	"subnet.command_line_arguments..thunk6"
	.long	2823
	.asciz	"subnet.AddRoute"
	.long	3725
	.asciz	"subnet.command_line_arguments..thunk7"
	.long	5351
	.asciz	"subnet.command_line_arguments..thunk9"
	.long	6418
	.asciz	"subnet.struct.4Size.0uint32.2Mallocs.0uint64.2Frees.0uint64.5..hash"
	.long	5310
	.asciz	"subnet.command_line_arguments..thunk8"
	.long	0
.LpubNames_end0:
	.section	.debug_pubtypes,"",@progbits
	.long	.LpubTypes_end0-.LpubTypes_begin0
.LpubTypes_begin0:
	.short	2
	.long	.Lcu_begin0
	.long	17237
	.long	13721
	.asciz	"Encoder"
	.long	16448
	.asciz	"struct{*_type,*func(*void)error}"
	.long	14479
	.asciz	"DIR"
	.long	9653
	.asciz	"struct{*ExtKeyUsage,int,int}"
	.long	11533
	.asciz	"Once"
	.long	17176
	.asciz	"struct{*.command-line-arguments.serverConn,*bool}"
	.long	17215
	.asciz	"struct{*Server}"
	.long	12420
	.asciz	"struct{*_type,*func(*void)void,*func(*void)void}"
	.long	15701
	.asciz	"struct{*uintptr,int,int}"
	.long	1788
	.asciz	"bool"
	.long	1841
	.asciz	"uncommonType"
	.long	9042
	.asciz	"PublicKeyAlgorithm"
	.long	9500
	.asciz	"struct{*Extension,int,int}"
	.long	7716
	.asciz	"Reader"
	.long	11569
	.asciz	"Mutex"
	.long	9712
	.asciz	"struct{**URL,int,int}"
	.long	11189
	.asciz	"ClientSessionCache"
	.long	13822
	.asciz	"struct{*Writer,int,int}"
	.long	13533
	.asciz	"struct{*_type,*func(*void)struct{Conn,error},*func(*void)Addr,*func(*void)error}"
	.long	14261
	.asciz	".internal/poll.fdMutex"
	.long	9552
	.asciz	"Extension"
	.long	10549
	.asciz	"struct{*_type,*func(*void)error,*func(*void)Addr,*func(*void,struct{*uint8,int,int})struct{int,error},*func(*void)Addr,*func(*void,Time)error,*func(*void,Time)error,*func(*void,Time)error,*func(*void,struct{*uint8,int,int})struct{int,error}}"
	.long	10185
	.asciz	"struct{*Certificate,error}"
	.long	13609
	.asciz	"struct{Conn,error}"
	.long	8420
	.asciz	"Certificate"
	.long	12317
	.asciz	"Cond"
	.long	10134
	.asciz	"uint16"
	.long	10501
	.asciz	"SignatureScheme"
	.long	12558
	.asciz	".sync.copyChecker"
	.long	9054
	.asciz	"Int"
	.long	13709
	.asciz	"IPProtocol"
	.long	7283
	.asciz	"struct{*uint8,int,int}"
	.long	11806
	.asciz	"Conn"
	.long	13038
	.asciz	"Reverser"
	.long	13201
	.asciz	"struct{string,string,error}"
	.long	16482
	.asciz	"struct{**__go_descriptor,int,int}"
	.long	10731
	.asciz	"struct{*_type,*func(*void)string,*func(*void)string}"
	.long	7885
	.asciz	"int64"
	.long	1890
	.asciz	"struct{*method,int,int}"
	.long	1800
	.asciz	"string"
	.long	14310
	.asciz	".internal/poll.pollDesc"
	.long	14390
	.asciz	"Iovec"
	.long	9144
	.asciz	"Word"
	.long	14059
	.asciz	".os.file"
	.long	15186
	.asciz	"struct{**File,int,int}"
	.long	11687
	.asciz	"struct{*.crypto/tls.ticketKey,int,int}"
	.long	17052
	.asciz	".encoding/gob.decoderState"
	.long	11298
	.asciz	"struct{*ClientSessionState,bool}"
	.long	8379
	.asciz	"PrivateKey"
	.long	7008
	.asciz	"IPMask"
	.long	16154
	.asciz	"Context"
	.long	16407
	.asciz	"Closer"
	.long	14134
	.asciz	"FD"
	.long	1425
	.asciz	"int"
	.long	775
	.asciz	"__go_channel"
	.long	1330
	.asciz	"struct{IP,error}"
	.long	1473
	.asciz	"struct{*_type,*func(*void)string}"
	.long	9601
	.asciz	"struct{*ObjectIdentifier,int,int}"
	.long	9705
	.asciz	"ExtKeyUsage"
	.long	14338
	.asciz	"struct{*Iovec,int,int}"
	.long	15600
	.asciz	"struct{*SysProcIDMap,int,int}"
	.long	16843
	.asciz	".command-line-arguments.inboundIPPkt"
	.long	11011
	.asciz	"struct{*struct{**Certificate,int,int},int,int}"
	.long	8200
	.asciz	"struct{*Certificate,int,int}"
	.long	10690
	.asciz	"Addr"
	.long	12772
	.asciz	"struct{*_type,*func(*void,struct{*uint8,int,int},struct{*uint8,int,int},struct{*uint8,int,int},struct{*uint8,int,int},struct{*uint8,int,int})struct{*uint8,int,int},*func(*void)int}"
	.long	16195
	.asciz	"struct{*_type,*func(*void)struct{Time,bool},*func(*void)*__go_channel,*func(*void)error,*func(*void,PrivateKey)PrivateKey}"
	.long	15758
	.asciz	"Process"
	.long	6972
	.asciz	"IPNet"
	.long	1512
	.asciz	"_type"
	.long	6889
	.asciz	"WaitGroup"
	.long	8327
	.asciz	"struct{*struct{*uint8,int,int},int,int}"
	.long	8086
	.asciz	"struct{*.time.zoneTrans,int,int}"
	.long	57
	.asciz	"uint32"
	.long	13492
	.asciz	"Listener"
	.long	11337
	.asciz	"ClientSessionState"
	.long	11120
	.asciz	"CertPool"
	.long	17124
	.asciz	"struct{*.command-line-arguments.serverConn,*bool,*__go_channel}"
	.long	15886
	.asciz	"Rusage"
	.long	11739
	.asciz	".crypto/tls.ticketKey"
	.long	16577
	.asciz	"struct{*File}"
	.long	2033
	.asciz	"struct{*IP,int,int}"
	.long	12483
	.asciz	".sync.notifyList"
	.long	13100
	.asciz	"struct{*.command-line-arguments.routeEntries,int,int}"
	.long	13648
	.asciz	"PktType"
	.long	9769
	.asciz	"URL"
	.long	14778
	.asciz	"struct{*Interface,*__go_channel,*WaitGroup,*bool}"
	.long	14911
	.asciz	"Cmd"
	.long	1678
	.asciz	"uintptr"
	.long	14700
	.asciz	"struct{int,struct{*uint8,int,int},error}"
	.long	10848
	.asciz	"CertificateRequestInfo"
	.long	9035
	.asciz	"SignatureAlgorithm"
	.long	12956
	.asciz	"Buffer"
	.long	13972
	.asciz	".encoding/gob.encBuffer"
	.long	16104
	.asciz	"Timeval"
	.long	13031
	.asciz	".bytes.readOp"
	.long	15652
	.asciz	"SysProcIDMap"
	.long	14031
	.asciz	"File"
	.long	1942
	.asciz	"method"
	.long	15825
	.asciz	"ProcessState"
	.long	8037
	.asciz	".time.zone"
	.long	12565
	.asciz	".crypto/tls.halfConn"
	.long	16147
	.asciz	"Timeval_usec_t"
	.long	12894
	.asciz	".crypto/tls.block"
	.long	7152
	.asciz	"struct{*_type,*func(*void)error,*func(*void,struct{*uint8,int,int})struct{int,error},*func(*void,struct{*uint8,int,int})struct{int,error}}"
	.long	15243
	.asciz	"SysProcAttr"
	.long	17011
	.asciz	".encoding/gob.decBuffer"
	.long	10442
	.asciz	"CurveID"
	.long	11451
	.asciz	"RenegotiationSupport"
	.long	7335
	.asciz	"Config"
	.long	16884
	.asciz	"Decoder"
	.long	14879
	.asciz	"struct{*Mutex}"
	.long	15541
	.asciz	"struct{*uint32,int,int}"
	.long	10338
	.asciz	"struct{*uint16,int,int}"
	.long	11612
	.asciz	"RWMutex"
	.long	7249
	.asciz	"struct{int,error}"
	.long	6631
	.asciz	"Client"
	.long	9950
	.asciz	"struct{**IPNet,int,int}"
	.long	9151
	.asciz	"Name"
	.long	10390
	.asciz	"struct{*CurveID,int,int}"
	.long	9901
	.asciz	"Userinfo"
	.long	9304
	.asciz	"struct{*string,int,int}"
	.long	16709
	.asciz	"TCPListener"
	.long	7111
	.asciz	"ReadWriteCloser"
	.long	8138
	.asciz	".time.zoneTrans"
	.long	16539
	.asciz	"__go_descriptor"
	.long	11169
	.asciz	"ClientAuthType"
	.long	13287
	.asciz	"Server"
	.long	10007
	.asciz	"runtime.hmap"
	.long	1364
	.asciz	"IP"
	.long	15874
	.asciz	"WaitStatus"
	.long	11230
	.asciz	"struct{*_type,*func(*void,string)struct{*ClientSessionState,bool},*func(*void,string,*ClientSessionState)void}"
	.long	15479
	.asciz	"Credential"
	.long	16140
	.asciz	"Timeval_sec_t"
	.long	11063
	.asciz	"struct{**Certificate,int,int}"
	.long	9403
	.asciz	"AttributeTypeAndValue"
	.long	14426
	.asciz	"Iovec_len_t"
	.long	14853
	.asciz	"struct{*WaitGroup}"
	.long	1432
	.asciz	"error"
	.long	7878
	.asciz	"uint64"
	.long	14498
	.asciz	"Scanner"
	.long	11605
	.asciz	"int32"
	.long	7062
	.asciz	"Interface"
	.long	763
	.asciz	"void"
	.long	13660
	.asciz	"IPPacket"
	.long	12731
	.asciz	".crypto/tls.macFunction"
	.long	1418
	.asciz	"uint8"
	.long	9351
	.asciz	"struct{*AttributeTypeAndValue,int,int}"
	.long	6592
	.asciz	"struct{*Client,error}"
	.long	10449
	.asciz	"struct{*SignatureScheme,int,int}"
	.long	9493
	.asciz	"KeyUsage"
	.long	13152
	.asciz	".command-line-arguments.routeEntries"
	.long	12379
	.asciz	"Locker"
	.long	11458
	.asciz	"Writer"
	.long	16284
	.asciz	"struct{Time,bool}"
	.long	14752
	.asciz	"struct{*Client}"
	.long	16355
	.asciz	"struct{*Closer,int,int}"
	.long	14438
	.asciz	".os.dirInfo"
	.long	9090
	.asciz	".math/big.nat"
	.long	13879
	.asciz	".encoding/gob.encoderState"
	.long	11499
	.asciz	"struct{*_type,*func(*void,struct{*uint8,int,int})struct{int,error}}"
	.long	7829
	.asciz	"Time"
	.long	6938
	.asciz	".sync.noCopy"
	.long	10928
	.asciz	"struct{*Config,error}"
	.long	13248
	.asciz	"struct{*Server,error}"
	.long	16737
	.asciz	".net.netFD"
	.long	16603
	.asciz	".command-line-arguments.serverConn"
	.long	7897
	.asciz	"Location"
	.long	9439
	.asciz	"ObjectIdentifier"
	.long	7985
	.asciz	"struct{*.time.zone,int,int}"
	.long	15593
	.asciz	"Signal"
	.long	10224
	.asciz	"ClientHelloInfo"
	.long	0
.LpubTypes_end0:

	.section	".note.GNU-split-stack","",@progbits
	.section	".note.GNU-stack","",@progbits
	.section	.debug_line,"",@progbits
.Lline_table_start0:
